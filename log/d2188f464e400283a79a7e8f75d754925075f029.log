d2188f464e400283a79a7e8f75d754925075f029
==================================================
Add @Override to test code
==================================================
Mark Emlyn
==================================================
Mon Sep 6 16:34:19 2010 +0000
==================================================
TesterPrincipal.java
Add @Override to test code

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@993087 13f79535-47bb-0310-9956-ffa450edef68



==================================================
DuplicateMappingParamFilter.java
index 8daf8cb1ea..02ebd84a47 100644
--- a/test/org/apache/catalina/ha/session/TesterPrincipal.java
+++ b/test/org/apache/catalina/ha/session/TesterPrincipal.java
@@ -30,6 +30,7 @@ public class TesterPrincipal implements Principal, Serializable {
         name = theName;
     }
     
+    @Override
     public String getName() {
         return name;
     }

==================================================
ParamFilter.java
index 09691d15a7..375cbeb7bd 100644
--- a/test/org/apache/catalina/startup/DuplicateMappingParamFilter.java
+++ b/test/org/apache/catalina/startup/DuplicateMappingParamFilter.java
@@ -38,15 +38,18 @@ import javax.servlet.annotation.WebFilter;
 public class DuplicateMappingParamFilter implements Filter {
 
     
+    @Override
     public void init(FilterConfig filterConfig) throws ServletException {
         // NO-OP
     }
 
+    @Override
     public void doFilter(ServletRequest req, ServletResponse res,
             FilterChain chain) throws ServletException, IOException {
         chain.doFilter(req, res);
     }
 
+    @Override
     public void destroy() {
         // destroy
     }

==================================================
TestTomcatSSL.java
index 54896edc7f..e9bdcd9498 100644
--- a/test/org/apache/catalina/startup/ParamFilter.java
+++ b/test/org/apache/catalina/startup/ParamFilter.java
@@ -40,10 +40,12 @@ public class ParamFilter implements Filter {
 
     private FilterConfig _filterConfig;
 
+    @Override
     public void init(FilterConfig filterConfig) throws ServletException {
         _filterConfig = filterConfig;
     }
 
+    @Override
     public void doFilter(ServletRequest req, ServletResponse res,
             FilterChain chain) throws ServletException, IOException {
         PrintWriter out = res.getWriter();
@@ -51,6 +53,7 @@ public class ParamFilter implements Filter {
         chain.doFilter(req, res);
     }
 
+    @Override
     public void destroy() {
         // destroy
     }

==================================================
EchoRpcTest.java
index b268e8b803..7d435e0877 100644
--- a/test/org/apache/catalina/startup/TestTomcatSSL.java
+++ b/test/org/apache/catalina/startup/TestTomcatSSL.java
@@ -41,13 +41,16 @@ import org.apache.tomcat.util.buf.ByteChunk;
 public class TestTomcatSSL extends TomcatBaseTest {
     static TrustManager[] trustAllCerts = new TrustManager[] { 
         new X509TrustManager() { 
+            @Override
             public X509Certificate[] getAcceptedIssuers() { 
                 return null;
             }
+            @Override
             public void checkClientTrusted(X509Certificate[] certs,
                     String authType) {
                 // NOOP - Trust everything
             }
+            @Override
             public void checkServerTrusted(X509Certificate[] certs,
                     String authType) {
                 // NOOP - Trust everything

==================================================
IntrospectionUtils.java
index 9105367e02..0e95e16930 100644
--- a/test/org/apache/catalina/tribes/demos/EchoRpcTest.java
+++ b/test/org/apache/catalina/tribes/demos/EchoRpcTest.java
@@ -67,6 +67,7 @@ public class EchoRpcTest implements RpcCallback, Runnable {
      * TODO Implement this org.apache.catalina.tribes.tipis.RpcCallback
      *   method
      */
+    @Override
     public void leftOver(Serializable msg, Member sender) {
         System.out.println("Received a left over message from ["+sender.getName()+"] with data ["+msg+"]");
     }
@@ -79,11 +80,13 @@ public class EchoRpcTest implements RpcCallback, Runnable {
      * TODO Implement this org.apache.catalina.tribes.tipis.RpcCallback
      *   method
      */
+    @Override
     public Serializable replyRequest(Serializable msg, Member sender) {
         System.out.println("Received a reply request message from ["+sender.getName()+"] with data ["+msg+"]");
         return "Reply("+name+"):"+msg;
     }
     
+    @Override
     public void run() {
         long counter = 0;
         while (counter<count) {

==================================================
LoadTest.java
index 78e0244886..6c9696e696 100644
--- a/test/org/apache/catalina/tribes/demos/IntrospectionUtils.java
+++ b/test/org/apache/catalina/tribes/demos/IntrospectionUtils.java
@@ -590,6 +590,7 @@ public final class IntrospectionUtils {
         final String lext = ext;
         if (dir.isDirectory()) {
             names = dir.list(new FilenameFilter() {
+                @Override
                 public boolean accept(File d, String name) {
                     if (name.endsWith(lext)) {
                         return true;

==================================================
MapDemo.java
index 358a1ce47d..bfe6b30ca0 100644
--- a/test/org/apache/catalina/tribes/demos/LoadTest.java
+++ b/test/org/apache/catalina/tribes/demos/LoadTest.java
@@ -113,6 +113,7 @@ public class LoadTest implements MembershipListener,ChannelListener, Runnable {
     }
 
 
+    @Override
     public void run() {
         
         long counter = 0;
@@ -177,6 +178,7 @@ public class LoadTest implements MembershipListener,ChannelListener, Runnable {
      * TODO Implement this org.apache.catalina.tribes.MembershipListener
      *   method
      */
+    @Override
     public void memberAdded(Member member) {
         log.info("Member added:"+member);
         synchronized (mutex) {
@@ -191,14 +193,17 @@ public class LoadTest implements MembershipListener,ChannelListener, Runnable {
      * TODO Implement this org.apache.catalina.tribes.MembershipListener
      *   method
      */
+    @Override
     public void memberDisappeared(Member member) {
         log.info("Member disappeared:"+member);
     }
     
+    @Override
     public boolean accept(Serializable msg, Member mbr){ 
        return (msg instanceof LoadMessage) || (msg instanceof ByteMessage);
     }
     
+    @Override
     public void messageReceived(Serializable msg, Member mbr){ 
         if ( receiveStart == 0 ) receiveStart = System.currentTimeMillis();
         if ( debug ) {

==================================================
MembersWithProperties.java
index f307694a17..10838c0316 100644
--- a/test/org/apache/catalina/tribes/demos/MapDemo.java
+++ b/test/org/apache/catalina/tribes/demos/MapDemo.java
@@ -86,6 +86,7 @@ public class MapDemo implements ChannelListener, MembershipListener{
      * will always return false since we rely on the 
      * lazy map to do all the messaging for us
      */
+    @Override
     public boolean accept(Serializable msg, Member source) {
         //simple refresh the table model
         table.dataModel.getValueAt(-1,-1);
@@ -98,6 +99,7 @@ public class MapDemo implements ChannelListener, MembershipListener{
      * @param msg - the message received
      * @param source - the sending member
      */
+    @Override
     public void messageReceived(Serializable msg, Member source) {
         // NOOP
     }
@@ -105,6 +107,7 @@ public class MapDemo implements ChannelListener, MembershipListener{
     /**
      * Invoked when a member is added to the group
      */
+    @Override
     public void memberAdded(Member member) {
         // NOOP
     }
@@ -112,6 +115,7 @@ public class MapDemo implements ChannelListener, MembershipListener{
     /**
      * Invoked when a member leaves the group
      */
+    @Override
     public void memberDisappeared(Member member) {
         //just refresh the table model
         table.dataModel.getValueAt(-1,-1);
@@ -219,8 +223,10 @@ public class MapDemo implements ChannelListener, MembershipListener{
                                    "isProxy",
                                    "isBackup"};
 
+            @Override
             public int getColumnCount() { return columnNames.length; }
     
+            @Override
             public int getRowCount() {return map.sizeFull() +1; }
             
             public StringBuilder getMemberNames(Member[] members){
@@ -234,6 +240,7 @@ public class MapDemo implements ChannelListener, MembershipListener{
                 return buf;
             }
             
+            @Override
             public Object getValueAt(int row, int col) {
                 if ( row==-1 ) {
                     update();
@@ -349,6 +356,7 @@ public class MapDemo implements ChannelListener, MembershipListener{
             return button;
         }
         
+        @Override
         public void actionPerformed(ActionEvent e) {
             System.out.println(e.getActionCommand());
             if ( "add".equals(e.getActionCommand()) ) {

==================================================
TestDataIntegrity.java
index bac9f125c3..85d0e792d5 100644
--- a/test/org/apache/catalina/tribes/demos/MembersWithProperties.java
+++ b/test/org/apache/catalina/tribes/demos/MembersWithProperties.java
@@ -52,6 +52,7 @@ public class MembersWithProperties implements MembershipListener{
         return props;
     }
 
+    @Override
     public void memberAdded(Member member) {
         try {
             System.out.println("Received member added:"+member);
@@ -62,6 +63,7 @@ public class MembersWithProperties implements MembershipListener{
         }
     }
   
+    @Override
     public void memberDisappeared(Member member) {
         try {
             System.out.println("Received member disappeared:"+member);

==================================================
TestMulticastPackages.java
index 85bb946ed2..2ee037f00c 100644
--- a/test/org/apache/catalina/tribes/test/channel/TestDataIntegrity.java
+++ b/test/org/apache/catalina/tribes/test/channel/TestDataIntegrity.java
@@ -150,10 +150,12 @@ public class TestDataIntegrity extends TestCase {
 
     public static class Listener implements ChannelListener {
         long count = 0;
+        @Override
         public boolean accept(Serializable s, Member m) {
             return (s instanceof Data);
         }
 
+        @Override
         public void messageReceived(Serializable s, Member m) {
             Data d = (Data)s;
             if ( !Data.verify(d) ) {

==================================================
TestRemoteProcessException.java
index e3d3178c11..46552f8318 100644
--- a/test/org/apache/catalina/tribes/test/channel/TestMulticastPackages.java
+++ b/test/org/apache/catalina/tribes/test/channel/TestMulticastPackages.java
@@ -171,10 +171,12 @@ public class TestMulticastPackages extends TestCase {
         public Listener() {
             Arrays.fill(nrs, 0);
         }
+        @Override
         public boolean accept(Serializable s, Member m) {
             return (s instanceof Data);
         }
 
+        @Override
         public void messageReceived(Serializable s, Member m) {
             try {
                 Data d = (Data)s;

==================================================
TestUdpPackages.java
index 20ff18f288..05e02ef420 100644
--- a/test/org/apache/catalina/tribes/test/channel/TestRemoteProcessException.java
+++ b/test/org/apache/catalina/tribes/test/channel/TestRemoteProcessException.java
@@ -80,10 +80,12 @@ public class TestRemoteProcessException extends TestCase {
     public static class Listener implements ChannelListener {
         long noErrCnt = 0;
         long errCnt = 0;
+        @Override
         public boolean accept(Serializable s, Member m) {
             return (s instanceof Data);
         }
 
+        @Override
         public void messageReceived(Serializable s, Member m) {
             Data d = (Data)s;
             if ( !Data.verify(d) ) {

==================================================
TestOrderInterceptor.java
index 2f29d190a7..c92ce2a5c0 100644
--- a/test/org/apache/catalina/tribes/test/channel/TestUdpPackages.java
+++ b/test/org/apache/catalina/tribes/test/channel/TestUdpPackages.java
@@ -214,10 +214,12 @@ public class TestUdpPackages extends TestCase {
         public Listener() {
             Arrays.fill(nrs, 0);
         }
+        @Override
         public boolean accept(Serializable s, Member m) {
             return (s instanceof Data);
         }
 
+        @Override
         public void messageReceived(Serializable s, Member m) {
             try {
                 Data d = (Data)s;

==================================================
TestSenderConnections.java
index 5368b8c91a..42a53e2b85 100644
--- a/test/org/apache/catalina/tribes/test/interceptors/TestOrderInterceptor.java
+++ b/test/org/apache/catalina/tribes/test/interceptors/TestOrderInterceptor.java
@@ -97,6 +97,7 @@ public class TestOrderInterceptor extends TestCase {
         final AtomicInteger value = new AtomicInteger(0);
         final Queue<Exception> exceptionQueue = new ConcurrentLinkedQueue<Exception>();
         Runnable run = new Runnable() {
+            @Override
             public void run() {
                 for (int i = 0; i < 100; i++) {
                     try {
@@ -153,6 +154,7 @@ public class TestOrderInterceptor extends TestCase {
         int cnt = 0;
         int total = 0;
         boolean fail = false;
+        @Override
         public synchronized void messageReceived(Serializable msg, Member sender) {
             total++;
             Integer i = (Integer)msg;
@@ -162,6 +164,7 @@ public class TestOrderInterceptor extends TestCase {
 
         }
 
+        @Override
         public boolean accept(Serializable msg, Member sender) {
             return (msg instanceof Integer);
         }

==================================================
TestDomainFilter.java
index 22733e6124..654d070172 100644
--- a/test/org/apache/catalina/tribes/test/io/TestSenderConnections.java
+++ b/test/org/apache/catalina/tribes/test/io/TestSenderConnections.java
@@ -117,11 +117,13 @@ public class TestSenderConnections extends TestCase {
             this.name = name;
         }
         
+        @Override
         public void messageReceived(Serializable msg, Member sender) {
             System.out.println("["+name+"] Received message:"+msg+" from " + sender.getName());
         }
 
     
+        @Override
         public boolean accept(Serializable msg, Member sender) {
             return true;
         }

==================================================
TestMemberArrival.java
index 59ecafda31..ecc28f6866 100644
--- a/test/org/apache/catalina/tribes/test/membership/TestDomainFilter.java
+++ b/test/org/apache/catalina/tribes/test/membership/TestDomainFilter.java
@@ -99,6 +99,7 @@ public class TestDomainFilter
         }
 
         public ArrayList<Member> members = new ArrayList<Member>();
+        @Override
         public void memberAdded(Member member) {
             if (!members.contains(member)) {
                 members.add(member);
@@ -110,6 +111,7 @@ public class TestDomainFilter
             }
         }
 
+        @Override
         public void memberDisappeared(Member member) {
             if (members.contains(member)) {
                 members.remove(member);

==================================================
TestTcpFailureDetector.java
index 3f2c960119..5476db283b 100644
--- a/test/org/apache/catalina/tribes/test/membership/TestMemberArrival.java
+++ b/test/org/apache/catalina/tribes/test/membership/TestMemberArrival.java
@@ -96,6 +96,7 @@ public class TestMemberArrival
         }
 
         public ArrayList<Member> members = new ArrayList<Member>();
+        @Override
         public void memberAdded(Member member) {
             if (!members.contains(member)) {
                 members.add(member);
@@ -107,6 +108,7 @@ public class TestMemberArrival
             }
         }
 
+        @Override
         public void memberDisappeared(Member member) {
             if (members.contains(member)) {
                 members.remove(member);

==================================================
SocketNioReceive.java
index 1cb0fe806a..514c359ae1 100644
--- a/test/org/apache/catalina/tribes/test/membership/TestTcpFailureDetector.java
+++ b/test/org/apache/catalina/tribes/test/membership/TestTcpFailureDetector.java
@@ -141,6 +141,7 @@ public class TestTcpFailureDetector extends TestCase {
             this.name = name;
         }
         public ArrayList<Member> members = new ArrayList<Member>();
+        @Override
         public void memberAdded(Member member) {
             if ( !members.contains(member) ) {
                 members.add(member);
@@ -152,6 +153,7 @@ public class TestTcpFailureDetector extends TestCase {
             }
         }
         
+        @Override
         public void memberDisappeared(Member member) {
             if ( members.contains(member) ) {
                 members.remove(member);

==================================================
Benchmarks.java
index 7fadf8d54e..36a8da94a5 100644
--- a/test/org/apache/catalina/tribes/test/transport/SocketNioReceive.java
+++ b/test/org/apache/catalina/tribes/test/transport/SocketNioReceive.java
@@ -69,6 +69,7 @@ public class SocketNioReceive {
         boolean first = true;
         
         
+        @Override
         public void messageReceived(ChannelMessage msg) {
             if (first) {
                 first = false;
@@ -83,6 +84,7 @@ public class SocketNioReceive {
             }
         }        
 
+        @Override
         public boolean accept(ChannelMessage msg) {
             synchronized (this) {accept++;}
             return true;

==================================================
