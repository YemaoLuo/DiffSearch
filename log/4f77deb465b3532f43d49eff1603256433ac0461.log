4f77deb465b3532f43d49eff1603256433ac0461
==================================================
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=60940
==================================================
Mark Thomas
==================================================
Tue Apr 4 14:04:21 2017 +0000
==================================================
ExtensionValidator.java
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=60940
Improve the handling of the META-INF/ and META-INF/MANIFEST.MF entries for Jar files located in /WEB-INF/lib when running a web application from a packed WAR file.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1790119 13f79535-47bb-0310-9956-ffa450edef68



==================================================
JarWarResourceSet.java
index f9da4cf7a5..3957266b15 100644
--- a/java/org/apache/catalina/util/ExtensionValidator.java
+++ b/java/org/apache/catalina/util/ExtensionValidator.java
@@ -150,12 +150,11 @@ public final class ExtensionValidator {
             if (manifestResource.isFile()) {
                 // Primarily used for error reporting
                 String jarName = manifestResource.getURL().toExternalForm();
-                Manifest jmanifest = null;
-                try (InputStream is = manifestResource.getInputStream()) {
-                    jmanifest = new Manifest(is);
-                    ManifestResource mre = new ManifestResource(jarName,
-                            jmanifest, ManifestResource.APPLICATION);
-                    appManifestResources.add(mre);
+                Manifest jmanifest = manifestResource.getManifest();
+                if (jmanifest != null) {
+	                ManifestResource mre = new ManifestResource(jarName,
+	                        jmanifest, ManifestResource.APPLICATION);
+	                appManifestResources.add(mre);
                 }
             }
         }

==================================================
TestJarWarResourceSet.java
index 7f16b63cc3..d8911e8d34 100644
--- a/java/org/apache/catalina/webresources/JarWarResourceSet.java
+++ b/java/org/apache/catalina/webresources/JarWarResourceSet.java
@@ -107,11 +107,28 @@ public class JarWarResourceSet extends AbstractArchiveResourceSet {
 
                     try (JarInputStream jarIs = new JarInputStream(jarFileIs)) {
                         JarEntry entry = jarIs.getNextJarEntry();
+                        boolean hasMetaInf = false;
                         while (entry != null) {
+                        	if (!hasMetaInf && entry.getName().startsWith("META-INF/")) {
+                        		hasMetaInf = true;
+                        	}
                             archiveEntries.put(entry.getName(), entry);
                             entry = jarIs.getNextJarEntry();
                         }
                         setManifest(jarIs.getManifest());
+                    	// Hacks to work-around JarInputStream swallowing these
+                        // entries. The attributes for these entries will be
+                        // incomplete. Making the attributes available would
+                        // require (re-)reading the stream as a ZipInputStream
+                        // and creating JarEntry objects from the ZipEntries.
+                        if (hasMetaInf) {
+                           	JarEntry metaInfDir = new JarEntry("META-INF/");
+                        	archiveEntries.put(metaInfDir.getName(), metaInfDir);
+                        }
+                        if (jarIs.getManifest() != null) {
+                        	JarEntry manifest = new JarEntry("META-INF/MANIFEST.MF");
+                        	archiveEntries.put(manifest.getName(), manifest);
+                        }
                     }
                 } catch (IOException ioe) {
                     // Should never happen

==================================================
