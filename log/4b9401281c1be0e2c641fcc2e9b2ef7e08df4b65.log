4b9401281c1be0e2c641fcc2e9b2ef7e08df4b65
==================================================
Avoid allocating unnecessary Vectors to store preludes and codas
==================================================
Jeremy Boynes
==================================================
Sun Jul 14 03:39:18 2013 +0000
==================================================
JspConfig.java
Avoid allocating unnecessary Vectors to store preludes and codas
by using Collections returned from JspPropertyGroupDescriptor directly.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1502934 13f79535-47bb-0310-9956-ffa450edef68



==================================================
JspDocumentParser.java
index 7f39516210..431ae76ac7 100644
--- a/java/org/apache/jasper/compiler/JspConfig.java
+++ b/java/org/apache/jasper/compiler/JspConfig.java
@@ -17,6 +17,7 @@
 
 package org.apache.jasper.compiler;
 
+import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Iterator;
 import java.util.Vector;
@@ -95,18 +96,12 @@ public class JspConfig {
                 continue;
             }
 
-            Vector<String> includePreludes = new Vector<>();
-            includePreludes.addAll(jspPropertyGroup.getIncludePreludes());
-
-            Vector<String> includeCodas = new Vector<>();
-            includeCodas.addAll(jspPropertyGroup.getIncludeCodas());
-
             JspProperty property = new JspProperty(jspPropertyGroup.getIsXml(),
                     jspPropertyGroup.getElIgnored(),
                     jspPropertyGroup.getScriptingInvalid(),
                     jspPropertyGroup.getPageEncoding(),
-                    includePreludes,
-                    includeCodas,
+                    jspPropertyGroup.getIncludePreludes(),
+                    jspPropertyGroup.getIncludeCodas(),
                     jspPropertyGroup.getDeferredSyntaxAllowedAsLiteral(),
                     jspPropertyGroup.getTrimDirectiveWhitespaces(),
                     jspPropertyGroup.getDefaultContentType(),
@@ -247,8 +242,8 @@ public class JspConfig {
             uriExtension = uri.substring(index+1);
         }
 
-        Vector<String> includePreludes = new Vector<>();
-        Vector<String> includeCodas = new Vector<>();
+        Collection<String> includePreludes = new ArrayList<>();
+        Collection<String> includeCodas = new ArrayList<>();
 
         JspPropertyGroup isXmlMatch = null;
         JspPropertyGroup elIgnoredMatch = null;
@@ -462,8 +457,8 @@ public class JspConfig {
         private final String elIgnored;
         private final String scriptingInvalid;
         private final String pageEncoding;
-        private final Vector<String> includePrelude;
-        private final Vector<String> includeCoda;
+        private final Collection<String> includePrelude;
+        private final Collection<String> includeCoda;
         private final String deferedSyntaxAllowedAsLiteral;
         private final String trimDirectiveWhitespaces;
         private final String defaultContentType;
@@ -472,7 +467,7 @@ public class JspConfig {
 
         public JspProperty(String isXml, String elIgnored,
                 String scriptingInvalid, String pageEncoding,
-                Vector<String> includePrelude, Vector<String> includeCoda,
+                Collection<String> includePrelude, Collection<String> includeCoda,
                 String deferedSyntaxAllowedAsLiteral,
                 String trimDirectiveWhitespaces,
                 String defaultContentType,
@@ -508,11 +503,11 @@ public class JspConfig {
             return pageEncoding;
         }
 
-        public Vector<String> getIncludePrelude() {
+        public Collection<String> getIncludePrelude() {
             return includePrelude;
         }
 
-        public Vector<String> getIncludeCoda() {
+        public Collection<String> getIncludeCoda() {
             return includeCoda;
         }
 

==================================================
PageInfo.java
index 141a13c08c..9b86f5e95f 100644
--- a/java/org/apache/jasper/compiler/JspDocumentParser.java
+++ b/java/org/apache/jasper/compiler/JspDocumentParser.java
@@ -20,8 +20,8 @@ import java.io.CharArrayWriter;
 import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.io.InputStream;
+import java.util.Collection;
 import java.util.Iterator;
-import java.util.List;
 import java.util.jar.JarFile;
 
 import javax.servlet.jsp.tagext.TagFileInfo;
@@ -219,7 +219,7 @@ class JspDocumentParser
      * This is used to implement the include-prelude and include-coda
      * subelements of the jsp-config element in web.xml
      */
-    private void addInclude(Node parent, List<String> files) throws SAXException {
+    private void addInclude(Node parent, Collection<String> files) throws SAXException {
         if (files != null) {
             Iterator<String> iter = files.iterator();
             while (iter.hasNext()) {

==================================================
Parser.java
index 6edcaa4304..67b4124732 100644
--- a/java/org/apache/jasper/compiler/PageInfo.java
+++ b/java/org/apache/jasper/compiler/PageInfo.java
@@ -92,8 +92,8 @@ class PageInfo {
     private final HashSet<String> prefixes;
 
     private boolean hasJspRoot = false;
-    private Vector<String> includePrelude;
-    private Vector<String> includeCoda;
+    private Collection<String> includePrelude;
+    private Collection<String> includeCoda;
     private final Vector<String> pluginDcls;  // Id's for tagplugin declarations
 
     // JSP 2.2
@@ -182,19 +182,19 @@ class PageInfo {
         return scriptingInvalid;
     }
 
-    public List<String> getIncludePrelude() {
+    public Collection<String> getIncludePrelude() {
         return includePrelude;
     }
 
-    public void setIncludePrelude(Vector<String> prelude) {
+    public void setIncludePrelude(Collection<String> prelude) {
         includePrelude = prelude;
     }
 
-    public List<String> getIncludeCoda() {
+    public Collection<String> getIncludeCoda() {
         return includeCoda;
     }
 
-    public void setIncludeCoda(Vector<String> coda) {
+    public void setIncludeCoda(Collection<String> coda) {
         includeCoda = coda;
     }
 

==================================================
