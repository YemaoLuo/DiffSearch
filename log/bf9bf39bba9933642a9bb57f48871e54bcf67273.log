bf9bf39bba9933642a9bb57f48871e54bcf67273
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=52666
==================================================
Mark Emlyn
==================================================
Wed Feb 15 16:26:08 2012 +0000
==================================================
ELSupport.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=52666
Correct coercion order in EL for A {==,!=,eq,ne} B

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1244567 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestELSupport.java
index 3203cb341a..d739b061da 100644
--- a/java/org/apache/el/lang/ELSupport.java
+++ b/java/org/apache/el/lang/ELSupport.java
@@ -127,35 +127,31 @@ public class ELSupport {
             return true;
         } else if (obj0 == null || obj1 == null) {
             return false;
-        } else if (obj0 instanceof Boolean || obj1 instanceof Boolean) {
-            return coerceToBoolean(obj0).equals(coerceToBoolean(obj1));
-        } else if (obj0.getClass().isEnum()) {
-            return obj0.equals(coerceToEnum(obj1, obj0.getClass()));
-        } else if (obj1.getClass().isEnum()) {
-            return obj1.equals(coerceToEnum(obj0, obj1.getClass()));
-        } else if (obj0 instanceof String || obj1 instanceof String) {
-            int lexCompare = coerceToString(obj0).compareTo(coerceToString(obj1));
-            return (lexCompare == 0) ? true : false;
-        }
-        if (isBigDecimalOp(obj0, obj1)) {
+        } else if (isBigDecimalOp(obj0, obj1)) {
             BigDecimal bd0 = (BigDecimal) coerceToNumber(obj0, BigDecimal.class);
             BigDecimal bd1 = (BigDecimal) coerceToNumber(obj1, BigDecimal.class);
             return bd0.equals(bd1);
-        }
-        if (isDoubleOp(obj0, obj1)) {
+        } else if (isDoubleOp(obj0, obj1)) {
             Double d0 = (Double) coerceToNumber(obj0, Double.class);
             Double d1 = (Double) coerceToNumber(obj1, Double.class);
             return d0.equals(d1);
-        }
-        if (isBigIntegerOp(obj0, obj1)) {
+        } else if (isBigIntegerOp(obj0, obj1)) {
             BigInteger bi0 = (BigInteger) coerceToNumber(obj0, BigInteger.class);
             BigInteger bi1 = (BigInteger) coerceToNumber(obj1, BigInteger.class);
             return bi0.equals(bi1);
-        }
-        if (isLongOp(obj0, obj1)) {
+        } else         if (isLongOp(obj0, obj1)) {
             Long l0 = (Long) coerceToNumber(obj0, Long.class);
             Long l1 = (Long) coerceToNumber(obj1, Long.class);
             return l0.equals(l1);
+        } else if (obj0 instanceof Boolean || obj1 instanceof Boolean) {
+            return coerceToBoolean(obj0).equals(coerceToBoolean(obj1));
+        } else if (obj0.getClass().isEnum()) {
+            return obj0.equals(coerceToEnum(obj1, obj0.getClass()));
+        } else if (obj1.getClass().isEnum()) {
+            return obj1.equals(coerceToEnum(obj0, obj1.getClass()));
+        } else if (obj0 instanceof String || obj1 instanceof String) {
+            int lexCompare = coerceToString(obj0).compareTo(coerceToString(obj1));
+            return (lexCompare == 0) ? true : false;
         } else {
             return obj0.equals(obj1);
         }

==================================================
