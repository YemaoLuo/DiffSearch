1053bd66ef28a13a0aad46211d70cc779dc1357c
==================================================
Pull up getLog() and add some supporting plumbing
==================================================
Mark Emlyn
==================================================
Thu Jun 12 14:52:38 2014 +0000
==================================================
AbstractProcessor.java
Pull up getLog() and add some supporting plumbing

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1602189 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AbstractAjpProcessor.java
index be3957b00a..01fd2a882e 100644
--- a/java/org/apache/coyote/AbstractProcessor.java
+++ b/java/org/apache/coyote/AbstractProcessor.java
@@ -21,10 +21,12 @@ import java.util.concurrent.Executor;
 
 import javax.servlet.http.HttpUpgradeHandler;
 
+import org.apache.juli.logging.Log;
 import org.apache.tomcat.util.net.AbstractEndpoint;
 import org.apache.tomcat.util.net.AbstractEndpoint.Handler.SocketState;
 import org.apache.tomcat.util.net.SocketStatus;
 import org.apache.tomcat.util.net.SocketWrapper;
+import org.apache.tomcat.util.res.StringManager;
 
 /**
  * Provides functionality and attributes common to all supported protocols
@@ -32,6 +34,8 @@ import org.apache.tomcat.util.net.SocketWrapper;
  */
 public abstract class AbstractProcessor<S> implements ActionHook, Processor<S> {
 
+    protected static final StringManager sm = StringManager.getManager(Constants.Package);
+
     protected Adapter adapter;
     protected final AsyncStateMachine<S> asyncStateMachine;
     protected final AbstractEndpoint<S> endpoint;
@@ -201,4 +205,6 @@ public abstract class AbstractProcessor<S> implements ActionHook, Processor<S> {
      * @param write Register the socket for write events
      */
     protected abstract void registerForEvent(boolean read, boolean write);
+
+    protected abstract Log getLog();
 }

==================================================
AbstractHttp11Processor.java
index c160f32d7d..6c3ea04456 100644
--- a/java/org/apache/coyote/ajp/AbstractAjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AbstractAjpProcessor.java
@@ -42,7 +42,6 @@ import org.apache.coyote.OutputBuffer;
 import org.apache.coyote.Request;
 import org.apache.coyote.RequestInfo;
 import org.apache.coyote.Response;
-import org.apache.juli.logging.Log;
 import org.apache.tomcat.util.ExceptionUtils;
 import org.apache.tomcat.util.buf.ByteChunk;
 import org.apache.tomcat.util.buf.HexUtils;
@@ -62,9 +61,6 @@ import org.apache.tomcat.util.res.StringManager;
  */
 public abstract class AbstractAjpProcessor<S> extends AbstractProcessor<S> {
 
-    protected abstract Log getLog();
-
-
     /**
      * The string manager for this package.
      */

==================================================
SpdyProcessor.java
index 54d84d8262..2ee7878c5f 100644
--- a/java/org/apache/coyote/http11/AbstractHttp11Processor.java
+++ b/java/org/apache/coyote/http11/AbstractHttp11Processor.java
@@ -41,7 +41,6 @@ import org.apache.coyote.http11.filters.IdentityOutputFilter;
 import org.apache.coyote.http11.filters.SavedRequestInputFilter;
 import org.apache.coyote.http11.filters.VoidInputFilter;
 import org.apache.coyote.http11.filters.VoidOutputFilter;
-import org.apache.juli.logging.Log;
 import org.apache.tomcat.util.ExceptionUtils;
 import org.apache.tomcat.util.buf.Ascii;
 import org.apache.tomcat.util.buf.ByteChunk;
@@ -59,7 +58,6 @@ import org.apache.tomcat.util.res.StringManager;
 
 public abstract class AbstractHttp11Processor<S> extends AbstractProcessor<S> {
 
-    protected abstract Log getLog();
     private final UserDataHelper userDataHelper;
 
 

==================================================
