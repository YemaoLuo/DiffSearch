47ecd0d0f9bf47352b9674f50487732d13f9d6d7
==================================================
When normalizing paths, improve the handling when paths end with'/.' or '/..' and ensure that input and output are consistent with respect to whether or not they end with '/'.
==================================================
Mark Thomas
==================================================
Wed Apr 20 12:14:43 2016 +0000
==================================================
RequestUtil.java
When normalizing paths, improve the handling when paths end with'/.' or '/..' and ensure that input and output are consistent with respect to whether or not they end with '/'.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1740131 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestRequestUtil.java
index 1512c51d8b..28922c44d6 100644
--- a/java/org/apache/tomcat/util/http/RequestUtil.java
+++ b/java/org/apache/tomcat/util/http/RequestUtil.java
@@ -67,6 +67,12 @@ public class RequestUtil {
         if (!normalized.startsWith("/"))
             normalized = "/" + normalized;
 
+        boolean addedTrailingSlash = false;
+        if (normalized.endsWith("/.") || normalized.endsWith("/..")) {
+            normalized = normalized + "/";
+            addedTrailingSlash = true;
+        }
+
         // Resolve occurrences of "//" in the normalized path
         while (true) {
             int index = normalized.indexOf("//");
@@ -98,12 +104,10 @@ public class RequestUtil {
             normalized = normalized.substring(0, index2) + normalized.substring(index + 3);
         }
 
-        if (normalized.equals("/.")) {
-            return "/";
-        }
-
-        if (normalized.equals("/..")) {
-            return null;  // Trying to go outside our context
+        if (normalized.length() > 1 && addedTrailingSlash) {
+            // Remove the trailing '/' we added to that input and output are
+            // consistent w.r.t. to the presence of the trailing '/'.
+            normalized = normalized.substring(0, normalized.length() - 1);
         }
 
         // Return the normalized path that we have completed

==================================================
