7006086df7b41e253ffece339d73ee4c7d2e9150
==================================================
Use the DataInput interface rather than an implementation
==================================================
Mark Emlyn
==================================================
Wed Sep 17 10:28:19 2014 +0000
==================================================
AnnotationEntry.java
Use the DataInput interface rather than an implementation

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1625501 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Annotations.java
index 44f159a9f4..eeff81cf2b 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/AnnotationEntry.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/AnnotationEntry.java
@@ -17,7 +17,7 @@
  */
 package org.apache.tomcat.util.bcel.classfile;
 
-import java.io.DataInputStream;
+import java.io.DataInput;
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.List;
@@ -44,7 +44,7 @@ public class AnnotationEntry implements Constants {
      * @param constant_pool
      * @throws IOException
      */
-    AnnotationEntry(DataInputStream file, ConstantPool constant_pool) throws IOException {
+    AnnotationEntry(DataInput file, ConstantPool constant_pool) throws IOException {
 
         this.constant_pool = constant_pool;
 

==================================================
ClassParser.java
index dbefe420c2..dcc0b3a166 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Annotations.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Annotations.java
@@ -17,7 +17,7 @@
  */
 package org.apache.tomcat.util.bcel.classfile;
 
-import java.io.DataInputStream;
+import java.io.DataInput;
 import java.io.IOException;
 
 /**
@@ -34,7 +34,7 @@ public class Annotations {
      * @param file Input stream
      * @param constant_pool Array of constants
      */
-    Annotations(DataInputStream file, ConstantPool constant_pool)
+    Annotations(DataInput file, ConstantPool constant_pool)
             throws IOException {
         final int annotation_table_length = (file.readUnsignedShort());
         annotation_table = new AnnotationEntry[annotation_table_length];

==================================================
Constant.java
index 2aae61d432..cb6b703ea9 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ClassParser.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ClassParser.java
@@ -18,6 +18,7 @@
 package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.BufferedInputStream;
+import java.io.DataInput;
 import java.io.DataInputStream;
 import java.io.IOException;
 import java.io.InputStream;
@@ -42,7 +43,7 @@ public final class ClassParser {
 
     private static final int MAGIC = 0xCAFEBABE;
 
-    private final DataInputStream file;
+    private final DataInput file;
     private String class_name, superclass_name;
     private int access_flags; // Access rights of parsed class
     private String[] interface_names; // Names of implemented interfaces

==================================================
ConstantPool.java
index 799bcb3e21..ab9df3a88d 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Constant.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Constant.java
@@ -17,7 +17,7 @@
  */
 package org.apache.tomcat.util.bcel.classfile;
 
-import java.io.DataInputStream;
+import java.io.DataInput;
 import java.io.IOException;
 
 import org.apache.tomcat.util.bcel.Constants;
@@ -62,7 +62,7 @@ public abstract class Constant {
      * @param file Input stream
      * @return Constant object
      */
-    static Constant readConstant( DataInputStream file ) throws IOException,
+    static Constant readConstant(DataInput file ) throws IOException,
             ClassFormatException {
         byte b = file.readByte(); // Read tag byte
         int skipSize;

==================================================
ConstantUtf8.java
index 8f53967d13..af2f9b838c 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantPool.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ConstantPool.java
@@ -17,7 +17,7 @@
  */
 package org.apache.tomcat.util.bcel.classfile;
 
-import java.io.DataInputStream;
+import java.io.DataInput;
 import java.io.IOException;
 
 import org.apache.tomcat.util.bcel.Constants;
@@ -45,7 +45,7 @@ public class ConstantPool {
      * @throws IOException
      * @throws ClassFormatException
      */
-    ConstantPool(DataInputStream file) throws IOException, ClassFormatException {
+    ConstantPool(DataInput file) throws IOException, ClassFormatException {
         int constant_pool_count = file.readUnsignedShort();
         constant_pool = new Constant[constant_pool_count];
         /* constant_pool[0] is unused by the compiler and may be used freely

==================================================
ElementValue.java
index e1da5acccb..64f7c59c09 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantUtf8.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ConstantUtf8.java
@@ -16,7 +16,7 @@
  */
 package org.apache.tomcat.util.bcel.classfile;
 
-import java.io.DataInputStream;
+import java.io.DataInput;
 import java.io.IOException;
 
 import org.apache.tomcat.util.bcel.Constants;
@@ -34,7 +34,7 @@ public final class ConstantUtf8 extends Constant {
     private final String bytes;
 
 
-    static ConstantUtf8 getInstance(DataInputStream file) throws IOException {
+    static ConstantUtf8 getInstance(DataInput file) throws IOException {
         return new ConstantUtf8(file.readUTF());
     }
 

==================================================
ElementValuePair.java
index aa6c6a3d47..9ad687ef91 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ElementValue.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ElementValue.java
@@ -17,7 +17,7 @@
  */
 package org.apache.tomcat.util.bcel.classfile;
 
-import java.io.DataInputStream;
+import java.io.DataInput;
 import java.io.IOException;
 
 /**
@@ -64,7 +64,7 @@ public abstract class ElementValue
 
     public static final int PRIMITIVE_BOOLEAN = 'Z';
 
-    public static ElementValue readElementValue(DataInputStream dis,
+    public static ElementValue readElementValue(DataInput dis,
             ConstantPool cpool) throws IOException
     {
         byte type = dis.readByte();

==================================================
