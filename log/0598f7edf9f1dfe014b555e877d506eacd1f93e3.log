0598f7edf9f1dfe014b555e877d506eacd1f93e3
==================================================
Pull up longPoll() to the base Protocol implementation
==================================================
Mark Thomas
==================================================
Thu May 28 08:06:37 2015 +0000
==================================================
AbstractProtocol.java
Pull up longPoll() to the base Protocol implementation

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1682164 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AbstractAjpProtocol.java
index 510daf57e7..8f21f92301 100644
--- a/java/org/apache/coyote/AbstractProtocol.java
+++ b/java/org/apache/coyote/AbstractProtocol.java
@@ -831,8 +831,22 @@ public abstract class AbstractProtocol<S> implements ProtocolHandler,
         }
 
         protected abstract P createProcessor();
-        protected abstract void longPoll(SocketWrapperBase<?> socket,
-                Processor processor);
+
+
+        protected void longPoll(SocketWrapperBase<?> socket, Processor processor) {
+            if (processor.isAsync()) {
+                // Async
+                socket.setAsync(true);
+            } else {
+                // This branch is currently only used with HTTP
+                // Either:
+                //  - this is an upgraded connection
+                //  - the request line/headers have not been completely
+                //    read
+                socket.registerReadInterest();
+            }
+        }
+
 
         /**
          * Expected to be used by the handler once the processor is no longer

==================================================
AbstractHttp11Protocol.java
index ed0903e6e8..7758502158 100644
--- a/java/org/apache/coyote/ajp/AbstractAjpProtocol.java
+++ b/java/org/apache/coyote/ajp/AbstractAjpProtocol.java
@@ -21,7 +21,6 @@ import java.nio.ByteBuffer;
 import javax.servlet.http.HttpUpgradeHandler;
 
 import org.apache.coyote.AbstractProtocol;
-import org.apache.coyote.Processor;
 import org.apache.coyote.UpgradeProtocol;
 import org.apache.tomcat.util.net.AbstractEndpoint;
 import org.apache.tomcat.util.net.SSLHostConfig;
@@ -168,11 +167,6 @@ public abstract class AbstractAjpProtocol<S> extends AbstractProtocol<S> {
             return processor;
         }
 
-        @Override
-        protected void longPoll(SocketWrapperBase<?> socket, Processor processor) {
-            // Same requirements for all AJP connectors
-            socket.setAsync(true);
-        }
 
         @Override
         protected AjpProcessor createUpgradeProcessor(SocketWrapperBase<?> socket,

==================================================
