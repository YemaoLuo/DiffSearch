8a54871bfb2cf24e6f374334ad320a35f39eec49
==================================================
Fix some Javadoc warnings
==================================================
Mark Thomas
==================================================
Tue Jan 26 20:48:43 2016 +0000
==================================================
Generator.java
Fix some Javadoc warnings

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1726899 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ImplicitTagLibraryInfo.java
index 98e2387530..8cd136c2d9 100644
--- a/java/org/apache/jasper/compiler/Generator.java
+++ b/java/org/apache/jasper/compiler/Generator.java
@@ -3445,6 +3445,9 @@ class Generator {
          *            The variable the tag handler is stored in, so the fragment
          *            knows its parent tag.
          * @return The name of the temporary variable the fragment is stored in.
+         *
+         * @throws JasperException If an error occurs trying to generate the
+         *         fragment
          */
         public String generateNamedAttributeJspFragment(Node.NamedAttribute n,
                 String tagHandlerVar) throws JasperException {
@@ -3619,6 +3622,8 @@ class Generator {
      *            The compiler
      * @param page
      *            The input page
+     *
+     * @throws JasperException If something goes wrong during generation
      */
     public static void generate(ServletWriter out, Compiler compiler,
             Node.Nodes page) throws JasperException {
@@ -4121,23 +4126,14 @@ class Generator {
             }
         }
 
-        /**
-         * XXX
-         */
         public Method getSetterMethod(String attrName) {
             return methodMaps.get(attrName);
         }
 
-        /**
-         * XXX
-         */
         public Class<?> getPropertyEditorClass(String attrName) {
             return propertyEditorMaps.get(attrName);
         }
 
-        /**
-         * XXX
-         */
         public Class<?> getTagHandlerClass() {
             return tagHandlerClass;
         }
@@ -4190,6 +4186,9 @@ class Generator {
          * Adjust the Java Lines. This is necessary because the Java lines
          * stored with the nodes are relative the beginning of this buffer and
          * need to be adjusted when this buffer is inserted into the source.
+         *
+         * @param offset The offset to apply to the start line and end line of
+         *        and Java lines of nodes in this buffer
          */
         public void adjustJavaLines(final int offset) {
 

==================================================
