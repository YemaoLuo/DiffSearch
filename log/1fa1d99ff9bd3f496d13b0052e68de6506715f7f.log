1fa1d99ff9bd3f496d13b0052e68de6506715f7f
==================================================
Remove Endpoint from NioServletOutputStream constructor
==================================================
Mark Emlyn
==================================================
Mon Nov 10 16:45:55 2014 +0000
==================================================
Http11Nio2Protocol.java
Remove Endpoint from NioServletOutputStream constructor

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1637923 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Nio2Processor.java
index 111f80f52a..8a8a04801d 100644
--- a/java/org/apache/coyote/http11/Http11Nio2Protocol.java
+++ b/java/org/apache/coyote/http11/Http11Nio2Protocol.java
@@ -264,7 +264,7 @@ public class Http11Nio2Protocol extends AbstractHttp11JsseProtocol<Nio2Channel>
                 SocketWrapperBase<Nio2Channel> socket, ByteBuffer leftoverInput,
                 HttpUpgradeHandler httpUpgradeProcessor)
                 throws IOException {
-            return new Nio2Processor(proto.endpoint, socket, leftoverInput,
+            return new Nio2Processor(socket, leftoverInput,
                     httpUpgradeProcessor, proto.getUpgradeAsyncWriteBufferSize());
         }
 

==================================================
Nio2ServletOutputStream.java
index 6592db2829..19c5538b1e 100644
--- a/java/org/apache/coyote/http11/upgrade/Nio2Processor.java
+++ b/java/org/apache/coyote/http11/upgrade/Nio2Processor.java
@@ -22,7 +22,6 @@ import javax.servlet.http.HttpUpgradeHandler;
 
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
-import org.apache.tomcat.util.net.AbstractEndpoint;
 import org.apache.tomcat.util.net.Nio2Channel;
 import org.apache.tomcat.util.net.SocketWrapperBase;
 
@@ -34,13 +33,11 @@ public class Nio2Processor extends AbstractProcessor<Nio2Channel> {
 
     private static final int INFINITE_TIMEOUT = -1;
 
-    public Nio2Processor(AbstractEndpoint<Nio2Channel> endpoint,
-            SocketWrapperBase<Nio2Channel> wrapper, ByteBuffer leftoverInput,
-            HttpUpgradeHandler httpUpgradeProcessor,
-            int asyncWriteBufferSize) {
+    public Nio2Processor(SocketWrapperBase<Nio2Channel> wrapper, ByteBuffer leftoverInput,
+            HttpUpgradeHandler httpUpgradeProcessor, int asyncWriteBufferSize) {
         super(httpUpgradeProcessor,
                 new Nio2ServletInputStream(wrapper),
-                new Nio2ServletOutputStream(wrapper, asyncWriteBufferSize, endpoint));
+                new Nio2ServletOutputStream(wrapper, asyncWriteBufferSize));
 
         wrapper.setTimeout(INFINITE_TIMEOUT);
         if (leftoverInput != null) {

==================================================
