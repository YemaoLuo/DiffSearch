a94d423024506f62ab4c60846071d4d3dbb09871
==================================================
Partial code clean-up for o.a.catalina.tribes
==================================================
Mark Emlyn
==================================================
Tue Aug 7 19:28:25 2012 +0000
==================================================
PooledSender.java
Partial code clean-up for o.a.catalina.tribes
 - Add final prompted by UCDetector
 - Java 7 use of <>

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1370461 13f79535-47bb-0310-9956-ffa450edef68



==================================================
RxTaskPool.java
index 82f209fd00..98640a12ca 100644
--- a/java/org/apache/catalina/tribes/transport/PooledSender.java
+++ b/java/org/apache/catalina/tribes/transport/PooledSender.java
@@ -40,7 +40,7 @@ public abstract class PooledSender extends AbstractSender implements MultiPointS
     protected static final StringManager sm =
         StringManager.getManager(Constants.Package);
 
-    private SenderQueue queue = null;
+    private final SenderQueue queue;
     private int poolSize = 25;
     public PooledSender() {
         queue = new SenderQueue(this,poolSize);
@@ -123,8 +123,8 @@ public abstract class PooledSender extends AbstractSender implements MultiPointS
         public SenderQueue(PooledSender parent, int limit) {
             this.limit = limit;
             this.parent = parent;
-            notinuse = new java.util.LinkedList<DataSender>();
-            inuse = new java.util.LinkedList<DataSender>();
+            notinuse = new java.util.LinkedList<>();
+            inuse = new java.util.LinkedList<>();
         }
 
         /**

==================================================
SenderState.java
index 9aa6813dca..dbc965f58a 100644
--- a/java/org/apache/catalina/tribes/transport/RxTaskPool.java
+++ b/java/org/apache/catalina/tribes/transport/RxTaskPool.java
@@ -33,16 +33,16 @@ public class RxTaskPool
      * through a FIFO idle queue.
      */
 
-    List<AbstractRxTask> idle = new LinkedList<AbstractRxTask>();
-    List<AbstractRxTask> used = new LinkedList<AbstractRxTask>();
+    final List<AbstractRxTask> idle = new LinkedList<>();
+    final List<AbstractRxTask> used = new LinkedList<>();
 
-    Object mutex = new Object();
+    final Object mutex = new Object();
     boolean running = true;
 
     private int maxTasks;
     private int minTasks;
 
-    private TaskCreator creator = null;
+    private final TaskCreator creator;
 
 
     public RxTaskPool (int maxTasks, int minTasks, TaskCreator creator) throws Exception {

==================================================
