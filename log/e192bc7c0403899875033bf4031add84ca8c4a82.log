e192bc7c0403899875033bf4031add84ca8c4a82
==================================================
Improve debug logging of network and buffer reads.
==================================================
Mark Thomas
==================================================
Tue Apr 17 10:55:07 2018 +0000
==================================================
AprEndpoint.java
Improve debug logging of network and buffer reads.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1829355 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Nio2Endpoint.java
index b344e884ae..edef13a11e 100644
--- a/java/org/apache/tomcat/util/net/LocalStrings.properties
+++ b/java/org/apache/tomcat/util/net/LocalStrings.properties
@@ -120,7 +120,7 @@ channel.nio.ssl.invalidBuffer=You can only read using the application read buffe
 channel.nio.ssl.expandNetInBuffer=Expanding network input buffer to [{0}] bytes
 channel.nio.ssl.expandNetOutBuffer=Expanding network output buffer to [{0}] bytes
 channel.nio.ssl.sniDefault=Unable to buffer enough data to determine requested SNI host name. Using default
-channel.nio.ssl.sniHostName=The SNI host name extracted for this connection was [{0}]
+channel.nio.ssl.sniHostName=The SNI host name extracted for connection [{0}] was [{1}]
 channel.nio.ssl.foundHttp=Found an plain text HTTP request on what should be an encrypted TLS connection
 
 jsse.invalid_truststore_password=The provided trust store password could not be used to unlock and/or validate the trust store. Retrying to access the trust store with a null password which will skip validation.

==================================================
NioEndpoint.java
index bf79fdbd8d..2ae06f7fe5 100644
--- a/java/org/apache/tomcat/util/net/Nio2Endpoint.java
+++ b/java/org/apache/tomcat/util/net/Nio2Endpoint.java
@@ -810,9 +810,15 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel,AsynchronousS
                 if (block && to.remaining() >= limit) {
                     to.limit(to.position() + limit);
                     nRead = fillReadBuffer(block, to);
+                    if (log.isDebugEnabled()) {
+                        log.debug("Socket: [" + this + "], Read direct from socket: [" + nRead + "]");
+                    }
                 } else {
                     // Fill the read buffer as best we can.
                     nRead = fillReadBuffer(block);
+                    if (log.isDebugEnabled()) {
+                        log.debug("Socket: [" + this + "], Read into buffer: [" + nRead + "]");
+                    }
 
                     // Fill as much of the remaining byte array as possible with the
                     // data that was just read

==================================================
SecureNio2Channel.java
index 7322abd74f..7a7d8a2508 100644
--- a/java/org/apache/tomcat/util/net/NioEndpoint.java
+++ b/java/org/apache/tomcat/util/net/NioEndpoint.java
@@ -1105,10 +1105,16 @@ public class NioEndpoint extends AbstractJsseEndpoint<NioChannel,SocketChannel>
             if (to.remaining() >= limit) {
                 to.limit(to.position() + limit);
                 nRead = fillReadBuffer(block, to);
+                if (log.isDebugEnabled()) {
+                    log.debug("Socket: [" + this + "], Read direct from socket: [" + nRead + "]");
+                }
                 updateLastRead();
             } else {
                 // Fill the read buffer as best we can.
                 nRead = fillReadBuffer(block);
+                if (log.isDebugEnabled()) {
+                    log.debug("Socket: [" + this + "], Read into buffer: [" + nRead + "]");
+                }
                 updateLastRead();
 
                 // Fill as much of the remaining byte array as possible with the

==================================================
SecureNioChannel.java
index acf0aca4a7..0b5d83589f 100644
--- a/java/org/apache/tomcat/util/net/SecureNio2Channel.java
+++ b/java/org/apache/tomcat/util/net/SecureNio2Channel.java
@@ -397,7 +397,7 @@ public class SecureNio2Channel extends Nio2Channel  {
         }
 
         if (log.isDebugEnabled()) {
-            log.debug(sm.getString("channel.nio.ssl.sniHostName", hostName));
+            log.debug(sm.getString("channel.nio.ssl.sniHostName", sc, hostName));
         }
 
         sslEngine = endpoint.createSSLEngine(hostName, clientRequestedCiphers,

==================================================
