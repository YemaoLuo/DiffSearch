d95b769b4fc5d52f63b95a9835f570d4e4e947d8
==================================================
Fix Javadoc related build failure when building with Java 19
==================================================
Mark Thomas
==================================================
Thu Oct 20 15:01:21 2022 +0100
==================================================
ELResolver.java
Fix Javadoc related build failure when building with Java 19


==================================================
ImportELResolver.java
index 09bb98b01f..f33d3dd25e 100644
--- a/java/jakarta/el/ELResolver.java
+++ b/java/jakarta/el/ELResolver.java
@@ -27,6 +27,9 @@ public abstract class ELResolver {
     public static final String RESOLVABLE_AT_DESIGN_TIME = "resolvableAtDesignTime";
 
     /**
+     * Obtain the value of the given property on the given object using the
+     * given context.
+     *
      * @param context The EL context for this evaluation
      * @param base The base object on which the property is to be found
      * @param property The property whose value is to be returned
@@ -63,6 +66,9 @@ public abstract class ELResolver {
     }
 
     /**
+     * Obtain the type of the given property on the given object using the given
+     * context.
+     *
      * @param context The EL context for this evaluation
      * @param base The base object on which the property is to be found
      * @param property The property whose type is to be returned
@@ -80,6 +86,9 @@ public abstract class ELResolver {
             Object property);
 
     /**
+     * Set the value of the given property on the given object using the given
+     * context.
+     *
      * @param context  The EL context for this evaluation
      * @param base     The base object on which the property is to be found
      * @param property The property whose value is to be set
@@ -100,6 +109,9 @@ public abstract class ELResolver {
             Object property, Object value);
 
     /**
+     * Determine if the given property on the given object is read-only using
+     * the given context.
+     *
      * @param context The EL context for this evaluation
      * @param base The base object on which the property is to be found
      * @param property The property to be checked for read only status

==================================================
NotFoundELResolver.java
index 6e2cd81f75..38b3a26d7e 100644
--- a/java/jakarta/servlet/jsp/el/ImportELResolver.java
+++ b/java/jakarta/servlet/jsp/el/ImportELResolver.java
@@ -45,6 +45,13 @@ public class ImportELResolver extends ELResolver {
         AST_IDENTIFIER_KEY = key;
     }
 
+    /**
+     * Default constructor.
+     */
+    public ImportELResolver() {
+        super();
+    }
+
     @Override
     public Object getValue(ELContext context, Object base, Object property) {
         Objects.requireNonNull(context);

==================================================
ScopedAttributeELResolver.java
index 23645abd6f..2849bad38b 100644
--- a/java/jakarta/servlet/jsp/el/NotFoundELResolver.java
+++ b/java/jakarta/servlet/jsp/el/NotFoundELResolver.java
@@ -34,6 +34,13 @@ public class NotFoundELResolver extends ELResolver {
     private static final String LSTRING_FILE = "jakarta.servlet.jsp.LocalStrings";
     private static final ResourceBundle lStrings = ResourceBundle.getBundle(LSTRING_FILE);
 
+    /**
+     * Default constructor.
+     */
+    public NotFoundELResolver() {
+        super();
+    }
+
     /**
      * {@inheritDoc}
      * <p>

==================================================
JspFragment.java
index 5908a4832c..2ec39ca7e5 100644
--- a/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java
+++ b/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java
@@ -24,11 +24,20 @@ import jakarta.servlet.jsp.JspContext;
 import jakarta.servlet.jsp.PageContext;
 
 /**
+ * An ELResolver for working with JSP scoped attributes which may have page,
+ * request, session or application scope.
  *
  * @since JSP 2.1
  */
 public class ScopedAttributeELResolver extends ELResolver {
 
+    /**
+     * Default constructor.
+     */
+    public ScopedAttributeELResolver() {
+        super();
+    }
+
     @Override
     public Object getValue(ELContext context, Object base, Object property) {
         Objects.requireNonNull(context);

==================================================
