f1c7494b0890f60c20e66ba4dd0c0b58d5f424a1
==================================================
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=58284
==================================================
Mark Thomas
==================================================
Mon Sep 21 15:23:18 2015 +0000
==================================================
DeltaSession.java
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=58284
Correctly implement session serialization so non-serializable attributes are skipped with a warning.
Patch provided by Andrew Shore.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1704318 13f79535-47bb-0310-9956-ffa450edef68



==================================================
StandardSession.java
index 652d2828f3..7b6bda8b89 100644
--- a/java/org/apache/catalina/ha/session/DeltaSession.java
+++ b/java/org/apache/catalina/ha/session/DeltaSession.java
@@ -24,6 +24,7 @@ import java.io.ObjectInputStream;
 import java.io.ObjectOutput;
 import java.io.ObjectOutputStream;
 import java.io.Serializable;
+import java.io.WriteAbortedException;
 import java.security.Principal;
 import java.util.ArrayList;
 import java.util.Hashtable;
@@ -771,9 +772,16 @@ public class DeltaSession extends StandardSession implements Externalizable,Clus
         isValid = true;
         for (int i = 0; i < n; i++) {
             String name = (String) stream.readObject();
-            Object value = stream.readObject();
-            if ( (value instanceof String) && (value.equals(NOT_SERIALIZED)))
-                continue;
+            final Object value;
+            try {
+                value = stream.readObject();
+            } catch (WriteAbortedException wae) {
+                if (wae.getCause() instanceof NotSerializableException) {
+                    // Skip non serializable attributes
+                    continue;
+                }
+                throw wae;
+            }
             attributes.put(name, value);
         }
         isValid = isValidSave;
@@ -871,9 +879,7 @@ public class DeltaSession extends StandardSession implements Externalizable,Clus
             try {
                 stream.writeObject(saveValues.get(i));
             } catch (NotSerializableException e) {
-                log.error(sm.getString("standardSession.notSerializable",saveNames.get(i), id), e);
-                stream.writeObject(NOT_SERIALIZED);
-                log.error("  storing attribute '" + saveNames.get(i)+ "' with value NOT_SERIALIZED");
+                log.error(sm.getString("standardSession.notSerializable", saveNames.get(i), id), e);
             }
         }
 

==================================================
TestStandardSession.java
index e6c10336b2..4cdf8ab838 100644
--- a/java/org/apache/catalina/session/StandardSession.java
+++ b/java/org/apache/catalina/session/StandardSession.java
@@ -22,6 +22,7 @@ import java.io.NotSerializableException;
 import java.io.ObjectInputStream;
 import java.io.ObjectOutputStream;
 import java.io.Serializable;
+import java.io.WriteAbortedException;
 import java.security.AccessController;
 import java.security.Principal;
 import java.security.PrivilegedAction;
@@ -140,14 +141,6 @@ public class StandardSession implements HttpSession, Session, Serializable {
     protected static final String EMPTY_ARRAY[] = new String[0];
 
 
-    /**
-     * The dummy attribute value serialized when a NotSerializableException is
-     * encountered in <code>writeObject()</code>.
-     */
-    protected static final String NOT_SERIALIZED =
-        "___NOT_SERIALIZABLE_EXCEPTION___";
-
-
     /**
      * The collection of user data attributes associated with this Session.
      */
@@ -1631,9 +1624,16 @@ public class StandardSession implements HttpSession, Session, Serializable {
         isValid = true;
         for (int i = 0; i < n; i++) {
             String name = (String) stream.readObject();
-            Object value = stream.readObject();
-            if ((value instanceof String) && (value.equals(NOT_SERIALIZED)))
-                continue;
+            final Object value;
+            try {
+                value = stream.readObject();
+            } catch (WriteAbortedException wae) {
+                if (wae.getCause() instanceof NotSerializableException) {
+                    // Skip non serializable attributes
+                    continue;
+                }
+                throw wae;
+            }
             if (manager.getContext().getLogger().isDebugEnabled())
                 manager.getContext().getLogger().debug("  loading attribute '" + name +
                     "' with value '" + value + "'");
@@ -1709,18 +1709,11 @@ public class StandardSession implements HttpSession, Session, Serializable {
             try {
                 stream.writeObject(saveValues.get(i));
                 if (manager.getContext().getLogger().isDebugEnabled())
-                    manager.getContext().getLogger().debug
-                        ("  storing attribute '" + saveNames.get(i) +
-                        "' with value '" + saveValues.get(i) + "'");
+                    manager.getContext().getLogger().debug(
+                            "  storing attribute '" + saveNames.get(i) + "' with value '" + saveValues.get(i) + "'");
             } catch (NotSerializableException e) {
-                manager.getContext().getLogger().warn
-                    (sm.getString("standardSession.notSerializable",
-                     saveNames.get(i), id), e);
-                stream.writeObject(NOT_SERIALIZED);
-                if (manager.getContext().getLogger().isDebugEnabled())
-                    manager.getContext().getLogger().debug
-                       ("  storing attribute '" + saveNames.get(i) +
-                        "' with value NOT_SERIALIZED");
+                manager.getContext().getLogger().warn(
+                        sm.getString("standardSession.notSerializable", saveNames.get(i), id), e);
             }
         }
 

==================================================
