b05bf48551bb8845c63009cf9646f55c9632f499
==================================================
More renaming since the extractor will be used to extract more than just the SNI information
==================================================
Mark Thomas
==================================================
Fri Jun 19 13:26:52 2015 +0000
==================================================
SecureNio2Channel.java
More renaming since the extractor will be used to extract more than just the SNI information

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1686410 13f79535-47bb-0310-9956-ffa450edef68



==================================================
SecureNioChannel.java
index 7a3f20393a..fa2a397bde 100644
--- a/java/org/apache/tomcat/util/net/SecureNio2Channel.java
+++ b/java/org/apache/tomcat/util/net/SecureNio2Channel.java
@@ -36,7 +36,7 @@ import javax.net.ssl.SSLException;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.buf.ByteBufferUtils;
-import org.apache.tomcat.util.net.TLSClientHelloExtractor.SNIResult;
+import org.apache.tomcat.util.net.TLSClientHelloExtractor.ExtractorResult;
 import org.apache.tomcat.util.res.StringManager;
 
 /**
@@ -316,7 +316,7 @@ public class SecureNio2Channel extends Nio2Channel  {
 
         TLSClientHelloExtractor extractor = new TLSClientHelloExtractor(netInBuffer);
 
-        while (extractor.getResult() == SNIResult.UNDERFLOW &&
+        while (extractor.getResult() == ExtractorResult.UNDERFLOW &&
                 netInBuffer.capacity() < endpoint.getSniParseLimit()) {
             // extractor needed more data to process but netInBuffer was full so
             // expand the buffer and read some more data.
@@ -331,7 +331,7 @@ public class SecureNio2Channel extends Nio2Channel  {
 
         String hostName = null;
         switch (extractor.getResult()) {
-        case FOUND:
+        case COMPLETE:
             hostName = extractor.getSNIValue();
             break;
         case NOT_PRESENT:

==================================================
TLSClientHelloExtractor.java
index a7c2ed68c2..8a6c4fce78 100644
--- a/java/org/apache/tomcat/util/net/SecureNioChannel.java
+++ b/java/org/apache/tomcat/util/net/SecureNioChannel.java
@@ -33,7 +33,7 @@ import javax.net.ssl.SSLException;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.buf.ByteBufferUtils;
-import org.apache.tomcat.util.net.TLSClientHelloExtractor.SNIResult;
+import org.apache.tomcat.util.net.TLSClientHelloExtractor.ExtractorResult;
 import org.apache.tomcat.util.res.StringManager;
 
 /**
@@ -254,7 +254,7 @@ public class SecureNioChannel extends NioChannel  {
         sc.read(netInBuffer);
         TLSClientHelloExtractor extractor = new TLSClientHelloExtractor(netInBuffer);
 
-        while (extractor.getResult() == SNIResult.UNDERFLOW &&
+        while (extractor.getResult() == ExtractorResult.UNDERFLOW &&
                 netInBuffer.capacity() < endpoint.getSniParseLimit()) {
             // extractor needed more data to process but netInBuffer was full so
             // expand the buffer and read some more data.
@@ -269,7 +269,7 @@ public class SecureNioChannel extends NioChannel  {
 
         String hostName = null;
         switch (extractor.getResult()) {
-        case FOUND:
+        case COMPLETE:
             hostName = extractor.getSNIValue();
             break;
         case NOT_PRESENT:

==================================================
