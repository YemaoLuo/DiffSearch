c00c57af0358ee8ac61551784653a5a7c4a53eae
==================================================
Simplify ActionCode.SET_READ_LISTENER
==================================================
Mark Emlyn
==================================================
Mon Apr 29 20:01:59 2013 +0000
==================================================
CoyoteOutputStream.java
Simplify ActionCode.SET_READ_LISTENER
Add missing tests when setting a non-blocking ReadListener and use i18n for all exception messages if a test fails

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1477306 13f79535-47bb-0310-9956-ffa450edef68



==================================================
OutputBuffer.java
index 64272c9db4..6f6c69b926 100644
--- a/java/org/apache/catalina/connector/LocalStrings.properties
+++ b/java/org/apache/catalina/connector/LocalStrings.properties
@@ -62,6 +62,10 @@ inputBuffer.notAsync=It is only valid to switch to non-blocking IO within async
 inputBuffer.nullListener=The listener passed to setReadListener() may not be null
 inputBuffer.streamClosed=Stream closed
 
+outputBuffer.listenerSet=The non-blocking write listener has already been set
+outputBuffer.notAsync=It is only valid to switch to non-blocking IO within async processing or HTTP upgrade processing
+outputBuffer.nullListener=The listener passed to setWriteListener() may not be null
+
 requestFacade.nullRequest=The request object has been recycled and is no longer associated with this facade
 
 responseFacade.nullResponse=The response object has been recycled and is no longer associated with this facade

==================================================
Http11NioProcessor.java
index 8c265b448e..9a30ea26ee 100644
--- a/java/org/apache/catalina/connector/OutputBuffer.java
+++ b/java/org/apache/catalina/connector/OutputBuffer.java
@@ -33,6 +33,7 @@ import org.apache.coyote.Response;
 import org.apache.tomcat.util.buf.ByteChunk;
 import org.apache.tomcat.util.buf.C2BConverter;
 import org.apache.tomcat.util.buf.CharChunk;
+import org.apache.tomcat.util.res.StringManager;
 
 
 /**
@@ -46,9 +47,11 @@ import org.apache.tomcat.util.buf.CharChunk;
 public class OutputBuffer extends Writer
     implements ByteChunk.ByteOutputChannel, CharChunk.CharOutputChannel {
 
+    private static final StringManager sm =
+            StringManager.getManager(Constants.Package);
 
-    // -------------------------------------------------------------- Constants
 
+    // -------------------------------------------------------------- Constants
 
     public static final String DEFAULT_ENCODING =
         org.apache.coyote.Constants.DEFAULT_CHARACTER_ENCODING;
@@ -57,7 +60,6 @@ public class OutputBuffer extends Writer
 
     // ----------------------------------------------------- Instance Variables
 
-
     /**
      * The byte buffer.
      */
@@ -664,9 +666,26 @@ public class OutputBuffer extends Writer
 
     private volatile WriteListener listener;
     public void setWriteListener(WriteListener listener) {
-        if (getWriteListener()!=null) throw new IllegalStateException("Write listener already set.");
+        if (listener == null) {
+            throw new NullPointerException(
+                    sm.getString("outputBuffer.nullListener"));
+        }
+        if (getWriteListener() != null) {
+            throw new IllegalStateException(
+                    sm.getString("outputBuffer.listenerSet"));
+        }
+        // Note: This class is not used for HTTP upgrade so only need to test
+        //       for async
+        AtomicBoolean result = new AtomicBoolean(false);
+        coyoteResponse.action(ActionCode.ASYNC_IS_ASYNC, result);
+        if (!result.get()) {
+            throw new IllegalStateException(
+                    sm.getString("outputBuffer.notAsync"));
+        }
+
         this.listener = listener;
-        coyoteResponse.action(ActionCode.SET_WRITE_LISTENER, listener);
+        coyoteResponse.setWriteListener(listener);
+        coyoteResponse.action(ActionCode.SET_WRITE_LISTENER, null);
     }
 
     public WriteListener getWriteListener() {

==================================================
