804f6c61e05ffe37e950e88fedcfa26e6f105287
==================================================
Configure cluster tests to use localhost.
==================================================
Mark Thomas
==================================================
Sat Nov 6 16:44:29 2021 +0000
==================================================
TestGroupChannelMemberArrival.java
Configure cluster tests to use localhost.

These tests are failing on ci2.a.o - hopefully this will fix it.


==================================================
TestGroupChannelSenderConnections.java
index 8d8dba1073..495b020751 100644
--- a/test/org/apache/catalina/tribes/group/TestGroupChannelMemberArrival.java
+++ b/test/org/apache/catalina/tribes/group/TestGroupChannelMemberArrival.java
@@ -28,6 +28,7 @@ import org.apache.catalina.tribes.ManagedChannel;
 import org.apache.catalina.tribes.Member;
 import org.apache.catalina.tribes.MembershipListener;
 import org.apache.catalina.tribes.TesterUtil;
+import org.apache.catalina.tribes.transport.ReceiverBase;
 
 public class TestGroupChannelMemberArrival {
     private static int count = 10;
@@ -38,6 +39,7 @@ public class TestGroupChannelMemberArrival {
     public void setUp() throws Exception {
         for (int i = 0; i < channels.length; i++) {
             channels[i] = new GroupChannel();
+            ((ReceiverBase) channels[i].getChannelReceiver()).setHost("localhost");
             channels[i].getMembershipService().setPayload( ("Channel-" + (i + 1)).getBytes("ASCII"));
             listeners[i] = new TestMbrListener( ("Listener-" + (i + 1)));
             channels[i].addMembershipListener(listeners[i]);

==================================================
TestGroupChannelStartStop.java
index 61941b4c16..62fc35f5c5 100644
--- a/test/org/apache/catalina/tribes/group/TestGroupChannelSenderConnections.java
+++ b/test/org/apache/catalina/tribes/group/TestGroupChannelSenderConnections.java
@@ -33,6 +33,7 @@ import org.apache.catalina.tribes.ChannelListener;
 import org.apache.catalina.tribes.ManagedChannel;
 import org.apache.catalina.tribes.Member;
 import org.apache.catalina.tribes.TesterUtil;
+import org.apache.catalina.tribes.transport.ReceiverBase;
 import org.apache.catalina.tribes.transport.ReplicationTransmitter;
 
 public class TestGroupChannelSenderConnections extends LoggingBaseTest {
@@ -46,6 +47,7 @@ public class TestGroupChannelSenderConnections extends LoggingBaseTest {
         super.setUp();
         for (int i = 0; i < channels.length; i++) {
             channels[i] = new GroupChannel();
+            ((ReceiverBase) channels[i].getChannelReceiver()).setHost("localhost");
             channels[i].getMembershipService().setPayload( ("Channel-" + (i + 1)).getBytes("ASCII"));
             listeners[i] = new TestMsgListener( ("Listener-" + (i + 1)));
             channels[i].addChannelListener(listeners[i]);

==================================================
TestNonBlockingCoordinator.java
index 19f825e928..7fc63e7b6c 100644
--- a/test/org/apache/catalina/tribes/group/TestGroupChannelStartStop.java
+++ b/test/org/apache/catalina/tribes/group/TestGroupChannelStartStop.java
@@ -34,6 +34,7 @@ public class TestGroupChannelStartStop {
     @Before
     public void setUp() throws Exception {
         channel = new GroupChannel();
+        ((ReceiverBase) channel.getChannelReceiver()).setHost("localhost");
     }
 
     @After

==================================================
TestOrderInterceptor.java
index f196a7aafb..1ad80db300 100644
--- a/test/org/apache/catalina/tribes/group/interceptors/TestNonBlockingCoordinator.java
+++ b/test/org/apache/catalina/tribes/group/interceptors/TestNonBlockingCoordinator.java
@@ -28,6 +28,7 @@ import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.Member;
 import org.apache.catalina.tribes.TesterUtil;
 import org.apache.catalina.tribes.group.GroupChannel;
+import org.apache.catalina.tribes.transport.ReceiverBase;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 
@@ -51,6 +52,7 @@ public class TestNonBlockingCoordinator {
             Thread[] threads = new Thread[CHANNEL_COUNT];
             for ( int i=0; i<CHANNEL_COUNT; i++ ) {
                 channels[i] = new GroupChannel();
+                ((ReceiverBase) channels[i].getChannelReceiver()).setHost("localhost");
                 coordinators[i] = new NonBlockingCoordinator();
                 channels[i].addInterceptor(coordinators[i]);
                 TcpFailureDetector tcpFailureDetector = new TcpFailureDetector();

==================================================
TestTcpFailureDetector.java
index 501ee6872c..824a4ce1e6 100644
--- a/test/org/apache/catalina/tribes/group/interceptors/TestOrderInterceptor.java
+++ b/test/org/apache/catalina/tribes/group/interceptors/TestOrderInterceptor.java
@@ -35,6 +35,7 @@ import org.apache.catalina.tribes.TesterUtil;
 import org.apache.catalina.tribes.group.ChannelInterceptorBase;
 import org.apache.catalina.tribes.group.GroupChannel;
 import org.apache.catalina.tribes.group.InterceptorPayload;
+import org.apache.catalina.tribes.transport.ReceiverBase;
 
 public class TestOrderInterceptor {
 
@@ -55,7 +56,7 @@ public class TestOrderInterceptor {
         threads = new Thread[channelCount];
         for ( int i=0; i<channelCount; i++ ) {
             channels[i] = new GroupChannel();
-
+            ((ReceiverBase) channels[i].getChannelReceiver()).setHost("localhost");
             orderitcs[i] = new OrderInterceptor();
             mangleitcs[i] = new MangleOrderInterceptor();
             orderitcs[i].setExpire(Long.MAX_VALUE);

==================================================
