d47d872b323f360073e8b8aae397ffff833d73de
==================================================
BZ 64621: Improve handling of HTTP/2 stream resets form client
==================================================
Mark Thomas
==================================================
Mon Aug 17 18:51:11 2020 +0100
==================================================
Http2UpgradeHandler.java
BZ 64621: Improve handling of HTTP/2 stream resets form client


==================================================
Stream.java
index f9ef251712..fadfa0fabe 100644
--- a/java/org/apache/coyote/http2/LocalStrings.properties
+++ b/java/org/apache/coyote/http2/LocalStrings.properties
@@ -74,6 +74,7 @@ http2Parser.swallow.debug=Connection [{0}], Stream [{1}], Swallowed [{2}] bytes
 
 pingManager.roundTripTime=Connection [{0}] Round trip time measured as [{1}]ns
 
+stream.clientAbort=Client reset the stream before the response was complete
 stream.closed=Connection [{0}], Stream [{1}], Unable to write to stream once it has been closed
 stream.header.case=Connection [{0}], Stream [{1}], HTTP header name [{2}] must be in lower case
 stream.header.connection=Connection [{0}], Stream [{1}], HTTP header [connection] is not permitted in an HTTP/2 request

==================================================
TestHttp2Section_5_1.java
index 8b0a5011e4..fbc550ad49 100644
--- a/java/org/apache/coyote/http2/Stream.java
+++ b/java/org/apache/coyote/http2/Stream.java
@@ -275,7 +275,7 @@ class Stream extends AbstractStream implements HeaderEmitter {
                     allocationManager.waitForStream(writeTimeout);
                     windowSize = getWindowSize();
                     if (windowSize == 0) {
-                        doWriteTimeout();
+                        doStreamAbort(sm.getString("stream.writeTimeout"), Http2Error.ENHANCE_YOUR_CALM);
                     }
                 } catch (InterruptedException e) {
                     // Possible shutdown / rst or similar. Use an IOException to
@@ -299,10 +299,8 @@ class Stream extends AbstractStream implements HeaderEmitter {
     }
 
 
-    void doWriteTimeout() throws CloseNowException {
-        String msg = sm.getString("stream.writeTimeout");
-        StreamException se = new StreamException(
-                msg, Http2Error.ENHANCE_YOUR_CALM, getIdAsInt());
+    void doStreamAbort(String msg, Http2Error error) throws CloseNowException {
+        StreamException se = new StreamException(msg, error, getIdAsInt());
         // Prevent the application making further writes
         streamOutputBuffer.closed = true;
         // Prevent Tomcat's error handling trying to write

==================================================
