0bce2c3ad520d68862fb40142bfccdaac1e34ac2
==================================================
Implement method invocation with parameters
==================================================
Mark Emlyn
==================================================
Wed Jan 13 18:02:36 2010 +0000
==================================================
AstBracketSuffix.java
Implement method invocation with parameters

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@898864 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AstDotSuffix.java
index 93216a0122..9f5d792b22 100644
--- a/java/org/apache/el/parser/AstBracketSuffix.java
+++ b/java/org/apache/el/parser/AstBracketSuffix.java
@@ -27,7 +27,7 @@ import org.apache.el.lang.EvaluationContext;
  * @author Jacob Hookom [jacob@hookom.net]
  * @version $Change: 181177 $$Date$$Author$
  */
-public final class AstBracketSuffix extends SimpleNode {
+public final class AstBracketSuffix extends SimpleNode implements Suffix {
     public AstBracketSuffix(int id) {
         super(id);
     }

==================================================
AstValue.java
index ea64fec019..2eaaac200f 100644
--- a/java/org/apache/el/parser/AstDotSuffix.java
+++ b/java/org/apache/el/parser/AstDotSuffix.java
@@ -27,7 +27,7 @@ import org.apache.el.lang.EvaluationContext;
  * @author Jacob Hookom [jacob@hookom.net]
  * @version $Change: 181177 $$Date$$Author$
  */
-public final class AstDotSuffix extends SimpleNode {
+public final class AstDotSuffix extends SimpleNode implements Suffix {
     public AstDotSuffix(int id) {
         super(id);
     }

==================================================
Suffix.java
index d559ee9419..cd52ebfcfc 100644
--- a/java/org/apache/el/parser/ELParser.jjt
+++ b/java/org/apache/el/parser/ELParser.jjt
@@ -227,7 +227,7 @@ void ValuePrefix() : {}
  */
 void ValueSuffix() : {}
 {
-    DotSuffix() | BracketSuffix()
+    ( DotSuffix() | BracketSuffix() ) ( MethodParameters())?
 }
 
 /*
@@ -248,6 +248,14 @@ void BracketSuffix() #BracketSuffix : {}
     <LBRACK> Expression() <RBRACK>
 }
 
+/*
+ * MethodParameters
+ */
+void MethodParameters() : {}
+{
+    <LPAREN> ( Expression() ( <COMMA> Expression())* )? <RPAREN>
+}
+
 /*
  * NonLiteral
  * For Grouped Operations, Identifiers, and Functions

==================================================
