8429bcf7a6a0978940b13d80e80297a53f6a28ff
==================================================
Fix IDE warnings
==================================================
Mark Thomas
==================================================
Tue May 9 20:32:29 2023 +0100
==================================================
RateLimitFilter.java
Fix IDE warnings


==================================================
TimeBucketCounter.java
index b4da01393d..94e615452a 100644
--- a/java/org/apache/catalina/filters/RateLimitFilter.java
+++ b/java/org/apache/catalina/filters/RateLimitFilter.java
@@ -75,6 +75,8 @@ import org.apache.tomcat.util.res.StringManager;
  */
 public class RateLimitFilter extends GenericFilter {
 
+    private static final long serialVersionUID = 1L;
+
     /**
      * default duration in seconds
      */
@@ -198,8 +200,9 @@ public class RateLimitFilter extends GenericFilter {
         actualRequests = (int) Math.round(bucketCounter.getRatio() * bucketRequests);
 
         log.info(sm.getString("rateLimitFilter.initialized",
-            super.getFilterName(), bucketRequests, bucketDuration, getActualRequests(),
-            getActualDurationInSeconds(), (!enforce ? "Not " : "") + "enforcing")
+            super.getFilterName(), Integer.valueOf(bucketRequests), Integer.valueOf(bucketDuration),
+            Integer.valueOf(getActualRequests()), Integer.valueOf(getActualDurationInSeconds()),
+            (!enforce ? "Not " : "") + "enforcing")
         );
     }
 
@@ -210,13 +213,14 @@ public class RateLimitFilter extends GenericFilter {
         String ipAddr = request.getRemoteAddr();
         int reqCount = bucketCounter.increment(ipAddr);
 
-        request.setAttribute(RATE_LIMIT_ATTRIBUTE_COUNT, reqCount);
+        request.setAttribute(RATE_LIMIT_ATTRIBUTE_COUNT, Integer.valueOf(reqCount));
 
         if (enforce && (reqCount > actualRequests)) {
 
             ((HttpServletResponse) response).sendError(statusCode, statusMessage);
             log.warn(sm.getString("rateLimitFilter.maxRequestsExceeded",
-                super.getFilterName(), reqCount, ipAddr, getActualRequests(), getActualDurationInSeconds())
+                super.getFilterName(), Integer.valueOf(reqCount), ipAddr, Integer.valueOf(getActualRequests()),
+                Integer.valueOf(getActualDurationInSeconds()))
             );
 
             return;

==================================================
TestRateLimitFilter.java
index bd5e70fcb4..4c1974242e 100644
--- a/java/org/apache/catalina/util/TimeBucketCounter.java
+++ b/java/org/apache/catalina/util/TimeBucketCounter.java
@@ -182,6 +182,7 @@ public class TimeBucketCounter {
             this.sleeptime = sleeptime;
         }
 
+        @SuppressWarnings("sync-override")
         @Override
         public void start() {
             isRunning = true;

==================================================
