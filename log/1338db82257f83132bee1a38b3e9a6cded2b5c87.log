1338db82257f83132bee1a38b3e9a6cded2b5c87
==================================================
Implement third part of pull request from Greg Wilkins to make Jasper more independent from Tomcat.
==================================================
Mark Emlyn
==================================================
Mon May 26 17:52:57 2014 +0000
==================================================
JasperInitializer.java
Implement third part of pull request from Greg Wilkins to make Jasper more independent from Tomcat.
Add support for using an existing list of TLDs rather than scanning for them
This closes #4

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1597617 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TldPreScanned.java
index 4acc3b342e..32a85256e2 100644
--- a/java/org/apache/jasper/servlet/JasperInitializer.java
+++ b/java/org/apache/jasper/servlet/JasperInitializer.java
@@ -98,7 +98,7 @@ public class JasperInitializer implements ServletContainerInitializer {
         }
 
         // scan the application for TLDs
-        TldScanner scanner = new TldScanner(context, true, validate, blockExternal);
+        TldScanner scanner = newTldScanner(context, true, validate, blockExternal);
         try {
             scanner.scan();
         } catch (IOException | SAXException e) {
@@ -114,4 +114,9 @@ public class JasperInitializer implements ServletContainerInitializer {
                 new TldCache(context, scanner.getUriTldResourcePathMap(),
                         scanner.getTldResourcePathTaglibXmlMap()));
     }
+
+    protected TldScanner newTldScanner(ServletContext context, boolean namespaceAware,
+            boolean validate, boolean blockExternal) {
+        return new TldScanner(context, namespaceAware, validate, blockExternal);
+    }
 }

==================================================
TldScanner.java
new file mode 100644
index 0000000000..a1f96bd6b8
--- /dev/null
+++ b/java/org/apache/jasper/servlet/TldPreScanned.java
@@ -0,0 +1,55 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.jasper.servlet;
+
+import java.net.URL;
+import java.util.Collection;
+
+import javax.servlet.ServletContext;
+
+import org.apache.tomcat.util.descriptor.tld.TldResourcePath;
+
+public class TldPreScanned extends TldScanner {
+
+    private final Collection<URL> preScannedURLs;
+
+    public TldPreScanned (ServletContext context, boolean namespaceAware, boolean validation,
+            boolean blockExternal, Collection<URL> preScannedTlds) {
+        super(context, namespaceAware, validation, blockExternal);
+        preScannedURLs = preScannedTlds;
+    }
+
+    @Override
+    public void scanJars() {
+        for (URL url : preScannedURLs){
+            String str = url.toExternalForm();
+            int a = str.indexOf("jar:");
+            int b = str.indexOf("!/");
+            if (a >= 0 && b> 0) {
+                String fileUrl = str.substring(a + 4, b);
+                String path = str.substring(b + 2);
+                try {
+                    parseTld(new TldResourcePath(new URL(fileUrl), null, path));
+                } catch (Exception e) {
+                    throw new IllegalStateException(e);
+                }
+            } else {
+                throw new IllegalStateException("Bad tld url: "+str);
+            }
+        }
+    }
+}
\ No newline at end of file

==================================================
