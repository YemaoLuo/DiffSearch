5b8dd06f29ca9be202c7101d66731233cd196f03
==================================================
Simplify constructors. No functional change.
==================================================
Mark Emlyn
==================================================
Wed Sep 10 22:41:48 2014 +0000
==================================================
ConstantClass.java
Simplify constructors. No functional change.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1624162 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ConstantDouble.java
index abe3215089..463579bfff 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantClass.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ConstantClass.java
@@ -43,17 +43,8 @@ public final class ConstantClass extends Constant {
      * @throws IOException
      */
     ConstantClass(DataInput file) throws IOException {
-        this(file.readUnsignedShort());
-    }
-
-
-    /**
-     * @param name_index Name index in constant pool.  Should refer to a
-     * ConstantUtf8.
-     */
-    public ConstantClass(int name_index) {
         super(Constants.CONSTANT_Class);
-        this.name_index = name_index;
+        this.name_index = file.readUnsignedShort();
     }
 
 

==================================================
ConstantFloat.java
index 1c2fbd88eb..0b2faf84c9 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantDouble.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ConstantDouble.java
@@ -36,15 +36,6 @@ public final class ConstantDouble extends Constant {
     private double bytes;
 
 
-    /**
-     * @param bytes Data
-     */
-    public ConstantDouble(double bytes) {
-        super(Constants.CONSTANT_Double);
-        this.bytes = bytes;
-    }
-
-
     /**
      * Initialize instance from file data.
      *
@@ -52,7 +43,8 @@ public final class ConstantDouble extends Constant {
      * @throws IOException
      */
     ConstantDouble(DataInput file) throws IOException {
-        this(file.readDouble());
+        super(Constants.CONSTANT_Double);
+        this.bytes = file.readDouble();
     }
 
 

==================================================
ConstantInteger.java
index ba6f68ee17..e20fe80661 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantFloat.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ConstantFloat.java
@@ -36,15 +36,6 @@ public final class ConstantFloat extends Constant {
     private float bytes;
 
 
-    /**
-     * @param bytes Data
-     */
-    public ConstantFloat(float bytes) {
-        super(Constants.CONSTANT_Float);
-        this.bytes = bytes;
-    }
-
-
     /**
      * Initialize instance from file data.
      *
@@ -52,7 +43,8 @@ public final class ConstantFloat extends Constant {
      * @throws IOException
      */
     ConstantFloat(DataInput file) throws IOException {
-        this(file.readFloat());
+        super(Constants.CONSTANT_Float);
+        this.bytes = file.readFloat();
     }
 
 

==================================================
ConstantLong.java
index 7fe6d57e4d..12fc460cfa 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantInteger.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ConstantInteger.java
@@ -36,15 +36,6 @@ public final class ConstantInteger extends Constant {
     private int bytes;
 
 
-    /**
-     * @param bytes Data
-     */
-    public ConstantInteger(int bytes) {
-        super(Constants.CONSTANT_Integer);
-        this.bytes = bytes;
-    }
-
-
     /**
      * Initialize instance from file data.
      *
@@ -52,7 +43,8 @@ public final class ConstantInteger extends Constant {
      * @throws IOException
      */
     ConstantInteger(DataInput file) throws IOException {
-        this(file.readInt());
+        super(Constants.CONSTANT_Integer);
+        this.bytes = file.readInt();
     }
 
 

==================================================
