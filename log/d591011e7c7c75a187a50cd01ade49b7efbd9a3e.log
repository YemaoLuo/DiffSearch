d591011e7c7c75a187a50cd01ade49b7efbd9a3e
==================================================
Rename methods and expand comments to make the code easier to follow.
==================================================
Mark Thomas
==================================================
Thu Aug 16 08:55:55 2018 +0000
==================================================
AprEndpoint.java
Rename methods and expand comments to make the code easier to follow.
Add some TODOs where it appears further work is required.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1838163 13f79535-47bb-0310-9956-ffa450edef68



==================================================
SocketWrapperBase.java
index 19e1f1b94b..2dac86fdb4 100644
--- a/java/org/apache/tomcat/util/net/AprEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AprEndpoint.java
@@ -2576,9 +2576,9 @@ public class AprEndpoint extends AbstractEndpoint<Long,Long> implements SNICallB
 
 
         @Override
-        protected void writeByteBufferBlocking(ByteBuffer from) throws IOException {
+        protected void writeBlockingDirect(ByteBuffer from) throws IOException {
             if (from.isDirect()) {
-                super.writeByteBufferBlocking(from);
+                super.writeBlockingDirect(from);
             } else {
                 // The socket write buffer capacity is socket.appWriteBufSize
                 ByteBuffer writeBuffer = socketBufferHandler.getWriteBuffer();
@@ -2598,9 +2598,9 @@ public class AprEndpoint extends AbstractEndpoint<Long,Long> implements SNICallB
 
 
         @Override
-        protected boolean writeByteBufferNonBlocking(ByteBuffer from) throws IOException {
+        protected boolean writeNonBlockingDirect(ByteBuffer from) throws IOException {
             if (from.isDirect()) {
-                return super.writeByteBufferNonBlocking(from);
+                return super.writeNonBlockingDirect(from);
             } else {
                 // The socket write buffer capacity is socket.appWriteBufSize
                 ByteBuffer writeBuffer = socketBufferHandler.getWriteBuffer();

==================================================
