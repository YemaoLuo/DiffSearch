f62ad6e2e5a593b89fae39ad17d314e5c2f82a1c
==================================================
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=57931
==================================================
Mark Thomas
==================================================
Tue May 19 11:02:24 2015 +0000
==================================================
SecureNio2Channel.java
index 943670453c..f2e3895459 100644
--- a/java/org/apache/tomcat/util/net/LocalStrings.properties
+++ b/java/org/apache/tomcat/util/net/LocalStrings.properties
@@ -93,6 +93,7 @@ channel.nio.ssl.remainingDataDuringClose=Remaining data in the network buffer, c
 channel.nio.ssl.pendingWriteDuringClose=Pending write, so remaining data in the network buffer, can't send SSL close message, force a close with close(true) instead
 channel.nio.ssl.invalidCloseState=Invalid close state, will not send network data.
 channel.nio.ssl.unwrapFail=Unable to unwrap data, invalid status [{0}]
+channel.nio.ssl.wrapException=Handshake failed during wrap
 channel.nio.ssl.wrapFail=Unable to wrap data, invalid status [{0}]
 channel.nio.ssl.incompleteHandshake=Handshake incomplete, you must complete handshake before reading data.
 channel.nio.ssl.closing=Channel is in closing state.

==================================================
SecureNioChannel.java
index ea588eeb4a..9332b38edd 100644
--- a/java/org/apache/tomcat/util/net/SecureNio2Channel.java
+++ b/java/org/apache/tomcat/util/net/SecureNio2Channel.java
@@ -223,10 +223,19 @@ public class SecureNio2Channel extends Nio2Channel  {
                 }
                 case NEED_WRAP: {
                     //perform the wrap function
-                    handshake = handshakeWrap();
-                    if (handshake.getStatus() == Status.OK){
+                    try {
+                        handshake = handshakeWrap();
+                    } catch (SSLException e) {
+                        if (log.isDebugEnabled()) {
+                            log.debug("channel.nio.ssl.wrapException", e);
+                        }
+                        handshake = handshakeWrap();
+                    }
+                    if (handshake.getStatus() == Status.OK) {
                         if (handshakeStatus == HandshakeStatus.NEED_TASK)
                             handshakeStatus = tasks();
+                    } else if (handshake.getStatus() == Status.CLOSED) {
+                        return -1;
                     } else {
                         //wrap should always work with our buffers
                         throw new IOException(sm.getString("channel.nio.ssl.unexpectedStatusDuringWrap", handshake.getStatus()));

==================================================
