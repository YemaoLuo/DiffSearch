912c9dffecf5e6788a9d8d74cb26e9f85c30b72e
==================================================
More plumbing for handling primitives. Still some bits missing.
==================================================
Mark Emlyn
==================================================
Fri Mar 22 22:01:21 2013 +0000
==================================================
Util.java
index 4ca88d2177..f938332f8b 100644
--- a/java/org/apache/tomcat/websocket/LocalStrings.properties
+++ b/java/org/apache/tomcat/websocket/LocalStrings.properties
@@ -15,6 +15,8 @@
 
 backgroundProcessManager.processFailed=A background process failed
 
+util.invalidType=Unable to coerce value [{0}] to type [{1}]. That type is not supported.
+
 # Note the wsFrame.* messages are used as close reasons in WebSocket control
 # frames and therefore must be 123 bytes (not characters) or less in length.
 # Messages are encoded using UTF-8 where a single character may be encoded in

==================================================
PojoMessageHandlerWholeText.java
index a52775cc67..6aa6252ed7 100644
--- a/java/org/apache/tomcat/websocket/pojo/LocalStrings.properties
+++ b/java/org/apache/tomcat/websocket/pojo/LocalStrings.properties
@@ -22,7 +22,6 @@ pojoMethodMapping.duplicateLastParam=Multiple boolean (last) parameters present
 pojoMethodMapping.duplicateMessageParam=Multiple message parameters present on the method [{0}] of class [{1}] that was annotated with OnMessage
 pojoMethodMapping.duplicatePongMessageParam=Multiple PongMessage parameters present on the method [{0}] of class [{1}] that was annotated with OnMessage
 pojoMethodMapping.duplicateSessionParam=Multiple session parameters present on the method [{0}] of class [{1}] that was annotated with OnMessage
-pojoMethodMapping.invalidType=Unable to coerce value [{0}] to type [{1}]. That type is not supported.
 pojoMethodMapping.noPayload=No payload parameter present on the method [{0}] of class [{1}] that was annotated with OnMessage
 pojoMethodMapping.onErrorNoThrowable=No Throwable parameter was present on the method [{0}] of class [{1}] that was annotated with OnError
 pojoMethodMapping.partialInputStream=Invalid InputStream and boolean parameters present on the method [{0}] of class [{1}] that was annotated with OnMessage

==================================================
PojoMethodMapping.java
index ff5b1351af..9eed5271ff 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerWholeText.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerWholeText.java
@@ -30,6 +30,8 @@ import javax.websocket.EndpointConfig;
 import javax.websocket.Session;
 
 import org.apache.tomcat.util.res.StringManager;
+import org.apache.tomcat.websocket.Util;
+
 
 /**
  * Text specific concrete implementation for handling whole messages.
@@ -41,12 +43,23 @@ public class PojoMessageHandlerWholeText
             StringManager.getManager(Constants.PACKAGE_NAME);
 
     private final List<Decoder> decoders = new ArrayList<>();
+    private final Class<?> primitiveType;
 
     public PojoMessageHandlerWholeText(Object pojo, Method method,
             Session session, EndpointConfig config, Object[] params,
             int indexPayload, boolean convert, int indexSession) {
         super(pojo, method, session, params, indexPayload, convert,
                 indexSession);
+
+        // Check for primitives
+        Class<?> type = method.getParameterTypes()[indexPayload];
+        if (Util.isPrimitive(type)) {
+            primitiveType = type;
+            return;
+        } else {
+            primitiveType = null;
+        }
+
         try {
             for (Class<? extends Decoder> decoderClazz : config.getDecoders()) {
                 if (Text.class.isAssignableFrom(decoderClazz)) {
@@ -70,6 +83,11 @@ public class PojoMessageHandlerWholeText
 
     @Override
     protected Object decode(String message) throws DecodeException {
+        // Handle primitives
+        if (primitiveType != null) {
+            return Util.coerceToType(primitiveType, message);
+        }
+        // Handle full decoders
         for (Decoder decoder : decoders) {
             if (decoder instanceof Text) {
                 if (((Text<?>) decoder).willDecode(message)) {

==================================================
