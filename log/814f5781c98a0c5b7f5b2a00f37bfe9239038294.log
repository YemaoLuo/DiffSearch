814f5781c98a0c5b7f5b2a00f37bfe9239038294
==================================================
Fix BZ 65317. Fix permessage-deflate with payloads of n*8192 bytes
==================================================
Mark Thomas
==================================================
Fri May 21 11:44:00 2021 +0100
==================================================
PerMessageDeflate.java
Fix BZ 65317. Fix permessage-deflate with payloads of n*8192 bytes

Based on a patch provided by Saksham Verma.
https://bz.apache.org/bugzilla/show_bug.cgi?id=65317


==================================================
TestPerMessageDeflate.java
index c101916d5b..95ff848b9d 100644
--- a/java/org/apache/tomcat/websocket/PerMessageDeflate.java
+++ b/java/org/apache/tomcat/websocket/PerMessageDeflate.java
@@ -197,7 +197,7 @@ public class PerMessageDeflate implements Transformation {
         int written;
         boolean usedEomBytes = false;
 
-        while (dest.remaining() > 0) {
+        while (dest.remaining() > 0 || usedEomBytes) {
             // Space available in destination. Try and fill it.
             try {
                 written = inflater.inflate(
@@ -210,12 +210,10 @@ public class PerMessageDeflate implements Transformation {
             dest.position(dest.position() + written);
 
             if (inflater.needsInput() && !usedEomBytes ) {
+                readBuffer.clear();
+                TransformationResult nextResult = next.getMoreData(opCode, fin, (rsv ^ RSV_BITMASK), readBuffer);
+                inflater.setInput(readBuffer.array(), readBuffer.arrayOffset(), readBuffer.position());
                 if (dest.hasRemaining()) {
-                    readBuffer.clear();
-                    TransformationResult nextResult =
-                            next.getMoreData(opCode, fin, (rsv ^ RSV_BITMASK), readBuffer);
-                    inflater.setInput(
-                            readBuffer.array(), readBuffer.arrayOffset(), readBuffer.position());
                     if (TransformationResult.UNDERFLOW.equals(nextResult)) {
                         return nextResult;
                     } else if (TransformationResult.END_OF_FRAME.equals(nextResult) &&
@@ -227,6 +225,11 @@ public class PerMessageDeflate implements Transformation {
                             return TransformationResult.END_OF_FRAME;
                         }
                     }
+                } else if (readBuffer.position() > 0) {
+                    return TransformationResult.OVERFLOW;
+                } else if (fin) {
+                    inflater.setInput(EOM_BYTES);
+                    usedEomBytes = true;
                 }
             } else if (written == 0) {
                 if (fin && (isServer && !clientContextTakeover ||

==================================================
