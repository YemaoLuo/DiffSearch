c3b57c9f809f8c9fdefcb9431682a18f6bae6ab9
==================================================
JASPIC updates (minus the AuthenticatorBase integration)
==================================================
Mark Thomas
==================================================
Thu Feb 11 23:25:41 2016 +0000
==================================================
Constants.java
JASPIC updates (minus the AuthenticatorBase integration)
Fix the wrapping and the register-session javaee7-samples tests

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1729925 13f79535-47bb-0310-9956-ffa450edef68



==================================================
CallbackHandlerImpl.java
index ff87d02462..ff732acaf0 100644
--- a/java/org/apache/catalina/authenticator/LocalStrings.properties
+++ b/java/org/apache/catalina/authenticator/LocalStrings.properties
@@ -19,6 +19,7 @@ authenticator.check.authorize=Authorizing connector provided user [{0}] via Tomc
 authenticator.check.authorizeFail=Realm did not recognise user [{0}]. Creating a Principal with that name and no roles.
 authenticator.check.found=Already authenticated [{0}]
 authenticator.check.sso=Not authenticated but SSO session ID [{0}] found. Attempting re-authentication.
+authenticator.jaspicCleanSubjectFail=Failed to clean JASPIC subject
 authenticator.formlogin=Invalid direct reference to form login page
 authenticator.loginFail=Login failed
 authenticator.manager=Exception initializing trust managers

==================================================
MessageInfoImpl.java
index 6687832390..135c04f43f 100644
--- a/java/org/apache/catalina/authenticator/jaspic/CallbackHandlerImpl.java
+++ b/java/org/apache/catalina/authenticator/jaspic/CallbackHandlerImpl.java
@@ -29,7 +29,6 @@ import javax.security.auth.callback.UnsupportedCallbackException;
 import javax.security.auth.message.callback.CallerPrincipalCallback;
 import javax.security.auth.message.callback.GroupPrincipalCallback;
 
-import org.apache.catalina.connector.Request;
 import org.apache.catalina.realm.GenericPrincipal;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
@@ -40,18 +39,12 @@ public class CallbackHandlerImpl implements CallbackHandler {
     private static final Log log = LogFactory.getLog(CallbackHandlerImpl.class);
     private static final StringManager sm = StringManager.getManager(CallbackHandlerImpl.class);
 
-    private Request request;
     private String name;
     private Principal principal;
     private Subject subject;
     private String[] groups;
 
 
-    public CallbackHandlerImpl(Request request) {
-        this.request = request;
-    }
-
-
     @Override
     public void handle(Callback[] callbacks) throws IOException, UnsupportedCallbackException {
         if (callbacks != null) {
@@ -74,19 +67,19 @@ public class CallbackHandlerImpl implements CallbackHandler {
             }
 
             // Create the GenericPrincipal
-            GenericPrincipal gp = getGenericPrincipal();
-            if (gp != null) {
-                request.setUserPrincipal(gp);
-
-                if (subject != null) {
-                    subject.getPrivateCredentials().add(gp);
-                }
+            Principal gp = getPrincipal();
+            if (subject != null && gp != null) {
+                subject.getPrivateCredentials().add(gp);
             }
         }
     }
 
 
-    public GenericPrincipal getGenericPrincipal() {
+    private Principal getPrincipal() {
+        // If the Principal is cached in the session JASPIC may simply return it
+        if (principal instanceof GenericPrincipal) {
+            return principal;
+        }
         String name = this.name;
         if (name == null && principal != null) {
             name = principal.getName();

==================================================
