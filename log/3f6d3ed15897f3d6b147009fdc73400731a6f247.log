3f6d3ed15897f3d6b147009fdc73400731a6f247
==================================================
Fix HTTP/2 compression error.
==================================================
Mark Thomas
==================================================
Sat Dec 24 17:52:22 2016 +0000
==================================================
ConnectionSettingsBase.java
Fix HTTP/2 compression error.
Once a new size has been agreed for the dynamic hapck table, the next header block must begin with a dynamic table update.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1775985 13f79535-47bb-0310-9956-ffa450edef68



==================================================
HpackEncoder.java
index 845d60ce92..7f7970d1b1 100644
--- a/java/org/apache/coyote/http2/ConnectionSettingsBase.java
+++ b/java/org/apache/coyote/http2/ConnectionSettingsBase.java
@@ -38,7 +38,7 @@ abstract class ConnectionSettingsBase<T extends Throwable> {
     static final int MAX_HEADER_TABLE_SIZE = 1 << 16;
 
     // Defaults
-    static final int DEFAULT_HEADER_TABLE_SIZE = 4096;
+    static final int DEFAULT_HEADER_TABLE_SIZE = Hpack.DEFAULT_TABLE_SIZE;
     static final boolean DEFAULT_ENABLE_PUSH = true;
     static final long DEFAULT_MAX_CONCURRENT_STREAMS = UNLIMITED;
     static final int DEFAULT_INITIAL_WINDOW_SIZE = (1 << 16) - 1;

==================================================
Http2UpgradeHandler.java
index 4686b7db9e..dda5714be8 100644
--- a/java/org/apache/coyote/http2/HpackEncoder.java
+++ b/java/org/apache/coyote/http2/HpackEncoder.java
@@ -95,7 +95,7 @@ class HpackEncoder {
     /**
      * The maximum table size
      */
-    private int maxTableSize;
+    private int maxTableSize = Hpack.DEFAULT_TABLE_SIZE;
 
     /**
      * The current table size
@@ -104,8 +104,7 @@ class HpackEncoder {
 
     private final HpackHeaderFunction hpackHeaderFunction;
 
-    HpackEncoder(int maxTableSize) {
-        this.maxTableSize = maxTableSize;
+    HpackEncoder() {
         this.hpackHeaderFunction = DEFAULT_HEADER_FUNCTION;
     }
 

==================================================
Http2TestBase.java
index 5cec345442..1afc6b685f 100644
--- a/java/org/apache/coyote/http2/Http2UpgradeHandler.java
+++ b/java/org/apache/coyote/http2/Http2UpgradeHandler.java
@@ -635,8 +635,10 @@ class Http2UpgradeHandler extends AbstractStream implements InternalHttpUpgradeH
 
     private HpackEncoder getHpackEncoder() {
         if (hpackEncoder == null) {
-            hpackEncoder = new HpackEncoder(remoteSettings.getHeaderTableSize());
+            hpackEncoder = new HpackEncoder();
         }
+        // Ensure latest agreed table size is used
+        hpackEncoder.setMaxTableSize(remoteSettings.getHeaderTableSize());
         return hpackEncoder;
     }
 

==================================================
TestHpack.java
index 56b5f0b5e2..085c44c1f5 100644
--- a/test/org/apache/coyote/http2/Http2TestBase.java
+++ b/test/org/apache/coyote/http2/Http2TestBase.java
@@ -513,7 +513,7 @@ public abstract class Http2TestBase extends TomcatBaseTest {
         input = new TestInput(is);
         output = new TestOutput();
         parser = new Http2Parser("-1", input, output);
-        hpackEncoder = new HpackEncoder(ConnectionSettingsBase.DEFAULT_HEADER_TABLE_SIZE);
+        hpackEncoder = new HpackEncoder();
     }
 
 

==================================================
