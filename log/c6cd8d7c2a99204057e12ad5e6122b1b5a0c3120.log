c6cd8d7c2a99204057e12ad5e6122b1b5a0c3120
==================================================
EL 3.0 collections operations.
==================================================
Mark Emlyn
==================================================
Mon Jul 15 15:43:11 2013 +0000
==================================================
Stream.java
EL 3.0 collections operations.
Implement flatMap and iterator

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1503305 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestCollectionOperations.java
index 36ef714e45..6f83aa4405 100644
--- a/java/org/apache/el/stream/Stream.java
+++ b/java/org/apache/el/stream/Stream.java
@@ -69,6 +69,36 @@ public class Stream {
     }
 
 
+    public Stream flatMap(final LambdaExpression le) {
+        Iterator<Object> downStream = new OpIterator() {
+
+            private Iterator<?> inner;
+
+            @Override
+            protected void findNext() {
+                while (iterator.hasNext() ||
+                        (inner != null && inner.hasNext())) {
+                    if (inner == null || !inner.hasNext()) {
+                        inner = ((Stream) le.invoke(iterator.next())).iterator;
+                    }
+
+                    if (inner.hasNext()) {
+                        next = inner.next();
+                        foundNext = true;
+                        break;
+                    }
+                }
+            }
+        };
+        return new Stream(downStream);
+    }
+
+
+    public Iterator<?> iterator() {
+        return iterator;
+    }
+
+
     public List<Object> toList() {
         List<Object> result = new ArrayList<>();
         while (iterator.hasNext()) {

==================================================
