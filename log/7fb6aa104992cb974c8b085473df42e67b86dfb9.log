7fb6aa104992cb974c8b085473df42e67b86dfb9
==================================================
Improve some existing test cases with a check,
==================================================
Rainer Jung
==================================================
Sun Aug 13 14:37:06 2017 +0000
==================================================
TestClientCert.java
Improve some existing test cases with a check,
whether client certificates from the right CA
was demanded during the TLS handshake.

Especially detect, if no CA was announced during
the handshake.


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1804917 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestCustomSsl.java
index 2e9086fd84..b88833cc78 100644
--- a/test/org/apache/tomcat/util/net/TestClientCert.java
+++ b/test/org/apache/tomcat/util/net/TestClientCert.java
@@ -19,6 +19,7 @@ package org.apache.tomcat.util.net;
 import java.util.Arrays;
 
 import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertTrue;
 
 import org.junit.Assume;
 import org.junit.Test;
@@ -62,6 +63,18 @@ public class TestClientCert extends TomcatBaseTest {
         // Unprotected resource
         ByteChunk res =
                 getUrl("https://localhost:" + getPort() + "/unprotected");
+
+        if (log.isDebugEnabled()) {
+            int count = TesterSupport.getLastClientAuthRequestedIssuerCount();
+            log.debug("Last client KeyManager usage: " + TesterSupport.getLastClientAuthKeyManagerUsage() +
+                      ", " + count + " requested Issuers, first one: " +
+                      (count > 0 ? TesterSupport.getLastClientAuthRequestedIssuer(0).getName() : "NONE"));
+            log.debug("Expected requested Issuer: " + TesterSupport.getClientAuthExpectedIssuer());
+        }
+        assertTrue("Checking requested client issuer against " +
+                   TesterSupport.getClientAuthExpectedIssuer(),
+                   TesterSupport.checkLastClientAuthRequestedIssuers());
+
         if (preemptive) {
             assertEquals("OK-" + TesterSupport.ROLE, res.toString());
         } else {
@@ -70,6 +83,18 @@ public class TestClientCert extends TomcatBaseTest {
 
         // Protected resource
         res = getUrl("https://localhost:" + getPort() + "/protected");
+
+        if (log.isDebugEnabled()) {
+            int count = TesterSupport.getLastClientAuthRequestedIssuerCount();
+            log.debug("Last client KeyManager usage: " + TesterSupport.getLastClientAuthKeyManagerUsage() +
+                      ", " + count + " requested Issuers, first one: " +
+                      (count > 0 ? TesterSupport.getLastClientAuthRequestedIssuer(0).getName() : "NONE"));
+            log.debug("Expected requested Issuer: " + TesterSupport.getClientAuthExpectedIssuer());
+        }
+        assertTrue("Checking requested client issuer against " +
+                   TesterSupport.getClientAuthExpectedIssuer(),
+                   TesterSupport.checkLastClientAuthRequestedIssuers());
+
         assertEquals("OK-" + TesterSupport.ROLE, res.toString());
     }
 
@@ -107,12 +132,36 @@ public class TestClientCert extends TomcatBaseTest {
         // Unprotected resource
         ByteChunk res = postUrl(body,
                 "https://localhost:" + getPort() + "/unprotected");
+
+        if (log.isDebugEnabled()) {
+            int count = TesterSupport.getLastClientAuthRequestedIssuerCount();
+            log.debug("Last client KeyManager usage: " + TesterSupport.getLastClientAuthKeyManagerUsage() +
+                      ", " + count + " requested Issuers, first one: " +
+                      (count > 0 ? TesterSupport.getLastClientAuthRequestedIssuer(0).getName() : "NONE"));
+            log.debug("Expected requested Issuer: " + TesterSupport.getClientAuthExpectedIssuer());
+        }
+        assertTrue("Checking requested client issuer against " +
+                   TesterSupport.getClientAuthExpectedIssuer(),
+                   TesterSupport.checkLastClientAuthRequestedIssuers());
+
         assertEquals("OK-" + bodySize, res.toString());
 
         // Protected resource
         res.recycle();
         int rc = postUrl(body, "https://localhost:" + getPort() + "/protected",
                 res, null);
+
+        if (log.isDebugEnabled()) {
+            int count = TesterSupport.getLastClientAuthRequestedIssuerCount();
+            log.debug("Last client KeyManager usage: " + TesterSupport.getLastClientAuthKeyManagerUsage() +
+                      ", " + count + " requested Issuers, first one: " +
+                      (count > 0 ? TesterSupport.getLastClientAuthRequestedIssuer(0).getName() : "NONE"));
+            log.debug("Expected requested Issuer: " + TesterSupport.getClientAuthExpectedIssuer());
+        }
+        assertTrue("Checking requested client issuer against " +
+                   TesterSupport.getClientAuthExpectedIssuer(),
+                   TesterSupport.checkLastClientAuthRequestedIssuers());
+
         if (expectProtectedFail) {
             assertEquals(401, rc);
         } else {

==================================================
TestSsl.java
index 4f675d047b..5aa7e687a8 100644
--- a/test/org/apache/tomcat/util/net/TestCustomSsl.java
+++ b/test/org/apache/tomcat/util/net/TestCustomSsl.java
@@ -159,6 +159,20 @@ public class TestCustomSsl extends TomcatBaseTest {
                 he.printStackTrace();
             }
         }
+
+        if (trustType.equals(TrustType.CA)) {
+            if (log.isDebugEnabled()) {
+                int count = TesterSupport.getLastClientAuthRequestedIssuerCount();
+                log.debug("Last client KeyManager usage: " + TesterSupport.getLastClientAuthKeyManagerUsage() +
+                          ", " + count + " requested Issuers, first one: " +
+                          (count > 0 ? TesterSupport.getLastClientAuthRequestedIssuer(0).getName() : "NONE"));
+                log.debug("Expected requested Issuer: " + TesterSupport.getClientAuthExpectedIssuer());
+            }
+            assertTrue("Checking requested client issuer against " +
+                       TesterSupport.getClientAuthExpectedIssuer(),
+                       TesterSupport.checkLastClientAuthRequestedIssuers());
+        }
+
         if (trustType.equals(TrustType.NONE)) {
             assertTrue(rc != 200);
             assertEquals("", res.toString());

==================================================
