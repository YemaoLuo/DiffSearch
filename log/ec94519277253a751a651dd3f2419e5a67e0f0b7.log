ec94519277253a751a651dd3f2419e5a67e0f0b7
==================================================
Fully align parseHost
==================================================
Mark Emlyn
==================================================
Sun Jun 5 09:43:55 2011 +0000
==================================================
Http11AprProcessor.java
Fully align parseHost
 - remove unnecessary code from BIO
 - improve comment for all

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1132356 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http11NioProcessor.java
index 583e256139..5e0c52c86d 100644
--- a/java/org/apache/coyote/http11/Http11AprProcessor.java
+++ b/java/org/apache/coyote/http11/Http11AprProcessor.java
@@ -833,8 +833,9 @@ public class Http11AprProcessor extends AbstractHttp11Processor {
 
         if (valueMB == null || valueMB.isNull()) {
             // HTTP/1.0
-            // Default is what the socket tells us. Overridden if a host is
-            // found/parsed
+            // If no host header, use the port info from the endpoint
+            // The host will be obtained lazily from the socket if required
+            // using ActionCode#REQ_LOCAL_NAME_ATTRIBUTE
             request.setServerPort(endpoint.getPort());
             return;
         }

==================================================
Http11Processor.java
index b717faf120..3a669cff4f 100644
--- a/java/org/apache/coyote/http11/Http11NioProcessor.java
+++ b/java/org/apache/coyote/http11/Http11NioProcessor.java
@@ -876,8 +876,9 @@ public class Http11NioProcessor extends AbstractHttp11Processor {
 
         if (valueMB == null || valueMB.isNull()) {
             // HTTP/1.0
-            // Default is what the socket tells us. Overridden if a host is
-            // found/parsed
+            // If no host header, use the port info from the endpoint
+            // The host will be obtained lazily from the socket if required
+            // using ActionCode#REQ_LOCAL_NAME_ATTRIBUTE
             request.setServerPort(endpoint.getPort());
             return;
         }

==================================================
