12b4a735783b323144867b543ca1898e7626253f
==================================================
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=58103
==================================================
Mark Thomas
==================================================
Tue Jul 28 12:57:49 2015 +0000
==================================================
AbstractProtocol.java
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=58103
When pipelining requests, and the previous request was an async request, ensure that the socket is removed from the waiting requests so that the async timeout thread doesn't process it during the next request.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1693088 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AbstractEndpoint.java
index f8ee0a388b..86e7a2160f 100644
--- a/java/org/apache/coyote/AbstractProtocol.java
+++ b/java/org/apache/coyote/AbstractProtocol.java
@@ -703,6 +703,11 @@ public abstract class AbstractProtocol<S> implements ProtocolHandler,
                         state = processor.dispatch(status);
                     } else if (state == SocketState.ASYNC_END) {
                         state = processor.dispatch(status);
+                        // release() won't get called so in case this request
+                        // takes a long time to process remove the socket from
+                        // the waiting requests now else the async timeout will
+                        // fire
+                        getProtocol().getEndpoint().removeWaitingRequest(wrapper);
                         if (state == SocketState.OPEN) {
                             // There may be pipe-lined data to read. If the data
                             // isn't processed now, execution will exit this

==================================================
