fd8c9c468719c63d951fbe5fbd79936885abdef9
==================================================
Javadoc fixes
==================================================
Mark Thomas
==================================================
Wed Jan 6 19:43:12 2016 +0000
==================================================
Nio2Channel.java
Javadoc fixes

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1723406 13f79535-47bb-0310-9956-ffa450edef68



==================================================
NioChannel.java
index e562cc293a..fe51705feb 100644
--- a/java/org/apache/tomcat/util/net/Nio2Channel.java
+++ b/java/org/apache/tomcat/util/net/Nio2Channel.java
@@ -44,7 +44,10 @@ public class Nio2Channel implements AsynchronousByteChannel {
     }
 
     /**
-     * Reset the channel
+     * Reset the channel.
+     *
+     * @param channel The new async channel to associate with this NIO2 channel
+     * @param socket  The new socket to associate with this NIO2 channel
      *
      * @throws IOException If a problem was encountered resetting the channel
      */
@@ -123,7 +126,8 @@ public class Nio2Channel implements AsynchronousByteChannel {
      * implementation.
      *
      * @return Always returns zero
-     * @throws IOException
+     *
+     * @throws IOException Never for non-secure channel
      */
     public int handshake() throws IOException {
         return 0;

==================================================
SocketWrapperBase.java
index afde9df186..fb52bc2f05 100644
--- a/java/org/apache/tomcat/util/net/NioChannel.java
+++ b/java/org/apache/tomcat/util/net/NioChannel.java
@@ -80,7 +80,8 @@ public class NioChannel implements ByteChannel {
      * @param timeout   Unused. May be used when overridden
      * @return Always returns <code>true</code> since there is no network buffer
      *         in the regular channel
-     * @throws IOException
+     *
+     * @throws IOException Never for non-secure channel
      */
     public boolean flush(boolean block, Selector s, long timeout)
             throws IOException {
@@ -181,7 +182,7 @@ public class NioChannel implements ByteChannel {
      * @param read  Unused in non-secure implementation
      * @param write Unused in non-secure implementation
      * @return Always returns zero
-     * @throws IOException
+     * @throws IOException Never for non-secure channel
      */
     public int handshake(boolean read, boolean write) throws IOException {
         return 0;
@@ -205,8 +206,11 @@ public class NioChannel implements ByteChannel {
     }
 
     /**
-     * Return true if the buffer wrote data
-     * @throws IOException
+     * Return true if the buffer wrote data. NO-OP for non-secure channel.
+     *
+     * @return Always returns {@code false} for non-secure channel
+     *
+     * @throws IOException Never for non-secure channel
      */
     public boolean flushOutbound() throws IOException {
         return false;

==================================================
