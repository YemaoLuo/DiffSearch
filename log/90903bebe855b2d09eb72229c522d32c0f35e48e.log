90903bebe855b2d09eb72229c522d32c0f35e48e
==================================================
Remove "encoding" field of Mark. It was assigned, but never read.
==================================================
Konstantin Kolinko
==================================================
Tue Apr 9 15:42:53 2013 +0000
==================================================
JspReader.java
Remove "encoding" field of Mark. It was assigned, but never read.

Make Mark.IncludeState class static. It did not have "encoding" field, so its constructor was overwriting the one in Mark class.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1466084 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Mark.java
index 8296191ef9..00ad2cef75 100644
--- a/java/org/apache/jasper/compiler/JspReader.java
+++ b/java/org/apache/jasper/compiler/JspReader.java
@@ -110,7 +110,7 @@ class JspReader {
                      ErrorDispatcher err)
             throws JasperException, FileNotFoundException, IOException {
 
-        this(ctxt, fname, encoding,
+        this(ctxt, fname,
              JspUtil.getReader(fname, encoding, jarFile, ctxt, err),
              err);
     }
@@ -121,7 +121,6 @@ class JspReader {
      */
     public JspReader(JspCompilationContext ctxt,
                      String fname,
-                     String encoding,
                      InputStreamReader reader,
                      ErrorDispatcher err)
             throws JasperException {
@@ -131,7 +130,7 @@ class JspReader {
         sourceFiles = new Vector<>();
         currFileId = 0;
         singleFile = false;
-        pushFile(fname, encoding, reader);
+        pushFile(fname, reader);
     }
 
     /**
@@ -625,7 +624,7 @@ class JspReader {
      * Push a file (and its associated Stream) on the file stack.  THe
      * current position in the current file is remembered.
      */
-    private void pushFile(String file, String encoding,
+    private void pushFile(String file,
                            InputStreamReader reader) throws JasperException {
 
         // Register the file
@@ -656,10 +655,10 @@ class JspReader {
             caw.close();
             if (current == null) {
                 current = new Mark(this, caw.toCharArray(), fileid,
-                                   getFile(fileid), master, encoding);
+                                   getFile(fileid), master);
             } else {
                 current.pushStream(caw.toCharArray(), fileid, getFile(fileid),
-                                   longName, encoding);
+                                   longName);
             }
         } catch (Throwable ex) {
             ExceptionUtils.handleThrowable(ex);

==================================================
ParserController.java
index 0e0dc5fe33..e8b3f892ee 100644
--- a/java/org/apache/jasper/compiler/Mark.java
+++ b/java/org/apache/jasper/compiler/Mark.java
@@ -50,9 +50,6 @@ final class Mark {
      */
     private Stack<IncludeState> includeStack = null;
 
-    // encoding of current file
-    private String encoding = null;
-
     // reader that owns this mark (so we can look up fileid's)
     private JspReader reader;
 
@@ -66,10 +63,9 @@ final class Mark {
      * @param fileId id of requested jsp file
      * @param name JSP file name
      * @param inBaseDir base directory of requested jsp file
-     * @param inEncoding encoding of current file
      */
     Mark(JspReader reader, char[] inStream, int fileId, String name,
-         String inBaseDir, String inEncoding) {
+         String inBaseDir) {
 
         this.reader = reader;
         this.ctxt = reader.getJspCompilationContext();
@@ -80,7 +76,6 @@ final class Mark {
         this.fileId = fileId;
         this.fileName = name;
         this.baseDir = inBaseDir;
-        this.encoding = inEncoding;
         this.includeStack = new Stack<>();
     }
 
@@ -110,7 +105,6 @@ final class Mark {
             this.fileId = other.fileId;
             this.fileName = other.fileName;
             this.baseDir = other.baseDir;
-            this.encoding = other.encoding;
 
             if (includeStack == null) {
                 includeStack = new Stack<>();
@@ -138,7 +132,6 @@ final class Mark {
         this.fileId = -1;
         this.fileName = filename;
         this.baseDir = "le-basedir";
-        this.encoding = "le-endocing";
         this.includeStack = null;
     }
 
@@ -153,12 +146,12 @@ final class Mark {
      * @param inEncoding encoding of new file
      */
     public void pushStream(char[] inStream, int inFileId, String name,
-                           String inBaseDir, String inEncoding)
+                           String inBaseDir)
     {
         // store current state in stack
         includeStack.push(new IncludeState(cursor, line, col, fileId,
                                            fileName, baseDir,
-                                           encoding, stream) );
+                                           stream) );
 
         // set new variables
         cursor = 0;
@@ -167,7 +160,6 @@ final class Mark {
         fileId = inFileId;
         fileName = name;
         baseDir = inBaseDir;
-        encoding = inEncoding;
         stream = inStream;
     }
 
@@ -257,7 +249,7 @@ final class Mark {
      * included file. In other words, it's the parser's continuation to be
      * reinstalled after the included file parsing is done.
      */
-    private class IncludeState {
+    private static class IncludeState {
         private final int cursor, line, col;
         private final int fileId;
         private final String fileName;
@@ -265,7 +257,7 @@ final class Mark {
         private final char[] stream;
 
         IncludeState(int inCursor, int inLine, int inCol, int inFileId,
-                     String name, String inBaseDir, String inEncoding,
+                     String name, String inBaseDir,
                      char[] inStream) {
             cursor = inCursor;
             line = inLine;
@@ -273,7 +265,6 @@ final class Mark {
             fileId = inFileId;
             fileName = name;
             baseDir = inBaseDir;
-            encoding = inEncoding;
             stream = inStream;
         }
     }

==================================================
