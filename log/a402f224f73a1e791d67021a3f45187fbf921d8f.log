a402f224f73a1e791d67021a3f45187fbf921d8f
==================================================
Child streams are always of type Stream
==================================================
Mark Thomas
==================================================
Thu Nov 24 14:19:21 2016 +0000
==================================================
AbstractStream.java
Child streams are always of type Stream

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1771149 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Stream.java
index b5639dcc52..25883395b6 100644
--- a/java/org/apache/coyote/http2/AbstractStream.java
+++ b/java/org/apache/coyote/http2/AbstractStream.java
@@ -16,8 +16,9 @@
  */
 package org.apache.coyote.http2;
 
-import java.util.HashSet;
+import java.util.Collections;
 import java.util.Set;
+import java.util.concurrent.ConcurrentHashMap;
 
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
@@ -34,7 +35,7 @@ abstract class AbstractStream {
     private final Integer identifier;
 
     private volatile AbstractStream parentStream = null;
-    private final Set<AbstractStream> childStreams = new HashSet<>();
+    private final Set<Stream> childStreams = Collections.newSetFromMap(new ConcurrentHashMap<>());
     private long windowSize = ConnectionSettingsBase.DEFAULT_INITIAL_WINDOW_SIZE;
 
     final Integer getIdentifier() {
@@ -55,7 +56,7 @@ abstract class AbstractStream {
     }
 
 
-    final void addChild(AbstractStream child) {
+    final void addChild(Stream child) {
         child.setParentStream(this);
         childStreams.add(child);
     }
@@ -84,7 +85,7 @@ abstract class AbstractStream {
     }
 
 
-    final Set<AbstractStream> getChildStreams() {
+    final Set<Stream> getChildStreams() {
         return childStreams;
     }
 

==================================================
