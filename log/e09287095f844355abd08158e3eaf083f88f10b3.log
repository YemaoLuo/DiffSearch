e09287095f844355abd08158e3eaf083f88f10b3
==================================================
https://issues.apache.org/bugzilla/show_bug.cgi?id=50860 add option to log validation errors
==================================================
Filip Hanik
==================================================
Tue Mar 20 17:32:47 2012 +0000
==================================================
DataSourceProxy.java
https://issues.apache.org/bugzilla/show_bug.cgi?id=50860 add option to log validation errors

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1303031 13f79535-47bb-0310-9956-ffa450edef68



==================================================
PoolConfiguration.java
index a136194678..ed100334c9 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/DataSourceProxy.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/DataSourceProxy.java
@@ -1252,4 +1252,20 @@ public class DataSourceProxy implements PoolConfiguration {
         return getPoolProperties().getUseDisposableConnectionFacade();
     }
 
+    /**
+     * {@inheritDoc}
+     */
+    @Override
+    public void setLogValidationErrors(boolean logValidationErrors) {
+        getPoolProperties().setLogValidationErrors(logValidationErrors);
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    @Override
+    public boolean getLogValidationErrors() {
+        return getPoolProperties().getLogValidationErrors();
+    }
+
 }

==================================================
PoolProperties.java
index 9663223281..6609d21d9e 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/PoolConfiguration.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/PoolConfiguration.java
@@ -835,4 +835,16 @@ public interface PoolConfiguration {
      */
     public boolean getUseDisposableConnectionFacade();
 
+    /**
+     * Set to true if you wish that errors from validation should be logged as error messages.
+     * @param logValidationErrors set to true to log validation errors
+     */
+    public void setLogValidationErrors(boolean logValidationErrors);
+
+    /**
+     * Returns true if errors that happen during validation will be logged
+     * @return true if errors that happen during validation will be logged
+     */
+    public boolean getLogValidationErrors();
+
 }

==================================================
PooledConnection.java
index 2ede4c5582..3dd1679ccb 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/PoolProperties.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/PoolProperties.java
@@ -86,7 +86,8 @@ public class PoolProperties implements PoolConfiguration, Cloneable, Serializabl
     protected boolean alternateUsernameAllowed = false;
     protected boolean commitOnReturn = false;
     protected boolean rollbackOnReturn = false;
-    protected boolean useDisposableConnectionFacade;
+    protected boolean useDisposableConnectionFacade = false;
+    protected boolean logValidationErrors = false;
 
 
     /**
@@ -1212,6 +1213,22 @@ public class PoolProperties implements PoolConfiguration, Cloneable, Serializabl
         return useDisposableConnectionFacade;
     }
 
+    /**
+     * {@inheritDoc}
+     */
+    @Override
+    public void setLogValidationErrors(boolean logValidationErrors) {
+        this.logValidationErrors = logValidationErrors;
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    @Override
+    public boolean getLogValidationErrors() {
+        return this.logValidationErrors;
+    }
+
     @Override
     protected Object clone() throws CloneNotSupportedException {
         // TODO Auto-generated method stub

==================================================
ConnectionPool.java
index f1d276c10e..d5797ca5f6 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/PooledConnection.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/PooledConnection.java
@@ -420,6 +420,9 @@ public class PooledConnection {
                 this.lastValidated = now;
                 return true;
             } else {
+                if (getPoolProperties().getLogValidationErrors()) {
+                    log.error("Custom validation through "+poolProperties.getValidator()+" failed.");
+                }
                 return false;
             }
         }
@@ -441,9 +444,12 @@ public class PooledConnection {
             stmt.close();
             this.lastValidated = now;
             return true;
-        } catch (Exception ignore) {
-            if (log.isDebugEnabled())
-                log.debug("Unable to validate object:",ignore);
+        } catch (Exception ex) {
+            if (getPoolProperties().getLogValidationErrors()) {
+                log.warn("SQL Validation error", ex);
+            } else if (log.isDebugEnabled()) {
+                log.debug("Unable to validate object:",ex);
+            }
             if (stmt!=null)
                 try { stmt.close();} catch (Exception ignore2){/*NOOP*/}
         }

==================================================
