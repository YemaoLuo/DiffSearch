06c014b6f5398d9985d8aff5f840574903cc980b
==================================================
Refactor marking app as serviced when using check
==================================================
Mark Thomas
==================================================
Fri Jan 22 19:52:04 2021 +0000
==================================================
FarmWarDeployer.java
Refactor marking app as serviced when using check

Sixth in a series of patches aimed at allowing parallel requests to the
Manager application to deploy different applications in parallel rather
than using a sync block to deploy them serially.
Check triggers HostConfig to redploy the application if it has been
updated. check calls tryAddServiced to avoid conflicts so existing
calls to check can't be made from inside a tryAddServiced ...
removeServiced block.



==================================================
HTMLManagerServlet.java
index 09f075b482..4912b7f55e 100644
--- a/java/org/apache/catalina/ha/deploy/FarmWarDeployer.java
+++ b/java/org/apache/catalina/ha/deploy/FarmWarDeployer.java
@@ -236,10 +236,10 @@ public class FarmWarDeployer extends ClusterListener
                                             "farmWarDeployer.renameFail",
                                             factory.getFile(), deployable));
                                 }
-                                check(contextName);
                             } finally {
                                 removeServiced(contextName);
                             }
+                            check(contextName);
                             if (log.isDebugEnabled())
                                 log.debug(sm.getString(
                                         "farmWarDeployer.deployEnd",
@@ -424,6 +424,7 @@ public class FarmWarDeployer extends ClusterListener
                     } finally {
                         removeServiced(contextName);
                     }
+                    check(contextName);
                 } else
                     log.error(sm.getString("farmWarDeployer.removeFailRemote",
                             contextName));
@@ -458,10 +459,10 @@ public class FarmWarDeployer extends ClusterListener
             if (tryAddServiced(cn.getName())) {
                 try {
                     copy(newWar, deployWar);
-                    check(cn.getName());
                 } finally {
                     removeServiced(cn.getName());
                 }
+                check(cn.getName());
             } else {
                 log.error(sm.getString("farmWarDeployer.servicingDeploy",
                         cn.getName(), deployWar.getName()));
@@ -519,10 +520,7 @@ public class FarmWarDeployer extends ClusterListener
                     log.error(sm.getString("farmWarDeployer.deleteFail", xml));
                 }
             }
-            // Perform new deployment and remove internal HostConfig state
-            check(contextName);
         }
-
     }
 
     /**

==================================================
ManagerServlet.java
index 65601ec13e..0db12efb7a 100644
--- a/java/org/apache/catalina/manager/HTMLManagerServlet.java
+++ b/java/org/apache/catalina/manager/HTMLManagerServlet.java
@@ -287,11 +287,11 @@ public final class HTMLManagerServlet extends ManagerServlet {
                 if (tryAddServiced(name)) {
                     try {
                         warPart.write(file.getAbsolutePath());
-                        // Perform new deployment
-                        check(name);
                     } finally {
                         removeServiced(name);
                     }
+                    // Perform new deployment
+                    check(name);
                 } else {
                     message = smClient.getString("managerServlet.inService", name);
                 }

==================================================
HostConfig.java
index dd68e1b0e0..8f4b825071 100644
--- a/java/org/apache/catalina/manager/ManagerServlet.java
+++ b/java/org/apache/catalina/manager/ManagerServlet.java
@@ -846,11 +846,11 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
                         // Copy WAR to the host's appBase
                         ExpandWar.copy(uploadedWar, deployedWar);
                     }
-                    // Perform new deployment
-                    check(name);
                 } finally {
                     removeServiced(name);
                 }
+                // Perform new deployment
+                check(name);
             } else {
                 writer.println(smClient.getString("managerServlet.inService", displayPath));
             }
@@ -903,11 +903,11 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
                         return;
                     }
                     ExpandWar.copy(localWar, deployedWar);
-                    // Perform new deployment
-                    check(name);
                 } finally {
                     removeServiced(name);
                 }
+                // Perform new deployment
+                check(name);
             } else {
                 writer.println(smClient.getString("managerServlet.inService", displayPath));
             }
@@ -1017,11 +1017,11 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
                         }
                         ExpandWar.copy(new File(war), localWar);
                     }
-                    // Perform new deployment
-                    check(name);
                 } finally {
                     removeServiced(name);
                 }
+                // Perform new deployment
+                check(name);
             } else {
                 writer.println(smClient.getString("managerServlet.inService", displayPath));
             }
@@ -1519,11 +1519,11 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
                                 "managerServlet.deleteFail", xml));
                         return;
                     }
-                    // Perform new deployment
-                    check(name);
                 } finally {
                     removeServiced(name);
                 }
+                // Perform new deployment
+                check(name);
             } else {
                 writer.println(smClient.getString("managerServlet.inService", displayPath));
             }

==================================================
