ec782a03a91cddeab2406d6e16a953a0dcf982a5
==================================================
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=63865
==================================================
John Kelly
==================================================
Thu Oct 24 10:49:45 2019 +0100
==================================================
CookieProcessorBase.java
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=63865

Add unset option to same-site cookies and pass through none value if set by user.



==================================================
LegacyCookieProcessor.java
index 3cb54307cd..589df4779e 100644
--- a/java/org/apache/tomcat/util/http/CookieProcessorBase.java
+++ b/java/org/apache/tomcat/util/http/CookieProcessorBase.java
@@ -43,7 +43,7 @@ public abstract class CookieProcessorBase implements CookieProcessor {
         ANCIENT_DATE = COOKIE_DATE_FORMAT.get().format(new Date(10000));
     }
 
-    private SameSiteCookies sameSiteCookies = SameSiteCookies.NONE;
+    private SameSiteCookies sameSiteCookies = SameSiteCookies.UNSET;
 
     public SameSiteCookies getSameSiteCookies() {
         return sameSiteCookies;

==================================================
Rfc6265CookieProcessor.java
index 17211a3bf6..f9b8e0d3d6 100644
--- a/java/org/apache/tomcat/util/http/LocalStrings.properties
+++ b/java/org/apache/tomcat/util/http/LocalStrings.properties
@@ -16,7 +16,7 @@
 cookies.fallToDebug=\n\
 \ Note: further occurrences of Cookie errors will be logged at DEBUG level.
 cookies.invalidCookieToken=Cookies: Invalid cookie. Value not a token or quoted value
-cookies.invalidSameSiteCookies=Unknown setting [{0}], must be one of: none, lax, strict. Default value is none.
+cookies.invalidSameSiteCookies=Unknown setting [{0}], must be one of: unset, none, lax, strict. Default value is unset.
 cookies.invalidSpecial=Cookies: Unknown Special Cookie
 cookies.maxCountFail=More than the maximum allowed number of cookies, [{0}], were detected.
 

==================================================
SameSiteCookies.java
index 0d81a9b62a..2021f3d6de 100644
--- a/java/org/apache/tomcat/util/http/Rfc6265CookieProcessor.java
+++ b/java/org/apache/tomcat/util/http/Rfc6265CookieProcessor.java
@@ -164,7 +164,7 @@ public class Rfc6265CookieProcessor extends CookieProcessorBase {
 
         SameSiteCookies sameSiteCookiesValue = getSameSiteCookies();
 
-        if (!sameSiteCookiesValue.equals(SameSiteCookies.NONE)) {
+        if (!sameSiteCookiesValue.equals(SameSiteCookies.UNSET)) {
             header.append("; SameSite=");
             header.append(sameSiteCookiesValue.getValue());
         }

==================================================
TestCookieProcessorGeneration.java
index c79fbc1e8a..dcf4a7d35e 100644
--- a/java/org/apache/tomcat/util/http/SameSiteCookies.java
+++ b/java/org/apache/tomcat/util/http/SameSiteCookies.java
@@ -21,7 +21,12 @@ import org.apache.tomcat.util.res.StringManager;
 public enum SameSiteCookies {
 
     /**
-     * Don't set the SameSite cookie attribute. Cookie is always sent
+     * Don't set the SameSite cookie attribute.
+     */
+    UNSET("Unset"),
+
+    /**
+     * Cookie is always sent in cross-site requests.
      */
     NONE("None"),
 

==================================================
TestSameSiteCookies.java
index 96bc238a1a..c9d4b65ca4 100644
--- a/test/org/apache/tomcat/util/http/TestCookieProcessorGeneration.java
+++ b/test/org/apache/tomcat/util/http/TestCookieProcessorGeneration.java
@@ -264,12 +264,18 @@ public class TestCookieProcessorGeneration {
         Assert.assertEquals("foo=bar", legacy.generateHeader(cookie));
         Assert.assertEquals("foo=bar", rfc6265.generateHeader(cookie));
 
-        legacy.setSameSiteCookies("none");
-        rfc6265.setSameSiteCookies("none");
+        legacy.setSameSiteCookies("unset");
+        rfc6265.setSameSiteCookies("unset");
 
         Assert.assertEquals("foo=bar", legacy.generateHeader(cookie));
         Assert.assertEquals("foo=bar", rfc6265.generateHeader(cookie));
 
+        legacy.setSameSiteCookies("none");
+        rfc6265.setSameSiteCookies("none");
+
+        Assert.assertEquals("foo=bar; SameSite=None", legacy.generateHeader(cookie));
+        Assert.assertEquals("foo=bar; SameSite=None", rfc6265.generateHeader(cookie));
+
         legacy.setSameSiteCookies("lax");
         rfc6265.setSameSiteCookies("lax");
 
@@ -285,12 +291,18 @@ public class TestCookieProcessorGeneration {
         cookie.setSecure(true);
         cookie.setHttpOnly(true);
 
-        legacy.setSameSiteCookies("none");
-        rfc6265.setSameSiteCookies("none");
+        legacy.setSameSiteCookies("unset");
+        rfc6265.setSameSiteCookies("unset");
 
         Assert.assertEquals("foo=bar; Secure; HttpOnly", legacy.generateHeader(cookie));
         Assert.assertEquals("foo=bar; Secure; HttpOnly", rfc6265.generateHeader(cookie));
 
+        legacy.setSameSiteCookies("none");
+        rfc6265.setSameSiteCookies("none");
+
+        Assert.assertEquals("foo=bar; Secure; HttpOnly; SameSite=None", legacy.generateHeader(cookie));
+        Assert.assertEquals("foo=bar; Secure; HttpOnly; SameSite=None", rfc6265.generateHeader(cookie));
+
         legacy.setSameSiteCookies("lax");
         rfc6265.setSameSiteCookies("lax");
 

==================================================
