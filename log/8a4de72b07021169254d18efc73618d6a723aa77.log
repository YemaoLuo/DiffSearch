8a4de72b07021169254d18efc73618d6a723aa77
==================================================
NamingResources -> NamingResourcesImpl in preparation for new interface
==================================================
Mark Emlyn
==================================================
Mon Jul 8 21:02:07 2013 +0000
==================================================
Context.java
NamingResources -> NamingResourcesImpl in preparation for new interface
NamingResources

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1500947 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Server.java
index 1e32041f60..978cc0dcec 100644
--- a/java/org/apache/catalina/Context.java
+++ b/java/org/apache/catalina/Context.java
@@ -34,7 +34,7 @@ import org.apache.catalina.deploy.ErrorPage;
 import org.apache.catalina.deploy.FilterDef;
 import org.apache.catalina.deploy.FilterMap;
 import org.apache.catalina.deploy.LoginConfig;
-import org.apache.catalina.deploy.NamingResources;
+import org.apache.catalina.deploy.NamingResourcesImpl;
 import org.apache.catalina.deploy.SecurityConstraint;
 import org.apache.tomcat.InstanceManager;
 import org.apache.tomcat.JarScanner;
@@ -424,7 +424,7 @@ public interface Context extends Container {
     /**
      * Return the naming resources associated with this web application.
      */
-    public NamingResources getNamingResources();
+    public NamingResourcesImpl getNamingResources();
 
 
     /**
@@ -432,7 +432,7 @@ public interface Context extends Container {
      *
      * @param namingResources The new naming resources
      */
-    public void setNamingResources(NamingResources namingResources);
+    public void setNamingResources(NamingResourcesImpl namingResources);
 
 
     /**

==================================================
NamingContextListener.java
index dc4e10ffa4..ec49940e2e 100644
--- a/java/org/apache/catalina/Server.java
+++ b/java/org/apache/catalina/Server.java
@@ -20,7 +20,7 @@ package org.apache.catalina;
 
 import java.io.File;
 
-import org.apache.catalina.deploy.NamingResources;
+import org.apache.catalina.deploy.NamingResourcesImpl;
 import org.apache.catalina.startup.Catalina;
 
 /**
@@ -55,7 +55,7 @@ public interface Server extends Lifecycle {
     /**
      * Return the global naming resources.
      */
-    public NamingResources getGlobalNamingResources();
+    public NamingResourcesImpl getGlobalNamingResources();
 
 
     /**
@@ -64,7 +64,7 @@ public interface Server extends Lifecycle {
      * @param globalNamingResources The new global naming resources
      */
     public void setGlobalNamingResources
-        (NamingResources globalNamingResources);
+        (NamingResourcesImpl globalNamingResources);
 
 
     /**

==================================================
StandardContext.java
index c90d61d161..d319a98e25 100644
--- a/java/org/apache/catalina/core/NamingContextListener.java
+++ b/java/org/apache/catalina/core/NamingContextListener.java
@@ -54,7 +54,7 @@ import org.apache.catalina.deploy.ContextResourceEnvRef;
 import org.apache.catalina.deploy.ContextResourceLink;
 import org.apache.catalina.deploy.ContextService;
 import org.apache.catalina.deploy.ContextTransaction;
-import org.apache.catalina.deploy.NamingResources;
+import org.apache.catalina.deploy.NamingResourcesImpl;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.naming.ContextAccessController;
@@ -112,7 +112,7 @@ public class NamingContextListener
     /**
      * Associated naming resources.
      */
-    protected NamingResources namingResources = null;
+    protected NamingResourcesImpl namingResources = null;
 
 
     /**
@@ -634,7 +634,7 @@ public class NamingContextListener
             log.debug("Creating JNDI naming context");
 
         if (namingResources == null) {
-            namingResources = new NamingResources();
+            namingResources = new NamingResourcesImpl();
             namingResources.setContainer(container);
         }
 

==================================================
StandardServer.java
index 55480c3419..ea1a88711f 100644
--- a/java/org/apache/catalina/core/StandardContext.java
+++ b/java/org/apache/catalina/core/StandardContext.java
@@ -106,7 +106,7 @@ import org.apache.catalina.deploy.InjectionTarget;
 import org.apache.catalina.deploy.LoginConfig;
 import org.apache.catalina.deploy.MessageDestination;
 import org.apache.catalina.deploy.MessageDestinationRef;
-import org.apache.catalina.deploy.NamingResources;
+import org.apache.catalina.deploy.NamingResourcesImpl;
 import org.apache.catalina.deploy.SecurityCollection;
 import org.apache.catalina.deploy.SecurityConstraint;
 import org.apache.catalina.loader.WebappLoader;
@@ -455,7 +455,7 @@ public class StandardContext extends ContainerBase
     /**
      * The naming resources for this web application.
      */
-    private NamingResources namingResources = null;
+    private NamingResourcesImpl namingResources = null;
 
     /**
      * The message destinations for this web application.
@@ -2019,10 +2019,10 @@ public class StandardContext extends ContainerBase
      * Return the naming resources associated with this web application.
      */
     @Override
-    public NamingResources getNamingResources() {
+    public NamingResourcesImpl getNamingResources() {
 
         if (namingResources == null) {
-            setNamingResources(new NamingResources());
+            setNamingResources(new NamingResourcesImpl());
         }
         return (namingResources);
 
@@ -2035,10 +2035,10 @@ public class StandardContext extends ContainerBase
      * @param namingResources The new naming resources
      */
     @Override
-    public void setNamingResources(NamingResources namingResources) {
+    public void setNamingResources(NamingResourcesImpl namingResources) {
 
         // Process the property setting change
-        NamingResources oldNamingResources = this.namingResources;
+        NamingResourcesImpl oldNamingResources = this.namingResources;
         this.namingResources = namingResources;
         if (namingResources != null) {
             namingResources.setContainer(this);
@@ -5248,7 +5248,7 @@ public class StandardContext extends ContainerBase
                     context = getNamingContextListener().getEnvContext();
                 }
                 Map<String, Map<String, String>> injectionMap = buildInjectionMap(
-                        getIgnoreAnnotations() ? new NamingResources(): getNamingResources());
+                        getIgnoreAnnotations() ? new NamingResourcesImpl(): getNamingResources());
                 setInstanceManager(new DefaultInstanceManager(context,
                         injectionMap, this, this.getClass().getClassLoader()));
                 getServletContext().setAttribute(
@@ -5379,7 +5379,7 @@ public class StandardContext extends ContainerBase
         }
     }
 
-    private Map<String, Map<String, String>> buildInjectionMap(NamingResources namingResources) {
+    private Map<String, Map<String, String>> buildInjectionMap(NamingResourcesImpl namingResources) {
         Map<String, Map<String, String>> injectionMap = new HashMap<>();
         for (Injectable resource: namingResources.findLocalEjbs()) {
             addInjectionTarget(resource, injectionMap);

==================================================
NamingResourcesImpl.java
index 99609f5c3d..9fe4375288 100644
--- a/java/org/apache/catalina/core/StandardServer.java
+++ b/java/org/apache/catalina/core/StandardServer.java
@@ -37,7 +37,7 @@ import org.apache.catalina.LifecycleException;
 import org.apache.catalina.LifecycleState;
 import org.apache.catalina.Server;
 import org.apache.catalina.Service;
-import org.apache.catalina.deploy.NamingResources;
+import org.apache.catalina.deploy.NamingResourcesImpl;
 import org.apache.catalina.mbeans.MBeanFactory;
 import org.apache.catalina.startup.Catalina;
 import org.apache.catalina.util.ExtensionValidator;
@@ -72,7 +72,7 @@ public final class StandardServer extends LifecycleMBeanBase implements Server {
 
         super();
 
-        globalNamingResources = new NamingResources();
+        globalNamingResources = new NamingResourcesImpl();
         globalNamingResources.setContainer(this);
 
         if (isUseNaming()) {
@@ -97,7 +97,7 @@ public final class StandardServer extends LifecycleMBeanBase implements Server {
     /**
      * Global naming resources.
      */
-    private NamingResources globalNamingResources = null;
+    private NamingResourcesImpl globalNamingResources = null;
 
 
     /**
@@ -200,7 +200,7 @@ public final class StandardServer extends LifecycleMBeanBase implements Server {
      * Return the global naming resources.
      */
     @Override
-    public NamingResources getGlobalNamingResources() {
+    public NamingResourcesImpl getGlobalNamingResources() {
 
         return (this.globalNamingResources);
 
@@ -214,9 +214,9 @@ public final class StandardServer extends LifecycleMBeanBase implements Server {
      */
     @Override
     public void setGlobalNamingResources
-        (NamingResources globalNamingResources) {
+        (NamingResourcesImpl globalNamingResources) {
 
-        NamingResources oldGlobalNamingResources =
+        NamingResourcesImpl oldGlobalNamingResources =
             this.globalNamingResources;
         this.globalNamingResources = globalNamingResources;
         this.globalNamingResources.setContainer(this);

==================================================
ResourceBase.java
similarity index 99%
rename from java/org/apache/catalina/deploy/NamingResources.java
rename to java/org/apache/catalina/deploy/NamingResourcesImpl.java
index 002deaec98..8cdb764fbc 100644
--- a/java/org/apache/catalina/deploy/NamingResources.java
+++ b/java/org/apache/catalina/deploy/NamingResourcesImpl.java
@@ -53,11 +53,11 @@ import org.apache.tomcat.util.res.StringManager;
  * @version $Id$
  */
 
-public class NamingResources extends LifecycleMBeanBase implements Serializable {
+public class NamingResourcesImpl extends LifecycleMBeanBase implements Serializable {
 
     private static final long serialVersionUID = 1L;
 
-    private static final Log log = LogFactory.getLog(NamingResources.class);
+    private static final Log log = LogFactory.getLog(NamingResourcesImpl.class);
 
     private static final StringManager sm =
         StringManager.getManager(Constants.Package);
@@ -70,7 +70,7 @@ public class NamingResources extends LifecycleMBeanBase implements Serializable
     /**
      * Create a new NamingResources instance.
      */
-    public NamingResources() {
+    public NamingResourcesImpl() {
         // NOOP
     }
 
@@ -233,7 +233,7 @@ public class NamingResources extends LifecycleMBeanBase implements Serializable
                 }
             } else if (rl != null) {
                 // Link. Need to look at the global resources
-                NamingResources global = getServer().getGlobalNamingResources();
+                NamingResourcesImpl global = getServer().getGlobalNamingResources();
                 if (global.findEnvironment(rl.getGlobal()) != null) {
                     if (global.findEnvironment(rl.getGlobal()).getOverride()) {
                         removeResourceLink(environment.getName());

==================================================
ContextEnvironmentMBean.java
index 8ec2a94549..a9345e5e80 100644
--- a/java/org/apache/catalina/deploy/ResourceBase.java
+++ b/java/org/apache/catalina/deploy/ResourceBase.java
@@ -199,13 +199,13 @@ public class ResourceBase implements Serializable, Injectable {
     /**
      * The NamingResources with which we are associated (if any).
      */
-    protected NamingResources resources = null;
+    protected NamingResourcesImpl resources = null;
 
-    public NamingResources getNamingResources() {
+    public NamingResourcesImpl getNamingResources() {
         return (this.resources);
     }
 
-    void setNamingResources(NamingResources resources) {
+    void setNamingResources(NamingResourcesImpl resources) {
         this.resources = resources;
     }
 }

==================================================
ContextResourceLinkMBean.java
index e0c2f03e6e..8c0d740b47 100644
--- a/java/org/apache/catalina/mbeans/ContextEnvironmentMBean.java
+++ b/java/org/apache/catalina/mbeans/ContextEnvironmentMBean.java
@@ -27,7 +27,7 @@ import javax.management.RuntimeOperationsException;
 import javax.management.modelmbean.InvalidTargetObjectTypeException;
 
 import org.apache.catalina.deploy.ContextEnvironment;
-import org.apache.catalina.deploy.NamingResources;
+import org.apache.catalina.deploy.NamingResourcesImpl;
 import org.apache.tomcat.util.modeler.BaseModelMBean;
 
 
@@ -99,7 +99,7 @@ public class ContextEnvironmentMBean extends BaseModelMBean {
 
         // cannot use side-effects.  It's removed and added back each time
         // there is a modification in a resource.
-        NamingResources nr = ce.getNamingResources();
+        NamingResourcesImpl nr = ce.getNamingResources();
         nr.removeEnvironment(ce.getName());
         nr.addEnvironment(ce);
     }

==================================================
ContextResourceMBean.java
index 14a4c9bf02..3fe5be1119 100644
--- a/java/org/apache/catalina/mbeans/ContextResourceLinkMBean.java
+++ b/java/org/apache/catalina/mbeans/ContextResourceLinkMBean.java
@@ -27,7 +27,7 @@ import javax.management.RuntimeOperationsException;
 import javax.management.modelmbean.InvalidTargetObjectTypeException;
 
 import org.apache.catalina.deploy.ContextResourceLink;
-import org.apache.catalina.deploy.NamingResources;
+import org.apache.catalina.deploy.NamingResourcesImpl;
 import org.apache.tomcat.util.modeler.BaseModelMBean;
 
 
@@ -174,7 +174,7 @@ public class ContextResourceLinkMBean extends BaseModelMBean {
 
         // cannot use side-effects.  It's removed and added back each time
         // there is a modification in a resource.
-        NamingResources nr = crl.getNamingResources();
+        NamingResourcesImpl nr = crl.getNamingResources();
         nr.removeResourceLink(crl.getName());
         nr.addResourceLink(crl);
     }

==================================================
NamingResourcesMBean.java
index 1dd0b5b6c0..59c092f9ee 100644
--- a/java/org/apache/catalina/mbeans/ContextResourceMBean.java
+++ b/java/org/apache/catalina/mbeans/ContextResourceMBean.java
@@ -27,7 +27,7 @@ import javax.management.RuntimeOperationsException;
 import javax.management.modelmbean.InvalidTargetObjectTypeException;
 
 import org.apache.catalina.deploy.ContextResource;
-import org.apache.catalina.deploy.NamingResources;
+import org.apache.catalina.deploy.NamingResourcesImpl;
 import org.apache.tomcat.util.modeler.BaseModelMBean;
 
 
@@ -179,7 +179,7 @@ public class ContextResourceMBean extends BaseModelMBean {
 
         // cannot use side-effects.  It's removed and added back each time
         // there is a modification in a resource.
-        NamingResources nr = cr.getNamingResources();
+        NamingResourcesImpl nr = cr.getNamingResources();
         nr.removeResource(cr.getName());
         nr.addResource(cr);
     }

==================================================
FailedContext.java
index 0aeeb7987f..8e6c2acdea 100644
--- a/java/org/apache/catalina/mbeans/NamingResourcesMBean.java
+++ b/java/org/apache/catalina/mbeans/NamingResourcesMBean.java
@@ -27,7 +27,7 @@ import javax.management.RuntimeOperationsException;
 import org.apache.catalina.deploy.ContextEnvironment;
 import org.apache.catalina.deploy.ContextResource;
 import org.apache.catalina.deploy.ContextResourceLink;
-import org.apache.catalina.deploy.NamingResources;
+import org.apache.catalina.deploy.NamingResourcesImpl;
 import org.apache.tomcat.util.modeler.BaseModelMBean;
 import org.apache.tomcat.util.modeler.ManagedBean;
 import org.apache.tomcat.util.modeler.Registry;
@@ -86,7 +86,7 @@ public class NamingResourcesMBean extends BaseModelMBean {
      */
     public String[] getEnvironments() {
         ContextEnvironment[] envs =
-                            ((NamingResources)this.resource).findEnvironments();
+                            ((NamingResourcesImpl)this.resource).findEnvironments();
         ArrayList<String> results = new ArrayList<>();
         for (int i = 0; i < envs.length; i++) {
             try {
@@ -112,7 +112,7 @@ public class NamingResourcesMBean extends BaseModelMBean {
     public String[] getResources() {
 
         ContextResource[] resources =
-                            ((NamingResources)this.resource).findResources();
+                            ((NamingResourcesImpl)this.resource).findResources();
         ArrayList<String> results = new ArrayList<>();
         for (int i = 0; i < resources.length; i++) {
             try {
@@ -138,7 +138,7 @@ public class NamingResourcesMBean extends BaseModelMBean {
     public String[] getResourceLinks() {
 
         ContextResourceLink[] resourceLinks =
-                            ((NamingResources)this.resource).findResourceLinks();
+                            ((NamingResourcesImpl)this.resource).findResourceLinks();
         ArrayList<String> results = new ArrayList<>();
         for (int i = 0; i < resourceLinks.length; i++) {
             try {
@@ -169,7 +169,7 @@ public class NamingResourcesMBean extends BaseModelMBean {
     public String addEnvironment(String envName, String type, String value)
         throws MalformedObjectNameException {
 
-        NamingResources nresources = (NamingResources) this.resource;
+        NamingResourcesImpl nresources = (NamingResourcesImpl) this.resource;
         if (nresources == null) {
             return null;
         }
@@ -202,7 +202,7 @@ public class NamingResourcesMBean extends BaseModelMBean {
     public String addResource(String resourceName, String type)
         throws MalformedObjectNameException {
 
-        NamingResources nresources = (NamingResources) this.resource;
+        NamingResourcesImpl nresources = (NamingResourcesImpl) this.resource;
         if (nresources == null) {
             return null;
         }
@@ -233,7 +233,7 @@ public class NamingResourcesMBean extends BaseModelMBean {
     public String addResourceLink(String resourceLinkName, String type)
         throws MalformedObjectNameException {
 
-        NamingResources nresources = (NamingResources) this.resource;
+        NamingResourcesImpl nresources = (NamingResourcesImpl) this.resource;
         if (nresources == null) {
             return null;
         }
@@ -264,7 +264,7 @@ public class NamingResourcesMBean extends BaseModelMBean {
      */
     public void removeEnvironment(String envName) {
 
-        NamingResources nresources = (NamingResources) this.resource;
+        NamingResourcesImpl nresources = (NamingResourcesImpl) this.resource;
         if (nresources == null) {
             return;
         }
@@ -286,7 +286,7 @@ public class NamingResourcesMBean extends BaseModelMBean {
     public void removeResource(String resourceName) {
 
         resourceName = ObjectName.unquote(resourceName);
-        NamingResources nresources = (NamingResources) this.resource;
+        NamingResourcesImpl nresources = (NamingResourcesImpl) this.resource;
         if (nresources == null) {
             return;
         }
@@ -308,7 +308,7 @@ public class NamingResourcesMBean extends BaseModelMBean {
     public void removeResourceLink(String resourceLinkName) {
 
         resourceLinkName = ObjectName.unquote(resourceLinkName);
-        NamingResources nresources = (NamingResources) this.resource;
+        NamingResourcesImpl nresources = (NamingResourcesImpl) this.resource;
         if (nresources == null) {
             return;
         }

==================================================
SetNextNamingRule.java
index ee29c947e3..ef45023fae 100644
--- a/java/org/apache/catalina/startup/FailedContext.java
+++ b/java/org/apache/catalina/startup/FailedContext.java
@@ -54,7 +54,7 @@ import org.apache.catalina.deploy.ErrorPage;
 import org.apache.catalina.deploy.FilterDef;
 import org.apache.catalina.deploy.FilterMap;
 import org.apache.catalina.deploy.LoginConfig;
-import org.apache.catalina.deploy.NamingResources;
+import org.apache.catalina.deploy.NamingResourcesImpl;
 import org.apache.catalina.deploy.SecurityConstraint;
 import org.apache.catalina.util.ContextName;
 import org.apache.catalina.util.LifecycleMBeanBase;
@@ -398,9 +398,9 @@ public class FailedContext extends LifecycleMBeanBase implements Context {
     public void setLoginConfig(LoginConfig config) { /* NO-OP */ }
 
     @Override
-    public NamingResources getNamingResources() { return null; }
+    public NamingResourcesImpl getNamingResources() { return null; }
     @Override
-    public void setNamingResources(NamingResources namingResources) { /* NO-OP */ }
+    public void setNamingResources(NamingResourcesImpl namingResources) { /* NO-OP */ }
 
     @Override
     public String getPublicId() { return null; }

==================================================
GlobalNamingResourcesSF.java
index 5e20697f99..2cce76b3f6 100644
--- a/java/org/apache/catalina/startup/SetNextNamingRule.java
+++ b/java/org/apache/catalina/startup/SetNextNamingRule.java
@@ -19,7 +19,7 @@
 package org.apache.catalina.startup;
 
 import org.apache.catalina.Context;
-import org.apache.catalina.deploy.NamingResources;
+import org.apache.catalina.deploy.NamingResourcesImpl;
 import org.apache.tomcat.util.IntrospectionUtils;
 import org.apache.tomcat.util.digester.Rule;
 
@@ -93,11 +93,11 @@ public class SetNextNamingRule extends Rule {
         Object child = digester.peek(0);
         Object parent = digester.peek(1);
 
-        NamingResources namingResources = null;
+        NamingResourcesImpl namingResources = null;
         if (parent instanceof Context) {
             namingResources = ((Context) parent).getNamingResources();
         } else {
-            namingResources = (NamingResources) parent;
+            namingResources = (NamingResourcesImpl) parent;
         }
 
         // Call the specified method

==================================================
NamingResourcesSF.java
index 07ca1e0c6a..6431a7a591 100644
--- a/java/org/apache/catalina/storeconfig/GlobalNamingResourcesSF.java
+++ b/java/org/apache/catalina/storeconfig/GlobalNamingResourcesSF.java
@@ -18,7 +18,7 @@ package org.apache.catalina.storeconfig;
 
 import java.io.PrintWriter;
 
-import org.apache.catalina.deploy.NamingResources;
+import org.apache.catalina.deploy.NamingResourcesImpl;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 
@@ -38,19 +38,19 @@ public class GlobalNamingResourcesSF extends StoreFactoryBase {
     public void store(PrintWriter aWriter, int indent, Object aElement)
             throws Exception {
 
-        if (aElement instanceof NamingResources) {
+        if (aElement instanceof NamingResourcesImpl) {
 
             StoreDescription elementDesc = getRegistry().findDescription(
-                    NamingResources.class.getName()
+                    NamingResourcesImpl.class.getName()
                             + ".[GlobalNamingResources]");
 
             if (elementDesc != null) {
                 getStoreAppender().printIndent(aWriter, indent + 2);
                 getStoreAppender().printOpenTag(aWriter, indent + 2, aElement,
                         elementDesc);
-                NamingResources resources = (NamingResources) aElement;
+                NamingResourcesImpl resources = (NamingResourcesImpl) aElement;
                 StoreDescription resourcesdesc = getRegistry().findDescription(
-                        NamingResources.class.getName());
+                        NamingResourcesImpl.class.getName());
                 if (resourcesdesc != null) {
                     resourcesdesc.getStoreFactory().store(aWriter, indent + 2,
                             resources);

==================================================
StandardContextSF.java
index c3b03e11d7..10979c2df8 100644
--- a/java/org/apache/catalina/storeconfig/NamingResourcesSF.java
+++ b/java/org/apache/catalina/storeconfig/NamingResourcesSF.java
@@ -24,7 +24,7 @@ import org.apache.catalina.deploy.ContextLocalEjb;
 import org.apache.catalina.deploy.ContextResource;
 import org.apache.catalina.deploy.ContextResourceEnvRef;
 import org.apache.catalina.deploy.ContextResourceLink;
-import org.apache.catalina.deploy.NamingResources;
+import org.apache.catalina.deploy.NamingResourcesImpl;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 
@@ -78,8 +78,8 @@ public class NamingResourcesSF extends StoreFactoryBase {
     public void storeChildren(PrintWriter aWriter, int indent, Object aElement,
             StoreDescription elementDesc) throws Exception {
 
-        if (aElement instanceof NamingResources) {
-            NamingResources resources = (NamingResources) aElement;
+        if (aElement instanceof NamingResourcesImpl) {
+            NamingResourcesImpl resources = (NamingResourcesImpl) aElement;
             // Store nested <Ejb> elements
             ContextEjb[] ejbs = resources.findEjbs();
             storeElementArray(aWriter, indent, ejbs);

==================================================
StandardServerSF.java
index 0e33e941d9..7fddcaee34 100644
--- a/java/org/apache/catalina/storeconfig/StandardContextSF.java
+++ b/java/org/apache/catalina/storeconfig/StandardContextSF.java
@@ -38,7 +38,7 @@ import org.apache.catalina.Valve;
 import org.apache.catalina.WebResourceRoot;
 import org.apache.catalina.core.StandardContext;
 import org.apache.catalina.deploy.ApplicationParameter;
-import org.apache.catalina.deploy.NamingResources;
+import org.apache.catalina.deploy.NamingResourcesImpl;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 
@@ -295,7 +295,7 @@ public class StandardContextSF extends StoreFactoryBase {
             storeElementArray(aWriter, indent, appParams);
 
             // Store nested naming resources elements (EJB,Resource,...)
-            NamingResources nresources = context.getNamingResources();
+            NamingResourcesImpl nresources = context.getNamingResources();
             storeElement(aWriter, indent, nresources);
 
             // Store nested watched resources <WatchedResource>

==================================================
TesterContext.java
index 978054d926..2e49faaed6 100644
--- a/java/org/apache/catalina/storeconfig/StandardServerSF.java
+++ b/java/org/apache/catalina/storeconfig/StandardServerSF.java
@@ -23,7 +23,7 @@ import org.apache.catalina.Lifecycle;
 import org.apache.catalina.LifecycleListener;
 import org.apache.catalina.Service;
 import org.apache.catalina.core.StandardServer;
-import org.apache.catalina.deploy.NamingResources;
+import org.apache.catalina.deploy.NamingResourcesImpl;
 
 /**
  * Store server.xml Server element and children (
@@ -86,10 +86,10 @@ public class StandardServerSF extends StoreFactoryBase {
                 }
             }*/
             // Store nested <GlobalNamingResources> element
-            NamingResources globalNamingResources = server
+            NamingResourcesImpl globalNamingResources = server
                     .getGlobalNamingResources();
             StoreDescription elementDesc = getRegistry().findDescription(
-                    NamingResources.class.getName()
+                    NamingResourcesImpl.class.getName()
                             + ".[GlobalNamingResources]");
             if (elementDesc != null) {
                 elementDesc.getStoreFactory().store(aWriter, indent,

==================================================
