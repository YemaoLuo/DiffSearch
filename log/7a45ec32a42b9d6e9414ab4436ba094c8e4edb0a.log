7a45ec32a42b9d6e9414ab4436ba094c8e4edb0a
==================================================
Add JMX support for Channel Interceptors.
==================================================
Keiichi Fujino
==================================================
Wed Apr 19 07:49:11 2017 +0000
==================================================
ChannelInterceptorBase.java
Add JMX support for Channel Interceptors.
Add MBean for TcpFailureDetector.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1791867 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TcpFailureDetector.java
index f2c6362552..17ce382d59 100644
--- a/java/org/apache/catalina/tribes/group/ChannelInterceptorBase.java
+++ b/java/org/apache/catalina/tribes/group/ChannelInterceptorBase.java
@@ -16,11 +16,14 @@
  */
 package org.apache.catalina.tribes.group;
 
+import javax.management.ObjectName;
+
 import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.ChannelException;
 import org.apache.catalina.tribes.ChannelInterceptor;
 import org.apache.catalina.tribes.ChannelMessage;
 import org.apache.catalina.tribes.Member;
+import org.apache.catalina.tribes.jmx.JmxRegistry;
 
 /**
  * Abstract class for the interceptor base class.
@@ -33,6 +36,11 @@ public abstract class ChannelInterceptorBase implements ChannelInterceptor {
     //default value, always process
     protected int optionFlag = 0;
 
+    /**
+     * the ObjectName of this ChannelInterceptor.
+     */
+    private ObjectName oname = null;
+
     public ChannelInterceptorBase() {
 
     }
@@ -155,6 +163,10 @@ public abstract class ChannelInterceptorBase implements ChannelInterceptor {
     @Override
     public void start(int svc) throws ChannelException {
         if ( getNext()!=null ) getNext().start(svc);
+        // register jmx
+        JmxRegistry jmxRegistry = JmxRegistry.getRegistry(channel);
+        if (jmxRegistry != null) this.oname = jmxRegistry.registerJmx(
+                ",component=Interceptor,interceptorName=" + getClass().getSimpleName(), this);
     }
 
     /**
@@ -171,6 +183,10 @@ public abstract class ChannelInterceptorBase implements ChannelInterceptor {
     @Override
     public void stop(int svc) throws ChannelException {
         if (getNext() != null) getNext().stop(svc);
+        if (oname != null) {
+            JmxRegistry.getRegistry(channel).unregisterJmx(oname);
+            oname = null;
+        }
         channel = null;
     }
 

==================================================
TcpFailureDetectorMBean.java
index 26b80b3600..34e76efe4f 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/TcpFailureDetector.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/TcpFailureDetector.java
@@ -59,7 +59,7 @@ import org.apache.juli.logging.LogFactory;
  *
  * @version 1.0
  */
-public class TcpFailureDetector extends ChannelInterceptorBase {
+public class TcpFailureDetector extends ChannelInterceptorBase implements TcpFailureDetectorMBean {
 
     private static final Log log = LogFactory.getLog(TcpFailureDetector.class);
     protected static final StringManager sm = StringManager.getManager(TcpFailureDetector.class);

==================================================
