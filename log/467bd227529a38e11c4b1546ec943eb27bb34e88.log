467bd227529a38e11c4b1546ec943eb27bb34e88
==================================================
Remove StackMapEntry.
==================================================
Mark Emlyn
==================================================
Sat Nov 9 21:37:39 2013 +0000
==================================================
StackMap.java
Remove StackMapEntry.
Swallow associated values as they are never used.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1540401 13f79535-47bb-0310-9956-ffa450edef68



==================================================
StackMapEntry.java
index 99e64aea47..461f54affe 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/StackMap.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/StackMap.java
@@ -32,14 +32,10 @@ import java.io.IOException;
  * @version $Id$
  * @author  <A HREF="mailto:m.dahm@gmx.de">M. Dahm</A>
  * @see     Code
- * @see     StackMapEntry
  */
 public final class StackMap extends Attribute {
 
     private static final long serialVersionUID = 264958819110329590L;
-    private int map_length;
-    private StackMapEntry[] map; // Table of stack map entries
-
 
     /**
      * Construct object from file stream.
@@ -52,10 +48,9 @@ public final class StackMap extends Attribute {
     StackMap(int name_index, int length, DataInputStream file, ConstantPool constant_pool)
             throws IOException {
         super(name_index, length, constant_pool);
-        map_length = file.readUnsignedShort();
-        map = new StackMapEntry[map_length];
+        int map_length = file.readUnsignedShort();
         for (int i = 0; i < map_length; i++) {
-            map[i] = new StackMapEntry(file);
+            Utility.swallowStackMapEntry(file);
         }
     }
 }

==================================================
StackMapTable.java
deleted file mode 100644
index e2493bcc8d..0000000000
--- a/java/org/apache/tomcat/util/bcel/classfile/StackMapEntry.java
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
- *  Licensed to the Apache Software Foundation (ASF) under one or more
- *  contributor license agreements.  See the NOTICE file distributed with
- *  this work for additional information regarding copyright ownership.
- *  The ASF licenses this file to You under the Apache License, Version 2.0
- *  (the "License"); you may not use this file except in compliance with
- *  the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- *
- */
-package org.apache.tomcat.util.bcel.classfile;
-
-import java.io.DataInputStream;
-import java.io.IOException;
-import java.io.Serializable;
-
-/**
- * This class represents a stack map entry recording the types of
- * local variables and the the of stack items at a given byte code offset.
- * See CLDC specification &sect;5.3.1.2
- *
- * @version $Id$
- * @author  <A HREF="mailto:m.dahm@gmx.de">M. Dahm</A>
- * @see     StackMap
- */
-public final class StackMapEntry implements Cloneable, Serializable {
-
-    private static final long serialVersionUID = 1L;
-
-    /**
-     * Construct object from file stream.
-     * @param file Input stream
-     * @throws IOException
-     */
-    StackMapEntry(DataInputStream file) throws IOException {
-        file.readShort();   // Unused byte_code_offset
-        int number_of_locals = file.readShort();
-        for (int i = 0; i < number_of_locals; i++) {
-            Utility.swallowStackMapType(file);
-        }
-        int number_of_stack_items = file.readShort();
-        for (int i = 0; i < number_of_stack_items; i++) {
-            Utility.swallowStackMapType(file);
-        }
-    }
-}

==================================================
Utility.java
index d78f1b4b1a..12fdbc2295 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/StackMapTable.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/StackMapTable.java
@@ -32,7 +32,6 @@ import java.io.IOException;
  * @version $Id$
  * @author  <A HREF="mailto:m.dahm@gmx.de">M. Dahm</A>
  * @see     Code
- * @see     StackMapEntry
  */
 public final class StackMapTable extends Attribute {
 

==================================================
