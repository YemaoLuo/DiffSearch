663f76093fda45ba5880f2b2be5005c8fdefe4f4
==================================================
CheckStyle Javadoc checks += JavadocMissingWhitespaceAfterAsterisk
==================================================
Mark Thomas
==================================================
Thu Jan 12 20:37:59 2023 +0000
==================================================
JspWriter.java
CheckStyle Javadoc checks += JavadocMissingWhitespaceAfterAsterisk


==================================================
TagData.java
index e65ae86af4..c196ace91c 100644
--- a/java/jakarta/servlet/jsp/JspWriter.java
+++ b/java/jakarta/servlet/jsp/JspWriter.java
@@ -23,7 +23,7 @@ import java.io.IOException;
  * The actions and template data in a JSP page is written using the JspWriter
  * object that is referenced by the implicit variable out which is initialized
  * automatically using methods in the PageContext object.
- *<p>
+ * <p>
  * This abstract class emulates some of the functionality found in the
  * java.io.BufferedWriter and java.io.PrintWriter classes, however it differs in
  * that it throws java.io.IOException from the print methods while PrintWriter

==================================================
CGIServlet.java
index 680acf3c74..dbc6b6ad16 100644
--- a/java/jakarta/servlet/jsp/tagext/TagData.java
+++ b/java/jakarta/servlet/jsp/tagext/TagData.java
@@ -140,7 +140,7 @@ public class TagData implements Cloneable {
     /**
      * Enumerates the attributes.
      *
-     *@return An enumeration of the attributes in a TagData
+     * @return An enumeration of the attributes in a TagData
      */
     public java.util.Enumeration<String> getAttributes() {
         return attributes.keys();

==================================================
DefaultServlet.java
index d93c7dbb36..c2309e8e58 100644
--- a/java/org/apache/catalina/servlets/CGIServlet.java
+++ b/java/org/apache/catalina/servlets/CGIServlet.java
@@ -857,18 +857,18 @@ public final class CGIServlet extends HttpServlet {
          * CGI search algorithm: search the real path below
          *    &lt;my-webapp-root&gt; and find the first non-directory in
          *    the getPathTranslated("/"), reading/searching from left-to-right.
-         *</p>
-         *<p>
+         * </p>
+         * <p>
          *   The CGI search path will start at
          *   webAppRootDir + File.separator + cgiPathPrefix
          *   (or webAppRootDir alone if cgiPathPrefix is
          *   null).
-         *</p>
-         *<p>
+         * </p>
+         * <p>
          *   cgiPathPrefix is defined by setting
          *   this servlet's cgiPathPrefix init parameter
          *
-         *</p>
+         * </p>
          *
          * @param pathInfo       String from HttpServletRequest.getPathInfo()
          * @param webAppRootDir  String from context.getRealPath("/")

==================================================
JspServletWrapper.java
index dc00ef6897..b48161aeae 100644
--- a/java/org/apache/catalina/servlets/DefaultServlet.java
+++ b/java/org/apache/catalina/servlets/DefaultServlet.java
@@ -98,7 +98,7 @@ import org.apache.tomcat.util.security.Escape;
  * from the web application resource root using the full path from the root
  * of the web application context.
  * <br>e.g. given a web application structure:
- *</p>
+ * </p>
  * <pre>
  * /context
  *   /images

==================================================
PooledObject.java
index 1687a1ecfb..45fffea2b0 100644
--- a/java/org/apache/jasper/servlet/JspServletWrapper.java
+++ b/java/org/apache/jasper/servlet/JspServletWrapper.java
@@ -540,7 +540,7 @@ public class JspServletWrapper {
      * information, and a snippet of the JSP to help debugging.
      * Please see https://bz.apache.org/bugzilla/show_bug.cgi?id=37062 and
      * http://www.tfenne.com/jasper/ for more details.
-     *</p>
+     * </p>
      *
      * @param ex the exception that was the cause of the problem.
      * @return a JasperException with more detailed information

==================================================
AbandonedConfig.java
index 69caef20c2..cb9504ccb9 100644
--- a/java/org/apache/tomcat/dbcp/pool2/PooledObject.java
+++ b/java/org/apache/tomcat/dbcp/pool2/PooledObject.java
@@ -44,7 +44,7 @@ public interface PooledObject<T> extends Comparable<PooledObject<T>> {
     /**
      * Orders instances based on idle time - i.e. the length of time since the
      * instance was returned to the pool. Used by the GKOP idle object evictor.
-     *<p>
+     * <p>
      * Note: This class has a natural ordering that is inconsistent with
      *       equals if distinct objects have the same identity hash code.
      * </p>

==================================================
ElementValue.java
index e3d1f67856..eab91ff74c 100644
--- a/java/org/apache/tomcat/dbcp/pool2/impl/AbandonedConfig.java
+++ b/java/org/apache/tomcat/dbcp/pool2/impl/AbandonedConfig.java
@@ -166,7 +166,7 @@ public class AbandonedConfig {
      * <p>If set to true, abandoned objects are removed by the pool
      * maintenance thread when it runs.  This setting has no effect
      * unless maintenance is enabled by setting
-     *{@link GenericObjectPool#getDurationBetweenEvictionRuns() durationBetweenEvictionRuns}
+     * {@link GenericObjectPool#getDurationBetweenEvictionRuns() durationBetweenEvictionRuns}
      * to a positive number.</p>
      *
      * @return true if abandoned objects are to be removed by the evictor

==================================================
BaseNotificationBroadcaster.java
index c0a421a840..cdef7b262a 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ElementValue.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ElementValue.java
@@ -26,24 +26,24 @@ import org.apache.tomcat.util.bcel.Const;
  *
  * <pre>
  * element_value {
- *    u1 tag;
- *    union {
- *        u2 const_value_index;
+ *     u1 tag;
+ *     union {
+ *         u2 const_value_index;
  *
- *        {   u2 type_name_index;
- *            u2 const_name_index;
- *        } enum_const_value;
+ *         {   u2 type_name_index;
+ *             u2 const_name_index;
+ *         } enum_const_value;
  *
- *        u2 class_info_index;
+ *         u2 class_info_index;
  *
- *        annotation annotation_value;
+ *         annotation annotation_value;
  *
- *        {   u2            num_values;
- *            element_value values[num_values];
- *        } array_value;
- *    } value;
- *}
- *</pre>
+ *         {   u2            num_values;
+ *             element_value values[num_values];
+ *         } array_value;
+ *     } value;
+ * }
+ * </pre>
  */
 public abstract class ElementValue {
 

==================================================
DataSourceFactory.java
index 883f9df045..07773d1853 100644
--- a/java/org/apache/tomcat/util/modeler/BaseNotificationBroadcaster.java
+++ b/java/org/apache/tomcat/util/modeler/BaseNotificationBroadcaster.java
@@ -28,10 +28,9 @@ import javax.management.NotificationListener;
 
 
 /**
- * <p>Implementation of <code>NotificationBroadcaster</code> for attribute
+ * Implementation of <code>NotificationBroadcaster</code> for attribute
  * change notifications.  This class is used by <code>BaseModelMBean</code> to
  * handle notifications of attribute change events to interested listeners.
- *</p>
  *
  * @author Craig R. McClanahan
  * @author Costin Manolache

==================================================
