dccae78c47bcb45a14e886919a688756e096de92
==================================================
Reduce visibility of fields in abstract methods
==================================================
Mark Emlyn
==================================================
Mon Sep 16 13:17:25 2013 +0000
==================================================
AbstractArchiveResourceSet.java
Reduce visibility of fields in abstract methods

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1523636 13f79535-47bb-0310-9956-ffa450edef68



==================================================
JarResourceSet.java
index 9bcb11cf1a..cd5a8bac3a 100644
--- a/java/org/apache/catalina/webresources/AbstractArchiveResourceSet.java
+++ b/java/org/apache/catalina/webresources/AbstractArchiveResourceSet.java
@@ -30,8 +30,22 @@ import org.apache.catalina.util.ResourceSet;
 
 public abstract class AbstractArchiveResourceSet extends AbstractResourceSet {
 
-    protected HashMap<String,JarEntry> jarFileEntries = new HashMap<>();
-    protected String baseUrl;
+    private final HashMap<String,JarEntry> jarFileEntries = new HashMap<>();
+    private String baseUrl;
+
+
+    public String getBaseUrl() {
+        return baseUrl;
+    }
+
+    public void setBaseUrl(String baseUrl) {
+        this.baseUrl = baseUrl;
+    }
+
+    public HashMap<String,JarEntry> getJarFileEntries() {
+        return jarFileEntries;
+    }
+
 
     @Override
     public final String[] list(String path) {

==================================================
JarWarResourceSet.java
index 97e0e8ba0b..7b26ebdb67 100644
--- a/java/org/apache/catalina/webresources/JarResourceSet.java
+++ b/java/org/apache/catalina/webresources/JarResourceSet.java
@@ -74,7 +74,7 @@ public class JarResourceSet extends AbstractArchiveResourceSet {
     @Override
     protected WebResource createArchiveResource(JarEntry jarEntry,
             String webAppPath) {
-        return new JarResource(getRoot(), webAppPath, getBase(), baseUrl,
+        return new JarResource(getRoot(), webAppPath, getBase(), getBaseUrl(),
                 jarEntry, getInternalPath());
     }
 
@@ -86,14 +86,14 @@ public class JarResourceSet extends AbstractArchiveResourceSet {
             Enumeration<JarEntry> entries = jarFile.entries();
             while (entries.hasMoreElements()) {
                 JarEntry entry = entries.nextElement();
-                jarFileEntries.put(entry.getName(), entry);
+                getJarFileEntries().put(entry.getName(), entry);
             }
         } catch (IOException ioe) {
             throw new IllegalArgumentException(ioe);
         }
 
         try {
-            this.baseUrl = (new File(getBase())).toURI().toURL().toString();
+            setBaseUrl((new File(getBase())).toURI().toURL().toString());
         } catch (MalformedURLException e) {
             throw new IllegalArgumentException(e);
         }

==================================================
