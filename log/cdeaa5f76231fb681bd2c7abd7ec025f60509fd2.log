cdeaa5f76231fb681bd2c7abd7ec025f60509fd2
==================================================
Rename
==================================================
Mark Thomas
==================================================
Fri Jun 5 19:05:59 2015 +0000
==================================================
Http2UpgradeHandler.java
Rename

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1683846 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Stream.java
index 07ff6addc4..9d36e54446 100644
--- a/java/org/apache/coyote/http2/Http2UpgradeHandler.java
+++ b/java/org/apache/coyote/http2/Http2UpgradeHandler.java
@@ -423,7 +423,7 @@ public class Http2UpgradeHandler extends AbstractStream implements InternalHttpU
             header[3] = FrameType.DATA.getIdByte();
             if (stream.getOutputBuffer().isFinished()) {
                 header[4] = FLAG_END_OF_STREAM;
-                stream.sendEndOfStream();
+                stream.sentEndOfStream();
             }
             ByteUtil.set31Bits(header, 5, stream.getIdentifier().intValue());
             socketWrapper.write(true, header, 0, header.length);
@@ -720,7 +720,7 @@ public class Http2UpgradeHandler extends AbstractStream implements InternalHttpU
     public void receiveEndOfStream(int streamId) {
         Stream stream = getStream(streamId);
         if (stream != null) {
-            stream.receiveEndOfStream();
+            stream.receivedEndOfStream();
         }
     }
 
@@ -749,7 +749,7 @@ public class Http2UpgradeHandler extends AbstractStream implements InternalHttpU
     @Override
     public void headersEnd(int streamId) {
         Stream stream = getStream(streamId);
-        stream.headersEnd();
+        stream.receivedEndOfHeaders();
         // Process this stream on a container thread
         StreamProcessor streamProcessor = new StreamProcessor(stream, adapter, socketWrapper);
         streamProcessor.setSslSupport(sslSupport);

==================================================
StreamStateMachine.java
index f8221266dd..885e0eb60d 100644
--- a/java/org/apache/coyote/http2/Stream.java
+++ b/java/org/apache/coyote/http2/Stream.java
@@ -66,9 +66,9 @@ public class Stream extends AbstractStream implements HeaderEmitter {
             this.coyoteRequest = coyoteRequest;
             this.inputBuffer = null;
             // Headers have been populated by this point
-            state.receiveHeaders();
+            state.receivedEndOfHeaders();
             // TODO Assuming the body has been read at this point is not valid
-            state.recieveEndOfStream();
+            state.recievedEndOfStream();
         }
         this.coyoteResponse.setOutputBuffer(outputBuffer);
         this.coyoteRequest.setResponse(coyoteResponse);
@@ -235,18 +235,18 @@ public class Stream extends AbstractStream implements HeaderEmitter {
     }
 
 
-    void headersEnd() {
-        state.receiveHeaders();
+    void receivedEndOfHeaders() {
+        state.receivedEndOfHeaders();
     }
 
 
-    void receiveEndOfStream() {
-        state.recieveEndOfStream();
+    void receivedEndOfStream() {
+        state.recievedEndOfStream();
     }
 
 
-    void sendEndOfStream() {
-        state.sendEndOfStream();
+    void sentEndOfStream() {
+        state.sentEndOfStream();
     }
 
 

==================================================
