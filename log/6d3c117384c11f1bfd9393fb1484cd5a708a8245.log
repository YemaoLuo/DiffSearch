6d3c117384c11f1bfd9393fb1484cd5a708a8245
==================================================
Fix the HTTP/2 equivalent of swallowInput
==================================================
Mark Thomas
==================================================
Sun Apr 7 21:39:15 2019 +0100
==================================================
AbstractProcessor.java
Fix the HTTP/2 equivalent of swallowInput

When Tomcat writes a final response without reading all of an HTTP/2
request, reset the stream to inform the client that the remaining
request body is not required.


==================================================
AbstractProcessorLight.java
index 205a7891b2..e7909ba461 100644
--- a/java/org/apache/coyote/AbstractProcessor.java
+++ b/java/org/apache/coyote/AbstractProcessor.java
@@ -197,7 +197,7 @@ public abstract class AbstractProcessor extends AbstractProcessorLight implement
 
 
     @Override
-    public final SocketState dispatch(SocketEvent status) {
+    public final SocketState dispatch(SocketEvent status) throws IOException {
 
         if (status == SocketEvent.OPEN_WRITE && response.getWriteListener() != null) {
             asyncStateMachine.asyncOperation();
@@ -950,6 +950,9 @@ public abstract class AbstractProcessor extends AbstractProcessorLight implement
      *
      * @return The state to return for the socket once the clean-up for the
      *         current request has completed
+     *
+     * @throws IOException If an I/O error occurs while attempting to end the
+     *         request
      */
-    protected abstract SocketState dispatchEndRequest();
+    protected abstract SocketState dispatchEndRequest() throws IOException;
 }

==================================================
Stream.java
index c948c29fee..1320e6005f 100644
--- a/java/org/apache/coyote/http2/LocalStrings.properties
+++ b/java/org/apache/coyote/http2/LocalStrings.properties
@@ -103,6 +103,7 @@ stream.reset.send=Connection [{0}], Stream [{1}], Reset sent due to [{2}]
 stream.trailerHeader.noEndOfStream=Connection [{0}], Stream [{1}], The trailer headers did not include the end of stream flag
 stream.writeTimeout=Timeout waiting for client to increase flow control window to permit stream data to be written
 
+streamProcessor.cancel=Connection [{0}], Stream [{1}], The remaining request body is not required.
 streamProcessor.error.connection=Connection [{0}], Stream [{1}], An error occurred during processing that was fatal to the connection
 streamProcessor.error.stream=Connection [{0}], Stream [{1}], An error occurred during processing that was fatal to the stream
 streamProcessor.flushBufferedWrite.entry=Connection [{0}], Stream [{1}], Flushing buffered writes

==================================================
StreamProcessor.java
index 3e64329e1a..7337eb900e 100644
--- a/java/org/apache/coyote/http2/Stream.java
+++ b/java/org/apache/coyote/http2/Stream.java
@@ -676,7 +676,7 @@ class Stream extends AbstractStream implements HeaderEmitter {
     }
 
 
-    private final boolean isInputFinished() {
+    final boolean isInputFinished() {
         return !state.isFrameTypePermitted(FrameType.DATA);
     }
 

==================================================
