ffdf1686723be2e499f3094a3030a27cc3703816
==================================================
Re-order in preparation for further refactoring. Always set
==================================================
Mark Thomas
==================================================
Fri Jan 23 19:03:05 2015 +0000
==================================================
Http11AprProcessor.java
Re-order in preparation for further refactoring. Always set
SendfileData.keepalive first.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1654322 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http11Nio2Processor.java
index 0cbc73936f..5f83e8be11 100644
--- a/java/org/apache/coyote/http11/Http11AprProcessor.java
+++ b/java/org/apache/coyote/http11/Http11AprProcessor.java
@@ -95,8 +95,8 @@ public class Http11AprProcessor extends AbstractHttp11Processor<Long> {
         openSocket = keepAlive;
         // Do sendfile as needed: add socket to sendfile and end
         if (sendfileData != null && !getErrorState().isError()) {
-            sendfileData.socket = socketWrapper.getSocket().longValue();
             sendfileData.keepAlive = keepAlive;
+            sendfileData.socket = socketWrapper.getSocket().longValue();
             if (!((AprEndpoint)endpoint).getSendfile().add(sendfileData)) {
                 // Didn't send all of the data to sendfile.
                 if (sendfileData.socket == 0) {

==================================================
Http11NioProcessor.java
index 14448d8358..a50c26e8d4 100644
--- a/java/org/apache/coyote/http11/Http11Nio2Processor.java
+++ b/java/org/apache/coyote/http11/Http11Nio2Processor.java
@@ -125,8 +125,8 @@ public class Http11Nio2Processor extends AbstractHttp11Processor<Nio2Channel> {
         openSocket = keepAlive;
         // Do sendfile as needed: add socket to sendfile and end
         if (sendfileData != null && !getErrorState().isError()) {
-            ((Nio2Endpoint.Nio2SocketWrapper) socketWrapper).setSendfileData(sendfileData);
             sendfileData.keepAlive = keepAlive;
+            ((Nio2Endpoint.Nio2SocketWrapper) socketWrapper).setSendfileData(sendfileData);
             switch (((Nio2Endpoint) endpoint)
                     .processSendfile((Nio2Endpoint.Nio2SocketWrapper) socketWrapper)) {
             case DONE:

==================================================
