b866f65a44bd06839ed2981903d6a792a3ffc26c
==================================================
Revert r893208. Catalina does have a requirement to access the full  jsp-property-group info
==================================================
Mark Emlyn
==================================================
Mon Dec 28 22:12:06 2009 +0000
==================================================
JspPropertyGroup.java
Revert r893208. Catalina does have a requirement to access the full  jsp-property-group info

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@894258 13f79535-47bb-0310-9956-ffa450edef68



==================================================
WebRuleSet.java
new file mode 100644
index 0000000000..a208488dd0
--- /dev/null
+++ b/java/org/apache/catalina/deploy/JspPropertyGroup.java
@@ -0,0 +1,84 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *  http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+
+package org.apache.catalina.deploy;
+
+import java.util.LinkedHashSet;
+import java.util.Set;
+
+/**
+ * Representation of a jsp-property-group element in web.xml.
+ */
+public class JspPropertyGroup {
+    private Boolean deferredSyntax = null;
+    public void setDeferredSyntax(String deferredSyntax) {
+        this.deferredSyntax = Boolean.valueOf(deferredSyntax);
+    }
+    public Boolean getDeferredSyntax() { return deferredSyntax; }
+
+    private Boolean elIgnored = null;
+    public void setElIgnored(String elIgnored) {
+        this.elIgnored = Boolean.valueOf(elIgnored);
+    }
+    public Boolean getElIgnored() { return elIgnored; }
+
+    private Set<String> includeCodas = new LinkedHashSet<String>();
+    public void addIncludeCoda(String includeCoda) {
+        includeCodas.add(includeCoda);
+    }
+    public Set<String> getIncludeCodas() { return includeCodas; }
+
+    private Set<String> includePreludes = new LinkedHashSet<String>();
+    public void addIncludePrelude(String includePrelude) {
+        includePreludes.add(includePrelude);
+    }
+    public Set<String> getIncludePreludes() { return includePreludes; }
+
+    private Boolean isXml = null;
+    public void setIsXml(String isXml) {
+        this.isXml = Boolean.valueOf(isXml);
+    }
+    public Boolean getIsXml() { return isXml; }
+
+    private String pageEncoding = null;
+    public void setPageEncoding(String pageEncoding) {
+        this.pageEncoding = pageEncoding;
+    }
+    public String getPageEncoding() { return this.pageEncoding; }
+    
+    private Boolean scriptingInvalid = null;
+    public void setScriptingInvalid(String scriptingInvalid) {
+        this.scriptingInvalid = Boolean.valueOf(scriptingInvalid);
+    }
+    public Boolean getScriptingInvalid() { return scriptingInvalid; }
+
+    private Boolean trimWhitespace = null;
+    public void setTrimWhitespace(String trimWhitespace) {
+        this.trimWhitespace = Boolean.valueOf(trimWhitespace);
+    }
+    public Boolean getTrimWhitespace() { return trimWhitespace; }
+
+    private String urlPattern = null;
+    public void setUrlPattern(String urlPattern) {
+        this.urlPattern = urlPattern;
+    }
+    public String getUrlPattern() { return this.urlPattern; }
+    
+}

==================================================
WebXml.java
index dc4bd2bee4..eab868c43b 100644
--- a/java/org/apache/catalina/startup/WebRuleSet.java
+++ b/java/org/apache/catalina/startup/WebRuleSet.java
@@ -261,8 +261,29 @@ public class WebRuleSet extends RuleSetBase {
         digester.addRule(fullPrefix + "/jsp-config",
                          jspConfig);
 
+        digester.addObjectCreate(fullPrefix + "/jsp-config/jsp-property-group",
+                                 "org.apache.catalina.deploy.JspPropertyGroup");
+        digester.addSetNext(fullPrefix + "/jsp-config/jsp-property-group",
+                            "addJspPropertyGroup",
+                            "org.apache.catalina.deploy.JspPropertyGroup");
+        digester.addCallMethod(fullPrefix + "/jsp-config/jsp-property-group/deferred-syntax-allowed-as-literal",
+                               "setDeferredSyntax", 0);
+        digester.addCallMethod(fullPrefix + "/jsp-config/jsp-property-group/el-ignored",
+                               "setElIgnored", 0);
+        digester.addCallMethod(fullPrefix + "/jsp-config/jsp-property-group/include-coda",
+                               "addIncludeCoda", 0);
+        digester.addCallMethod(fullPrefix + "/jsp-config/jsp-property-group/include-prelude",
+                               "addIncludePrelude", 0);
+        digester.addCallMethod(fullPrefix + "/jsp-config/jsp-property-group/is-xml",
+                               "setIsXml", 0);
+        digester.addCallMethod(fullPrefix + "/jsp-config/jsp-property-group/page-encoding",
+                               "setPageEncoding", 0);
+        digester.addCallMethod(fullPrefix + "/jsp-config/jsp-property-group/scripting-invalid",
+                               "setScriptingInvalid", 0);
+        digester.addCallMethod(fullPrefix + "/jsp-config/jsp-property-group/trim-directive-whitespaces",
+                               "setTrimWhitespace", 0);
         digester.addCallMethod(fullPrefix + "/jsp-config/jsp-property-group/url-pattern",
-                               "addJspUrlPattern", 0);
+                               "setUrlPattern", 0);
 
         digester.addRule(fullPrefix + "/login-config",
                          loginConfig);

==================================================
