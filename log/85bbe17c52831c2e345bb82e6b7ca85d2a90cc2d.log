85bbe17c52831c2e345bb82e6b7ca85d2a90cc2d
==================================================
Javadoc fixes.
==================================================
Remy Maucherat
==================================================
Mon Jan 11 23:29:45 2016 +0000
==================================================
WebappClassLoaderBase.java
Javadoc fixes.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1724144 13f79535-47bb-0310-9956-ffa450edef68



==================================================
WebappLoader.java
index 11ecbdcb23..880cd0278e 100644
--- a/java/org/apache/catalina/loader/WebappClassLoaderBase.java
+++ b/java/org/apache/catalina/loader/WebappClassLoaderBase.java
@@ -445,7 +445,7 @@ public abstract class WebappClassLoaderBase extends URLClassLoader
     // ------------------------------------------------------------- Properties
 
     /**
-     * Get associated resources.
+     * @return associated resources.
      */
     public WebResourceRoot getResources() {
         return this.resources;
@@ -454,6 +454,8 @@ public abstract class WebappClassLoaderBase extends URLClassLoader
 
     /**
      * Set associated resources.
+     * @param resources the resources from which the classloader will
+     *     load the classes
      */
     public void setResources(WebResourceRoot resources) {
         this.resources = resources;
@@ -461,7 +463,7 @@ public abstract class WebappClassLoaderBase extends URLClassLoader
 
 
     /**
-     * Return the context name for this class loader.
+     * @return the context name for this class loader.
      */
     public String getContextName() {
         if (resources == null) {
@@ -474,6 +476,8 @@ public abstract class WebappClassLoaderBase extends URLClassLoader
 
     /**
      * Return the "delegate first" flag for this class loader.
+     * @return <code>true</code> if the class lookup will delegate to
+     *   the parent first. The default in Tomcat is <code>false</code>.
      */
     public boolean getDelegate() {
 
@@ -560,6 +564,8 @@ public abstract class WebappClassLoaderBase extends URLClassLoader
 
     /**
      * Return the clearReferencesStatic flag for this Context.
+     * @return <code>true</code> if the classloader should attempt to set to null
+     *    static final fields in loaded classes
      */
     public boolean getClearReferencesStatic() {
         return (this.clearReferencesStatic);
@@ -577,7 +583,7 @@ public abstract class WebappClassLoaderBase extends URLClassLoader
 
 
     /**
-     * Return the clearReferencesStopThreads flag for this Context.
+     * @return the clearReferencesStopThreads flag for this Context.
      */
     public boolean getClearReferencesStopThreads() {
         return (this.clearReferencesStopThreads);
@@ -596,7 +602,7 @@ public abstract class WebappClassLoaderBase extends URLClassLoader
 
 
     /**
-     * Return the clearReferencesStopTimerThreads flag for this Context.
+     * @return the clearReferencesStopTimerThreads flag for this Context.
      */
     public boolean getClearReferencesStopTimerThreads() {
         return (this.clearReferencesStopTimerThreads);
@@ -615,7 +621,7 @@ public abstract class WebappClassLoaderBase extends URLClassLoader
 
 
     /**
-     * Return the clearReferencesLogFactoryRelease flag for this Context.
+     * @return the clearReferencesLogFactoryRelease flag for this Context.
      */
     public boolean getClearReferencesLogFactoryRelease() {
         return (this.clearReferencesLogFactoryRelease);
@@ -635,7 +641,7 @@ public abstract class WebappClassLoaderBase extends URLClassLoader
 
 
     /**
-     * Return the clearReferencesHttpClientKeepAliveThread flag for this
+     * @return the clearReferencesHttpClientKeepAliveThread flag for this
      * Context.
      */
     public boolean getClearReferencesHttpClientKeepAliveThread() {
@@ -726,6 +732,7 @@ public abstract class WebappClassLoaderBase extends URLClassLoader
     /**
      * Have one or more classes or resources been modified so that a reload
      * is appropriate?
+     * @return <code>true</code> if there's been a modification
      */
     public boolean modified() {
 
@@ -782,9 +789,6 @@ public abstract class WebappClassLoaderBase extends URLClassLoader
     }
 
 
-    /**
-     * Render a String representation of this object.
-     */
     @Override
     public String toString() {
 
@@ -812,9 +816,7 @@ public abstract class WebappClassLoaderBase extends URLClassLoader
     // ---------------------------------------------------- ClassLoader Methods
 
 
-    /**
-     * Expose this method for use by the unit tests.
-     */
+    // Note: exposed for use by tests
     protected final Class<?> doDefineClass(String name, byte[] b, int off, int len,
             ProtectionDomain protectionDomain) {
         return super.defineClass(name, b, off, len, protectionDomain);
@@ -2544,6 +2546,9 @@ public abstract class WebappClassLoaderBase extends URLClassLoader
     /**
      * Find specified resource in local repositories.
      *
+     * @param name the resource name
+     * @param path the resource path
+     * @param manifestRequired will load an associated manifest
      * @return the loaded resource, or null if the resource isn't found
      */
     protected ResourceEntry findResourceInternal(final String name, final String path,
@@ -2679,6 +2684,10 @@ public abstract class WebappClassLoaderBase extends URLClassLoader
     /**
      * Returns true if the specified package name is sealed according to the
      * given manifest.
+     *
+     * @param name Path name to check
+     * @param man Associated manifest
+     * @return <code>true</code> if the manifest associated says it is sealed
      */
     protected boolean isPackageSealed(String name, Manifest man) {
 
@@ -2705,6 +2714,7 @@ public abstract class WebappClassLoaderBase extends URLClassLoader
      * <code>null</code>.
      *
      * @param name Name of the resource to return
+     * @return a stream to the loaded resource
      */
     protected InputStream findLoadedResource(String name) {
 
@@ -2732,6 +2742,7 @@ public abstract class WebappClassLoaderBase extends URLClassLoader
      * If this class has not been cached, return <code>null</code>.
      *
      * @param name The binary name of the resource to return
+     * @return a loaded class
      */
     protected Class<?> findLoadedClass0(String name) {
 
@@ -2768,7 +2779,7 @@ public abstract class WebappClassLoaderBase extends URLClassLoader
      * Filter classes.
      *
      * @param name class name
-     * @return true if the class should be filtered
+     * @return <code>true</code> if the class should be filtered
      */
     protected synchronized boolean filter(String name) {
 

==================================================
HTMLManagerServlet.java
index 7c1eefc67e..a27af92b23 100644
--- a/java/org/apache/catalina/loader/WebappLoader.java
+++ b/java/org/apache/catalina/loader/WebappLoader.java
@@ -222,7 +222,7 @@ public class WebappLoader extends LifecycleMBeanBase
 
 
     /**
-     * Return the ClassLoader class name.
+     * @return the ClassLoader class name.
      */
     public String getLoaderClass() {
         return (this.loaderClass);

==================================================
JspHelper.java
index b833ae4b27..210782b233 100644
--- a/java/org/apache/catalina/manager/HTMLManagerServlet.java
+++ b/java/org/apache/catalina/manager/HTMLManagerServlet.java
@@ -304,6 +304,7 @@ public final class HTMLManagerServlet extends ManagerServlet {
      * @param config URL of the context configuration file to be deployed
      * @param cn Name of the application to be deployed
      * @param war URL of the web application archive to be deployed
+     * @param smClient internationalized strings
      * @return message String
      */
     protected String deployInternal(String config, ContextName cn, String war,
@@ -324,6 +325,8 @@ public final class HTMLManagerServlet extends ManagerServlet {
      * @param request The request
      * @param response The response
      * @param message a message to display
+     * @param smClient internationalized strings
+     * @throws IOException an IO error occurred
      */
     protected void list(HttpServletRequest request,
                      HttpServletResponse response,
@@ -759,8 +762,9 @@ public final class HTMLManagerServlet extends ManagerServlet {
      * Extract the expiration request parameter
      *
      * @param cn Name of the application from which to expire sessions
-     * @param req
-     * @param smClient  StringManager for the client's locale
+     * @param req The Servlet request
+     * @param smClient StringManager for the client's locale
+     * @return message string
      */
     protected String expireSessions(ContextName cn, HttpServletRequest req,
             StringManager smClient) {
@@ -777,12 +781,14 @@ public final class HTMLManagerServlet extends ManagerServlet {
     }
 
     /**
+     * Handle session operations.
      *
-     * @param req
-     * @param resp
-     * @param smClient  StringManager for the client's locale
-     * @throws ServletException
-     * @throws IOException
+     * @param cn Name of the application for the sessions operation
+     * @param req The Servlet request
+     * @param resp The Servlet response
+     * @param smClient StringManager for the client's locale
+     * @throws ServletException Propagated Servlet error
+     * @throws IOException An IO error occurred
      */
     protected void doSessions(ContextName cn, HttpServletRequest req,
             HttpServletResponse resp, StringManager smClient)
@@ -867,13 +873,13 @@ public final class HTMLManagerServlet extends ManagerServlet {
     }
 
     /**
-     *
+     * List session.
      * @param cn Name of the application for which the sessions will be listed
-     * @param req
-     * @param resp
-     * @param smClient  StringManager for the client's locale
-     * @throws ServletException
-     * @throws IOException
+     * @param req The Servlet request
+     * @param resp The Servlet response
+     * @param smClient StringManager for the client's locale
+     * @throws ServletException Propagated Servlet error
+     * @throws IOException An IO error occurred
      */
     protected void displaySessionsListPage(ContextName cn,
             HttpServletRequest req, HttpServletResponse resp,
@@ -916,12 +922,15 @@ public final class HTMLManagerServlet extends ManagerServlet {
     }
 
     /**
+     * Display session details.
      *
-     * @param req
-     * @param resp
-     * @param smClient  StringManager for the client's locale
-     * @throws ServletException
-     * @throws IOException
+     * @param req The Servlet request
+     * @param resp The Servlet response
+     * @param cn Name of the application for which the sessions will be listed
+     * @param sessionId the session id
+     * @param smClient StringManager for the client's locale
+     * @throws ServletException Propagated Servlet error
+     * @throws IOException An IO error occurred
      */
     protected void displaySessionDetailPage(HttpServletRequest req,
             HttpServletResponse resp, ContextName cn, String sessionId,
@@ -938,16 +947,16 @@ public final class HTMLManagerServlet extends ManagerServlet {
     }
 
     /**
-     * Invalidate HttpSessions
+     * Invalidate specified sessions.
+     *
      * @param cn Name of the application for which sessions are to be
      *           invalidated
-     * @param sessionIds
+     * @param sessionIds the session ids of the sessions
      * @param smClient  StringManager for the client's locale
      * @return number of invalidated sessions
-     * @throws IOException
      */
     protected int invalidateSessions(ContextName cn, String[] sessionIds,
-            StringManager smClient) throws IOException {
+            StringManager smClient) {
         if (null == sessionIds) {
             return 0;
         }
@@ -982,14 +991,13 @@ public final class HTMLManagerServlet extends ManagerServlet {
      * Removes an attribute from an HttpSession
      * @param cn Name of the application hosting the session from which the
      *           attribute is to be removed
-     * @param sessionId
-     * @param attributeName
+     * @param sessionId the session id
+     * @param attributeName the attribute name
      * @param smClient  StringManager for the client's locale
      * @return true if there was an attribute removed, false otherwise
-     * @throws IOException
      */
     protected boolean removeSessionAttribute(ContextName cn, String sessionId,
-            String attributeName, StringManager smClient) throws IOException {
+            String attributeName, StringManager smClient) {
         HttpSession session =
             getSessionForNameAndId(cn, sessionId, smClient).getSession();
         if (null == session) {

==================================================
ManagerServlet.java
index dd0cc8fbeb..197618f111 100644
--- a/java/org/apache/catalina/manager/JspHelper.java
+++ b/java/org/apache/catalina/manager/JspHelper.java
@@ -65,8 +65,8 @@ public class JspHelper {
 
     /**
      * Try to get user name from the session, if possible.
-     * @param in_session
-     * @return String
+     * @param in_session The Servlet session
+     * @return the user name
      */
     public static String guessDisplayUserFromSession(Session in_session) {
         Object user = SessionUtils.guessUserFromSession(in_session);
@@ -202,6 +202,8 @@ public class JspHelper {
      *    ' -&gt; &amp;#039;
      *
      * See also OutSupport.writeEscapedXml().
+     * @param buffer The XML to escape
+     * @return the escaped XML
      */
     @SuppressWarnings("null") // escapedBuffer cannot be null
     public static String escapeXml(String buffer) {

==================================================
StatusTransformer.java
index 65e4c60b43..8916170ed6 100644
--- a/java/org/apache/catalina/manager/ManagerServlet.java
+++ b/java/org/apache/catalina/manager/ManagerServlet.java
@@ -511,6 +511,10 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
 
     /**
      * Find potential memory leaks caused by web application reload.
+     *
+     * @param statusLine Print a status line
+     * @param writer The output writer
+     * @param smClient StringManager for the client's locale
      */
     protected void findleaks(boolean statusLine, PrintWriter writer,
             StringManager smClient) {
@@ -541,10 +545,11 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
 
 
     /**
+     * Write some VM info.
      *
-     * Write some VM info
-     *
-     * @param writer
+     * @param writer The output writer
+     * @param smClient StringManager for the client's locale
+     * @param requestedLocales the client's locales
      */
     protected void vmInfo(PrintWriter writer, StringManager smClient,
             Enumeration<Locale> requestedLocales) {
@@ -553,10 +558,11 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
     }
 
     /**
+     * Write a JVM thread dump.
      *
-     * Write a JVM thread dump
-     *
-     * @param writer
+     * @param writer The output writer
+     * @param smClient StringManager for the client's locale
+     * @param requestedLocales the client's locales
      */
     protected void threadDump(PrintWriter writer, StringManager smClient,
             Enumeration<Locale> requestedLocales) {
@@ -943,6 +949,7 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
      * Render a list of the currently active Contexts in our virtual host.
      *
      * @param writer Writer to render to
+     * @param smClient i18n support for current client's locale
      */
     protected void list(PrintWriter writer, StringManager smClient) {
 
@@ -982,6 +989,7 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
      *
      * @param writer Writer to render to
      * @param cn Name of the application to be restarted
+     * @param smClient i18n support for current client's locale
      */
     protected void reload(PrintWriter writer, ContextName cn,
             StringManager smClient) {
@@ -1021,8 +1029,10 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
     /**
      * Render a list of available global JNDI resources.
      *
+     * @param writer Writer to render to
      * @param type Fully qualified class name of the resource type of interest,
      *  or <code>null</code> to list resources of all types
+     * @param smClient i18n support for current client's locale
      */
     protected void resources(PrintWriter writer, String type,
             StringManager smClient) {
@@ -1069,6 +1079,14 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
 
     /**
      * List the resources of the given context.
+     * @param writer Writer to render to
+     * @param prefix Path for recursion
+     * @param namingContext The naming context for lookups
+     * @param type Fully qualified class name of the resource type of interest,
+     *  or <code>null</code> to list resources of all types
+     * @param clazz The resource class or <code>null</code> to list
+     *  resources of all types
+     * @param smClient i18n support for current client's locale
      */
     protected void printResources(PrintWriter writer, String prefix,
                                   javax.naming.Context namingContext,
@@ -1109,7 +1127,8 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
     /**
      * Writes System OS and JVM properties.
      * @param writer Writer to render to
-     */
+     * @param smClient i18n support for current client's locale
+    */
     protected void serverinfo(PrintWriter writer,  StringManager smClient) {
         if (debug >= 1)
             log("serverinfo");
@@ -1145,6 +1164,7 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
      * @param writer Writer to render to
      * @param cn Name of the application to list session information for
      * @param idle Expire all sessions with idle time &gt; idle for this context
+     * @param smClient i18n support for current client's locale
      */
     protected void sessions(PrintWriter writer, ContextName cn, int idle,
             StringManager smClient) {
@@ -1247,11 +1267,12 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
 
 
     /**
-     *
      * Extract the expiration request parameter
      *
-     * @param cn
-     * @param req
+     * @param writer Writer to render to
+     * @param cn Name of the application to list session information for
+     * @param req The Servlet request
+     * @param smClient i18n support for current client's locale
      */
     protected void expireSessions(PrintWriter writer, ContextName cn,
             HttpServletRequest req, StringManager smClient) {
@@ -1272,6 +1293,7 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
      *
      * @param writer Writer to render to
      * @param cn Name of the application to be started
+     * @param smClient i18n support for current client's locale
      */
     protected void start(PrintWriter writer, ContextName cn,
             StringManager smClient) {
@@ -1317,6 +1339,7 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
      *
      * @param writer Writer to render to
      * @param cn Name of the application to be stopped
+     * @param smClient i18n support for current client's locale
      */
     protected void stop(PrintWriter writer, ContextName cn,
             StringManager smClient) {
@@ -1360,6 +1383,7 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
      *
      * @param writer Writer to render to
      * @param cn Name of the application to be removed
+     * @param smClient i18n support for current client's locale
      */
     protected void undeploy(PrintWriter writer, ContextName cn,
             StringManager smClient) {
@@ -1441,6 +1465,10 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
 
     /**
      * Invoke the isDeployed method on the deployer.
+     *
+     * @param name The webapp name
+     * @return <code>true</code> if a webapp with that name is deployed
+     * @throws Exception Propagate JMX invocation error
      */
     protected boolean isDeployed(String name)
         throws Exception {
@@ -1454,6 +1482,9 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
 
     /**
      * Invoke the check method on the deployer.
+     *
+     * @param name The webapp name
+     * @throws Exception Propagate JMX invocation error
      */
     protected void check(String name)
         throws Exception {
@@ -1465,6 +1496,10 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
 
     /**
      * Invoke the isServiced method on the deployer.
+     *
+     * @param name The webapp name
+     * @return <code>true</code> if a webapp with that name is being serviced
+     * @throws Exception Propagate JMX invocation error
      */
     protected boolean isServiced(String name)
         throws Exception {
@@ -1478,6 +1513,9 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
 
     /**
      * Invoke the addServiced method on the deployer.
+     *
+     * @param name The webapp name
+     * @throws Exception Propagate JMX invocation error
      */
     protected void addServiced(String name)
         throws Exception {
@@ -1489,6 +1527,9 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
 
     /**
      * Invoke the removeServiced method on the deployer.
+     *
+     * @param name The webapp name
+     * @throws Exception Propagate JMX invocation error
      */
     protected void removeServiced(String name)
         throws Exception {
@@ -1503,6 +1544,7 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
      * subdirectories recursively. The code assumes that the directory exists.
      *
      * @param dir File object representing the directory to be deleted.
+     * @return <code>true</code> if the deletion was successful
      */
     protected boolean undeployDir(File dir) {
 
@@ -1591,6 +1633,7 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
      *
      * @param src File object representing the source
      * @param dest File object representing the destination
+     * @return <code>true</code> if the copy was successful
      */
     public static boolean copy(File src, File dest) {
         boolean result = false;
@@ -1611,6 +1654,8 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
      *
      * @param src File object representing the source
      * @param dest File object representing the destination
+     * @param buf Temp byte buffer
+     * @return <code>true</code> if the copy was successful
      */
     public static boolean copyInternal(File src, File dest, byte[] buf) {
 

==================================================
HTMLHostManagerServlet.java
index c569bf575a..c1ddcafc9c 100644
--- a/java/org/apache/catalina/manager/StatusTransformer.java
+++ b/java/org/apache/catalina/manager/StatusTransformer.java
@@ -132,9 +132,6 @@ public class StatusTransformer {
     }
 
 
-    /**
-     *
-     */
     public static void writeFooter(PrintWriter writer, int mode) {
         if (mode == 0){
             // HTML Tail Section
@@ -146,8 +143,11 @@ public class StatusTransformer {
 
 
     /**
-     * Write the OS state. Mode 0 will generate HTML.
-     * Mode 1 will generate XML.
+     * Write the OS state.
+     *
+     * @param writer The output writer
+     * @param mode Mode <code>0</code> will generate HTML.
+     *   Mode <code>1</code> will generate XML.
      */
     public static void writeOSState(PrintWriter writer, int mode) {
         long[] result = new long[16];
@@ -197,8 +197,11 @@ public class StatusTransformer {
 
 
     /**
-     * Write the VM state. Mode 0 will generate HTML.
-     * Mode 1 will generate XML.
+     * Write the VM state.
+     * @param writer The output writer
+     * @param mode Mode <code>0</code> will generate HTML.
+     *   Mode <code>1</code> will generate XML.
+     * @throws Exception Propagated JMX error
      */
     public static void writeVMState(PrintWriter writer, int mode)
         throws Exception {
@@ -273,6 +276,15 @@ public class StatusTransformer {
 
     /**
      * Write connector state.
+     * @param writer The output writer
+     * @param tpName MBean name of the thread pool
+     * @param name Connector name
+     * @param mBeanServer MBean server
+     * @param globalRequestProcessors MBean names for the global request processors
+     * @param requestProcessors MBean names for the request processors
+     * @param mode Mode <code>0</code> will generate HTML.
+     *   Mode <code>1</code> will generate XML.
+     * @throws Exception Propagated JMX error
      */
     public static void writeConnectorState(PrintWriter writer,
             ObjectName tpName, String name, MBeanServer mBeanServer,
@@ -401,6 +413,12 @@ public class StatusTransformer {
 
     /**
      * Write processor state.
+     * @param writer The output writer
+     * @param pName MBean name of the processor
+     * @param  mBeanServer MBean server
+     * @param mode Mode <code>0</code> will generate HTML.
+     *   Mode <code>1</code> will generate XML.
+     * @throws Exception Propagated JMX error
      */
     protected static void writeProcessorState(PrintWriter writer,
                                               ObjectName pName,
@@ -591,6 +609,11 @@ public class StatusTransformer {
 
     /**
      * Write applications state.
+     * @param writer The output writer
+     * @param mBeanServer MBean server
+     * @param mode Mode <code>0</code> will generate HTML.
+     *   Mode <code>1</code> will generate XML.
+     * @throws Exception Propagated JMX error
      */
     public static void writeDetailedState(PrintWriter writer,
                                           MBeanServer mBeanServer, int mode)
@@ -649,6 +672,12 @@ public class StatusTransformer {
 
     /**
      * Write context state.
+     * @param writer The output writer
+     * @param objectName The context MBean name
+     * @param mBeanServer MBean server
+     * @param mode Mode <code>0</code> will generate HTML.
+     *   Mode <code>1</code> will generate XML.
+     * @throws Exception Propagated JMX error
      */
     protected static void writeContext(PrintWriter writer,
                                        ObjectName objectName,
@@ -741,6 +770,12 @@ public class StatusTransformer {
 
     /**
      * Write detailed information about a manager.
+     * @param writer The output writer
+     * @param objectName The manager MBean name
+     * @param mBeanServer MBean server
+     * @param mode Mode <code>0</code> will generate HTML.
+     *   Mode <code>1</code> will generate XML.
+     * @throws Exception Propagated JMX error
      */
     public static void writeManager(PrintWriter writer, ObjectName objectName,
                                     MBeanServer mBeanServer, int mode)
@@ -782,6 +817,12 @@ public class StatusTransformer {
 
     /**
      * Write JSP monitoring information.
+     * @param writer The output writer
+     * @param jspMonitorONs The JSP MBean names
+     * @param mBeanServer MBean server
+     * @param mode Mode <code>0</code> will generate HTML.
+     *   Mode <code>1</code> will generate XML.
+     * @throws Exception Propagated JMX error
      */
     public static void writeJspMonitor(PrintWriter writer,
                                        Set<ObjectName> jspMonitorONs,
@@ -815,6 +856,12 @@ public class StatusTransformer {
 
     /**
      * Write detailed information about a wrapper.
+     * @param writer The output writer
+     * @param objectName The wrapper MBean names
+     * @param mBeanServer MBean server
+     * @param mode Mode <code>0</code> will generate HTML.
+     *   Mode <code>1</code> will generate XML.
+     * @throws Exception Propagated JMX error
      */
     public static void writeWrapper(PrintWriter writer, ObjectName objectName,
                                     MBeanServer mBeanServer, int mode)
@@ -871,6 +918,7 @@ public class StatusTransformer {
      * codes in the request URL that is often reported in error messages.
      *
      * @param obj The message string to be filtered
+     * @return filtered HTML content
      */
     public static String filter(Object obj) {
 
@@ -907,7 +955,9 @@ public class StatusTransformer {
     /**
      * Display the given size in bytes, either as KB or MB.
      *
+     * @param obj The object to format
      * @param mb true to display megabytes, false for kilobytes
+     * @return formatted size
      */
     public static String formatSize(Object obj, boolean mb) {
 
@@ -944,7 +994,9 @@ public class StatusTransformer {
     /**
      * Display the given time in ms, either as ms or s.
      *
+     * @param obj The object to format
      * @param seconds true to display seconds, false for milliseconds
+     * @return formatted time
      */
     public static String formatTime(Object obj, boolean seconds) {
 
@@ -968,8 +1020,7 @@ public class StatusTransformer {
      * Formats the given time (given in seconds) as a string.
      *
      * @param obj Time object to be formatted as string
-     *
-     * @return String formatted time
+     * @return formatted time
      */
     public static String formatSeconds(Object obj) {
 

==================================================
HostManagerServlet.java
index f4319d1099..695506ac89 100644
--- a/java/org/apache/catalina/manager/host/HTMLHostManagerServlet.java
+++ b/java/org/apache/catalina/manager/host/HTMLHostManagerServlet.java
@@ -155,7 +155,10 @@ public final class HTMLHostManagerServlet extends HostManagerServlet {
     /**
      * Add a host using the specified parameters.
      *
-     * @param name host name
+     * @param request The Servlet request
+     * @param name Host name
+     * @param smClient StringManager for the client's locale
+     * @return output
      */
     protected String add(HttpServletRequest request,String name,
             StringManager smClient) {
@@ -172,7 +175,9 @@ public final class HTMLHostManagerServlet extends HostManagerServlet {
     /**
      * Remove the specified host.
      *
-     * @param name host name
+     * @param name Host name
+     * @param smClient StringManager for the client's locale
+     * @return output
      */
     protected String remove(String name, StringManager smClient) {
 
@@ -189,6 +194,8 @@ public final class HTMLHostManagerServlet extends HostManagerServlet {
      * Start the host with the specified name.
      *
      * @param name Host name
+     * @param smClient StringManager for the client's locale
+     * @return output
      */
     protected String start(String name, StringManager smClient) {
 
@@ -205,6 +212,8 @@ public final class HTMLHostManagerServlet extends HostManagerServlet {
      * Stop the host with the specified name.
      *
      * @param name Host name
+     * @param smClient StringManager for the client's locale
+     * @return output
      */
     protected String stop(String name, StringManager smClient) {
 
@@ -224,6 +233,8 @@ public final class HTMLHostManagerServlet extends HostManagerServlet {
      * @param request The request
      * @param response The response
      * @param message a message to display
+     * @param smClient StringManager for the client's locale
+     * @throws IOException An IO error occurred
      */
     public void list(HttpServletRequest request,
                      HttpServletResponse response,

==================================================
SessionUtils.java
index 2e05230ad9..fe9455c388 100644
--- a/java/org/apache/catalina/manager/host/HostManagerServlet.java
+++ b/java/org/apache/catalina/manager/host/HostManagerServlet.java
@@ -237,7 +237,8 @@ public class HostManagerServlet
      * @param writer The output writer
      * @param name The host name
      * @param htmlMode Flag value
-     */
+     * @param smClient StringManager for the client's locale
+    */
     protected void add(HttpServletRequest request, PrintWriter writer,
             String name, boolean htmlMode, StringManager smClient) {
         String aliases = request.getParameter("aliases");
@@ -260,10 +261,11 @@ public class HostManagerServlet
 
     /**
      * Extract boolean value from checkbox with default.
-     * @param request
-     * @param parameter
-     * @param theDefault
-     * @param htmlMode
+     * @param request The Servlet request
+     * @param parameter The parameter name
+     * @param theDefault Default value
+     * @param htmlMode Flag value
+     * @return the boolean value for the parameter
      */
     protected boolean booleanParameter(HttpServletRequest request,
             String parameter, boolean theDefault, boolean htmlMode) {
@@ -287,9 +289,6 @@ public class HostManagerServlet
     }
 
 
-    /**
-     * Initialize this servlet.
-     */
     @Override
     public void init() throws ServletException {
 
@@ -322,6 +321,12 @@ public class HostManagerServlet
      * @param aliases comma separated alias list
      * @param appBase application base for the host
      * @param manager should the manager webapp be deployed to the new host ?
+     * @param autoDeploy Flag value
+     * @param deployOnStartup Flag value
+     * @param deployXML Flag value
+     * @param unpackWARs Flag value
+     * @param copyXML Flag value
+     * @param smClient StringManager for the client's locale
      */
     protected synchronized void add
         (PrintWriter writer, String name, String aliases, String appBase,
@@ -436,6 +441,7 @@ public class HostManagerServlet
      *
      * @param writer Writer to render results to
      * @param name host name
+     * @param smClient StringManager for the client's locale
      */
     protected synchronized void remove(PrintWriter writer, String name,
             StringManager smClient) {
@@ -494,6 +500,7 @@ public class HostManagerServlet
      * Render a list of the currently active Contexts in our virtual host.
      *
      * @param writer Writer to render to
+     * @param smClient StringManager for the client's locale
      */
     protected void list(PrintWriter writer, StringManager smClient) {
 
@@ -526,6 +533,7 @@ public class HostManagerServlet
      *
      * @param writer Writer to render to
      * @param name Host name
+     * @param smClient StringManager for the client's locale
      */
     protected void start(PrintWriter writer, String name,
             StringManager smClient) {
@@ -587,6 +595,7 @@ public class HostManagerServlet
      *
      * @param writer Writer to render to
      * @param name Host name
+     * @param smClient StringManager for the client's locale
      */
     protected void stop(PrintWriter writer, String name,
             StringManager smClient) {
@@ -648,6 +657,8 @@ public class HostManagerServlet
 
     /**
      * Get config base.
+     * @param hostName The host name
+     * @return the config base for the host
      */
     protected File getConfigBase(String hostName) {
         File configBase = new File(context.getCatalinaBase(), "conf");

==================================================
BaseModelMBean.java
index 8336ed89c8..a28c06e237 100644
--- a/java/org/apache/catalina/manager/util/SessionUtils.java
+++ b/java/org/apache/catalina/manager/util/SessionUtils.java
@@ -71,8 +71,8 @@ public class SessionUtils {
      * Try to get user locale from the session, if possible.
      * IMPLEMENTATION NOTE: this method has explicit support for Tapestry 3, Struts 1.x and Spring
      * JSF check the browser meta tag "accept languages" to choose what language to display.
-     * @param in_session
-     * @return String
+     * @param in_session The session
+     * @return the locale
      */
     public static Locale guessLocaleFromSession(final Session in_session) {
         return guessLocaleFromSession(in_session.getSession());
@@ -163,8 +163,8 @@ public class SessionUtils {
 
     /**
      * Try to get user from the session, if possible.
-     * @param in_session
-     * @return Object
+     * @param in_session The session
+     * @return the user
      */
     public static Object guessUserFromSession(final Session in_session) {
         if (null == in_session) {

==================================================
