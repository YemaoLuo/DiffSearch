3d50a4fd89aaad2c00fd0a39c00cda0bbae27167
==================================================
Remove unused code
==================================================
Mark Thomas
==================================================
Fri Jan 23 19:21:50 2015 +0000
==================================================
AbstractProcessor.java
Remove unused code

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1654336 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AjpProcessor.java
index 9dcfad65e0..dfb4ba374e 100644
--- a/java/org/apache/coyote/AbstractProcessor.java
+++ b/java/org/apache/coyote/AbstractProcessor.java
@@ -205,14 +205,5 @@ public abstract class AbstractProcessor<S> implements ActionHook, Processor<S> {
     @Override
     public abstract HttpUpgradeHandler getHttpUpgradeHandler();
 
-
-    /**
-     * Register the socket for the specified events.
-     *
-     * @param read  Register the socket for read events
-     * @param write Register the socket for write events
-     */
-    protected abstract void registerForEvent(boolean read, boolean write);
-
     protected abstract Log getLog();
 }

==================================================
Http11AprProcessor.java
index e439e77397..fded7dc6b8 100644
--- a/java/org/apache/coyote/ajp/AjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpProcessor.java
@@ -1568,12 +1568,6 @@ public class AjpProcessor<S> extends AbstractProcessor<S> {
     }
 
 
-    @Override
-    protected void registerForEvent(boolean read, boolean write) {
-        socketWrapper.regsiterForEvent(read, write);
-    }
-
-
     @Override
     protected Log getLog() {
         return log;

==================================================
Http11Nio2Processor.java
index 3e42ed9c1e..52b3b4fe13 100644
--- a/java/org/apache/coyote/http11/Http11AprProcessor.java
+++ b/java/org/apache/coyote/http11/Http11AprProcessor.java
@@ -82,13 +82,6 @@ public class Http11AprProcessor extends AbstractHttp11Processor<Long> {
     }
 
 
-    @Override
-    protected void registerForEvent(boolean read, boolean write) {
-        ((AprEndpoint) endpoint).getPoller().add(
-                socketWrapper.getSocket().longValue(), -1, read, write);
-    }
-
-
     @Override
     protected void resetTimeouts() {
         // NO-OP for APR

==================================================
Http11NioProcessor.java
index 14139efa64..8935d7ae1f 100644
--- a/java/org/apache/coyote/http11/Http11Nio2Processor.java
+++ b/java/org/apache/coyote/http11/Http11Nio2Processor.java
@@ -76,16 +76,6 @@ public class Http11Nio2Processor extends AbstractHttp11Processor<Nio2Channel> {
         }
     }
 
-    @Override
-    protected void registerForEvent(boolean read, boolean write) {
-        if (read) {
-            socketWrapper.registerReadInterest();
-        }
-        if (write) {
-            socketWrapper.registerWriteInterest();
-        }
-    }
-
 
     @Override
     protected void resetTimeouts() {

==================================================
SpdyProcessor.java
index f0048968c3..5ced1a6fd5 100644
--- a/java/org/apache/coyote/http11/Http11NioProcessor.java
+++ b/java/org/apache/coyote/http11/Http11NioProcessor.java
@@ -18,7 +18,6 @@ package org.apache.coyote.http11;
 
 import java.io.IOException;
 import java.net.InetAddress;
-import java.nio.channels.SelectionKey;
 
 import javax.net.ssl.SSLEngine;
 
@@ -62,22 +61,7 @@ public class Http11NioProcessor extends AbstractHttp11Processor<NioChannel> {
     }
 
 
-    // --------------------------------------------------------- Public Methods
-
-    @Override
-    protected void registerForEvent(boolean read, boolean write) {
-        final NioChannel socket = socketWrapper.getSocket();
-
-        int interestOps = 0;
-        if (read) {
-            interestOps = SelectionKey.OP_READ;
-        }
-        if (write) {
-            interestOps = interestOps | SelectionKey.OP_WRITE;
-        }
-        socket.getPoller().add(socket, interestOps);
-    }
-
+    // ------------------------------------------------------ Protected Methods
 
     @Override
     protected void resetTimeouts() {

==================================================
