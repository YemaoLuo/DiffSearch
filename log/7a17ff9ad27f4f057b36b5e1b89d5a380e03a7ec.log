7a17ff9ad27f4f057b36b5e1b89d5a380e03a7ec
==================================================
Impose a limit on the total length of the trailing headers.
==================================================
Konstantin Kolinko
==================================================
Mon Nov 22 22:43:51 2010 +0000
==================================================
Constants.java
Impose a limit on the total length of the trailing headers.
Otherwise the ByteChunk buffer in the ChunkedInputFilter might grow unlimitedly.

Implemented as a system property. It might be better to implement it as an attribute of a connector (like maxPostSize and maxSavePostSize attributes are), but I am not sure that it is worth the effort.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1037924 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ChunkedInputFilter.java
index 1d20ea27fb..a610e3bc22 100644
--- a/java/org/apache/coyote/Constants.java
+++ b/java/org/apache/coyote/Constants.java
@@ -69,4 +69,12 @@ public final class Constants {
                 "org.apache.coyote.USE_CUSTOM_STATUS_MSG_IN_HEADER",
                 "false")).booleanValue(); 
 
+    /**
+     * Limit on the total length of the trailer headers in
+     * a chunked HTTP request.
+     */
+    public static final int MAX_TRAILER_SIZE =
+        Integer.parseInt(System.getProperty(
+                "org.apache.coyote.MAX_TRAILER_SIZE",
+                "8192"));
 }

==================================================
TestChunkedInputFilter.java
index e9e83c1f6d..ab91acf062 100644
--- a/java/org/apache/coyote/http11/filters/ChunkedInputFilter.java
+++ b/java/org/apache/coyote/http11/filters/ChunkedInputFilter.java
@@ -102,7 +102,14 @@ public class ChunkedInputFilter implements InputFilter {
     /**
      * Byte chunk used to store trailing headers.
      */
-    protected ByteChunk trailingHeaders = new ByteChunk();
+    protected ByteChunk trailingHeaders;
+
+    {
+        trailingHeaders = new ByteChunk();
+        if (org.apache.coyote.Constants.MAX_TRAILER_SIZE > 0) {
+            trailingHeaders.setLimit(org.apache.coyote.Constants.MAX_TRAILER_SIZE);
+        }
+    }
 
 
     /**

==================================================
