0f667057e72cbec7badbb1cca520b4b3d5d60b53
==================================================
Reduce memory footprint of closed http/2 streams
==================================================
Mark Thomas
==================================================
Thu Sep 24 17:50:43 2020 +0100
==================================================
AbstractNonZeroStream.java
Reduce memory footprint of closed http/2 streams

This refactoring replaces closed streams with a new RecycledStream
object and changes the mechanism used to look up known streams.
Pull-up isClosedFinal()



==================================================
RecycledStream.java
index ce08cc5d57..70cfe35e47 100644
--- a/java/org/apache/coyote/http2/AbstractNonZeroStream.java
+++ b/java/org/apache/coyote/http2/AbstractNonZeroStream.java
@@ -97,4 +97,5 @@ abstract class AbstractNonZeroStream extends AbstractStream {
         this.weight = weight;
     }
 
+    abstract boolean isClosedFinal();
 }

==================================================
Stream.java
index 1e630df215..dbbdc10283 100644
--- a/java/org/apache/coyote/http2/RecycledStream.java
+++ b/java/org/apache/coyote/http2/RecycledStream.java
@@ -23,10 +23,12 @@ package org.apache.coyote.http2;
 class RecycledStream extends AbstractNonZeroStream {
 
     private final String connectionId;
+    private final boolean closedFinal;
 
     RecycledStream(Stream stream) {
         super(stream.getIdentifier(), stream.getWeight());
         connectionId = stream.getConnectionId();
+        closedFinal = stream.isClosedFinal();
     }
 
 
@@ -34,4 +36,10 @@ class RecycledStream extends AbstractNonZeroStream {
     String getConnectionId() {
         return connectionId;
     }
+
+
+    @Override
+    boolean isClosedFinal() {
+        return closedFinal;
+    }
 }

==================================================
