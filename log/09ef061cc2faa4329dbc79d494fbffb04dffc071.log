09ef061cc2faa4329dbc79d494fbffb04dffc071
==================================================
Refactor to better align NIO and NIO2 Acceptor classes
==================================================
Mark Thomas
==================================================
Tue Dec 6 11:37:51 2016 +0000
==================================================
Nio2Endpoint.java
Refactor to better align NIO and NIO2 Acceptor classes

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1772870 13f79535-47bb-0310-9956-ffa450edef68



==================================================
NioEndpoint.java
index 12a4b570d2..d4ca94ccd8 100644
--- a/java/org/apache/tomcat/util/net/Nio2Endpoint.java
+++ b/java/org/apache/tomcat/util/net/Nio2Endpoint.java
@@ -430,6 +430,7 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel> {
                         // socket
                         socket = serverSock.accept().get();
                     } catch (Exception e) {
+                        // We didn't get a socket
                         countDownConnection();
                         if (running) {
                             // Introduce delay if necessary
@@ -448,24 +449,11 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel> {
                         // Hand this socket off to an appropriate processor
                         if (!setSocketOptions(socket)) {
                             countDownConnection();
-                            try {
-                                socket.close();
-                            } catch (IOException ioe) {
-                                if (log.isDebugEnabled()) {
-                                    log.debug("", ioe);
-                                }
-                            }
+                            closeSocket(socket);
                        }
                     } else {
                         countDownConnection();
-                        // Close socket right away
-                        try {
-                            socket.close();
-                        } catch (IOException ioe) {
-                            if (log.isDebugEnabled()) {
-                                log.debug("", ioe);
-                            }
-                        }
+                        closeSocket(socket);
                     }
                 } catch (Throwable t) {
                     ExceptionUtils.handleThrowable(t);
@@ -475,6 +463,16 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel> {
             state = AcceptorState.ENDED;
         }
 
+
+        private void closeSocket(AsynchronousSocketChannel socket) {
+            try {
+                socket.close();
+            } catch (IOException ioe) {
+                if (log.isDebugEnabled()) {
+                    log.debug(sm.getString("endpoint.err.close"), ioe);
+                }
+            }
+        }
     }
 
 

==================================================
