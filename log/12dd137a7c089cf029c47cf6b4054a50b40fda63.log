12dd137a7c089cf029c47cf6b4054a50b40fda63
==================================================
Use foreach loops instead of for+iterator loops
==================================================
Emmanuel Bourg
==================================================
Wed May 10 08:38:51 2017 +0000
==================================================
JMXAccessorTask.java
Use foreach loops instead of for+iterator loops

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1794686 13f79535-47bb-0310-9956-ffa450edef68



==================================================
DeltaManager.java
index 0b6381b74d..8d5d268e0a 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorTask.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorTask.java
@@ -23,7 +23,6 @@ import java.net.InetAddress;
 import java.net.MalformedURLException;
 import java.net.UnknownHostException;
 import java.util.HashMap;
-import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
 import java.util.Properties;
@@ -617,8 +616,7 @@ public class JMXAccessorTask extends BaseRedirectorHelperTask {
             CompositeDataSupport data = (CompositeDataSupport) result;
             CompositeType compositeType = data.getCompositeType();
             Set<String> keys = compositeType.keySet();
-            for (Iterator<String> iter = keys.iterator(); iter.hasNext();) {
-                String key = iter.next();
+            for (String key : keys) {
                 Object value = data.get(key);
                 OpenType<?> type = compositeType.getType(key);
                 if (type instanceof SimpleType<?>) {
@@ -629,10 +627,8 @@ public class JMXAccessorTask extends BaseRedirectorHelperTask {
             }
         } else if (result instanceof TabularDataSupport) {
             TabularDataSupport data = (TabularDataSupport) result;
-            for (Iterator<Object> iter = data.keySet().iterator(); iter.hasNext();) {
-                Object key = iter.next();
-                for (Iterator<?> iter1 = ((List<?>) key).iterator(); iter1.hasNext();) {
-                    Object key1 = iter1.next();
+            for (Object key : data.keySet()) {
+                for (Object key1 : ((List<?>) key)) {
                     CompositeData valuedata = data.get(new Object[] { key1 });
                     Object value = valuedata.get("value");
                     OpenType<?> type = valuedata.getCompositeType().getType(

==================================================
ReplicationValve.java
index 73f3049572..95cae42428 100644
--- a/java/org/apache/catalina/ha/session/DeltaManager.java
+++ b/java/org/apache/catalina/ha/session/DeltaManager.java
@@ -24,7 +24,6 @@ import java.io.ObjectInputStream;
 import java.io.ObjectOutputStream;
 import java.util.ArrayList;
 import java.util.Date;
-import java.util.Iterator;
 
 import org.apache.catalina.Engine;
 import org.apache.catalina.Host;
@@ -756,9 +755,7 @@ public class DeltaManager extends ClusterManagerBase{
                 waitForSendAllSessions(beforeSendTime);
             } finally {
                 synchronized(receivedMessageQueue) {
-                    for (Iterator<SessionMessage> iter = receivedMessageQueue.iterator();
-                            iter.hasNext();) {
-                        SessionMessage smsg = iter.next();
+                    for (SessionMessage smsg : receivedMessageQueue) {
                         if (!stateTimestampDrop) {
                             messageReceived(smsg,
                                     smsg.getAddress() != null ? (Member) smsg.getAddress() : null);

==================================================
SimpleTcpCluster.java
index 8fac6b2132..f911f2d07e 100644
--- a/java/org/apache/catalina/ha/tcp/ReplicationValve.java
+++ b/java/org/apache/catalina/ha/tcp/ReplicationValve.java
@@ -422,8 +422,7 @@ public class ReplicationValve
     protected void sendCrossContextSession() {
         List<DeltaSession> sessions = crossContextSessions.get();
         if(sessions != null && sessions.size() >0) {
-            for(Iterator<DeltaSession> iter = sessions.iterator(); iter.hasNext() ;) {
-                Session session = iter.next();
+            for (DeltaSession session : sessions) {
                 if(log.isDebugEnabled()) {
                     log.debug(sm.getString("ReplicationValve.crossContext.sendDelta",
                             session.getManager().getContext().getName() ));

==================================================
NioReceiver.java
index 40e3c8344c..96dc29bf5e 100644
--- a/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java
+++ b/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java
@@ -21,7 +21,6 @@ import java.beans.PropertyChangeSupport;
 import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.HashMap;
-import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
 import java.util.concurrent.ConcurrentHashMap;
@@ -568,8 +567,8 @@ public class SimpleTcpCluster extends LifecycleMBeanBase
      */
     protected void registerClusterValve() {
         if(container != null ) {
-            for (Iterator<Valve> iter = valves.iterator(); iter.hasNext();) {
-                ClusterValve valve = (ClusterValve) iter.next();
+            for (Valve v : valves) {
+                ClusterValve valve = (ClusterValve) v;
                 if (log.isDebugEnabled())
                     log.debug("Invoking addValve on " + getContainer()
                             + " with class=" + valve.getClass().getName());
@@ -585,8 +584,8 @@ public class SimpleTcpCluster extends LifecycleMBeanBase
      * unregister all cluster valve to host or engine
      */
     protected void unregisterClusterValve() {
-        for (Iterator<Valve> iter = valves.iterator(); iter.hasNext();) {
-            ClusterValve valve = (ClusterValve) iter.next();
+        for (Valve v : valves) {
+            ClusterValve valve = (ClusterValve) v;
             if (log.isDebugEnabled())
                 log.debug("Invoking removeValve on " + getContainer()
                         + " with class=" + valve.getClass().getName());
@@ -768,9 +767,7 @@ public class SimpleTcpCluster extends LifecycleMBeanBase
         //invoke all the listeners
         boolean accepted = false;
         if (message != null) {
-            for (Iterator<ClusterListener> iter = clusterListeners.iterator();
-                    iter.hasNext();) {
-                ClusterListener listener = iter.next();
+            for (ClusterListener listener : clusterListeners) {
                 if (listener.accept(message)) {
                     accepted = true;
                     listener.messageReceived(message);

==================================================
