d51530769a504a0a8b0d202a3c6e9c1a04aeb3ca
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56446
==================================================
Mark Emlyn
==================================================
Mon May 19 13:33:09 2014 +0000
==================================================
PojoMessageHandlerBase.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56446
Clearer handling of exceptions when calling a method on a POJO based WebSocket endpoint. Based on a suggestion by Eugene Chung.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1595898 13f79535-47bb-0310-9956-ffa450edef68



==================================================
PojoMessageHandlerPartialBase.java
index 18fe59e0df..d77a112081 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerBase.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerBase.java
@@ -25,6 +25,7 @@ import javax.websocket.MessageHandler;
 import javax.websocket.RemoteEndpoint;
 import javax.websocket.Session;
 
+import org.apache.tomcat.util.ExceptionUtils;
 import org.apache.tomcat.websocket.WrappedMessageHandler;
 
 /**
@@ -107,4 +108,15 @@ public abstract class PojoMessageHandlerBase<T>
     public final long getMaxMessageSize() {
         return maxMessageSize;
     }
+
+
+    protected final void handlePojoMethodException(Throwable t) {
+        t = ExceptionUtils.unwrapInvocationTargetException(t);
+        ExceptionUtils.handleThrowable(t);
+        if (t instanceof RuntimeException) {
+            throw (RuntimeException) t;
+        } else {
+            throw new RuntimeException(t);
+        }
+    }
 }

==================================================
PojoMessageHandlerWholeBase.java
index 59fa245e6a..4a0f525409 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerPartialBase.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerPartialBase.java
@@ -66,11 +66,11 @@ public abstract class PojoMessageHandlerPartialBase<T>
         } else {
             parameters[indexPayload] = message;
         }
-        Object result;
+        Object result = null;
         try {
             result = method.invoke(pojo, parameters);
         } catch (IllegalAccessException | InvocationTargetException e) {
-            throw new IllegalArgumentException(e);
+            handlePojoMethodException(e);
         }
         processResult(result);
     }

==================================================
