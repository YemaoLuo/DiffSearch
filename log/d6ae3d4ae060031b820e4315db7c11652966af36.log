d6ae3d4ae060031b820e4315db7c11652966af36
==================================================
Replace $Date$ with $Id$ because of its i18n and timezone issues
==================================================
Konstantin Kolinko
==================================================
Thu Apr 29 13:43:39 2010 +0000
==================================================
Authenticator.java
Replace $Date$ with $Id$ because of its i18n and timezone issues
(http://subversion.tigris.org/issues/show_bug.cgi?id=2332)


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@939305 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Cluster.java
index 6975d8addc..7a6349e2e4 100644
--- a/java/org/apache/catalina/Authenticator.java
+++ b/java/org/apache/catalina/Authenticator.java
@@ -32,7 +32,7 @@ import org.apache.catalina.deploy.LoginConfig;
  * provides some sort of authentication service.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public interface Authenticator {

==================================================
Contained.java
index 6a594ce295..6639927372 100644
--- a/java/org/apache/catalina/Cluster.java
+++ b/java/org/apache/catalina/Cluster.java
@@ -29,7 +29,7 @@ package org.apache.catalina;
  * @author Bip Thelin
  * @author Remy Maucherat
  * @author Filip Hanik
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 
 public interface Cluster {

==================================================
Container.java
index a67a672204..8123150fe2 100644
--- a/java/org/apache/catalina/Contained.java
+++ b/java/org/apache/catalina/Contained.java
@@ -25,7 +25,7 @@ package org.apache.catalina;
  *
  * @author Craig R. McClanahan
  * @author Peter Donald
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public interface Contained {

==================================================
ContainerEvent.java
index c7cfa17c74..daeaffcee3 100644
--- a/java/org/apache/catalina/Container.java
+++ b/java/org/apache/catalina/Container.java
@@ -78,7 +78,7 @@ import org.apache.juli.logging.Log;
  *
  * @author Craig R. McClanahan
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public interface Container extends Lifecycle {

==================================================
ContainerListener.java
index 01261f6bc3..f859732e89 100644
--- a/java/org/apache/catalina/ContainerEvent.java
+++ b/java/org/apache/catalina/ContainerEvent.java
@@ -26,7 +26,7 @@ import java.util.EventObject;
  * General event for notifying listeners of significant changes on a Container.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class ContainerEvent

==================================================
ContainerServlet.java
index e9402b19ce..45aa13abb2 100644
--- a/java/org/apache/catalina/ContainerListener.java
+++ b/java/org/apache/catalina/ContainerListener.java
@@ -27,7 +27,7 @@ package org.apache.catalina;
  * LifecycleEvents, not ContainerEvents.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public interface ContainerListener {

==================================================
Context.java
index 1fe3affad7..e0f3906ec1 100644
--- a/java/org/apache/catalina/ContainerServlet.java
+++ b/java/org/apache/catalina/ContainerServlet.java
@@ -27,7 +27,7 @@ package org.apache.catalina;
  * this servlet is put into service.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public interface ContainerServlet {

==================================================
Engine.java
index 4539b7070c..6ea4f3b80e 100644
--- a/java/org/apache/catalina/Context.java
+++ b/java/org/apache/catalina/Context.java
@@ -56,7 +56,7 @@ import org.apache.catalina.util.CharsetMapper;
  * <p>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public interface Context extends Container {

==================================================
Globals.java
index 2e845d1cf0..1dbc0e1543 100644
--- a/java/org/apache/catalina/Engine.java
+++ b/java/org/apache/catalina/Engine.java
@@ -41,7 +41,7 @@ package org.apache.catalina;
  * should throw <code>IllegalArgumentException</code>.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public interface Engine extends Container {

==================================================
Group.java
index 6c11e586a2..d36226cd8f 100644
--- a/java/org/apache/catalina/Globals.java
+++ b/java/org/apache/catalina/Globals.java
@@ -23,7 +23,7 @@ package org.apache.catalina;
  * Global constants that are applicable to multiple packages within Catalina.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class Globals {

==================================================
Host.java
index e4ad0e2e67..298333bfb1 100644
--- a/java/org/apache/catalina/Group.java
+++ b/java/org/apache/catalina/Group.java
@@ -29,7 +29,7 @@ import java.util.Iterator;
  * inherits the {@link Role}s assigned to the group.</p>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 4.1
  */
 

==================================================
InstanceEvent.java
index 07499cd160..7ea9140556 100644
--- a/java/org/apache/catalina/Host.java
+++ b/java/org/apache/catalina/Host.java
@@ -41,7 +41,7 @@ package org.apache.catalina;
  * of Context (representing an individual servlet context).
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public interface Host extends Container {

==================================================
InstanceListener.java
index 1fe6a6fef1..4338b5b233 100644
--- a/java/org/apache/catalina/InstanceEvent.java
+++ b/java/org/apache/catalina/InstanceEvent.java
@@ -32,7 +32,7 @@ import javax.servlet.ServletResponse;
  * as opposed to the Wrapper component that manages it.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class InstanceEvent

==================================================
Lifecycle.java
index d9062d9906..d7b85f1d71 100644
--- a/java/org/apache/catalina/InstanceListener.java
+++ b/java/org/apache/catalina/InstanceListener.java
@@ -25,7 +25,7 @@ package org.apache.catalina;
  * is managing that instance.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public interface InstanceListener {

==================================================
LifecycleEvent.java
index 2ba8514e73..58ccd691f8 100644
--- a/java/org/apache/catalina/Lifecycle.java
+++ b/java/org/apache/catalina/Lifecycle.java
@@ -72,7 +72,7 @@ package org.apache.catalina;
  * TODO: Not all components may transition from STOPPED to STARTING_PREP
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 public interface Lifecycle {
 

==================================================
LifecycleException.java
index 9364cf1e87..55e6e4b923 100644
--- a/java/org/apache/catalina/LifecycleEvent.java
+++ b/java/org/apache/catalina/LifecycleEvent.java
@@ -29,7 +29,7 @@ import java.util.EventObject;
  * Tomcat 3.x.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class LifecycleEvent

==================================================
LifecycleListener.java
index 20d4427c7e..1bbb8aed3f 100644
--- a/java/org/apache/catalina/LifecycleException.java
+++ b/java/org/apache/catalina/LifecycleException.java
@@ -25,7 +25,7 @@ package org.apache.catalina;
  * operation of the application containing this component.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class LifecycleException extends Exception {

==================================================
Loader.java
index 3bdc677448..faf2d09160 100644
--- a/java/org/apache/catalina/LifecycleListener.java
+++ b/java/org/apache/catalina/LifecycleListener.java
@@ -27,7 +27,7 @@ package org.apache.catalina;
  * Lifecycle interface.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public interface LifecycleListener {

==================================================
Manager.java
index 46d685350a..0aaa5a1ce2 100644
--- a/java/org/apache/catalina/Loader.java
+++ b/java/org/apache/catalina/Loader.java
@@ -50,7 +50,7 @@ import java.beans.PropertyChangeListener;
  * </ul>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public interface Loader {

==================================================
Pipeline.java
index 450c6f423f..deed104eac 100644
--- a/java/org/apache/catalina/Manager.java
+++ b/java/org/apache/catalina/Manager.java
@@ -40,7 +40,7 @@ import java.io.IOException;
  * </ul>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public interface Manager {

==================================================
Realm.java
index d863b810d7..6d46045d6d 100644
--- a/java/org/apache/catalina/Pipeline.java
+++ b/java/org/apache/catalina/Pipeline.java
@@ -36,7 +36,7 @@ package org.apache.catalina;
  *
  * @author Craig R. McClanahan
  * @author Peter Donald
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public interface Pipeline {

==================================================
Role.java
index 42ad4028cf..5cfdb8503e 100644
--- a/java/org/apache/catalina/Realm.java
+++ b/java/org/apache/catalina/Realm.java
@@ -34,7 +34,7 @@ import org.apache.catalina.deploy.SecurityConstraint;
  * Container.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public interface Realm {

==================================================
Server.java
index eddd0afaba..fa7f216dbd 100644
--- a/java/org/apache/catalina/Role.java
+++ b/java/org/apache/catalina/Role.java
@@ -27,7 +27,7 @@ import java.security.Principal;
  * environments like JAAS that want to deal with <code>Principals</code>.</p>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 4.1
  */
 

==================================================
Service.java
index 092d5b2784..4f8cf244c8 100644
--- a/java/org/apache/catalina/Server.java
+++ b/java/org/apache/catalina/Server.java
@@ -42,7 +42,7 @@ import org.apache.catalina.deploy.NamingResources;
  * class in its constructor(s).
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public interface Server extends Lifecycle {

==================================================
Session.java
index fb759fd36e..14329793aa 100644
--- a/java/org/apache/catalina/Service.java
+++ b/java/org/apache/catalina/Service.java
@@ -31,7 +31,7 @@ import org.apache.catalina.connector.Connector;
  * and classes on the system class path.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public interface Service extends Lifecycle {

==================================================
SessionEvent.java
index b80592048e..3299114ef8 100644
--- a/java/org/apache/catalina/Session.java
+++ b/java/org/apache/catalina/Session.java
@@ -31,7 +31,7 @@ import javax.servlet.http.HttpSession;
  * between requests for a particular user of a web application.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public interface Session {

==================================================
SessionListener.java
index 0e2ab73c35..3c0efc5b31 100644
--- a/java/org/apache/catalina/SessionEvent.java
+++ b/java/org/apache/catalina/SessionEvent.java
@@ -26,7 +26,7 @@ import java.util.EventObject;
  * General event for notifying listeners of significant changes on a Session.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class SessionEvent

==================================================
Store.java
index 33272503b4..e9009c41ad 100644
--- a/java/org/apache/catalina/SessionListener.java
+++ b/java/org/apache/catalina/SessionListener.java
@@ -25,7 +25,7 @@ package org.apache.catalina;
  * Interface defining a listener for significant Session generated events.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public interface SessionListener {

==================================================
User.java
index a9ddab0c35..a2938c9a8e 100644
--- a/java/org/apache/catalina/Store.java
+++ b/java/org/apache/catalina/Store.java
@@ -31,7 +31,7 @@ import java.io.IOException;
  * server or context restarts.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public interface Store {

==================================================
UserDatabase.java
index 0d6010a447..191b42d8dd 100644
--- a/java/org/apache/catalina/User.java
+++ b/java/org/apache/catalina/User.java
@@ -30,7 +30,7 @@ import java.util.Iterator;
  * of specific {@link Role}s.</p>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 4.1
  */
 

==================================================
Valve.java
index 82e759c890..0805a6cb1e 100644
--- a/java/org/apache/catalina/UserDatabase.java
+++ b/java/org/apache/catalina/UserDatabase.java
@@ -29,7 +29,7 @@ import java.util.Iterator;
  * referenced by a {@link Realm} for authentication and access control.</p>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 4.1
  */
 

==================================================
Wrapper.java
index e2a29fc4dc..af2ef85aa5 100644
--- a/java/org/apache/catalina/Valve.java
+++ b/java/org/apache/catalina/Valve.java
@@ -40,7 +40,7 @@ import org.apache.catalina.connector.Response;
  * @author Craig R. McClanahan
  * @author Gunnar Rjnning
  * @author Peter Donald
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public interface Valve {

==================================================
AbstractCatalinaTask.java
index 5c4cdeae84..5fb0072639 100644
--- a/java/org/apache/catalina/Wrapper.java
+++ b/java/org/apache/catalina/Wrapper.java
@@ -45,7 +45,7 @@ import javax.servlet.UnavailableException;
  * <code>IllegalArgumentException</code>.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public interface Wrapper extends Container {

==================================================
BaseRedirectorHelperTask.java
index 1a37449095..411811dd88 100644
--- a/java/org/apache/catalina/ant/AbstractCatalinaTask.java
+++ b/java/org/apache/catalina/ant/AbstractCatalinaTask.java
@@ -37,7 +37,7 @@ import org.apache.tools.ant.Project;
  * undeploying applications.  These tasks require Ant 1.4 or later.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 4.1
  */
 

==================================================
DeployTask.java
index 326a70e4bc..5faa67258c 100644
--- a/java/org/apache/catalina/ant/BaseRedirectorHelperTask.java
+++ b/java/org/apache/catalina/ant/BaseRedirectorHelperTask.java
@@ -46,7 +46,7 @@ import org.apache.tools.ant.types.RedirectorElement;
  * 
  *
  * @author Gabriele Garuglieri
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 5.5
  */
 

==================================================
ListTask.java
index 4231e62323..6c84edf103 100644
--- a/java/org/apache/catalina/ant/DeployTask.java
+++ b/java/org/apache/catalina/ant/DeployTask.java
@@ -35,7 +35,7 @@ import org.apache.tools.ant.BuildException;
  * the Tomcat manager application.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 4.1
  */
 public class DeployTask extends AbstractCatalinaTask {

==================================================
ReloadTask.java
index 523f7ec5ed..6cf128d153 100644
--- a/java/org/apache/catalina/ant/ListTask.java
+++ b/java/org/apache/catalina/ant/ListTask.java
@@ -27,7 +27,7 @@ import org.apache.tools.ant.BuildException;
  * Tomcat manager application.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 4.1
  */
 public class ListTask extends AbstractCatalinaTask {

==================================================
ResourcesTask.java
index d450275aec..275f4b439f 100644
--- a/java/org/apache/catalina/ant/ReloadTask.java
+++ b/java/org/apache/catalina/ant/ReloadTask.java
@@ -30,7 +30,7 @@ import org.apache.tools.ant.BuildException;
  * Tomcat manager application.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 4.1
  */
 public class ReloadTask extends AbstractCatalinaTask {

==================================================
RolesTask.java
index 4d5c1c10d7..43309369ba 100644
--- a/java/org/apache/catalina/ant/ResourcesTask.java
+++ b/java/org/apache/catalina/ant/ResourcesTask.java
@@ -27,7 +27,7 @@ import org.apache.tools.ant.BuildException;
  * the Tomcat manager application.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 4.1
  */
 public class ResourcesTask extends AbstractCatalinaTask {

==================================================
ServerinfoTask.java
index 54b7ec3a82..a3e4d034c8 100644
--- a/java/org/apache/catalina/ant/RolesTask.java
+++ b/java/org/apache/catalina/ant/RolesTask.java
@@ -27,7 +27,7 @@ import org.apache.tools.ant.BuildException;
  * Tomcat manager application.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 4.1
  */
 public class RolesTask extends AbstractCatalinaTask {

==================================================
StartTask.java
index e05038f669..0f137624de 100644
--- a/java/org/apache/catalina/ant/ServerinfoTask.java
+++ b/java/org/apache/catalina/ant/ServerinfoTask.java
@@ -27,7 +27,7 @@ import org.apache.tools.ant.BuildException;
  * supported by the Tomcat manager application.
  *
  * @author Vivek Chopra
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 public class ServerinfoTask extends AbstractCatalinaTask {
 

==================================================
StopTask.java
index 95fa0c51ea..51f2d719f2 100644
--- a/java/org/apache/catalina/ant/StartTask.java
+++ b/java/org/apache/catalina/ant/StartTask.java
@@ -30,7 +30,7 @@ import org.apache.tools.ant.BuildException;
  * Tomcat manager application.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 4.1
  */
 public class StartTask extends AbstractCatalinaTask {

==================================================
UndeployTask.java
index 1224c300ea..4ceed3742f 100644
--- a/java/org/apache/catalina/ant/StopTask.java
+++ b/java/org/apache/catalina/ant/StopTask.java
@@ -30,7 +30,7 @@ import org.apache.tools.ant.BuildException;
  * Tomcat manager application.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 4.1
  */
 public class StopTask extends AbstractCatalinaTask {

==================================================
ValidatorTask.java
index dfab340efd..85f902324c 100644
--- a/java/org/apache/catalina/ant/UndeployTask.java
+++ b/java/org/apache/catalina/ant/UndeployTask.java
@@ -27,7 +27,7 @@ import org.apache.tools.ant.BuildException;
  * the Tomcat manager application.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 4.1
  */
 public class UndeployTask extends AbstractCatalinaTask {

==================================================
Arg.java
index d3fde1dcca..f3a611a220 100644
--- a/java/org/apache/catalina/ant/ValidatorTask.java
+++ b/java/org/apache/catalina/ant/ValidatorTask.java
@@ -36,7 +36,7 @@ import org.xml.sax.InputSource;
  * schema validation.
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 5.0
  */
 

==================================================
JMXAccessorCondition.java
index e5c4a8d1be..b9af42983a 100644
--- a/java/org/apache/catalina/ant/jmx/Arg.java
+++ b/java/org/apache/catalina/ant/jmx/Arg.java
@@ -20,7 +20,7 @@ package org.apache.catalina.ant.jmx;
 /**
  *
  * @author Peter Rossbach
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 5.5.10
  */
 public class Arg {

==================================================
JMXAccessorEqualsCondition.java
index 5ec6c45d13..33e8ef92d7 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorCondition.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorCondition.java
@@ -85,7 +85,7 @@ import org.apache.tools.ant.taskdefs.condition.Condition;
  * <b>NOTE</b>:  For numeric expressions the type must be set and use xml entities as operations.<br/>
  * As type we currently support <em>long</em> and <em>double</em>.
  * @author Peter Rossbach
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 5.5.10
  *
  */

==================================================
JMXAccessorGetTask.java
index c6a3c87b74..b252935eec 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorEqualsCondition.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorEqualsCondition.java
@@ -64,7 +64,7 @@ import org.apache.tools.ant.taskdefs.condition.Condition;
  * </pre>
  * 
  * @author Peter Rossbach
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 5.5.10
  *
  */

==================================================
JMXAccessorInvokeTask.java
index c9e1b81d59..99aa67d9a7 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorGetTask.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorGetTask.java
@@ -52,7 +52,7 @@ import org.apache.tools.ant.BuildException;
  * These tasks require Ant 1.6 or later interface.
  *
  * @author Peter Rossbach
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 5.5.10
  */
 

==================================================
JMXAccessorQueryTask.java
index 01b0692f97..7004aef6db 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorInvokeTask.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorInvokeTask.java
@@ -87,7 +87,7 @@ import org.apache.tools.ant.BuildException;
  * These tasks require Ant 1.6 or later interface.
  *
  * @author Peter Rossbach
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 5.5.10
  */
 

==================================================
JMXAccessorSetTask.java
index 399c7e49fd..e49acddab5 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorQueryTask.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorQueryTask.java
@@ -56,7 +56,7 @@ import org.apache.tools.ant.BuildException;
  * These tasks require Ant 1.6 or later interface.
  *
  * @author Peter Rossbach
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 5.5.10
  */
 

==================================================
JMXAccessorTask.java
index ef7d8fe642..5f05930806 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorSetTask.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorSetTask.java
@@ -58,7 +58,7 @@ import org.apache.tools.ant.BuildException;
  * These tasks require Ant 1.6 or later interface.
  *
  * @author Peter Rossbach
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 5.5.10
  */
 

==================================================
AuthenticatorBase.java
index d92ef78acc..b86112a867 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorTask.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorTask.java
@@ -85,7 +85,7 @@ import org.apache.tools.ant.Project;
  * </b>: These tasks require Ant 1.6 or later interface.
  * 
  * @author Peter Rossbach
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 5.5.10
  */
 

==================================================
BasicAuthenticator.java
index e98dd8ef93..775362c5b0 100644
--- a/java/org/apache/catalina/authenticator/AuthenticatorBase.java
+++ b/java/org/apache/catalina/authenticator/AuthenticatorBase.java
@@ -70,7 +70,7 @@ import org.apache.juli.logging.LogFactory;
  * requests.  Requests of any other type will simply be passed through.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 

==================================================
DigestAuthenticator.java
index 95a0a29b97..a325771c13 100644
--- a/java/org/apache/catalina/authenticator/BasicAuthenticator.java
+++ b/java/org/apache/catalina/authenticator/BasicAuthenticator.java
@@ -41,7 +41,7 @@ import org.apache.tomcat.util.buf.MessageBytes;
  * and Digest Access Authentication."
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class BasicAuthenticator

==================================================
FormAuthenticator.java
index 399eef0edc..4886c657e6 100644
--- a/java/org/apache/catalina/authenticator/DigestAuthenticator.java
+++ b/java/org/apache/catalina/authenticator/DigestAuthenticator.java
@@ -44,7 +44,7 @@ import org.apache.juli.logging.LogFactory;
  *
  * @author Craig R. McClanahan
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class DigestAuthenticator

==================================================
NonLoginAuthenticator.java
index 99c7038b69..4b31f7f503 100644
--- a/java/org/apache/catalina/authenticator/FormAuthenticator.java
+++ b/java/org/apache/catalina/authenticator/FormAuthenticator.java
@@ -50,7 +50,7 @@ import org.apache.tomcat.util.http.MimeHeaders;
  *
  * @author Craig R. McClanahan
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class FormAuthenticator

==================================================
SSLAuthenticator.java
index 749a38af83..d97afb8f3c 100644
--- a/java/org/apache/catalina/authenticator/NonLoginAuthenticator.java
+++ b/java/org/apache/catalina/authenticator/NonLoginAuthenticator.java
@@ -33,7 +33,7 @@ import org.apache.catalina.deploy.LoginConfig;
  * only security constraints not involving user authentication.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class NonLoginAuthenticator

==================================================
SavedRequest.java
index 0bc2e0d165..e703c752eb 100644
--- a/java/org/apache/catalina/authenticator/SSLAuthenticator.java
+++ b/java/org/apache/catalina/authenticator/SSLAuthenticator.java
@@ -37,7 +37,7 @@ import org.apache.catalina.deploy.LoginConfig;
  * that utilizes SSL certificates to identify client users.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class SSLAuthenticator

==================================================
SingleSignOn.java
index dcde172a46..6d76a02b7a 100644
--- a/java/org/apache/catalina/authenticator/SavedRequest.java
+++ b/java/org/apache/catalina/authenticator/SavedRequest.java
@@ -39,7 +39,7 @@ import org.apache.tomcat.util.buf.ByteChunk;
  * internal collection classes is performed.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class SavedRequest {

==================================================
ClientAbortException.java
index 026d7585ba..c5b4b9c012 100644
--- a/java/org/apache/catalina/authenticator/SingleSignOn.java
+++ b/java/org/apache/catalina/authenticator/SingleSignOn.java
@@ -55,7 +55,7 @@ import org.apache.catalina.valves.ValveBase;
  * </ul>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class SingleSignOn extends ValveBase implements SessionListener {

==================================================
Connector.java
index 53c52a708e..d5e2467503 100644
--- a/java/org/apache/catalina/connector/ClientAbortException.java
+++ b/java/org/apache/catalina/connector/ClientAbortException.java
@@ -25,7 +25,7 @@ import java.io.IOException;
  * of a request by a remote client.
  *
  * @author Glenn L. Nielsen
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class ClientAbortException extends IOException {

==================================================
CoyoteAdapter.java
index 92c49a50c5..65f901c018 100644
--- a/java/org/apache/catalina/connector/Connector.java
+++ b/java/org/apache/catalina/connector/Connector.java
@@ -46,7 +46,7 @@ import org.apache.tomcat.util.modeler.Registry;
  *
  * @author Craig R. McClanahan
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 

==================================================
CoyotePrincipal.java
index 7ba0610e09..1a9e74c500 100644
--- a/java/org/apache/catalina/connector/CoyoteAdapter.java
+++ b/java/org/apache/catalina/connector/CoyoteAdapter.java
@@ -53,7 +53,7 @@ import org.apache.tomcat.util.net.SocketStatus;
  *
  * @author Craig R. McClanahan
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class CoyoteAdapter implements Adapter {

==================================================
Request.java
index 1341c69930..c49d7d5174 100644
--- a/java/org/apache/catalina/connector/CoyotePrincipal.java
+++ b/java/org/apache/catalina/connector/CoyotePrincipal.java
@@ -25,7 +25,7 @@ import java.security.Principal;
  * is used to represent principals authenticated at the protocol handler level.
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class CoyotePrincipal 

==================================================
RequestFacade.java
index d15d7ff7c4..36503cd123 100644
--- a/java/org/apache/catalina/connector/Request.java
+++ b/java/org/apache/catalina/connector/Request.java
@@ -97,7 +97,7 @@ import org.apache.tomcat.util.res.StringManager;
  *
  * @author Remy Maucherat
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class Request

==================================================
Response.java
index f3ed48bd0e..3ea8890748 100644
--- a/java/org/apache/catalina/connector/RequestFacade.java
+++ b/java/org/apache/catalina/connector/RequestFacade.java
@@ -54,7 +54,7 @@ import org.apache.catalina.security.SecurityUtil;
  * @author Craig R. McClanahan
  * @author Remy Maucherat
  * @author Jean-Francois Arcand
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 @SuppressWarnings("deprecation")

==================================================
ResponseFacade.java
index 2e62653ef1..32b9954f1a 100644
--- a/java/org/apache/catalina/connector/Response.java
+++ b/java/org/apache/catalina/connector/Response.java
@@ -61,7 +61,7 @@ import org.apache.tomcat.util.net.URL;
  *
  * @author Remy Maucherat
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class Response

==================================================
ApplicationContext.java
index 0083acfa04..e7394deab7 100644
--- a/java/org/apache/catalina/connector/ResponseFacade.java
+++ b/java/org/apache/catalina/connector/ResponseFacade.java
@@ -41,7 +41,7 @@ import org.apache.catalina.security.SecurityUtil;
  *
  * @author Remy Maucherat
  * @author Jean-Francois Arcand
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 @SuppressWarnings("deprecation")
 public class ResponseFacade 

==================================================
ApplicationContextFacade.java
index 5a86c48234..d25302e83d 100644
--- a/java/org/apache/catalina/core/ApplicationContext.java
+++ b/java/org/apache/catalina/core/ApplicationContext.java
@@ -87,7 +87,7 @@ import org.apache.catalina.Globals;
  *
  * @author Craig R. McClanahan
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ApplicationContext

==================================================
ApplicationDispatcher.java
index 4e1f5f794f..4541abb8e3 100644
--- a/java/org/apache/catalina/core/ApplicationContextFacade.java
+++ b/java/org/apache/catalina/core/ApplicationContextFacade.java
@@ -55,7 +55,7 @@ import org.apache.catalina.security.SecurityUtil;
  *
  * @author Remy Maucherat
  * @author Jean-Francois Arcand
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class ApplicationContextFacade

==================================================
ApplicationFilterChain.java
index 3324c70df8..b30c4b0cd1 100644
--- a/java/org/apache/catalina/core/ApplicationDispatcher.java
+++ b/java/org/apache/catalina/core/ApplicationDispatcher.java
@@ -62,7 +62,7 @@ import org.apache.tomcat.util.res.StringManager;
  * <code>javax.servlet.ServletResponseWrapper</code>.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 final class ApplicationDispatcher

==================================================
ApplicationFilterConfig.java
index 438d92c922..24cc305280 100644
--- a/java/org/apache/catalina/core/ApplicationFilterChain.java
+++ b/java/org/apache/catalina/core/ApplicationFilterChain.java
@@ -50,7 +50,7 @@ import org.apache.tomcat.util.res.StringManager;
  * method itself.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 final class ApplicationFilterChain implements FilterChain, CometFilterChain {

==================================================
ApplicationHttpRequest.java
index 205568f86e..283af96169 100644
--- a/java/org/apache/catalina/core/ApplicationFilterConfig.java
+++ b/java/org/apache/catalina/core/ApplicationFilterConfig.java
@@ -52,7 +52,7 @@ import org.apache.tomcat.util.modeler.Registry;
  * is first started.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class ApplicationFilterConfig implements FilterConfig, Serializable {

==================================================
ApplicationHttpResponse.java
index 9079d80117..a38b6c8e32 100644
--- a/java/org/apache/catalina/core/ApplicationHttpRequest.java
+++ b/java/org/apache/catalina/core/ApplicationHttpRequest.java
@@ -56,7 +56,7 @@ import org.apache.tomcat.util.res.StringManager;
  *
  * @author Craig R. McClanahan
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 class ApplicationHttpRequest extends HttpServletRequestWrapper {

==================================================
ApplicationRequest.java
index 6ef81647c6..17f300fbf9 100644
--- a/java/org/apache/catalina/core/ApplicationHttpResponse.java
+++ b/java/org/apache/catalina/core/ApplicationHttpResponse.java
@@ -42,7 +42,7 @@ import org.apache.tomcat.util.res.StringManager;
  * keep these two classes in synchronization when making changes!
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 class ApplicationHttpResponse extends HttpServletResponseWrapper {

==================================================
ApplicationResponse.java
index 7775706c20..b260e443e7 100644
--- a/java/org/apache/catalina/core/ApplicationRequest.java
+++ b/java/org/apache/catalina/core/ApplicationRequest.java
@@ -43,7 +43,7 @@ import org.apache.tomcat.util.res.StringManager;
  * keep these two classes in synchronization when making changes!
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 class ApplicationRequest extends ServletRequestWrapper {

==================================================
AprLifecycleListener.java
index 845972decd..3c40b200ed 100644
--- a/java/org/apache/catalina/core/ApplicationResponse.java
+++ b/java/org/apache/catalina/core/ApplicationResponse.java
@@ -40,7 +40,7 @@ import org.apache.tomcat.util.res.StringManager;
  * keep these two classes in synchronization when making changes!
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 class ApplicationResponse extends ServletResponseWrapper {

==================================================
DefaultInstanceManager.java
index be188e180e..e81ab58262 100644
--- a/java/org/apache/catalina/core/AprLifecycleListener.java
+++ b/java/org/apache/catalina/core/AprLifecycleListener.java
@@ -38,7 +38,7 @@ import org.apache.tomcat.jni.Library;
  * 
  * @author Remy Maucherat
  * @author Filip Hanik
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 4.1
  */
 

==================================================
DummyRequest.java
index 4b0e3bc018..06c1c26061 100644
--- a/java/org/apache/catalina/core/DefaultInstanceManager.java
+++ b/java/org/apache/catalina/core/DefaultInstanceManager.java
@@ -52,7 +52,7 @@ import org.apache.tomcat.util.res.StringManager;
 import org.apache.tomcat.InstanceManager;
 
 /**
- * @version $Rev$ $Date$
+ * @version $Id$
  */
 public class DefaultInstanceManager implements InstanceManager {
 

==================================================
DummyResponse.java
index bf5802f180..44d6a4117c 100644
--- a/java/org/apache/catalina/core/DummyRequest.java
+++ b/java/org/apache/catalina/core/DummyRequest.java
@@ -59,7 +59,7 @@ import org.apache.tomcat.util.buf.MessageBytes;
  * JSP precompilation.
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class DummyRequest

==================================================
JasperListener.java
index 6ca847bd1a..fb22b6c2a8 100644
--- a/java/org/apache/catalina/core/DummyResponse.java
+++ b/java/org/apache/catalina/core/DummyResponse.java
@@ -39,7 +39,7 @@ import org.apache.catalina.connector.Request;
  * Dummy response object, used for JSP precompilation.
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class DummyResponse

==================================================
NamingContextListener.java
index def74db30c..4486b1fb24 100644
--- a/java/org/apache/catalina/core/JasperListener.java
+++ b/java/org/apache/catalina/core/JasperListener.java
@@ -31,7 +31,7 @@ import org.apache.juli.logging.LogFactory;
  * started.
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 4.1
  */
 

==================================================
StandardContext.java
index 94a9518b4f..8d5640ee03 100644
--- a/java/org/apache/catalina/core/NamingContextListener.java
+++ b/java/org/apache/catalina/core/NamingContextListener.java
@@ -75,7 +75,7 @@ import org.apache.tomcat.util.modeler.Registry;
  * with each context and server.
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class NamingContextListener

==================================================
StandardContextValve.java
index 3db6718874..df4f069114 100644
--- a/java/org/apache/catalina/core/StandardContext.java
+++ b/java/org/apache/catalina/core/StandardContext.java
@@ -120,7 +120,7 @@ import org.apache.tomcat.util.scan.StandardJarScanner;
  *
  * @author Craig R. McClanahan
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class StandardContext

==================================================
StandardEngine.java
index 71935891a3..71aeaa1deb 100644
--- a/java/org/apache/catalina/core/StandardContextValve.java
+++ b/java/org/apache/catalina/core/StandardContextValve.java
@@ -45,7 +45,7 @@ import org.apache.tomcat.util.buf.MessageBytes;
  * when processing HTTP requests.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 final class StandardContextValve

==================================================
StandardEngineValve.java
index d1d5172daf..1a72d36005 100644
--- a/java/org/apache/catalina/core/StandardEngine.java
+++ b/java/org/apache/catalina/core/StandardEngine.java
@@ -47,7 +47,7 @@ import org.apache.tomcat.util.modeler.modules.MbeansSource;
  * You can set the jvmRoute direct or with the System.property <b>jvmRoute</b>.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class StandardEngine

==================================================
StandardHost.java
index d181ca1ff1..ebc00ccaf8 100644
--- a/java/org/apache/catalina/core/StandardEngineValve.java
+++ b/java/org/apache/catalina/core/StandardEngineValve.java
@@ -40,7 +40,7 @@ import org.apache.catalina.valves.ValveBase;
  * when processing HTTP requests.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 final class StandardEngineValve

==================================================
StandardHostValve.java
index fffe1c1789..657b39c206 100644
--- a/java/org/apache/catalina/core/StandardHost.java
+++ b/java/org/apache/catalina/core/StandardHost.java
@@ -49,7 +49,7 @@ import org.apache.tomcat.util.modeler.Registry;
  *
  * @author Craig R. McClanahan
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class StandardHost

==================================================
StandardServer.java
index 6ebf5d45b6..d0757a8655 100644
--- a/java/org/apache/catalina/core/StandardHostValve.java
+++ b/java/org/apache/catalina/core/StandardHostValve.java
@@ -50,7 +50,7 @@ import org.apache.juli.logging.LogFactory;
  *
  * @author Craig R. McClanahan
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 final class StandardHostValve

==================================================
StandardWrapper.java
index 2d79adf408..c933ce2d92 100644
--- a/java/org/apache/catalina/core/StandardServer.java
+++ b/java/org/apache/catalina/core/StandardServer.java
@@ -54,7 +54,7 @@ import org.apache.tomcat.util.modeler.Registry;
  * (but not required) when deploying and starting Catalina.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 public final class StandardServer extends LifecycleBase
         implements Server, MBeanRegistration {

==================================================
StandardWrapperFacade.java
index 95c239747d..b61645292c 100644
--- a/java/org/apache/catalina/core/StandardWrapper.java
+++ b/java/org/apache/catalina/core/StandardWrapper.java
@@ -74,7 +74,7 @@ import org.apache.juli.logging.LogFactory;
  *
  * @author Craig R. McClanahan
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 public class StandardWrapper
     extends ContainerBase

==================================================
StandardWrapperValve.java
index fe58e50b29..e209a47397 100644
--- a/java/org/apache/catalina/core/StandardWrapperFacade.java
+++ b/java/org/apache/catalina/core/StandardWrapperFacade.java
@@ -29,7 +29,7 @@ import javax.servlet.ServletContext;
  * Facade for the <b>StandardWrapper</b> object.
  *
  * @author Remy Maucharat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class StandardWrapperFacade

==================================================
ApplicationParameter.java
index 6d11baccce..991e39ec55 100644
--- a/java/org/apache/catalina/core/StandardWrapperValve.java
+++ b/java/org/apache/catalina/core/StandardWrapperValve.java
@@ -46,7 +46,7 @@ import org.apache.tomcat.util.log.SystemLogHandler;
  * <code>StandardWrapper</code> container implementation.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 final class StandardWrapperValve

==================================================
ContextEjb.java
index 884c983d7f..02ce791190 100644
--- a/java/org/apache/catalina/deploy/ApplicationParameter.java
+++ b/java/org/apache/catalina/deploy/ApplicationParameter.java
@@ -29,7 +29,7 @@ import java.io.Serializable;
  * to modify the application deployment descriptor itself.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ApplicationParameter implements Serializable {

==================================================
ContextEnvironment.java
index 808dab0c85..b4451e1429 100644
--- a/java/org/apache/catalina/deploy/ContextEjb.java
+++ b/java/org/apache/catalina/deploy/ContextEjb.java
@@ -26,7 +26,7 @@ package org.apache.catalina.deploy;
  *
  * @author Craig R. McClanahan
  * @author Peter Rossbach (pero@apache.org)
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ContextEjb extends ResourceBase {

==================================================
ContextLocalEjb.java
index 70f2b4a0f4..127d4f3cab 100644
--- a/java/org/apache/catalina/deploy/ContextEnvironment.java
+++ b/java/org/apache/catalina/deploy/ContextEnvironment.java
@@ -24,7 +24,7 @@ package org.apache.catalina.deploy;
  * an <code>&lt;env-entry&gt;</code> element in the deployment descriptor.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ContextEnvironment extends ResourceBase {

==================================================
ContextResource.java
index 20b50ad8ea..0b2617f511 100644
--- a/java/org/apache/catalina/deploy/ContextLocalEjb.java
+++ b/java/org/apache/catalina/deploy/ContextLocalEjb.java
@@ -26,7 +26,7 @@ package org.apache.catalina.deploy;
  *
  * @author Craig R. McClanahan
  * @author Peter Rossbach (pero@apache.org)
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ContextLocalEjb extends ResourceBase {

==================================================
ContextResourceEnvRef.java
index fae943ee1b..e53eea2ad4 100644
--- a/java/org/apache/catalina/deploy/ContextResource.java
+++ b/java/org/apache/catalina/deploy/ContextResource.java
@@ -26,7 +26,7 @@ package org.apache.catalina.deploy;
  *
  * @author Craig R. McClanahan
  * @author Peter Rossbach (pero@apache.org)
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ContextResource extends ResourceBase {

==================================================
ContextResourceLink.java
index 3e96e8d961..fe46c2718c 100644
--- a/java/org/apache/catalina/deploy/ContextResourceEnvRef.java
+++ b/java/org/apache/catalina/deploy/ContextResourceEnvRef.java
@@ -25,7 +25,7 @@ package org.apache.catalina.deploy;
  *
  * @author Craig R. McClanahan
  * @author Peter Rossbach (pero@apache.org)
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ContextResourceEnvRef extends ResourceBase {

==================================================
ContextService.java
index 76dd54bb80..f295f203b4 100644
--- a/java/org/apache/catalina/deploy/ContextResourceLink.java
+++ b/java/org/apache/catalina/deploy/ContextResourceLink.java
@@ -26,7 +26,7 @@ package org.apache.catalina.deploy;
  *
  * @author Remy Maucherat
  * @author Peter Rossbach (Peter Rossbach (pero@apache.org))
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ContextResourceLink extends ResourceBase {

==================================================
ContextTransaction.java
index d451a7034e..c61cd5b090 100644
--- a/java/org/apache/catalina/deploy/ContextService.java
+++ b/java/org/apache/catalina/deploy/ContextService.java
@@ -27,7 +27,7 @@ import java.util.HashMap;
  * deployment descriptor.
  *
  * @author Fabien Carrion
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ContextService extends ResourceBase {

==================================================
ErrorPage.java
index 2968bf9009..7fe2e5a1f2 100644
--- a/java/org/apache/catalina/deploy/ContextTransaction.java
+++ b/java/org/apache/catalina/deploy/ContextTransaction.java
@@ -28,7 +28,7 @@ import java.util.Iterator;
  * an <code>&lt;res-env-refy&gt;</code> element in the deployment descriptor.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ContextTransaction implements Serializable {

==================================================
FilterDef.java
index f83ad2cb7b..8c90403d3d 100644
--- a/java/org/apache/catalina/deploy/ErrorPage.java
+++ b/java/org/apache/catalina/deploy/ErrorPage.java
@@ -29,7 +29,7 @@ import java.io.Serializable;
  * deployment descriptor.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ErrorPage implements Serializable {

==================================================
FilterMap.java
index 3b1d13254b..4b9a32f0f8 100644
--- a/java/org/apache/catalina/deploy/FilterDef.java
+++ b/java/org/apache/catalina/deploy/FilterDef.java
@@ -31,7 +31,7 @@ import javax.servlet.Filter;
  * in a <code>&lt;filter&gt;</code> element in the deployment descriptor.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class FilterDef implements Serializable {

==================================================
InjectionTarget.java
index d81e599a88..a93e83b94a 100644
--- a/java/org/apache/catalina/deploy/FilterMap.java
+++ b/java/org/apache/catalina/deploy/FilterMap.java
@@ -33,7 +33,7 @@ import javax.servlet.DispatcherType;
  * a URL pattern or a servlet name.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class FilterMap implements Serializable {

==================================================
LoginConfig.java
index d5fb0451b9..53003f6cac 100644
--- a/java/org/apache/catalina/deploy/InjectionTarget.java
+++ b/java/org/apache/catalina/deploy/InjectionTarget.java
@@ -21,7 +21,7 @@
 package org.apache.catalina.deploy;
 
 /**
- * @version $Rev$ $Date$
+ * @version $Id$
  */
 public class InjectionTarget {
     private String targetClass;

==================================================
MessageDestination.java
index 67ce86ce01..1f8e28cd4c 100644
--- a/java/org/apache/catalina/deploy/LoginConfig.java
+++ b/java/org/apache/catalina/deploy/LoginConfig.java
@@ -29,7 +29,7 @@ import java.io.Serializable;
  * deployment descriptor.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class LoginConfig implements Serializable {

==================================================
MessageDestinationRef.java
index f10cb92850..aba7013cfa 100644
--- a/java/org/apache/catalina/deploy/MessageDestination.java
+++ b/java/org/apache/catalina/deploy/MessageDestination.java
@@ -25,7 +25,7 @@ package org.apache.catalina.deploy;
  * in the deployment descriptor.</p>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since Tomcat 5.0
  */
 

==================================================
NamingResources.java
index 51fdfdf7c4..c386720096 100644
--- a/java/org/apache/catalina/deploy/MessageDestinationRef.java
+++ b/java/org/apache/catalina/deploy/MessageDestinationRef.java
@@ -25,7 +25,7 @@ package org.apache.catalina.deploy;
  * in the deployment descriptor.</p>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since Tomcat 5.0
  */
 

==================================================
ResourceBase.java
index b7e3280dae..770f3ebe5d 100644
--- a/java/org/apache/catalina/deploy/NamingResources.java
+++ b/java/org/apache/catalina/deploy/NamingResources.java
@@ -35,7 +35,7 @@ import org.apache.catalina.Server;
  * Naming Context and their associated JNDI context.
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class NamingResources implements Serializable {

==================================================
SecurityCollection.java
index 4602b29139..cb7b74c343 100644
--- a/java/org/apache/catalina/deploy/ResourceBase.java
+++ b/java/org/apache/catalina/deploy/ResourceBase.java
@@ -29,7 +29,7 @@ import java.util.ArrayList;
  * Representation of an Context element
  *
  * @author Peter Rossbach (pero@apache.org)
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ResourceBase implements Serializable, Injectable {

==================================================
SecurityConstraint.java
index b2d0f7469e..05fa12b78e 100644
--- a/java/org/apache/catalina/deploy/SecurityCollection.java
+++ b/java/org/apache/catalina/deploy/SecurityCollection.java
@@ -36,7 +36,7 @@ import java.io.Serializable;
  * this class is synchronized.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class SecurityCollection implements Serializable {

==================================================
SecurityRoleRef.java
index f927d48f82..bb69a3eacf 100644
--- a/java/org/apache/catalina/deploy/SecurityConstraint.java
+++ b/java/org/apache/catalina/deploy/SecurityConstraint.java
@@ -43,7 +43,7 @@ import javax.servlet.annotation.ServletSecurity.EmptyRoleSemantic;
  * this class is synchronized.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class SecurityConstraint implements Serializable {

==================================================
Constants.java
index 01f0720c74..c2d270ca43 100644
--- a/java/org/apache/catalina/deploy/SecurityRoleRef.java
+++ b/java/org/apache/catalina/deploy/SecurityRoleRef.java
@@ -25,7 +25,7 @@ package org.apache.catalina.deploy;
  * in the deployment descriptor.</p>
  *
  * @author Mark Thomas
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since Tomcat 5.5
  */
 

==================================================
CatalinaCluster.java
index 76ed31c21a..6b0cd511b2 100644
--- a/java/org/apache/catalina/filters/Constants.java
+++ b/java/org/apache/catalina/filters/Constants.java
@@ -24,7 +24,7 @@ package org.apache.catalina.filters;
  *
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class Constants {

==================================================
ClusterDeployer.java
index 884b882c47..5c629e0ff5 100644
--- a/java/org/apache/catalina/ha/CatalinaCluster.java
+++ b/java/org/apache/catalina/ha/CatalinaCluster.java
@@ -34,7 +34,7 @@ import org.apache.juli.logging.Log;
  * different cluster implementations
  *
  * @author Filip Hanik
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 
 public interface CatalinaCluster extends Cluster {

==================================================
ClusterListener.java
index 4d38eec179..9bfaf9602a 100644
--- a/java/org/apache/catalina/ha/ClusterDeployer.java
+++ b/java/org/apache/catalina/ha/ClusterDeployer.java
@@ -22,7 +22,7 @@ package org.apache.catalina.ha;
  * different deployment implementations
  *
  * @author Filip Hanik
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 import org.apache.catalina.LifecycleException;
 import java.io.IOException;

==================================================
ClusterRuleSet.java
index 89e75d6356..4df3cf3c96 100644
--- a/java/org/apache/catalina/ha/ClusterListener.java
+++ b/java/org/apache/catalina/ha/ClusterListener.java
@@ -33,7 +33,7 @@ import org.apache.tomcat.util.res.StringManager;
  * 
  * @author Peter Rossbach
  * @author Filip Hanik
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 public abstract class ClusterListener implements ChannelListener {
 

==================================================
ClusterValve.java
index 8592a482ca..167c2af625 100644
--- a/java/org/apache/catalina/ha/ClusterRuleSet.java
+++ b/java/org/apache/catalina/ha/ClusterRuleSet.java
@@ -29,7 +29,7 @@ import org.apache.tomcat.util.digester.RuleSetBase;
  *
  * @author Filip Hanik
  * @author Peter Rossbach
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ClusterRuleSet extends RuleSetBase {

==================================================
Constants.java
index f2f268e9f3..f33efb6258 100644
--- a/java/org/apache/catalina/ha/ClusterValve.java
+++ b/java/org/apache/catalina/ha/ClusterValve.java
@@ -23,7 +23,7 @@ import org.apache.catalina.Valve;
  * with a small addition of being able to reference the cluster component in the container it sits in.
  * @author Filip Hanik
  * @author Peter Rossbach
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public interface ClusterValve extends Valve{
     /**

==================================================
ClusterManagerBase.java
index bbbf6ff97a..cc59d526bc 100644
--- a/java/org/apache/catalina/ha/Constants.java
+++ b/java/org/apache/catalina/ha/Constants.java
@@ -23,7 +23,7 @@ package org.apache.catalina.ha;
  * package.
  *
  * @author Bip Thelin
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 
 public final class Constants {

==================================================
ClusterSessionListener.java
index 90a50f1764..1d82088288 100644
--- a/java/org/apache/catalina/ha/session/ClusterManagerBase.java
+++ b/java/org/apache/catalina/ha/session/ClusterManagerBase.java
@@ -30,7 +30,7 @@ import org.apache.catalina.Container;
 /**
  * 
  * @author Filip Hanik
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public abstract class ClusterManagerBase extends ManagerBase implements Lifecycle, PropertyChangeListener, ClusterManager{

==================================================
DeltaManager.java
index e41273f0a0..f4148846f5 100644
--- a/java/org/apache/catalina/ha/session/ClusterSessionListener.java
+++ b/java/org/apache/catalina/ha/session/ClusterSessionListener.java
@@ -25,7 +25,7 @@ import org.apache.catalina.ha.*;
  * Receive replicated SessionMessage form other cluster node.
  * @author Filip Hanik
  * @author Peter Rossbach
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 public class ClusterSessionListener extends ClusterListener {
  

==================================================
DeltaSession.java
index d88ebd0653..4b78a674d1 100644
--- a/java/org/apache/catalina/ha/session/DeltaManager.java
+++ b/java/org/apache/catalina/ha/session/DeltaManager.java
@@ -63,7 +63,7 @@ import org.apache.catalina.ha.ClusterManager;
  * @author Craig R. McClanahan
  * @author Jean-Francois Arcand
  * @author Peter Rossbach
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class DeltaManager extends ClusterManagerBase{

==================================================
JvmRouteBinderValve.java
index fd70a44469..105bc44578 100644
--- a/java/org/apache/catalina/ha/session/DeltaSession.java
+++ b/java/org/apache/catalina/ha/session/DeltaSession.java
@@ -57,7 +57,7 @@ import java.util.concurrent.atomic.AtomicInteger;
  * track of deltas during a request.
  *
  * @author Filip Hanik
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class DeltaSession extends StandardSession implements Externalizable,ClusterSession,ReplicatedMapEntry {

==================================================
JvmRouteSessionIDBinderListener.java
index 410e04361c..49eb0d4ae8 100644
--- a/java/org/apache/catalina/ha/session/JvmRouteBinderValve.java
+++ b/java/org/apache/catalina/ha/session/JvmRouteBinderValve.java
@@ -90,7 +90,7 @@ import org.apache.catalina.valves.ValveBase;
  * requested sessions are migrated.
  * 
  * @author Peter Rossbach
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 public class JvmRouteBinderValve extends ValveBase implements ClusterValve {
 

==================================================
ReplicatedSession.java
index b506895a6e..a784489551 100644
--- a/java/org/apache/catalina/ha/session/JvmRouteSessionIDBinderListener.java
+++ b/java/org/apache/catalina/ha/session/JvmRouteSessionIDBinderListener.java
@@ -33,7 +33,7 @@ import org.apache.catalina.ha.*;
  * node is failed.
  * 
  * @author Peter Rossbach
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 public class JvmRouteSessionIDBinderListener extends ClusterListener {
  

==================================================
SerializablePrincipal.java
index 632668c492..995425e901 100644
--- a/java/org/apache/catalina/ha/session/ReplicatedSession.java
+++ b/java/org/apache/catalina/ha/session/ReplicatedSession.java
@@ -18,6 +18,12 @@
 
 package org.apache.catalina.ha.session;
 
+import org.apache.catalina.Manager;
+import java.io.IOException;
+import java.io.ObjectInputStream;
+import java.io.ObjectOutputStream;
+import java.security.Principal;
+
 /**
  * Title:        Tomcat Session Replication for Tomcat 4.0 <BR>
  * Description:  A very simple straight forward implementation of
@@ -29,9 +35,8 @@ package org.apache.catalina.ha.session;
  *               A full description of this implementation can be found under
  *               <href="http://www.filip.net/tomcat/">Filip's Tomcat Page</a><BR>
  *
- * Copyright:    See apache license
- * @author  Filip Hanik
- * @version $Revision$ $Date$
+ * Copyright:    See apache license<BR>
+ *
  * Description:<BR>
  * The ReplicatedSession class is a simple extension of the StandardSession class
  * It overrides a few methods (setAttribute, removeAttribute, expire, access) and has
@@ -39,13 +44,9 @@ package org.apache.catalina.ha.session;
  * This class inherits the readObjectData and writeObject data methods from the StandardSession
  * and does not contain any serializable elements in addition to the inherited ones from the StandardSession
  *
+ * @author  Filip Hanik
+ * @version $Id$
  */
-import org.apache.catalina.Manager;
-import java.io.IOException;
-import java.io.ObjectInputStream;
-import java.io.ObjectOutputStream;
-import java.security.Principal;
-
 public class ReplicatedSession extends org.apache.catalina.session.StandardSession
 implements org.apache.catalina.ha.ClusterSession{
 

==================================================
SessionIDMessage.java
index 90bbaf33e8..f56ada6122 100644
--- a/java/org/apache/catalina/ha/session/SerializablePrincipal.java
+++ b/java/org/apache/catalina/ha/session/SerializablePrincipal.java
@@ -40,7 +40,7 @@ import org.apache.tomcat.util.res.StringManager;
  * The GenericPrincipal does NOT implement serializable and I didn't want to
  * change that implementation hence I implemented this one instead.
  * @author Filip Hanik
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 public class SerializablePrincipal  implements java.io.Serializable {
 

==================================================
SessionMessageImpl.java
index 52d80addd6..24da67e2be 100644
--- a/java/org/apache/catalina/ha/session/SessionIDMessage.java
+++ b/java/org/apache/catalina/ha/session/SessionIDMessage.java
@@ -23,7 +23,7 @@ import org.apache.catalina.ha.ClusterMessageBase;
  * 
  * @author Peter Rossbach
  * 
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 public class SessionIDMessage extends ClusterMessageBase {
 

==================================================
SimpleTcpReplicationManager.java
index 6550bc25ce..587598295f 100644
--- a/java/org/apache/catalina/ha/session/SessionMessageImpl.java
+++ b/java/org/apache/catalina/ha/session/SessionMessageImpl.java
@@ -25,7 +25,7 @@ import org.apache.catalina.ha.ClusterMessageBase;
  * @author Filip Hanik
  * @author Peter Rossbach
  * 
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 public class SessionMessageImpl extends ClusterMessageBase implements SessionMessage {
     

==================================================
Constants.java
index 989f3eab2c..38d011f124 100644
--- a/java/org/apache/catalina/ha/session/SimpleTcpReplicationManager.java
+++ b/java/org/apache/catalina/ha/session/SimpleTcpReplicationManager.java
@@ -44,11 +44,9 @@ import org.apache.catalina.Loader;
  *               A full description of this implementation can be found under
  *               <href="http://www.filip.net/tomcat/">Filip's Tomcat Page</a><BR>
  *
- * Copyright:    See apache license
- * Company:      www.filip.net
- * @author  <a href="mailto:mail@filip.net">Filip Hanik</a>
- * @author Bela Ban (modifications for synchronous replication)
- * @version 1.0 for TC 4.0
+ * Copyright:    See apache license<BR>
+ * Company:      www.filip.net<BR>
+ * 
  * Description: The InMemoryReplicationManager is a session manager that replicated
  * session information in memory. 
  * <BR><BR>
@@ -59,6 +57,10 @@ import org.apache.catalina.Loader;
  * all defined in the SessionMessage class.<BR>
  * When a session is replicated (not an attribute added/removed) the session is serialized into
  * a byte array using the StandardSession.readObjectData, StandardSession.writeObjectData methods.
+ * 
+ * @author  <a href="mailto:mail@filip.net">Filip Hanik</a>
+ * @author Bela Ban (modifications for synchronous replication)
+ * @version 1.0 for TC 4.0
  */
 public class SimpleTcpReplicationManager extends StandardManager implements ClusterManager
 {

==================================================
ReplicationValve.java
index 6d3f7a6ac6..35d1725d07 100644
--- a/java/org/apache/catalina/ha/tcp/Constants.java
+++ b/java/org/apache/catalina/ha/tcp/Constants.java
@@ -23,7 +23,7 @@ package org.apache.catalina.ha.tcp;
  * package.
  *
  * @author Peter Rossbach
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class Constants {

==================================================
SendMessageData.java
index bd4146e664..4bbb34ad86 100644
--- a/java/org/apache/catalina/ha/tcp/ReplicationValve.java
+++ b/java/org/apache/catalina/ha/tcp/ReplicationValve.java
@@ -57,7 +57,7 @@ import org.apache.catalina.valves.ValveBase;
  * @author Craig R. McClanahan
  * @author Filip Hanik
  * @author Peter Rossbach
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ReplicationValve

==================================================
SimpleTcpCluster.java
index 53ba2f49c0..097ddf29f4 100644
--- a/java/org/apache/catalina/ha/tcp/SendMessageData.java
+++ b/java/org/apache/catalina/ha/tcp/SendMessageData.java
@@ -21,7 +21,7 @@ import org.apache.catalina.tribes.Member;
 
 /**
  * @author Peter Rossbach
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 public class SendMessageData {
 

==================================================
IDynamicProperty.java
index 0c8bee9c61..eb6eb15e55 100644
--- a/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java
+++ b/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java
@@ -70,7 +70,7 @@ import org.apache.catalina.ha.jmx.ClusterJmxHelper;
  * @author Filip Hanik
  * @author Remy Maucherat
  * @author Peter Rossbach
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public class SimpleTcpCluster extends LifecycleBase
     implements CatalinaCluster, LifecycleListener, IDynamicProperty,

==================================================
ResourceEntry.java
index 9e0b99f1dd..f3cee1cfc9 100644
--- a/java/org/apache/catalina/ha/util/IDynamicProperty.java
+++ b/java/org/apache/catalina/ha/util/IDynamicProperty.java
@@ -21,7 +21,7 @@ import java.util.Iterator;
 
 /**
  * @author Peter Rossbach
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 
 public interface IDynamicProperty {

==================================================
StandardClassLoader.java
index 5fd1786352..8938d2ed50 100644
--- a/java/org/apache/catalina/loader/ResourceEntry.java
+++ b/java/org/apache/catalina/loader/ResourceEntry.java
@@ -26,7 +26,7 @@ import java.util.jar.Manifest;
  * Resource entry.
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 public class ResourceEntry {
 

==================================================
StandardClassLoaderMBean.java
index 7af05709f9..0e63346c2e 100644
--- a/java/org/apache/catalina/loader/StandardClassLoader.java
+++ b/java/org/apache/catalina/loader/StandardClassLoader.java
@@ -27,7 +27,7 @@ import java.net.URLClassLoader;
  *
  * @author Craig R. McClanahan
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class StandardClassLoader

==================================================
WebappClassLoader.java
index db9a884a0f..cc5826447f 100644
--- a/java/org/apache/catalina/loader/StandardClassLoaderMBean.java
+++ b/java/org/apache/catalina/loader/StandardClassLoaderMBean.java
@@ -22,7 +22,7 @@ package org.apache.catalina.loader;
  * MBean interface for StandardClassLoader, to allow JMX remote management.
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 public interface StandardClassLoaderMBean {
 }

==================================================
WebappLoader.java
index 484d6cfcd4..6577c9be9d 100644
--- a/java/org/apache/catalina/loader/WebappClassLoader.java
+++ b/java/org/apache/catalina/loader/WebappClassLoader.java
@@ -115,7 +115,7 @@ import org.apache.tomcat.util.IntrospectionUtils;
  *
  * @author Remy Maucherat
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 public class WebappClassLoader
     extends URLClassLoader

==================================================
HTMLManagerServlet.java
index aaaaea1555..149bf9f3ce 100644
--- a/java/org/apache/catalina/loader/WebappLoader.java
+++ b/java/org/apache/catalina/loader/WebappLoader.java
@@ -77,7 +77,7 @@ import org.apache.tomcat.util.modeler.Registry;
  *
  * @author Craig R. McClanahan
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class WebappLoader extends LifecycleBase

==================================================
ManagerServlet.java
index e171bb15bf..6ce2010624 100644
--- a/java/org/apache/catalina/manager/HTMLManagerServlet.java
+++ b/java/org/apache/catalina/manager/HTMLManagerServlet.java
@@ -71,7 +71,7 @@ import org.apache.tomcat.util.http.fileupload.ParameterParser;
 * @author Bip Thelin
 * @author Malcolm Edgar
 * @author Glenn L. Nielsen
-* @version $Revision$, $Date$
+* @version $Id$
 * @see ManagerServlet
 */
 

==================================================
StatusManagerServlet.java
index 19905ab506..29ee747d9e 100644
--- a/java/org/apache/catalina/manager/ManagerServlet.java
+++ b/java/org/apache/catalina/manager/ManagerServlet.java
@@ -152,7 +152,7 @@ import org.apache.tomcat.util.modeler.Registry;
  *
  * @author Craig R. McClanahan
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ManagerServlet

==================================================
StatusTransformer.java
index 7336ba1485..088f52fb62 100644
--- a/java/org/apache/catalina/manager/StatusManagerServlet.java
+++ b/java/org/apache/catalina/manager/StatusManagerServlet.java
@@ -45,7 +45,7 @@ import org.apache.tomcat.util.modeler.Registry;
  * This servlet will display a complete status of the HTTP/1.1 connector.
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class StatusManagerServlet

==================================================
HTMLHostManagerServlet.java
index 17069c95c0..d8f2e74ad9 100644
--- a/java/org/apache/catalina/manager/StatusTransformer.java
+++ b/java/org/apache/catalina/manager/StatusTransformer.java
@@ -41,7 +41,7 @@ import org.apache.tomcat.util.ExceptionUtils;
  * use XSLT, that is unnecessarily complex.
  *
  * @author Peter Lin
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class StatusTransformer {

==================================================
HostManagerServlet.java
index 362b5d44ce..e5bcda497a 100644
--- a/java/org/apache/catalina/manager/host/HTMLHostManagerServlet.java
+++ b/java/org/apache/catalina/manager/host/HTMLHostManagerServlet.java
@@ -57,7 +57,7 @@ import org.apache.catalina.util.ServerInfo;
 * @author Malcolm Edgar
 * @author Glenn L. Nielsen
 * @author Peter Rossbach
-* @version $Revision$, $Date$
+* @version $Id$
 * @see ManagerServlet
 */
 

==================================================
ClassNameMBean.java
index e3167a0b30..5d0a46ca10 100644
--- a/java/org/apache/catalina/manager/host/HostManagerServlet.java
+++ b/java/org/apache/catalina/manager/host/HostManagerServlet.java
@@ -88,7 +88,7 @@ import org.apache.catalina.core.ContainerBase;
  *
  * @author Craig R. McClanahan
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class HostManagerServlet

==================================================
ConnectorMBean.java
index b36d8a8b99..7821e2d6d8 100644
--- a/java/org/apache/catalina/mbeans/ClassNameMBean.java
+++ b/java/org/apache/catalina/mbeans/ClassNameMBean.java
@@ -34,7 +34,7 @@ import org.apache.tomcat.util.modeler.BaseModelMBean;
  * qualified class name of the managed object as its value.</p>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ClassNameMBean extends BaseModelMBean {

==================================================
ContextEnvironmentMBean.java
index 1c36a2f828..2fb3df5aa8 100644
--- a/java/org/apache/catalina/mbeans/ConnectorMBean.java
+++ b/java/org/apache/catalina/mbeans/ConnectorMBean.java
@@ -34,7 +34,7 @@ import org.apache.tomcat.util.IntrospectionUtils;
  * <code>org.apache.coyote.tomcat5.CoyoteConnector</code> component.</p>
  *
  * @author Amy Roh
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ConnectorMBean extends ClassNameMBean {

==================================================
ContextResourceLinkMBean.java
index bf584ad77a..8ada14e08c 100644
--- a/java/org/apache/catalina/mbeans/ContextEnvironmentMBean.java
+++ b/java/org/apache/catalina/mbeans/ContextEnvironmentMBean.java
@@ -36,7 +36,7 @@ import org.apache.tomcat.util.modeler.BaseModelMBean;
  * <code>org.apache.catalina.deploy.ContextEnvironment</code> component.</p>
  *
  * @author Amy Roh
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ContextEnvironmentMBean extends BaseModelMBean {

==================================================
ContextResourceMBean.java
index 14cf26734a..2419ccd5f0 100644
--- a/java/org/apache/catalina/mbeans/ContextResourceLinkMBean.java
+++ b/java/org/apache/catalina/mbeans/ContextResourceLinkMBean.java
@@ -36,7 +36,7 @@ import org.apache.tomcat.util.modeler.BaseModelMBean;
  * <code>org.apache.catalina.deploy.ContextResourceLink</code> component.</p>
  *
  * @author Amy Roh
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ContextResourceLinkMBean extends BaseModelMBean {

==================================================
GlobalResourcesLifecycleListener.java
index 461140271e..74dcdb655d 100644
--- a/java/org/apache/catalina/mbeans/ContextResourceMBean.java
+++ b/java/org/apache/catalina/mbeans/ContextResourceMBean.java
@@ -36,7 +36,7 @@ import org.apache.tomcat.util.modeler.BaseModelMBean;
  * <code>org.apache.catalina.deploy.ContextResource</code> component.</p>
  *
  * @author Amy Roh
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ContextResourceMBean extends BaseModelMBean {

==================================================
GroupMBean.java
index 62cf94b269..1406d85ce6 100644
--- a/java/org/apache/catalina/mbeans/GlobalResourcesLifecycleListener.java
+++ b/java/org/apache/catalina/mbeans/GlobalResourcesLifecycleListener.java
@@ -43,7 +43,7 @@ import org.apache.tomcat.util.modeler.Registry;
  * management.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 4.1
  */
 

==================================================
MBeanFactory.java
index a3613c8f77..ff5050032c 100644
--- a/java/org/apache/catalina/mbeans/GroupMBean.java
+++ b/java/org/apache/catalina/mbeans/GroupMBean.java
@@ -39,7 +39,7 @@ import org.apache.tomcat.util.modeler.Registry;
  * <code>org.apache.catalina.Group</code> component.</p>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class GroupMBean extends BaseModelMBean {

==================================================
MBeanUtils.java
index 66802bc1d6..53196e36bb 100644
--- a/java/org/apache/catalina/mbeans/MBeanFactory.java
+++ b/java/org/apache/catalina/mbeans/MBeanFactory.java
@@ -57,7 +57,7 @@ import org.apache.catalina.valves.ValveBase;
  * <code>org.apache.catalina.core.StandardServer</code> component.</p>
  *
  * @author Amy Roh
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class MBeanFactory {

==================================================
MemoryUserDatabaseMBean.java
index a315a87357..7581774dbc 100644
--- a/java/org/apache/catalina/mbeans/MBeanUtils.java
+++ b/java/org/apache/catalina/mbeans/MBeanUtils.java
@@ -65,7 +65,7 @@ import org.apache.tomcat.util.modeler.Registry;
  *
  * @author Craig R. McClanahan
  * @author Amy Roh
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class MBeanUtils {

==================================================
NamingResourcesMBean.java
index c098d301f2..454c3f3f48 100644
--- a/java/org/apache/catalina/mbeans/MemoryUserDatabaseMBean.java
+++ b/java/org/apache/catalina/mbeans/MemoryUserDatabaseMBean.java
@@ -40,7 +40,7 @@ import org.apache.tomcat.util.modeler.Registry;
  * <code>org.apache.catalina.users.MemoryUserDatabase</code> component.</p>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class MemoryUserDatabaseMBean extends BaseModelMBean {

==================================================
RoleMBean.java
index dfb41489a2..49347767d2 100644
--- a/java/org/apache/catalina/mbeans/NamingResourcesMBean.java
+++ b/java/org/apache/catalina/mbeans/NamingResourcesMBean.java
@@ -37,7 +37,7 @@ import org.apache.tomcat.util.modeler.Registry;
  * <code>org.apache.catalina.deploy.NamingResources</code> component.</p>
  *
  * @author Amy Roh
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class NamingResourcesMBean extends BaseModelMBean {

==================================================
ServerLifecycleListener.java
index ca2e430679..d47031a1d4 100644
--- a/java/org/apache/catalina/mbeans/RoleMBean.java
+++ b/java/org/apache/catalina/mbeans/RoleMBean.java
@@ -32,7 +32,7 @@ import org.apache.tomcat.util.modeler.Registry;
  * <code>org.apache.catalina.Role</code> component.</p>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class RoleMBean extends BaseModelMBean {

==================================================
UserMBean.java
index 5cd2b70d1e..39c0f5c526 100644
--- a/java/org/apache/catalina/mbeans/ServerLifecycleListener.java
+++ b/java/org/apache/catalina/mbeans/ServerLifecycleListener.java
@@ -58,7 +58,7 @@ import org.apache.juli.logging.LogFactory;
  *
  * @author Craig R. McClanahan
  * @author Amy Roh
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ServerLifecycleListener

==================================================
Constants.java
index 718bbbef43..ce5328117f 100644
--- a/java/org/apache/catalina/mbeans/UserMBean.java
+++ b/java/org/apache/catalina/mbeans/UserMBean.java
@@ -39,7 +39,7 @@ import org.apache.tomcat.util.modeler.Registry;
  * <code>org.apache.catalina.User</code> component.</p>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class UserMBean extends BaseModelMBean {

==================================================
GenericPrincipal.java
index 6507c42453..db836c2a43 100644
--- a/java/org/apache/catalina/realm/Constants.java
+++ b/java/org/apache/catalina/realm/Constants.java
@@ -24,7 +24,7 @@ package org.apache.catalina.realm;
  *
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class Constants {

==================================================
JAASCallbackHandler.java
index 6e6a368847..82824ccb48 100644
--- a/java/org/apache/catalina/realm/GenericPrincipal.java
+++ b/java/org/apache/catalina/realm/GenericPrincipal.java
@@ -31,7 +31,7 @@ import javax.security.auth.login.LoginContext;
  * is available for use by <code>Realm</code> implementations.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class GenericPrincipal implements Principal {

==================================================
JAASMemoryLoginModule.java
index 07ace7d468..56a48945e8 100644
--- a/java/org/apache/catalina/realm/JAASCallbackHandler.java
+++ b/java/org/apache/catalina/realm/JAASCallbackHandler.java
@@ -44,7 +44,7 @@ import org.apache.tomcat.util.res.StringManager;
  *
  * @author Craig R. McClanahan
  * @author Andrew R. Jaquith
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class JAASCallbackHandler implements CallbackHandler {

==================================================
JAASRealm.java
index 15bfebbf1b..35e8aa5c4c 100644
--- a/java/org/apache/catalina/realm/JAASMemoryLoginModule.java
+++ b/java/org/apache/catalina/realm/JAASMemoryLoginModule.java
@@ -67,7 +67,7 @@ import org.apache.tomcat.util.digester.Digester;
  * the functionality required of a <code>Realm</code> implementation.</p>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class JAASMemoryLoginModule extends MemoryRealm implements LoginModule {

==================================================
JDBCRealm.java
index c6b3d906e0..0ee4cbe4cf 100644
--- a/java/org/apache/catalina/realm/JAASRealm.java
+++ b/java/org/apache/catalina/realm/JAASRealm.java
@@ -122,7 +122,7 @@ org.foobar.auth.DatabaseLoginModule REQUIRED
 *
 * @author Craig R. McClanahan
 * @author Yoav Shapira
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class JAASRealm

==================================================
JNDIRealm.java
index f517639f1b..d978b76f85 100644
--- a/java/org/apache/catalina/realm/JDBCRealm.java
+++ b/java/org/apache/catalina/realm/JDBCRealm.java
@@ -48,7 +48,7 @@ import org.apache.tomcat.util.ExceptionUtils;
 * @author Craig R. McClanahan
 * @author Carson McDonald
 * @author Ignacio Ortega
-* @version $Revision$ $Date$
+* @version $Id$
 */
 
 public class JDBCRealm

==================================================
MemoryRealm.java
index c20f6fefbd..d7f26a3fa9 100644
--- a/java/org/apache/catalina/realm/JNDIRealm.java
+++ b/java/org/apache/catalina/realm/JNDIRealm.java
@@ -169,7 +169,7 @@ import org.apache.tomcat.util.buf.CharChunk;
  *
  * @author John Holman
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class JNDIRealm extends RealmBase {

==================================================
MemoryRuleSet.java
index 96df059db0..9334f94c97 100644
--- a/java/org/apache/catalina/realm/MemoryRealm.java
+++ b/java/org/apache/catalina/realm/MemoryRealm.java
@@ -42,7 +42,7 @@ import org.apache.tomcat.util.digester.Digester;
  * synchronization is performed around accesses to the principals collection.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class MemoryRealm  extends RealmBase {

==================================================
RealmBase.java
index 66cba134e6..08cfebc806 100644
--- a/java/org/apache/catalina/realm/MemoryRuleSet.java
+++ b/java/org/apache/catalina/realm/MemoryRuleSet.java
@@ -30,7 +30,7 @@ import org.xml.sax.Attributes;
  * XML file processed by <code>MemoryRealm</code>.</p>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class MemoryRuleSet extends RuleSetBase {

==================================================
UserDatabaseRealm.java
index d5f6f7718e..573db55a29 100644
--- a/java/org/apache/catalina/realm/RealmBase.java
+++ b/java/org/apache/catalina/realm/RealmBase.java
@@ -65,7 +65,7 @@ import org.apache.tomcat.util.modeler.Registry;
  * location) are identical to those currently supported by Tomcat 3.X.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public abstract class RealmBase extends LifecycleBase

==================================================
SecurityClassLoad.java
index 23b949f465..cf1a32a9ef 100644
--- a/java/org/apache/catalina/realm/UserDatabaseRealm.java
+++ b/java/org/apache/catalina/realm/UserDatabaseRealm.java
@@ -43,7 +43,7 @@ import org.apache.catalina.util.LifecycleBase;
  * of <code>UserDatabase</code> that we should consult.</p>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 4.1
  */
 

==================================================
CGIServlet.java
index ed1f9756b0..589806782b 100644
--- a/java/org/apache/catalina/security/SecurityClassLoad.java
+++ b/java/org/apache/catalina/security/SecurityClassLoad.java
@@ -25,7 +25,7 @@ package org.apache.catalina.security;
  *
  * @author Glenn L. Nielsen
  * @author Jean-Francois Arcand
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class SecurityClassLoad {

==================================================
DefaultServlet.java
index 060438bff4..018339e2df 100644
--- a/java/org/apache/catalina/servlets/CGIServlet.java
+++ b/java/org/apache/catalina/servlets/CGIServlet.java
@@ -234,7 +234,7 @@ import org.apache.catalina.util.IOTools;
  *
  * @author Martin T Dengler [root@martindengler.com]
  * @author Amy Roh
- * @version $Revision$, $Date$
+ * @version $Id$
  * @since Tomcat 4.0
  *
  */
@@ -636,7 +636,7 @@ public final class CGIServlet extends HttpServlet {
      * <p>
      * </p>
      *
-     * @version  $Revision$, $Date$
+     * @version  $Id$
      * @since    Tomcat 4.0
      *
      */
@@ -1380,7 +1380,7 @@ public final class CGIServlet extends HttpServlet {
      * and <code>setResponse</code> methods, respectively.
      * </p>
      *
-     * @version   $Revision$, $Date$
+     * @version $Id$
      */
 
     protected class CGIRunner {

==================================================
WebdavServlet.java
index b94dbed0f3..ca1133111b 100644
--- a/java/org/apache/catalina/servlets/DefaultServlet.java
+++ b/java/org/apache/catalina/servlets/DefaultServlet.java
@@ -75,7 +75,7 @@ import org.apache.naming.resources.ResourceAttributes;
  *
  * @author Craig R. McClanahan
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class DefaultServlet

==================================================
FileStore.java
index 5c033eed76..c314de8949 100644
--- a/java/org/apache/catalina/servlets/WebdavServlet.java
+++ b/java/org/apache/catalina/servlets/WebdavServlet.java
@@ -113,7 +113,7 @@ import org.xml.sax.SAXException;
  * http://host:port/context/webdavedit/content
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class WebdavServlet

==================================================
JDBCStore.java
index 28da3441fd..06ff969025 100644
--- a/java/org/apache/catalina/session/FileStore.java
+++ b/java/org/apache/catalina/session/FileStore.java
@@ -45,7 +45,7 @@ import org.apache.catalina.util.CustomObjectInputStream;
  * saved are still subject to being expired based on inactivity.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class FileStore extends StoreBase {

==================================================
ManagerBase.java
index a2f6c37b26..37a7a15f22 100644
--- a/java/org/apache/catalina/session/JDBCStore.java
+++ b/java/org/apache/catalina/session/JDBCStore.java
@@ -47,7 +47,7 @@ import java.util.Properties;
  * saved are still subject to being expired based on inactivity.
  *
  * @author Bip Thelin
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 
 public class JDBCStore extends StoreBase {

==================================================
PersistentManagerBase.java
index 1eebb60446..2c19d60b08 100644
--- a/java/org/apache/catalina/session/ManagerBase.java
+++ b/java/org/apache/catalina/session/ManagerBase.java
@@ -63,7 +63,7 @@ import org.apache.tomcat.util.modeler.Registry;
  * be subclassed to create more sophisticated Manager implementations.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public abstract class ManagerBase extends LifecycleBase

==================================================
StandardManager.java
index 41066a1e57..d9bac7b708 100644
--- a/java/org/apache/catalina/session/PersistentManagerBase.java
+++ b/java/org/apache/catalina/session/PersistentManagerBase.java
@@ -50,7 +50,7 @@ import org.apache.juli.logging.LogFactory;
  *
  * @author Craig R. McClanahan
  * @author Jean-Francois Arcand
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public abstract class PersistentManagerBase extends ManagerBase

==================================================
StandardSession.java
index 9b974b46bb..5daaaae353 100644
--- a/java/org/apache/catalina/session/StandardManager.java
+++ b/java/org/apache/catalina/session/StandardManager.java
@@ -60,7 +60,7 @@ import org.apache.tomcat.util.ExceptionUtils;
  *
  * @author Craig R. McClanahan
  * @author Jean-Francois Arcand
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class StandardManager extends ManagerBase

==================================================
StandardSessionFacade.java
index 52448b45b9..40a955da41 100644
--- a/java/org/apache/catalina/session/StandardSession.java
+++ b/java/org/apache/catalina/session/StandardSession.java
@@ -78,7 +78,7 @@ import org.apache.catalina.security.SecurityUtil;
  * @author Craig R. McClanahan
  * @author Sean Legassick
  * @author <a href="mailto:jon@latchkey.com">Jon S. Stevens</a>
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class StandardSession

==================================================
StoreBase.java
index 1d52a7e957..9d3fe60d90 100644
--- a/java/org/apache/catalina/session/StandardSessionFacade.java
+++ b/java/org/apache/catalina/session/StandardSessionFacade.java
@@ -30,7 +30,7 @@ import javax.servlet.http.HttpSessionContext;
  * Facade for the StandardSession object.
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class StandardSessionFacade

==================================================
ByteArrayServletOutputStream.java
index 7892cc75f4..14ad0816ee 100644
--- a/java/org/apache/catalina/session/StoreBase.java
+++ b/java/org/apache/catalina/session/StoreBase.java
@@ -33,7 +33,7 @@ import org.apache.tomcat.util.res.StringManager;
  * support most of the functionality required by a Store.
  *
  * @author Bip Thelin
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 
 public abstract class StoreBase extends LifecycleBase implements Store {

==================================================
ResponseIncludeWrapper.java
index 83d4feb023..0f9b2281d9 100644
--- a/java/org/apache/catalina/ssi/ByteArrayServletOutputStream.java
+++ b/java/org/apache/catalina/ssi/ByteArrayServletOutputStream.java
@@ -26,7 +26,7 @@ import javax.servlet.ServletOutputStream;
  * <code>SsiInclude</code>
  *
  * @author Bip Thelin
- * @version $Revision$, $Date$
+ * @version $Id$
  * @see ServletOutputStream and ByteArrayOutputStream
  */
 public class ByteArrayServletOutputStream extends ServletOutputStream {

==================================================
SSICommand.java
index ca3154faf3..e234b71017 100644
--- a/java/org/apache/catalina/ssi/ResponseIncludeWrapper.java
+++ b/java/org/apache/catalina/ssi/ResponseIncludeWrapper.java
@@ -39,7 +39,7 @@ import org.apache.tomcat.util.ExceptionUtils;
  * 
  * @author Bip Thelin
  * @author David Becker
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public class ResponseIncludeWrapper extends HttpServletResponseWrapper {
     /**

==================================================
SSIConfig.java
index 969b78f63f..8c9ca65a27 100644
--- a/java/org/apache/catalina/ssi/SSICommand.java
+++ b/java/org/apache/catalina/ssi/SSICommand.java
@@ -25,7 +25,7 @@ import java.io.PrintWriter;
  * @author Bip Thelin
  * @author Dan Sandberg
  * @author David Becker
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public interface SSICommand {
     /**

==================================================
SSIEcho.java
index 77266af2c0..6a52c2b30c 100644
--- a/java/org/apache/catalina/ssi/SSIConfig.java
+++ b/java/org/apache/catalina/ssi/SSIConfig.java
@@ -25,7 +25,7 @@ import java.io.PrintWriter;
  * @author Paul Speed
  * @author Dan Sandberg
  * @author David Becker
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public final class SSIConfig implements SSICommand {
     /**

==================================================
SSIExec.java
index 31dd7b4893..5deb3d909f 100644
--- a/java/org/apache/catalina/ssi/SSIEcho.java
+++ b/java/org/apache/catalina/ssi/SSIEcho.java
@@ -25,7 +25,7 @@ import java.io.PrintWriter;
  * @author Paul Speed
  * @author Dan Sandberg
  * @author David Becker
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public class SSIEcho implements SSICommand {
     protected final static String DEFAULT_ENCODING = "entity";

==================================================
SSIExternalResolver.java
index 159ea9b665..5894786440 100644
--- a/java/org/apache/catalina/ssi/SSIExec.java
+++ b/java/org/apache/catalina/ssi/SSIExec.java
@@ -30,7 +30,7 @@ import org.apache.catalina.util.IOTools;
  * @author Paul Speed
  * @author Dan Sandberg
  * @author David Becker
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public class SSIExec implements SSICommand {
     protected SSIInclude ssiInclude = new SSIInclude();

==================================================
SSIFilter.java
index 10872792ec..a37294283d 100644
--- a/java/org/apache/catalina/ssi/SSIExternalResolver.java
+++ b/java/org/apache/catalina/ssi/SSIExternalResolver.java
@@ -25,7 +25,7 @@ import java.util.Date;
  * servlet )
  * 
  * @author Dan Sandberg
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public interface SSIExternalResolver {
     /**

==================================================
SSIFlastmod.java
index a182796f41..ed500e94aa 100644
--- a/java/org/apache/catalina/ssi/SSIFilter.java
+++ b/java/org/apache/catalina/ssi/SSIFilter.java
@@ -43,7 +43,7 @@ import org.apache.catalina.Globals;
  * from within web.xml.
  * 
  * @author David Becker
- * @version $Revision$, $Date$
+ * @version $Id$
  * @see org.apache.catalina.ssi.SSIServlet
  */
 public class SSIFilter implements Filter {

==================================================
SSIFsize.java
index a664e8081d..7986ba5721 100644
--- a/java/org/apache/catalina/ssi/SSIFlastmod.java
+++ b/java/org/apache/catalina/ssi/SSIFlastmod.java
@@ -29,7 +29,7 @@ import org.apache.catalina.util.Strftime;
  * @author Paul Speed
  * @author Dan Sandberg
  * @author David Becker
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public final class SSIFlastmod implements SSICommand {
     /**

==================================================
SSIInclude.java
index a9b1bd780c..36eb72aa47 100644
--- a/java/org/apache/catalina/ssi/SSIFsize.java
+++ b/java/org/apache/catalina/ssi/SSIFsize.java
@@ -27,7 +27,7 @@ import java.text.DecimalFormat;
  * @author Paul Speed
  * @author Dan Sandberg
  * @author David Becker
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public final class SSIFsize implements SSICommand {
     protected final static int ONE_KILOBYTE = 1024;

==================================================
SSIMediator.java
index d2bd4cb6fa..441aa900ce 100644
--- a/java/org/apache/catalina/ssi/SSIInclude.java
+++ b/java/org/apache/catalina/ssi/SSIInclude.java
@@ -26,7 +26,7 @@ import java.io.PrintWriter;
  * @author Paul Speed
  * @author Dan Sandberg
  * @author David Becker
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public final class SSIInclude implements SSICommand {
     /**

==================================================
SSIPrintenv.java
index e327372178..84be1ad0ce 100644
--- a/java/org/apache/catalina/ssi/SSIMediator.java
+++ b/java/org/apache/catalina/ssi/SSIMediator.java
@@ -37,7 +37,7 @@ import org.apache.tomcat.util.http.HttpMessages;
  * @author Paul Speed
  * @author Dan Sandberg
  * @author David Becker
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public class SSIMediator {
     protected final static String DEFAULT_CONFIG_ERR_MSG = "[an error occurred while processing this directive]";

==================================================
SSIProcessor.java
index 69084af02e..07aaaa1dfd 100644
--- a/java/org/apache/catalina/ssi/SSIPrintenv.java
+++ b/java/org/apache/catalina/ssi/SSIPrintenv.java
@@ -25,7 +25,7 @@ import java.util.Iterator;
  * 
  * @author Dan Sandberg
  * @author David Becker
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public class SSIPrintenv implements SSICommand {
     /**

==================================================
SSIServlet.java
index 761354dc0f..615409258d 100644
--- a/java/org/apache/catalina/ssi/SSIProcessor.java
+++ b/java/org/apache/catalina/ssi/SSIProcessor.java
@@ -31,7 +31,7 @@ import org.apache.catalina.util.IOTools;
  * 
  * @author Dan Sandberg
  * @author David Becker
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public class SSIProcessor {
     /** The start pattern */

==================================================
SSIServletExternalResolver.java
index b0558e11b8..fe98163bae 100644
--- a/java/org/apache/catalina/ssi/SSIServlet.java
+++ b/java/org/apache/catalina/ssi/SSIServlet.java
@@ -39,7 +39,7 @@ import org.apache.catalina.Globals;
  * @author Amy Roh
  * @author Dan Sandberg
  * @author David Becker
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public class SSIServlet extends HttpServlet {
     /** Debug level for this servlet. */

==================================================
SSISet.java
index db542b3b9c..bd690eb489 100644
--- a/java/org/apache/catalina/ssi/SSIServletExternalResolver.java
+++ b/java/org/apache/catalina/ssi/SSIServletExternalResolver.java
@@ -39,7 +39,7 @@ import org.apache.coyote.Constants;
  * 
  * @author Dan Sandberg
  * @author David Becker
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public class SSIServletExternalResolver implements SSIExternalResolver {
     protected final String VARIABLE_NAMES[] = {"AUTH_TYPE", "CONTENT_LENGTH",

==================================================
SSIStopProcessingException.java
index 4fa022479e..b867768d01 100644
--- a/java/org/apache/catalina/ssi/SSISet.java
+++ b/java/org/apache/catalina/ssi/SSISet.java
@@ -24,7 +24,7 @@ import java.io.PrintWriter;
  * @author Paul Speed
  * @author Dan Sandberg
  * @author David Becker
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public class SSISet implements SSICommand {
     /**

==================================================
Bootstrap.java
index 819f33f6ef..51caabcc9d 100644
--- a/java/org/apache/catalina/ssi/SSIStopProcessingException.java
+++ b/java/org/apache/catalina/ssi/SSIStopProcessingException.java
@@ -24,7 +24,7 @@ package org.apache.catalina.ssi;
  * 
  * @author Paul Speed
  * @author Dan Sandberg
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public class SSIStopProcessingException extends Exception {
     // No specific functionality for this class

==================================================
Catalina.java
index 76c5de0587..0b59517eee 100644
--- a/java/org/apache/catalina/startup/Bootstrap.java
+++ b/java/org/apache/catalina/startup/Bootstrap.java
@@ -47,7 +47,7 @@ import org.apache.juli.logging.LogFactory;
  *
  * @author Craig R. McClanahan
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class Bootstrap {

==================================================
CatalinaProperties.java
index a0e3d31635..c83c194e81 100644
--- a/java/org/apache/catalina/startup/Catalina.java
+++ b/java/org/apache/catalina/startup/Catalina.java
@@ -59,7 +59,7 @@ import org.xml.sax.InputSource;
  *
  * @author Craig R. McClanahan
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class Catalina extends Embedded {

==================================================
ClassLoaderFactory.java
index e6f6c07392..ca74bcc04f 100644
--- a/java/org/apache/catalina/startup/CatalinaProperties.java
+++ b/java/org/apache/catalina/startup/CatalinaProperties.java
@@ -32,7 +32,7 @@ import org.apache.tomcat.util.ExceptionUtils;
  * Utility class to read the bootstrap Catalina configuration.
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class CatalinaProperties {

==================================================
ClusterRuleSetFactory.java
index 4eba147dbf..f58089f754 100644
--- a/java/org/apache/catalina/startup/ClassLoaderFactory.java
+++ b/java/org/apache/catalina/startup/ClassLoaderFactory.java
@@ -45,7 +45,7 @@ import org.apache.juli.logging.LogFactory;
  * </ul>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class ClassLoaderFactory {

==================================================
Constants.java
index a5c283684f..6e0a4c83c8 100644
--- a/java/org/apache/catalina/startup/ClusterRuleSetFactory.java
+++ b/java/org/apache/catalina/startup/ClusterRuleSetFactory.java
@@ -85,7 +85,7 @@ public class ClusterRuleSetFactory {
      *
      * @author Filip Hanik
      * @author Peter Rossbach
-     * @version $Revision$ $Date$
+     * @version $Id$
      */
 
     public static class DefaultClusterRuleSet extends RuleSetBase {

==================================================
ContextConfig.java
index 134b3c0d17..c9c804173f 100644
--- a/java/org/apache/catalina/startup/Constants.java
+++ b/java/org/apache/catalina/startup/Constants.java
@@ -24,7 +24,7 @@ package org.apache.catalina.startup;
  *
  * @author Craig R. McClanahan
  * @author Jean-Francois Arcand
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class Constants {

==================================================
ContextRuleSet.java
index b2b4cf76e5..27b9307a4e 100644
--- a/java/org/apache/catalina/startup/ContextConfig.java
+++ b/java/org/apache/catalina/startup/ContextConfig.java
@@ -99,7 +99,7 @@ import org.xml.sax.SAXParseException;
  *
  * @author Craig R. McClanahan
  * @author Jean-Francois Arcand
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ContextConfig

==================================================
CopyParentClassLoaderRule.java
index a44ce9325c..3abe867382 100644
--- a/java/org/apache/catalina/startup/ContextRuleSet.java
+++ b/java/org/apache/catalina/startup/ContextRuleSet.java
@@ -28,7 +28,7 @@ import org.apache.tomcat.util.digester.RuleSetBase;
  * Context definition element.</p>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ContextRuleSet extends RuleSetBase {

==================================================
Embedded.java
index 18d396050e..dcb70392ab 100644
--- a/java/org/apache/catalina/startup/CopyParentClassLoaderRule.java
+++ b/java/org/apache/catalina/startup/CopyParentClassLoaderRule.java
@@ -32,7 +32,7 @@ import org.xml.sax.Attributes;
  * <code>Container</code>).</p>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class CopyParentClassLoaderRule extends Rule {

==================================================
EngineConfig.java
index 71f908a0a1..2f7b5fa43d 100644
--- a/java/org/apache/catalina/startup/Embedded.java
+++ b/java/org/apache/catalina/startup/Embedded.java
@@ -100,7 +100,7 @@ import org.apache.tomcat.util.log.SystemLogHandler;
  * of how Tomcat is set up and launched as an Embedded application.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class Embedded  extends StandardService {

==================================================
EngineRuleSet.java
index ff148d8d28..e7646970a4 100644
--- a/java/org/apache/catalina/startup/EngineConfig.java
+++ b/java/org/apache/catalina/startup/EngineConfig.java
@@ -33,7 +33,7 @@ import org.apache.tomcat.util.res.StringManager;
  * of that Engine, and the associated defined contexts.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class EngineConfig

==================================================
HomesUserDatabase.java
index 66dff68ad7..c73a6d6836 100644
--- a/java/org/apache/catalina/startup/EngineRuleSet.java
+++ b/java/org/apache/catalina/startup/EngineRuleSet.java
@@ -30,7 +30,7 @@ import org.apache.tomcat.util.digester.RuleSetBase;
  * <code>HostRuleSet</code>.</p>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class EngineRuleSet extends RuleSetBase {

==================================================
HostConfig.java
index 7157cd446d..ce4073999a 100644
--- a/java/org/apache/catalina/startup/HomesUserDatabase.java
+++ b/java/org/apache/catalina/startup/HomesUserDatabase.java
@@ -30,7 +30,7 @@ import java.util.Enumeration;
  * to our constructor to be "home" directories for those users.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class HomesUserDatabase

==================================================
HostRuleSet.java
index 9e8cc608e4..daafaecc56 100644
--- a/java/org/apache/catalina/startup/HostConfig.java
+++ b/java/org/apache/catalina/startup/HostConfig.java
@@ -61,7 +61,7 @@ import org.apache.tomcat.util.modeler.Registry;
  *
  * @author Craig R. McClanahan
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 public class HostConfig
     implements LifecycleListener {

==================================================
NamingRuleSet.java
index 450aa52c89..714193ee5a 100644
--- a/java/org/apache/catalina/startup/HostRuleSet.java
+++ b/java/org/apache/catalina/startup/HostRuleSet.java
@@ -30,7 +30,7 @@ import org.apache.tomcat.util.digester.RuleSetBase;
  * <code>ContextRuleSet</code>.</p>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class HostRuleSet extends RuleSetBase {

==================================================
PasswdUserDatabase.java
index 12f7ca6266..c1433c3e9f 100644
--- a/java/org/apache/catalina/startup/NamingRuleSet.java
+++ b/java/org/apache/catalina/startup/NamingRuleSet.java
@@ -29,7 +29,7 @@ import org.apache.tomcat.util.digester.RuleSetBase;
  *
  * @author Craig R. McClanahan
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class NamingRuleSet extends RuleSetBase {

==================================================
RealmRuleSet.java
index 37ed303e20..4b8ea101da 100644
--- a/java/org/apache/catalina/startup/PasswdUserDatabase.java
+++ b/java/org/apache/catalina/startup/PasswdUserDatabase.java
@@ -31,7 +31,7 @@ import java.util.Enumeration;
  * that processes the <code>/etc/passwd</code> file on a Unix system.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class PasswdUserDatabase

==================================================
TldRuleSet.java
index e110053211..bb569d2167 100644
--- a/java/org/apache/catalina/startup/RealmRuleSet.java
+++ b/java/org/apache/catalina/startup/RealmRuleSet.java
@@ -28,7 +28,7 @@ import org.apache.tomcat.util.digester.RuleSetBase;
  * element.  This <code>RuleSet</code> supports Realms such as the
  * <code>CombinedRealm</code> that used nested Realms.</p>
  *
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class RealmRuleSet extends RuleSetBase {

==================================================
Tool.java
index c71a1d7604..8aef41416e 100644
--- a/java/org/apache/catalina/startup/TldRuleSet.java
+++ b/java/org/apache/catalina/startup/TldRuleSet.java
@@ -29,7 +29,7 @@ import org.apache.tomcat.util.digester.RuleSetBase;
  * descriptor resource.</p>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class TldRuleSet extends RuleSetBase {

==================================================
UserConfig.java
index c72fa1d210..dbbe0669f2 100644
--- a/java/org/apache/catalina/startup/Tool.java
+++ b/java/org/apache/catalina/startup/Tool.java
@@ -67,7 +67,7 @@ import org.apache.juli.logging.LogFactory;
  * </ul>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class Tool {

==================================================
UserDatabase.java
index bde24c81d3..34862b72a7 100644
--- a/java/org/apache/catalina/startup/UserConfig.java
+++ b/java/org/apache/catalina/startup/UserConfig.java
@@ -38,7 +38,7 @@ import org.apache.tomcat.util.res.StringManager;
  * xxxxx is the username of the owning user for that web application
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class UserConfig

==================================================
WebAnnotationSet.java
index 72ca092080..e680da1f18 100644
--- a/java/org/apache/catalina/startup/UserDatabase.java
+++ b/java/org/apache/catalina/startup/UserDatabase.java
@@ -27,7 +27,7 @@ import java.util.Enumeration;
  * current server platform.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public interface UserDatabase {

==================================================
WebRuleSet.java
index 1b427ca969..6c917d00ad 100644
--- a/java/org/apache/catalina/startup/WebAnnotationSet.java
+++ b/java/org/apache/catalina/startup/WebAnnotationSet.java
@@ -39,7 +39,7 @@ import org.apache.catalina.deploy.MessageDestinationRef;
  * classes (<code>/WEB-INF/classes</code> and <code>/WEB-INF/lib</code>).</p>
  *
  * @author Fabien Carrion
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class WebAnnotationSet {

==================================================
ByteMessage.java
index e8f590ac94..3f786c80f4 100644
--- a/java/org/apache/catalina/startup/WebRuleSet.java
+++ b/java/org/apache/catalina/startup/WebRuleSet.java
@@ -43,7 +43,7 @@ import org.xml.sax.Attributes;
  * deployment descriptor (<code>/WEB-INF/web.xml</code>) resource.</p>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class WebRuleSet extends RuleSetBase {

==================================================
Channel.java
index 14181798f3..58551874f9 100644
--- a/java/org/apache/catalina/tribes/ByteMessage.java
+++ b/java/org/apache/catalina/tribes/ByteMessage.java
@@ -37,7 +37,7 @@ import java.io.ObjectOutput;
  * so that you can decide with the <code>ChannelListener.accept()</code> whether this message was intended
  * for you.
  * @author Filip Hanik
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 
 public class ByteMessage implements Serializable, Externalizable {

==================================================
ChannelException.java
index a13dda98ec..1dbbccc427 100644
--- a/java/org/apache/catalina/tribes/Channel.java
+++ b/java/org/apache/catalina/tribes/Channel.java
@@ -66,7 +66,7 @@ import java.io.Serializable;
  *
  * For example usage @see org.apache.catalina.tribes.group.GroupChannel
  * @author Filip Hanik
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public interface Channel {
 

==================================================
ChannelInterceptor.java
index fc77471118..a67dfc8d12 100644
--- a/java/org/apache/catalina/tribes/ChannelException.java
+++ b/java/org/apache/catalina/tribes/ChannelException.java
@@ -27,7 +27,7 @@ import java.util.ArrayList;
  * the application can retrieve what recipients failed by using the <code>getFaultyMembers()</code>
  * method. This way, an application will always know if a message was delivered successfully or not.
  * @author Filip Hanik
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 
 public class ChannelException extends Exception {

==================================================
ChannelReceiver.java
index b5c8514907..2f75734c85 100644
--- a/java/org/apache/catalina/tribes/ChannelInterceptor.java
+++ b/java/org/apache/catalina/tribes/ChannelInterceptor.java
@@ -26,7 +26,7 @@ import org.apache.catalina.tribes.group.InterceptorPayload;
  * Interceptors are tied together in a linked list.
  * @see org.apache.catalina.tribes.group.ChannelInterceptorBase
  * @author Filip Hanik
- * @version $Revision$, $Date$
+ * @version $Id$
  */   
 
 public interface ChannelInterceptor extends MembershipListener, Heartbeat {

==================================================
ChannelSender.java
index 32c53e4973..d889ccfecd 100644
--- a/java/org/apache/catalina/tribes/ChannelReceiver.java
+++ b/java/org/apache/catalina/tribes/ChannelReceiver.java
@@ -24,7 +24,7 @@ package org.apache.catalina.tribes;
  * at the bottom layer, the IO layer (for layers see the javadoc for the {@link Channel} interface).
  * This class may optionally implement a thread pool for parallel processing of incoming messages.
  * @author Filip Hanik
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public interface ChannelReceiver extends Heartbeat {
     public static final int MAX_UDP_SIZE = 65535;

==================================================
Constants.java
index 815bc0852d..412a10044f 100644
--- a/java/org/apache/catalina/tribes/ChannelSender.java
+++ b/java/org/apache/catalina/tribes/ChannelSender.java
@@ -25,7 +25,7 @@ package org.apache.catalina.tribes;
  * The channel sender must support "silent" members, ie, be able to send a message to a member
  * that is not in the membership, but is part of the destination parameter
  * @author Filip Hanik
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public interface ChannelSender extends Heartbeat
 {

==================================================
ManagedChannel.java
index 57ccb8ea9f..bb0d5b2a92 100644
--- a/java/org/apache/catalina/tribes/Constants.java
+++ b/java/org/apache/catalina/tribes/Constants.java
@@ -24,7 +24,7 @@ package org.apache.catalina.tribes;
  *
  * @author Bip Thelin
  * @author Filip Hanik
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 
 public final class Constants {

==================================================
Member.java
index dc5df39568..1600538a0f 100644
--- a/java/org/apache/catalina/tribes/ManagedChannel.java
+++ b/java/org/apache/catalina/tribes/ManagedChannel.java
@@ -23,7 +23,7 @@ import java.util.Iterator;
  * A managed channel interface gives you access to the components of the channels
  * such as senders, receivers, interceptors etc for configurations purposes
  * @author Filip Hanik
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public interface ManagedChannel extends Channel {
 

==================================================
MembershipListener.java
index 0707d81d42..24fd22f75f 100644
--- a/java/org/apache/catalina/tribes/Member.java
+++ b/java/org/apache/catalina/tribes/Member.java
@@ -27,7 +27,7 @@ package org.apache.catalina.tribes;
  * since a member that has crashed and the starts up again on the same port/host is
  * not guaranteed to be the same member, so no state transfers will ever be confused
  * @author Filip Hanik
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 
 

==================================================
MembershipService.java
index be320190e0..95e36416df 100644
--- a/java/org/apache/catalina/tribes/MembershipListener.java
+++ b/java/org/apache/catalina/tribes/MembershipListener.java
@@ -23,7 +23,7 @@ package org.apache.catalina.tribes;
  * when a member has joined the group and when a member has disappeared (crashed)
  *
  * @author Filip Hanik
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 
 

==================================================
ChannelCoordinator.java
index ec81fe500e..cb6f49d00a 100644
--- a/java/org/apache/catalina/tribes/MembershipService.java
+++ b/java/org/apache/catalina/tribes/MembershipService.java
@@ -23,7 +23,7 @@ package org.apache.catalina.tribes;
  * The <code>MembershipService</code> interface is the membership component 
  * at the bottom layer, the IO layer (for layers see the javadoc for the {@link Channel} interface).<br>
  * @author Filip Hanik
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 
 

==================================================
ChannelInterceptorBase.java
index 6e7e6748cf..a352c457f5 100644
--- a/java/org/apache/catalina/tribes/group/ChannelCoordinator.java
+++ b/java/org/apache/catalina/tribes/group/ChannelCoordinator.java
@@ -39,7 +39,7 @@ import org.apache.catalina.tribes.util.Arrays;
  * the sender and the receiver.
  * This is the last interceptor in the chain.
  * @author Filip Hanik
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public class ChannelCoordinator extends ChannelInterceptorBase implements MessageListener {
     private ChannelReceiver clusterReceiver = new NioReceiver();

==================================================
GroupChannel.java
index a92a089e44..0c96fcfa7e 100644
--- a/java/org/apache/catalina/tribes/group/ChannelInterceptorBase.java
+++ b/java/org/apache/catalina/tribes/group/ChannelInterceptorBase.java
@@ -26,7 +26,7 @@ import org.apache.juli.logging.LogFactory;
 /**
  * Abstract class for the interceptor base class.
  * @author Filip Hanik
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 
 public abstract class ChannelInterceptorBase implements ChannelInterceptor {

==================================================
ChannelData.java
index 0d9c3c2f62..4f572d14eb 100644
--- a/java/org/apache/catalina/tribes/group/GroupChannel.java
+++ b/java/org/apache/catalina/tribes/group/GroupChannel.java
@@ -53,7 +53,7 @@ import org.apache.juli.logging.LogFactory;
  * The channel has an chain of interceptors that can modify the message or perform other logic.<br>
  * It manages a complete group, both membership and replication.
  * @author Filip Hanik
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public class GroupChannel extends ChannelInterceptorBase implements ManagedChannel {
     private static final Log log = LogFactory.getLog(GroupChannel.class);

==================================================
ListenCallback.java
index 7572986b8e..f5dcbead3f 100644
--- a/java/org/apache/catalina/tribes/io/ChannelData.java
+++ b/java/org/apache/catalina/tribes/io/ChannelData.java
@@ -32,7 +32,7 @@ import java.sql.Timestamp;
  * interceptors, the message data can be manipulated as each interceptor seems appropriate.
  * @author Peter Rossbach
  * @author Filip Hanik
- * @version $Revision$ $Date$
+ * @version $Id$
  * 
  */
 public class ChannelData implements ChannelMessage {

==================================================
ObjectReader.java
index 183d578c82..c97989b5dd 100644
--- a/java/org/apache/catalina/tribes/io/ListenCallback.java
+++ b/java/org/apache/catalina/tribes/io/ListenCallback.java
@@ -28,7 +28,7 @@ import org.apache.catalina.tribes.ChannelMessage;
  * when data has been received. The interface does not care about
  * objects and marshalling and just passes the bytes straight through.
  * @author Filip Hanik
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public interface ListenCallback
 {

==================================================
ReplicationStream.java
index 001bff39a7..5af6af901f 100644
--- a/java/org/apache/catalina/tribes/io/ObjectReader.java
+++ b/java/org/apache/catalina/tribes/io/ObjectReader.java
@@ -35,7 +35,7 @@ import org.apache.juli.logging.LogFactory;
  * for message encoding and decoding.
  *
  * @author Filip Hanik
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public class ObjectReader {
 

==================================================
XByteBuffer.java
index 14a57cde92..456b814666 100644
--- a/java/org/apache/catalina/tribes/io/ReplicationStream.java
+++ b/java/org/apache/catalina/tribes/io/ReplicationStream.java
@@ -33,7 +33,7 @@ import java.lang.reflect.Proxy;
  * @author Craig R. McClanahan
  * @author Bip Thelin
  * @author Filip Hanik
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 
 public final class ReplicationStream extends ObjectInputStream {

==================================================
Constants.java
index 26e2846d07..171001bd95 100644
--- a/java/org/apache/catalina/tribes/io/XByteBuffer.java
+++ b/java/org/apache/catalina/tribes/io/XByteBuffer.java
@@ -43,7 +43,7 @@ import java.util.concurrent.atomic.AtomicInteger;
  * <li><b>END_DATA</b>  - 7 bytes - <i>TLF2003</i></lI>
  * </ul>
  * @author Filip Hanik
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public class XByteBuffer
 {

==================================================
McastService.java
index 0879fcb270..33b772c2e8 100644
--- a/java/org/apache/catalina/tribes/membership/Constants.java
+++ b/java/org/apache/catalina/tribes/membership/Constants.java
@@ -26,7 +26,7 @@ import org.apache.catalina.tribes.util.Arrays;
  * package.
  *
  * @author Peter Rossbach
- * @version $Revision$ $Date$
+ * @version $Id$
  * @author Filip Hanik
  */
 

==================================================
McastServiceImpl.java
index 0bbbb4cfe5..2d8c5c4f32 100644
--- a/java/org/apache/catalina/tribes/membership/McastService.java
+++ b/java/org/apache/catalina/tribes/membership/McastService.java
@@ -41,7 +41,7 @@ import org.apache.catalina.tribes.util.UUIDGenerator;
  * If a node fails to send out a heartbeat, the node will be dismissed.
  *
  * @author Filip Hanik
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 
 

==================================================
MemberImpl.java
index c739e277de..e29d8e0185 100644
--- a/java/org/apache/catalina/tribes/membership/McastServiceImpl.java
+++ b/java/org/apache/catalina/tribes/membership/McastServiceImpl.java
@@ -46,7 +46,7 @@ import org.apache.catalina.tribes.util.ExecutorFactory;
  * Need to fix this, could use java.nio and only need one thread to send and receive, or
  * just use a timeout on the receive
  * @author Filip Hanik
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public class McastServiceImpl
 {

==================================================
Membership.java
index 80ced1a2d3..22128329ab 100644
--- a/java/org/apache/catalina/tribes/membership/MemberImpl.java
+++ b/java/org/apache/catalina/tribes/membership/MemberImpl.java
@@ -32,7 +32,7 @@ import org.apache.catalina.tribes.transport.SenderState;
  * Carries the host, and port of the this or other cluster nodes.
  *
  * @author Filip Hanik
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public class MemberImpl implements Member, java.io.Externalizable {
 

==================================================
AbstractRxTask.java
index d96434e310..f4039e23e9 100644
--- a/java/org/apache/catalina/tribes/membership/Membership.java
+++ b/java/org/apache/catalina/tribes/membership/Membership.java
@@ -35,7 +35,7 @@ import java.util.Comparator;
  *
  * @author Filip Hanik
  * @author Peter Rossbach
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public class Membership
 {

==================================================
Constants.java
index 4590ece825..b63352b44d 100644
--- a/java/org/apache/catalina/tribes/transport/AbstractRxTask.java
+++ b/java/org/apache/catalina/tribes/transport/AbstractRxTask.java
@@ -24,7 +24,7 @@ import org.apache.catalina.tribes.io.ListenCallback;
 
 /**
  * @author Filip Hanik
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 public abstract class AbstractRxTask implements Runnable
 { 

==================================================
MultiPointSender.java
index 6192403eaa..c798940eca 100644
--- a/java/org/apache/catalina/tribes/transport/Constants.java
+++ b/java/org/apache/catalina/tribes/transport/Constants.java
@@ -25,7 +25,7 @@ import org.apache.catalina.tribes.io.XByteBuffer;
  * package.
  * @author Filip Hanik
  * @author Peter Rossbach
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class Constants {

==================================================
ReplicationTransmitter.java
index e1b1c4a17e..77288c2030 100644
--- a/java/org/apache/catalina/tribes/transport/MultiPointSender.java
+++ b/java/org/apache/catalina/tribes/transport/MultiPointSender.java
@@ -22,7 +22,7 @@ import org.apache.catalina.tribes.Member;
 
 /**
  * @author Filip Hanik
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 5.5.16
  */
 

==================================================
BioReceiver.java
index 471d8dc23f..49f4d80a9e 100644
--- a/java/org/apache/catalina/tribes/transport/ReplicationTransmitter.java
+++ b/java/org/apache/catalina/tribes/transport/ReplicationTransmitter.java
@@ -30,7 +30,7 @@ import org.apache.catalina.tribes.transport.nio.PooledParallelSender;
  * type 
  * 
  * @author Filip Hanik
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 public class ReplicationTransmitter implements ChannelSender {
 

==================================================
BioReplicationTask.java
index 25a626efc4..7d6601ab2c 100644
--- a/java/org/apache/catalina/tribes/transport/bio/BioReceiver.java
+++ b/java/org/apache/catalina/tribes/transport/bio/BioReceiver.java
@@ -31,7 +31,7 @@ import org.apache.juli.logging.LogFactory;
 /**
  *
  * @author Filip Hanik
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 public class BioReceiver extends ReceiverBase implements Runnable {
 

==================================================
BioSender.java
index 997de7122f..d001a8777e 100644
--- a/java/org/apache/catalina/tribes/transport/bio/BioReplicationTask.java
+++ b/java/org/apache/catalina/tribes/transport/bio/BioReplicationTask.java
@@ -42,7 +42,7 @@ import org.apache.juli.logging.LogFactory;
  * 
  * @author Filip Hanik
  * 
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public class BioReplicationTask extends AbstractRxTask {
 

==================================================
MultipointBioSender.java
index dbf7769132..08b983e9a6 100644
--- a/java/org/apache/catalina/tribes/transport/bio/BioSender.java
+++ b/java/org/apache/catalina/tribes/transport/bio/BioSender.java
@@ -38,7 +38,7 @@ import org.apache.catalina.tribes.util.StringManager;
  * 
  * @author Peter Rossbach
  * @author Filip Hanik
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 5.5.16
  */
 public class BioSender extends AbstractSender {

==================================================
FastQueue.java
index 735b3309d6..4fa8d13b5b 100644
--- a/java/org/apache/catalina/tribes/transport/bio/MultipointBioSender.java
+++ b/java/org/apache/catalina/tribes/transport/bio/MultipointBioSender.java
@@ -33,7 +33,7 @@ import org.apache.catalina.tribes.Channel;
 /**
  *
  * @author Filip Hanik
- * @version $Revision$ $Date$
+ * @version $Id$
  *
  */
 public class MultipointBioSender extends AbstractSender implements MultiPointSender {

==================================================
LinkObject.java
index 77c74e0c2d..dc042432e0 100644
--- a/java/org/apache/catalina/tribes/transport/bio/util/FastQueue.java
+++ b/java/org/apache/catalina/tribes/transport/bio/util/FastQueue.java
@@ -30,7 +30,7 @@ import org.apache.catalina.tribes.group.InterceptorPayload;
  * FIXME add i18n support to log messages
  * @author Rainer Jung
  * @author Peter Rossbach
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 public class FastQueue {
 

==================================================
NioReceiver.java
index 8bea3d186b..1cf45279ac 100644
--- a/java/org/apache/catalina/tribes/transport/bio/util/LinkObject.java
+++ b/java/org/apache/catalina/tribes/transport/bio/util/LinkObject.java
@@ -30,7 +30,7 @@ import org.apache.catalina.tribes.group.InterceptorPayload;
  * @author Rainer Jung
  * @author Peter Rossbach
  * @author Filip Hanik
- * @version $Revision$ $Date$
+ * @version $Id$
 
  */
 

==================================================
NioReplicationTask.java
index 3c805a8600..b216ad6f5b 100644
--- a/java/org/apache/catalina/tribes/transport/nio/NioReceiver.java
+++ b/java/org/apache/catalina/tribes/transport/nio/NioReceiver.java
@@ -43,7 +43,7 @@ import java.nio.channels.ClosedSelectorException;
 
 /**
  * @author Filip Hanik
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 public class NioReceiver extends ReceiverBase implements Runnable {
 

==================================================
StringManager.java
index e16d12af43..3d564263de 100644
--- a/java/org/apache/catalina/tribes/transport/nio/NioReplicationTask.java
+++ b/java/org/apache/catalina/tribes/transport/nio/NioReplicationTask.java
@@ -51,7 +51,7 @@ import org.apache.catalina.tribes.util.Logs;
  *
  * @author Filip Hanik
  *
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public class NioReplicationTask extends AbstractRxTask {
 

==================================================
AbstractGroup.java
index bc671b01b9..15cb1af5c5 100644
--- a/java/org/apache/catalina/tribes/util/StringManager.java
+++ b/java/org/apache/catalina/tribes/util/StringManager.java
@@ -42,7 +42,7 @@ import java.util.ResourceBundle;
  * <p>Please see the documentation for java.util.ResourceBundle for
  * more information.
  *
- * @version $Revision$ $Date$
+ * @version $Id$
  *
  * @author James Duncan Davidson [duncan@eng.sun.com]
  * @author James Todd [gonzo@eng.sun.com]

==================================================
AbstractRole.java
index a45a55b5c0..86f2b763ae 100644
--- a/java/org/apache/catalina/users/AbstractGroup.java
+++ b/java/org/apache/catalina/users/AbstractGroup.java
@@ -31,7 +31,7 @@ import org.apache.catalina.UserDatabase;
  * <p>Convenience base class for {@link Group} implementations.</p>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 4.1
  */
 

==================================================
AbstractUser.java
index 83aa863cca..528a2746c1 100644
--- a/java/org/apache/catalina/users/AbstractRole.java
+++ b/java/org/apache/catalina/users/AbstractRole.java
@@ -27,7 +27,7 @@ import org.apache.catalina.UserDatabase;
  * <p>Convenience base class for {@link Role} implementations.</p>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 4.1
  */
 

==================================================
Constants.java
index de19f3622d..58c0ecd8b2 100644
--- a/java/org/apache/catalina/users/AbstractUser.java
+++ b/java/org/apache/catalina/users/AbstractUser.java
@@ -29,7 +29,7 @@ import org.apache.catalina.User;
  * <p>Convenience base class for {@link User} implementations.</p>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 4.1
  */
 

==================================================
MemoryGroup.java
index a0b34875ae..d85fd2cdfa 100644
--- a/java/org/apache/catalina/users/Constants.java
+++ b/java/org/apache/catalina/users/Constants.java
@@ -24,7 +24,7 @@ package org.apache.catalina.users;
  *
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 4.1
  */
 

==================================================
MemoryRole.java
index 348a1810b2..7454c91421 100644
--- a/java/org/apache/catalina/users/MemoryGroup.java
+++ b/java/org/apache/catalina/users/MemoryGroup.java
@@ -32,7 +32,7 @@ import org.apache.catalina.UserDatabase;
  * {@link MemoryUserDatabase} implementation of {@link UserDatabase}.</p>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 4.1
  */
 

==================================================
MemoryUser.java
index 0e73b45933..ca13bd9a58 100644
--- a/java/org/apache/catalina/users/MemoryRole.java
+++ b/java/org/apache/catalina/users/MemoryRole.java
@@ -27,7 +27,7 @@ import org.apache.catalina.UserDatabase;
  * {@link MemoryUserDatabase} implementation of {@link UserDatabase}.</p>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 4.1
  */
 

==================================================
MemoryUserDatabase.java
index 4a62985dfe..60401b3389 100644
--- a/java/org/apache/catalina/users/MemoryUser.java
+++ b/java/org/apache/catalina/users/MemoryUser.java
@@ -32,7 +32,7 @@ import org.apache.catalina.util.RequestUtil;
  * {@link MemoryUserDatabase} implementation of {@link UserDatabase}.</p>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 4.1
  */
 

==================================================
MemoryUserDatabaseFactory.java
index 201d204cb7..30a9616631 100644
--- a/java/org/apache/catalina/users/MemoryUserDatabase.java
+++ b/java/org/apache/catalina/users/MemoryUserDatabase.java
@@ -46,7 +46,7 @@ import org.xml.sax.Attributes;
  * and uses a specified XML file for its persistent storage.</p>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 4.1
  */
 

==================================================
CharsetMapper.java
index 25be116c9d..72e0a04f56 100644
--- a/java/org/apache/catalina/users/MemoryUserDatabaseFactory.java
+++ b/java/org/apache/catalina/users/MemoryUserDatabaseFactory.java
@@ -45,7 +45,7 @@ import javax.naming.spi.ObjectFactory;
  * </ul>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  * @since 4.1
  */
 

==================================================
CustomObjectInputStream.java
index 80378b12f1..fce0f968bd 100644
--- a/java/org/apache/catalina/util/CharsetMapper.java
+++ b/java/org/apache/catalina/util/CharsetMapper.java
@@ -33,7 +33,7 @@ import java.util.Properties;
  * your own version for a particular web application.
  *
  * @author Craig R. McClanahan
- * @version $Date$ $Version$
+ * @version $Id$
  */
 
 public class CharsetMapper {

==================================================
Enumerator.java
index 543b65d0f1..41130297aa 100644
--- a/java/org/apache/catalina/util/CustomObjectInputStream.java
+++ b/java/org/apache/catalina/util/CustomObjectInputStream.java
@@ -30,7 +30,7 @@ import java.lang.reflect.Proxy;
  *
  * @author Craig R. McClanahan
  * @author Bip Thelin
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 
 public final class CustomObjectInputStream

==================================================
Extension.java
index 0524f1f809..acc555bbfa 100644
--- a/java/org/apache/catalina/util/Enumerator.java
+++ b/java/org/apache/catalina/util/Enumerator.java
@@ -35,7 +35,7 @@ import java.util.NoSuchElementException;
  * Constructors are provided to easily create such wrappers.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class Enumerator<T> implements Enumeration<T> {

==================================================
ExtensionValidator.java
index 94d2322936..a3329fdea3 100644
--- a/java/org/apache/catalina/util/Extension.java
+++ b/java/org/apache/catalina/util/Extension.java
@@ -41,7 +41,7 @@ import java.util.StringTokenizer;
  * @author Craig McClanahan
  * @author Justyna Horwat
  * @author Greg Murray
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class Extension {

==================================================
MD5Encoder.java
index b26116ff4a..d3442fa1a2 100644
--- a/java/org/apache/catalina/util/ExtensionValidator.java
+++ b/java/org/apache/catalina/util/ExtensionValidator.java
@@ -49,7 +49,7 @@ import org.apache.tomcat.util.res.StringManager;
  *
  * @author Greg Murray
  * @author Justyna Horwat
- * @version $Revision$ $Date$
+ * @version $Id$
  *
  */
 public final class ExtensionValidator {

==================================================
MIME2Java.java
index ee2415b192..331ca36eb4 100644
--- a/java/org/apache/catalina/util/MD5Encoder.java
+++ b/java/org/apache/catalina/util/MD5Encoder.java
@@ -27,7 +27,7 @@ package org.apache.catalina.util;
  * of the digest.
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class MD5Encoder {

==================================================
ManifestResource.java
index 2d0c81cf6e..b029431d00 100644
--- a/java/org/apache/catalina/util/MIME2Java.java
+++ b/java/org/apache/catalina/util/MIME2Java.java
@@ -466,7 +466,7 @@ import java.util.*;
  *  </TR>
  * </TABLE>
  *
- * @version $Revision$ $Date$
+ * @version $Id$
  * @author TAMURA Kent &lt;kent@trl.ibm.co.jp&gt;
  */
 public class MIME2Java {

==================================================
ParameterMap.java
index 5b672627a0..bf09d485fb 100644
--- a/java/org/apache/catalina/util/ManifestResource.java
+++ b/java/org/apache/catalina/util/ManifestResource.java
@@ -27,7 +27,7 @@ import java.util.ArrayList;
  *  
  * @author Greg Murray
  * @author Justyna Horwat
- * @version $Revision$ $Date$
+ * @version $Id$
  * 
  */
 public class ManifestResource {

==================================================
RequestUtil.java
index 5d1c8918bc..e1b9b77d5f 100644
--- a/java/org/apache/catalina/util/ParameterMap.java
+++ b/java/org/apache/catalina/util/ParameterMap.java
@@ -33,7 +33,7 @@ import org.apache.tomcat.util.res.StringManager;
  * <code>ParmaeterMap</code> instance is not locked.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class ParameterMap<K,V> extends HashMap<K,V> {

==================================================
ResourceSet.java
index b1357e80ff..1aab53974c 100644
--- a/java/org/apache/catalina/util/RequestUtil.java
+++ b/java/org/apache/catalina/util/RequestUtil.java
@@ -33,7 +33,7 @@ import org.apache.tomcat.util.res.StringManager;
  *
  * @author Craig R. McClanahan
  * @author Tim Tye
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class RequestUtil {

==================================================
ServerInfo.java
index 6a71b13cdf..465528dfe0 100644
--- a/java/org/apache/catalina/util/ResourceSet.java
+++ b/java/org/apache/catalina/util/ResourceSet.java
@@ -33,7 +33,7 @@ import org.apache.tomcat.util.res.StringManager;
  * is not locked.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class ResourceSet<T> extends HashSet<T> {

==================================================
Strftime.java
index 1bf254a7bf..0aa1c3841f 100644
--- a/java/org/apache/catalina/util/ServerInfo.java
+++ b/java/org/apache/catalina/util/ServerInfo.java
@@ -28,7 +28,7 @@ import java.util.Properties;
  * when integrating Tomcat.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ServerInfo {

==================================================
StringParser.java
index 862a5d6d60..a6ecdedd9b 100644
--- a/java/org/apache/catalina/util/Strftime.java
+++ b/java/org/apache/catalina/util/Strftime.java
@@ -40,7 +40,7 @@ import java.util.TimeZone;
  *
  * @author Bip Thelin
  * @author Dan Sandberg
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 public class Strftime {
     protected static Properties translate;

==================================================
AccessLogValve.java
index 2b804b8d0d..fa63bc8cbf 100644
--- a/java/org/apache/catalina/util/StringParser.java
+++ b/java/org/apache/catalina/util/StringParser.java
@@ -28,7 +28,7 @@ package org.apache.catalina.util;
  * method with the appropriate saved offset values.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class StringParser {

==================================================
CometConnectionManagerValve.java
index 1fb23bcbae..33ee40858b 100644
--- a/java/org/apache/catalina/valves/AccessLogValve.java
+++ b/java/org/apache/catalina/valves/AccessLogValve.java
@@ -115,7 +115,7 @@ import org.apache.juli.logging.LogFactory;
  * @author Takayuki Kaneko
  * @author Peter Rossbach
  * 
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class AccessLogValve extends ValveBase {

==================================================
ErrorReportValve.java
index 58025f8194..f839f0c6b3 100644
--- a/java/org/apache/catalina/valves/CometConnectionManagerValve.java
+++ b/java/org/apache/catalina/valves/CometConnectionManagerValve.java
@@ -52,7 +52,7 @@ import org.apache.tomcat.util.res.StringManager;
  * <p>This Valve should be attached to a Context.</p>
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class CometConnectionManagerValve extends ValveBase

==================================================
ExtendedAccessLogValve.java
index 18d3aae37b..bdb1d3d6d8 100644
--- a/java/org/apache/catalina/valves/ErrorReportValve.java
+++ b/java/org/apache/catalina/valves/ErrorReportValve.java
@@ -46,7 +46,7 @@ import org.apache.tomcat.util.res.StringManager;
  * @author <a href="mailto:nicolaken@supereva.it">Nicola Ken Barozzi</a> Aisa
  * @author <a href="mailto:stefano@apache.org">Stefano Mazzocchi</a>
  * @author Yoav Shapira
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ErrorReportValve extends ValveBase {

==================================================
PersistentValve.java
index 6229aafef6..54a41f6239 100644
--- a/java/org/apache/catalina/valves/ExtendedAccessLogValve.java
+++ b/java/org/apache/catalina/valves/ExtendedAccessLogValve.java
@@ -125,7 +125,7 @@ import org.apache.juli.logging.LogFactory;
  * @author Tim Funk
  * @author Peter Rossbach
  * 
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ExtendedAccessLogValve extends AccessLogValve {

==================================================
RemoteAddrValve.java
index 8ba1127ac2..93ae98c9a8 100644
--- a/java/org/apache/catalina/valves/PersistentValve.java
+++ b/java/org/apache/catalina/valves/PersistentValve.java
@@ -44,7 +44,7 @@ import org.apache.tomcat.util.res.StringManager;
  *                              per session at any one time.
  *
  * @author Jean-Frederic Clere
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class PersistentValve extends ValveBase {

==================================================
RemoteHostValve.java
index 7df3faa2c4..a3775488a7 100644
--- a/java/org/apache/catalina/valves/RemoteAddrValve.java
+++ b/java/org/apache/catalina/valves/RemoteAddrValve.java
@@ -30,7 +30,7 @@ import org.apache.catalina.connector.Response;
  * based on the string representation of the remote client's IP address.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class RemoteAddrValve

==================================================
RequestFilterValve.java
index ce983209e9..0ff7e4c1b6 100644
--- a/java/org/apache/catalina/valves/RemoteHostValve.java
+++ b/java/org/apache/catalina/valves/RemoteHostValve.java
@@ -30,7 +30,7 @@ import org.apache.catalina.connector.Response;
  * based on the remote client's host name.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class RemoteHostValve

==================================================
SSLValve.java
index 72e9644237..55e6e9a299 100644
--- a/java/org/apache/catalina/valves/RequestFilterValve.java
+++ b/java/org/apache/catalina/valves/RequestFilterValve.java
@@ -62,7 +62,7 @@ import org.apache.tomcat.util.res.StringManager;
  * of the filtering you wish to perform.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public abstract class RequestFilterValve

==================================================
SemaphoreValve.java
index f09c0eef1f..5f0d346186 100644
--- a/java/org/apache/catalina/valves/SSLValve.java
+++ b/java/org/apache/catalina/valves/SSLValve.java
@@ -42,7 +42,7 @@ import org.apache.catalina.connector.Response;
  * </IfModule>
  *
  * @author Jean-Frederic Clere
- * @version $Revision$, $Date$
+ * @version $Id$
  */
 
 public class SSLValve

==================================================
ValveBase.java
index 644ba246a2..9b95dab712 100644
--- a/java/org/apache/catalina/valves/SemaphoreValve.java
+++ b/java/org/apache/catalina/valves/SemaphoreValve.java
@@ -38,7 +38,7 @@ import org.apache.catalina.util.LifecycleBase;
  * of the concurrency control you wish to perform.</p>
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class SemaphoreValve extends ValveBase {

==================================================
