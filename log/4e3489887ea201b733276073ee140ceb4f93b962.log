4e3489887ea201b733276073ee140ceb4f93b962
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49536
==================================================
Mark Emlyn
==================================================
Thu Jul 1 21:35:19 2010 +0000
==================================================
CoyoteAdapter.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49536
Ensure a 404 response for an unmapped request when no ROOT context is deployed.
Most of the change is getting the mapper to use the Host object rather than the ObjectName or an empty string

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@959790 13f79535-47bb-0310-9956-ffa450edef68



==================================================
MapperListener.java
index a9aaa6d7b4..a043159787 100644
--- a/java/org/apache/catalina/connector/CoyoteAdapter.java
+++ b/java/org/apache/catalina/connector/CoyoteAdapter.java
@@ -630,6 +630,16 @@ public class CoyoteAdapter implements Adapter {
             return false;
         }
 
+        // If there is no context at this point, it is likely no ROOT context
+        // has been deployed
+        if (request.getContext() == null) {
+            res.setStatus(404);
+            res.setMessage("Not found");
+            // No context, so use host
+            request.getHost().logAccess(request, response, 0, true);
+            return false;
+        }
+        
         // Now we have the context, we can parse the session ID from the URL
         // (if any). Need to do this before we redirect in case we need to
         // include the session id in the redirect

==================================================
Request.java
index 5f77872a26..e9464988c5 100644
--- a/java/org/apache/catalina/connector/MapperListener.java
+++ b/java/org/apache/catalina/connector/MapperListener.java
@@ -273,7 +273,7 @@ public class MapperListener implements ContainerListener, LifecycleListener {
     private void registerHost(Host host) {
         
         String[] aliases = host.findAliases();
-        mapper.addHost(host.getName(), aliases, host.getObjectName());
+        mapper.addHost(host.getName(), aliases, host);
         
         host.addContainerListener(this);
         
@@ -330,13 +330,13 @@ public class MapperListener implements ContainerListener, LifecycleListener {
         if ("/".equals(contextName)) {
             contextName = "";
         }
-        String hostName = context.getParent().getName();
+        Container host = context.getParent();
         
         javax.naming.Context resources = context.getResources();
         String[] welcomeFiles = context.findWelcomeFiles();
 
-        mapper.addContext(hostName, contextName, context, welcomeFiles,
-                resources);
+        mapper.addContext(host.getName(), host, contextName, context,
+                welcomeFiles, resources);
 
         context.addContainerListener(this);
        

==================================================
Mapper.java
index 4ed0f6061b..5d42d104e0 100644
--- a/java/org/apache/catalina/connector/Request.java
+++ b/java/org/apache/catalina/connector/Request.java
@@ -617,10 +617,7 @@ public class Request
      * Return the Host within which this Request is being processed.
      */
     public Host getHost() {
-        if (getContext() == null)
-            return null;
-        return (Host) getContext().getParent();
-        //return ((Host) mappingData.host);
+        return ((Host) mappingData.host);
     }
 
 

==================================================
