fdcc511d8832d59af2296030a0d1e1f693d1ab8e
==================================================
Making Log instances non-static triggered a few SpotBugs warnings around Serialization. Fix them.
==================================================
Mark Thomas
==================================================
Tue Jun 5 17:56:22 2018 +0000
==================================================
ApplicationFilterConfig.java
Making Log instances non-static triggered a few SpotBugs warnings around Serialization. Fix them.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1832958 13f79535-47bb-0310-9956-ffa450edef68



==================================================
CorsFilter.java
index 3d85edd4a1..2e7a593745 100644
--- a/java/org/apache/catalina/core/ApplicationFilterConfig.java
+++ b/java/org/apache/catalina/core/ApplicationFilterConfig.java
@@ -14,11 +14,11 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-
-
 package org.apache.catalina.core;
 
 
+import java.io.IOException;
+import java.io.ObjectInputStream;
 import java.io.Serializable;
 import java.util.Collections;
 import java.util.Enumeration;
@@ -61,7 +61,7 @@ public final class ApplicationFilterConfig implements FilterConfig, Serializable
     static final StringManager sm =
         StringManager.getManager(Constants.Package);
 
-    private final Log log = LogFactory.getLog(ApplicationFilterConfig.class); // must not be static
+    private transient Log log = LogFactory.getLog(ApplicationFilterConfig.class); // must not be static
 
     /**
      * Empty String collection to serve as the basis for empty enumerations.
@@ -403,4 +403,14 @@ public final class ApplicationFilterConfig implements FilterConfig, Serializable
         }
 
     }
+
+
+    /*
+     * Log objects are not Serializable.
+     */
+    private void readObject(ObjectInputStream ois) throws ClassNotFoundException, IOException {
+        ois.defaultReadObject();
+        log = LogFactory.getLog(ApplicationFilterConfig.class);
+    }
+
 }

==================================================
RemoteIpFilter.java
index 8226e6626e..9b7fa1409c 100644
--- a/java/org/apache/catalina/filters/CorsFilter.java
+++ b/java/org/apache/catalina/filters/CorsFilter.java
@@ -17,6 +17,7 @@
 package org.apache.catalina.filters;
 
 import java.io.IOException;
+import java.io.ObjectInputStream;
 import java.net.URI;
 import java.net.URISyntaxException;
 import java.util.Arrays;
@@ -79,9 +80,10 @@ import org.apache.tomcat.util.res.StringManager;
 public class CorsFilter extends GenericFilter {
 
     private static final long serialVersionUID = 1L;
-    private final Log log = LogFactory.getLog(CorsFilter.class); // must not be static
     private static final StringManager sm = StringManager.getManager(CorsFilter.class);
 
+    private transient Log log = LogFactory.getLog(CorsFilter.class); // must not be static
+
 
     /**
      * A {@link Collection} of origins consisting of zero or more origins that
@@ -909,7 +911,19 @@ public class CorsFilter extends GenericFilter {
     }
 
 
+    /*
+     * Log objects are not Serializable but this Filter is because it extends
+     * GenericFilter. Tomcat won't serialize a Filter but in case something else
+     * does...
+     */
+    private void readObject(ObjectInputStream ois) throws ClassNotFoundException, IOException {
+        ois.defaultReadObject();
+        log = LogFactory.getLog(CorsFilter.class);
+    }
+
+
     // -------------------------------------------------- CORS Response Headers
+
     /**
      * The Access-Control-Allow-Origin header indicates whether a resource can
      * be shared based by returning the value of the Origin request header in

==================================================
RequestDumperFilter.java
index 6d14d43145..b9f66553ef 100644
--- a/java/org/apache/catalina/filters/RemoteIpFilter.java
+++ b/java/org/apache/catalina/filters/RemoteIpFilter.java
@@ -17,6 +17,7 @@
 package org.apache.catalina.filters;
 
 import java.io.IOException;
+import java.io.ObjectInputStream;
 import java.text.DateFormat;
 import java.text.ParseException;
 import java.text.SimpleDateFormat;
@@ -656,7 +657,7 @@ public class RemoteIpFilter extends GenericFilter {
 
     // Log must be non-static as loggers are created per class-loader and this
     // Filter may be used in multiple class loaders
-    private final Log log = LogFactory.getLog(RemoteIpFilter.class); // must not be static
+    private transient Log log = LogFactory.getLog(RemoteIpFilter.class);
 
     protected static final String PROTOCOL_HEADER_PARAMETER = "protocolHeader";
 
@@ -1181,4 +1182,15 @@ public class RemoteIpFilter extends GenericFilter {
             this.trustedProxies = Pattern.compile(trustedProxies);
         }
     }
+
+
+    /*
+     * Log objects are not Serializable but this Filter is because it extends
+     * GenericFilter. Tomcat won't serialize a Filter but in case something else
+     * does...
+     */
+    private void readObject(ObjectInputStream ois) throws ClassNotFoundException, IOException {
+        ois.defaultReadObject();
+        log = LogFactory.getLog(RemoteIpFilter.class);
+    }
 }

==================================================
