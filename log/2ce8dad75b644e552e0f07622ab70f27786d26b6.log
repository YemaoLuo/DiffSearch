2ce8dad75b644e552e0f07622ab70f27786d26b6
==================================================
Remove sendfile support, this is a native called, this will be a pure java connector
==================================================
Filip Hanik
==================================================
Tue Jul 11 14:57:16 2006 +0000
==================================================
Http11NioProcessor.java
Remove sendfile support, this is a native called, this will be a pure java connector


git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk@420881 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http11NioProtocol.java
index 9d9c7b8897..51e3ea6ea8 100644
--- a/java/org/apache/coyote/http11/Http11NioProcessor.java
+++ b/java/org/apache/coyote/http11/Http11NioProcessor.java
@@ -48,7 +48,6 @@ import org.apache.tomcat.util.http.MimeHeaders;
 import org.apache.tomcat.util.net.NioEndpoint;
 import org.apache.tomcat.util.net.NioEndpoint.Handler;
 import org.apache.tomcat.util.net.NioEndpoint.Handler.SocketState;
-import org.apache.tomcat.util.net.NioEndpoint.SendfileData;
 import org.apache.tomcat.util.res.StringManager;
 import java.nio.channels.SelectionKey;
 
@@ -170,11 +169,6 @@ public class Http11NioProcessor implements ActionHook {
     protected boolean http09 = false;
 
 
-    /**
-     * Sendfile data.
-     */
-    protected NioEndpoint.SendfileData sendfileData = null;
-
 
     /**
      * Comet used.
@@ -914,16 +908,6 @@ public class Http11NioProcessor implements ActionHook {
             }
             request.updateCounters();
 
-            // Do sendfile as needed: add socket to sendfile and end
-            if (sendfileData != null && !error) {
-                sendfileData.socket = socket;
-                sendfileData.keepAlive = keepAlive;
-                if (!endpoint.getSendfile().add(sendfileData)) {
-                    openSocket = true;
-                    break;
-                }
-            }
-
             rp.setStage(org.apache.coyote.Constants.STAGE_KEEPALIVE);
 
         }
@@ -1250,7 +1234,6 @@ public class Http11NioProcessor implements ActionHook {
         http09 = false;
         contentDelimitation = false;
         expectation = false;
-        sendfileData = null;
         if (ssl) {
             request.scheme().setString("https");
         }
@@ -1412,10 +1395,6 @@ public class Http11NioProcessor implements ActionHook {
             contentDelimitation = true;
         }
 
-        // Advertise sendfile support through a request attribute
-        if (endpoint.getUseSendfile()) {
-            request.setAttribute("org.apache.tomcat.sendfile.support", Boolean.FALSE);
-        }
         // Advertise comet support through a request attribute
         request.setAttribute("org.apache.tomcat.comet.support", Boolean.TRUE);
 
@@ -1590,26 +1569,10 @@ public class Http11NioProcessor implements ActionHook {
             contentDelimitation = true;
         }
 
-        // Sendfile support
-        if (endpoint.getUseSendfile()) {
-            String fileName = (String) request.getAttribute("org.apache.tomcat.sendfile.filename");
-            if (fileName != null) {
-                // No entity body sent here
-                outputBuffer.addActiveFilter
-                    (outputFilters[Constants.VOID_FILTER]);
-                contentDelimitation = true;
-                sendfileData = new NioEndpoint.SendfileData();
-                sendfileData.fileName = fileName;
-                sendfileData.start = 
-                    ((Long) request.getAttribute("org.apache.tomcat.sendfile.start")).longValue();
-                sendfileData.end = 
-                    ((Long) request.getAttribute("org.apache.tomcat.sendfile.end")).longValue();
-            }
-        }
 
         // Check for compression
         boolean useCompression = false;
-        if (entityBody && (compressionLevel > 0) && (sendfileData == null)) {
+        if (entityBody && (compressionLevel > 0)) {
             useCompression = isCompressable();
             // Change content-length to -1 to force chunking
             if (useCompression) {

==================================================
NioEndpoint.java
index b0d105b47a..2f41de84b1 100644
--- a/java/org/apache/coyote/http11/Http11NioProtocol.java
+++ b/java/org/apache/coyote/http11/Http11NioProtocol.java
@@ -290,23 +290,6 @@ public class Http11NioProtocol implements ProtocolHandler, MBeanRegistration
         return ep.getPollerSize();
     }
 
-    public void setSendfileSize(int i) {
-        ep.setSendfileSize(i); 
-        setAttribute("sendfileSize", "" + i);
-    }
-
-    public int getSendfileSize() {
-        return ep.getSendfileSize();
-    }
-
-    public boolean getUseSendfile() {
-        return ep.getUseSendfile();
-    }
-
-    public void setUseSendfile(boolean useSendfile) {
-        ep.setUseSendfile(useSendfile);
-    }
-
     public InetAddress getAddress() {
         return ep.getAddress();
     }

==================================================
