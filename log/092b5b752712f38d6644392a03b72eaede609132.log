092b5b752712f38d6644392a03b72eaede609132
==================================================
Whitespace removal from /java/org/apache/catalina/ssi
==================================================
Mark Emlyn
==================================================
Sat Oct 22 21:14:59 2011 +0000
==================================================
ByteArrayServletOutputStream.java
Whitespace removal from /java/org/apache/catalina/ssi

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1187798 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ExpressionParseTree.java
index 2f9294c012..c0ad6eac0a 100644
--- a/java/org/apache/catalina/ssi/ByteArrayServletOutputStream.java
+++ b/java/org/apache/catalina/ssi/ByteArrayServletOutputStream.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

==================================================
ExpressionTokenizer.java
index fa3607b7ae..7b87a46647 100644
--- a/java/org/apache/catalina/ssi/ExpressionParseTree.java
+++ b/java/org/apache/catalina/ssi/ExpressionParseTree.java
@@ -24,7 +24,7 @@ import java.util.regex.Pattern;
 import java.util.regex.PatternSyntaxException;
 /**
  * Represents a parsed expression.
- * 
+ *
  * @version $Revision$
  * @author Paul Speed
  */
@@ -352,7 +352,7 @@ public class ExpressionParseTree {
         protected int compareBranches() {
             String val1 = ((StringNode)left).getValue();
             String val2 = ((StringNode)right).getValue();
-            
+
             int val2Len = val2.length();
             if (val2Len > 1 && val2.charAt(0) == '/' &&
                     val2.charAt(val2Len - 1) == '/') {

==================================================
ResponseIncludeWrapper.java
index 4c77b52ccd..8db192046e 100644
--- a/java/org/apache/catalina/ssi/ExpressionTokenizer.java
+++ b/java/org/apache/catalina/ssi/ExpressionTokenizer.java
@@ -21,7 +21,7 @@ package org.apache.catalina.ssi;
  * Parses an expression string to return the individual tokens. This is
  * patterned similar to the StreamTokenizer in the JDK but customized for SSI
  * conditional expression parsing.
- * 
+ *
  * @version $Revision$
  * @author Paul Speed
  */

==================================================
SSICommand.java
index 82ebbf9b3c..7de825d709 100644
--- a/java/org/apache/catalina/ssi/ResponseIncludeWrapper.java
+++ b/java/org/apache/catalina/ssi/ResponseIncludeWrapper.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -36,7 +36,7 @@ import org.apache.tomcat.util.ExceptionUtils;
 /**
  * A HttpServletResponseWrapper, used from
  * <code>SSIServletExternalResolver</code>
- * 
+ *
  * @author Bip Thelin
  * @author David Becker
  * @version $Id$
@@ -59,7 +59,7 @@ public class ResponseIncludeWrapper extends HttpServletResponseWrapper {
     protected ServletOutputStream captureServletOutputStream;
     protected ServletOutputStream servletOutputStream;
     protected PrintWriter printWriter;
-    
+
     private ServletContext context;
     private HttpServletRequest request;
 
@@ -67,17 +67,17 @@ public class ResponseIncludeWrapper extends HttpServletResponseWrapper {
         RFC1123_FORMAT = new SimpleDateFormat(RFC1123_PATTERN, Locale.US);
         RFC1123_FORMAT.setTimeZone(TimeZone.getTimeZone("GMT"));
     }
-    
+
     /**
      * Initialize our wrapper with the current HttpServletResponse and
      * ServletOutputStream.
-     * 
+     *
      * @param context The servlet context
      * @param request The HttpServletResponse to use
      * @param response The response to use
      * @param captureServletOutputStream The ServletOutputStream to use
      */
-    public ResponseIncludeWrapper(ServletContext context, 
+    public ResponseIncludeWrapper(ServletContext context,
             HttpServletRequest request, HttpServletResponse response,
             ServletOutputStream captureServletOutputStream) {
         super(response);
@@ -105,7 +105,7 @@ public class ResponseIncludeWrapper extends HttpServletResponseWrapper {
     /**
      * Return a printwriter, throws and exception if a OutputStream already
      * been returned.
-     * 
+     *
      * @return a PrintWriter object
      * @exception java.io.IOException
      *                if the outputstream already been called
@@ -128,7 +128,7 @@ public class ResponseIncludeWrapper extends HttpServletResponseWrapper {
     /**
      * Return a OutputStream, throws and exception if a printwriter already
      * been returned.
-     * 
+     *
      * @return a OutputStream object
      * @exception java.io.IOException
      *                if the printwriter already been called
@@ -143,17 +143,17 @@ public class ResponseIncludeWrapper extends HttpServletResponseWrapper {
         }
         throw new IllegalStateException();
     }
-    
-    
+
+
     /**
      * Returns the value of the <code>last-modified</code> header field. The
      * result is the number of milliseconds since January 1, 1970 GMT.
      *
      * @return the date the resource referenced by this
      *   <code>ResponseIncludeWrapper</code> was last modified, or -1 if not
-     *   known.                                                             
+     *   known.
      */
-    public long getLastModified() {                                                                                                                                                           
+    public long getLastModified() {
         if (lastModified == -1) {
             // javadocs say to return -1 if date not known, if you want another
             // default, put it here
@@ -193,7 +193,7 @@ public class ResponseIncludeWrapper extends HttpServletResponseWrapper {
         }
         return contentType;
     }
-    
+
     /**
      * Sets the value of the <code>content-type</code> header field.
      *

==================================================
SSIConditional.java
index 02b7c1bf9d..af0876724e 100644
--- a/java/org/apache/catalina/ssi/SSICommand.java
+++ b/java/org/apache/catalina/ssi/SSICommand.java
@@ -21,7 +21,7 @@ import java.io.PrintWriter;
 /**
  * The interface that all SSI commands ( SSIEcho, SSIInclude, ...) must
  * implement.
- * 
+ *
  * @author Bip Thelin
  * @author Dan Sandberg
  * @author David Becker
@@ -30,7 +30,7 @@ import java.io.PrintWriter;
 public interface SSICommand {
     /**
      * Write the output of the command to the writer.
-     * 
+     *
      * @param ssiMediator
      *            the ssi mediator
      * @param commandName

==================================================
SSIConditionalState.java
index d855cc0755..7533c695ea 100644
--- a/java/org/apache/catalina/ssi/SSIConditional.java
+++ b/java/org/apache/catalina/ssi/SSIConditional.java
@@ -21,7 +21,7 @@ import java.io.PrintWriter;
 import java.text.ParseException;
 /**
  * SSI command that handles all conditional directives.
- * 
+ *
  * @version $Revision$
  * @author Paul Speed
  * @author David Becker

==================================================
SSIConfig.java
index e71792a8f9..97e9c78840 100644
--- a/java/org/apache/catalina/ssi/SSIConditionalState.java
+++ b/java/org/apache/catalina/ssi/SSIConditionalState.java
@@ -21,7 +21,7 @@ package org.apache.catalina.ssi;
  * This class is used by SSIMediator and SSIConditional to keep track of state
  * information necessary to process the nested conditional commands ( if, elif,
  * else, endif ).
- * 
+ *
  * @version $Revision$
  * @author Dan Sandberg
  * @author Paul Speed

==================================================
SSIEcho.java
index 802b3f30f6..9a57543756 100644
--- a/java/org/apache/catalina/ssi/SSIConfig.java
+++ b/java/org/apache/catalina/ssi/SSIConfig.java
@@ -20,7 +20,7 @@ package org.apache.catalina.ssi;
 import java.io.PrintWriter;
 /**
  * Implements the Server-side #exec command
- * 
+ *
  * @author Bip Thelin
  * @author Paul Speed
  * @author Dan Sandberg

==================================================
SSIExec.java
index dfaad037ba..0ce2ab833c 100644
--- a/java/org/apache/catalina/ssi/SSIEcho.java
+++ b/java/org/apache/catalina/ssi/SSIEcho.java
@@ -20,7 +20,7 @@ package org.apache.catalina.ssi;
 import java.io.PrintWriter;
 /**
  * Return the result associated with the supplied Server Variable.
- * 
+ *
  * @author Bip Thelin
  * @author Paul Speed
  * @author Dan Sandberg

==================================================
SSIExternalResolver.java
index 32780211d2..0ba159b7d4 100644
--- a/java/org/apache/catalina/ssi/SSIExec.java
+++ b/java/org/apache/catalina/ssi/SSIExec.java
@@ -25,7 +25,7 @@ import java.io.PrintWriter;
 import org.apache.catalina.util.IOTools;
 /**
  * Implements the Server-side #exec command
- * 
+ *
  * @author Bip Thelin
  * @author Amy Roh
  * @author Paul Speed
@@ -67,7 +67,7 @@ public class SSIExec implements SSICommand {
                 IOTools.flow(stdErrReader, writer, buf);
                 IOTools.flow(stdOutReader, writer, buf);
                 proc.waitFor();
-                lastModified = System.currentTimeMillis();                
+                lastModified = System.currentTimeMillis();
             } catch (InterruptedException e) {
                 ssiMediator.log("Couldn't exec file: " + substitutedValue, e);
                 writer.write(configErrMsg);

==================================================
SSIFilter.java
index a37294283d..c0eae9ec4f 100644
--- a/java/org/apache/catalina/ssi/SSIExternalResolver.java
+++ b/java/org/apache/catalina/ssi/SSIExternalResolver.java
@@ -23,14 +23,14 @@ import java.util.Date;
 /**
  * Interface used by SSIMediator to talk to the 'outside world' ( usually a
  * servlet )
- * 
+ *
  * @author Dan Sandberg
  * @version $Id$
  */
 public interface SSIExternalResolver {
     /**
      * Adds any external variables to the variableNames collection.
-     * 
+     *
      * @param variableNames
      *            the collection to add to
      */
@@ -44,7 +44,7 @@ public interface SSIExternalResolver {
      * Set the named variable to the specified value. If value is null, then
      * the variable will be removed ( ie. a call to getVariableValue will
      * return null )
-     * 
+     *
      * @param name
      *            of the variable
      * @param value
@@ -57,7 +57,7 @@ public interface SSIExternalResolver {
      * Returns the current date. This is useful for putting the SSI stuff in a
      * regression test. Since you can make the current date a constant, it
      * makes testing easier since the output won't change.
-     * 
+     *
      * @return the data
      */
     public Date getCurrentDate();

==================================================
SSIFlastmod.java
index ea94187e0b..600e766c23 100644
--- a/java/org/apache/catalina/ssi/SSIFilter.java
+++ b/java/org/apache/catalina/ssi/SSIFilter.java
@@ -41,7 +41,7 @@ import org.apache.catalina.Globals;
 /**
  * Filter to process SSI requests within a webpage. Mapped to a content types
  * from within web.xml.
- * 
+ *
  * @author David Becker
  * @version $Id$
  * @see org.apache.catalina.ssi.SSIServlet
@@ -66,14 +66,14 @@ public class SSIFilter implements Filter {
     //----------------- Public methods.
     /**
      * Initialize this servlet.
-     * 
+     *
      * @exception ServletException
      *                if an error occurs
      */
     @Override
     public void init(FilterConfig config) throws ServletException {
         this.config = config;
-        
+
         if (config.getInitParameter("debug") != null) {
             debug = Integer.parseInt(config.getInitParameter("debug"));
         }
@@ -84,7 +84,7 @@ public class SSIFilter implements Filter {
             contentTypeRegEx = shtmlRegEx;
         }
 
-        isVirtualWebappRelative = 
+        isVirtualWebappRelative =
             Boolean.parseBoolean(config.getInitParameter("isVirtualWebappRelative"));
 
         if (config.getInitParameter("expires") != null)
@@ -103,9 +103,9 @@ public class SSIFilter implements Filter {
         // cast once
         HttpServletRequest req = (HttpServletRequest)request;
         HttpServletResponse res = (HttpServletResponse)response;
-        
+
         // indicate that we're in SSI processing
-        req.setAttribute(Globals.SSI_FLAG_ATTR, "true");           
+        req.setAttribute(Globals.SSI_FLAG_ATTR, "true");
 
         // setup to capture output
         ByteArrayServletOutputStream basos = new ByteArrayServletOutputStream();
@@ -126,28 +126,28 @@ public class SSIFilter implements Filter {
         if (contentTypeRegEx.matcher(contentType).matches()) {
             String encoding = res.getCharacterEncoding();
 
-            // set up SSI processing 
+            // set up SSI processing
             SSIExternalResolver ssiExternalResolver =
                 new SSIServletExternalResolver(config.getServletContext(), req,
                         res, isVirtualWebappRelative, debug, encoding);
             SSIProcessor ssiProcessor = new SSIProcessor(ssiExternalResolver,
                     debug, allowExec);
-            
+
             // prepare readers/writers
             Reader reader =
                 new InputStreamReader(new ByteArrayInputStream(bytes), encoding);
             ByteArrayOutputStream ssiout = new ByteArrayOutputStream();
             PrintWriter writer =
                 new PrintWriter(new OutputStreamWriter(ssiout, encoding));
-            
-            // do SSI processing  
+
+            // do SSI processing
             long lastModified = ssiProcessor.process(reader,
                     responseIncludeWrapper.getLastModified(), writer);
-            
+
             // set output bytes
             writer.flush();
             bytes = ssiout.toByteArray();
-            
+
             // override headers
             if (expires != null) {
                 res.setDateHeader("expires", (new java.util.Date()).getTime()
@@ -157,7 +157,7 @@ public class SSIFilter implements Filter {
                 res.setDateHeader("last-modified", lastModified);
             }
             res.setContentLength(bytes.length);
-            
+
             Matcher shtmlMatcher =
                 shtmlRegEx.matcher(responseIncludeWrapper.getContentType());
             if (shtmlMatcher.matches()) {

==================================================
SSIFsize.java
index 7008262a04..d7bc3d356e 100644
--- a/java/org/apache/catalina/ssi/SSIFlastmod.java
+++ b/java/org/apache/catalina/ssi/SSIFlastmod.java
@@ -25,7 +25,7 @@ import org.apache.catalina.util.DateTool;
 import org.apache.catalina.util.Strftime;
 /**
  * Implements the Server-side #flastmod command
- * 
+ *
  * @author Bip Thelin
  * @author Paul Speed
  * @author Dan Sandberg

==================================================
SSIInclude.java
index 76488a8483..7ab136bba2 100644
--- a/java/org/apache/catalina/ssi/SSIFsize.java
+++ b/java/org/apache/catalina/ssi/SSIFsize.java
@@ -22,7 +22,7 @@ import java.io.PrintWriter;
 import java.text.DecimalFormat;
 /**
  * Implements the Server-side #fsize command
- * 
+ *
  * @author Bip Thelin
  * @author Paul Speed
  * @author Dan Sandberg

==================================================
SSIMediator.java
index 23ef345895..fd857ce16b 100644
--- a/java/org/apache/catalina/ssi/SSIInclude.java
+++ b/java/org/apache/catalina/ssi/SSIInclude.java
@@ -21,7 +21,7 @@ import java.io.IOException;
 import java.io.PrintWriter;
 /**
  * Implements the Server-side #include command
- * 
+ *
  * @author Bip Thelin
  * @author Paul Speed
  * @author Dan Sandberg

==================================================
SSIPrintenv.java
index 5c5941d3e0..c9c1b96491 100644
--- a/java/org/apache/catalina/ssi/SSIMediator.java
+++ b/java/org/apache/catalina/ssi/SSIMediator.java
@@ -33,7 +33,7 @@ import org.apache.tomcat.util.http.HttpMessages;
 /**
  * Allows the different SSICommand implementations to share data/talk to each
  * other
- * 
+ *
  * @author Bip Thelin
  * @author Amy Roh
  * @author Paul Speed
@@ -211,7 +211,7 @@ public class SSIMediator {
         // If it has no references or HTML entities then no work
         // need to be done
         if (val.indexOf('$') < 0 && val.indexOf('&') < 0) return val;
-        
+
         // HTML decoding
         val = val.replace("&lt;", "<");
         val = val.replace("&gt;", ">");

==================================================
SSIProcessor.java
index ab7029a774..b3e80fefe9 100644
--- a/java/org/apache/catalina/ssi/SSIPrintenv.java
+++ b/java/org/apache/catalina/ssi/SSIPrintenv.java
@@ -22,7 +22,7 @@ import java.util.Collection;
 import java.util.Iterator;
 /**
  * Implements the Server-side #printenv command
- * 
+ *
  * @author Dan Sandberg
  * @author David Becker
  * @version $Id$

==================================================
SSIServlet.java
index 32fbb81715..440f64c961 100644
--- a/java/org/apache/catalina/ssi/SSIProcessor.java
+++ b/java/org/apache/catalina/ssi/SSIProcessor.java
@@ -30,7 +30,7 @@ import org.apache.catalina.util.IOTools;
  * The entry point to SSI processing. This class does the actual parsing,
  * delegating to the SSIMediator, SSICommand, and SSIExternalResolver as
  * necessary[
- * 
+ *
  * @author Dan Sandberg
  * @author David Becker
  * @version $Id$
@@ -85,7 +85,7 @@ public class SSIProcessor {
      * Process a file with server-side commands, reading from reader and
      * writing the processed version to writer. NOTE: We really should be doing
      * this in a streaming way rather than converting it to an array first.
-     * 
+     *
      * @param reader
      *            the reader to read the file containing SSIs from
      * @param writer
@@ -161,7 +161,7 @@ public class SSIProcessor {
                                                paramNames, paramValues, writer);
                                 if (lmd > lastModifiedDate) {
                                     lastModifiedDate = lmd;
-                                }                                    
+                                }
                             }
                         }
                         if (errorMessage != null) {
@@ -185,7 +185,7 @@ public class SSIProcessor {
     /**
      * Parse a StringBuilder and take out the param type token. Called from
      * <code>requestHandler</code>
-     * 
+     *
      * @param cmd
      *            a value of type 'StringBuilder'
      * @return a value of type 'String[]'
@@ -235,7 +235,7 @@ public class SSIProcessor {
     /**
      * Parse a StringBuilder and take out the param token. Called from
      * <code>requestHandler</code>
-     * 
+     *
      * @param cmd
      *            a value of type 'StringBuilder'
      * @return a value of type 'String[]'
@@ -286,7 +286,7 @@ public class SSIProcessor {
     /**
      * Parse a StringBuilder and take out the command token. Called from
      * <code>requestHandler</code>
-     * 
+     *
      * @param cmd
      *            a value of type 'StringBuilder'
      * @return a value of type 'String', or null if there is none
@@ -325,7 +325,7 @@ public class SSIProcessor {
     protected boolean isSpace(char c) {
         return c == ' ' || c == '\n' || c == '\t' || c == '\r';
     }
-    
+
     protected boolean isQuote(char c) {
         return c == '\'' || c == '\"' || c == '`';
     }

==================================================
SSIServletExternalResolver.java
index 04286207cc..497fe3eef0 100644
--- a/java/org/apache/catalina/ssi/SSIServlet.java
+++ b/java/org/apache/catalina/ssi/SSIServlet.java
@@ -37,7 +37,7 @@ import org.apache.catalina.Globals;
 /**
  * Servlet to process SSI requests within a webpage. Mapped to a path from
  * within web.xml.
- * 
+ *
  * @author Bip Thelin
  * @author Amy Roh
  * @author Dan Sandberg
@@ -66,29 +66,29 @@ public class SSIServlet extends HttpServlet {
     //----------------- Public methods.
     /**
      * Initialize this servlet.
-     * 
+     *
      * @exception ServletException
      *                if an error occurs
      */
     @Override
     public void init() throws ServletException {
-        
+
         if (getServletConfig().getInitParameter("debug") != null)
             debug = Integer.parseInt(getServletConfig().getInitParameter("debug"));
-        
-        isVirtualWebappRelative = 
+
+        isVirtualWebappRelative =
             Boolean.parseBoolean(getServletConfig().getInitParameter("isVirtualWebappRelative"));
-        
+
         if (getServletConfig().getInitParameter("expires") != null)
             expires = Long.valueOf(getServletConfig().getInitParameter("expires"));
-        
+
         buffered = Boolean.parseBoolean(getServletConfig().getInitParameter("buffered"));
-        
+
         inputEncoding = getServletConfig().getInitParameter("inputEncoding");
-        
+
         if (getServletConfig().getInitParameter("outputEncoding") != null)
             outputEncoding = getServletConfig().getInitParameter("outputEncoding");
-        
+
         allowExec = Boolean.parseBoolean(
                 getServletConfig().getInitParameter("allowExec"));
 
@@ -100,7 +100,7 @@ public class SSIServlet extends HttpServlet {
 
     /**
      * Process and forward the GET request to our <code>requestHandler()</code>*
-     * 
+     *
      * @param req
      *            a value of type 'HttpServletRequest'
      * @param res
@@ -121,7 +121,7 @@ public class SSIServlet extends HttpServlet {
     /**
      * Process and forward the POST request to our
      * <code>requestHandler()</code>.
-     * 
+     *
      * @param req
      *            a value of type 'HttpServletRequest'
      * @param res
@@ -141,7 +141,7 @@ public class SSIServlet extends HttpServlet {
 
     /**
      * Process our request and locate right SSI command.
-     * 
+     *
      * @param req
      *            a value of type 'HttpServletRequest'
      * @param res

==================================================
SSIServletRequestUtil.java
index 40682c49e8..7558f8c2c3 100644
--- a/java/org/apache/catalina/ssi/SSIServletExternalResolver.java
+++ b/java/org/apache/catalina/ssi/SSIServletExternalResolver.java
@@ -40,7 +40,7 @@ import org.apache.tomcat.util.buf.B2CConverter;
 
 /**
  * An implementation of SSIExternalResolver that is used with servlets.
- * 
+ *
  * @author Dan Sandberg
  * @author David Becker
  * @version $Id$
@@ -247,10 +247,10 @@ public class SSIServletExternalResolver implements SSIExternalResolver {
                         // Use default as a last resort
                         String queryStringEncoding =
                             Constants.DEFAULT_CHARACTER_ENCODING;
-                
+
                         String uriEncoding = null;
                         boolean useBodyEncodingForURI = false;
-                
+
                         // Get encoding settings from request / connector if
                         // possible
                         String requestEncoding = req.getCharacterEncoding();
@@ -260,7 +260,7 @@ public class SSIServletExternalResolver implements SSIExternalResolver {
                             useBodyEncodingForURI = ((Request)req)
                                     .getConnector().getUseBodyEncodingForURI();
                         }
-                
+
                         // If valid, apply settings from request / connector
                         if (uriEncoding != null) {
                             queryStringEncoding = uriEncoding;
@@ -269,10 +269,10 @@ public class SSIServletExternalResolver implements SSIExternalResolver {
                                 queryStringEncoding = requestEncoding;
                             }
                         }
-                
+
                         try {
                             retVal = URLDecoder.decode(queryString,
-                                    queryStringEncoding);                       
+                                    queryStringEncoding);
                         } catch (UnsupportedEncodingException e) {
                             retVal = queryString;
                         }

==================================================
SSISet.java
index 8f76401a92..3a2f9f2615 100644
--- a/java/org/apache/catalina/ssi/SSIServletRequestUtil.java
+++ b/java/org/apache/catalina/ssi/SSIServletRequestUtil.java
@@ -26,7 +26,7 @@ public class SSIServletRequestUtil {
      * Return the relative path associated with this servlet. Taken from
      * DefaultServlet.java. Perhaps this should be put in
      * org.apache.catalina.util somewhere? Seems like it would be widely used.
-     * 
+     *
      * @param request
      *            The servlet request we are processing
      */

==================================================
SSIStopProcessingException.java
index d87f9d7e75..4326c62baf 100644
--- a/java/org/apache/catalina/ssi/SSISet.java
+++ b/java/org/apache/catalina/ssi/SSISet.java
@@ -20,7 +20,7 @@ package org.apache.catalina.ssi;
 import java.io.PrintWriter;
 /**
  * Implements the Server-side #set command
- * 
+ *
  * @author Paul Speed
  * @author Dan Sandberg
  * @author David Becker

==================================================
