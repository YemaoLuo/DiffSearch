b31b6f326c434018ff2a719aac136b2e93efd4ff
==================================================
Make asynchronous error handling more robust. In particular ensure that onError() is called for any registered AsyncListeners after an I/O error on a non-container thread.
==================================================
Mark Thomas
==================================================
Mon Jun 12 18:42:32 2017 +0000
==================================================
AbstractProcessor.java
index a2ad9c27ab..386f23b114 100644
--- a/conf/logging.properties
+++ b/conf/logging.properties
@@ -65,6 +65,8 @@ org.apache.catalina.core.ContainerBase.[Catalina].[localhost].[/host-manager].ha
 
 # To see debug messages for HTTP/2 handling, uncomment the following line:
 #org.apache.coyote.http2.level = FINE
+org.apache.coyote.level = FINEST
+org.apache.catalina.level = FINEST
 
 # To see debug messages for WebSocket handling, uncomment the following line:
 #org.apache.tomcat.websocket.level = FINE

==================================================
AsyncStateMachine.java
index aed2179f07..b21176881d 100644
--- a/java/org/apache/coyote/AbstractProcessor.java
+++ b/java/org/apache/coyote/AbstractProcessor.java
@@ -95,6 +95,7 @@ public abstract class AbstractProcessor extends AbstractProcessorLight implement
             // have been completed. Dispatch to a container thread to do the
             // clean-up. Need to do it this way to ensure that all the necessary
             // clean-up is performed.
+            asyncStateMachine.asyncMustError();
             getLog().info(sm.getString("abstractProcessor.nonContainerThreadError"), t);
             processSocketEvent(SocketEvent.ERROR, true);
         }

==================================================
