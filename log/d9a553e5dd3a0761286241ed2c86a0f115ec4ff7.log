d9a553e5dd3a0761286241ed2c86a0f115ec4ff7
==================================================
Revert addition of closing flag on wrapper. A more robust solution is required.
==================================================
Mark Emlyn
==================================================
Thu Sep 19 10:41:27 2013 +0000
==================================================
AbstractProtocol.java
Revert addition of closing flag on wrapper. A more robust solution is required.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1524683 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AprServletInputStream.java
index bb2003af48..beac2b97c9 100644
--- a/java/org/apache/coyote/AbstractProtocol.java
+++ b/java/org/apache/coyote/AbstractProtocol.java
@@ -703,7 +703,6 @@ public abstract class AbstractProtocol<S> implements ProtocolHandler,
                 } else {
                     // Connection closed. OK to recycle the processor. Upgrade
                     // processors are not recycled.
-                    wrapper.setClosing(true);
                     connections.remove(socket);
                     if (processor.isUpgrade()) {
                         processor.getHttpUpgradeHandler().destroy();

==================================================
AprServletOutputStream.java
index fe96c38542..3c339e2b64 100644
--- a/java/org/apache/coyote/http11/upgrade/AprServletInputStream.java
+++ b/java/org/apache/coyote/http11/upgrade/AprServletInputStream.java
@@ -50,7 +50,7 @@ public class AprServletInputStream extends AbstractServletInputStream {
         try {
             readLock.lock();
             if (wrapper.getBlockingStatus() == block) {
-                if (closed || wrapper.isClosing()) {
+                if (closed) {
                     throw new IOException(sm.getString("apr.closed"));
                 }
                 result = Socket.recv(socket, b, off, len);
@@ -70,7 +70,7 @@ public class AprServletInputStream extends AbstractServletInputStream {
                 try {
                     readLock.lock();
                     writeLock.unlock();
-                    if (closed || wrapper.isClosing()) {
+                    if (closed) {
                         throw new IOException(sm.getString("apr.closed"));
                     }
                     result = Socket.recv(socket, b, off, len);

==================================================
SocketWrapper.java
index 7abdb859e4..fb15fd1257 100644
--- a/java/org/apache/coyote/http11/upgrade/AprServletOutputStream.java
+++ b/java/org/apache/coyote/http11/upgrade/AprServletOutputStream.java
@@ -60,7 +60,7 @@ public class AprServletOutputStream extends AbstractServletOutputStream {
         try {
             readLock.lock();
             if (wrapper.getBlockingStatus() == block) {
-                if (closed || wrapper.isClosing()) {
+                if (closed) {
                     throw new IOException(sm.getString("apr.closed"));
                 }
                 return doWriteInternal(b, off, len);
@@ -83,7 +83,7 @@ public class AprServletOutputStream extends AbstractServletOutputStream {
             try {
                 readLock.lock();
                 writeLock.unlock();
-                if (closed || wrapper.isClosing()) {
+                if (closed) {
                     throw new IOException(sm.getString("apr.closed"));
                 }
                 return doWriteInternal(b, off, len);

==================================================
