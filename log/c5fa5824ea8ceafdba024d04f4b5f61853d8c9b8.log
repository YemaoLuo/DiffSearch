c5fa5824ea8ceafdba024d04f4b5f61853d8c9b8
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56710
==================================================
Konstantin Kolinko
==================================================
Sun Jul 13 14:54:04 2014 +0000
==================================================
Mapper.java
index df0734c091..69c2092b14 100644
--- a/java/org/apache/catalina/mapper/LocalStrings.properties
+++ b/java/org/apache/catalina/mapper/LocalStrings.properties
@@ -22,5 +22,6 @@ mapperListener.registerHost=Register host [{0}] at domain [{1}] for service [{2}
 mapperListener.unregisterHost=Unregister host [{0}] at domain [{1}] for service [{2}]
 mapperListener.registerContext=Register Context [{0}] for service [{1}]
 mapperListener.unregisterContext=Unregister Context [{0}] for service [{1}]
+mapperListener.pauseContext=Register Context [{0}] as being reloaded for service [{1}]
 mapperListener.registerWrapper=Register Wrapper [{0}] in Context [{1}] for service [{2}]
 mapperListener.unregisterWrapper=Unregister Wrapper [{0}] in Context [{1}] for service [{2}]

==================================================
MapperListener.java
index 4233d48e65..b21d16df54 100644
--- a/java/org/apache/catalina/mapper/Mapper.java
+++ b/java/org/apache/catalina/mapper/Mapper.java
@@ -335,6 +335,27 @@ public final class Mapper {
     }
 
 
+    /**
+     * Mark a context as being reloaded. Reversion of this state is performed
+     * by calling <code>addContextVersion(...)</code> when context starts up.
+     *
+     * @param ctxt      The actual context
+     * @param hostName  Virtual host name this context belongs to
+     * @param contextPath Context path
+     * @param version   Context version
+     */
+    public void pauseContextVersion(Context ctxt, String hostName,
+            String contextPath, String version) {
+
+        ContextVersion contextVersion = findContextVersion(hostName,
+                contextPath, version, true);
+        if (contextVersion == null || !ctxt.equals(contextVersion.object)) {
+            return;
+        }
+        contextVersion.markPaused();
+    }
+
+
     private ContextVersion findContextVersion(String hostName,
             String contextPath, String version, boolean silent) {
         MappedHost host = exactFind(hosts, hostName);
@@ -478,7 +499,7 @@ public final class Mapper {
             String version, String path) {
         ContextVersion contextVersion = findContextVersion(hostName,
                 contextPath, version, true);
-        if (contextVersion == null) {
+        if (contextVersion == null || contextVersion.isPaused()) {
             return;
         }
         removeWrapper(contextVersion, path);
@@ -583,7 +604,7 @@ public final class Mapper {
             String version, String welcomeFile) {
         ContextVersion contextVersion = findContextVersion(hostName,
                 contextPath, version, false);
-        if (contextVersion == null) {
+        if (contextVersion == null || contextVersion.isPaused()) {
             return;
         }
         int match = -1;
@@ -763,13 +784,16 @@ public final class Mapper {
         }
         if (contextVersion == null) {
             // Return the latest version
+            // The versions array is known to contain at least one element
             contextVersion = contextVersions[versionCount - 1];
         }
         mappingData.context = contextVersion.object;
         mappingData.contextSlashCount = contextVersion.slashCount;
 
         // Wrapper mapping
-        internalMapWrapper(contextVersion, uri, mappingData);
+        if (!contextVersion.isPaused()) {
+            internalMapWrapper(contextVersion, uri, mappingData);
+        }
 
     }
 
@@ -1604,6 +1628,7 @@ public final class Mapper {
         public MappedWrapper[] wildcardWrappers = new MappedWrapper[0];
         public MappedWrapper[] extensionWrappers = new MappedWrapper[0];
         public int nesting = 0;
+        private volatile boolean paused;
 
         public ContextVersion(String version, String path, int slashCount,
                 Context context, WebResourceRoot resources,
@@ -1614,6 +1639,14 @@ public final class Mapper {
             this.resources = resources;
             this.welcomeResources = welcomeResources;
         }
+
+        public boolean isPaused() {
+            return paused;
+        }
+
+        public void markPaused() {
+            paused = true;
+        }
     }
 
     // ---------------------------------------------------- Wrapper Inner Class

==================================================
