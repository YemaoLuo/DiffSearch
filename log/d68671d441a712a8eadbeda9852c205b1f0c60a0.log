d68671d441a712a8eadbeda9852c205b1f0c60a0
==================================================
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=57944
==================================================
Mark Thomas
==================================================
Tue Jun 16 13:04:11 2015 +0000
==================================================
InputBuffer.java
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=57944
Ensure that if either or both of the non-blocking listeners are set on non-container threads that the appropriate events are triggered.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1685816 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Response.java
index 0052c86744..246d5c17fc 100644
--- a/java/org/apache/catalina/connector/InputBuffer.java
+++ b/java/org/apache/catalina/connector/InputBuffer.java
@@ -260,6 +260,10 @@ public class InputBuffer extends Reader
         // is not required.
         if (!coyoteRequest.isFinished() && isReady()) {
             coyoteRequest.action(ActionCode.DISPATCH_READ, null);
+            if (!ContainerThreadMarker.isContainerThread()) {
+                // Not on a container thread so need to execute the dispatch
+                coyoteRequest.action(ActionCode.DISPATCH_EXECUTE, null);
+            }
         }
     }
 

==================================================
TestCoyoteOutputStream.java
index bb0c7a7ea0..987c1ea995 100644
--- a/java/org/apache/coyote/Response.java
+++ b/java/org/apache/coyote/Response.java
@@ -581,7 +581,6 @@ public final class Response {
         // the container will call listener.onWritePossible() once data can be
         // written.
         if (isReady()) {
-            action(ActionCode.DISPATCH_WRITE, null);
             synchronized (nonBlockingStateLock) {
                 // Ensure we don't get multiple write registrations if
                 // ServletOutputStream.isReady() returns false during a call to
@@ -592,6 +591,11 @@ public final class Response {
                 // happen
                 fireListener = true;
             }
+            action(ActionCode.DISPATCH_WRITE, null);
+            if (!ContainerThreadMarker.isContainerThread()) {
+                // Not on a container thread so need to execute the dispatch
+                action(ActionCode.DISPATCH_EXECUTE, null);
+            }
         }
     }
 

==================================================
