4171bafd2b38be19a6358ba75b9d71b6dbf3072b
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=54178
==================================================
Mark Emlyn
==================================================
Wed Apr 24 11:27:11 2013 +0000
==================================================
AsyncContextImpl.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=54178
Protect against AsyncListeners that throw RuntimeExceptions (they should normally only throw IOExceptions).
Includes a test case.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1471371 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestAsyncContextImpl.java
index 66201001bc..3094f14085 100644
--- a/java/org/apache/catalina/core/AsyncContextImpl.java
+++ b/java/org/apache/catalina/core/AsyncContextImpl.java
@@ -116,9 +116,10 @@ public class AsyncContextImpl implements AsyncContext, AsyncContextCallback {
             for (AsyncListenerWrapper listener : listenersCopy) {
                 try {
                     listener.fireOnComplete(event);
-                } catch (IOException ioe) {
+                } catch (Throwable t) {
+                    ExceptionUtils.handleThrowable(t);
                     log.warn("onComplete() failed for listener of type [" +
-                            listener.getClass().getName() + "]", ioe);
+                            listener.getClass().getName() + "]", t);
                 }
             }
         } finally {
@@ -202,9 +203,10 @@ public class AsyncContextImpl implements AsyncContext, AsyncContextCallback {
                 for (AsyncListenerWrapper listener : listenersCopy) {
                     try {
                         listener.fireOnTimeout(event);
-                    } catch (IOException ioe) {
+                    } catch (Throwable t) {
+                        ExceptionUtils.handleThrowable(t);
                         log.warn("onTimeout() failed for listener of type [" +
-                                listener.getClass().getName() + "]", ioe);
+                                listener.getClass().getName() + "]", t);
                     }
                 }
                 request.getCoyoteRequest().action(
@@ -381,9 +383,10 @@ public class AsyncContextImpl implements AsyncContext, AsyncContextCallback {
         for (AsyncListenerWrapper listener : listenersCopy) {
             try {
                 listener.fireOnStartAsync(event);
-            } catch (IOException ioe) {
+            } catch (Throwable t) {
+                ExceptionUtils.handleThrowable(t);
                 log.warn("onStartAsync() failed for listener of type [" +
-                        listener.getClass().getName() + "]", ioe);
+                        listener.getClass().getName() + "]", t);
             }
         }
         listeners.clear();
@@ -445,9 +448,10 @@ public class AsyncContextImpl implements AsyncContext, AsyncContextCallback {
             for (AsyncListenerWrapper listener : listenersCopy) {
                 try {
                     listener.fireOnError(errorEvent);
-                } catch (IOException ioe) {
+                } catch (Throwable t2) {
+                    ExceptionUtils.handleThrowable(t);
                     log.warn("onError() failed for listener of type [" +
-                            listener.getClass().getName() + "]", ioe);
+                            listener.getClass().getName() + "]", t2);
                 }
             }
         }

==================================================
