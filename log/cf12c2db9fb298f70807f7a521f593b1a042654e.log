cf12c2db9fb298f70807f7a521f593b1a042654e
==================================================
Removed unnecessary semicolons
==================================================
Emmanuel Bourg
==================================================
Tue May 9 12:33:07 2017 +0000
==================================================
AbstractCatalinaTask.java
Removed unnecessary semicolons

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1794554 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ValidatorTask.java
index 8c2c491ab1..3218388a65 100644
--- a/java/org/apache/catalina/ant/AbstractCatalinaTask.java
+++ b/java/org/apache/catalina/ant/AbstractCatalinaTask.java
@@ -211,7 +211,7 @@ public abstract class AbstractCatalinaTask extends BaseRedirectorHelperTask {
             // Send the request data (if any)
             if (istream != null) {
                 try (BufferedOutputStream ostream = new BufferedOutputStream(
-                                hconn.getOutputStream(), 1024);) {
+                                hconn.getOutputStream(), 1024)) {
                     byte buffer[] = new byte[1024];
                     while (true) {
                         int n = istream.read(buffer);

==================================================
FarmWarDeployer.java
index 3fa75cc166..99b0e0aafa 100644
--- a/java/org/apache/catalina/ant/ValidatorTask.java
+++ b/java/org/apache/catalina/ant/ValidatorTask.java
@@ -93,7 +93,7 @@ public class ValidatorTask extends BaseRedirectorHelperTask {
         // SecurityManager assume that untrusted applications may be deployed.
         Digester digester = DigesterFactory.newDigester(
                 true, true, null, Globals.IS_SECURITY_ENABLED);
-        try (InputStream stream = new BufferedInputStream(new FileInputStream(file.getCanonicalFile()));) {
+        try (InputStream stream = new BufferedInputStream(new FileInputStream(file.getCanonicalFile()))) {
             InputSource is = new InputSource(file.toURI().toURL().toExternalForm());
             is.setByteStream(stream);
             digester.parse(is);

==================================================
DefaultServlet.java
index ef87c92b59..81cf96eb05 100644
--- a/java/org/apache/catalina/ha/deploy/FarmWarDeployer.java
+++ b/java/org/apache/catalina/ha/deploy/FarmWarDeployer.java
@@ -748,7 +748,7 @@ public class FarmWarDeployer extends ClusterListener
         }
 
         try (java.io.FileInputStream is = new java.io.FileInputStream(from);
-                java.io.FileOutputStream os = new java.io.FileOutputStream(to, false);) {
+                java.io.FileOutputStream os = new java.io.FileOutputStream(to, false)) {
             byte[] buf = new byte[4096];
             while (true) {
                 int len = is.read(buf);

==================================================
WebappServiceLoader.java
index 7a6711e29b..b3b24c088c 100644
--- a/java/org/apache/catalina/servlets/DefaultServlet.java
+++ b/java/org/apache/catalina/servlets/DefaultServlet.java
@@ -601,7 +601,7 @@ public class DefaultServlet extends HttpServlet {
         }
 
         try (RandomAccessFile randAccessContentFile =
-            new RandomAccessFile(contentFile, "rw");) {
+            new RandomAccessFile(contentFile, "rw")) {
 
             WebResource oldResource = resources.getResource(path);
 
@@ -609,7 +609,7 @@ public class DefaultServlet extends HttpServlet {
             if (oldResource.isFile()) {
                 try (BufferedInputStream bufOldRevStream =
                     new BufferedInputStream(oldResource.getInputStream(),
-                            BUFFER_SIZE);) {
+                            BUFFER_SIZE)) {
 
                     int numBytesRead;
                     byte[] copyBuffer = new byte[BUFFER_SIZE];
@@ -627,7 +627,7 @@ public class DefaultServlet extends HttpServlet {
             int numBytesRead;
             byte[] transferBuffer = new byte[BUFFER_SIZE];
             try (BufferedInputStream requestBufInStream =
-                new BufferedInputStream(req.getInputStream(), BUFFER_SIZE);) {
+                new BufferedInputStream(req.getInputStream(), BUFFER_SIZE)) {
                 while ((numBytesRead = requestBufInStream.read(transferBuffer)) != -1) {
                     randAccessContentFile.write(transferBuffer, 0, numBytesRead);
                 }
@@ -1718,7 +1718,7 @@ public class DefaultServlet extends HttpServlet {
             if (resource.isFile()) {
                 StringWriter buffer = new StringWriter();
                 InputStreamReader reader = null;
-                try (InputStream is = resource.getInputStream();){
+                try (InputStream is = resource.getInputStream()){
                     if (encoding != null) {
                         reader = new InputStreamReader(is, encoding);
                     } else {

==================================================
StuckThreadDetectionValve.java
index 220baac8b7..e7dfe5920e 100644
--- a/java/org/apache/catalina/startup/WebappServiceLoader.java
+++ b/java/org/apache/catalina/startup/WebappServiceLoader.java
@@ -163,7 +163,7 @@ public class WebappServiceLoader<T> {
             throws IOException {
         try (InputStream is = url.openStream();
             InputStreamReader in = new InputStreamReader(is, StandardCharsets.UTF_8);
-            BufferedReader reader = new BufferedReader(in);) {
+            BufferedReader reader = new BufferedReader(in)) {
             String line;
             while ((line = reader.readLine()) != null) {
                 int i = line.indexOf('#');

==================================================
JDTCompiler.java
index 3a71f529b3..a4f7bd0301 100644
--- a/java/org/apache/catalina/valves/StuckThreadDetectionValve.java
+++ b/java/org/apache/catalina/valves/StuckThreadDetectionValve.java
@@ -420,6 +420,6 @@ public class StuckThreadDetectionValve extends ValveBase {
     }
 
     private enum MonitoredThreadState {
-        RUNNING, STUCK, DONE;
+        RUNNING, STUCK, DONE
     }
 }

==================================================
ParserController.java
index 75cb5aae42..a98deda435 100644
--- a/java/org/apache/jasper/compiler/JDTCompiler.java
+++ b/java/org/apache/jasper/compiler/JDTCompiler.java
@@ -420,7 +420,7 @@ public class JDTCompiler extends org.apache.jasper.compiler.Compiler {
                                 classFileName.append(".class");
                                 try (FileOutputStream fout = new FileOutputStream(
                                         classFileName.toString());
-                                        BufferedOutputStream bos = new BufferedOutputStream(fout);) {
+                                        BufferedOutputStream bos = new BufferedOutputStream(fout)) {
                                     bos.write(bytes);
                                 }
                             }

==================================================
SmapUtil.java
index c721d46945..396ac1b369 100644
--- a/java/org/apache/jasper/compiler/ParserController.java
+++ b/java/org/apache/jasper/compiler/ParserController.java
@@ -238,7 +238,7 @@ class ParserController implements TagConstants {
         } else {
             // Standard syntax
             try (InputStreamReader inStreamReader = JspUtil.getReader(
-                    absFileName, sourceEnc, jar, ctxt, err, skip);) {
+                    absFileName, sourceEnc, jar, ctxt, err, skip)) {
                 JspReader jspReader = new JspReader(ctxt, absFileName,
                         inStreamReader, err);
                 parsedPage = Parser.parse(this, jspReader, parent, isTagFile,

==================================================
PoolableConnectionFactory.java
index d4f11dabf1..9f4e926aca 100644
--- a/java/org/apache/jasper/compiler/SmapUtil.java
+++ b/java/org/apache/jasper/compiler/SmapUtil.java
@@ -225,7 +225,7 @@ public class SmapUtil {
             addSDE();
 
             // write result
-            try (FileOutputStream outStream = new FileOutputStream(outClassFile);) {
+            try (FileOutputStream outStream = new FileOutputStream(outClassFile)) {
                 outStream.write(gen, 0, genPos);
             }
         }

==================================================
Encryption.java
index 4bc0690321..717f6e4cea 100644
--- a/java/org/apache/tomcat/dbcp/dbcp2/PoolableConnectionFactory.java
+++ b/java/org/apache/tomcat/dbcp/dbcp2/PoolableConnectionFactory.java
@@ -318,7 +318,7 @@ public class PoolableConnectionFactory
             throw new SQLException("initializeConnection: connection closed");
         }
         if(null != sqls) {
-            try (Statement stmt = conn.createStatement();) {
+            try (Statement stmt = conn.createStatement()) {
                 for (final String sql : sqls) {
                     if (sql == null) {
                         throw new NullPointerException(

==================================================
EncryptionLevel.java
index 56d6bbc271..04c1115967 100644
--- a/java/org/apache/tomcat/util/net/openssl/ciphers/Encryption.java
+++ b/java/org/apache/tomcat/util/net/openssl/ciphers/Encryption.java
@@ -37,5 +37,5 @@ enum Encryption {
     FZA,
     RC4,
     RC2,
-    eNULL;
+    eNULL
 }

==================================================
KeyExchange.java
index f779df2b51..466828acb6 100644
--- a/java/org/apache/tomcat/util/net/openssl/ciphers/EncryptionLevel.java
+++ b/java/org/apache/tomcat/util/net/openssl/ciphers/EncryptionLevel.java
@@ -24,5 +24,5 @@ enum EncryptionLevel {
     LOW,
     MEDIUM,
     HIGH,
-    FIPS;
+    FIPS
 }

==================================================
MessageDigest.java
index 70ab0b74c5..945b63d58d 100644
--- a/java/org/apache/tomcat/util/net/openssl/ciphers/KeyExchange.java
+++ b/java/org/apache/tomcat/util/net/openssl/ciphers/KeyExchange.java
@@ -32,5 +32,5 @@ enum KeyExchange {
     SRP   /* SSL_kSRP   - SRP */,
     RSAPSK,
     ECDHEPSK,
-    DHEPSK;
+    DHEPSK
 }

==================================================
TestCoyoteOutputStream.java
index 718a0029f2..967930afc3 100644
--- a/java/org/apache/tomcat/util/net/openssl/ciphers/MessageDigest.java
+++ b/java/org/apache/tomcat/util/net/openssl/ciphers/MessageDigest.java
@@ -24,5 +24,5 @@ enum MessageDigest {
     GOST89MAC,
     SHA256,
     SHA384,
-    AEAD;
+    AEAD
 }

==================================================
TestSendFile.java
index ff04e4791c..5e4d6d8796 100644
--- a/test/org/apache/catalina/connector/TestCoyoteOutputStream.java
+++ b/test/org/apache/catalina/connector/TestCoyoteOutputStream.java
@@ -116,7 +116,7 @@ public class TestCoyoteOutputStream extends TomcatBaseTest {
         int rc = getUrl("http://localhost:" + getPort() + "/", bc, null, null);
         Assert.assertEquals(HttpServletResponse.SC_OK, rc);
         File file = new File("test/org/apache/catalina/connector/test_content.txt");
-        try (RandomAccessFile raf = new RandomAccessFile(file, "r");) {
+        try (RandomAccessFile raf = new RandomAccessFile(file, "r")) {
             ByteChunk expected = new ByteChunk();
             expected.append(raf.getChannel().map(MapMode.READ_ONLY, 0, file.length()));
             Assert.assertTrue(expected.equals(bc));
@@ -284,7 +284,7 @@ public class TestCoyoteOutputStream extends TomcatBaseTest {
                 throws ServletException, IOException {
             CoyoteOutputStream os = (CoyoteOutputStream) resp.getOutputStream();
             File file = new File("test/org/apache/catalina/connector/test_content.txt");
-            try (RandomAccessFile raf = new RandomAccessFile(file, "r");) {
+            try (RandomAccessFile raf = new RandomAccessFile(file, "r")) {
                 os.write(raf.getChannel().map(MapMode.READ_ONLY, 0, file.length()));
             }
         }

==================================================
TestVirtualContext.java
index ec3ea99873..8428c5c8f9 100644
--- a/test/org/apache/catalina/connector/TestSendFile.java
+++ b/test/org/apache/catalina/connector/TestSendFile.java
@@ -96,7 +96,7 @@ public class TestSendFile extends TomcatBaseTest {
     public File generateFile(String dir, String suffix, int size) throws IOException {
         String name = "testSendFile-" + System.currentTimeMillis() + suffix + ".txt";
         File f = new File(dir, name);
-        try (FileWriter fw = new FileWriter(f, false); BufferedWriter w = new BufferedWriter(fw);) {
+        try (FileWriter fw = new FileWriter(f, false); BufferedWriter w = new BufferedWriter(fw)) {
             int defSize = 8192;
             while (size > 0) {
                 int bytes = Math.min(size, defSize);

==================================================
TestDefaultServlet.java
index 603ebe1698..1a1e982be5 100644
--- a/test/org/apache/catalina/loader/TestVirtualContext.java
+++ b/test/org/apache/catalina/loader/TestVirtualContext.java
@@ -270,7 +270,7 @@ public class TestVirtualContext extends TomcatBaseTest {
                 MyAnnotatedServlet.class.getSimpleName() + ".class");
                 FileOutputStream annotatedServletClassOutputStream = new FileOutputStream(new File(
                         targetPackageForAnnotatedClass, MyAnnotatedServlet.class.getSimpleName()
-                                + ".class"));) {
+                                + ".class"))) {
             IOUtils.copy(annotatedServletClassInputStream, annotatedServletClassOutputStream);
         }
 

==================================================
TestWebRuleSet.java
index f05831e65c..077f43a94d 100644
--- a/test/org/apache/catalina/servlets/TestDefaultServlet.java
+++ b/test/org/apache/catalina/servlets/TestDefaultServlet.java
@@ -456,7 +456,7 @@ public class TestDefaultServlet extends TomcatBaseTest {
 
         File webxml = new File(appDir, "WEB-INF/web.xml");
         try (FileOutputStream fos = new FileOutputStream(webxml);
-                Writer w = new OutputStreamWriter(fos, "UTF-8");) {
+                Writer w = new OutputStreamWriter(fos, "UTF-8")) {
             w.write("<?xml version='1.0' encoding='UTF-8'?>\n"
                     + "<web-app xmlns='http://java.sun.com/xml/ns/j2ee' "
                     + " xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'"
@@ -538,7 +538,7 @@ public class TestDefaultServlet extends TomcatBaseTest {
 
         File webxml = new File(appDir, "WEB-INF/web.xml");
         try (FileOutputStream fos = new FileOutputStream(webxml);
-                Writer w = new OutputStreamWriter(fos, "UTF-8");) {
+                Writer w = new OutputStreamWriter(fos, "UTF-8")) {
             w.write("<?xml version='1.0' encoding='UTF-8'?>\n"
                     + "<web-app xmlns='http://java.sun.com/xml/ns/j2ee' "
                     + " xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'"

==================================================
TestWsServerContainer.java
index a825f48ba8..541b0ba1ca 100644
--- a/test/org/apache/tomcat/util/descriptor/web/TestWebRuleSet.java
+++ b/test/org/apache/tomcat/util/descriptor/web/TestWebRuleSet.java
@@ -139,7 +139,7 @@ public class TestWebRuleSet {
 
         boolean result = true;
 
-        try (InputStream is = new FileInputStream(f);) {
+        try (InputStream is = new FileInputStream(f)) {
             d.parse(is);
         } catch (Exception e) {
             if (expected) {

==================================================
