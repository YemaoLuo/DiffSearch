5c372d081a52cbb5c2ce36729859e014042b436a
==================================================
Silence the remaining Eclipse warnings in Jasper
==================================================
Mark Emlyn
==================================================
Wed Nov 7 12:38:14 2012 +0000
==================================================
ELFunctionMapper.java
Silence the remaining Eclipse warnings in Jasper

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1406589 13f79535-47bb-0310-9956-ffa450edef68



==================================================
JspDocumentParser.java
index 4cb50b7068..93450379c8 100644
--- a/java/org/apache/jasper/compiler/ELFunctionMapper.java
+++ b/java/org/apache/jasper/compiler/ELFunctionMapper.java
@@ -59,8 +59,10 @@ public class ELFunctionMapper {
         String ds = map.ds.toString();
         if (ds.length() > 0) {
             Node root = page.getRoot();
-            new Node.Declaration(map.ss.toString(), null, root);
-            new Node.Declaration("static {\n" + ds + "}\n", null, root);
+            @SuppressWarnings("unused")
+            Node unused = new Node.Declaration(map.ss.toString(), null, root);
+            unused = new Node.Declaration(
+                    "static {\n" + ds + "}\n", null, root);
         }
     }
 

==================================================
Parser.java
index 0240d24196..b3094a45b4 100644
--- a/java/org/apache/jasper/compiler/JspDocumentParser.java
+++ b/java/org/apache/jasper/compiler/JspDocumentParser.java
@@ -488,7 +488,9 @@ class JspDocumentParser
 
         if (tagDependentNesting > 0) {
             if (charBuffer.length() > 0) {
-                new Node.TemplateText(charBuffer.toString(), startMark, current);
+                @SuppressWarnings("unused")
+                Node unused = new Node.TemplateText(
+                        charBuffer.toString(), startMark, current);
             }
             startMark = new Mark(ctxt, path, locator.getLineNumber(),
                                  locator.getColumnNumber());
@@ -517,10 +519,9 @@ class JspDocumentParser
                 if ((lastCh == '$' || lastCh == '#') && ch == '{') {
                     elType = lastCh;
                     if (ttext.size() > 0) {
-                        new Node.TemplateText(
-                            ttext.toString(),
-                            startMark,
-                            current);
+                        @SuppressWarnings("unused")
+                        Node unused = new Node.TemplateText(
+                                ttext.toString(), startMark, current);
                         ttext = new CharArrayWriter();
                         //We subtract two from the column number to
                         //account for the '[$,#]{' that we've already parsed
@@ -553,10 +554,10 @@ class JspDocumentParser
                             continue;
                         }
                         if (ch == '}') {
-                            new Node.ELExpression((char) elType,
-                                ttext.toString(),
-                                startMark,
-                                current);
+                            @SuppressWarnings("unused")
+                            Node unused = new Node.ELExpression(
+                                    (char) elType, ttext.toString(),
+                                    startMark, current);
                             ttext = new CharArrayWriter();
                             startMark = new Mark(ctxt, path, line, column);
                             break;
@@ -589,7 +590,9 @@ class JspDocumentParser
                 ttext.write(lastCh);
             }
             if (ttext.size() > 0) {
-                new Node.TemplateText(ttext.toString(), startMark, current);
+                @SuppressWarnings("unused")
+                Node unused = new Node.TemplateText(
+                        ttext.toString(), startMark, current);
             }
         }
         startMark = new Mark(ctxt, path, locator.getLineNumber(),
@@ -698,13 +701,11 @@ class JspDocumentParser
 
         // ignore comments in the DTD
         if (!inDTD) {
-            startMark =
-                new Mark(
-                    ctxt,
-                    path,
-                    locator.getLineNumber(),
+            startMark = new Mark(ctxt, path, locator.getLineNumber(),
                     locator.getColumnNumber());
-            new Node.Comment(new String(buf, offset, len), startMark, current);
+            @SuppressWarnings("unused")
+            Node unused = new Node.Comment(
+                    new String(buf, offset, len), startMark, current);
         }
     }
 

==================================================
