31af7090ea1339b811befdeac091fdab81628dd1
==================================================
Fix some more deprecation warnings when building with Java 9.
==================================================
Mark Thomas
==================================================
Thu Oct 5 12:51:53 2017 +0000
==================================================
ClassLoaderLogManager.java
Fix some more deprecation warnings when building with Java 9.
Use of Class.newInstance() in o.a.juli

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811200 13f79535-47bb-0310-9956-ffa450edef68



==================================================
FileHandler.java
index ef2b3f17bd..b90cad8b30 100644
--- a/java/org/apache/juli/ClassLoaderLogManager.java
+++ b/java/org/apache/juli/ClassLoaderLogManager.java
@@ -578,8 +578,8 @@ public class ClassLoaderLogManager extends LogManager {
                 }
                 try {
                     this.prefix.set(prefix);
-                    Handler handler =
-                        (Handler) classLoader.loadClass(handlerClassName).newInstance();
+                    Handler handler = (Handler) classLoader.loadClass(
+                            handlerClassName).getDeclaredConstructor().newInstance();
                     // The specification strongly implies all configuration should be done
                     // during the creation of the handler object.
                     // This includes setting level, filter, formatter and encoding.

==================================================
DirectJDKLog.java
index b0f25e6848..bc73051ab8 100644
--- a/java/org/apache/juli/FileHandler.java
+++ b/java/org/apache/juli/FileHandler.java
@@ -424,7 +424,7 @@ public class FileHandler extends Handler {
         String filterName = getProperty(className + ".filter", null);
         if (filterName != null) {
             try {
-                setFilter((Filter) cl.loadClass(filterName).newInstance());
+                setFilter((Filter) cl.loadClass(filterName).getDeclaredConstructor().newInstance());
             } catch (Exception e) {
                 // Ignore
             }
@@ -434,7 +434,8 @@ public class FileHandler extends Handler {
         String formatterName = getProperty(className + ".formatter", null);
         if (formatterName != null) {
             try {
-                setFormatter((Formatter) cl.loadClass(formatterName).newInstance());
+                setFormatter((Formatter) cl.loadClass(
+                        formatterName).getDeclaredConstructor().newInstance());
             } catch (Exception e) {
                 // Ignore and fallback to defaults
                 setFormatter(new OneLineFormatter());

==================================================
