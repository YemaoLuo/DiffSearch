99a763dccf26f91f9a8b19afb27bbd139feed768
==================================================
Extract SkipResult to a separate class.
==================================================
Mark Emlyn
==================================================
Mon Sep 1 18:25:01 2014 +0000
==================================================
AcceptLanguage.java
Extract SkipResult to a separate class.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1621861 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Authorization.java
index 46c4e92a2d..dd8de7fbf5 100644
--- a/java/org/apache/tomcat/util/http/parser/AcceptLanguage.java
+++ b/java/org/apache/tomcat/util/http/parser/AcceptLanguage.java
@@ -63,8 +63,8 @@ public class AcceptLanguage {
 
             // See if a quality has been provided
             double quality = 1;
-            HttpParser.SkipResult lookForSemiColon = HttpParser.skipConstant(input, ";");
-            if (lookForSemiColon == HttpParser.SkipResult.FOUND) {
+            SkipResult lookForSemiColon = HttpParser.skipConstant(input, ";");
+            if (lookForSemiColon == SkipResult.FOUND) {
                 quality = HttpParser.readWeight(input, ',');
             }
 

==================================================
HttpParser.java
index 865b2f82f9..a9ea0cb772 100644
--- a/java/org/apache/tomcat/util/http/parser/Authorization.java
+++ b/java/org/apache/tomcat/util/http/parser/Authorization.java
@@ -78,7 +78,7 @@ public class Authorization {
 
         Map<String,String> result = new HashMap<>();
 
-        if (HttpParser.skipConstant(input, "Digest") != HttpParser.SkipResult.FOUND) {
+        if (HttpParser.skipConstant(input, "Digest") != SkipResult.FOUND) {
             return null;
         }
         // All field names are valid tokens
@@ -87,7 +87,7 @@ public class Authorization {
             return null;
         }
         while (!field.equals("")) {
-            if (HttpParser.skipConstant(input, "=") != HttpParser.SkipResult.FOUND) {
+            if (HttpParser.skipConstant(input, "=") != SkipResult.FOUND) {
                 return null;
             }
             String value;
@@ -127,7 +127,7 @@ public class Authorization {
             }
             result.put(field, value);
 
-            if (HttpParser.skipConstant(input, ",") == HttpParser.SkipResult.NOT_FOUND) {
+            if (HttpParser.skipConstant(input, ",") == SkipResult.NOT_FOUND) {
                 return null;
             }
             field = HttpParser.readToken(input);

==================================================
MediaType.java
index 54959ecd73..bf05cdb561 100644
--- a/java/org/apache/tomcat/util/http/parser/HttpParser.java
+++ b/java/org/apache/tomcat/util/http/parser/HttpParser.java
@@ -398,11 +398,4 @@ public class HttpParser {
             return SkipResult.FOUND;
         }
     }
-
-
-    static enum SkipResult {
-        FOUND,
-        NOT_FOUND,
-        EOF
-    }
 }

==================================================
SkipResult.java
index 91638dd516..9bacef2d19 100644
--- a/java/org/apache/tomcat/util/http/parser/MediaType.java
+++ b/java/org/apache/tomcat/util/http/parser/MediaType.java
@@ -138,7 +138,7 @@ public class MediaType {
             return null;
         }
 
-        if (HttpParser.skipConstant(input, "/") == HttpParser.SkipResult.NOT_FOUND) {
+        if (HttpParser.skipConstant(input, "/") == SkipResult.NOT_FOUND) {
             return null;
         }
 
@@ -150,15 +150,15 @@ public class MediaType {
 
         LinkedHashMap<String,String> parameters = new LinkedHashMap<>();
 
-        HttpParser.SkipResult lookForSemiColon = HttpParser.skipConstant(input, ";");
-        if (lookForSemiColon == HttpParser.SkipResult.NOT_FOUND) {
+        SkipResult lookForSemiColon = HttpParser.skipConstant(input, ";");
+        if (lookForSemiColon == SkipResult.NOT_FOUND) {
             return null;
         }
-        while (lookForSemiColon == HttpParser.SkipResult.FOUND) {
+        while (lookForSemiColon == SkipResult.FOUND) {
             String attribute = HttpParser.readToken(input);
 
             String value = "";
-            if (HttpParser.skipConstant(input, "=") == HttpParser.SkipResult.FOUND) {
+            if (HttpParser.skipConstant(input, "=") == SkipResult.FOUND) {
                 value = HttpParser.readTokenOrQuotedString(input, true);
             }
 
@@ -167,7 +167,7 @@ public class MediaType {
             }
 
             lookForSemiColon = HttpParser.skipConstant(input, ";");
-            if (lookForSemiColon == HttpParser.SkipResult.NOT_FOUND) {
+            if (lookForSemiColon == SkipResult.NOT_FOUND) {
                 return null;
             }
         }

==================================================
