1d899df35f6d807f75c60e72f168dd7b7ad218ab
==================================================
Correctly implement the section 3.2.1 test, add a new one and then fix the bug they highlight.
==================================================
Mark Thomas
==================================================
Tue Jun 2 12:58:37 2015 +0000
==================================================
UpgradeProtocol.java
Correctly implement the section 3.2.1 test, add a new one and then fix the bug they highlight.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1683096 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http11Processor.java
index 1de9fb4732..edcf443e6b 100644
--- a/java/org/apache/coyote/UpgradeProtocol.java
+++ b/java/org/apache/coyote/UpgradeProtocol.java
@@ -77,4 +77,17 @@ public interface UpgradeProtocol {
      * @return An instance of the HTTP upgrade handler for this protocol
      */
     public InternalHttpUpgradeHandler getInteralUpgradeHandler(Adapter adapter, Request request);
+
+
+    /**
+     * Allows the implementation to examine the request and accept or reject it
+     * based on what it finds.
+     *
+     * @param request The request that included an upgrade header for this
+     *                protocol
+     *
+     * @return <code>true</code> if the request is accepted, otherwise
+     *         <code>false</code>
+     */
+    public boolean accept(Request request);
 }

==================================================
Http2Protocol.java
index 521e84ddee..f9f17e7dd9 100644
--- a/java/org/apache/coyote/http11/Http11Processor.java
+++ b/java/org/apache/coyote/http11/Http11Processor.java
@@ -1035,14 +1035,16 @@ public class Http11Processor extends AbstractProcessor {
 
                 UpgradeProtocol upgradeProtocol = httpUpgradeProtocols.get(requestedProtocol);
                 if (upgradeProtocol != null) {
-                    // TODO Figure out how to handle request bodies at this
-                    // point.
-
-                    InternalHttpUpgradeHandler upgradeHandler =
-                            upgradeProtocol.getInteralUpgradeHandler(
-                                    getAdapter(), cloneRequest(request));
-                    action(ActionCode.UPGRADE, upgradeHandler);
-                    return SocketState.UPGRADING;
+                    if (upgradeProtocol.accept(request)) {
+                        // TODO Figure out how to handle request bodies at this
+                        // point.
+
+                        InternalHttpUpgradeHandler upgradeHandler =
+                                upgradeProtocol.getInteralUpgradeHandler(
+                                        getAdapter(), cloneRequest(request));
+                        action(ActionCode.UPGRADE, upgradeHandler);
+                        return SocketState.UPGRADING;
+                    }
                 }
             }
 

==================================================
TestHttp2Section_3_2_1.java
index 2c025c5164..1f323c02d5 100644
--- a/java/org/apache/coyote/http2/Http2Protocol.java
+++ b/java/org/apache/coyote/http2/Http2Protocol.java
@@ -17,6 +17,7 @@
 package org.apache.coyote.http2;
 
 import java.nio.charset.StandardCharsets;
+import java.util.Enumeration;
 
 import org.apache.coyote.Adapter;
 import org.apache.coyote.Processor;
@@ -77,6 +78,23 @@ public class Http2Protocol implements UpgradeProtocol {
     }
 
 
+    @Override
+    public boolean accept(Request request) {
+        // Should only be one HTTP2-Settings header
+        Enumeration<String> headers = request.getMimeHeaders().values("HTTP2-Settings");
+        int count = 0;
+        while (headers.hasMoreElements()) {
+            count++;
+            headers.nextElement();
+        }
+        if (count != 1) {
+            return false;
+        }
+
+        return true;
+    }
+
+
     public long getReadTimeout() {
         return readTimeout;
     }

==================================================
