6268221efbcd7c73466a0b69a2a3ba3f3fe8e71d
==================================================
Don't duplicate storage of maxKeepAliveRequests in the Processor
==================================================
Mark Thomas
==================================================
Wed Dec 14 11:04:12 2016 +0000
==================================================
AbstractHttp11Protocol.java
Don't duplicate storage of maxKeepAliveRequests in the Processor

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1774169 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http11Processor.java
index 3bbca9ab18..a960bdf12d 100644
--- a/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
+++ b/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
@@ -390,6 +390,13 @@ public abstract class AbstractHttp11Protocol<S> extends AbstractProtocol<S> {
     public int getMaxKeepAliveRequests() {
         return getEndpoint().getMaxKeepAliveRequests();
     }
+    /**
+     * Set the maximum number of Keep-Alive requests to allow.
+     * This is to safeguard from DoS attacks. Setting to a negative
+     * value disables the limit.
+     *
+     * @param mkar The new maximum number of Keep-Alive requests allowed
+     */
     public void setMaxKeepAliveRequests(int mkar) {
         getEndpoint().setMaxKeepAliveRequests(mkar);
     }
@@ -641,7 +648,6 @@ public abstract class AbstractHttp11Protocol<S> extends AbstractProtocol<S> {
     protected Processor createProcessor() {
         Http11Processor processor = new Http11Processor(this);
         processor.setAdapter(getAdapter());
-        processor.setMaxKeepAliveRequests(getMaxKeepAliveRequests());
         processor.setConnectionUploadTimeout(getConnectionUploadTimeout());
         processor.setDisableUploadTimeout(getDisableUploadTimeout());
         processor.setCompressionMinSize(getCompressionMinSize());

==================================================
