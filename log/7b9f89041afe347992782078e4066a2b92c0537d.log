7b9f89041afe347992782078e4066a2b92c0537d
==================================================
Javadoc fixes.
==================================================
Remy Maucherat
==================================================
Mon Jan 18 23:07:45 2016 +0000
==================================================
ContextHandler.java
Javadoc fixes.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1725382 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ContextService.java
index cfab02fe72..8c303f8470 100644
--- a/java/org/apache/tomcat/util/descriptor/web/ContextHandler.java
+++ b/java/org/apache/tomcat/util/descriptor/web/ContextHandler.java
@@ -73,6 +73,8 @@ public class ContextHandler extends ResourceBase {
 
     /**
      * Set a configured property.
+     * @param name The property name
+     * @param value The property value
      */
     public void setProperty(String name, String value) {
         this.setProperty(name, (Object) value);

==================================================
ContextTransaction.java
index fec36a6807..45c6ccb1ab 100644
--- a/java/org/apache/tomcat/util/descriptor/web/ContextService.java
+++ b/java/org/apache/tomcat/util/descriptor/web/ContextService.java
@@ -165,7 +165,7 @@ public class ContextService extends ResourceBase {
      * Declares a client dependency on the container to resolving a Service Endpoint Interface
      * to a WSDL port. It optionally associates the Service Endpoint Interface with a
      * particular port-component.
-     *
+     * @return the endpoint names
      */
     public Iterator<String> getServiceendpoints() {
         return this.listProperties();

==================================================
ErrorPage.java
index eee52ddb66..ee1f605964 100644
--- a/java/org/apache/tomcat/util/descriptor/web/ContextTransaction.java
+++ b/java/org/apache/tomcat/util/descriptor/web/ContextTransaction.java
@@ -42,7 +42,8 @@ public class ContextTransaction implements Serializable {
     private final HashMap<String, Object> properties = new HashMap<>();
 
     /**
-     * Return a configured property.
+     * @param name The property name
+     * @return a configured property.
      */
     public Object getProperty(String name) {
         return properties.get(name);
@@ -50,13 +51,16 @@ public class ContextTransaction implements Serializable {
 
     /**
      * Set a configured property.
+     * @param name The property name
+     * @param value The property value
      */
     public void setProperty(String name, Object value) {
         properties.put(name, value);
     }
 
     /**
-     * remove a configured property.
+     * Remove a configured property.
+     * @param name The property name
      */
     public void removeProperty(String name) {
         properties.remove(name);
@@ -64,6 +68,7 @@ public class ContextTransaction implements Serializable {
 
     /**
      * List properties.
+     * @return the property names iterator
      */
     public Iterator<String> listProperties() {
         return properties.keySet().iterator();

==================================================
FilterMap.java
index b8d14cbddf..10c6baedb8 100644
--- a/java/org/apache/tomcat/util/descriptor/web/ErrorPage.java
+++ b/java/org/apache/tomcat/util/descriptor/web/ErrorPage.java
@@ -57,7 +57,7 @@ public class ErrorPage implements Serializable {
 
 
     /**
-     * Return the error code.
+     * @return the error code.
      */
     public int getErrorCode() {
 
@@ -95,7 +95,7 @@ public class ErrorPage implements Serializable {
 
 
     /**
-     * Return the exception type.
+     * @return the exception type.
      */
     public String getExceptionType() {
 
@@ -117,7 +117,7 @@ public class ErrorPage implements Serializable {
 
 
     /**
-     * Return the location.
+     * @return the location.
      */
     public String getLocation() {
 

==================================================
ResourceBase.java
index 75fa8130b2..8e58f8340d 100644
--- a/java/org/apache/tomcat/util/descriptor/web/FilterMap.java
+++ b/java/org/apache/tomcat/util/descriptor/web/FilterMap.java
@@ -138,9 +138,10 @@ public class FilterMap implements Serializable {
     }
 
     /**
-     *
      * This method will be used to set the current state of the FilterMap
      * representing the state of when filters should be applied.
+     * @param dispatcherString the dispatcher type which should
+     *  match this filter
      */
     public void setDispatcher(String dispatcherString) {
         String dispatcher = dispatcherString.toUpperCase(Locale.ENGLISH);

==================================================
SecurityCollection.java
index 231c50772d..0d447b1b28 100644
--- a/java/org/apache/tomcat/util/descriptor/web/ResourceBase.java
+++ b/java/org/apache/tomcat/util/descriptor/web/ResourceBase.java
@@ -86,7 +86,8 @@ public class ResourceBase implements Serializable, Injectable {
     private final HashMap<String, Object> properties = new HashMap<>();
 
     /**
-     * Return a configured property.
+     * @param name The property name
+     * @return a configured property.
      */
     public Object getProperty(String name) {
         return properties.get(name);
@@ -94,6 +95,8 @@ public class ResourceBase implements Serializable, Injectable {
 
     /**
      * Set a configured property.
+     * @param name The property name
+     * @param value The property value
      */
     public void setProperty(String name, Object value) {
         properties.put(name, value);
@@ -101,6 +104,7 @@ public class ResourceBase implements Serializable, Injectable {
 
     /**
      * Remove a configured property.
+     * @param name The property name
      */
     public void removeProperty(String name) {
         properties.remove(name);
@@ -108,6 +112,7 @@ public class ResourceBase implements Serializable, Injectable {
 
     /**
      * List properties.
+     * @return the property names iterator
      */
     public Iterator<String> listProperties() {
         return properties.keySet().iterator();

==================================================
SecurityConstraint.java
index f213a46fa5..4867435cac 100644
--- a/java/org/apache/tomcat/util/descriptor/web/SecurityCollection.java
+++ b/java/org/apache/tomcat/util/descriptor/web/SecurityCollection.java
@@ -108,7 +108,7 @@ public class SecurityCollection implements Serializable {
 
 
     /**
-     * Return the description of this web resource collection.
+     * @return the description of this web resource collection.
      */
     public String getDescription() {
 
@@ -130,7 +130,7 @@ public class SecurityCollection implements Serializable {
 
 
     /**
-     * Return the name of this web resource collection.
+     * @return the name of this web resource collection.
      */
     public String getName() {
 
@@ -152,7 +152,7 @@ public class SecurityCollection implements Serializable {
 
 
     /**
-     * Return if this constraint was defined in a deployment descriptor.
+     * @return if this constraint was defined in a deployment descriptor.
      */
     public boolean isFromDescriptor() {
         return isFromDescriptor;
@@ -161,6 +161,7 @@ public class SecurityCollection implements Serializable {
 
     /**
      * Set if this constraint was defined in a deployment descriptor.
+     * @param isFromDescriptor <code>true</code> was declared in a descriptor 
      */
     public void setFromDescriptor(boolean isFromDescriptor) {
         this.isFromDescriptor = isFromDescriptor;
@@ -173,6 +174,7 @@ public class SecurityCollection implements Serializable {
     /**
      * Add an HTTP request method to be explicitly part of this web resource
      * collection.
+     * @param method The method
      */
     public void addMethod(String method) {
 
@@ -190,6 +192,7 @@ public class SecurityCollection implements Serializable {
     /**
      * Add an HTTP request method to the methods explicitly excluded from this
      * web resource collection.
+     * @param method The method
      */
     public void addOmittedMethod(String method) {
         if (method == null)
@@ -203,6 +206,7 @@ public class SecurityCollection implements Serializable {
 
     /**
      * Add a URL pattern to be part of this web resource collection.
+     * @param pattern The pattern
      */
     public void addPattern(String pattern) {
 
@@ -221,10 +225,10 @@ public class SecurityCollection implements Serializable {
 
 
     /**
-     * Return <code>true</code> if the specified HTTP request method is
-     * part of this web resource collection.
-     *
+     * Check if the collection applies to the specified method.
      * @param method Request method to check
+     * @return <code>true</code> if the specified HTTP request method is
+     * part of this web resource collection.
      */
     public boolean findMethod(String method) {
 
@@ -248,7 +252,7 @@ public class SecurityCollection implements Serializable {
 
 
     /**
-     * Return the set of HTTP request methods that are part of this web
+     * @return the set of HTTP request methods that are part of this web
      * resource collection, or a zero-length array if no methods have been
      * explicitly included.
      */
@@ -260,7 +264,7 @@ public class SecurityCollection implements Serializable {
 
 
     /**
-     * Return the set of HTTP request methods that are explicitly excluded from
+     * @return the set of HTTP request methods that are explicitly excluded from
      * this web resource collection, or a zero-length array if no request
      * methods are excluded.
      */
@@ -275,6 +279,7 @@ public class SecurityCollection implements Serializable {
      * Is the specified pattern part of this web resource collection?
      *
      * @param pattern Pattern to be compared
+     * @return <code>true</code> if the pattern is part of the collection
      */
     public boolean findPattern(String pattern) {
 
@@ -288,7 +293,7 @@ public class SecurityCollection implements Serializable {
 
 
     /**
-     * Return the set of URL patterns that are part of this web resource
+     * @return the set of URL patterns that are part of this web resource
      * collection.  If none have been specified, a zero-length array is
      * returned.
      */

==================================================
ServletDef.java
index 3c1a2485f2..e8a36db30e 100644
--- a/java/org/apache/tomcat/util/descriptor/web/SecurityConstraint.java
+++ b/java/org/apache/tomcat/util/descriptor/web/SecurityConstraint.java
@@ -131,6 +131,7 @@ public class SecurityConstraint implements Serializable {
     /**
      * Was the "all roles" wildcard included in this authentication
      * constraint?
+     * @return <code>true</code> if all roles
      */
     public boolean getAllRoles() {
 
@@ -142,6 +143,7 @@ public class SecurityConstraint implements Serializable {
     /**
      * Was the "all authenticated users" wildcard included in this
      * authentication constraint?
+     * @return <code>true</code> if all authenticated users
      */
     public boolean getAuthenticatedUsers() {
         return this.authenticatedUsers;
@@ -151,6 +153,7 @@ public class SecurityConstraint implements Serializable {
     /**
      * Return the authorization constraint present flag for this security
      * constraint.
+     * @return <code>true</code> if this needs authorization
      */
     public boolean getAuthConstraint() {
 
@@ -162,6 +165,7 @@ public class SecurityConstraint implements Serializable {
     /**
      * Set the authorization constraint present flag for this security
      * constraint.
+     * @param authConstraint The new value
      */
     public void setAuthConstraint(boolean authConstraint) {
 
@@ -171,7 +175,7 @@ public class SecurityConstraint implements Serializable {
 
 
     /**
-     * Return the display name of this security constraint.
+     * @return the display name of this security constraint.
      */
     public String getDisplayName() {
 
@@ -182,6 +186,7 @@ public class SecurityConstraint implements Serializable {
 
     /**
      * Set the display name of this security constraint.
+     * @param displayName The new value
      */
     public void setDisplayName(String displayName) {
 
@@ -192,6 +197,7 @@ public class SecurityConstraint implements Serializable {
 
     /**
      * Return the user data constraint for this security constraint.
+     * @return the user constraint
      */
     public String getUserConstraint() {
 
@@ -285,10 +291,11 @@ public class SecurityConstraint implements Serializable {
 
 
     /**
-     * Return <code>true</code> if the specified role is permitted access to
-     * the resources protected by this security constraint.
+     * Check a role.
      *
      * @param role Role name to be checked
+     * @return <code>true</code> if the specified role is permitted access to
+     * the resources protected by this security constraint.
      */
     public boolean findAuthRole(String role) {
 
@@ -308,6 +315,7 @@ public class SecurityConstraint implements Serializable {
      * protected by this security constraint.  If none have been defined,
      * a zero-length array is returned (which implies that all authenticated
      * users are permitted access).
+     * @return the roles array
      */
     public String[] findAuthRoles() {
 
@@ -321,6 +329,7 @@ public class SecurityConstraint implements Serializable {
      * otherwise, return <code>null</code>.
      *
      * @param name Web resource collection name to return
+     * @return the collection
      */
     public SecurityCollection findCollection(String name) {
 
@@ -339,6 +348,7 @@ public class SecurityConstraint implements Serializable {
      * Return all of the web resource collections protected by this
      * security constraint.  If there are none, a zero-length array is
      * returned.
+     * @return the collections array
      */
     public SecurityCollection[] findCollections() {
 
@@ -348,11 +358,11 @@ public class SecurityConstraint implements Serializable {
 
 
     /**
-     * Return <code>true</code> if the specified context-relative URI (and
-     * associated HTTP method) are protected by this security constraint.
-     *
+     * Check if the contraint applies to a URI and method.
      * @param uri Context-relative URI to check
      * @param method Request method being used
+     * @return <code>true</code> if the specified context-relative URI (and
+     * associated HTTP method) are protected by this security constraint.
      */
     public boolean included(String uri, String method) {
 

==================================================
WebRuleSet.java
index 4883ae7c89..aa1adf0286 100644
--- a/java/org/apache/tomcat/util/descriptor/web/ServletDef.java
+++ b/java/org/apache/tomcat/util/descriptor/web/ServletDef.java
@@ -212,6 +212,7 @@ public class ServletDef implements Serializable {
     /**
      * Add a security-role-ref to the set of security-role-refs associated
      * with this servlet.
+     * @param securityRoleRef The security role
      */
     public void addSecurityRoleRef(SecurityRoleRef securityRoleRef) {
         securityRoleRefs.add(securityRoleRef);

==================================================
WebXml.java
index a21db87417..70ef763063 100644
--- a/java/org/apache/tomcat/util/descriptor/web/WebRuleSet.java
+++ b/java/org/apache/tomcat/util/descriptor/web/WebRuleSet.java
@@ -118,6 +118,7 @@ public class WebRuleSet extends RuleSetBase {
     /**
      * Construct an instance of this <code>RuleSet</code> with the default
      * matching pattern prefix.
+     * @param fragment <code>true</code> if this is a web fragment
      */
     public WebRuleSet(boolean fragment) {
 
@@ -132,6 +133,7 @@ public class WebRuleSet extends RuleSetBase {
      *
      * @param prefix Prefix for matching pattern rules (including the
      *  trailing slash character)
+     * @param fragment <code>true</code> if this is a web fragment
      */
     public WebRuleSet(String prefix, boolean fragment) {
 

==================================================
