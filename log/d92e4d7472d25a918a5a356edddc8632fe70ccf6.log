d92e4d7472d25a918a5a356edddc8632fe70ccf6
==================================================
Fix various exceptions that prevented one of the TCK web applications from starting
==================================================
Mark Emlyn
==================================================
Sun Mar 21 21:22:54 2010 +0000
==================================================
ApplicationContext.java
Fix various exceptions that prevented one of the TCK web applications from starting

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@925901 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ApplicationFilterRegistration.java
index 2036e436ad..28973c3ed7 100644
--- a/java/org/apache/catalina/core/ApplicationContext.java
+++ b/java/org/apache/catalina/core/ApplicationContext.java
@@ -907,6 +907,8 @@ public class ApplicationContext
         // a name
         if (filterDef == null) {
             filterDef = new FilterDef();
+            filterDef.setFilterName(filterName);
+            context.addFilterDef(filterDef);
         } else {
             if (filterDef.getFilterName() != null &&
                     filterDef.getFilterClass() != null) {
@@ -914,7 +916,6 @@ public class ApplicationContext
             }
         }
 
-        // Name must already be set
         if (filter == null) {
             filterDef.setFilterClass(filterClass);
         } else {
@@ -1036,6 +1037,8 @@ public class ApplicationContext
         // a name
         if (wrapper == null) {
             wrapper = context.createWrapper();
+            wrapper.setName(servletName);
+            context.addChild(wrapper);
         } else {
             if (wrapper.getName() != null &&
                     wrapper.getServletClass() != null) {
@@ -1043,7 +1046,6 @@ public class ApplicationContext
             }
         }
 
-        // Name must already be set
         if (servlet == null) {
             wrapper.setServletClass(servletClass);
         } else {
@@ -1176,6 +1178,9 @@ public class ApplicationContext
 
     @Override
     public boolean setInitParameter(String name, String value) {
+        
+        mergeParameters();
+        
         if (parameters.containsKey(name)) {
             return false;
         }

==================================================
ApplicationServletRegistration.java
index abf6117d0d..260d300d7a 100644
--- a/java/org/apache/catalina/core/ApplicationFilterRegistration.java
+++ b/java/org/apache/catalina/core/ApplicationFilterRegistration.java
@@ -58,6 +58,8 @@ public class ApplicationFilterRegistration
 
         FilterMap filterMap = new FilterMap();
         
+        filterMap.setFilterName(filterDef.getFilterName());
+        
         if (dispatcherTypes != null) {
             for (DispatcherType dispatcherType : dispatcherTypes) {
                 filterMap.setDispatcher(dispatcherType.name());

==================================================
StandardContext.java
index 04337da95e..f49edb1651 100644
--- a/java/org/apache/catalina/core/ApplicationServletRegistration.java
+++ b/java/org/apache/catalina/core/ApplicationServletRegistration.java
@@ -19,13 +19,11 @@ package org.apache.catalina.core;
 
 import java.util.Collection;
 import java.util.Collections;
-import java.util.Enumeration;
 import java.util.HashSet;
 import java.util.Map;
 import java.util.Set;
 
 import javax.servlet.MultipartConfigElement;
-import javax.servlet.ServletConfig;
 import javax.servlet.ServletRegistration;
 import javax.servlet.ServletSecurityElement;
 
@@ -62,21 +60,19 @@ public class ApplicationServletRegistration
 
     @Override
     public String getInitParameter(String name) {
-        return wrapper.getServlet().getServletConfig().getInitParameter(name);
+        return wrapper.findInitParameter(name);
     }
 
     @Override
     public Map<String, String> getInitParameters() {
         ParameterMap<String,String> result = new ParameterMap<String,String>();
-        ServletConfig servletConfig =  wrapper.getServlet().getServletConfig(); 
-        Enumeration<String> parameterNames =
-            servletConfig.getInitParameterNames();
         
-        while (parameterNames.hasMoreElements()) {
-            String parameterName = parameterNames.nextElement();
-            result.put(parameterName,
-                    servletConfig.getInitParameter(parameterName));
+        String[] parameterNames = wrapper.findInitParameters();
+        
+        for (String parameterName : parameterNames) {
+            result.put(parameterName, wrapper.findInitParameter(parameterName));
         }
+
         result.setLocked(true);
         return result;
     }

==================================================
