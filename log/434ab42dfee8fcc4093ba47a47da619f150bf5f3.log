434ab42dfee8fcc4093ba47a47da619f150bf5f3
==================================================
Refactoring
==================================================
Mark Emlyn
==================================================
Thu Jul 29 12:10:51 2010 +0000
==================================================
ClusterManagerBase.java
Refactoring
Move propertyChange() implementation to ManagerBase to reduce code duplication

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@980418 13f79535-47bb-0310-9956-ffa450edef68



==================================================
DeltaManager.java
index c5f5af0941..b7d3dc15e2 100644
--- a/java/org/apache/catalina/ha/session/ClusterManagerBase.java
+++ b/java/org/apache/catalina/ha/session/ClusterManagerBase.java
@@ -18,7 +18,6 @@
 package org.apache.catalina.ha.session;
 
 import org.apache.catalina.ha.ClusterManager;
-import java.beans.PropertyChangeListener;
 import org.apache.catalina.session.ManagerBase;
 import org.apache.catalina.Loader;
 import java.io.ByteArrayInputStream;
@@ -32,8 +31,8 @@ import org.apache.catalina.Container;
  * @version $Id$
  */
 
-public abstract class ClusterManagerBase extends ManagerBase implements PropertyChangeListener, ClusterManager{
-    
+public abstract class ClusterManagerBase extends ManagerBase
+        implements ClusterManager{
 
     public static ClassLoader[] getClassLoaders(Container container) {
         Loader loader = null;

==================================================
ManagerBase.java
index 66693b6b12..4a2b23e233 100644
--- a/java/org/apache/catalina/session/LocalStrings_ja.properties
+++ b/java/org/apache/catalina/session/LocalStrings_ja.properties
@@ -33,12 +33,12 @@ managerBase.getting=\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0 {0} \u306e\u30e1\u30c3\
 managerBase.gotten=\u30e1\u30c3\u30bb\u30fc\u30b8\u30c0\u30a4\u30b8\u30a7\u30b9\u30c8\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u53d6\u5f97\u3092\u5b8c\u4e86\u3057\u307e\u3057\u305f
 managerBase.random=\u30af\u30e9\u30b9 {0} \u306e\u4e71\u6570\u767a\u751f\u5668\u306e\u521d\u671f\u5316\u306e\u4f8b\u5916\u3067\u3059
 managerBase.seeding=\u4e71\u6570\u767a\u751f\u5668\u30af\u30e9\u30b9 {0} \u306e\u30b7\u30fc\u30c9\u3092\u751f\u6210\u3057\u3066\u3044\u307e\u3059
+managerBase.sessionTimeout=\u7121\u52b9\u306a\u30bb\u30c3\u30b7\u30e7\u30f3\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u8a2d\u5b9a\u3067\u3059 {0}
 serverSession.value.iae=null\u5024\u3067\u3059
 standardManager.expireException=processsExpire: \u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u7d42\u4e86\u51e6\u7406\u4e2d\u306e\u4f8b\u5916\u3067\u3059
 standardManager.loading={0} \u304b\u3089\u6301\u7d9a\u3055\u308c\u305f\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u30ed\u30fc\u30c9\u3057\u3066\u3044\u307e\u3059
 standardManager.loading.cnfe=\u6301\u7d9a\u3055\u308c\u305f\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u30ed\u30fc\u30c9\u4e2d\u306bClassNotFoundException\u304c\u767a\u751f\u3057\u307e\u3057\u305f: {0}
 standardManager.loading.ioe=\u6301\u7d9a\u3055\u308c\u305f\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u30ed\u30fc\u30c9\u4e2d\u306eIOException\u3067\u3059: {0}
-standardManager.sessionTimeout=\u7121\u52b9\u306a\u30bb\u30c3\u30b7\u30e7\u30f3\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u8a2d\u5b9a\u3067\u3059 {0}
 standardManager.unloading=\u6301\u7d9a\u3055\u308c\u305f\u30bb\u30c3\u30b7\u30e7\u30f3\u3092 {0} \u306b\u4fdd\u5b58\u3057\u307e\u3059
 standardManager.unloading.ioe=\u6301\u7d9a\u3055\u308c\u305f\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u4fdd\u5b58\u4e2d\u306eIOException\u3067\u3059: {0}
 standardManager.managerLoad=\u6c38\u7d9a\u8a18\u61b6\u88c5\u7f6e\u304b\u3089\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u30ed\u30fc\u30c9\u4e2d\u306e\u4f8b\u5916\u3067\u3059

==================================================
PersistentManagerBase.java
index 53e0fae2dd..c3d20c285d 100644
--- a/java/org/apache/catalina/session/ManagerBase.java
+++ b/java/org/apache/catalina/session/ManagerBase.java
@@ -19,6 +19,7 @@
 package org.apache.catalina.session;
 
 
+import java.beans.PropertyChangeEvent;
 import java.beans.PropertyChangeListener;
 import java.beans.PropertyChangeSupport;
 import java.io.DataInputStream;
@@ -64,7 +65,7 @@ import org.apache.juli.logging.LogFactory;
  */
 
 public abstract class ManagerBase extends LifecycleMBeanBase
-        implements Manager {
+        implements Manager, PropertyChangeListener {
 
     private final Log log = LogFactory.getLog(ManagerBase.class); // must not be static
 
@@ -1335,4 +1336,29 @@ public abstract class ManagerBase extends LifecycleMBeanBase
         return MBeanUtils.getDomain(container);
     }
 
+    // ----------------------------------------- PropertyChangeListener Methods
+
+    /**
+     * Process property change events from our associated Context.
+     * 
+     * @param event
+     *            The property change event that has occurred
+     */
+    public void propertyChange(PropertyChangeEvent event) {
+
+        // Validate the source of this event
+        if (!(event.getSource() instanceof Context))
+            return;
+        
+        // Process a relevant property change
+        if (event.getPropertyName().equals("sessionTimeout")) {
+            try {
+                setMaxInactiveInterval(
+                        ((Integer) event.getNewValue()).intValue() * 60);
+            } catch (NumberFormatException e) {
+                log.error(sm.getString("managerBase.sessionTimeout",
+                        event.getNewValue()));
+            }
+        }
+    }
 }

==================================================
StandardManager.java
index 14324fe5c6..832ddf2a72 100644
--- a/java/org/apache/catalina/session/PersistentManagerBase.java
+++ b/java/org/apache/catalina/session/PersistentManagerBase.java
@@ -18,8 +18,6 @@
 
 package org.apache.catalina.session;
 
-import java.beans.PropertyChangeEvent;
-import java.beans.PropertyChangeListener;
 import java.io.IOException;
 import java.security.AccessController;
 import java.security.PrivilegedActionException;
@@ -53,8 +51,7 @@ import org.apache.juli.logging.LogFactory;
  * @version $Id$
  */
 
-public abstract class PersistentManagerBase extends ManagerBase
-    implements PropertyChangeListener {
+public abstract class PersistentManagerBase extends ManagerBase {
 
     private static final Log log = LogFactory.getLog(PersistentManagerBase.class);
 
@@ -907,34 +904,6 @@ public abstract class PersistentManagerBase extends ManagerBase
     }
 
 
-    // ----------------------------------------- PropertyChangeListener Methods
-
-
-    /**
-     * Process property change events from our associated Context.
-     *
-     * @param event The property change event that has occurred
-     */
-    public void propertyChange(PropertyChangeEvent event) {
-
-        // Validate the source of this event
-        if (!(event.getSource() instanceof Context))
-            return;
-
-        // Process a relevant property change
-        if (event.getPropertyName().equals("sessionTimeout")) {
-            try {
-                setMaxInactiveInterval
-                    ( ((Integer) event.getNewValue()).intValue()*60 );
-            } catch (NumberFormatException e) {
-                log.error(sm.getString("standardManager.sessionTimeout",
-                                 event.getNewValue().toString()));
-            }
-        }
-
-    }
-
-
     // ------------------------------------------------------ Protected Methods
 
 

==================================================
