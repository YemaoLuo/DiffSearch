3b363530ac5e080c681d72a2e9d3fddee90bbc18
==================================================
No need to instantiate a new driver instance each time, simply reuse the one we got
==================================================
Filip Hanik
==================================================
Tue Jan 4 18:37:44 2011 +0000
==================================================
PooledConnection.java
No need to instantiate a new driver instance each time, simply reuse the one we got


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1055137 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AlternateUsernameTest.java
index 526bc60c0f..4f622fe612 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/PooledConnection.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/PooledConnection.java
@@ -74,7 +74,7 @@ public class PooledConnection {
     /**
      * If using a XAConnection underneath.
      */
-    private volatile javax.sql.XAConnection xaConnection;
+    protected volatile javax.sql.XAConnection xaConnection;
     /**
      * When we track abandon traces, this string holds the thread dump
      */
@@ -117,6 +117,8 @@ public class PooledConnection {
     
     private volatile boolean suspect = false;
     
+    private java.sql.Driver driver = null;
+    
     /**
      * Constructor
      * @param prop - pool properties
@@ -229,10 +231,12 @@ public class PooledConnection {
         }
     }
     protected void connectUsingDriver() throws SQLException {
-        java.sql.Driver driver = null;
+        
         try {
-            driver = (java.sql.Driver) Class.forName(poolProperties.getDriverClassName(),
-                                                     true, PooledConnection.class.getClassLoader()).newInstance();
+            if (driver==null)
+                driver = (java.sql.Driver) Class.forName(poolProperties.getDriverClassName(),
+                                                         true, PooledConnection.class.getClassLoader()
+                                                         ).newInstance();
         } catch (java.lang.Exception cn) {
             if (log.isDebugEnabled()) {
                 log.debug("Unable to instantiate JDBC driver.", cn);

==================================================
