4071a0dbc4396c9158c0ef3660ca368f2ab93837
==================================================
Avoid possibly problematic default package name
==================================================
remm remm@apache.org
==================================================
Fri Jul 17 14:16:27 2020 +0200
==================================================
Catalina.java
Avoid possibly problematic default package name

Allow future configuration if needed.


==================================================
ContextConfig.java
index 2c3f994495..2f83d7e237 100644
--- a/java/org/apache/catalina/startup/Catalina.java
+++ b/java/org/apache/catalina/startup/Catalina.java
@@ -158,6 +158,12 @@ public class Catalina {
     protected String generatedCodeLocationParameter = null;
 
 
+    /**
+     * Top package name for generated source.
+     */
+    protected String generatedCodePackage = "catalinaembedded";
+
+
     /**
      * Use generated code as a replacement for configuration files.
      */
@@ -224,6 +230,16 @@ public class Catalina {
     }
 
 
+    public String getGeneratedCodePackage() {
+        return this.generatedCodePackage;
+    }
+
+
+    public void setGeneratedCodePackage(String generatedCodePackage) {
+        this.generatedCodePackage = generatedCodePackage;
+    }
+
+
     /**
      * @return <code>true</code> if an exception should be thrown if an error
      * occurs during server init
@@ -574,7 +590,7 @@ public class Catalina {
             } else {
                 generatedCodeLocation = new File(Bootstrap.getCatalinaHomeFile(), "work");
             }
-            serverXmlLocation = new File(generatedCodeLocation, "catalina");
+            serverXmlLocation = new File(generatedCodeLocation, generatedCodePackage);
             if (!serverXmlLocation.isDirectory() && !serverXmlLocation.mkdirs()) {
                 log.warn(sm.getString("catalina.generatedCodeLocationError", generatedCodeLocation.getAbsolutePath()));
                 // Disable code generation
@@ -584,7 +600,7 @@ public class Catalina {
 
         ServerXml serverXml = null;
         if (useGeneratedCode) {
-            String xmlClassName = start ? "catalina.ServerXml" : "catalina.ServerXmlStop";
+            String xmlClassName = start ? generatedCodePackage + ".ServerXml" : generatedCodePackage + ".ServerXmlStop";
             try {
                 serverXml = (ServerXml) Catalina.class.getClassLoader().loadClass(xmlClassName).newInstance();
             } catch (Exception e) {
@@ -909,7 +925,7 @@ public class Catalina {
 
     protected void generateClassHeader(Digester digester, boolean start) {
         StringBuilder code = digester.getGeneratedCode();
-        code.append("package catalina;").append(System.lineSeparator());
+        code.append("package ").append(generatedCodePackage).append(";").append(System.lineSeparator());
         code.append("public class ServerXml");
         if (!start) {
             code.append("Stop");

==================================================
