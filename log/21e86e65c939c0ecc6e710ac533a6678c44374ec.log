21e86e65c939c0ecc6e710ac533a6678c44374ec
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=48147
==================================================
Mark Emlyn
==================================================
Tue Nov 17 22:27:58 2009 +0000
==================================================
NamingEntry.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=48147
Correct JavaDoc typos. Patch provided by gingyang.xu

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@881575 13f79535-47bb-0310-9956-ffa450edef68



==================================================
NamingService.java
index 9ef8ac5823..060688662a 100644
--- a/java/org/apache/naming/NamingEntry.java
+++ b/java/org/apache/naming/NamingEntry.java
@@ -53,7 +53,7 @@ public class NamingEntry {
 
 
     /**
-     * The type instance variable is used to avoid unsing RTTI when doing
+     * The type instance variable is used to avoid using RTTI when doing
      * lookups.
      */
     public int type;

==================================================
NamingServiceMBean.java
index 4e1348bac0..b26911a20e 100644
--- a/java/org/apache/naming/NamingService.java
+++ b/java/org/apache/naming/NamingService.java
@@ -93,7 +93,7 @@ public final class NamingService
     
     
     /**
-     * Retruns the Catalina component name.
+     * Returns the Catalina component name.
      */
     public String getName() {
         return NAME;

==================================================
ResourceRef.java
index 936c8a8d6f..12d312b2f7 100644
--- a/java/org/apache/naming/NamingServiceMBean.java
+++ b/java/org/apache/naming/NamingServiceMBean.java
@@ -59,7 +59,7 @@ public interface NamingServiceMBean {
     
     
     /**
-     * Retruns the JNDI component name.
+     * Returns the JNDI component name.
      */
     public String getName();
     

==================================================
EjbFactory.java
index 922ded0385..687b86d237 100644
--- a/java/org/apache/naming/ResourceRef.java
+++ b/java/org/apache/naming/ResourceRef.java
@@ -72,7 +72,7 @@ public class ResourceRef
      * 
      * @param resourceClass Resource class
      * @param scope Resource scope
-     * @param auth Resource authetication
+     * @param auth Resource authentication
      */
     public ResourceRef(String resourceClass, String description, 
                        String scope, String auth) {
@@ -85,7 +85,7 @@ public class ResourceRef
      * 
      * @param resourceClass Resource class
      * @param scope Resource scope
-     * @param auth Resource authetication
+     * @param auth Resource authentication
      */
     public ResourceRef(String resourceClass, String description, 
                        String scope, String auth, String factory,

==================================================
OpenEjbFactory.java
index 5a890e24a7..fec62500cc 100644
--- a/java/org/apache/naming/factory/EjbFactory.java
+++ b/java/org/apache/naming/factory/EjbFactory.java
@@ -55,7 +55,7 @@ public class EjbFactory
 
 
     /**
-     * Crete a new EJB instance.
+     * Create a new EJB instance.
      * 
      * @param obj The reference object describing the DataSource
      */

==================================================
ResourceEnvFactory.java
index ad7db6e841..4f615e3052 100644
--- a/java/org/apache/naming/factory/OpenEjbFactory.java
+++ b/java/org/apache/naming/factory/OpenEjbFactory.java
@@ -50,7 +50,7 @@ public class OpenEjbFactory implements ObjectFactory {
 
 
     /**
-     * Crete a new EJB instance using OpenEJB.
+     * Create a new EJB instance using OpenEJB.
      * 
      * @param obj The reference object describing the DataSource
      */

==================================================
TransactionFactory.java
index 2ebec4b2bc..31a2cdf74f 100644
--- a/java/org/apache/naming/factory/ResourceEnvFactory.java
+++ b/java/org/apache/naming/factory/ResourceEnvFactory.java
@@ -54,7 +54,7 @@ public class ResourceEnvFactory
 
 
     /**
-     * Crete a new Resource env instance.
+     * Create a new Resource env instance.
      * 
      * @param obj The reference object describing the DataSource
      */

==================================================
BaseDirContext.java
index fefd36aec6..f933cf3e13 100644
--- a/java/org/apache/naming/factory/TransactionFactory.java
+++ b/java/org/apache/naming/factory/TransactionFactory.java
@@ -28,7 +28,7 @@ import javax.naming.spi.ObjectFactory;
 import org.apache.naming.TransactionRef;
 
 /**
- * Object factory for User trasactions.
+ * Object factory for User transactions.
  * 
  * @author Remy Maucherat
  * @version $Revision$ $Date$
@@ -54,7 +54,7 @@ public class TransactionFactory
 
 
     /**
-     * Crete a new User transaction instance.
+     * Create a new User transaction instance.
      * 
      * @param obj The reference object describing the DataSource
      */

==================================================
DirContextURLConnection.java
index f96418ff25..f95c3de130 100644
--- a/java/org/apache/naming/resources/BaseDirContext.java
+++ b/java/org/apache/naming/resources/BaseDirContext.java
@@ -1342,7 +1342,7 @@ public abstract class BaseDirContext implements DirContext {
      * occurrence of "{i}". If null, equivalent to an empty array.
      * @param cons the search controls that control the search. If null, the 
      * default search controls are used (equivalent to (new SearchControls())).
-     * @return an enumeration of SearchResults of the objects that satisy the 
+     * @return an enumeration of SearchResults of the objects that satisfy the 
      * filter; never null
      * @exception ArrayIndexOutOfBoundsException if filterExpr contains {i} 
      * expressions where i is outside the bounds of the array filterArgs

==================================================
FileDirContext.java
index 0421db7263..a1e1f0712e 100644
--- a/java/org/apache/naming/resources/DirContextURLConnection.java
+++ b/java/org/apache/naming/resources/DirContextURLConnection.java
@@ -121,7 +121,7 @@ public class DirContextURLConnection
     
     
     /**
-     * Connect to the DirContext, and retrive the bound object, as well as
+     * Connect to the DirContext, and retrieve the bound object, as well as
      * its attributes. If no object is bound with the name specified in the
      * URL, then an IOException is thrown.
      * 

==================================================
ProxyDirContext.java
index 7b43e6ed18..4da3169aa0 100644
--- a/java/org/apache/naming/resources/FileDirContext.java
+++ b/java/org/apache/naming/resources/FileDirContext.java
@@ -750,7 +750,7 @@ public class FileDirContext extends BaseDirContext {
      * occurrence of "{i}". If null, equivalent to an empty array.
      * @param cons the search controls that control the search. If null, the
      * default search controls are used (equivalent to (new SearchControls())).
-     * @return an enumeration of SearchResults of the objects that satisy the
+     * @return an enumeration of SearchResults of the objects that satisfy the
      * filter; never null
      * @exception ArrayIndexOutOfBoundsException if filterExpr contains {i}
      * expressions where i is outside the bounds of the array filterArgs
@@ -847,7 +847,7 @@ public class FileDirContext extends BaseDirContext {
      * List the resources which are members of a collection.
      *
      * @param file Collection
-     * @return Vector containg NamingEntry objects
+     * @return Vector containing NamingEntry objects
      */
     protected ArrayList<NamingEntry> list(File file) {
 

==================================================
Resource.java
index 78ff5741dc..e649b310cb 100644
--- a/java/org/apache/naming/resources/ProxyDirContext.java
+++ b/java/org/apache/naming/resources/ProxyDirContext.java
@@ -1544,7 +1544,7 @@ public class ProxyDirContext implements DirContext {
             }
         }
 
-        // Retriving object
+        // Retrieving object
         if ((exists) && (entry.resource == null) && (entry.context == null)) {
             try {
                 Object object = dirContext.lookup(name);

==================================================
ResourceCache.java
index 7dc44dc3a5..4a6cec51ce 100644
--- a/java/org/apache/naming/resources/Resource.java
+++ b/java/org/apache/naming/resources/Resource.java
@@ -22,7 +22,7 @@ import java.io.ByteArrayInputStream;
 import java.io.IOException;
 
 /**
- * Encapsultes the contents of a resource.
+ * Encapsulates the contents of a resource.
  * 
  * @author <a href="mailto:remm@apache.org">Remy Maucherat</a>
  * @version $Revision$

==================================================
WARDirContext.java
index 126c6170de..a3abc3da21 100644
--- a/java/org/apache/naming/resources/ResourceCache.java
+++ b/java/org/apache/naming/resources/ResourceCache.java
@@ -339,7 +339,7 @@ public class ResourceCache {
 
 
     /**
-     * Find a map elemnt given its name in a sorted array of map elements.
+     * Find a map element given its name in a sorted array of map elements.
      * This will return the index for the closest inferior or equal item in the
      * given array.
      */

==================================================
