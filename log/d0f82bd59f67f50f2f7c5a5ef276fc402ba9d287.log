d0f82bd59f67f50f2f7c5a5ef276fc402ba9d287
==================================================
Pull up creation of Handler
==================================================
lihan lihan@apache.org
==================================================
Sun Sep 4 20:52:30 2022 +0800
==================================================
AbstractProtocol.java
Pull up creation of Handler



==================================================
AbstractAjpProtocol.java
index 449d662f54..e21f6b731e 100644
--- a/java/org/apache/coyote/AbstractProtocol.java
+++ b/java/org/apache/coyote/AbstractProtocol.java
@@ -97,6 +97,9 @@ public abstract class AbstractProtocol<S> implements ProtocolHandler,
 
     public AbstractProtocol(AbstractEndpoint<S,?> endpoint) {
         this.endpoint = endpoint;
+        ConnectionHandler<S> cHandler = new ConnectionHandler<>(this);
+        getEndpoint().setHandler(cHandler);
+        setHandler(cHandler);
         setConnectionLinger(Constants.DEFAULT_CONNECTION_LINGER);
         setTcpNoDelay(Constants.DEFAULT_TCP_NO_DELAY);
     }

==================================================
AbstractHttp11Protocol.java
index 93f0babc39..e822c29af9 100644
--- a/java/org/apache/coyote/ajp/AbstractAjpProtocol.java
+++ b/java/org/apache/coyote/ajp/AbstractAjpProtocol.java
@@ -51,9 +51,6 @@ public abstract class AbstractAjpProtocol<S> extends AbstractProtocol<S> {
         getEndpoint().setUseSendfile(false);
         // AJP listens on loopback by default
         getEndpoint().setAddress(InetAddress.getLoopbackAddress());
-        ConnectionHandler<S> cHandler = new ConnectionHandler<>(this);
-        setHandler(cHandler);
-        getEndpoint().setHandler(cHandler);
     }
 
 

==================================================
