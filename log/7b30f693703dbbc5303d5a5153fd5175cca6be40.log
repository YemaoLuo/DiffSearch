7b30f693703dbbc5303d5a5153fd5175cca6be40
==================================================
Replace calls to Thread.getId() with Thread.threadId()
==================================================
Mark Thomas
==================================================
Thu May 11 20:07:14 2023 +0100
==================================================
StuckThreadDetectionValve.java
Replace calls to Thread.getId() with Thread.threadId()


==================================================
Request.java
index 42b950d825..7b7ed36ca1 100644
--- a/java/org/apache/catalina/valves/StuckThreadDetectionValve.java
+++ b/java/org/apache/catalina/valves/StuckThreadDetectionValve.java
@@ -138,7 +138,7 @@ public class StuckThreadDetectionValve extends ValveBase {
             String msg = sm.getString("stuckThreadDetectionValve.notifyStuckThreadDetected",
                     monitoredThread.getThread().getName(), Long.valueOf(activeTime), monitoredThread.getStartTime(),
                     Integer.valueOf(numStuckThreads), monitoredThread.getRequestUri(), Integer.valueOf(threshold),
-                    String.valueOf(monitoredThread.getThread().getId()));
+                    String.valueOf(monitoredThread.getThread().threadId()));
             // msg += "\n" + getStackTraceAsString(trace);
             Throwable th = new Throwable();
             th.setStackTrace(monitoredThread.getThread().getStackTrace());
@@ -174,7 +174,7 @@ public class StuckThreadDetectionValve extends ValveBase {
         // GC'ing, as the reference is removed from the Map in the finally clause
 
         Thread currentThread = Thread.currentThread();
-        Long key = Long.valueOf(currentThread.getId());
+        Long key = Long.valueOf(currentThread.threadId());
         StringBuffer requestUrl = request.getRequestURL();
         if (request.getQueryString() != null) {
             requestUrl.append('?');
@@ -234,7 +234,7 @@ public class StuckThreadDetectionValve extends ValveBase {
         List<Long> idList = new ArrayList<>();
         for (MonitoredThread monitoredThread : activeThreads.values()) {
             if (monitoredThread.isMarkedAsStuck()) {
-                idList.add(Long.valueOf(monitoredThread.getThread().getId()));
+                idList.add(Long.valueOf(monitoredThread.getThread().threadId()));
             }
         }
 
@@ -348,7 +348,7 @@ public class StuckThreadDetectionValve extends ValveBase {
                     String msg = sm.getString("stuckThreadDetectionValve.notifyStuckThreadInterrupted",
                             this.getThread().getName(), Long.valueOf(getActiveTimeInMillis()), this.getStartTime(),
                             this.getRequestUri(), Long.valueOf(interruptThreadThreshold),
-                            String.valueOf(this.getThread().getId()));
+                            String.valueOf(this.getThread().threadId()));
                     Throwable th = new Throwable();
                     th.setStackTrace(this.getThread().getStackTrace());
                     log.warn(msg, th);
@@ -374,7 +374,7 @@ public class StuckThreadDetectionValve extends ValveBase {
 
         CompletedStuckThread(Thread thread, long totalActiveTime) {
             this.threadName = thread.getName();
-            this.threadId = thread.getId();
+            this.threadId = thread.threadId();
             this.totalActiveTime = totalActiveTime;
         }
 

==================================================
TestThreadNameCache.java
index dec9be5deb..af87b4dadf 100644
--- a/java/org/apache/coyote/Request.java
+++ b/java/org/apache/coyote/Request.java
@@ -736,12 +736,12 @@ public final class Request {
 
     public void setRequestThread() {
         Thread t = Thread.currentThread();
-        threadId = t.getId();
+        threadId = t.threadId();
         getRequestProcessor().setWorkerThreadName(t.getName());
     }
 
     public boolean isRequestThread() {
-        return Thread.currentThread().getId() == threadId;
+        return Thread.currentThread().threadId() == threadId;
     }
 
     // -------------------- Per-Request "notes" --------------------

==================================================
