effbf5e668eeb9200b74bec723de1b57c584168c
==================================================
Refactor generated code so tags require less code
==================================================
Mark Thomas
==================================================
Thu Jan 26 22:58:35 2017 +0000
==================================================
Generator.java
Refactor generated code so tags require less code

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1780488 13f79535-47bb-0310-9956-ffa450edef68



==================================================
JspRuntimeLibrary.java
index 58069706c9..dc0fe37340 100644
--- a/java/org/apache/jasper/compiler/Generator.java
+++ b/java/org/apache/jasper/compiler/Generator.java
@@ -2614,21 +2614,18 @@ class Generator {
             }
 
             // Ensure clean-up takes place
+            // Use JspRuntimeLibrary to minimise code in _jspService()
             out.popIndent();
             out.printil("} finally {");
             out.pushIndent();
+            out.printin("org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(");
+            out.print(tagHandlerVar);
+            out.print(", _jsp_getInstanceManager(), ");
             if (isPoolingEnabled && !(n.implementsJspIdConsumer())) {
-                out.printin("if (!");
                 out.print(tagHandlerVar);
-                out.println("_reused) {");
-                out.pushIndent();
-            }
-            out.printin(tagHandlerVar);
-            out.println(".release();");
-            writeDestroyInstance(tagHandlerVar);
-            if (isPoolingEnabled && !(n.implementsJspIdConsumer())) {
-                out.popIndent();
-                out.printil("}");
+                out.println("_reused);");
+            } else {
+                out.println("false);");
             }
             out.popIndent();
             out.printil("}");

==================================================
TagHandlerPool.java
index fe4bbcf7dd..6f0086bd62 100644
--- a/java/org/apache/jasper/runtime/JspRuntimeLibrary.java
+++ b/java/org/apache/jasper/runtime/JspRuntimeLibrary.java
@@ -32,9 +32,13 @@ import javax.servlet.http.HttpServletRequest;
 import javax.servlet.jsp.JspWriter;
 import javax.servlet.jsp.PageContext;
 import javax.servlet.jsp.tagext.BodyContent;
+import javax.servlet.jsp.tagext.Tag;
 
 import org.apache.jasper.JasperException;
 import org.apache.jasper.compiler.Localizer;
+import org.apache.juli.logging.Log;
+import org.apache.juli.logging.LogFactory;
+import org.apache.tomcat.InstanceManager;
 
 /**
  * Bunch of util methods that are used by code generated for useBean,
@@ -50,6 +54,8 @@ import org.apache.jasper.compiler.Localizer;
  */
 public class JspRuntimeLibrary {
 
+    private static final Log log = LogFactory.getLog(JspRuntimeLibrary.class);
+
     /**
      * Returns the value of the javax.servlet.error.exception request
      * attribute value, if present, otherwise the value of the
@@ -963,4 +969,31 @@ public class JspRuntimeLibrary {
         return false;
     }
 
+
+    public static void releaseTag(Tag tag, InstanceManager instanceManager, boolean reused) {
+        // Caller ensures pool is non-null if reuse is true
+        if (!reused) {
+            releaseTag(tag, instanceManager);
+        }
+    }
+
+
+    protected static void releaseTag(Tag tag, InstanceManager instanceManager) {
+        try {
+            tag.release();
+        } catch (Throwable t) {
+            ExceptionUtils.handleThrowable(t);
+            log.warn("Error processing release on tag instance of "
+                    + tag.getClass().getName(), t);
+        }
+        try {
+            instanceManager.destroyInstance(tag);
+        } catch (Exception e) {
+            Throwable t = ExceptionUtils.unwrapInvocationTargetException(e);
+            ExceptionUtils.handleThrowable(t);
+            log.warn("Error processing preDestroy on tag instance of "
+                    + tag.getClass().getName(), t);
+        }
+
+    }
 }

==================================================
