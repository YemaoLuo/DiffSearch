0336663a2da30123f07e707614ff27a67b0f26f3
==================================================
Make sure we favor the values from AjpMessage.processHeader. If the signature is invalid len can be any random number in that case
==================================================
Mladen Turk
==================================================
Thu Feb 18 16:44:57 2010 +0000
==================================================
AjpAprProcessor.java
Make sure we favor the values from AjpMessage.processHeader. If the signature is invalid len can be any random number in that case

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@911481 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AjpProcessor.java
index 5910ea936e..c51d4c4e5d 100644
--- a/java/org/apache/coyote/ajp/AjpAprProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpAprProcessor.java
@@ -1112,8 +1112,10 @@ public class AjpAprProcessor implements ActionHook {
 
         first = false;
         bodyMessage.reset();
-        readMessage(bodyMessage, false, false);
-
+        if (!readMessage(bodyMessage, false, false)) {
+            // Invalid message
+            return false;
+        }
         // No data received.
         if (bodyMessage.getLen() == 0) {
             // just the header
@@ -1182,11 +1184,21 @@ public class AjpAprProcessor implements ActionHook {
             read(headerLength);
         }
         inputBuffer.get(message.getBuffer(), 0, headerLength);
-        message.processHeader();
-        read(message.getLen());
-        inputBuffer.get(message.getBuffer(), headerLength, message.getLen());
-
-        return true;
+        int messageLength = message.processHeader();
+        if (messageLength < 0) {
+            // Invalid AJP header signature
+            // TODO: Throw some exception and close the connection to frontend.
+            return false;
+        }
+        else if (messageLength == 0) {
+            // Zero length message.
+            return true;
+        }
+        else {
+            read(messageLength);
+            inputBuffer.get(message.getBuffer(), headerLength, messageLength);
+            return true;
+        }
 
     }
 

==================================================
