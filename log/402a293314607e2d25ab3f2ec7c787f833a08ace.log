402a293314607e2d25ab3f2ec7c787f833a08ace
==================================================
Refactor to remove circular dependencies
==================================================
Mark Emlyn
==================================================
Fri Feb 3 12:10:32 2012 +0000
==================================================
Container.java
Refactor to remove circular dependencies

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1240108 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ContainerBase.java
index a0796b218d..3bb02ef951 100644
--- a/java/org/apache/catalina/Container.java
+++ b/java/org/apache/catalina/Container.java
@@ -160,6 +160,13 @@ public interface Container extends Lifecycle {
     public ObjectName getObjectName();
 
 
+    /**
+     * Obtain the domain under which this container will be / has been
+     * registered.
+     */
+    public String getDomain();
+
+
     /**
      * Calculate the key properties string to be added to an object's
      * {@link ObjectName} to indicate that it is associated with this container.

==================================================
StandardEngine.java
index 69556729fa..2c75001457 100644
--- a/java/org/apache/catalina/core/ContainerBase.java
+++ b/java/org/apache/catalina/core/ContainerBase.java
@@ -60,7 +60,6 @@ import org.apache.catalina.Valve;
 import org.apache.catalina.Wrapper;
 import org.apache.catalina.connector.Request;
 import org.apache.catalina.connector.Response;
-import org.apache.catalina.mbeans.MBeanUtils;
 import org.apache.catalina.util.ContextName;
 import org.apache.catalina.util.LifecycleMBeanBase;
 import org.apache.juli.logging.Log;
@@ -1407,7 +1406,13 @@ public abstract class ContainerBase extends LifecycleMBeanBase
 
     @Override
     protected String getDomainInternal() {
-        return MBeanUtils.getDomain(this);
+
+        Container p = this.getParent();
+        if (p == null) {
+            return null;
+        } else {
+            return p.getDomain();
+        }
     }
 
 

==================================================
StandardWrapper.java
index c0c984dacc..49d00eb9c6 100644
--- a/java/org/apache/catalina/core/StandardEngine.java
+++ b/java/org/apache/catalina/core/StandardEngine.java
@@ -374,6 +374,13 @@ public class StandardEngine extends ContainerBase implements Engine {
         return "type=Engine";
     }
 
+
+    @Override
+    protected String getDomainInternal() {
+        return getName();
+    }
+
+
     // ----------------------------------------------------------- Inner classes
     protected static final class NoopAccessLog implements AccessLog {
 

==================================================
WebappLoader.java
index 826af326ce..49f5ddf56d 100644
--- a/java/org/apache/catalina/core/StandardWrapper.java
+++ b/java/org/apache/catalina/core/StandardWrapper.java
@@ -57,7 +57,6 @@ import org.apache.catalina.InstanceListener;
 import org.apache.catalina.LifecycleException;
 import org.apache.catalina.LifecycleState;
 import org.apache.catalina.Wrapper;
-import org.apache.catalina.mbeans.MBeanUtils;
 import org.apache.catalina.security.SecurityUtil;
 import org.apache.catalina.util.InstanceSupport;
 import org.apache.juli.logging.Log;
@@ -1042,8 +1041,7 @@ public class StandardWrapper extends ContainerBase
         }
 
         if (isJspServlet) {
-            StringBuilder oname =
-                new StringBuilder(MBeanUtils.getDomain(getParent()));
+            StringBuilder oname = new StringBuilder(getDomain());
 
             oname.append(":type=JspMonitor,name=");
             oname.append(getName());

==================================================
RealmBase.java
index 9c7e98fa8f..9c1ccd74bd 100644
--- a/java/org/apache/catalina/loader/WebappLoader.java
+++ b/java/org/apache/catalina/loader/WebappLoader.java
@@ -14,8 +14,6 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-
-
 package org.apache.catalina.loader;
 
 
@@ -53,7 +51,6 @@ import org.apache.catalina.Lifecycle;
 import org.apache.catalina.LifecycleException;
 import org.apache.catalina.LifecycleState;
 import org.apache.catalina.Loader;
-import org.apache.catalina.mbeans.MBeanUtils;
 import org.apache.catalina.util.LifecycleMBeanBase;
 import org.apache.naming.resources.DirContextURLStreamHandler;
 import org.apache.naming.resources.DirContextURLStreamHandlerFactory;
@@ -583,8 +580,7 @@ public class WebappLoader extends LifecycleMBeanBase
             if (!contextName.startsWith("/")) {
                 contextName = "/" + contextName;
             }
-            ObjectName cloname = new ObjectName(
-                    MBeanUtils.getDomain(container) +
+            ObjectName cloname = new ObjectName(container.getDomain() +
                     ":type=WebappClassLoader,context=" + contextName +
                     ",host=" + container.getParent().getName());
             Registry.getRegistry(null, null)
@@ -632,8 +628,7 @@ public class WebappLoader extends LifecycleMBeanBase
             if (!contextName.startsWith("/")) {
                 contextName = "/" + contextName;
             }
-            ObjectName cloname = new ObjectName(
-                    MBeanUtils.getDomain(container) +
+            ObjectName cloname = new ObjectName(container.getDomain() +
                     ":type=WebappClassLoader,context=" + contextName +
                     ",host=" + container.getParent().getName());
             Registry.getRegistry(null, null).unregisterComponent(cloname);
@@ -1145,7 +1140,7 @@ public class WebappLoader extends LifecycleMBeanBase
 
     @Override
     protected String getDomainInternal() {
-        return MBeanUtils.getDomain(container);
+        return container.getDomain();
     }
 
 

==================================================
ManagerBase.java
index 31fdbac9cb..170253a9b5 100644
--- a/java/org/apache/catalina/realm/RealmBase.java
+++ b/java/org/apache/catalina/realm/RealmBase.java
@@ -14,8 +14,6 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-
-
 package org.apache.catalina.realm;
 
 
@@ -48,7 +46,6 @@ import org.apache.catalina.core.ApplicationSessionCookieConfig;
 import org.apache.catalina.deploy.LoginConfig;
 import org.apache.catalina.deploy.SecurityCollection;
 import org.apache.catalina.deploy.SecurityConstraint;
-import org.apache.catalina.mbeans.MBeanUtils;
 import org.apache.catalina.util.LifecycleMBeanBase;
 import org.apache.catalina.util.MD5Encoder;
 import org.apache.juli.logging.Log;
@@ -1320,7 +1317,7 @@ public abstract class RealmBase extends LifecycleMBeanBase implements Realm {
 
     @Override
     public String getDomainInternal() {
-        return MBeanUtils.getDomain(container);
+        return container.getDomain();
     }
 
     protected String realmPath = "/realm0";

==================================================
FailedContext.java
index c57ee26cb2..80c7335f33 100644
--- a/java/org/apache/catalina/session/ManagerBase.java
+++ b/java/org/apache/catalina/session/ManagerBase.java
@@ -14,8 +14,6 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-
-
 package org.apache.catalina.session;
 
 
@@ -41,7 +39,6 @@ import org.apache.catalina.Engine;
 import org.apache.catalina.LifecycleException;
 import org.apache.catalina.Manager;
 import org.apache.catalina.Session;
-import org.apache.catalina.mbeans.MBeanUtils;
 import org.apache.catalina.util.LifecycleMBeanBase;
 import org.apache.catalina.util.SessionIdGenerator;
 import org.apache.juli.logging.Log;
@@ -1256,7 +1253,7 @@ public abstract class ManagerBase extends LifecycleMBeanBase
 
     @Override
     public String getDomainInternal() {
-        return MBeanUtils.getDomain(container);
+        return container.getDomain();
     }
 
     // ----------------------------------------- PropertyChangeListener Methods

==================================================
ValveBase.java
index a31ccf7aec..68dd37abd4 100644
--- a/java/org/apache/catalina/startup/FailedContext.java
+++ b/java/org/apache/catalina/startup/FailedContext.java
@@ -53,7 +53,6 @@ import org.apache.catalina.deploy.FilterMap;
 import org.apache.catalina.deploy.LoginConfig;
 import org.apache.catalina.deploy.NamingResources;
 import org.apache.catalina.deploy.SecurityConstraint;
-import org.apache.catalina.mbeans.MBeanUtils;
 import org.apache.catalina.util.CharsetMapper;
 import org.apache.catalina.util.ContextName;
 import org.apache.catalina.util.LifecycleMBeanBase;
@@ -122,7 +121,14 @@ public class FailedContext extends LifecycleMBeanBase implements Context {
 
 
     @Override
-    protected String getDomainInternal() { return MBeanUtils.getDomain(this); }
+    protected String getDomainInternal() {
+        Container p = getParent();
+        if (p == null) {
+            return null;
+        } else {
+            return p.getDomain();
+        }
+    }
 
 
     @Override

==================================================
