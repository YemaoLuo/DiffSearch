71356119743d307a62f4c01305b3ec90831be88a
==================================================
Converted the tests to JUnit 4.
==================================================
Konstantin Kolinko
==================================================
Mon Jul 25 20:30:58 2011 +0000
==================================================
TestCompiler.java
Converted the tests to JUnit 4.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1150890 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestGenerator.java
index c3324c26e4..500d4c6cf6 100644
--- a/test/org/apache/jasper/compiler/TestCompiler.java
+++ b/test/org/apache/jasper/compiler/TestCompiler.java
@@ -22,12 +22,17 @@ import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 
+import static org.junit.Assert.assertTrue;
+
+import org.junit.Test;
+
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTest;
+import org.apache.catalina.startup.TomcatBaseTestJUnit4;
 import org.apache.tomcat.util.buf.ByteChunk;
 
-public class TestCompiler extends TomcatBaseTest {
-    
+public class TestCompiler extends TomcatBaseTestJUnit4 {
+
+    @Test
     public void testBug49726a() throws Exception {
         Tomcat tomcat = getTomcatInstance();
 
@@ -49,6 +54,7 @@ public class TestCompiler extends TomcatBaseTest {
         assertTrue(headers.get("Content-Type").get(0).startsWith("text/html"));
     }
 
+    @Test
     public void testBug49726b() throws Exception {
         Tomcat tomcat = getTomcatInstance();
 

==================================================
TestJspConfig.java
index 8478e7ec27..9e803627bf 100644
--- a/test/org/apache/jasper/compiler/TestGenerator.java
+++ b/test/org/apache/jasper/compiler/TestGenerator.java
@@ -30,13 +30,19 @@ import javax.servlet.jsp.tagext.TagExtraInfo;
 import javax.servlet.jsp.tagext.TagSupport;
 import javax.servlet.jsp.tagext.VariableInfo;
 
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertTrue;
+
+import org.junit.Test;
+
 import org.apache.catalina.core.StandardContext;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTest;
+import org.apache.catalina.startup.TomcatBaseTestJUnit4;
 import org.apache.tomcat.util.buf.ByteChunk;
 
-public class TestGenerator extends TomcatBaseTest {
-    
+public class TestGenerator extends TomcatBaseTestJUnit4 {
+
+    @Test
     public void testBug45015a() throws Exception {
         Tomcat tomcat = getTomcatInstance();
 
@@ -65,6 +71,7 @@ public class TestGenerator extends TomcatBaseTest {
         assertEcho(result, "09-hello world\"");
     }
 
+    @Test
     public void testBug45015b() throws Exception {
         Tomcat tomcat = getTomcatInstance();
 
@@ -81,6 +88,7 @@ public class TestGenerator extends TomcatBaseTest {
         assertEquals(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, rc);
     }
 
+    @Test
     public void testBug45015c() throws Exception {
         Tomcat tomcat = getTomcatInstance();
 
@@ -97,6 +105,7 @@ public class TestGenerator extends TomcatBaseTest {
         assertEquals(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, rc);
     }
 
+    @Test
     public void testBug48701Fail() throws Exception {
         Tomcat tomcat = getTomcatInstance();
 
@@ -118,18 +127,22 @@ public class TestGenerator extends TomcatBaseTest {
         assertEquals(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, rc);
     }
 
+    @Test
     public void testBug48701UseBean() throws Exception {
         testBug48701("bug48nnn/bug48701-UseBean.jsp");
     }
-    
+
+    @Test
     public void testBug48701VariableInfo() throws Exception {
         testBug48701("bug48nnn/bug48701-VI.jsp");
     }
-    
+
+    @Test
     public void testBug48701TagVariableInfoNameGiven() throws Exception {
         testBug48701("bug48nnn/bug48701-TVI-NG.jsp");
     }
-    
+
+    @Test
     public void testBug48701TagVariableInfoNameFromAttribute() throws Exception {
         testBug48701("bug48nnn/bug48701-TVI-NFA.jsp");
     }
@@ -200,6 +213,7 @@ public class TestGenerator extends TomcatBaseTest {
         }
     }
 
+    @Test
     public void testBug49799() throws Exception {
 
         String[] expected = { "<p style=\"color:red\">00-Red</p>",

==================================================
TestJspDocumentParser.java
index cab6f85f70..18ea8c3a70 100644
--- a/test/org/apache/jasper/compiler/TestJspConfig.java
+++ b/test/org/apache/jasper/compiler/TestJspConfig.java
@@ -19,12 +19,17 @@ package org.apache.jasper.compiler;
 
 import java.io.File;
 
+import static org.junit.Assert.assertTrue;
+
+import org.junit.Test;
+
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTest;
+import org.apache.catalina.startup.TomcatBaseTestJUnit4;
 import org.apache.tomcat.util.buf.ByteChunk;
 
-public class TestJspConfig extends TomcatBaseTest {
+public class TestJspConfig extends TomcatBaseTestJUnit4 {
 
+    @Test
     public void testServlet23NoEL() throws Exception {
         Tomcat tomcat = getTomcatInstance();
 
@@ -44,6 +49,7 @@ public class TestJspConfig extends TomcatBaseTest {
         assertTrue(result.indexOf("<p>01-#{'hello world'}</p>") > 0);
     }
 
+    @Test
     public void testServlet24NoEL() throws Exception {
         Tomcat tomcat = getTomcatInstance();
 
@@ -63,6 +69,7 @@ public class TestJspConfig extends TomcatBaseTest {
         assertTrue(result.indexOf("<p>01-#{'hello world'}</p>") > 0);
     }
 
+    @Test
     public void testServlet25NoEL() throws Exception {
         Tomcat tomcat = getTomcatInstance();
 
@@ -81,6 +88,7 @@ public class TestJspConfig extends TomcatBaseTest {
         assertTrue(result.indexOf("<p>00-hello world</p>") > 0);
     }
 
+    @Test
     public void testServlet30NoEL() throws Exception {
         Tomcat tomcat = getTomcatInstance();
 

==================================================
TestParser.java
index 0049df0c23..e03c5fb4be 100644
--- a/test/org/apache/jasper/compiler/TestJspDocumentParser.java
+++ b/test/org/apache/jasper/compiler/TestJspDocumentParser.java
@@ -22,12 +22,18 @@ import java.io.IOException;
 
 import javax.servlet.http.HttpServletResponse;
 
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertNull;
+
+import org.junit.Test;
+
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTest;
+import org.apache.catalina.startup.TomcatBaseTestJUnit4;
 import org.apache.tomcat.util.buf.ByteChunk;
 
-public class TestJspDocumentParser extends TomcatBaseTest {
-    
+public class TestJspDocumentParser extends TomcatBaseTestJUnit4 {
+
+    @Test
     public void testBug47977() throws Exception {
         Tomcat tomcat = getTomcatInstance();
 
@@ -43,7 +49,8 @@ public class TestJspDocumentParser extends TomcatBaseTest {
         
         assertEquals(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, rc);
     }
-    
+
+    @Test
     public void testBug48827() throws Exception {
         Tomcat tomcat = getTomcatInstance();
 

==================================================
TestParserNoStrictWhitespace.java
index 87489157b2..06f1888093 100644
--- a/test/org/apache/jasper/compiler/TestParser.java
+++ b/test/org/apache/jasper/compiler/TestParser.java
@@ -21,16 +21,22 @@ import java.io.File;
 import java.util.HashMap;
 import java.util.List;
 
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertTrue;
+
+import org.junit.Test;
+
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTest;
+import org.apache.catalina.startup.TomcatBaseTestJUnit4;
 import org.apache.tomcat.util.buf.ByteChunk;
 
 /**
  * Tests are duplicated in {@link TestParserNoStrictWhitespace} with the strict
  * whitespace parsing disabled.
  */
-public class TestParser extends TomcatBaseTest {
-    
+public class TestParser extends TomcatBaseTestJUnit4 {
+
+    @Test
     public void testBug48627() throws Exception {
         Tomcat tomcat = getTomcatInstance();
 
@@ -51,6 +57,7 @@ public class TestParser extends TomcatBaseTest {
         assertEcho(result, "01-\\");
     }
 
+    @Test
     public void testBug48668a() throws Exception {
         Tomcat tomcat = getTomcatInstance();
 
@@ -96,6 +103,7 @@ public class TestParser extends TomcatBaseTest {
         assertEcho(result, "53-Hello #{'foo}");
     }
 
+    @Test
     public void testBug48668b() throws Exception {
         Tomcat tomcat = getTomcatInstance();
 
@@ -112,6 +120,7 @@ public class TestParser extends TomcatBaseTest {
         assertEcho(result, "01-Hello world</p>#{foo2");
     }
 
+    @Test
     public void testBug49297NoSpaceStrict() throws Exception {
         Tomcat tomcat = getTomcatInstance();
 
@@ -127,7 +136,8 @@ public class TestParser extends TomcatBaseTest {
 
         assertEquals(500, sc);
     }
-    
+
+    @Test
     public void testBug49297DuplicateAttr() throws Exception {
         Tomcat tomcat = getTomcatInstance();
 
@@ -143,7 +153,8 @@ public class TestParser extends TomcatBaseTest {
 
         assertEquals(500, sc);
     }
-    
+
+    @Test
     public void testBug49297MultipleImport1() throws Exception {
 
         Tomcat tomcat = getTomcatInstance();
@@ -163,6 +174,7 @@ public class TestParser extends TomcatBaseTest {
         assertEcho(res.toString(), "OK");
     }
 
+    @Test
     public void testBug49297MultipleImport2() throws Exception {
 
         Tomcat tomcat = getTomcatInstance();
@@ -182,6 +194,7 @@ public class TestParser extends TomcatBaseTest {
         assertEcho(res.toString(), "OK");
     }
 
+    @Test
     public void testBug49297MultiplePageEncoding1() throws Exception {
 
         Tomcat tomcat = getTomcatInstance();
@@ -200,6 +213,7 @@ public class TestParser extends TomcatBaseTest {
         assertEquals(500, sc);
     }
 
+    @Test
     public void testBug49297MultiplePageEncoding2() throws Exception {
 
         Tomcat tomcat = getTomcatInstance();
@@ -218,6 +232,7 @@ public class TestParser extends TomcatBaseTest {
         assertEquals(500, sc);
     }
 
+    @Test
     public void testBug49297MultiplePageEncoding3() throws Exception {
 
         Tomcat tomcat = getTomcatInstance();
@@ -236,6 +251,7 @@ public class TestParser extends TomcatBaseTest {
         assertEquals(500, sc);
     }
 
+    @Test
     public void testBug49297MultiplePageEncoding4() throws Exception {
 
         Tomcat tomcat = getTomcatInstance();
@@ -254,6 +270,7 @@ public class TestParser extends TomcatBaseTest {
         assertEquals(500, sc);
     }
 
+    @Test
     public void testBug49297Tag() throws Exception {
 
         Tomcat tomcat = getTomcatInstance();

==================================================
TestScriptingVariabler.java
index f46d7762e6..c1180987c0 100644
--- a/test/org/apache/jasper/compiler/TestParserNoStrictWhitespace.java
+++ b/test/org/apache/jasper/compiler/TestParserNoStrictWhitespace.java
@@ -21,15 +21,20 @@ import java.io.File;
 import java.util.HashMap;
 import java.util.List;
 
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertTrue;
+
+import org.junit.Test;
+
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTest;
+import org.apache.catalina.startup.TomcatBaseTestJUnit4;
 import org.apache.tomcat.util.buf.ByteChunk;
 
 /**
  * Tests are duplicated in {@link TestParser} with the strict whitespace parsing
  * enabled by default.
  */
-public class TestParserNoStrictWhitespace extends TomcatBaseTest {
+public class TestParserNoStrictWhitespace extends TomcatBaseTestJUnit4 {
     
     @Override
     public void setUp() throws Exception {
@@ -39,6 +44,7 @@ public class TestParserNoStrictWhitespace extends TomcatBaseTest {
         super.setUp();
     }
 
+    @Test
     public void testBug48627() throws Exception {
         Tomcat tomcat = getTomcatInstance();
 
@@ -59,6 +65,7 @@ public class TestParserNoStrictWhitespace extends TomcatBaseTest {
         assertEcho(result, "01-\\");
     }
 
+    @Test
     public void testBug48668a() throws Exception {
         Tomcat tomcat = getTomcatInstance();
 
@@ -104,6 +111,7 @@ public class TestParserNoStrictWhitespace extends TomcatBaseTest {
         assertEcho(result, "53-Hello #{'foo}");
     }
 
+    @Test
     public void testBug48668b() throws Exception {
         Tomcat tomcat = getTomcatInstance();
 
@@ -120,6 +128,7 @@ public class TestParserNoStrictWhitespace extends TomcatBaseTest {
         assertEcho(result, "01-Hello world</p>#{foo2");
     }
 
+    @Test
     public void testBug49297NoSpaceNotStrict() throws Exception {
 
         Tomcat tomcat = getTomcatInstance();
@@ -140,6 +149,7 @@ public class TestParserNoStrictWhitespace extends TomcatBaseTest {
         assertEcho(res.toString(), "Hello World");
     }
 
+    @Test
     public void testBug49297DuplicateAttr() throws Exception {
         Tomcat tomcat = getTomcatInstance();
 

==================================================
TestValidator.java
index c031d8d64a..9a74915db7 100644
--- a/test/org/apache/jasper/compiler/TestScriptingVariabler.java
+++ b/test/org/apache/jasper/compiler/TestScriptingVariabler.java
@@ -25,11 +25,16 @@ import javax.servlet.jsp.tagext.TagExtraInfo;
 import javax.servlet.jsp.tagext.TagSupport;
 import javax.servlet.jsp.tagext.VariableInfo;
 
+import static org.junit.Assert.assertNull;
+
+import org.junit.Test;
+
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTest;
+import org.apache.catalina.startup.TomcatBaseTestJUnit4;
 
-public class TestScriptingVariabler extends TomcatBaseTest {
-    
+public class TestScriptingVariabler extends TomcatBaseTestJUnit4 {
+
+    @Test
     public void testBug42390() throws Exception {
         Tomcat tomcat = getTomcatInstance();
 
@@ -71,7 +76,8 @@ public class TestScriptingVariabler extends TomcatBaseTest {
             };
         }
     }
-    
+
+    @Test
     public void testBug48616() throws Exception {
         Tomcat tomcat = getTomcatInstance();
 
@@ -93,6 +99,7 @@ public class TestScriptingVariabler extends TomcatBaseTest {
         assertNull(e);
     }
 
+    @Test
     public void testBug48616b() throws Exception {
         Tomcat tomcat = getTomcatInstance();
 

==================================================
