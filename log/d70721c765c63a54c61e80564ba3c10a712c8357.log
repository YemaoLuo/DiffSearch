d70721c765c63a54c61e80564ba3c10a712c8357
==================================================
Pull up error. It is going to be used more widely for propagating IOExceptions in non-blocking reads and writes.
==================================================
Mark Thomas
==================================================
Tue May 31 20:09:09 2016 +0000
==================================================
Nio2Endpoint.java
Pull up error. It is going to be used more widely for propagating IOExceptions in non-blocking reads and writes.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1746338 13f79535-47bb-0310-9956-ffa450edef68



==================================================
SocketWrapperBase.java
index 9cace9cf6a..a6783e7f18 100644
--- a/java/org/apache/tomcat/util/net/Nio2Endpoint.java
+++ b/java/org/apache/tomcat/util/net/Nio2Endpoint.java
@@ -567,7 +567,6 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel> {
         private final Semaphore writePending = new Semaphore(1);
         private boolean writeInterest = false; // Guarded by writeCompletionHandler
         private boolean writeNotify = false;
-        private volatile IOException error = null;
 
         private CompletionHandler<Integer, SocketWrapperBase<Nio2Channel>> awaitBytesHandler
                 = new CompletionHandler<Integer, SocketWrapperBase<Nio2Channel>>() {
@@ -837,16 +836,6 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel> {
         public void setSendfileData(SendfileData sf) { this.sendfileData = sf; }
         public SendfileData getSendfileData() { return this.sendfileData; }
 
-        public IOException getError() { return error; }
-        public void setError(IOException error) { this.error = error; }
-        public void checkError() throws IOException {
-            IOException ioe = error;
-            if (ioe != null) {
-                throw ioe;
-            }
-        }
-
-
         @Override
         public boolean isReadyForRead() throws IOException {
             synchronized (readCompletionHandler) {

==================================================
