2c5950c9f0529bedf4d0cd433fd17ab28a0a9f92
==================================================
Remove Unknown.
==================================================
Mark Emlyn
==================================================
Sat Nov 9 21:42:51 2013 +0000
==================================================
Attribute.java
Remove Unknown.
Swallow associated values as they are never used.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1540409 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Unknown.java
index 7feb4f436e..a8050426db 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Attribute.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Attribute.java
@@ -26,7 +26,7 @@ import org.apache.tomcat.util.bcel.Constants;
 /**
  * Abstract super class for <em>Attribute</em> objects. Currently the
  * <em>ConstantValue</em>, <em>SourceFile</em>, <em>Code</em>,
- * <em>Exceptiontable</em>, <em>LineNumberTable</em>,
+ * <em>ExceptionTable</em>, <em>LineNumberTable</em>,
  * <em>LocalVariableTable</em>, <em>InnerClasses</em> and
  * <em>Synthetic</em> attributes are supported. The <em>Unknown</em>
  * attribute stands for non-standard-attributes.
@@ -36,7 +36,6 @@ import org.apache.tomcat.util.bcel.Constants;
  * @see ConstantValue
  * @see SourceFile
  * @see Code
- * @see Unknown
  * @see ExceptionTable
  * @see LineNumberTable
  * @see LocalVariableTable
@@ -103,7 +102,8 @@ public abstract class Attribute implements Cloneable, Serializable
         switch (tag)
         {
         case Constants.ATTR_UNKNOWN:
-            return new Unknown(name_index, length, file, constant_pool);
+            Utility.swallowUnknownAttribute(file, length);
+            return null;
         case Constants.ATTR_CONSTANT_VALUE:
             return new ConstantValue(name_index, length, file, constant_pool);
         case Constants.ATTR_SOURCE_FILE:

==================================================
Utility.java
deleted file mode 100644
index cbef43c29c..0000000000
--- a/java/org/apache/tomcat/util/bcel/classfile/Unknown.java
+++ /dev/null
@@ -1,59 +0,0 @@
-/*
- *  Licensed to the Apache Software Foundation (ASF) under one or more
- *  contributor license agreements.  See the NOTICE file distributed with
- *  this work for additional information regarding copyright ownership.
- *  The ASF licenses this file to You under the Apache License, Version 2.0
- *  (the "License"); you may not use this file except in compliance with
- *  the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- *
- */
-package org.apache.tomcat.util.bcel.classfile;
-
-import java.io.DataInputStream;
-import java.io.IOException;
-
-/**
- * This class represents a reference to an unknown (i.e.,
- * application-specific) attribute of a class.  It is instantiated from the
- * <em>Attribute.readAttribute()</em> method.  Applications that need to
- * read in application-specific attributes should create an <a
- * href="./AttributeReader.html">AttributeReader</a> implementation and
- * attach it via <a
- * href="./Attribute.html#addAttributeReader(java.lang.String,
- * org.apache.tomcat.util.bcel.classfile.AttributeReader)">Attribute.addAttributeReader</a>.
-
- *
- * @version $Id$
- * @see org.apache.tomcat.util.bcel.classfile.Attribute
- * @author  <A HREF="mailto:m.dahm@gmx.de">M. Dahm</A>
- */
-public final class Unknown extends Attribute {
-
-    private static final long serialVersionUID = -4152422704743201314L;
-
-
-    /**
-     * Construct object from file stream.
-     * @param name_index Index in constant pool
-     * @param length Content length in bytes
-     * @param file Input stream
-     * @param constant_pool Array of constants
-     * @throws IOException
-     */
-    Unknown(int name_index, int length, DataInputStream file, ConstantPool constant_pool)
-            throws IOException {
-        super(name_index, length, constant_pool);
-        if (length > 0) {
-            byte[] bytes = new byte[length];
-            file.readFully(bytes);
-        }
-    }
-}

==================================================
