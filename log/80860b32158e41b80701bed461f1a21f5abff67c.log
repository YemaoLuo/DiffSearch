80860b32158e41b80701bed461f1a21f5abff67c
==================================================
Javadoc fixes
==================================================
Mark Thomas
==================================================
Fri Apr 17 21:37:59 2015 +0000
==================================================
JmxEnabled.java
Javadoc fixes

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1674409 13f79535-47bb-0310-9956-ffa450edef68



==================================================
LifecycleEvent.java
index cdf0b86fed..2d514f4149 100644
--- a/java/org/apache/catalina/JmxEnabled.java
+++ b/java/org/apache/catalina/JmxEnabled.java
@@ -28,7 +28,7 @@ import javax.management.ObjectName;
 public interface JmxEnabled extends MBeanRegistration {
 
     /**
-     * Obtain the domain under which this component will be / has been
+     * @return the domain under which this component will be / has been
      * registered.
      */
     String getDomain();
@@ -38,12 +38,15 @@ public interface JmxEnabled extends MBeanRegistration {
      * Specify the domain under which this component should be registered. Used
      * with components that cannot (easily) navigate the component hierarchy to
      * determine the correct domain to use.
+     *
+     * @param domain The name of the domain under which this component should be
+     *               registered
      */
     void setDomain(String domain);
 
 
     /**
-     * Obtain the name under which this component has been registered with JMX.
+     * @return the name under which this component has been registered with JMX.
      */
     ObjectName getObjectName();
 }

==================================================
LifecycleState.java
index 3a53e975e7..c681586114 100644
--- a/java/org/apache/catalina/LifecycleEvent.java
+++ b/java/org/apache/catalina/LifecycleEvent.java
@@ -14,19 +14,13 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-
-
 package org.apache.catalina;
 
-
 import java.util.EventObject;
 
-
 /**
  * General event for notifying listeners of significant changes on a component
- * that implements the Lifecycle interface.  In particular, this will be useful
- * on Containers, where these events replace the ContextInterceptor concept in
- * Tomcat 3.x.
+ * that implements the Lifecycle interface.
  *
  * @author Craig R. McClanahan
  */
@@ -35,8 +29,6 @@ public final class LifecycleEvent extends EventObject {
     private static final long serialVersionUID = 1L;
 
 
-    // ----------------------------------------------------------- Constructors
-
     /**
      * Construct a new LifecycleEvent with the specified parameters.
      *
@@ -45,16 +37,12 @@ public final class LifecycleEvent extends EventObject {
      * @param data Event data (if any)
      */
     public LifecycleEvent(Lifecycle lifecycle, String type, Object data) {
-
         super(lifecycle);
         this.type = type;
         this.data = data;
     }
 
 
-    // ----------------------------------------------------- Instance Variables
-
-
     /**
      * The event data associated with this event.
      */
@@ -67,37 +55,26 @@ public final class LifecycleEvent extends EventObject {
     private final String type;
 
 
-    // ------------------------------------------------------------- Properties
-
-
     /**
-     * Return the event data of this event.
+     * @return the event data of this event.
      */
     public Object getData() {
-
-        return (this.data);
-
+        return data;
     }
 
 
     /**
-     * Return the Lifecycle on which this event occurred.
+     * @return the Lifecycle on which this event occurred.
      */
     public Lifecycle getLifecycle() {
-
         return (Lifecycle) getSource();
-
     }
 
 
     /**
-     * Return the event type of this event.
+     * @return the event type of this event.
      */
     public String getType() {
-
-        return (this.type);
-
+        return this.type;
     }
-
-
 }

==================================================
