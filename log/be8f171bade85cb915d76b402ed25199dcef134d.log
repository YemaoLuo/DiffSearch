be8f171bade85cb915d76b402ed25199dcef134d
==================================================
Remove a package dependency
==================================================
Mark Emlyn
==================================================
Sun Feb 5 23:24:36 2012 +0000
==================================================
CoyoteAdapter.java
Remove a package dependency

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1240857 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Response.java
index 91f61c6b1d..3142ee515e 100644
--- a/java/org/apache/catalina/connector/CoyoteAdapter.java
+++ b/java/org/apache/catalina/connector/CoyoteAdapter.java
@@ -29,9 +29,9 @@ import org.apache.catalina.Host;
 import org.apache.catalina.Wrapper;
 import org.apache.catalina.comet.CometEvent;
 import org.apache.catalina.comet.CometEvent.EventType;
-import org.apache.catalina.core.ApplicationSessionCookieConfig;
 import org.apache.catalina.core.AsyncContextImpl;
 import org.apache.catalina.util.ServerInfo;
+import org.apache.catalina.util.SessionConfig;
 import org.apache.catalina.util.URLEncoder;
 import org.apache.coyote.ActionCode;
 import org.apache.coyote.Adapter;
@@ -676,7 +676,7 @@ public class CoyoteAdapter implements Adapter {
 
                 // Get the session ID if there was one
                 sessionID = request.getPathParameter(
-                        ApplicationSessionCookieConfig.getSessionUriParamName(
+                        SessionConfig.getSessionUriParamName(
                                 request.getContext()));
                 if (sessionID != null) {
                     request.setRequestedSessionId(sessionID);
@@ -731,7 +731,7 @@ public class CoyoteAdapter implements Adapter {
                 // This is not optimal, but as this is not very common, it
                 // shouldn't matter
                 redirectPath = redirectPath + ";" +
-                    ApplicationSessionCookieConfig.getSessionUriParamName(
+                        SessionConfig.getSessionUriParamName(
                             request.getContext()) +
                     "=" + request.getRequestedSessionId();
             }
@@ -921,8 +921,7 @@ public class CoyoteAdapter implements Adapter {
             return;
         }
 
-        String sessionCookieName =
-            ApplicationSessionCookieConfig.getSessionCookieName(context);
+        String sessionCookieName = SessionConfig.getSessionCookieName(context);
 
         for (int i = 0; i < count; i++) {
             ServerCookie scookie = serverCookies.getCookie(i);

==================================================
ApplicationSessionCookieConfig.java
index f8bf74362d..a905402769 100644
--- a/java/org/apache/catalina/connector/Response.java
+++ b/java/org/apache/catalina/connector/Response.java
@@ -42,11 +42,11 @@ import org.apache.catalina.Context;
 import org.apache.catalina.Globals;
 import org.apache.catalina.Session;
 import org.apache.catalina.Wrapper;
-import org.apache.catalina.core.ApplicationSessionCookieConfig;
 import org.apache.catalina.security.SecurityUtil;
 import org.apache.catalina.util.CharsetMapper;
 import org.apache.catalina.util.DateTool;
 import org.apache.catalina.util.RequestUtil;
+import org.apache.catalina.util.SessionConfig;
 import org.apache.tomcat.util.buf.CharChunk;
 import org.apache.tomcat.util.buf.UEncoder;
 import org.apache.tomcat.util.http.FastHttpDateFormat;
@@ -1502,8 +1502,7 @@ public class Response
                 return (false);
             }
             String tok = ";" +
-                    ApplicationSessionCookieConfig.getSessionUriParamName(
-                                request.getContext()) +
+                    SessionConfig.getSessionUriParamName(request.getContext()) +
                     "=" + session.getIdInternal();
             if( file.indexOf(tok, contextPath.length()) >= 0 ) {
                 return (false);
@@ -1676,7 +1675,7 @@ public class Response
         StringBuilder sb = new StringBuilder(path);
         if( sb.length() > 0 ) { // jsessionid can't be first.
             sb.append(";");
-            sb.append(ApplicationSessionCookieConfig.getSessionUriParamName(
+            sb.append(SessionConfig.getSessionUriParamName(
                     request.getContext()));
             sb.append("=");
             sb.append(sessionId);

==================================================
RealmBase.java
index ba7a0bf430..a5c179574a 100644
--- a/java/org/apache/catalina/core/ApplicationSessionCookieConfig.java
+++ b/java/org/apache/catalina/core/ApplicationSessionCookieConfig.java
@@ -21,12 +21,10 @@ import javax.servlet.SessionCookieConfig;
 import javax.servlet.http.Cookie;
 
 import org.apache.catalina.Context;
+import org.apache.catalina.util.SessionConfig;
 
 public class ApplicationSessionCookieConfig implements SessionCookieConfig {
 
-    private static final String DEFAULT_SESSION_COOKIE_NAME = "JSESSIONID";
-    private static final String DEFAULT_SESSION_PARAMETER_NAME = "jsessionid";
-
     private boolean httpOnly;
     private boolean secure;
     private int maxAge = -1;
@@ -124,7 +122,8 @@ public class ApplicationSessionCookieConfig implements SessionCookieConfig {
         //       2. Values from SessionCookieConfig
         //       3. Defaults
 
-        Cookie cookie = new Cookie(getSessionCookieName(context), sessionId);
+        Cookie cookie = new Cookie(
+                SessionConfig.getSessionCookieName(context), sessionId);
 
         // Just apply the defaults.
         cookie.setMaxAge(scc.getMaxAge());
@@ -176,60 +175,31 @@ public class ApplicationSessionCookieConfig implements SessionCookieConfig {
         return cookie;
     }
 
-
-    private static String getConfiguredSessionCookieName(Context context) {
-
-        // Priority is:
-        // 1. Cookie name defined in context
-        // 2. Cookie name configured for app
-        // 3. Default defined by spec
-        if (context != null) {
-            String cookieName = context.getSessionCookieName();
-            if (cookieName != null && cookieName.length() > 0) {
-                return cookieName;
-            }
-
-            SessionCookieConfig scc =
-                context.getServletContext().getSessionCookieConfig();
-            cookieName = scc.getName();
-            if (cookieName != null && cookieName.length() > 0) {
-                return cookieName;
-            }
-        }
-
-        return null;
-    }
-
-
     /**
      * Determine the name to use for the session cookie for the provided
      * context.
      * @param context
+     *
+     * @deprecated  Replaced by
+     *              {@link SessionConfig#getSessionCookieName(Context)}. This
+     *              will be removed in Tomcat 8.0.x.
      */
+    @Deprecated
     public static String getSessionCookieName(Context context) {
-
-        String result = getConfiguredSessionCookieName(context);
-
-        if (result == null) {
-            result = DEFAULT_SESSION_COOKIE_NAME;
-        }
-
-        return result;
+        return SessionConfig.getSessionCookieName(context);
     }
 
     /**
      * Determine the name to use for the session cookie for the provided
      * context.
      * @param context
+     *
+     * @deprecated  Replaced by
+     *              {@link SessionConfig#getSessionUriParamName(Context)}. This
+     *              will be removed in Tomcat 8.0.x.
      */
+    @Deprecated
     public static String getSessionUriParamName(Context context) {
-
-        String result = getConfiguredSessionCookieName(context);
-
-        if (result == null) {
-            result = DEFAULT_SESSION_PARAMETER_NAME;
-        }
-
-        return result;
+        return SessionConfig.getSessionUriParamName(context);
     }
 }

==================================================
SessionConfig.java
index 170253a9b5..170c937735 100644
--- a/java/org/apache/catalina/realm/RealmBase.java
+++ b/java/org/apache/catalina/realm/RealmBase.java
@@ -42,12 +42,12 @@ import org.apache.catalina.Service;
 import org.apache.catalina.Wrapper;
 import org.apache.catalina.connector.Request;
 import org.apache.catalina.connector.Response;
-import org.apache.catalina.core.ApplicationSessionCookieConfig;
 import org.apache.catalina.deploy.LoginConfig;
 import org.apache.catalina.deploy.SecurityCollection;
 import org.apache.catalina.deploy.SecurityConstraint;
 import org.apache.catalina.util.LifecycleMBeanBase;
 import org.apache.catalina.util.MD5Encoder;
+import org.apache.catalina.util.SessionConfig;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.buf.B2CConverter;
@@ -994,7 +994,7 @@ public abstract class RealmBase extends LifecycleMBeanBase implements Realm {
         if ((requestedSessionId != null) &&
             request.isRequestedSessionIdFromURL()) {
             file.append(";");
-            file.append(ApplicationSessionCookieConfig.getSessionUriParamName(
+            file.append(SessionConfig.getSessionUriParamName(
                     request.getContext()));
             file.append("=");
             file.append(requestedSessionId);

==================================================
