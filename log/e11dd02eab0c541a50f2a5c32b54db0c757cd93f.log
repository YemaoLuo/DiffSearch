e11dd02eab0c541a50f2a5c32b54db0c757cd93f
==================================================
Remove use of JreCompat as it is not required with Java 11+
==================================================
Mark Thomas
==================================================
Wed Jul 28 14:09:56 2021 +0100
==================================================
AbstractArchiveResourceSet.java
Remove use of JreCompat as it is not required with Java 11+


==================================================
AbstractSingleArchiveResourceSet.java
index 04a4fe402f..4907c21201 100644
--- a/java/org/apache/catalina/webresources/AbstractArchiveResourceSet.java
+++ b/java/org/apache/catalina/webresources/AbstractArchiveResourceSet.java
@@ -26,11 +26,11 @@ import java.util.Set;
 import java.util.jar.JarEntry;
 import java.util.jar.JarFile;
 import java.util.jar.Manifest;
+import java.util.zip.ZipFile;
 
 import org.apache.catalina.WebResource;
 import org.apache.catalina.WebResourceRoot;
 import org.apache.catalina.util.ResourceSet;
-import org.apache.tomcat.util.compat.JreCompat;
 
 public abstract class AbstractArchiveResourceSet extends AbstractResourceSet {
 
@@ -311,7 +311,7 @@ public abstract class AbstractArchiveResourceSet extends AbstractResourceSet {
     protected JarFile openJarFile() throws IOException {
         synchronized (archiveLock) {
             if (archive == null) {
-                archive = JreCompat.getInstance().jarFileNewInstance(getBase());
+                archive = new JarFile(new File(getBase()), true, ZipFile.OPEN_READ, Runtime.version());
                 WebResourceRoot root = getRoot();
                 if ((root.getContext() != null) && root.getContext().getUseBloomFilterForArchives()) {
                     jarContents = new JarContents(archive);

==================================================
JarWarResourceSet.java
index 107607c11a..5edf114f77 100644
--- a/java/org/apache/catalina/webresources/AbstractSingleArchiveResourceSet.java
+++ b/java/org/apache/catalina/webresources/AbstractSingleArchiveResourceSet.java
@@ -24,11 +24,11 @@ import java.util.HashMap;
 import java.util.Map;
 import java.util.jar.JarEntry;
 import java.util.jar.JarFile;
+import java.util.zip.ZipFile;
 
 import org.apache.catalina.LifecycleException;
 import org.apache.catalina.WebResourceRoot;
 import org.apache.tomcat.util.buf.UriUtil;
-import org.apache.tomcat.util.compat.JreCompat;
 
 /**
  * Base class for a {@link org.apache.catalina.WebResourceSet} based on a
@@ -115,8 +115,7 @@ public abstract class AbstractSingleArchiveResourceSet extends AbstractArchiveRe
                     JarFile jarFile = null;
                     try {
                         jarFile = openJarFile();
-                        multiRelease = Boolean.valueOf(
-                                JreCompat.getInstance().jarFileIsMultiRelease(jarFile));
+                        multiRelease = Boolean.valueOf(jarFile.isMultiRelease());
                     } catch (IOException ioe) {
                         // Should never happen
                         throw new IllegalStateException(ioe);
@@ -137,7 +136,7 @@ public abstract class AbstractSingleArchiveResourceSet extends AbstractArchiveRe
     @Override
     protected void initInternal() throws LifecycleException {
 
-        try (JarFile jarFile = JreCompat.getInstance().jarFileNewInstance(getBase())) {
+        try (JarFile jarFile = new JarFile(new File(getBase()), true, ZipFile.OPEN_READ, Runtime.version())) {
             setManifest(jarFile.getManifest());
         } catch (IOException ioe) {
             throw new IllegalArgumentException(ioe);

==================================================
TestJarInputStreamWrapper.java
index a5a709fd2d..37253fc390 100644
--- a/java/org/apache/catalina/webresources/JarWarResourceSet.java
+++ b/java/org/apache/catalina/webresources/JarWarResourceSet.java
@@ -33,7 +33,6 @@ import org.apache.catalina.LifecycleException;
 import org.apache.catalina.WebResource;
 import org.apache.catalina.WebResourceRoot;
 import org.apache.tomcat.util.buf.UriUtil;
-import org.apache.tomcat.util.compat.JreCompat;
 
 /**
  * Represents a {@link org.apache.catalina.WebResourceSet} based on a JAR file
@@ -118,7 +117,7 @@ public class JarWarResourceSet extends AbstractArchiveResourceSet {
                         }
                         Manifest m = jarIs.getManifest();
                         setManifest(m);
-                        if (m != null && JreCompat.isJre9Available()) {
+                        if (m != null) {
                             String value = m.getMainAttributes().getValue("Multi-Release");
                             if (value != null) {
                                 multiRelease = Boolean.parseBoolean(value);
@@ -166,7 +165,7 @@ public class JarWarResourceSet extends AbstractArchiveResourceSet {
 
     protected void processArchivesEntriesForMultiRelease() {
 
-        int targetVersion = JreCompat.getInstance().jarFileRuntimeMajorVersion();
+        int targetVersion = Runtime.version().feature();
 
         Map<String,VersionedJarEntry> versionedEntries = new HashMap<>();
         Iterator<Entry<String,JarEntry>> iter = archiveEntries.entrySet().iterator();

==================================================
