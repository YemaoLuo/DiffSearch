9bcaaedc7dd65b0af11bd01d19267de2596a3b1a
==================================================
Refactoring: HTTP/1.1 - HTTP/2 alignment
==================================================
Mark Thomas
==================================================
Thu Nov 30 10:20:08 2017 +0000
==================================================
Http11OutputBuffer.java
Refactoring: HTTP/1.1 - HTTP/2 alignment

Chain end() calls to align with doWrite() and getBytesWritten()

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816697 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ChunkedOutputFilter.java
index 3ef1d117d2..112a1d9c9c 100644
--- a/java/org/apache/coyote/http11/Http11OutputBuffer.java
+++ b/java/org/apache/coyote/http11/Http11OutputBuffer.java
@@ -282,12 +282,12 @@ public class Http11OutputBuffer implements HttpOutputBuffer {
             return;
         }
 
-        if (lastActiveFilter != -1) {
+        if (lastActiveFilter == -1) {
+            outputStreamOutputBuffer.end();
+        } else {
             activeFilters[lastActiveFilter].end();
         }
 
-        outputStreamOutputBuffer.end();
-
         responseFinished = true;
     }
 

==================================================
GzipOutputFilter.java
index 7d8dc0f45a..ca933edb71 100644
--- a/java/org/apache/coyote/http11/filters/ChunkedOutputFilter.java
+++ b/java/org/apache/coyote/http11/filters/ChunkedOutputFilter.java
@@ -188,6 +188,8 @@ public class ChunkedOutputFilter implements OutputFilter {
 
             buffer.doWrite(crlfChunk);
             crlfChunk.position(0).limit(crlfChunk.capacity());
+
+            buffer.end();
         }
     }
 

==================================================
IdentityOutputFilter.java
index 016619897c..4c38a53ae4 100644
--- a/java/org/apache/coyote/http11/filters/GzipOutputFilter.java
+++ b/java/org/apache/coyote/http11/filters/GzipOutputFilter.java
@@ -122,7 +122,7 @@ public class GzipOutputFilter implements OutputFilter {
         }
         compressionStream.finish();
         compressionStream.close();
-        ((OutputFilter) buffer).end();
+        buffer.end();
     }
 
 

==================================================
