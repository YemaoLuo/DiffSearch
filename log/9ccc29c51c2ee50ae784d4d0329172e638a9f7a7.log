9ccc29c51c2ee50ae784d4d0329172e638a9f7a7
==================================================
- Add annotation processor to Jasper too (tags need injection too).
==================================================
Remy Maucherat
==================================================
Wed Apr 19 14:51:10 2006 +0000
==================================================
AnnotationProcessor.java
- Add annotation processor to Jasper too (tags need injection too).

git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk@395258 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AnnotationProcessor.java
index a7426c97ba..499cb790f6 100644
--- a/java/org/apache/catalina/util/AnnotationProcessor.java
+++ b/java/org/apache/catalina/util/AnnotationProcessor.java
@@ -35,8 +35,9 @@ import org.apache.tomcat.util.IntrospectionUtils;
 /**
  * Verify the annotation and Process it.
  *
- * @author    Fabien Carrion
- * @version   $Revision: 303236 $, $Date: 2006-03-09 16:46:52 -0600 (Thu, 09 Mar 2006) $
+ * @author Fabien Carrion
+ * @author Remy Maucherat
+ * @version $Revision: 303236 $, $Date: 2006-03-09 16:46:52 -0600 (Thu, 09 Mar 2006) $
  */
 public class AnnotationProcessor {
     
@@ -172,8 +173,11 @@ public class AnnotationProcessor {
     }
     
     
+    /**
+     * Inject resources in specified field.
+     */
     protected static void lookupFieldResource(javax.naming.Context context, 
-            Object instance, Field f, String name)
+            Object instance, Field field, String name)
         throws NamingException, IllegalAccessException {
     
         Object lookedupResource = null;
@@ -183,16 +187,19 @@ public class AnnotationProcessor {
                 (name.length() > 0)) {
             lookedupResource = context.lookup(name);
         } else {
-            lookedupResource = context.lookup(instance.getClass().getName() + "/" + f.getName());
+            lookedupResource = context.lookup(instance.getClass().getName() + "/" + field.getName());
         }
         
-        accessibility = f.isAccessible();
-        f.setAccessible(true);
-        f.set(instance, lookedupResource);
-        f.setAccessible(accessibility);
+        accessibility = field.isAccessible();
+        field.setAccessible(true);
+        field.set(instance, lookedupResource);
+        field.setAccessible(accessibility);
     }
 
 
+    /**
+     * Inject resources in specified method.
+     */
     protected static void lookupMethodResource(javax.naming.Context context, 
             Object instance, Method method, String name)
         throws NamingException, IllegalAccessException, InvocationTargetException {

==================================================
