01afc2e115a1be244098d00fe12af62d46d027d1
==================================================
Code clean-up. Fix indenting. No functional change.
==================================================
Mark Thomas
==================================================
Thu Jan 19 13:59:00 2023 +0000
==================================================
HttpConstraintElement.java
Code clean-up. Fix indenting. No functional change.


==================================================
HttpMethodConstraintElement.java
index 7fde74b53b..c6be0deebb 100644
--- a/java/jakarta/servlet/HttpConstraintElement.java
+++ b/java/jakarta/servlet/HttpConstraintElement.java
@@ -30,8 +30,7 @@ import jakarta.servlet.annotation.ServletSecurity.TransportGuarantee;
 public class HttpConstraintElement {
 
     private static final String LSTRING_FILE = "jakarta.servlet.LocalStrings";
-    private static final ResourceBundle lStrings =
-        ResourceBundle.getBundle(LSTRING_FILE);
+    private static final ResourceBundle lStrings = ResourceBundle.getBundle(LSTRING_FILE);
 
     private final EmptyRoleSemantic emptyRoleSemantic;// = EmptyRoleSemantic.PERMIT;
     private final TransportGuarantee transportGuarantee;// = TransportGuarantee.NONE;

==================================================
ServletRequestWrapper.java
index 56d63850a3..270edc7205 100644
--- a/java/jakarta/servlet/HttpMethodConstraintElement.java
+++ b/java/jakarta/servlet/HttpMethodConstraintElement.java
@@ -28,8 +28,7 @@ public class HttpMethodConstraintElement extends HttpConstraintElement {
 
     // Can't inherit from HttpConstraintElement as API does not allow it
     private static final String LSTRING_FILE = "jakarta.servlet.LocalStrings";
-    private static final ResourceBundle lStrings =
-        ResourceBundle.getBundle(LSTRING_FILE);
+    private static final ResourceBundle lStrings = ResourceBundle.getBundle(LSTRING_FILE);
 
     private final String methodName;
 

==================================================
ServletResponse.java
index 0ffabc806a..1751ee9d96 100644
--- a/java/jakarta/servlet/ServletRequestWrapper.java
+++ b/java/jakarta/servlet/ServletRequestWrapper.java
@@ -36,8 +36,7 @@ import java.util.ResourceBundle;
  */
 public class ServletRequestWrapper implements ServletRequest {
     private static final String LSTRING_FILE = "jakarta.servlet.LocalStrings";
-    private static final ResourceBundle lStrings =
-        ResourceBundle.getBundle(LSTRING_FILE);
+    private static final ResourceBundle lStrings = ResourceBundle.getBundle(LSTRING_FILE);
 
     private ServletRequest request;
 

==================================================
ServletResponseWrapper.java
index c71a7fffc7..8de3e7d642 100644
--- a/java/jakarta/servlet/ServletResponse.java
+++ b/java/jakarta/servlet/ServletResponse.java
@@ -215,7 +215,7 @@ public interface ServletResponse {
      * @since Servlet 6.1
      */
     public default void setCharacterEncoding(Charset encoding) {
-       setCharacterEncoding(encoding.name());
+        setCharacterEncoding(encoding.name());
     }
 
     /**

==================================================
ServletSecurityElement.java
index 96fd8a4206..725f115156 100644
--- a/java/jakarta/servlet/ServletResponseWrapper.java
+++ b/java/jakarta/servlet/ServletResponseWrapper.java
@@ -33,8 +33,7 @@ import java.util.ResourceBundle;
  */
 public class ServletResponseWrapper implements ServletResponse {
     private static final String LSTRING_FILE = "jakarta.servlet.LocalStrings";
-    private static final ResourceBundle lStrings =
-        ResourceBundle.getBundle(LSTRING_FILE);
+    private static final ResourceBundle lStrings = ResourceBundle.getBundle(LSTRING_FILE);
 
     private ServletResponse response;
 

==================================================
PageContext.java
index 63494065d3..7cee1e86a8 100644
--- a/java/jakarta/servlet/ServletSecurityElement.java
+++ b/java/jakarta/servlet/ServletSecurityElement.java
@@ -35,8 +35,7 @@ import jakarta.servlet.annotation.ServletSecurity;
  */
 public class ServletSecurityElement extends HttpConstraintElement {
 
-    private final Map<String,HttpMethodConstraintElement> methodConstraints =
-        new HashMap<>();
+    private final Map<String,HttpMethodConstraintElement> methodConstraints = new HashMap<>();
 
     /**
      * Use default HttpConstraint.

==================================================
ImplicitObjectELResolver.java
index 27b0e3e984..5b7691f1f5 100644
--- a/java/jakarta/servlet/jsp/PageContext.java
+++ b/java/jakarta/servlet/jsp/PageContext.java
@@ -88,10 +88,7 @@ import jakarta.servlet.jsp.tagext.BodyContent;
  * <code>forward()</code>,  <code>include()</code>,
  * and  <code>handlePageException()</code>.
  */
-
-public abstract class PageContext
-    extends JspContext
-{
+public abstract class PageContext extends JspContext {
 
     /**
      * Sole constructor. (For invocation by subclass constructors,
@@ -221,10 +218,9 @@ public abstract class PageContext
      *     is invalid
      */
 
-    public abstract void initialize(Servlet servlet, ServletRequest request,
-        ServletResponse response, String errorPageURL, boolean needsSession,
-        int bufferSize, boolean autoFlush)
-        throws IOException, IllegalStateException, IllegalArgumentException;
+    public abstract void initialize(Servlet servlet, ServletRequest request, ServletResponse response,
+            String errorPageURL, boolean needsSession, int bufferSize, boolean autoFlush)
+            throws IOException, IllegalStateException, IllegalArgumentException;
 
     /**
      * <p>

==================================================
DynamicAttributes.java
index 28bd742b6b..1acb1fe2b8 100644
--- a/java/jakarta/servlet/jsp/el/ImplicitObjectELResolver.java
+++ b/java/jakarta/servlet/jsp/el/ImplicitObjectELResolver.java
@@ -295,9 +295,7 @@ public class ImplicitObjectELResolver extends ELResolver {
 
                     @Override
                     protected String[] getAttribute(String name) {
-                        Enumeration<String> e =
-                            ((HttpServletRequest) page.getRequest())
-                                    .getHeaders(name);
+                        Enumeration<String> e = ((HttpServletRequest) page.getRequest()).getHeaders(name);
                         if (e != null) {
                             List<String> list = new ArrayList<>();
                             while (e.hasMoreElements()) {

==================================================
SimpleTagSupport.java
index 537d22d994..f26019598d 100644
--- a/java/jakarta/servlet/jsp/tagext/DynamicAttributes.java
+++ b/java/jakarta/servlet/jsp/tagext/DynamicAttributes.java
@@ -45,8 +45,5 @@ public interface DynamicAttributes {
      *     signal that it does not accept the given attribute.  The
      *     container must not call doStartTag() or doTag() for this tag.
      */
-    public void setDynamicAttribute(
-        String uri, String localName, Object value )
-        throws JspException;
-
+    public void setDynamicAttribute(String uri, String localName, Object value) throws JspException;
 }

==================================================
TagLibraryValidator.java
index 435fef0d96..de260f9530 100644
--- a/java/jakarta/servlet/jsp/tagext/SimpleTagSupport.java
+++ b/java/jakarta/servlet/jsp/tagext/SimpleTagSupport.java
@@ -179,9 +179,7 @@ public class SimpleTagSupport implements SimpleTag {
      * @return the nearest ancestor that implements the interface
      * or is an instance of the class specified
      */
-    public static final JspTag findAncestorWithClass(
-        JspTag from, Class<?> klass)
-    {
+    public static final JspTag findAncestorWithClass(JspTag from, Class<?> klass) {
         boolean isInterface = false;
 
         if (from == null || klass == null || (!JspTag.class.isAssignableFrom(klass) &&

==================================================
TagSupport.java
index 055b1bc355..64ba3fabb8 100644
--- a/java/jakarta/servlet/jsp/tagext/TagLibraryValidator.java
+++ b/java/jakarta/servlet/jsp/tagext/TagLibraryValidator.java
@@ -127,8 +127,7 @@ public abstract class TagLibraryValidator {
      * @return A null object, or zero length array if no errors, an array
      * of ValidationMessages otherwise.
      */
-    public ValidationMessage[] validate(String prefix, String uri,
-        PageData page) {
+    public ValidationMessage[] validate(String prefix, String uri, PageData page) {
         return null;
     }
 

==================================================
ValidatorTask.java
index 8006ffad6a..13fa5ded3e 100644
--- a/java/jakarta/servlet/jsp/tagext/TagSupport.java
+++ b/java/jakarta/servlet/jsp/tagext/TagSupport.java
@@ -78,10 +78,8 @@ public class TagSupport implements IterationTag, Serializable {
     public static final Tag findAncestorWithClass(Tag from, Class<?> klass) {
         boolean isInterface = false;
 
-        if (from == null ||
-            klass == null ||
-            (!Tag.class.isAssignableFrom(klass) &&
-             !(isInterface = klass.isInterface()))) {
+        if (from == null || klass == null ||
+                (!Tag.class.isAssignableFrom(klass) && !(isInterface = klass.isInterface()))) {
             return null;
         }
 

==================================================
