8ec6d3d1df4825f66e76726a2550131db92287d8
==================================================
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=62297
==================================================
Mark Thomas
==================================================
Mon Apr 23 19:48:11 2018 +0000
==================================================
CrawlerSessionManagerValve.java
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=62297
Enable the CrawlerSessionManagerValve to correctly handle bots that crawl multiple hosts and/or web applications when the Valve is configured on a Host or an Engine.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1829934 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestCrawlerSessionManagerValve.java
index e3f12ff2ce..a268d4b426 100644
--- a/java/org/apache/catalina/valves/CrawlerSessionManagerValve.java
+++ b/java/org/apache/catalina/valves/CrawlerSessionManagerValve.java
@@ -27,6 +27,8 @@ import javax.servlet.http.HttpSession;
 import javax.servlet.http.HttpSessionBindingEvent;
 import javax.servlet.http.HttpSessionBindingListener;
 
+import org.apache.catalina.Context;
+import org.apache.catalina.Host;
 import org.apache.catalina.LifecycleException;
 import org.apache.catalina.connector.Request;
 import org.apache.catalina.connector.Response;
@@ -44,8 +46,8 @@ public class CrawlerSessionManagerValve extends ValveBase implements HttpSession
 
     private static final Log log = LogFactory.getLog(CrawlerSessionManagerValve.class);
 
-    private final Map<String, String> clientIpSessionId = new ConcurrentHashMap<>();
-    private final Map<String, String> sessionIdClientIp = new ConcurrentHashMap<>();
+    private final Map<String, String> clientIdSessionId = new ConcurrentHashMap<>();
+    private final Map<String, String> sessionIdClientId = new ConcurrentHashMap<>();
 
     private String crawlerUserAgents = ".*[bB]ot.*|.*Yahoo! Slurp.*|.*Feedfetcher-Google.*";
     private Pattern uaPattern = null;
@@ -55,6 +57,10 @@ public class CrawlerSessionManagerValve extends ValveBase implements HttpSession
 
     private int sessionInactiveInterval = 60;
 
+    private boolean isHostAware = true;
+
+    private boolean isContextAware = true;
+
 
     /**
      * Specifies a default constructor so async support can be configured.
@@ -134,7 +140,27 @@ public class CrawlerSessionManagerValve extends ValveBase implements HttpSession
 
 
     public Map<String, String> getClientIpSessionId() {
-        return clientIpSessionId;
+        return clientIdSessionId;
+    }
+
+
+    public boolean isHostAware() {
+        return isHostAware;
+    }
+
+
+    public void setHostAware(boolean isHostAware) {
+        this.isHostAware = isHostAware;
+    }
+
+
+    public boolean isContextAware() {
+        return isContextAware;
+    }
+
+
+    public void setContextAware(boolean isContextAware) {
+        this.isContextAware = isContextAware;
     }
 
 
@@ -152,9 +178,10 @@ public class CrawlerSessionManagerValve extends ValveBase implements HttpSession
         boolean isBot = false;
         String sessionId = null;
         String clientIp = request.getRemoteAddr();
+        String clientIdentifier = getClientIdentifier(request.getHost(), request.getContext(), clientIp);
 
         if (log.isDebugEnabled()) {
-            log.debug(request.hashCode() + ": ClientIp=" + clientIp + ", RequestedSessionId="
+            log.debug(request.hashCode() + ": ClientIdentifier=" + clientIdentifier + ", RequestedSessionId="
                     + request.getRequestedSessionId());
         }
 
@@ -194,7 +221,7 @@ public class CrawlerSessionManagerValve extends ValveBase implements HttpSession
 
             // If this is a bot, is the session ID known?
             if (isBot) {
-                sessionId = clientIpSessionId.get(clientIp);
+                sessionId = clientIdSessionId.get(clientIdentifier);
                 if (sessionId != null) {
                     request.setRequestedSessionId(sessionId);
                     if (log.isDebugEnabled()) {
@@ -211,8 +238,8 @@ public class CrawlerSessionManagerValve extends ValveBase implements HttpSession
                 // Has bot just created a session, if so make a note of it
                 HttpSession s = request.getSession(false);
                 if (s != null) {
-                    clientIpSessionId.put(clientIp, s.getId());
-                    sessionIdClientIp.put(s.getId(), clientIp);
+                    clientIdSessionId.put(clientIdentifier, s.getId());
+                    sessionIdClientId.put(s.getId(), clientIdentifier);
                     // #valueUnbound() will be called on session expiration
                     s.setAttribute(this.getClass().getName(), this);
                     s.setMaxInactiveInterval(sessionInactiveInterval);
@@ -231,11 +258,23 @@ public class CrawlerSessionManagerValve extends ValveBase implements HttpSession
     }
 
 
+    private String getClientIdentifier(Host host, Context context, String clientIp) {
+        StringBuilder result = new StringBuilder(clientIp);
+        if (isHostAware) {
+            result.append('-').append(host.getName());
+        }
+        if (isContextAware) {
+            result.append(context.getName());
+        }
+        return result.toString();
+    }
+
+
     @Override
     public void valueUnbound(HttpSessionBindingEvent event) {
-        String clientIp = sessionIdClientIp.remove(event.getSession().getId());
-        if (clientIp != null) {
-            clientIpSessionId.remove(clientIp);
+        String clientIdentifier = sessionIdClientId.remove(event.getSession().getId());
+        if (clientIdentifier != null) {
+            clientIdSessionId.remove(clientIdentifier);
         }
     }
 }

==================================================
