7e1efd4b4580d711172085cfccc9d8ffcdafd5f9
==================================================
White-space clean-up
==================================================
Mark Emlyn
==================================================
Fri Sep 3 18:35:59 2010 +0000
==================================================
ContainerListener.java
index e72e4e6c5e..cd97c91fe0 100644
--- a/java/javax/servlet/resources/javaee_web_services_1_3.xsd
+++ b/java/javax/servlet/resources/javaee_web_services_1_3.xsd
@@ -557,9 +557,8 @@
                 Example:
                     <port-component-name>EmployeeService
                     </port-component-name>
-              
-                
-              
+
+
 ]]>
             </xsd:documentation>
           </xsd:annotation>

==================================================
LifecycleListener.java
index 45aa13abb2..edce3a3fef 100644
--- a/java/org/apache/catalina/ContainerListener.java
+++ b/java/org/apache/catalina/ContainerListener.java
@@ -19,8 +19,6 @@
 package org.apache.catalina;
 
 
-
-
 /**
  * Interface defining a listener for significant Container generated events.
  * Note that "container start" and "container stop" events are normally

==================================================
SessionListener.java
index faf2d09160..741bf5b349 100644
--- a/java/org/apache/catalina/LifecycleListener.java
+++ b/java/org/apache/catalina/LifecycleListener.java
@@ -19,8 +19,6 @@
 package org.apache.catalina;
 
 
-
-
 /**
  * Interface defining a listener for significant events (including "component
  * start" and "component stop" generated by a component that implements the

==================================================
JMXAccessorSetTask.java
index e9009c41ad..51bae44f2a 100644
--- a/java/org/apache/catalina/SessionListener.java
+++ b/java/org/apache/catalina/SessionListener.java
@@ -19,8 +19,6 @@
 package org.apache.catalina;
 
 
-
-
 /**
  * Interface defining a listener for significant Session generated events.
  *

==================================================
AuthenticatorBase.java
index 5f05930806..ae7e3eb6c4 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorSetTask.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorSetTask.java
@@ -193,7 +193,6 @@ public class JMXAccessorSetTask extends JMXAccessorTask {
                 attribute, realValue));
         return null;
     }
-    
 
 
     /**

==================================================
Response.java
index 8d4fe6b4fb..6d8eb7d22f 100644
--- a/java/org/apache/catalina/authenticator/AuthenticatorBase.java
+++ b/java/org/apache/catalina/authenticator/AuthenticatorBase.java
@@ -567,8 +567,6 @@ public abstract class AuthenticatorBase extends ValveBase
     // ------------------------------------------------------ Protected Methods
 
 
-
-
     /**
      * Associate the specified single sign on identifier with the
      * specified Session.

==================================================
ApplicationContextFacade.java
index ae4bd1c087..1ff0327db3 100644
--- a/java/org/apache/catalina/connector/Response.java
+++ b/java/org/apache/catalina/connector/Response.java
@@ -819,8 +819,7 @@ public class Response
         isCharacterEncodingSet = true;
     }
 
-    
-    
+
     /**
      * Set the Locale that is appropriate for this response, including
      * setting the appropriate character encoding.

==================================================
ApplicationFilterChain.java
index 9efef69115..8cb5c850df 100644
--- a/java/org/apache/catalina/core/ApplicationContextFacade.java
+++ b/java/org/apache/catalina/core/ApplicationContextFacade.java
@@ -129,7 +129,6 @@ public final class ApplicationContextFacade
      * Wrapped application context.
      */
     private ApplicationContext context = null;
-    
 
 
     // ------------------------------------------------- ServletContext Methods

==================================================
AsyncListenerWrapper.java
index 54a9478931..81b3fc7168 100644
--- a/java/org/apache/catalina/core/ApplicationFilterChain.java
+++ b/java/org/apache/catalina/core/ApplicationFilterChain.java
@@ -160,8 +160,7 @@ final class ApplicationFilterChain implements FilterChain, CometFilterChain {
      */                                                 
     private static Class<?>[] classTypeUsedInEvent = 
         new Class[] { CometEvent.class };
-    
-    
+
 
     // ---------------------------------------------------- FilterChain Methods
 
@@ -514,7 +513,6 @@ final class ApplicationFilterChain implements FilterChain, CometFilterChain {
     // -------------------------------------------------------- Package Methods
 
 
-
     /**
      * Add a filter to the set of filters that will be executed in this chain.
      *

==================================================
StandardPipeline.java
index f9dd980635..b4f64f9d4d 100644
--- a/java/org/apache/catalina/core/AsyncListenerWrapper.java
+++ b/java/org/apache/catalina/core/AsyncListenerWrapper.java
@@ -54,7 +54,6 @@ public class AsyncListenerWrapper {
     public void setListener(AsyncListener listener) {
         this.listener = listener;
     }
-    
-    
+
 
 }

==================================================
StandardThreadExecutor.java
index 5e703cc50e..d5da4839a6 100644
--- a/java/org/apache/catalina/core/StandardPipeline.java
+++ b/java/org/apache/catalina/core/StandardPipeline.java
@@ -231,9 +231,8 @@ public class StandardPipeline extends LifecycleBase
         sb.append(']');
         return sb.toString();
     }
-    
-    
-    
+
+
     // ------------------------------------------------------- Pipeline Methods
 
 

==================================================
WebXml.java
index 28f77545b6..bc02f0ba4a 100644
--- a/java/org/apache/catalina/core/StandardThreadExecutor.java
+++ b/java/org/apache/catalina/core/StandardThreadExecutor.java
@@ -89,9 +89,8 @@ public class StandardThreadExecutor extends LifecycleMBeanBase
     public StandardThreadExecutor() {
         //empty constructor for the digester
     }
-    
 
-    
+
     // ---------------------------------------------- Public Methods
     
     @Override
@@ -273,7 +272,6 @@ public class StandardThreadExecutor extends LifecycleMBeanBase
     }
 
 
-
     @Override
     public boolean resizePool(int corePoolSize, int maximumPoolSize) {
         if (executor == null)
@@ -285,7 +283,6 @@ public class StandardThreadExecutor extends LifecycleMBeanBase
     }
 
 
-
     @Override
     public boolean resizeQueue(int capacity) {
         return false;

==================================================
ClusterRuleSet.java
index 8f8cdf9841..f2b29c896c 100644
--- a/java/org/apache/catalina/deploy/WebXml.java
+++ b/java/org/apache/catalina/deploy/WebXml.java
@@ -547,9 +547,8 @@ public class WebXml {
     private URL uRL = null;
     public void setURL(URL url) { this.uRL = url; }
     public URL getURL() { return uRL; }
-    
-    
-    
+
+
     @Override
     public String toString() {
         StringBuilder buf = new StringBuilder(32);

==================================================
ClusterSession.java
index 167c2af625..153d0c87b2 100644
--- a/java/org/apache/catalina/ha/ClusterRuleSet.java
+++ b/java/org/apache/catalina/ha/ClusterRuleSet.java
@@ -94,7 +94,6 @@ public class ClusterRuleSet extends RuleSetBase {
         digester.addSetNext(prefix + "Manager",
                             "setManagerTemplate",
                             "org.apache.catalina.ha.ClusterManager");
-        
 
 
         digester.addObjectCreate(prefix + "Channel",

==================================================
DeltaManager.java
index 742c19ee87..eb124bb6f2 100644
--- a/java/org/apache/catalina/ha/ClusterSession.java
+++ b/java/org/apache/catalina/ha/ClusterSession.java
@@ -35,7 +35,6 @@ public interface ClusterSession extends Session, HttpSession {
     * @param primarySession Flag value
     */
    public void setPrimarySession(boolean primarySession);
-   
-   
+
 
 }

==================================================
DeltaRequest.java
index dc36148035..949d424908 100644
--- a/java/org/apache/catalina/ha/session/DeltaManager.java
+++ b/java/org/apache/catalina/ha/session/DeltaManager.java
@@ -683,7 +683,6 @@ public class DeltaManager extends ClusterManagerBase{
 
     }
 
-    
 
     /**
      * Save any currently active sessions in the appropriate persistence

==================================================
DeltaSession.java
index 00ddc0b13c..317fc89795 100644
--- a/java/org/apache/catalina/ha/session/DeltaRequest.java
+++ b/java/org/apache/catalina/ha/session/DeltaRequest.java
@@ -257,7 +257,6 @@ public class DeltaRequest implements Externalizable {
             actions.addLast(info);
         }//for
     }
-        
 
 
     public void writeExternal(java.io.ObjectOutput out ) throws java.io.IOException {

==================================================
SerializablePrincipal.java
index f9fc581303..e068922f77 100644
--- a/java/org/apache/catalina/ha/session/DeltaSession.java
+++ b/java/org/apache/catalina/ha/session/DeltaSession.java
@@ -530,7 +530,6 @@ public class DeltaSession extends StandardSession implements Externalizable,Clus
     // ----------------------------------------------HttpSession Public Methods
 
 
-
     /**
      * Remove the object bound with the specified name from this session. If the
      * session does not have an object bound with this name, this method does
@@ -759,7 +758,6 @@ public class DeltaSession extends StandardSession implements Externalizable,Clus
 
     // -------------------------------------------------------- Private Methods
 
-    
 
     /**
      * Return the value of an attribute without a check for validity.

==================================================
SessionMessage.java
index c30126d3e6..65081e72aa 100644
--- a/java/org/apache/catalina/ha/session/SerializablePrincipal.java
+++ b/java/org/apache/catalina/ha/session/SerializablePrincipal.java
@@ -153,8 +153,6 @@ public class SerializablePrincipal  implements java.io.Serializable {
     }
 
 
-
-
     /**
      * The set of roles associated with this user.
      */
@@ -173,8 +171,6 @@ public class SerializablePrincipal  implements java.io.Serializable {
     // --------------------------------------------------------- Public Methods
 
 
-
-
     /**
      * Return a String representation of this object, which exposes only
      * information that should be public.

==================================================
SimpleTcpCluster.java
index 2fb1af2e00..a1cb7850e5 100644
--- a/java/org/apache/catalina/ha/session/SessionMessage.java
+++ b/java/org/apache/catalina/ha/session/SessionMessage.java
@@ -100,7 +100,6 @@ public interface SessionMessage extends ClusterMessage, java.io.Serializable
      * @return the session ID for the session
      */
     public String getSessionID();
-    
 
 
 }//SessionMessage

==================================================
WebappClassLoader.java
index 63e16a07d7..f5dea45c36 100644
--- a/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java
+++ b/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java
@@ -896,8 +896,6 @@ public class SimpleTcpCluster extends LifecycleBase
     }
 
 
-
-    
     // ------------------------------------------------------------- deprecated
 
     /**

==================================================
MBeanUtils.java
index a90a3a813d..baba0797c9 100644
--- a/java/org/apache/catalina/loader/WebappClassLoader.java
+++ b/java/org/apache/catalina/loader/WebappClassLoader.java
@@ -171,8 +171,6 @@ public class WebappClassLoader
         }           
     }
 
-    
-
 
     // ------------------------------------------------------- Static Variables
 

==================================================
ServerLifecycleListener.java
index a5ca8ffaec..896e06bd10 100644
--- a/java/org/apache/catalina/mbeans/MBeanUtils.java
+++ b/java/org/apache/catalina/mbeans/MBeanUtils.java
@@ -616,9 +616,8 @@ public class MBeanUtils {
         return (name);
 
     }
-    
-    
- 
+
+
     /**
      * Create an <code>ObjectName</code> for this
      * <code>Engine</code> object.

==================================================
JNDIRealm.java
index dbcbc41dcc..85cf0165f6 100644
--- a/java/org/apache/catalina/mbeans/mbeans-descriptors.xml
+++ b/java/org/apache/catalina/mbeans/mbeans-descriptors.xml
@@ -241,8 +241,6 @@
     </operation>
 
 
-
-
     <operation   name="createStandardManager"
           description="Create a new StandardManager"
                impact="ACTION"

==================================================
RealmBase.java
index 65f978c674..43018029df 100644
--- a/java/org/apache/catalina/realm/JNDIRealm.java
+++ b/java/org/apache/catalina/realm/JNDIRealm.java
@@ -772,7 +772,6 @@ public class JNDIRealm extends RealmBase {
         this.roleNested = roleNested;
 
     }
-     
 
 
     /**
@@ -1437,7 +1436,6 @@ public class JNDIRealm extends RealmBase {
      }
 
 
-
     /**
      * Check whether the credentials presented by the user match those
      * retrieved from the directory.
@@ -1527,7 +1525,6 @@ public class JNDIRealm extends RealmBase {
     }
 
 
-
     /**
      * Check credentials by binding to the directory as the user
      *
@@ -1764,7 +1761,6 @@ public class JNDIRealm extends RealmBase {
     }
 
 
-
     /**
      * Add values of a specified attribute to a list
      *

==================================================
SecurityConfig.java
index a6d8838cd6..b9897ee278 100644
--- a/java/org/apache/catalina/realm/RealmBase.java
+++ b/java/org/apache/catalina/realm/RealmBase.java
@@ -268,7 +268,6 @@ public abstract class RealmBase extends LifecycleMBeanBase implements Realm {
     // --------------------------------------------------------- Public Methods
 
 
-    
     /**
      * Add a property change listener to this component.
      *
@@ -375,7 +374,6 @@ public abstract class RealmBase extends LifecycleMBeanBase implements Realm {
     }
 
 
-
     /**
      * Return the Principal associated with the specified chain of X509
      * client certificates.  If there is none, return <code>null</code>.

==================================================
CGIServlet.java
index 06d0774eb9..9fcd4dd043 100644
--- a/java/org/apache/catalina/security/SecurityConfig.java
+++ b/java/org/apache/catalina/security/SecurityConfig.java
@@ -131,5 +131,3 @@ public final class SecurityConfig{
 }
 
 
-
-

==================================================
PersistentManagerBase.java
index 959862ce63..012b9c5149 100644
--- a/java/org/apache/catalina/servlets/CGIServlet.java
+++ b/java/org/apache/catalina/servlets/CGIServlet.java
@@ -323,7 +323,6 @@ public final class CGIServlet extends HttpServlet {
     }
 
 
-
     /**
      * Prints out important Servlet API and container information
      *
@@ -528,11 +527,9 @@ public final class CGIServlet extends HttpServlet {
         out.println("<hr>");
 
 
-
     }
 
 
-
     /**
      * Provides CGI Gateway service -- delegates to <code>doGet</code>
      *
@@ -552,7 +549,6 @@ public final class CGIServlet extends HttpServlet {
     }
 
 
-
     /**
      * Provides CGI Gateway service
      *
@@ -702,7 +698,6 @@ public final class CGIServlet extends HttpServlet {
         }
 
 
-
         /**
          * Uses the ServletContext to set some CGI variables
          *
@@ -716,7 +711,6 @@ public final class CGIServlet extends HttpServlet {
         }
 
 
-
         /**
          * Uses the HttpServletRequest to set most CGI variables
          *
@@ -1244,7 +1238,6 @@ public final class CGIServlet extends HttpServlet {
         }
 
 
-
         /**
          * Gets derived command string
          *
@@ -1256,7 +1249,6 @@ public final class CGIServlet extends HttpServlet {
         }
 
 
-
         /**
          * Gets derived CGI working directory
          *
@@ -1268,7 +1260,6 @@ public final class CGIServlet extends HttpServlet {
         }
 
 
-
         /**
          * Gets derived CGI environment
          *
@@ -1280,7 +1271,6 @@ public final class CGIServlet extends HttpServlet {
         }
 
 
-
         /**
          * Gets derived CGI query parameters
          *
@@ -1292,7 +1282,6 @@ public final class CGIServlet extends HttpServlet {
         }
 
 
-
         /**
          * Gets validity status
          *
@@ -1305,7 +1294,6 @@ public final class CGIServlet extends HttpServlet {
         }
 
 
-
         /**
          * Converts null strings to blank strings ("")
          *
@@ -1318,7 +1306,6 @@ public final class CGIServlet extends HttpServlet {
         }
 
 
-
         /**
          * Converts null strings to another string
          *
@@ -1333,7 +1320,6 @@ public final class CGIServlet extends HttpServlet {
         }
 
 
-
         /**
          * Converts blank strings to another string
          *
@@ -1350,14 +1336,9 @@ public final class CGIServlet extends HttpServlet {
         }
 
 
-
     } //class CGIEnvironment
 
 
-
-
-
-
     /**
      * Encapsulates the knowledge of how to run a CGI script, given the
      * script's desired environment and (optionally) input/output streams
@@ -1407,8 +1388,6 @@ public final class CGIServlet extends HttpServlet {
         private boolean readyToRun = false;
 
 
-
-
         /**
          *  Creates a CGIRunner and initializes its environment, working
          *  directory, and query parameters.
@@ -1433,7 +1412,6 @@ public final class CGIServlet extends HttpServlet {
         }
 
 
-
         /**
          * Checks & sets ready status
          */
@@ -1450,7 +1428,6 @@ public final class CGIServlet extends HttpServlet {
         }
 
 
-
         /**
          * Gets ready status
          *
@@ -1462,7 +1439,6 @@ public final class CGIServlet extends HttpServlet {
         }
 
 
-
         /**
          * Sets HttpServletResponse object used to set headers and send
          * output to
@@ -1476,7 +1452,6 @@ public final class CGIServlet extends HttpServlet {
         }
 
 
-
         /**
          * Sets standard input to be passed on to the invoked cgi script
          *
@@ -1489,7 +1464,6 @@ public final class CGIServlet extends HttpServlet {
         }
 
 
-
         /**
          * Converts a Hashtable to a String array by converting each
          * key/value pair in the Hashtable to a String in the form
@@ -1516,7 +1490,6 @@ public final class CGIServlet extends HttpServlet {
         }
 
 
-
         /**
          * Executes a CGI script with the desired environment, current working
          * directory, and input/output streams

==================================================
StandardSession.java
index 21004d0b18..814b805136 100644
--- a/java/org/apache/catalina/session/PersistentManagerBase.java
+++ b/java/org/apache/catalina/session/PersistentManagerBase.java
@@ -188,9 +188,6 @@ public abstract class PersistentManagerBase extends ManagerBase {
 
     // ------------------------------------------------------------- Properties
 
-    
-  
-
 
     /**
      * Indicates how many seconds old a session can get, after its last use in a
@@ -360,7 +357,6 @@ public abstract class PersistentManagerBase extends ManagerBase {
     }
 
 
-
     /**
      * Indicates whether sessions are saved when the Manager is shut down
      * properly. This requires the unload() method to be called.

==================================================
Catalina.java
index 166becdeb4..9e3564d5a3 100644
--- a/java/org/apache/catalina/session/StandardSession.java
+++ b/java/org/apache/catalina/session/StandardSession.java
@@ -1236,7 +1236,6 @@ public class StandardSession
     }
 
 
-
     /**
      * Bind an object to this session, using the specified name.  If an object
      * of the same name is already bound to this session, the object is
@@ -1671,7 +1670,6 @@ public class StandardSession
             ((StandardContext) context).fireContainerEvent(type, data);
         }
     }
-                                      
 
 
     /**
@@ -1853,5 +1851,4 @@ final class StandardSessionContext implements HttpSessionContext {
     }
 
 
-
 }

==================================================
Tomcat.java
index 3c87d85272..a47b245c17 100644
--- a/java/org/apache/catalina/startup/Catalina.java
+++ b/java/org/apache/catalina/startup/Catalina.java
@@ -350,8 +350,6 @@ public class Catalina {
         digester.addSetNext("Server/Service/Connector",
                             "addConnector",
                             "org.apache.catalina.connector.Connector");
-        
-        
 
 
         digester.addObjectCreate("Server/Service/Connector/Listener",

==================================================
ChannelMessage.java
index f1b5588b28..903041fa40 100644
--- a/java/org/apache/catalina/startup/Tomcat.java
+++ b/java/org/apache/catalina/startup/Tomcat.java
@@ -499,10 +499,7 @@ public class Tomcat {
         return ctx;
     }
 
-    
-    
 
-    
     // ---------- Helper methods and classes -------------------
     
     /** 

==================================================
AbsoluteOrder.java
index 15af289785..4596b81b38 100644
--- a/java/org/apache/catalina/tribes/ChannelMessage.java
+++ b/java/org/apache/catalina/tribes/ChannelMessage.java
@@ -28,10 +28,8 @@ import org.apache.catalina.tribes.io.XByteBuffer;
  * 
  */
 public interface ChannelMessage extends Serializable {
-    
-    
-    
-    
+
+
     /**
      * Get the address that this message originated from.  
      * Almost always <code>Channel.getLocalMember(boolean)</code><br>

==================================================
RpcChannel.java
index 9f48f90b1f..6d3f59676f 100644
--- a/java/org/apache/catalina/tribes/group/AbsoluteOrder.java
+++ b/java/org/apache/catalina/tribes/group/AbsoluteOrder.java
@@ -50,8 +50,7 @@ public class AbsoluteOrder {
         super();
     }
 
-    
-    
+
     public static void absoluteOrder(Member[] members) {
         if ( members == null || members.length == 0 ) return;
         Arrays.sort(members,comp);

==================================================
FragmentationInterceptor.java
index 8f44f06f81..0fb774bd13 100644
--- a/java/org/apache/catalina/tribes/group/RpcChannel.java
+++ b/java/org/apache/catalina/tribes/group/RpcChannel.java
@@ -174,7 +174,6 @@ public class RpcChannel implements ChannelListener{
     public void setRpcId(byte[] rpcId) {
         this.rpcId = rpcId;
     }
-    
 
 
     /**

==================================================
NonBlockingCoordinator.java
index c64837fc24..1ebdd004f9 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/FragmentationInterceptor.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/FragmentationInterceptor.java
@@ -153,7 +153,6 @@ public class FragmentationInterceptor extends ChannelInterceptorBase {
         super.heartbeat();
     }
 
-    
 
     public int getMaxSize() {
         return maxSize;
@@ -215,8 +214,7 @@ public class FragmentationInterceptor extends ChannelInterceptorBase {
             return (System.currentTimeMillis()-received)>expire;
         }
 
-        
-        
+
     }
     
     public static class FragKey {

==================================================
OrderInterceptor.java
index 764d2ba223..197fe742f8 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/NonBlockingCoordinator.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/NonBlockingCoordinator.java
@@ -635,10 +635,8 @@ public class NonBlockingCoordinator extends ChannelInterceptorBase {
 //============================================================================================================    
 //              HELPER CLASSES FOR COORDINATION
 //============================================================================================================
-    
-    
-   
-    
+
+
     public static class CoordinationMessage {
         //X{A-ldr, A-src, mbrs-A,B,C,D}
         protected XByteBuffer buf;
@@ -848,8 +846,5 @@ public class NonBlockingCoordinator extends ChannelInterceptorBase {
         }
     }
 
-    
-
-
 
 }
\ No newline at end of file

==================================================
TcpPingInterceptor.java
index 71c771937e..778a774dd2 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/OrderInterceptor.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/OrderInterceptor.java
@@ -28,7 +28,6 @@ import org.apache.catalina.tribes.group.InterceptorPayload;
 import org.apache.catalina.tribes.io.XByteBuffer;
 
 
-
 /**
  *
  * The order interceptor guarantees that messages are received in the same order they were 
@@ -301,9 +300,8 @@ public class OrderInterceptor extends ChannelInterceptorBase {
         public int getMsgNr() {
             return msgNr;
         }
-        
-        
-        
+
+
     }
 
     public void setExpire(long expire) {

==================================================
ChannelData.java
index 7e056a95ee..26d67620bb 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/TcpPingInterceptor.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/TcpPingInterceptor.java
@@ -179,7 +179,5 @@ public class TcpPingInterceptor extends ChannelInterceptorBase {
         }
     }
 
-    
-    
 
 }

==================================================
XByteBuffer.java
index 085c2f81e0..9984eb7b3c 100644
--- a/java/org/apache/catalina/tribes/io/ChannelData.java
+++ b/java/org/apache/catalina/tribes/io/ChannelData.java
@@ -76,9 +76,8 @@ public class ChannelData implements ChannelMessage {
     public ChannelData(boolean generateUUID) {
         if ( generateUUID ) generateUUID();
     }
-    
-    
-    
+
+
     /**
      * Creates a new channel data object with data
      * @param uniqueId - unique message id

==================================================
McastServiceImpl.java
index 0a940d37b3..71f2d63315 100644
--- a/java/org/apache/catalina/tribes/io/XByteBuffer.java
+++ b/java/org/apache/catalina/tribes/io/XByteBuffer.java
@@ -377,8 +377,7 @@ public class XByteBuffer
         byte[] result = new byte[length];
         return createDataPackage(data,0,data.length,result,0);
     }
-    
-    
+
 
 //    public static void fillDataPackage(byte[] data, int doff, int dlength, XByteBuffer buf) {
 //        int pkglen = getDataPackageLength(dlength);

==================================================
LazyReplicatedMap.java
index fc417ac17b..28d1c47c1e 100644
--- a/java/org/apache/catalina/tribes/membership/McastServiceImpl.java
+++ b/java/org/apache/catalina/tribes/membership/McastServiceImpl.java
@@ -238,8 +238,7 @@ public class McastServiceImpl
             socket.setTimeToLive(mcastTTL);
         }
     }
-    
-    
+
 
     /**
      * Start the service

==================================================
ReplicatedMapEntry.java
index bbe508d0a3..7d0a06294b 100644
--- a/java/org/apache/catalina/tribes/tipis/LazyReplicatedMap.java
+++ b/java/org/apache/catalina/tribes/tipis/LazyReplicatedMap.java
@@ -65,9 +65,8 @@ import org.apache.juli.logging.LogFactory;
  */
 public class LazyReplicatedMap extends AbstractReplicatedMap {
     private static final Log log = LogFactory.getLog(LazyReplicatedMap.class);
-    
 
-    
+
 //------------------------------------------------------------------------------    
 //              CONSTRUCTORS / DESTRUCTORS
 //------------------------------------------------------------------------------   
@@ -105,9 +104,6 @@ public class LazyReplicatedMap extends AbstractReplicatedMap {
         }
 
 
-
-
-    
 //------------------------------------------------------------------------------    
 //              METHODS TO OVERRIDE    
 //------------------------------------------------------------------------------
@@ -181,9 +177,6 @@ public class LazyReplicatedMap extends AbstractReplicatedMap {
         } while ( !success && (firstIdx!=nextIdx));
         return backup;
     }
-    
-    
-
 
 
 }
\ No newline at end of file

==================================================
AbstractRxTask.java
index ad0049803d..b44c606819 100644
--- a/java/org/apache/catalina/tribes/tipis/ReplicatedMapEntry.java
+++ b/java/org/apache/catalina/tribes/tipis/ReplicatedMapEntry.java
@@ -117,8 +117,6 @@ public interface ReplicatedMapEntry extends Serializable {
      * @param version long
      */
     public void setVersion(long version);
-    
-    
-    
-    
+
+
 }
\ No newline at end of file

==================================================
PooledSender.java
index b63352b44d..9bedf1b628 100644
--- a/java/org/apache/catalina/tribes/transport/AbstractRxTask.java
+++ b/java/org/apache/catalina/tribes/transport/AbstractRxTask.java
@@ -20,8 +20,6 @@ package org.apache.catalina.tribes.transport;
 import org.apache.catalina.tribes.io.ListenCallback;
 
 
-
-
 /**
  * @author Filip Hanik
  * @version $Id$

==================================================
ReplicationTransmitter.java
index 8df3c0ead3..ca20adc304 100644
--- a/java/org/apache/catalina/tribes/transport/PooledSender.java
+++ b/java/org/apache/catalina/tribes/transport/PooledSender.java
@@ -206,7 +206,6 @@ public abstract class PooledSender extends AbstractSender implements MultiPointS
             notinuse.clear();
             inuse.clear();
             notify();
-            
 
 
         }

==================================================
BioReceiver.java
index 85e8d6ef0c..26e3a0dcfe 100644
--- a/java/org/apache/catalina/tribes/transport/ReplicationTransmitter.java
+++ b/java/org/apache/catalina/tribes/transport/ReplicationTransmitter.java
@@ -44,7 +44,6 @@ public class ReplicationTransmitter implements ChannelSender {
      */
     protected static final StringManager sm = StringManager.getManager(Constants.Package);
 
-    
 
     public ReplicationTransmitter() {
     }
@@ -129,6 +128,5 @@ public class ReplicationTransmitter implements ChannelSender {
 
     // ------------------------------------------------------------- protected
 
-    
 
 }

==================================================
BioReplicationTask.java
index 6fa722c3ef..75e52360c0 100644
--- a/java/org/apache/catalina/tribes/transport/bio/BioReceiver.java
+++ b/java/org/apache/catalina/tribes/transport/bio/BioReceiver.java
@@ -93,9 +93,7 @@ public class BioReceiver extends ReceiverBase implements Runnable {
         super.stop();
     }
 
-    
-    
-    
+
     protected void bind() throws IOException {
         // allocate an unbound server socket channel
         serverSocket = new ServerSocket();
@@ -103,9 +101,8 @@ public class BioReceiver extends ReceiverBase implements Runnable {
         //serverSocket.bind(new InetSocketAddress(getBind(), getTcpListenPort()));
         bind(serverSocket,getPort(),getAutoBind());
     }
-    
-    
-    
+
+
     public void run() {
         try {
             listen();

==================================================
NioReplicationTask.java
index c95f3fdb65..9a8d2ba80e 100644
--- a/java/org/apache/catalina/tribes/transport/bio/BioReplicationTask.java
+++ b/java/org/apache/catalina/tribes/transport/bio/BioReplicationTask.java
@@ -138,8 +138,6 @@ public class BioReplicationTask extends AbstractRxTask {
     }
 
 
-
-
     /**
      * send a reply-acknowledgment (6,2,3)
      * @param command

==================================================
Arrays.java
index 2b26e99c4f..5575b7b650 100644
--- a/java/org/apache/catalina/tribes/transport/nio/NioReplicationTask.java
+++ b/java/org/apache/catalina/tribes/transport/nio/NioReplicationTask.java
@@ -291,9 +291,6 @@ public class NioReplicationTask extends AbstractRxTask {
     }
 
 
-
-
-
     /**
      * send a reply-acknowledgement (6,2,3), sends it doing a busy write, the ACK is so small
      * that it should always go to the buffer

==================================================
DateTool.java
index 7f51df5507..6706f10f8b 100644
--- a/java/org/apache/catalina/tribes/util/Arrays.java
+++ b/java/org/apache/catalina/tribes/util/Arrays.java
@@ -216,8 +216,7 @@ public class Arrays {
         return result;
     }
 
-    
- 
+
     public static byte[] convert(String s) {
         try {
             return s.getBytes("ISO-8859-1");
@@ -228,7 +227,4 @@ public class Arrays {
     }
 
 
-    
-    
-    
 }
\ No newline at end of file

==================================================
AccessLogValve.java
index b7617343a8..b68423be16 100644
--- a/java/org/apache/catalina/util/DateTool.java
+++ b/java/org/apache/catalina/util/DateTool.java
@@ -93,7 +93,6 @@ public class DateTool {
         }
     };
 
-        
 
     public final static ThreadLocal<DateFormat> rfc1036Format = new ThreadLocal<DateFormat>() {
         @Override

==================================================
AjpProcessor.java
index c3a614ba41..ea1feac2f9 100644
--- a/java/org/apache/catalina/valves/AccessLogValve.java
+++ b/java/org/apache/catalina/valves/AccessLogValve.java
@@ -954,8 +954,6 @@ public class AccessLogValve extends ValveBase implements AccessLog {
      * write date and time, in Common Log Format - %t
      */
     protected class DateAndTimeElement implements AccessLogElement {
-        
-        
 
 
         public void addElement(StringBuilder buf, Date date, Request request,
@@ -1305,8 +1303,6 @@ public class AccessLogValve extends ValveBase implements AccessLog {
     }
 
 
-
-
     /**
      * parse pattern string and create the array of AccessLogElement
      */

==================================================
AbstractHttp11Processor.java
index 2bb7eea418..906c5d4835 100644
--- a/java/org/apache/coyote/ajp/AjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpProcessor.java
@@ -535,10 +535,8 @@ public class AjpProcessor implements ActionHook {
             output = null;
             return SocketState.CLOSED;
         }
-        
-        
-        
-        
+
+
     }
 
     // ----------------------------------------------------- ActionHook Methods

==================================================
AbstractInputBuffer.java
index f399d2afca..e29638bc19 100644
--- a/java/org/apache/coyote/http11/AbstractHttp11Processor.java
+++ b/java/org/apache/coyote/http11/AbstractHttp11Processor.java
@@ -150,7 +150,6 @@ public abstract class AbstractHttp11Processor {
     protected String localName = null;
 
 
-
     /**
      * Local port to which the socket is connected
      */
@@ -365,10 +364,7 @@ public abstract class AbstractHttp11Processor {
         }
         return "off";
     }
-    
-    
 
- 
 
     /**
      * General use method
@@ -827,5 +823,4 @@ public abstract class AbstractHttp11Processor {
     }
 
 
-
 }

==================================================
AbstractOutputBuffer.java
index 744c2dfc0c..f023fd236a 100644
--- a/java/org/apache/coyote/http11/AbstractInputBuffer.java
+++ b/java/org/apache/coyote/http11/AbstractInputBuffer.java
@@ -39,8 +39,6 @@ public abstract class AbstractInputBuffer implements InputBuffer{
     // ----------------------------------------------------------- Constructors
 
 
-    
-
     // -------------------------------------------------------------- Variables
 
 
@@ -229,8 +227,6 @@ public abstract class AbstractInputBuffer implements InputBuffer{
         this.swallowInput = swallowInput;
     }
 
-    
-
 
     // --------------------------------------------------------- Public Methods
 

==================================================
Http11NioProtocol.java
index abefa16f56..6aa1666071 100644
--- a/java/org/apache/coyote/http11/AbstractOutputBuffer.java
+++ b/java/org/apache/coyote/http11/AbstractOutputBuffer.java
@@ -72,7 +72,6 @@ public abstract class AbstractOutputBuffer implements OutputBuffer{
     protected int pos;
 
 
-
     /**
      * Filter library.
      * Note: Filter[0] is always the "chunked" filter.
@@ -114,9 +113,6 @@ public abstract class AbstractOutputBuffer implements OutputBuffer{
     // ------------------------------------------------------------- Properties
 
 
-
-
-
     /**
      * Add an output filter to the filter library.
      */
@@ -178,8 +174,6 @@ public abstract class AbstractOutputBuffer implements OutputBuffer{
     }
 
 
-
-    
  // --------------------------------------------------- OutputBuffer Methods
 
 
@@ -386,7 +380,6 @@ public abstract class AbstractOutputBuffer implements OutputBuffer{
         }
 
     } 
-    
 
 
     /**
@@ -583,5 +576,4 @@ public abstract class AbstractOutputBuffer implements OutputBuffer{
     }
 
 
-
 }

==================================================
Http11Protocol.java
index 0014ebe1f5..beb3bcab05 100644
--- a/java/org/apache/coyote/http11/Http11NioProtocol.java
+++ b/java/org/apache/coyote/http11/Http11NioProtocol.java
@@ -116,7 +116,6 @@ public class Http11NioProtocol extends AbstractHttp11JsseProtocol {
             log.info(sm.getString("http11protocol.start", getName()));
     }
 
- 
 
     // -------------------- Properties--------------------
     
@@ -474,8 +473,6 @@ public class Http11NioProtocol extends AbstractHttp11JsseProtocol {
         }
 
     }
-    
-
 
 
 }

==================================================
InternalNioInputBuffer.java
index 1cdb5cc39e..ecac665f89 100644
--- a/java/org/apache/coyote/http11/Http11Protocol.java
+++ b/java/org/apache/coyote/http11/Http11Protocol.java
@@ -158,9 +158,7 @@ public class Http11Protocol extends AbstractHttp11JsseProtocol {
     }
     // ------------------------------------------------------------- Properties
 
-    
 
- 
     /**
      * Name of the socket factory.
      */

==================================================
InternalNioOutputBuffer.java
index 4f12954ae6..e6c8f4fbb7 100644
--- a/java/org/apache/coyote/http11/InternalNioInputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalNioInputBuffer.java
@@ -101,7 +101,6 @@ public class InternalNioInputBuffer extends AbstractInputBuffer {
      * Selector pool, for blocking reads and blocking writes
      */
     protected NioSelectorPool pool;
-    
 
 
     // ------------------------------------------------------------- Properties
@@ -495,8 +494,7 @@ public class InternalNioInputBuffer extends AbstractInputBuffer {
         // Reading the header name
         // Header name is always US-ASCII
         //
-        
-        
+
 
         while (headerParsePos == HeaderParsePosition.HEADER_NAME) {
 
@@ -650,8 +648,6 @@ public class InternalNioInputBuffer extends AbstractInputBuffer {
     }
 
 
-
-
     // ------------------------------------------------------ Protected Methods
 
     /**

==================================================
InternalOutputBuffer.java
index ffa17d2e31..b64a06c79e 100644
--- a/java/org/apache/coyote/http11/InternalNioOutputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalNioOutputBuffer.java
@@ -103,8 +103,6 @@ public class InternalNioOutputBuffer extends AbstractOutputBuffer {
     protected NioSelectorPool pool;
 
 
-
-    
     // ------------------------------------------------------------- Properties
 
 
@@ -229,7 +227,6 @@ public class InternalNioOutputBuffer extends AbstractOutputBuffer {
     } 
 
 
-
     // ------------------------------------------------------ Protected Methods
 
 

==================================================
BeanRepository.java
index 0230e2e128..501d04c529 100644
--- a/java/org/apache/coyote/http11/InternalOutputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalOutputBuffer.java
@@ -123,8 +123,6 @@ public class InternalOutputBuffer extends AbstractOutputBuffer
         }
 
     }
-    
-
 
 
     // --------------------------------------------------------- Public Methods
@@ -149,9 +147,6 @@ public class InternalOutputBuffer extends AbstractOutputBuffer
     }
 
 
-    
-
-
     /**
      * Recycle the output buffer. This should be called when closing the 
      * connection.
@@ -208,7 +203,6 @@ public class InternalOutputBuffer extends AbstractOutputBuffer
     }
 
 
-
     // ------------------------------------------------------ Protected Methods
 
 
@@ -237,8 +231,6 @@ public class InternalOutputBuffer extends AbstractOutputBuffer
     }
 
 
- 
-
     /**
      * Callback to write data from the buffer.
      */

==================================================
Import.java
index 032b978cf4..c702c211d4 100644
--- a/java/org/apache/jasper/compiler/BeanRepository.java
+++ b/java/org/apache/jasper/compiler/BeanRepository.java
@@ -71,5 +71,3 @@ public class BeanRepository {
 }
 
 
-
-

==================================================
XMLChar.java
index aaaae4c36e..d92df284c0 100644
--- a/java/org/apache/jasper/tagplugins/jstl/core/Import.java
+++ b/java/org/apache/jasper/tagplugins/jstl/core/Import.java
@@ -376,7 +376,6 @@ public class Import implements TagPlugin {
             }
         }
     }
-    
-    
-    
+
+
 }

==================================================
LogFactory.java
index 4e022ec7f1..4e84e332bc 100644
--- a/java/org/apache/jasper/xmlparser/XMLChar.java
+++ b/java/org/apache/jasper/xmlparser/XMLChar.java
@@ -967,9 +967,6 @@ public class XMLChar {
     } // isValidName(String):boolean
 
 
-
-
-
     // encodings
 
     /**

==================================================
Constants.java
index c013eb6083..63fd87b6d3 100644
--- a/java/org/apache/juli/logging/LogFactory.java
+++ b/java/org/apache/juli/logging/LogFactory.java
@@ -22,7 +22,6 @@ import java.util.Properties;
 import java.util.logging.LogManager;
 
 
-
 /**
  * Modified LogFactory: removed all discovery, hardcode a specific implementation
  * If you like a different logging implementation - use either the discovery-based
@@ -244,13 +243,9 @@ public /* abstract */ class LogFactory {
     }
 
 
-    
-
-
     // ------------------------------------------------------- Static Variables
 
 
-
     // --------------------------------------------------------- Static Methods
 
 

==================================================
AnnotationDefault.java
index 59c5cb34dc..cac45f496d 100644
--- a/java/org/apache/tomcat/util/bcel/Constants.java
+++ b/java/org/apache/tomcat/util/bcel/Constants.java
@@ -293,7 +293,6 @@ public interface Constants {
     "void", "array", "object", "unknown", "address"
   };
 
-  
 
   /**
    * Number of byte code operands for each opcode, i.e., number of bytes after the tag byte
@@ -482,9 +481,6 @@ public interface Constants {
     ILLEGAL_OPCODE, "impdep1", "impdep2"
   };
 
-  
-
-  
 
   /** Attributes and their corresponding names.
    */

==================================================
Attribute.java
index e5ecfca4af..251a57d260 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/AnnotationDefault.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/AnnotationDefault.java
@@ -80,7 +80,6 @@ public class AnnotationDefault extends Attribute
         default_value = defaultValue;
     }
 
-    
 
     @Override
     public Attribute copy(ConstantPool _constant_pool)

==================================================
ClassElementValue.java
index 2ce8417a59..d0f781547d 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Attribute.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Attribute.java
@@ -193,13 +193,6 @@ public abstract class Attribute implements Cloneable, Serializable
         return c.getBytes();
     }
 
-    
-
-    
-
-    
-
-    
 
     /**
      * @return Tag of attribute, i.e., its type. Value may not be altered, thus
@@ -210,9 +203,6 @@ public abstract class Attribute implements Cloneable, Serializable
         return tag;
     }
 
-    
-
-    
 
     /**
      * Use copy() if you want to have a deep copy(), i.e., with all references

==================================================
ClassParser.java
index 489d6a4f1b..0008796186 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ClassElementValue.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ClassElementValue.java
@@ -35,9 +35,6 @@ public class ClassElementValue extends ElementValue
         this.idx = idx;
     }
 
-    
-
-    
 
     @Override
     public String stringifyValue()

==================================================
Code.java
index 6015ab71d6..c601b872ff 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ClassParser.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ClassParser.java
@@ -79,12 +79,6 @@ public final class ClassParser {
     }
 
 
-    
-
-
-    
-
-
     /**
      * Parse the given Java class file and return an object that represents
      * the contained data, i.e., constants, methods, fields and commands.

==================================================
CodeException.java
index a79f0905af..80b7a31358 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Code.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Code.java
@@ -55,9 +55,6 @@ public final class Code extends Attribute {
     private Attribute[] attributes; // or LocalVariable
 
 
-    
-
-
     /**
      * @param name_index Index pointing to the name <em>Code</em>
      * @param length Content length in bytes
@@ -141,12 +138,6 @@ public final class Code extends Attribute {
     }
 
 
-    
-
-
-    
-
-
     /**
      * @return LocalVariableTable of Code, if it has one
      */
@@ -160,18 +151,6 @@ public final class Code extends Attribute {
     }
 
 
-    
-
-
-    
-
-
-    
-
-
-    
-
-
     /**
      * @return the internal length of this code attribute (minus the first 6 bytes) 
      * and excluding all its attributes
@@ -226,12 +205,6 @@ public final class Code extends Attribute {
     }
 
 
-    
-
-
-    
-
-
     /**
      * @return String representation of code chunk.
      */

==================================================
Constant.java
index 4734dd3869..72f7a916d7 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/CodeException.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/CodeException.java
@@ -47,9 +47,6 @@ public final class CodeException implements Cloneable, Constants, Serializable {
      */
 
 
-    
-
-
     /**
      * Construct object from file stream.
      * @param file Input stream
@@ -79,9 +76,6 @@ public final class CodeException implements Cloneable, Constants, Serializable {
     }
 
 
-    
-
-
     /**
      * Dump code exception to file stream in binary format.
      *
@@ -96,30 +90,6 @@ public final class CodeException implements Cloneable, Constants, Serializable {
     }
 
 
-    
-
-
-    
-
-
-    
-
-
-    
-
-
-    
-
-
-    
-
-
-    
-
-
-    
-
-
     /**
      * @return String representation.
      */
@@ -145,9 +115,6 @@ public final class CodeException implements Cloneable, Constants, Serializable {
     }
 
 
-    
-
-
     /**
      * @return deep copy of this object
      */

==================================================
ConstantCP.java
index 2fca08a7fe..507a67d853 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Constant.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Constant.java
@@ -89,9 +89,6 @@ public abstract class Constant implements Cloneable, Serializable {
     }
 
 
-    
-
-
     @Override
     public Object clone() throws CloneNotSupportedException {
         return super.clone();
@@ -136,12 +133,6 @@ public abstract class Constant implements Cloneable, Serializable {
     }
 
 
-    
-
-
-    
-
-
     /**
      * Return value as defined by given BCELComparator strategy.
      * By default two Constant objects are said to be equal when

==================================================
ConstantClass.java
index e47ffd2945..f0221e86af 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantCP.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ConstantCP.java
@@ -38,9 +38,6 @@ public abstract class ConstantCP extends Constant {
     protected int class_index, name_and_type_index;
 
 
-    
-
-
     /**
      * Initialize instance from file data.
      *
@@ -94,15 +91,6 @@ public abstract class ConstantCP extends Constant {
     }
 
 
-    
-
-
-    
-
-
-    
-
-
     /**
      * @return String representation.
      */

==================================================
ConstantDouble.java
index d387355adb..43dff5cea6 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantClass.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ConstantClass.java
@@ -38,9 +38,6 @@ public final class ConstantClass extends Constant implements ConstantObject {
     private int name_index; // Identical to ConstantString except for the name
 
 
-    
-
-
     /**
      * Initialize instance from file data.
      *
@@ -83,15 +80,6 @@ public final class ConstantClass extends Constant implements ConstantObject {
     }
 
 
-    
-
-
-    
-
-
-    
-
-
     /**
      * @return String representation.
      */

==================================================
ConstantFieldref.java
index 38495953e3..e61de2c635 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantDouble.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ConstantDouble.java
@@ -47,9 +47,6 @@ public final class ConstantDouble extends Constant implements ConstantObject {
     }
 
 
-    
-
-
     /** 
      * Initialize instance from file data.
      *
@@ -82,9 +79,6 @@ public final class ConstantDouble extends Constant implements ConstantObject {
     }
 
 
-    
-
-
     /**
      * @return String representation.
      */
@@ -94,5 +88,4 @@ public final class ConstantDouble extends Constant implements ConstantObject {
     }
 
 
-    
 }

==================================================
ConstantFloat.java
index 3b2ff84a6e..58e03deae1 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantFieldref.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ConstantFieldref.java
@@ -30,8 +30,6 @@ import org.apache.tomcat.util.bcel.Constants;
  */
 public final class ConstantFieldref extends ConstantCP {
 
-    
-
 
     private static final long serialVersionUID = -8062332095934294437L;
 
@@ -46,5 +44,4 @@ public final class ConstantFieldref extends ConstantCP {
     }
 
 
-    
 }

==================================================
ConstantInteger.java
index f72b408d42..23650af54e 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantFloat.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ConstantFloat.java
@@ -47,9 +47,6 @@ public final class ConstantFloat extends Constant implements ConstantObject {
     }
 
 
-    
-
-
     /** 
      * Initialize instance from file data.
      *
@@ -82,9 +79,6 @@ public final class ConstantFloat extends Constant implements ConstantObject {
     }
 
 
-    
-
-
     /**
      * @return String representation.
      */
@@ -94,5 +88,4 @@ public final class ConstantFloat extends Constant implements ConstantObject {
     }
 
 
-    
 }

==================================================
ConstantInterfaceMethodref.java
index 64da22644c..64a403e9e7 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantInteger.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ConstantInteger.java
@@ -47,9 +47,6 @@ public final class ConstantInteger extends Constant implements ConstantObject {
     }
 
 
-    
-
-
     /** 
      * Initialize instance from file data.
      *
@@ -82,9 +79,6 @@ public final class ConstantInteger extends Constant implements ConstantObject {
     }
 
 
-    
-
-
     /**
      * @return String representation.
      */
@@ -94,5 +88,4 @@ public final class ConstantInteger extends Constant implements ConstantObject {
     }
 
 
-    
 }

==================================================
ConstantLong.java
index b4f3502c61..b9acf71a6b 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantInterfaceMethodref.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ConstantInterfaceMethodref.java
@@ -30,8 +30,6 @@ import org.apache.tomcat.util.bcel.Constants;
  */
 public final class ConstantInterfaceMethodref extends ConstantCP {
 
-    
-
 
     private static final long serialVersionUID = -8587605570227841891L;
 
@@ -46,5 +44,4 @@ public final class ConstantInterfaceMethodref extends ConstantCP {
     }
 
 
-    
 }

==================================================
ConstantMethodref.java
index c9d67105f9..1161852d6f 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantLong.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ConstantLong.java
@@ -47,9 +47,6 @@ public final class ConstantLong extends Constant implements ConstantObject {
     }
 
 
-    
-
-
     /** 
      * Initialize instance from file data.
      *
@@ -82,9 +79,6 @@ public final class ConstantLong extends Constant implements ConstantObject {
     }
 
 
-    
-
-
     /**
      * @return String representation.
      */
@@ -94,5 +88,4 @@ public final class ConstantLong extends Constant implements ConstantObject {
     }
 
 
-    
 }

==================================================
ConstantNameAndType.java
index b99139e3cb..58419ac97b 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantMethodref.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ConstantMethodref.java
@@ -30,8 +30,6 @@ import org.apache.tomcat.util.bcel.Constants;
  */
 public final class ConstantMethodref extends ConstantCP {
 
-    
-
 
     private static final long serialVersionUID = -7857009620954576086L;
 
@@ -46,5 +44,4 @@ public final class ConstantMethodref extends ConstantCP {
     }
 
 
-    
 }

==================================================
ConstantPool.java
index 0a38d6ef8a..cdc75e19ab 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantNameAndType.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ConstantNameAndType.java
@@ -40,9 +40,6 @@ public final class ConstantNameAndType extends Constant {
     private int signature_index; // and its signature.
 
 
-    
-
-
     /**
      * Initialize instance from file data.
      *
@@ -87,9 +84,6 @@ public final class ConstantNameAndType extends Constant {
     }
 
 
-    
-
-
     /**
      * @return Index in constant pool of field/method signature.
      */
@@ -98,15 +92,6 @@ public final class ConstantNameAndType extends Constant {
     }
 
 
-    
-
-
-    
-
-
-    
-
-
     /**
      * @return String representation
      */

==================================================
ConstantString.java
index 81d08aa55f..673b299b57 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantPool.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ConstantPool.java
@@ -42,9 +42,6 @@ public class ConstantPool implements Cloneable, Serializable {
     private Constant[] constant_pool;
 
 
-    
-
-
     /**
      * Read constants from given file stream.
      *
@@ -76,9 +73,6 @@ public class ConstantPool implements Cloneable, Serializable {
     }
 
 
-    
-
-
     /**
      * Resolve constant to a string representation.
      *
@@ -178,9 +172,6 @@ public class ConstantPool implements Cloneable, Serializable {
     }
 
 
-    
-
-
     /**
      * Get constant from constant pool.
      *
@@ -221,9 +212,6 @@ public class ConstantPool implements Cloneable, Serializable {
     }
 
 
-    
-
-
     /**
      * Get string from constant pool and bypass the indirection of 
      * `ConstantClass' and `ConstantString' objects. I.e. these classes have
@@ -285,5 +273,4 @@ public class ConstantPool implements Cloneable, Serializable {
     }
 
 
-    
 }

==================================================
ConstantUtf8.java
index 14cc108ab2..2b861fa91c 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantString.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ConstantString.java
@@ -38,9 +38,6 @@ public final class ConstantString extends Constant implements ConstantObject {
     private int string_index; // Identical to ConstantClass except for this name
 
 
-    
-
-
     /** 
      * Initialize instance from file data.
      *
@@ -82,9 +79,6 @@ public final class ConstantString extends Constant implements ConstantObject {
     }
 
 
-    
-
-
     /**
      * @return String representation.
      */
@@ -94,8 +88,4 @@ public final class ConstantString extends Constant implements ConstantObject {
     }
 
 
-    
-
-
-    
 }

==================================================
ConstantValue.java
index 21ed5be259..5624202018 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantUtf8.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ConstantUtf8.java
@@ -38,9 +38,6 @@ public final class ConstantUtf8 extends Constant {
     private String bytes;
 
 
-    
-
-
     /**
      * Initialize instance from file data.
      *
@@ -53,9 +50,6 @@ public final class ConstantUtf8 extends Constant {
     }
 
 
-    
-
-
     /**
      * Dump String in Utf8 format to file stream.
      *
@@ -77,9 +71,6 @@ public final class ConstantUtf8 extends Constant {
     }
 
 
-    
-
-
     /**
      * @return String representation
      */

==================================================
Deprecated.java
index 627bb8d7f4..b77b4aaa39 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantValue.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ConstantValue.java
@@ -38,9 +38,6 @@ public final class ConstantValue extends Attribute {
     private int constantvalue_index;
 
 
-    
-
-
     /**
      * Construct object from file stream.
      * @param name_index Name index in constant pool
@@ -81,12 +78,6 @@ public final class ConstantValue extends Attribute {
     }
 
 
-    
-
-
-    
-
-
     /**
      * @return String representation of constant value.
      */

==================================================
ElementValue.java
index 99795e4691..2f49de736c 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Deprecated.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Deprecated.java
@@ -38,9 +38,6 @@ public final class Deprecated extends Attribute {
     private byte[] bytes;
 
 
-    
-
-
     /**
      * @param name_index Index in constant pool to CONSTANT_Utf8
      * @param length Content length in bytes
@@ -87,12 +84,6 @@ public final class Deprecated extends Attribute {
     }
 
 
-    
-
-
-    
-
-
     /**
      * @return attribute name
      */

==================================================
ExceptionTable.java
index c21de14537..cdd4d7ec93 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ElementValue.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ElementValue.java
@@ -44,7 +44,6 @@ public abstract class ElementValue
         this.cpool = cpool;
     }
 
-    
 
     public abstract String stringifyValue();
 

==================================================
Field.java
index 2691e977a9..e576ff408c 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ExceptionTable.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ExceptionTable.java
@@ -42,9 +42,6 @@ public final class ExceptionTable extends Attribute {
     private int[] exception_index_table; // constant pool
 
 
-    
-
-
     /**
      * @param name_index Index in constant pool
      * @param length Content length in bytes
@@ -93,15 +90,6 @@ public final class ExceptionTable extends Attribute {
     }
 
 
-    
-
-
-    
-
-
-    
-
-
     /**
      * @param exception_index_table the list of exception indexes
      * Also redefines number_of_exceptions according to table length.

==================================================
InnerClass.java
index 0bb58e079e..2d99eda361 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Field.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Field.java
@@ -52,9 +52,6 @@ public final class Field extends FieldOrMethod {
     };
 
 
-    
-
-
     /**
      * Construct object from file stream.
      * @param file Input stream
@@ -65,12 +62,6 @@ public final class Field extends FieldOrMethod {
     }
 
 
-    
-
-
-    
-
-
     /**
      * @return constant value associated with this field (may be null)
      */
@@ -114,18 +105,6 @@ public final class Field extends FieldOrMethod {
     }
 
 
-    
-
-
-    
-
-
-    
-
-
-    
-
-
     /**
      * Return value as defined by given BCELComparator strategy.
      * By default two Field objects are said to be equal when

==================================================
InnerClasses.java
index bd0b390fe7..1c2f4ca7b9 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/InnerClass.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/InnerClass.java
@@ -42,9 +42,6 @@ public final class InnerClass implements Cloneable, Serializable {
     private int inner_access_flags;
 
 
-    
-
-
     /**
      * Construct object from file stream.
      * @param file Input stream
@@ -71,9 +68,6 @@ public final class InnerClass implements Cloneable, Serializable {
     }
 
 
-    
-
-
     /**
      * Dump inner class attribute to file stream in binary format.
      *
@@ -88,30 +82,6 @@ public final class InnerClass implements Cloneable, Serializable {
     }
 
 
-    
-
-
-    
-
-
-    
-
-
-    
-
-
-    
-
-
-    
-
-
-    
-
-
-    
-
-
     /**
      * @return String representation.
      */

==================================================
JavaClass.java
index d87c505935..01febbd682 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/InnerClasses.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/InnerClasses.java
@@ -40,9 +40,6 @@ public final class InnerClasses extends Attribute {
     private int number_of_classes;
 
 
-    
-
-
     /**
      * @param name_index Index in constant pool to CONSTANT_Utf8
      * @param length Content length in bytes
@@ -92,9 +89,6 @@ public final class InnerClasses extends Attribute {
     }
 
 
-    
-
-
     /**
      * @param inner_classes the array of inner classes
      */

==================================================
LineNumber.java
index 1529623f4c..fd354ff5dd 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/JavaClass.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/JavaClass.java
@@ -50,12 +50,8 @@ public class JavaClass extends AccessFlags implements Cloneable, Comparable {
     private Method[] methods; // methods defined in the class
     private Attribute[] attributes; // attributes defined in the class
     private AnnotationEntry[] annotations;   // annotations defined on the class
-    
-    
-    
-    
-    
-    
+
+
     //  Annotations are collected from certain attributes, don't do it more than necessary!
     private boolean annotationsOutOfDate = true;
     
@@ -148,30 +144,6 @@ public class JavaClass extends AccessFlags implements Cloneable, Comparable {
     }
 
 
-    
-
-
-    
-
-
-    
-
-
-    
-
-
-    
-
-
-    
-
-
-    
-
-
-    
-
-
     /**
      * @return Attributes of the class.
      */
@@ -272,9 +244,6 @@ public class JavaClass extends AccessFlags implements Cloneable, Comparable {
     }
 
 
-    
-
-
     public final boolean isSuper() {
         return (access_flags & Constants.ACC_SUPER) != 0;
     }

==================================================
LineNumberTable.java
index 3851971905..dd1efab41d 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/LineNumber.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/LineNumber.java
@@ -38,9 +38,6 @@ public final class LineNumber implements Cloneable, Serializable {
     private int line_number; // number in source file
 
 
-    
-
-
     /**
      * Construct object from file stream.
      * @param file Input stream
@@ -61,9 +58,6 @@ public final class LineNumber implements Cloneable, Serializable {
     }
 
 
-    
-
-
     /**
      * Dump line number/pc pair to file stream in binary format.
      *
@@ -76,18 +70,6 @@ public final class LineNumber implements Cloneable, Serializable {
     }
 
 
-    
-
-
-    
-
-
-    
-
-
-    
-
-
     /**
      * @return String representation
      */

==================================================
LocalVariable.java
index 69996d746e..d512eaa365 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/LineNumberTable.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/LineNumberTable.java
@@ -40,9 +40,6 @@ public final class LineNumberTable extends Attribute {
     private LineNumber[] line_number_table; // Table of line/numbers pairs
 
 
-    
-
-
     /*
      * @param name_index Index of name
      * @param length Content length in bytes
@@ -91,9 +88,6 @@ public final class LineNumberTable extends Attribute {
     }
 
 
-    
-
-
     /**
      * @param line_number_table the line number entries for this table
      */
@@ -127,9 +121,6 @@ public final class LineNumberTable extends Attribute {
     }
 
 
-    
-
-
     /**
      * @return deep copy of this attribute
      */
@@ -145,5 +136,4 @@ public final class LineNumberTable extends Attribute {
     }
 
 
-    
 }

==================================================
LocalVariableTable.java
index 0f932c36ed..24cf4bce8e 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/LocalVariable.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/LocalVariable.java
@@ -45,9 +45,6 @@ public final class LocalVariable implements Constants, Cloneable, Serializable {
     private ConstantPool constant_pool;
 
 
-    
-
-
     /**
      * Construct object from file stream.
      * @param file Input stream
@@ -78,9 +75,6 @@ public final class LocalVariable implements Constants, Cloneable, Serializable {
     }
 
 
-    
-
-
     /**
      * Dump local variable to file stream in binary format.
      *
@@ -96,12 +90,6 @@ public final class LocalVariable implements Constants, Cloneable, Serializable {
     }
 
 
-    
-
-
-    
-
-
     /**
      * @return Variable name.
      */
@@ -112,9 +100,6 @@ public final class LocalVariable implements Constants, Cloneable, Serializable {
     }
 
 
-    
-
-
     /**
      * @return Signature.
      */
@@ -125,9 +110,6 @@ public final class LocalVariable implements Constants, Cloneable, Serializable {
     }
 
 
-    
-
-
     /**
      * @return index of register where variable is stored
      */
@@ -136,27 +118,6 @@ public final class LocalVariable implements Constants, Cloneable, Serializable {
     }
 
 
-    
-
-
-    
-
-
-    
-
-
-    
-
-
-    
-
-
-    
-
-
-    
-
-
     /**
      * @return string representation.
      */

==================================================
Method.java
index cd363f6a4f..30065b01f4 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/LocalVariableTable.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/LocalVariableTable.java
@@ -39,9 +39,6 @@ public class LocalVariableTable extends Attribute {
     private LocalVariable[] local_variable_table; // variables
 
 
-    
-
-
     /**
      * @param name_index Index in constant pool to `LocalVariableTable'
      * @param length Content length in bytes
@@ -90,9 +87,6 @@ public class LocalVariableTable extends Attribute {
     }
 
 
-    
-
-
     /** 
      * 
      * @param index the variable slot
@@ -150,5 +144,4 @@ public class LocalVariableTable extends Attribute {
     }
 
 
-    
 }

==================================================
PMGClass.java
index 0ee94348ad..2b1b8915d9 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Method.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Method.java
@@ -61,9 +61,6 @@ public final class Method extends FieldOrMethod {
     }
 
 
-    
-
-
     /**
      * Construct object from file stream.
      * @param file Input stream
@@ -76,12 +73,6 @@ public final class Method extends FieldOrMethod {
     }
 
 
-    
-
-
-    
-
-
     /**
      * @return Code attribute of method, if any
      */
@@ -121,9 +112,6 @@ public final class Method extends FieldOrMethod {
     }
 
 
-    
-
-
     /**
      * Return string representation close to declaration format,
      * `public static void main(String[] args) throws IOException', e.g.
@@ -161,21 +149,6 @@ public final class Method extends FieldOrMethod {
     }
 
 
-    
-
-
-    
-
-
-    
-
-
-    
-
-
-    
-
-
     /**
      * Return value as defined by given BCELComparator strategy.
      * By default two method objects are said to be equal when

==================================================
Signature.java
index 18310c7178..5a1c128994 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/PMGClass.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/PMGClass.java
@@ -37,9 +37,6 @@ public final class PMGClass extends Attribute {
     private int pmg_class_index, pmg_index;
 
 
-    
-
-
     /**
      * Construct object from file stream.
      * @param name_index Index in constant pool to CONSTANT_Utf8
@@ -83,18 +80,6 @@ public final class PMGClass extends Attribute {
     }
 
 
-    
-
-
-    
-
-
-    
-
-
-    
-
-
     /**
      * @return PMG name.
      */

==================================================
SourceFile.java
index 3e474c66f9..63a247091e 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Signature.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Signature.java
@@ -37,9 +37,6 @@ public final class Signature extends Attribute {
     private int signature_index;
 
 
-    
-
-
     /**
      * Construct object from file stream.
      * @param name_index Index in constant pool to CONSTANT_Utf8
@@ -79,12 +76,6 @@ public final class Signature extends Attribute {
     }
 
 
-    
-
-
-    
-
-
     /**
      * @return GJ signature.
      */

==================================================
StackMap.java
index 9fbb72d27f..4a98eea10e 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/SourceFile.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/SourceFile.java
@@ -39,9 +39,6 @@ public final class SourceFile extends Attribute {
     private int sourcefile_index;
 
 
-    
-
-
     /**
      * Construct object from file stream.
      * @param name_index Index in constant pool to CONSTANT_Utf8
@@ -88,12 +85,6 @@ public final class SourceFile extends Attribute {
     }
 
 
-    
-
-
-    
-
-
     /**
      * @return Source file name.
      */

==================================================
StackMapEntry.java
index 411e63401b..37fd94fb69 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/StackMap.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/StackMap.java
@@ -92,9 +92,6 @@ public final class StackMap extends Attribute {
     }
 
 
-    
-
-
     /**
      * @param map Array of stack map entries
      */

==================================================
StackMapTable.java
index 25da5e7d11..235746a1d2 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/StackMapEntry.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/StackMapEntry.java
@@ -121,36 +121,6 @@ public final class StackMapEntry implements Cloneable {
     }
 
 
-    
-
-
-    
-
-
-    
-
-
-    
-
-
-    
-
-
-    
-
-
-    
-
-
-    
-
-
-    
-
-
-    
-
-
     /**
      * @return deep copy of this object
      */
@@ -163,11 +133,4 @@ public final class StackMapEntry implements Cloneable {
     }
 
 
-    
-
-
-    
-
-
-    
 }

==================================================
StackMapTableEntry.java
index c717877ae1..ccf0012847 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/StackMapTable.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/StackMapTable.java
@@ -92,9 +92,6 @@ public final class StackMapTable extends Attribute {
     }
 
 
-    
-
-
     /**
      * @param map Array of stack map entries
      */

==================================================
StackMapType.java
index bb4c85a998..8bc94fb489 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/StackMapTableEntry.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/StackMapTableEntry.java
@@ -196,36 +196,6 @@ public final class StackMapTableEntry implements Cloneable {
     }
 
 
-    
-
-
-    
-
-
-    
-
-
-    
-
-
-    
-
-
-    
-
-
-    
-
-
-    
-
-
-    
-
-
-    
-
-
     /**
      * @return deep copy of this object
      */
@@ -238,11 +208,4 @@ public final class StackMapTableEntry implements Cloneable {
     }
 
 
-    
-
-
-    
-
-
-    
 }

==================================================
Synthetic.java
index c19b0473ab..0b37f95f0b 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/StackMapType.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/StackMapType.java
@@ -73,9 +73,6 @@ public final class StackMapType implements Cloneable {
     }
 
 
-    
-
-
     public void setIndex( int t ) {
         index = t;
     }
@@ -133,12 +130,6 @@ public final class StackMapType implements Cloneable {
     }
 
 
-    
-
-
-    
-
-
     /**
      * @param constant_pool Constant pool to be used for this object.
      */

==================================================
Unknown.java
index 50d6d1b5e7..226aedc674 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Synthetic.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Synthetic.java
@@ -42,9 +42,6 @@ public final class Synthetic extends Attribute {
     private byte[] bytes;
 
 
-    
-
-
     /**
      * @param name_index Index in constant pool to CONSTANT_Utf8, which
      * should represent the string "Synthetic".
@@ -93,12 +90,6 @@ public final class Synthetic extends Attribute {
     }
 
 
-    
-
-
-    
-
-
     /**
      * @return String representation.
      */

==================================================
Utility.java
index b498b2856a..a1aea565a8 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Unknown.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Unknown.java
@@ -49,12 +49,6 @@ public final class Unknown extends Attribute {
     private static final Map unknown_attributes = new HashMap();
 
 
-    
-
-
-    
-
-
     /**
      * Create a non-standard attribute.
      *
@@ -105,9 +99,6 @@ public final class Unknown extends Attribute {
     }
 
 
-    
-
-
     /**
      * @return name of attribute.
      */
@@ -117,9 +108,6 @@ public final class Unknown extends Attribute {
     }
 
 
-    
-
-
     /**
      * @return String representation.
      */

==================================================
ByteSequence.java
index 01dbbdd8dd..7aae6b2aee 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Utility.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Utility.java
@@ -153,9 +153,6 @@ public abstract class Utility {
     }
 
 
-    
-
-
     /**
      * Disassemble a stream of byte codes and return the
      * string representation.
@@ -411,9 +408,6 @@ public abstract class Utility {
     }
 
 
-    
-
-
     /**
      * Shorten long class names, <em>java/lang/String</em> becomes 
      * <em>String</em>.
@@ -786,9 +780,4 @@ public abstract class Utility {
     }
 
 
-    
-
-
-    
-
 }

==================================================
MessageBytes.java
index 17037f6434..ca94b6e232 100644
--- a/java/org/apache/tomcat/util/bcel/util/ByteSequence.java
+++ b/java/org/apache/tomcat/util/bcel/util/ByteSequence.java
@@ -44,8 +44,6 @@ public final class ByteSequence extends DataInputStream {
     }
 
 
-    
-
     private static final class ByteArrayStream extends ByteArrayInputStream {
 
         ByteArrayStream(byte[] bytes) {

==================================================
Digester.java
index 90fca3c25f..ae9d801c12 100644
--- a/java/org/apache/tomcat/util/buf/MessageBytes.java
+++ b/java/org/apache/tomcat/util/buf/MessageBytes.java
@@ -399,7 +399,6 @@ public final class MessageBytes implements Cloneable, Serializable {
         }
     }
 
-    
 
     // -------------------- Hash code  --------------------
     @Override

==================================================
CookieSupport.java
index e96f06bc24..aae5e27081 100644
--- a/java/org/apache/tomcat/util/digester/Digester.java
+++ b/java/org/apache/tomcat/util/digester/Digester.java
@@ -52,8 +52,6 @@ import org.xml.sax.helpers.AttributesImpl;
 import org.xml.sax.helpers.DefaultHandler;
 
 
-
-
 /**
  * <p>A <strong>Digester</strong> processes an XML input stream by matching a
  * series of element nesting patterns to execute Rules that have been added
@@ -314,7 +312,6 @@ public class Digester extends DefaultHandler {
     protected boolean validating = false;
 
 
-    
     /**
      * Warn on missing attributes and elements.
      */

==================================================
MimeHeaders.java
index 53906073dd..e03043c67d 100644
--- a/java/org/apache/tomcat/util/http/CookieSupport.java
+++ b/java/org/apache/tomcat/util/http/CookieSupport.java
@@ -211,9 +211,8 @@ public final class CookieSupport {
         if (value==null || value.length() < 2) return false;
         return (value.charAt(0)=='\"' && value.charAt(value.length()-1)=='\"');
     }
-    
 
-    
+
     // ------------------------------------------------------------- Constructor
     private CookieSupport() {
         // Utility class. Don't allow instances to be created.

==================================================
FileUtils.java
index d354e254d7..a323d5b884 100644
--- a/java/org/apache/tomcat/util/http/MimeHeaders.java
+++ b/java/org/apache/tomcat/util/http/MimeHeaders.java
@@ -64,7 +64,6 @@ import org.apache.tomcat.util.buf.MessageBytes;
    ( addHeader hook )
    
 */
-    
 
 
 /**

==================================================
IOUtils.java
index e8af885974..4609421901 100644
--- a/java/org/apache/tomcat/util/http/fileupload/FileUtils.java
+++ b/java/org/apache/tomcat/util/http/fileupload/FileUtils.java
@@ -85,7 +85,6 @@ public class FileUtils {
         }
     }
 
-    
 
     /**
      * Cleans a directory without deleting it.

==================================================
DiskFileItem.java
index 103dfd47b4..efdd0fdc1d 100644
--- a/java/org/apache/tomcat/util/http/fileupload/IOUtils.java
+++ b/java/org/apache/tomcat/util/http/fileupload/IOUtils.java
@@ -155,8 +155,4 @@ public class IOUtils {
     }
 
 
-    
-
-    
-
 }

==================================================
BaseModelMBean.java
index 35a3f9bee4..390bb6e8f7 100644
--- a/java/org/apache/tomcat/util/http/fileupload/disk/DiskFileItem.java
+++ b/java/org/apache/tomcat/util/http/fileupload/disk/DiskFileItem.java
@@ -658,8 +658,6 @@ public class DiskFileItem
     }
 
 
-
-
     /**
      * Returns a string representation of this object.
      *

==================================================
Registry.java
index 8cf3677f01..c5438bebd6 100644
--- a/java/org/apache/tomcat/util/modeler/BaseModelMBean.java
+++ b/java/org/apache/tomcat/util/modeler/BaseModelMBean.java
@@ -713,8 +713,6 @@ public class BaseModelMBean implements DynamicMBean, MBeanRegistration, ModelMBe
     }
 
 
-
-
     /**
      * Send a <code>Notification</code> to all registered listeners as a
      * <code>jmx.modelmbean.general</code> notification.
@@ -765,8 +763,6 @@ public class BaseModelMBean implements DynamicMBean, MBeanRegistration, ModelMBe
     }
 
 
-
-
     // ---------------------------------------- NotificationBroadcaster Methods
 
 

==================================================
AbstractEndpoint.java
index 2ac06d208e..1b1c106fea 100644
--- a/java/org/apache/tomcat/util/modeler/Registry.java
+++ b/java/org/apache/tomcat/util/modeler/Registry.java
@@ -874,9 +874,7 @@ public class Registry implements RegistryMBean, MBeanRegistration  {
     public void postDeregister() {
     }
 
-    
-    
-    
+
     // -------------------- DEPRECATED METHODS  --------------------
     // May still be used in tomcat 
     // Never part of an official release

==================================================
AprEndpoint.java
index 8c89c15517..63b31066f2 100644
--- a/java/org/apache/tomcat/util/net/AbstractEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AbstractEndpoint.java
@@ -306,7 +306,6 @@ public abstract class AbstractEndpoint {
     public int getThreadPriority() { return threadPriority; }
 
 
-
     /**
      * Generic properties, introspected
      */
@@ -572,8 +571,7 @@ public abstract class AbstractEndpoint {
         allowUnsafeLegacyRenegotiation = s;
     }
 
-    
-    
+
     private String sslEnabledProtocols=null; //"TLSv1,SSLv3,SSLv2Hello"
     private String[] sslEnabledProtocolsarr =  new String[0];
     public String[] getSslEnabledProtocolsArray() { return this.sslEnabledProtocolsarr;}

==================================================
JIoEndpoint.java
index 58acbd9316..5508e5db9b 100644
--- a/java/org/apache/tomcat/util/net/AprEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AprEndpoint.java
@@ -747,7 +747,6 @@ public class AprEndpoint extends AbstractEndpoint {
     // ------------------------------------------------------ Protected Methods
 
 
-
     /**
      * Process the specified connection.
      */
@@ -791,7 +790,6 @@ public class AprEndpoint extends AbstractEndpoint {
     }
 
 
-
     /**
      * Allocate a new poller of the specified size.
      */
@@ -1205,8 +1203,6 @@ public class AprEndpoint extends AbstractEndpoint {
     // ----------------------------------------------------- Worker Inner Class
 
 
-
-
     // ----------------------------------------------- SendfileData Inner Class
 
 
@@ -1546,7 +1542,6 @@ public class AprEndpoint extends AbstractEndpoint {
     }
 
 
-
     // ---------------------------------------------- SocketProcessor Inner Class
 
 

==================================================
NioEndpoint.java
index f393c5d76e..f40694728e 100644
--- a/java/org/apache/tomcat/util/net/JIoEndpoint.java
+++ b/java/org/apache/tomcat/util/net/JIoEndpoint.java
@@ -107,9 +107,6 @@ public class JIoEndpoint extends AbstractEndpoint {
     public ServerSocketFactory getServerSocketFactory() { return serverSocketFactory; }
 
 
-
-
-    
     // ------------------------------------------------ Handler Inner Interface
 
 
@@ -289,8 +286,7 @@ public class JIoEndpoint extends AbstractEndpoint {
         }
         
     }
-    
-    
+
 
     // -------------------- Public methods --------------------
 
@@ -453,8 +449,6 @@ public class JIoEndpoint extends AbstractEndpoint {
         initialized = false ;
     }
 
-  
-
 
     /**
      * Set the options for the current socket.

==================================================
SocketProperties.java
index c9faf3e7df..bb4b47c666 100644
--- a/java/org/apache/tomcat/util/net/NioEndpoint.java
+++ b/java/org/apache/tomcat/util/net/NioEndpoint.java
@@ -280,7 +280,6 @@ public class NioEndpoint extends AbstractEndpoint {
         }
     };
 
-    
 
     // ------------------------------------------------------------- Properties
 
@@ -304,7 +303,6 @@ public class NioEndpoint extends AbstractEndpoint {
     }
 
 
-
     /**
      * Priority of the acceptor threads.
      */
@@ -320,7 +318,6 @@ public class NioEndpoint extends AbstractEndpoint {
     public int getPollerThreadPriority() { return pollerThreadPriority; }
 
 
-
     /**
      * Handling of accepted sockets.
      */
@@ -329,10 +326,6 @@ public class NioEndpoint extends AbstractEndpoint {
     public Handler getHandler() { return handler; }
 
 
-
-    
-
-
     /**
      * Allow comet request handling.
      */
@@ -349,7 +342,6 @@ public class NioEndpoint extends AbstractEndpoint {
     public int getAcceptorThreadCount() { return acceptorThreadCount; }
 
 
-
     /**
      * Poller thread count.
      */
@@ -374,8 +366,6 @@ public class NioEndpoint extends AbstractEndpoint {
     }
 
 
-
-
     public void setSelectorPool(NioSelectorPool selectorPool) {
         this.selectorPool = selectorPool;
     }
@@ -447,8 +437,6 @@ public class NioEndpoint extends AbstractEndpoint {
     }
 
 
-
-    
     /**
      * Return the state of the endpoint.
      *
@@ -706,9 +694,6 @@ public class NioEndpoint extends AbstractEndpoint {
     }
 
 
-    
-
-
     /**
      * Process the specified connection.
      */
@@ -1502,7 +1487,6 @@ public class NioEndpoint extends AbstractEndpoint {
     }
 
 
-
     // ---------------------------------------------- SocketProcessor Inner Class
     /**
      * This class is the equivalent of the Worker, but will simply use in an

==================================================
URL.java
index 826248d349..66a210132d 100644
--- a/java/org/apache/tomcat/util/net/SocketProperties.java
+++ b/java/org/apache/tomcat/util/net/SocketProperties.java
@@ -419,7 +419,6 @@ public class SocketProperties {
     public void setUnlockTimeout(int unlockTimeout) {
         this.unlockTimeout = unlockTimeout;
     }
-    
-    
+
 
 }

==================================================
ThreadPoolExecutor.java
index a0f996677a..1ed45ebe3a 100644
--- a/java/org/apache/tomcat/util/net/URL.java
+++ b/java/org/apache/tomcat/util/net/URL.java
@@ -174,9 +174,6 @@ public final class URL implements Serializable {
     }
 
 
-
-
-
     /**
      * Create a URL object from the specified components.  The default port
      * number for the specified protocol will be used.

==================================================
DataSourceProxy.java
index 5e26e4b1bf..501beddae9 100644
--- a/modules/bayeux/webapps/cometd/examples/simplechat/ticker.html
+++ b/modules/bayeux/webapps/cometd/examples/simplechat/ticker.html
@@ -45,8 +45,6 @@ dojo.addOnUnload(function() {
 	});
 
 
-
-
 function subscribe(box, symbol) {
 	if (box.checked) {
 		dojox.cometd.subscribe("/stock/"+symbol, onMsgEvent);

==================================================
PoolProperties.java
index 17f831cf3b..c7966fe1e8 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/DataSourceProxy.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/DataSourceProxy.java
@@ -57,7 +57,6 @@ public class DataSourceProxy implements PoolConfiguration {
         if (poolProperties == null) throw new NullPointerException("PoolConfiguration can not be null.");
         this.poolProperties = poolProperties;
     }
-    
 
 
     public boolean isWrapperFor(Class<?> iface) throws SQLException {
@@ -193,8 +192,6 @@ public class DataSourceProxy implements PoolConfiguration {
     }
 
 
-
-    
 /*-----------------------------------------------------------------------*/
 //      PROPERTIES WHEN NOT USED WITH FACTORY
 /*------------------------------------------------------------------------*/

==================================================
PooledConnection.java
index ba1eab0620..e70044ccbc 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/PoolProperties.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/PoolProperties.java
@@ -798,9 +798,8 @@ public class PoolProperties implements PoolConfiguration {
         result = result || (timer && getMinEvictableIdleTimeMillis()>0); 
         return result;
     }
-    
-    
-    
+
+
     public static class InterceptorDefinition {
         protected String className;
         protected Map<String,InterceptorProperty> properties = new HashMap<String,InterceptorProperty>();

==================================================
ResetAbandonedTimer.java
index dad20d91ad..786ad911c0 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/PooledConnection.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/PooledConnection.java
@@ -457,9 +457,7 @@ public class PooledConnection {
         this.timestamp = timestamp;
         setSuspect(false);
     }
-    
-    
-    
+
 
     public boolean isSuspect() {
         return suspect;

==================================================
SlowQueryReport.java
index 9e5ec0a080..328d6be837 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/interceptor/ResetAbandonedTimer.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/interceptor/ResetAbandonedTimer.java
@@ -55,8 +55,7 @@ public class ResetAbandonedTimer extends AbstractQueryReport {
         }
         return result;
     }
-    
-    
+
 
     @Override
     public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {

==================================================
SlowQueryReportJmx.java
index 488c6a9a3d..274d8562ae 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/interceptor/SlowQueryReport.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/interceptor/SlowQueryReport.java
@@ -74,9 +74,8 @@ public class SlowQueryReport extends AbstractQueryReport  {
     public void setMaxQueries(int maxQueries) {
         this.maxQueries = maxQueries;
     }
-    
-    
-    
+
+
     @Override
     protected String reportFailedQuery(String query, Object[] args, String name, long start, Throwable t) {
         String sql = super.reportFailedQuery(query, args, name, start, t);
@@ -181,9 +180,7 @@ public class SlowQueryReport extends AbstractQueryReport  {
             if (log.isDebugEnabled()) log.debug("Removing slow query, capacity reached:"+sql);
         } 
     }
-    
-    
-    
+
 
     @Override
     public void reset(ConnectionPool parent, PooledConnection con) {
@@ -192,9 +189,6 @@ public class SlowQueryReport extends AbstractQueryReport  {
             queries = SlowQueryReport.perPoolStats.get(parent.getName());
     }
 
-    
-
-
 
     @Override
     public void setProperties(Map<String, InterceptorProperty> properties) {
@@ -212,9 +206,6 @@ public class SlowQueryReport extends AbstractQueryReport  {
     }
 
 
-
-
-
     /**
      * 
      * @author fhanik

==================================================
StatementCache.java
index a65ca7525f..433519c908 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/interceptor/SlowQueryReportJmx.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/interceptor/SlowQueryReportJmx.java
@@ -89,8 +89,7 @@ public class SlowQueryReportJmx extends SlowQueryReport implements NotificationE
         
     }
 
-    
-    
+
     //==============================JMX STUFF========================    
     
     protected String poolName = null;
@@ -129,7 +128,6 @@ public class SlowQueryReportJmx extends SlowQueryReport implements NotificationE
     }
 
 
-
     @Override
     public void poolClosed(ConnectionPool pool) {
         this.poolName = pool.getName();
@@ -201,9 +199,8 @@ public class SlowQueryReportJmx extends SlowQueryReport implements NotificationE
     public String getPoolName() {
         return poolName;
     }
-    
-    
-    
+
+
     public boolean isNotifyPool() {
         return notifyPool;
     }

==================================================
ConnectionPool.java
index c32ae16c4b..27370d0f75 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/interceptor/StatementCache.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/interceptor/StatementCache.java
@@ -156,8 +156,7 @@ public class StatementCache extends StatementDecoratorInterceptor {
         }
     }
 
-    
-    
+
     public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
         boolean process = process(this.types, method, false);
         if (process && args.length>0 && args[0] instanceof String) {

==================================================
TestInterceptor.java
index b5bd4117db..b10878dd9f 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/jmx/ConnectionPool.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/jmx/ConnectionPool.java
@@ -74,10 +74,8 @@ public class ConnectionPool extends NotificationBroadcasterSupport implements Co
     public static final String SLOW_QUERY_NOTIFICATION = "SLOW QUERY";
     public static final String FAILED_QUERY_NOTIFICATION = "FAILED QUERY";
     public static final String SUSPECT_ABANDONED_NOTIFICATION = "SUSPECT CONNETION ABANDONED";
-    
-    
-    
-     
+
+
     public MBeanNotificationInfo[] getNotificationInfo() { 
         MBeanNotificationInfo[] pres = super.getNotificationInfo();
         MBeanNotificationInfo[] loc = getDefaultNotificationInfo();
@@ -179,9 +177,8 @@ public class ConnectionPool extends NotificationBroadcasterSupport implements Co
     //=========================================================
     //  PROPERTIES / CONFIGURATION
     //=========================================================    
-    
-    
-    
+
+
     public String getConnectionProperties() {
         return getPoolProperties().getConnectionProperties();
     }

==================================================
BorrowWaitTest.java
index 91f0407b71..739347c8c2 100644
--- a/modules/jdbc-pool/test/org/apache/tomcat/jdbc/pool/interceptor/TestInterceptor.java
+++ b/modules/jdbc-pool/test/org/apache/tomcat/jdbc/pool/interceptor/TestInterceptor.java
@@ -54,7 +54,6 @@ public class TestInterceptor extends JdbcInterceptor {
         instancecount.incrementAndGet();
         super.setProperties(properties);
     }
-    
-    
-    
+
+
 }

==================================================
ConnectCountTest.java
index 979f6e979f..12441409bd 100644
--- a/modules/jdbc-pool/test/org/apache/tomcat/jdbc/test/BorrowWaitTest.java
+++ b/modules/jdbc-pool/test/org/apache/tomcat/jdbc/test/BorrowWaitTest.java
@@ -65,8 +65,6 @@ public class BorrowWaitTest extends DefaultTestCase {
         }
         con.close();
     }
-    
-    
-    
-    
+
+
 }

==================================================
TestConnectionState.java
index 98273954e0..339e1aa49b 100644
--- a/modules/jdbc-pool/test/org/apache/tomcat/jdbc/test/ConnectCountTest.java
+++ b/modules/jdbc-pool/test/org/apache/tomcat/jdbc/test/ConnectCountTest.java
@@ -42,9 +42,8 @@ public class ConnectCountTest extends DefaultTestCase {
     protected long complete = Long.getLong("complete",20000);
     protected boolean printthread = Boolean.getBoolean("printthread");
     CountDownLatch latch = null;
-    
-    
-    
+
+
     @Override
     public org.apache.tomcat.jdbc.pool.DataSource createDefaultDataSource() {
         // TODO Auto-generated method stub
@@ -57,8 +56,7 @@ public class ConnectCountTest extends DefaultTestCase {
         ds.getPoolProperties().setMaxActive(10);
         return ds;
     }
-    
-    
+
 
     @Override
     protected void tearDown() throws Exception {
@@ -67,7 +65,6 @@ public class ConnectCountTest extends DefaultTestCase {
     }
 
 
-
     protected void printThreadResults(TestThread[] threads, String name, int active, int expected) {
         long minfetch = Long.MAX_VALUE, maxfetch = Long.MIN_VALUE, totalfetch = 0;
         long maxwait = 0, minwait = Long.MAX_VALUE, averagewait = 0, totalwait = 0;

==================================================
TestInterceptorShortName.java
index f7ed28dc52..8ed9bb2bd6 100644
--- a/modules/jdbc-pool/test/org/apache/tomcat/jdbc/test/TestConnectionState.java
+++ b/modules/jdbc-pool/test/org/apache/tomcat/jdbc/test/TestConnectionState.java
@@ -77,8 +77,6 @@ public class TestConnectionState extends DefaultTestCase {
         c1 = d1.getConnection();
         assertEquals("Catalog should be information_schema",c1.getCatalog(),"information_schema");
     }
-    
-    
 
 
 }

==================================================
TestStatementCache.java
index c583dee01c..1641bb8b5e 100644
--- a/modules/jdbc-pool/test/org/apache/tomcat/jdbc/test/TestInterceptorShortName.java
+++ b/modules/jdbc-pool/test/org/apache/tomcat/jdbc/test/TestInterceptorShortName.java
@@ -38,7 +38,6 @@ public class TestInterceptorShortName extends DefaultTestCase {
         this.datasource.close();
         assertTrue("Pool should have been closed.",TestInterceptor.poolclosed);
     }
-    
-    
+
 
 }

==================================================
TwoDataSources.java
index e683caddb1..d3d57400f1 100644
--- a/modules/jdbc-pool/test/org/apache/tomcat/jdbc/test/TestStatementCache.java
+++ b/modules/jdbc-pool/test/org/apache/tomcat/jdbc/test/TestStatementCache.java
@@ -39,8 +39,6 @@ public class TestStatementCache extends DefaultTestCase {
     }
 
 
-
-
     private void config(boolean cachePrepared, boolean cacheCallable, int max) {
         datasource.getPoolProperties().setJdbcInterceptors(TestStatementCacheInterceptor.class.getName()+
                 "(prepared="+cachePrepared+",callable="+cacheCallable+",max="+max+")");

==================================================
BaseMapper.java
index b88f69eb52..2a500e7ae4 100644
--- a/modules/jdbc-pool/test/org/apache/tomcat/jdbc/test/TwoDataSources.java
+++ b/modules/jdbc-pool/test/org/apache/tomcat/jdbc/test/TwoDataSources.java
@@ -58,9 +58,8 @@ public class TwoDataSources extends DefaultTestCase {
         }catch (Exception x) {
             assertTrue("Connection c2 should be working",false);
         }
-        
 
-        
+
     }
 
 }

==================================================
Http11Connection.java
index 1d5eff8682..129b4dceb8 100644
--- a/modules/tomcat-lite/java/org/apache/tomcat/lite/http/BaseMapper.java
+++ b/modules/tomcat-lite/java/org/apache/tomcat/lite/http/BaseMapper.java
@@ -85,7 +85,6 @@ public class BaseMapper {
             addWrapper(contextMapElement, path, wrapper, jspWildCard);
         }
 
-        
 
         /**
          * Remove a wrapper from the context associated with this wrapper.

==================================================
HttpChannel.java
index c0d018b8ca..4b26ee9522 100644
--- a/modules/tomcat-lite/java/org/apache/tomcat/lite/http/Http11Connection.java
+++ b/modules/tomcat-lite/java/org/apache/tomcat/lite/http/Http11Connection.java
@@ -464,7 +464,6 @@ public class Http11Connection extends HttpConnection
         }
     }
 
-    
 
     /**
      * Updates chunked, contentLength, remaining - based 
@@ -1078,9 +1077,8 @@ public class Http11Connection extends HttpConnection
             }
         }
     }
-    
-    
-    
+
+
     private void flushToNext(IOBuffer body, IOBuffer out) throws IOException {
         
         synchronized (this) {

==================================================
HttpConnectionPool.java
index bb879d5d8e..07ed719a22 100644
--- a/modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpChannel.java
+++ b/modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpChannel.java
@@ -309,9 +309,8 @@ public class HttpChannel extends IOChannel {
     public String getStatus() {
         return getResponse().getStatus() + " " + getResponse().getMessage();
     }
-    
-    
- 
+
+
     public String getTarget() {
         if (target == null) {
             return ":0"; // server mode ? 
@@ -488,7 +487,6 @@ public class HttpChannel extends IOChannel {
     }
 
 
-    
     /*
     The field-content does not include any leading or trailing LWS: 
     linear white space occurring before the first non-whitespace 

==================================================
HttpMessage.java
index 696a47089a..447935475d 100644
--- a/modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpConnectionPool.java
+++ b/modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpConnectionPool.java
@@ -267,9 +267,7 @@ public class HttpConnectionPool {
                     con = hcon;
                 }
             }
-            
-            
-            
+
 
             // we got a connection - make sure we're connected
             http11ConnectOrSend(httpCh, target, con, ssl);

==================================================
HttpRequest.java
index b08d919fd7..cfeac7e0b8 100644
--- a/modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpMessage.java
+++ b/modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpMessage.java
@@ -337,8 +337,7 @@ public abstract class HttpMessage {
             throws UnsupportedEncodingException {
         this.charEncoding = enc;
     }
-    
-    
+
 
     public void recycle() {
         commited = false;

==================================================
SpdyConnection.java
index a6f86e6fcb..3ec8477b0a 100644
--- a/modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpRequest.java
+++ b/modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpRequest.java
@@ -139,9 +139,8 @@ public class HttpRequest extends HttpMessage {
     public Map<String, Object> attributes() {
         return attributes;
     }
-    
-    
-    
+
+
     public CBuffer method() {
         return methodMB;
     }

==================================================
BufferedIOReader.java
index b692d243dd..770ca2ec3f 100644
--- a/modules/tomcat-lite/java/org/apache/tomcat/lite/http/SpdyConnection.java
+++ b/modules/tomcat-lite/java/org/apache/tomcat/lite/http/SpdyConnection.java
@@ -155,7 +155,6 @@ public class SpdyConnection extends HttpConnector.HttpConnection
     }
 
 
-    
     /**
      * Frame received. Must consume all data for the frame.
      * 

==================================================
CBucket.java
index 6f7dd0d93e..a0a00aedd6 100644
--- a/modules/tomcat-lite/java/org/apache/tomcat/lite/io/BufferedIOReader.java
+++ b/modules/tomcat-lite/java/org/apache/tomcat/lite/io/BufferedIOReader.java
@@ -376,6 +376,5 @@ public class BufferedIOReader extends BufferedReader {
         }
     };
 
-    
 
 }

==================================================
CBuffer.java
index e28d16a6ae..aed8d971b9 100644
--- a/modules/tomcat-lite/java/org/apache/tomcat/lite/io/CBucket.java
+++ b/modules/tomcat-lite/java/org/apache/tomcat/lite/io/CBucket.java
@@ -141,8 +141,6 @@ public class CBucket implements CharSequence, Comparable, Serializable {
     }
 
 
-    
-
     /**
      * Compares the message bytes to the specified String object.
      * 

==================================================
IOBuffer.java
index bfe9404df6..c66f85644a 100644
--- a/modules/tomcat-lite/java/org/apache/tomcat/lite/io/CBuffer.java
+++ b/modules/tomcat-lite/java/org/apache/tomcat/lite/io/CBuffer.java
@@ -210,7 +210,6 @@ public class CBuffer extends CBucket implements Cloneable,
     }
 
 
-    
     /**
      * Append a string to the buffer
      */

==================================================
IOWriter.java
index a9777a0812..70e7795433 100644
--- a/modules/tomcat-lite/java/org/apache/tomcat/lite/io/IOBuffer.java
+++ b/modules/tomcat-lite/java/org/apache/tomcat/lite/io/IOBuffer.java
@@ -238,9 +238,8 @@ public class IOBuffer {
         }
         hasDataLock.waitSignal(timeMs);
     }
-    
 
-    
+
     public boolean isAppendClosed() {
         return closeQueued;
     }
@@ -645,7 +644,6 @@ public class IOBuffer {
         }
     }
 
-    
 
     // ------ More utilities - for parsing request ( later )-------
 //  public final int skipBlank(ByteBuffer bb, int start) {

==================================================
NioThread.java
index 0c84f6841a..2def8e8ba2 100644
--- a/modules/tomcat-lite/java/org/apache/tomcat/lite/io/IOWriter.java
+++ b/modules/tomcat-lite/java/org/apache/tomcat/lite/io/IOWriter.java
@@ -185,9 +185,8 @@ public class IOWriter extends Writer {
         
         return i;
     }
-    
 
-    
+
     /**
      * Just send the chars to the byte[], without flushing down.
      * 

==================================================
SocketConnector.java
index 75c4457ae4..3b6e649252 100644
--- a/modules/tomcat-lite/java/org/apache/tomcat/lite/io/NioThread.java
+++ b/modules/tomcat-lite/java/org/apache/tomcat/lite/io/NioThread.java
@@ -739,7 +739,6 @@ public class NioThread implements Runnable {
   }
 
 
-
   public void acceptor(NioChannelCallback cstate, 
                        int port, 
                        InetAddress inet, 
@@ -1141,9 +1140,8 @@ public class NioThread implements Runnable {
           }
       }
   }
-  
-  
-  
+
+
   protected boolean isSelectorThread() {
       return Thread.currentThread() == selectorThread;
   }

==================================================
SocketIOChannel.java
index 0b9a09e786..93bae2ad43 100644
--- a/modules/tomcat-lite/java/org/apache/tomcat/lite/io/SocketConnector.java
+++ b/modules/tomcat-lite/java/org/apache/tomcat/lite/io/SocketConnector.java
@@ -127,7 +127,6 @@ public class SocketConnector extends IOConnector {
     }
 
 
-    
     // TODO: suspendAccept(boolean)
     
 }

==================================================
SslChannel.java
index 2a8c3b9f39..88a964d9bc 100644
--- a/modules/tomcat-lite/java/org/apache/tomcat/lite/io/SocketIOChannel.java
+++ b/modules/tomcat-lite/java/org/apache/tomcat/lite/io/SocketIOChannel.java
@@ -202,9 +202,8 @@ public class SocketIOChannel extends IOChannel implements NioChannelCallback {
     public static final void releaseReadableBuffer(ByteBuffer bb, BBucket bucket) {
         bucket.position(bb.position());
     }
-    
-    
-    
+
+
     public void readInterest(boolean b) throws IOException {
         ch.readInterest(b);
     }

==================================================
SocksServer.java
index 9f76f5308f..df4425b313 100644
--- a/modules/tomcat-lite/java/org/apache/tomcat/lite/io/jsse/SslChannel.java
+++ b/modules/tomcat-lite/java/org/apache/tomcat/lite/io/jsse/SslChannel.java
@@ -359,7 +359,6 @@ class SslChannel extends IOChannel implements Runnable {
     }
 
 
-    
     // SSL handshake require slow tasks - that will need to be executed in a 
     // thread anyways. Better to keep it simple ( the code is very complex ) - 
     // and do the initial handshake in a thread, not in the IO thread.

==================================================
Tomcat.java
index 3dc58bd3b6..8170afed16 100644
--- a/modules/tomcat-lite/java/org/apache/tomcat/lite/proxy/SocksServer.java
+++ b/modules/tomcat-lite/java/org/apache/tomcat/lite/proxy/SocksServer.java
@@ -139,8 +139,7 @@ public class SocksServer implements Runnable, IOConnector.ConnectedCallback {
         
     }
 
-    
-    
+
     public static class SocksServerConnection implements IOConnector.DataReceivedCallback, IOConnector.ConnectedCallback {
         
         protected SocksServer server;

==================================================
HttpChannelTest.java
index 412418a0d1..880165b695 100644
--- a/modules/tomcat-lite/test/org/apache/coyote/lite/Tomcat.java
+++ b/modules/tomcat-lite/test/org/apache/coyote/lite/Tomcat.java
@@ -481,10 +481,7 @@ public class Tomcat {
         return ctx;
     }
 
-    
-    
 
-    
     // ---------- Helper methods and classes -------------------
     
     /** 

==================================================
UEncoderTest.java
index 0296e85a89..b49dea2af2 100644
--- a/modules/tomcat-lite/test/org/apache/tomcat/lite/http/HttpChannelTest.java
+++ b/modules/tomcat-lite/test/org/apache/tomcat/lite/http/HttpChannelTest.java
@@ -123,7 +123,6 @@ public class HttpChannelTest extends TestCase {
         responseTest("HTTP/1.1  200", "HTTP/1.1", "200", "");
         responseTest("HTTP/1.1", "HTTP/1.1", "", "");
     }
-    
-    
+
 
 }

==================================================
CookieController.java
index 1bf389a00e..f48a61c61c 100644
--- a/modules/tomcat-lite/test/org/apache/tomcat/lite/io/UEncoderTest.java
+++ b/modules/tomcat-lite/test/org/apache/tomcat/lite/io/UEncoderTest.java
@@ -39,7 +39,6 @@ public class UEncoderTest extends TestCase {
         dec.urlEncode(uri, cc, enc);
         return cc.toString();
     }
-    
-    
+
 
 }

==================================================
WatchdogHttpClient.java
index f6d0699359..f63bd1a0e4 100644
--- a/modules/tomcat-lite/test/org/apache/tomcat/test/watchdog/CookieController.java
+++ b/modules/tomcat-lite/test/org/apache/tomcat/test/watchdog/CookieController.java
@@ -75,8 +75,6 @@ public class CookieController {
 	*/
 
 
-
-
 	for (int hi = 0; hi<rcvVectorOfCookies.size(); hi++) {
 
 		String cookieValue = (String)rcvVectorOfCookies.elementAt(hi) ;
@@ -257,8 +255,6 @@ public class CookieController {
 		System.out.println("Exception : " +e );
 		return null;
 	}
-      
-
 
 
     }

==================================================
CoordinationDemo.java
index f4b71d014b..0763c48966 100644
--- a/modules/tomcat-lite/test/org/apache/tomcat/test/watchdog/WatchdogHttpClient.java
+++ b/modules/tomcat-lite/test/org/apache/tomcat/test/watchdog/WatchdogHttpClient.java
@@ -30,7 +30,6 @@ import java.util.Iterator;
 import java.util.Vector;
 
 
-
 public class WatchdogHttpClient {
     private static final String CRLF         = "\r\n";
     private static final int LINE_FEED       = 10;
@@ -213,8 +212,7 @@ public class WatchdogHttpClient {
         return sb.toString().getBytes();
     }
 
-    
-    
+
     /**
      * Read a line from the specified servlet input stream, and strip off
      * the trailing carriage return and newline (if any).  Return the remaining
@@ -301,8 +299,7 @@ public class WatchdogHttpClient {
         return headers;
     }
 
-    
-    
+
     /**
      * Private utility method to 'massage' a request string that
      * may or may not have replacement markers for the request parameters.
@@ -323,8 +320,7 @@ public class WatchdogHttpClient {
         client.requestURL = new URL( "http", client.host, client.port, addressString );
     }
 
-    
-    
+
     /**
      * <code>CRBufferedInputStream</code> is a modified version of
      * the java.io.BufferedInputStream class.  The fill code is 

==================================================
LoadTest.java
index 770b203f29..0bc00e1f18 100644
--- a/test/org/apache/catalina/tribes/demos/CoordinationDemo.java
+++ b/test/org/apache/catalina/tribes/demos/CoordinationDemo.java
@@ -31,7 +31,6 @@ import org.apache.catalina.tribes.transport.ReceiverBase;
 import org.apache.catalina.tribes.util.Arrays;
 
 
-
 public class CoordinationDemo {
     static int CHANNEL_COUNT = 5;
     static int SCREEN_WIDTH = 120;
@@ -185,9 +184,8 @@ public class CoordinationDemo {
         statusLine.delete(0,statusLine.length());
         statusLine.append(status);
     }
-    
-    
-    
+
+
     public static void setEvents(String events) {
         java.util.Arrays.fill(VIEW_EVENTS,false);
         StringTokenizer t = new StringTokenizer(events,",");

==================================================
TestNonBlockingCoordinator.java
index 15cc09bf3f..358a1ce47d 100644
--- a/test/org/apache/catalina/tribes/demos/LoadTest.java
+++ b/test/org/apache/catalina/tribes/demos/LoadTest.java
@@ -95,8 +95,7 @@ public class LoadTest implements MembershipListener,ChannelListener, Runnable {
                  "\n\tMBytes/second:"+(size*cnt/time/1024f/1024f));
     }
 
-    
-    
+
     public LoadTest(ManagedChannel channel, 
                     boolean send,
                     int msgCount,
@@ -112,9 +111,8 @@ public class LoadTest implements MembershipListener,ChannelListener, Runnable {
         this.statsInterval = stats;
         this.breakonChannelException = breakOnEx;
     }
-    
-    
-    
+
+
     public void run() {
         
         long counter = 0;
@@ -171,7 +169,6 @@ public class LoadTest implements MembershipListener,ChannelListener, Runnable {
         endTest();
     }
 
-    
 
     /**
      * memberAdded
@@ -246,8 +243,7 @@ public class LoadTest implements MembershipListener,ChannelListener, Runnable {
         System.out.println("} size:"+data.length);
     }
 
-    
-    
+
     public static class LoadMessage extends ByteMessage {
         
         public static byte[] outdata = new byte[size];

==================================================
TestOrderInterceptor.java
index 9f2b0561d0..f1e2c2796a 100644
--- a/test/org/apache/catalina/tribes/test/interceptors/TestNonBlockingCoordinator.java
+++ b/test/org/apache/catalina/tribes/test/interceptors/TestNonBlockingCoordinator.java
@@ -107,9 +107,6 @@ public class TestNonBlockingCoordinator extends TestCase {
         suite.addTestSuite(TestNonBlockingCoordinator.class);
         suite.run(new TestResult());
     }
-    
-    
-    
-    
+
 
 }

==================================================
TestSenderConnections.java
index d99deedecd..5368b8c91a 100644
--- a/test/org/apache/catalina/tribes/test/interceptors/TestOrderInterceptor.java
+++ b/test/org/apache/catalina/tribes/test/interceptors/TestOrderInterceptor.java
@@ -188,9 +188,6 @@ public class TestOrderInterceptor extends TestCase {
             }
         }
     }
-    
-    
-    
-    
+
 
 }

==================================================
TestELEvaluation.java
index 5c62db37f4..22733e6124 100644
--- a/test/org/apache/catalina/tribes/test/io/TestSenderConnections.java
+++ b/test/org/apache/catalina/tribes/test/io/TestSenderConnections.java
@@ -127,7 +127,6 @@ public class TestSenderConnections extends TestCase {
         }
 
 
-        
     }
 
 }

==================================================
AsyncStockServlet.java
index 302e926154..20d59e53ec 100644
--- a/webapps/docs/config/context.xml
+++ b/webapps/docs/config/context.xml
@@ -314,7 +314,6 @@
       </attribute>
 
 
-      
     </attributes>
 
   </subsection>

==================================================
JspCalendar.java
index fd5ce9bc19..f21ba56c2f 100644
--- a/webapps/examples/WEB-INF/classes/async/AsyncStockServlet.java
+++ b/webapps/examples/WEB-INF/classes/async/AsyncStockServlet.java
@@ -50,8 +50,7 @@ public class AsyncStockServlet extends HttpServlet implements TickListener, Asyn
     public AsyncStockServlet() {
         System.out.println("AsyncStockServlet created");
     }
-    
-    
+
 
     @Override
     protected void service(HttpServletRequest req, HttpServletResponse resp)
@@ -73,7 +72,6 @@ public class AsyncStockServlet extends HttpServlet implements TickListener, Asyn
     }
 
 
-
     @Override
     public void tick(Stock stock) {
         ticks.add((Stock)stock.clone());
@@ -122,7 +120,6 @@ public class AsyncStockServlet extends HttpServlet implements TickListener, Asyn
     }
 
 
-
     @Override
     public void onStartAsync(AsyncEvent event) throws IOException {
         // NOOP

==================================================
LogTag.java
index 0552a97acd..1109443409 100644
--- a/webapps/examples/WEB-INF/classes/cal/JspCalendar.java
+++ b/webapps/examples/WEB-INF/classes/cal/JspCalendar.java
@@ -149,6 +149,3 @@ public class JspCalendar {
 }
 
 
-
-
-

==================================================
ShowSource.java
index 2be11d674e..bb0289e24c 100644
--- a/webapps/examples/WEB-INF/classes/examples/LogTag.java
+++ b/webapps/examples/WEB-INF/classes/examples/LogTag.java
@@ -58,6 +58,4 @@ public class LogTag extends ExampleTagBase {
     }
 }
 
-    
-        
-    
+

==================================================
