65aec2ac7fb4980694291e66efd360195dfa8d73
==================================================
Add a few GraalVM cleanups
==================================================
remm remm@apache.org
==================================================
Thu Jul 4 23:03:50 2019 +0200
==================================================
StandardContext.java
Add a few GraalVM cleanups

More importantly default CL to delegate with a native image.


==================================================
ParallelWebappClassLoader.java
index 975b81e0c9..a3f03fce7c 100644
--- a/java/org/apache/catalina/core/StandardContext.java
+++ b/java/org/apache/catalina/core/StandardContext.java
@@ -116,6 +116,7 @@ import org.apache.tomcat.JarScanner;
 import org.apache.tomcat.util.ExceptionUtils;
 import org.apache.tomcat.util.IntrospectionUtils;
 import org.apache.tomcat.util.buf.StringUtils;
+import org.apache.tomcat.util.compat.JreCompat;
 import org.apache.tomcat.util.descriptor.XmlIdentifiers;
 import org.apache.tomcat.util.descriptor.web.ApplicationParameter;
 import org.apache.tomcat.util.descriptor.web.ErrorPage;
@@ -329,8 +330,10 @@ public class StandardContext extends ContainerBase
     /**
      * The "follow standard delegation model" flag that will be used to
      * configure our ClassLoader.
+     * Graal cannot actually load a class from the webapp classloader,
+     * so delegate by default.
      */
-    private boolean delegate = false;
+    private boolean delegate = JreCompat.isGraalAvailable();
 
 
     private boolean denyUncoveredHttpMethods;

==================================================
WebappLoader.java
index a71d26d447..9f6b469780 100644
--- a/java/org/apache/catalina/loader/ParallelWebappClassLoader.java
+++ b/java/org/apache/catalina/loader/ParallelWebappClassLoader.java
@@ -26,9 +26,10 @@ public class ParallelWebappClassLoader extends WebappClassLoaderBase {
     private static final Log log = LogFactory.getLog(ParallelWebappClassLoader.class);
 
     static {
-        boolean result = !JreCompat.isGraalAvailable() && ClassLoader.registerAsParallelCapable();
-        if (!result) {
-            log.warn(sm.getString("webappClassLoaderParallel.registrationFailed"));
+        if (!JreCompat.isGraalAvailable()) {
+            if (!ClassLoader.registerAsParallelCapable()) {
+                log.warn(sm.getString("webappClassLoaderParallel.registrationFailed"));
+            }
         }
     }
 

==================================================
