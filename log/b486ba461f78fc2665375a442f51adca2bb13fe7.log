b486ba461f78fc2665375a442f51adca2bb13fe7
==================================================
Better comments. Move inner classes to end
==================================================
Mark Emlyn
==================================================
Wed May 1 15:56:59 2013 +0000
==================================================
InternalAprOutputBuffer.java
Better comments. Move inner classes to end

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1478062 13f79535-47bb-0310-9956-ffa450edef68



==================================================
InternalNioOutputBuffer.java
index cfe20e14a1..49cb43012a 100644
--- a/java/org/apache/coyote/http11/InternalAprOutputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalAprOutputBuffer.java
@@ -209,7 +209,7 @@ public class InternalAprOutputBuffer extends AbstractOutputBuffer<Long> {
     }
 
 
-    //------------------------------------------------------ Non-blocking writes
+    //-------------------------------------------------- Non-blocking IO methods
 
     @Override
     protected boolean hasDataToWrite() {

==================================================
InternalOutputBuffer.java
index 3139b6f45d..b008ffd0e5 100644
--- a/java/org/apache/coyote/http11/InternalNioOutputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalNioOutputBuffer.java
@@ -380,39 +380,7 @@ public class InternalNioOutputBuffer extends AbstractOutputBuffer<NioChannel> {
     }
 
 
-    // ----------------------------------- OutputStreamOutputBuffer Inner Class
-
-    /**
-     * This class is an output buffer which will write data to an output
-     * stream.
-     */
-    protected class SocketOutputBuffer
-        implements OutputBuffer {
-
-
-        /**
-         * Write chunk.
-         */
-        @Override
-        public int doWrite(ByteChunk chunk, Response res)
-            throws IOException {
-
-            int len = chunk.getLength();
-            int start = chunk.getStart();
-            byte[] b = chunk.getBuffer();
-            addToBB(b, start, len);
-            byteCount += chunk.getLength();
-            return chunk.getLength();
-        }
-
-        @Override
-        public long getBytesWritten() {
-            return byteCount;
-        }
-    }
-
-
-    //------------------------------------------------------ Non-blocking writes
+    //-------------------------------------------------- Non-blocking IO methods
 
     @Override
     public void setBlocking(boolean blocking) {
@@ -449,4 +417,36 @@ public class InternalNioOutputBuffer extends AbstractOutputBuffer<NioChannel> {
     public int getBufferedWriteSize() {
         return bufferedWriteSize;
     }
+
+
+    // ----------------------------------- OutputStreamOutputBuffer Inner Class
+
+    /**
+     * This class is an output buffer which will write data to an output
+     * stream.
+     */
+    protected class SocketOutputBuffer
+        implements OutputBuffer {
+
+
+        /**
+         * Write chunk.
+         */
+        @Override
+        public int doWrite(ByteChunk chunk, Response res)
+            throws IOException {
+
+            int len = chunk.getLength();
+            int start = chunk.getStart();
+            byte[] b = chunk.getBuffer();
+            addToBB(b, start, len);
+            byteCount += chunk.getLength();
+            return chunk.getLength();
+        }
+
+        @Override
+        public long getBytesWritten() {
+            return byteCount;
+        }
+    }
 }

==================================================
