a8607b481b5d0dc238883a126d9457ac7cfc94fe
==================================================
Connector alignment - final tweaks to the process method
==================================================
Mark Emlyn
==================================================
Tue Sep 6 16:16:28 2011 +0000
==================================================
Http11AprProcessor.java
Connector alignment - final tweaks to the process method

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1165746 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http11NioProcessor.java
index 2456145b45..42af620b04 100644
--- a/java/org/apache/coyote/http11/Http11AprProcessor.java
+++ b/java/org/apache/coyote/http11/Http11AprProcessor.java
@@ -172,7 +172,7 @@ public class Http11AprProcessor extends AbstractHttp11Processor<Long> {
         RequestInfo rp = request.getRequestProcessor();
         rp.setStage(org.apache.coyote.Constants.STAGE_PARSE);
 
-        // Setting up the socket
+        // Setting up the I/O
         this.socket = socketWrapper;
         inputBuffer.init(socketWrapper, endpoint);
         outputBuffer.init(socketWrapper, endpoint);
@@ -318,8 +318,7 @@ public class Http11AprProcessor extends AbstractHttp11Processor<Long> {
             }
             request.updateCounters();
 
-            if (!comet && !isAsync()) {
-                // Next request
+            if (!isAsync() && !comet || error) {
                 inputBuffer.nextRequest();
                 outputBuffer.nextRequest();
             }
@@ -339,7 +338,7 @@ public class Http11AprProcessor extends AbstractHttp11Processor<Long> {
 
         if (error || endpoint.isPaused()) {
             return SocketState.CLOSED;
-        } else if (comet  || isAsync()) {
+        } else if (comet || isAsync()) {
             return SocketState.LONG;
         } else {
             if (sendfileInProgress) {

==================================================
Http11Processor.java
index 6c9791e30e..d8fadd9f1b 100644
--- a/java/org/apache/coyote/http11/Http11NioProcessor.java
+++ b/java/org/apache/coyote/http11/Http11NioProcessor.java
@@ -201,7 +201,7 @@ public class Http11NioProcessor extends AbstractHttp11Processor<NioChannel> {
         RequestInfo rp = request.getRequestProcessor();
         rp.setStage(org.apache.coyote.Constants.STAGE_PARSE);
 
-        // Setting up the socket
+        // Setting up the I/O
         this.socket = socketWrapper;
         inputBuffer.init(socketWrapper, endpoint);
         outputBuffer.init(socketWrapper, endpoint);
@@ -329,7 +329,7 @@ public class Http11NioProcessor extends AbstractHttp11Processor<NioChannel> {
             rp.setStage(org.apache.coyote.Constants.STAGE_ENDINPUT);
 
             if (!isAsync() && !comet) {
-                if(error) {
+                if (error) {
                     // If we know we are closing the connection, don't drain
                     // input. This way uploading a 100GB file doesn't tie up the
                     // thread if the servlet has rejected it.
@@ -347,8 +347,7 @@ public class Http11NioProcessor extends AbstractHttp11Processor<NioChannel> {
             }
             request.updateCounters();
 
-            if (!comet && !isAsync()) {
-                // Next request
+            if (!isAsync() && !comet || error) {
                 inputBuffer.nextRequest();
                 outputBuffer.nextRequest();
             }

==================================================
