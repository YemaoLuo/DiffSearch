b2da6abb21078c4a57a4178b6b5d6f9b8125a583
==================================================
Don't warn that SSLv2Hello is unavailable unless explicitly configured
==================================================
Mark Thomas
==================================================
Thu Apr 18 22:33:22 2019 +0100
==================================================
SSLUtilBase.java
Don't warn that SSLv2Hello is unavailable unless explicitly configured


==================================================
JSSEUtil.java
index 848f12d82e..43c1ca9269 100644
--- a/java/org/apache/tomcat/util/net/SSLUtilBase.java
+++ b/java/org/apache/tomcat/util/net/SSLUtilBase.java
@@ -90,13 +90,21 @@ public abstract class SSLUtilBase implements SSLUtil {
 
         // Calculate the enabled protocols
         Set<String> configuredProtocols = sslHostConfig.getProtocols();
-        if (!isTls13Available() &&
+        Set<String> implementedProtocols = getImplementedProtocols();
+        // If TLSv1.3 is not implemented and not explicitly requested we can
+        // ignore it. It is included in the defaults so it may be configured.
+        if (!implementedProtocols.contains(Constants.SSL_PROTO_TLSv1_3) &&
                 !sslHostConfig.isExplicitlyRequestedProtocol(Constants.SSL_PROTO_TLSv1_3)) {
-            // TLS 1.3 not implemented and not explicitly requested so ignore it
-            // if present
             configuredProtocols.remove(Constants.SSL_PROTO_TLSv1_3);
         }
-        Set<String> implementedProtocols = getImplementedProtocols();
+        // Newer JREs are dropping support for SSLv2Hello. If it is not
+        // implemented and not explicitly requested we can ignore it. It is
+        // included in the defaults so it may be configured.
+        if (!implementedProtocols.contains(Constants.SSL_PROTO_SSLv2Hello) &&
+                !sslHostConfig.isExplicitlyRequestedProtocol(Constants.SSL_PROTO_SSLv2Hello)) {
+            configuredProtocols.remove(Constants.SSL_PROTO_SSLv2Hello);
+        }
+
         List<String> enabledProtocols =
                 getEnabled("protocols", getLog(), warnTls13, configuredProtocols, implementedProtocols);
         if (enabledProtocols.contains("SSLv3")) {
@@ -527,7 +535,6 @@ public abstract class SSLUtilBase implements SSLUtil {
     protected abstract Set<String> getImplementedProtocols();
     protected abstract Set<String> getImplementedCiphers();
     protected abstract Log getLog();
-    protected abstract boolean isTls13Available();
     protected abstract boolean isTls13RenegAuthAvailable();
     protected abstract SSLContext createSSLContextInternal(List<String> negotiableProtocols) throws Exception;
 }

==================================================
OpenSSLUtil.java
index 235fc4bb8b..c30dac29fc 100644
--- a/java/org/apache/tomcat/util/net/jsse/JSSEUtil.java
+++ b/java/org/apache/tomcat/util/net/jsse/JSSEUtil.java
@@ -27,7 +27,6 @@ import java.util.Set;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.compat.JreVendor;
-import org.apache.tomcat.util.compat.TLS;
 import org.apache.tomcat.util.net.Constants;
 import org.apache.tomcat.util.net.SSLContext;
 import org.apache.tomcat.util.net.SSLHostConfigCertificate;
@@ -133,12 +132,6 @@ public class JSSEUtil extends SSLUtilBase {
     }
 
 
-    @Override
-    protected boolean isTls13Available() {
-        return TLS.isTlsv13Available();
-    }
-
-
     @Override
     protected boolean isTls13RenegAuthAvailable() {
         // TLS 1.3 does not support authentication after the initial handshake

==================================================
