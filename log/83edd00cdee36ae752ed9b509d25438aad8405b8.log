83edd00cdee36ae752ed9b509d25438aad8405b8
==================================================
Align pojo package with async->partial and basic->whole renaming in API
==================================================
Mark Emlyn
==================================================
Thu Mar 7 22:46:49 2013 +0000
==================================================
PojoMessageHandlerPartialBase.java
Align pojo package with async->partial and basic->whole renaming in API

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1454145 13f79535-47bb-0310-9956-ffa450edef68



==================================================
PojoMessageHandlerPartialBinary.java
similarity index 92%
rename from java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerAsyncBase.java
rename to java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerPartialBase.java
index e929efe94b..330e151864 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerAsyncBase.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerPartialBase.java
@@ -24,17 +24,17 @@ import javax.websocket.MessageHandler;
 import javax.websocket.Session;
 
 /**
- * Common implementation code for the POJO asynchronous message handlers. All
+ * Common implementation code for the POJO partial message handlers. All
  * the real work is done in this class and in the superclass.
  *
  * @param <T>   The type of message to handle
  */
-public abstract class PojoMessageHandlerAsyncBase<T>
+public abstract class PojoMessageHandlerPartialBase<T>
         extends PojoMessageHandlerBase<T> implements MessageHandler.Partial<T> {
 
     private final int indexBoolean;
 
-    public PojoMessageHandlerAsyncBase(Object pojo, Method method,
+    public PojoMessageHandlerPartialBase(Object pojo, Method method,
             Session session, Object[] params, int indexPayload,
             boolean unwrap, int indexBoolean, int indexSession) {
         super(pojo, method, session, params, indexPayload, unwrap,

==================================================
PojoMessageHandlerPartialString.java
similarity index 83%
rename from java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerAsyncBinary.java
rename to java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerPartialBinary.java
index 655e7da510..b9dbf2b470 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerAsyncBinary.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerPartialBinary.java
@@ -22,12 +22,12 @@ import java.nio.ByteBuffer;
 import javax.websocket.Session;
 
 /**
- * ByteBuffer specific concrete asynchronous implementation.
+ * ByteBuffer specific concrete partial implementation.
  */
-public class PojoMessageHandlerAsyncBinary
-        extends PojoMessageHandlerAsyncBase<ByteBuffer>{
+public class PojoMessageHandlerPartialBinary
+        extends PojoMessageHandlerPartialBase<ByteBuffer>{
 
-    public PojoMessageHandlerAsyncBinary(Object pojo, Method method,
+    public PojoMessageHandlerPartialBinary(Object pojo, Method method,
             Session session, Object[] params, int indexPayload, boolean unwrap,
             int indexBoolean, int indexSession) {
         super(pojo, method, session, params, indexPayload, unwrap, indexBoolean,

==================================================
PojoMessageHandlerWholeBase.java
similarity index 84%
rename from java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerAsyncString.java
rename to java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerPartialString.java
index 2e17b936bb..1063b660fb 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerAsyncString.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerPartialString.java
@@ -21,12 +21,12 @@ import java.lang.reflect.Method;
 import javax.websocket.Session;
 
 /**
- * String specific concrete asynchronous implementation.
+ * String specific concrete partial implementation.
  */
-public class PojoMessageHandlerAsyncString
-        extends PojoMessageHandlerAsyncBase<String>{
+public class PojoMessageHandlerPartialString
+        extends PojoMessageHandlerPartialBase<String>{
 
-    public PojoMessageHandlerAsyncString(Object pojo, Method method,
+    public PojoMessageHandlerPartialString(Object pojo, Method method,
             Session session, Object[] params, int indexPayload, boolean unwrap,
             int indexBoolean, int indexSession) {
         super(pojo, method, session, params, indexPayload, unwrap, indexBoolean,

==================================================
PojoMessageHandlerWholeBinary.java
similarity index 92%
rename from java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerBasicBase.java
rename to java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerWholeBase.java
index 978b121bd0..7437be3da3 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerBasicBase.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerWholeBase.java
@@ -24,15 +24,15 @@ import javax.websocket.MessageHandler;
 import javax.websocket.Session;
 
 /**
- * Common implementation code for the POJO basic message handlers. All the real
+ * Common implementation code for the POJO whole message handlers. All the real
  * work is done in this class and in the superclass.
  *
  * @param <T>   The type of message to handle
  */
-public abstract class PojoMessageHandlerBasicBase<T>
+public abstract class PojoMessageHandlerWholeBase<T>
         extends PojoMessageHandlerBase<T> implements MessageHandler.Whole<T> {
 
-    public PojoMessageHandlerBasicBase(Object pojo, Method method,
+    public PojoMessageHandlerWholeBase(Object pojo, Method method,
             Session session, Object[] params, int indexPayload,
             boolean unwrap, int indexSession) {
         super(pojo, method, session, params, indexPayload, unwrap,

==================================================
PojoMessageHandlerWholePong.java
similarity index 83%
rename from java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerBasicBinary.java
rename to java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerWholeBinary.java
index ac69832781..eab2893e21 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerBasicBinary.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerWholeBinary.java
@@ -22,12 +22,12 @@ import java.nio.ByteBuffer;
 import javax.websocket.Session;
 
 /**
- * ByteBuffer specific concrete basic implementation.
+ * ByteBuffer specific concrete whole message implementation.
  */
-public class PojoMessageHandlerBasicBinary
-        extends PojoMessageHandlerBasicBase<ByteBuffer> {
+public class PojoMessageHandlerWholeBinary
+        extends PojoMessageHandlerWholeBase<ByteBuffer> {
 
-    public PojoMessageHandlerBasicBinary(Object pojo, Method method,
+    public PojoMessageHandlerWholeBinary(Object pojo, Method method,
             Session session, Object[] params, int indexPayload, boolean unwrap,
             int indexSession) {
         super(pojo, method, session, params, indexPayload, unwrap, indexSession);

==================================================
PojoMessageHandlerWholeString.java
similarity index 83%
rename from java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerBasicPong.java
rename to java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerWholePong.java
index a3111f577f..6dace9efbf 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerBasicPong.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerWholePong.java
@@ -22,12 +22,12 @@ import javax.websocket.PongMessage;
 import javax.websocket.Session;
 
 /**
- * PongMessage specific concrete basic implementation.
+ * PongMessage specific concrete whole message implementation.
  */
-public class PojoMessageHandlerBasicPong
-        extends PojoMessageHandlerBasicBase<PongMessage> {
+public class PojoMessageHandlerWholePong
+        extends PojoMessageHandlerWholeBase<PongMessage> {
 
-    public PojoMessageHandlerBasicPong(Object pojo, Method method,
+    public PojoMessageHandlerWholePong(Object pojo, Method method,
             Session session, Object[] params, int indexPayload, boolean unwrap,
             int indexSession) {
         super(pojo, method, session, params, indexPayload, unwrap, indexSession);

==================================================
PojoMethodMapping.java
similarity index 83%
rename from java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerBasicString.java
rename to java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerWholeString.java
index 3f75e5cb36..76d6773cd5 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerBasicString.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerWholeString.java
@@ -21,12 +21,12 @@ import java.lang.reflect.Method;
 import javax.websocket.Session;
 
 /**
- * String specific concrete basic implementation.
+ * String specific concrete whole message implementation.
  */
-public class PojoMessageHandlerBasicString
-        extends PojoMessageHandlerBasicBase<String> {
+public class PojoMessageHandlerWholeString
+        extends PojoMessageHandlerWholeBase<String> {
 
-    public PojoMessageHandlerBasicString(Object pojo, Method method,
+    public PojoMessageHandlerWholeString(Object pojo, Method method,
             Session session, Object[] params, int indexPayload, boolean unwrap,
             int indexSession) {
         super(pojo, method, session, params, indexPayload, unwrap,

==================================================
