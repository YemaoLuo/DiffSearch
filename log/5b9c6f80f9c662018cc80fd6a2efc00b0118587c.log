5b9c6f80f9c662018cc80fd6a2efc00b0118587c
==================================================
Switch to the thread-safe method of serviced application tracking
==================================================
Mark Thomas
==================================================
Wed Jan 20 17:33:53 2021 +0000
==================================================
FarmWarDeployer.java
Switch to the thread-safe method of serviced application tracking

Second in a series of patches aimed at allowing parallel requests to the
Manager application to deploy different applications in parallel rather
than using a sync block to deploy them serially.



==================================================
HTMLManagerServlet.java
index 940f5810dc..09f075b482 100644
--- a/java/org/apache/catalina/ha/deploy/FarmWarDeployer.java
+++ b/java/org/apache/catalina/ha/deploy/FarmWarDeployer.java
@@ -228,8 +228,7 @@ public class FarmWarDeployer extends ClusterListener
                     File deployable = new File(getDeployDirFile(), name);
                     try {
                         String contextName = fmsg.getContextName();
-                        if (!isServiced(contextName)) {
-                            addServiced(contextName);
+                        if (tryAddServiced(contextName)) {
                             try {
                                 remove(contextName);
                                 if (!factory.getFile().renameTo(deployable)) {
@@ -262,8 +261,7 @@ public class FarmWarDeployer extends ClusterListener
                     if (log.isDebugEnabled())
                         log.debug(sm.getString("farmWarDeployer.msgRxUndeploy",
                                 contextName));
-                    if (!isServiced(contextName)) {
-                        addServiced(contextName);
+                    if (tryAddServiced(contextName)) {
                         try {
                             remove(contextName);
                         } finally {
@@ -420,8 +418,7 @@ public class FarmWarDeployer extends ClusterListener
         // remove locally
         if (undeploy) {
             try {
-                if (!isServiced(contextName)) {
-                    addServiced(contextName);
+                if (tryAddServiced(contextName)) {
                     try {
                         remove(contextName);
                     } finally {
@@ -458,8 +455,7 @@ public class FarmWarDeployer extends ClusterListener
                 log.info(sm.getString("farmWarDeployer.modInstall",
                         cn.getName(), deployWar.getAbsolutePath()));
             // install local
-            if (!isServiced(cn.getName())) {
-                addServiced(cn.getName());
+            if (tryAddServiced(cn.getName())) {
                 try {
                     copy(newWar, deployWar);
                     check(cn.getName());
@@ -594,7 +590,9 @@ public class FarmWarDeployer extends ClusterListener
      * @param name The context name
      * @return <code>true</code> if the context is being serviced
      * @throws Exception Error invoking the deployer
+     * @deprecated Unused. Will be removed in Tomcat 10.1.x onwards.
      */
+    @Deprecated
     protected boolean isServiced(String name) throws Exception {
         String[] params = { name };
         String[] signature = { "java.lang.String" };
@@ -607,13 +605,30 @@ public class FarmWarDeployer extends ClusterListener
      * Mark a context as being services.
      * @param name The context name
      * @throws Exception Error invoking the deployer
+     * @deprecated Unused. Will be removed in Tomcat 10.1.x onwards.
+     *             Use {@link #tryAddServiced}
      */
+    @Deprecated
     protected void addServiced(String name) throws Exception {
         String[] params = { name };
         String[] signature = { "java.lang.String" };
         mBeanServer.invoke(oname, "addServiced", params, signature);
     }
 
+    /**
+     * Attempt to mark a context as being serviced
+     * @param name The context name
+     * @return {@code true} if the application was marked as being serviced and
+     *         {@code false} if the application was already marked as being serviced
+     * @throws Exception Error invoking the deployer
+     */
+    protected boolean tryAddServiced(String name) throws Exception {
+        String[] params = { name };
+        String[] signature = { "java.lang.String" };
+        Boolean result = (Boolean) mBeanServer.invoke(oname, "tryAddServiced", params, signature);
+        return result.booleanValue();
+    }
+
     /**
      * Mark a context as no longer being serviced.
      * @param name The context name

==================================================
ManagerServlet.java
index 749ab8330d..65601ec13e 100644
--- a/java/org/apache/catalina/manager/HTMLManagerServlet.java
+++ b/java/org/apache/catalina/manager/HTMLManagerServlet.java
@@ -284,10 +284,7 @@ public final class HTMLManagerServlet extends ManagerServlet {
                     break;
                 }
 
-                if (isServiced(name)) {
-                    message = smClient.getString("managerServlet.inService", name);
-                } else {
-                    addServiced(name);
+                if (tryAddServiced(name)) {
                     try {
                         warPart.write(file.getAbsolutePath());
                         // Perform new deployment
@@ -295,6 +292,8 @@ public final class HTMLManagerServlet extends ManagerServlet {
                     } finally {
                         removeServiced(name);
                     }
+                } else {
+                    message = smClient.getString("managerServlet.inService", name);
                 }
                 break;
             }

==================================================
