51747b8f44029af64dc591a7a6a21e355a0cb606
==================================================
Add the Tcp code... Still need the code in httpd-trunk to test it.
==================================================
Jean-Frederic Clere
==================================================
Thu Apr 9 16:32:04 2009 +0000
==================================================
HeartbeatListener.java
Add the Tcp code... Still need the code in httpd-trunk to test it.


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@763726 13f79535-47bb-0310-9956-ffa450edef68



==================================================
MultiCastSender.java
index 453068b773..1648680ea3 100644
--- a/java/org/apache/catalina/ha/backend/HeartbeatListener.java
+++ b/java/org/apache/catalina/ha/backend/HeartbeatListener.java
@@ -29,11 +29,6 @@ import org.apache.juli.logging.LogFactory;
 
 import org.apache.catalina.connector.Connector;
 
-import java.net.MulticastSocket;
-import java.net.InetAddress;
-import java.net.DatagramPacket;
-import java.io.UnsupportedEncodingException;
-
 import org.apache.tomcat.util.modeler.Registry;
 
 /*
@@ -66,6 +61,20 @@ public class HeartbeatListener
     public void setTtl(int ttl) { this.ttl = ttl; }
     public int getTtl() { return ttl; }
 
+    /**
+     * Proxy list, format "address:port,address:port".
+     */
+    protected String proxyList = null;
+    public String getProxyList() { return proxyList; }
+    public void setProxyList(String proxyList) { this.proxyList = proxyList; }
+
+    /**
+     * URL prefix.
+     */
+    protected String proxyURL = "/HeartbeatListener";
+    public String getProxyURL() { return proxyURL; }
+    public void setProxyURL(String proxyURL) { this.proxyURL = proxyURL; }
+
     private CollectedInfo coll = null;
 
     private Sender sender = null;
@@ -77,8 +86,18 @@ public class HeartbeatListener
         Object source = event.getLifecycle();
         if (Lifecycle.PERIODIC_EVENT.equals(event.getType())) {
             if (sender == null) {
-                sender = new MultiCastSender();
-                sender.init(this);
+                if (proxyList == null)
+                    sender = new MultiCastSender();
+                else
+                    sender = new TcpSender();
+
+                try {
+                    sender.init(this);
+                } catch (Exception ex) {
+                    log.error("Unable to initialize Sender: " + ex);
+                    sender = null;
+                    return;
+                }
             }
 
             /* Read busy and ready */

==================================================
Proxy.java
index 23c32bbd47..558a2f26d9 100644
--- a/java/org/apache/catalina/ha/backend/MultiCastSender.java
+++ b/java/org/apache/catalina/ha/backend/MultiCastSender.java
@@ -40,7 +40,7 @@ public class MultiCastSender
     MulticastSocket s = null;
     InetAddress group = null;
 
-    public void init(HeartbeatListener config) {
+    public void init(HeartbeatListener config) throws Exception {
         this.config = config;
     }
 

==================================================
Sender.java
new file mode 100644
index 0000000000..afe9bdb56d
--- /dev/null
+++ b/java/org/apache/catalina/ha/backend/Proxy.java
@@ -0,0 +1,34 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ * 
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+
+package org.apache.catalina.ha.backend;
+
+import java.net.InetAddress;
+
+/*
+ * This class represents a front-end httpd server.
+ *
+ */
+public class Proxy {
+
+  protected enum State { OK, ERROR, DOWN };
+
+  public InetAddress address = null;
+  public int port = 80;
+  public State state = State.OK;
+}

==================================================
TcpSender.java
index b969208d2e..02e34621b2 100644
--- a/java/org/apache/catalina/ha/backend/Sender.java
+++ b/java/org/apache/catalina/ha/backend/Sender.java
@@ -27,7 +27,7 @@ public interface Sender {
   /**
    * Set the configuration parameters
    */
-  public void init(HeartbeatListener config);
+  public void init(HeartbeatListener config) throws Exception;
 
   /**
    * Send the message to the proxies

==================================================
