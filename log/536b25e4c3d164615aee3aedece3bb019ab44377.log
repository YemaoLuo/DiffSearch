536b25e4c3d164615aee3aedece3bb019ab44377
==================================================
https://issues.apache.org/bugzilla/show_bug.cgi?id=50159
==================================================
Mark Emlyn
==================================================
Thu Nov 4 17:59:20 2010 +0000
==================================================
NamingContextListener.java
https://issues.apache.org/bugzilla/show_bug.cgi?id=50159
Add a new attribute for <Resource> elements, singleton that controls whether or not a new object is created every time a JNDI lookup is performed to obtain the resource. The default value is true, which will return the same instance of the resource in every JNDI lookup.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1031112 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ContextResource.java
index 1e2ff4eca3..da9ad5eee7 100644
--- a/java/org/apache/catalina/core/NamingContextListener.java
+++ b/java/org/apache/catalina/core/NamingContextListener.java
@@ -849,7 +849,8 @@ public class NamingContextListener
     /**
      * Set the specified local EJBs in the naming context.
      */
-    public void addLocalEjb(ContextLocalEjb localEjb) {
+    public void addLocalEjb(
+            @SuppressWarnings("unused") ContextLocalEjb localEjb) {
         // NO-OP
     }
 
@@ -992,7 +993,8 @@ public class NamingContextListener
         // Create a reference to the resource.
         Reference ref = new ResourceRef
             (resource.getType(), resource.getDescription(),
-             resource.getScope(), resource.getAuth());
+             resource.getScope(), resource.getAuth(),
+             resource.getSingleton());
         // Adding the additional parameters, if any
         Iterator<String> params = resource.listProperties();
         while (params.hasNext()) {

==================================================
NamingContext.java
index e53eea2ad4..237e5832f2 100644
--- a/java/org/apache/catalina/deploy/ContextResource.java
+++ b/java/org/apache/catalina/deploy/ContextResource.java
@@ -65,6 +65,21 @@ public class ContextResource extends ResourceBase {
     }
 
 
+    /**
+     * Is this resource known to be a singleton resource. The default value is
+     * true since this is what users expect although the JavaEE spec implies
+     * that the default should be false.
+     */
+    private boolean singleton = true;
+    
+    public boolean getSingleton() {
+        return singleton;
+    }
+    
+    public void setSingleton(boolean singleton) {
+        this.singleton = singleton;
+    }
+
     // --------------------------------------------------------- Public Methods
 
 

==================================================
ResourceRef.java
index 107bc401cd..7e419e7136 100644
--- a/java/org/apache/naming/NamingContext.java
+++ b/java/org/apache/naming/NamingContext.java
@@ -825,6 +825,13 @@ public class NamingContext implements Context {
                 try {
                     Object obj = NamingManager.getObjectInstance
                         (entry.value, name, this, env);
+                    boolean singleton = Boolean.parseBoolean(
+                            (String) ((ResourceRef) entry.value).get(
+                                    "singleton").getContent());
+                    if (singleton) {
+                        entry.type = NamingEntry.ENTRY;
+                        entry.value = obj;
+                    }
                     return obj; 
                 } catch (NamingException e) {
                     throw e;

==================================================
TestNamingContext.java
index 48f569f416..8774843d0c 100644
--- a/java/org/apache/naming/ResourceRef.java
+++ b/java/org/apache/naming/ResourceRef.java
@@ -32,13 +32,13 @@ import javax.naming.StringRefAddr;
  * @version $Id$
  */
 
-public class ResourceRef
-    extends Reference {
+public class ResourceRef extends Reference {
 
+    private static final long serialVersionUID = 1L;
 
+    
     // -------------------------------------------------------------- Constants
 
-
     /**
      * Default factory for this reference.
      */
@@ -64,6 +64,11 @@ public class ResourceRef
     public static final String AUTH = "auth";
 
 
+    /**
+     * Is this resource a singleton
+     */
+    public static final String SINGLETON = "singleton";
+
     // ----------------------------------------------------------- Constructors
 
 
@@ -75,8 +80,8 @@ public class ResourceRef
      * @param auth Resource authentication
      */
     public ResourceRef(String resourceClass, String description, 
-                       String scope, String auth) {
-        this(resourceClass, description, scope, auth, null, null);
+                       String scope, String auth, boolean singleton) {
+        this(resourceClass, description, scope, auth, singleton, null, null);
     }
 
 
@@ -88,8 +93,8 @@ public class ResourceRef
      * @param auth Resource authentication
      */
     public ResourceRef(String resourceClass, String description, 
-                       String scope, String auth, String factory,
-                       String factoryLocation) {
+                       String scope, String auth, boolean singleton,
+                       String factory, String factoryLocation) {
         super(resourceClass, factory, factoryLocation);
         StringRefAddr refAddr = null;
         if (description != null) {
@@ -104,6 +109,9 @@ public class ResourceRef
             refAddr = new StringRefAddr(AUTH, auth);
             add(refAddr);
         }
+        // singleton is a boolean so slightly different handling
+        refAddr = new StringRefAddr(SINGLETON, Boolean.toString(singleton));
+        add(refAddr);
     }
 
 

==================================================
