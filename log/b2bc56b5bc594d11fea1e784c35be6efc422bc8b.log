b2bc56b5bc594d11fea1e784c35be6efc422bc8b
==================================================
Ensure that the return value for request.getRequestURI() is in the expected non-URL-encoded form when using the RewriteValve
==================================================
Mark Thomas
==================================================
Thu Dec 11 23:18:47 2014 +0000
==================================================
CoyoteAdapter.java
Ensure that the return value for request.getRequestURI() is in the expected non-URL-encoded form when using the RewriteValve

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1644790 13f79535-47bb-0310-9956-ffa450edef68



==================================================
RewriteValve.java
index 7f9aabc6b2..f785deaea9 100644
--- a/java/org/apache/catalina/connector/CoyoteAdapter.java
+++ b/java/org/apache/catalina/connector/CoyoteAdapter.java
@@ -605,11 +605,12 @@ public class CoyoteAdapter implements Adapter {
             return false;
         }
 
-        // Copy the raw URI to the decodedURI
         MessageBytes decodedURI = req.decodedURI();
-        decodedURI.duplicate(undecodedURI);
 
         if (undecodedURI.getType() == MessageBytes.T_BYTES) {
+            // Copy the raw URI to the decodedURI
+            decodedURI.duplicate(undecodedURI);
+
             // Parse the path parameters. This will:
             //   - strip out the path parameters
             //   - convert the decodedURI to bytes
@@ -645,9 +646,13 @@ public class CoyoteAdapter implements Adapter {
                 return false;
             }
         } else {
-            // The URL is chars or String, and has been sent using an in-memory
-            // protocol handler, we have to assume the URL has been properly
-            // decoded already
+            /* The URI is chars or String, and has been sent using an in-memory
+             * protocol handler. The following assumptions are made:
+             * - req.requestURI() has been set to the 'original' non-decoded,
+             *   non-normalized URI
+             * - req.decodedURI() has been set to the decoded, normalized form
+             *   of req.requestURI()
+             */
             decodedURI.toChars();
             // Remove all path parameters; any needed path parameter should be set
             // using the request object rather than passing it in the URL

==================================================
TestRewriteValve.java
index 11a7b16573..4d9f14e264 100644
--- a/java/org/apache/catalina/valves/rewrite/RewriteValve.java
+++ b/java/org/apache/catalina/valves/rewrite/RewriteValve.java
@@ -44,6 +44,7 @@ import org.apache.catalina.LifecycleListener;
 import org.apache.catalina.connector.Request;
 import org.apache.catalina.connector.Response;
 import org.apache.catalina.util.LifecycleSupport;
+import org.apache.catalina.util.URLEncoder;
 import org.apache.catalina.valves.ValveBase;
 import org.apache.tomcat.util.buf.CharChunk;
 import org.apache.tomcat.util.buf.MessageBytes;
@@ -443,7 +444,7 @@ public class RewriteValve extends ValveBase {
                         queryString = urlString.substring(queryIndex+1);
                         urlString = urlString.substring(0, queryIndex);
                     }
-                    // Set the new URL
+                    // Set the new 'original' URI
                     String contextPath = null;
                     if (context) {
                         contextPath = request.getContextPath();
@@ -454,8 +455,17 @@ public class RewriteValve extends ValveBase {
                     if (context) {
                         chunk.append(contextPath);
                     }
-                    chunk.append(urlString);
+                    chunk.append(URLEncoder.DEFAULT.encode(urlString));
                     request.getCoyoteRequest().requestURI().toChars();
+                    // Decoded URI
+                    request.getCoyoteRequest().decodedURI().setString(null);
+                    chunk = request.getCoyoteRequest().decodedURI().getCharChunk();
+                    chunk.recycle();
+                    if (context) {
+                        chunk.append(contextPath);
+                    }
+                    chunk.append(urlString);
+                    request.getCoyoteRequest().decodedURI().toChars();
                     // Set the new Query if there is one
                     if (queryString != null) {
                         request.getCoyoteRequest().queryString().setString(null);

==================================================
