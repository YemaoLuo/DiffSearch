5059730fd5cf4b4e68267cd1e428e589ce2cd16d
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=57038
==================================================
Mark Emlyn
==================================================
Mon Sep 29 14:42:11 2014 +0000
==================================================
WebResource.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=57038
Add a WebResource.getCoseBase() method, implement for all WebResource implementations and then use it in the web application class loader to set the correct code base for  resources loaded from JARs and WARs.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1628197 13f79535-47bb-0310-9956-ffa450edef68



==================================================
WebappClassLoaderBase.java
index 2c843c4c60..7f5465cae2 100644
--- a/java/org/apache/catalina/WebResource.java
+++ b/java/org/apache/catalina/WebResource.java
@@ -136,6 +136,13 @@ public interface WebResource {
      */
     URL getURL();
 
+    /**
+     * Get code base for this resource that will be used when looking up the
+     * assigned permissions for the code base in the security policy file when
+     * running under a security manager.
+     */
+    URL getCodeBase();
+
     /**
      * Obtain a reference to the WebResourceRoot of which this WebResource is a
      * part.

==================================================
AbstractArchiveResource.java
index 4c8109cbc7..48c62d1426 100644
--- a/java/org/apache/catalina/loader/WebappClassLoaderBase.java
+++ b/java/org/apache/catalina/loader/WebappClassLoaderBase.java
@@ -2534,7 +2534,7 @@ public abstract class WebappClassLoaderBase extends URLClassLoader
 
         entry = new ResourceEntry();
         entry.source = resource.getURL();
-        entry.codeBase = entry.source;
+        entry.codeBase = resource.getCodeBase();
         entry.lastModified = resource.getLastModified();
 
         if (needConvert && path.endsWith(".properties")) {

==================================================
CachedResource.java
index 9d991b3ee4..defe4a23f9 100644
--- a/java/org/apache/catalina/webresources/AbstractArchiveResource.java
+++ b/java/org/apache/catalina/webresources/AbstractArchiveResource.java
@@ -33,18 +33,20 @@ public abstract class AbstractArchiveResource extends AbstractResource {
     private final String baseUrl;
     private final JarEntry resource;
     private final Manifest manifest;
+    private final String codeBaseUrl;
     private final String name;
     private boolean readCerts = false;
     private Certificate[] certificates;
 
     protected AbstractArchiveResource(WebResourceRoot root, String webAppPath,
             String base, String baseUrl, JarEntry jarEntry,
-            String internalPath, Manifest manifest) {
+            String internalPath, Manifest manifest, String codeBaseUrl) {
         super(root, webAppPath);
         this.base = base;
         this.baseUrl = baseUrl;
         this.resource = jarEntry;
         this.manifest = manifest;
+        this.codeBaseUrl = codeBaseUrl;
 
         String resourceName = resource.getName();
         if (resourceName.charAt(resourceName.length() - 1) == '/') {
@@ -132,12 +134,24 @@ public abstract class AbstractArchiveResource extends AbstractResource {
 
     @Override
     public URL getURL() {
+        String url = baseUrl + "!/" + resource.getName();
         try {
-            return new URL(baseUrl + "!/" + resource.getName());
+            return new URL(url);
         } catch (MalformedURLException e) {
             if (getLog().isDebugEnabled()) {
-                getLog().debug(sm.getString("fileResource.getUrlFail",
-                        resource.getName(), baseUrl), e);
+                getLog().debug(sm.getString("fileResource.getUrlFail", url), e);
+            }
+            return null;
+        }
+    }
+
+    @Override
+    public URL getCodeBase() {
+        try {
+            return new URL(codeBaseUrl);
+        } catch (MalformedURLException e) {
+            if (getLog().isDebugEnabled()) {
+                getLog().debug(sm.getString("fileResource.getUrlFail", codeBaseUrl), e);
             }
             return null;
         }

==================================================
EmptyResource.java
index 541aa6d833..d0d59c0c31 100644
--- a/java/org/apache/catalina/webresources/CachedResource.java
+++ b/java/org/apache/catalina/webresources/CachedResource.java
@@ -295,6 +295,11 @@ public class CachedResource implements WebResource {
         return webResource.getURL();
     }
 
+    @Override
+    public URL getCodeBase() {
+        return webResource.getCodeBase();
+    }
+
     @Override
     public Certificate[] getCertificates() {
         return webResource.getCertificates();

==================================================
FileResource.java
index 5c67a94ebe..65b65034e7 100644
--- a/java/org/apache/catalina/webresources/EmptyResource.java
+++ b/java/org/apache/catalina/webresources/EmptyResource.java
@@ -150,6 +150,11 @@ public class EmptyResource implements WebResource {
         return null;
     }
 
+    @Override
+    public URL getCodeBase() {
+        return null;
+    }
+
     @Override
     public Certificate[] getCertificates() {
         return null;

==================================================
JarResource.java
index 336d6869f0..3e0da94c92 100644
--- a/java/org/apache/catalina/webresources/FileResource.java
+++ b/java/org/apache/catalina/webresources/FileResource.java
@@ -206,6 +206,11 @@ public class FileResource extends AbstractResource {
         }
     }
 
+    @Override
+    public URL getCodeBase() {
+        return getURL();
+    }
+
     @Override
     public Certificate[] getCertificates() {
         return null;

==================================================
JarResourceRoot.java
index 2b54a344db..00ddab209e 100644
--- a/java/org/apache/catalina/webresources/JarResource.java
+++ b/java/org/apache/catalina/webresources/JarResource.java
@@ -38,7 +38,7 @@ public class JarResource extends AbstractArchiveResource {
             String baseUrl, JarEntry jarEntry, String internalPath,
             Manifest manifest) {
         super(root, webAppPath, base, "jar:" + baseUrl, jarEntry, internalPath,
-                manifest);
+                manifest, baseUrl);
     }
 
     @Override

==================================================
JarWarResource.java
index d2acd7e9a3..68b32d684c 100644
--- a/java/org/apache/catalina/webresources/JarResourceRoot.java
+++ b/java/org/apache/catalina/webresources/JarResourceRoot.java
@@ -122,17 +122,28 @@ public class JarResourceRoot extends AbstractResource {
 
     @Override
     public URL getURL() {
+        String url = baseUrl + "!/";
         try {
-            return new URL(baseUrl + "!/");
+            return new URL(url);
         } catch (MalformedURLException e) {
             if (log.isDebugEnabled()) {
-                log.debug(sm.getString("fileResource.getUrlFail",
-                        "", baseUrl), e);
+                log.debug(sm.getString("fileResource.getUrlFail", url), e);
             }
             return null;
         }
     }
 
+    @Override
+    public URL getCodeBase() {
+        try {
+            return new URL(baseUrl);
+        } catch (MalformedURLException e) {
+            if (getLog().isDebugEnabled()) {
+                getLog().debug(sm.getString("fileResource.getUrlFail", baseUrl), e);
+            }
+            return null;
+        }
+    }
     @Override
     protected Log getLog() {
         return log;

==================================================
