5ffa94f3e6f06736ee532427250739678a1a0285
==================================================
Add i18n for the realm package.
==================================================
Remy Maucherat
==================================================
Wed Dec 5 21:25:54 2018 +0000
==================================================
JAASMemoryLoginModule.java
Add i18n for the realm package.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1848251 13f79535-47bb-0310-9956-ffa450edef68



==================================================
JAASRealm.java
index 4429fe09f2..5a159ff298 100644
--- a/java/org/apache/catalina/realm/JAASMemoryLoginModule.java
+++ b/java/org/apache/catalina/realm/JAASMemoryLoginModule.java
@@ -285,8 +285,9 @@ public class JAASMemoryLoginModule extends MemoryRealm implements LoginModule {
     @Override
     public boolean login() throws LoginException {
         // Set up our CallbackHandler requests
-        if (callbackHandler == null)
-            throw new LoginException("No CallbackHandler specified");
+        if (callbackHandler == null) {
+            throw new LoginException(sm.getString("jaasMemoryLoginModule.noCallbackHandler"));
+        }
         Callback callbacks[] = new Callback[9];
         callbacks[0] = new NameCallback("Username: ");
         callbacks[1] = new PasswordCallback("Password: ", false);
@@ -322,7 +323,7 @@ public class JAASMemoryLoginModule extends MemoryRealm implements LoginModule {
             md5a2 = ((TextInputCallback) callbacks[7]).getText();
             authMethod = ((TextInputCallback) callbacks[8]).getText();
         } catch (IOException | UnsupportedCallbackException e) {
-            throw new LoginException(e.toString());
+            throw new LoginException(sm.getString("jaasMemoryLoginModule.callbackHandlerError", e.toString()));
         }
 
         // Validate the username and password we have received
@@ -335,7 +336,7 @@ public class JAASMemoryLoginModule extends MemoryRealm implements LoginModule {
         } else if (authMethod.equals(HttpServletRequest.CLIENT_CERT_AUTH)) {
             principal = super.getPrincipal(username);
         } else {
-            throw new LoginException("Unknown authentication method");
+            throw new LoginException(sm.getString("jaasMemoryLoginModule.unknownAuthenticationMethod"));
         }
 
         if (log.isDebugEnabled()) {
@@ -346,7 +347,7 @@ public class JAASMemoryLoginModule extends MemoryRealm implements LoginModule {
         if (principal != null) {
             return true;
         } else {
-            throw new FailedLoginException("Username or password is incorrect");
+            throw new FailedLoginException(sm.getString("jaasMemoryLoginModule.invalidCredentials"));
         }
     }
 
@@ -380,14 +381,14 @@ public class JAASMemoryLoginModule extends MemoryRealm implements LoginModule {
         if (!file.isAbsolute()) {
             String catalinaBase = getCatalinaBase();
             if (catalinaBase == null) {
-                log.warn("Unable to determine Catalina base to load file " + pathname);
+                log.warn(sm.getString("jaasMemoryLoginModule.noCatalinaBase", pathname));
                 return;
             } else {
                 file = new File(catalinaBase, pathname);
             }
         }
         if (!file.canRead()) {
-            log.warn("Cannot load configuration file " + file.getAbsolutePath());
+            log.warn(sm.getString("jaasMemoryLoginModule.noConfig", file.getAbsolutePath()));
             return;
         }
 
@@ -399,7 +400,7 @@ public class JAASMemoryLoginModule extends MemoryRealm implements LoginModule {
             digester.push(this);
             digester.parse(file);
         } catch (Exception e) {
-            log.warn("Error processing configuration file " + file.getAbsolutePath(), e);
+            log.warn(sm.getString("jaasMemoryLoginModule.parseError", file.getAbsolutePath()), e);
         } finally {
             digester.reset();
         }

==================================================
RealmBase.java
index 990a40983d..f46637d4e6 100644
--- a/java/org/apache/catalina/realm/LocalStrings.properties
+++ b/java/org/apache/catalina/realm/LocalStrings.properties
@@ -34,15 +34,26 @@ dataSourceRealm.getRoles.exception=Exception retrieving roles for [{0}]
 
 jaasCallback.username=Returned username [{0}]
 
+jaasMemoryLoginModule.callbackHandlerError=Error invoking callback handler: [{0}]
+jaasMemoryLoginModule.invalidCredentials=User name or password is incorrect
+jaasMemoryLoginModule.noCallbackHandler=No CallbackHandler specified
+jaasMemoryLoginModule.noCatalinaBase=Unable to determine Catalina base to load file [{0}]
+jaasMemoryLoginModule.noConfig=Cannot load configuration file [{0}]
+jaasMemoryLoginModule.parseError=Error processing configuration file [{0}]
+jaasMemoryLoginModule.unknownAuthenticationMethod=Unknown authentication method
+
 jaasRealm.accountExpired=Username [{0}] NOT authenticated due to expired account
+jaasRealm.appName=Set JAAS app name [{0}]
 jaasRealm.authenticateFailure=Username [{0}] NOT successfully authenticated
 jaasRealm.authenticateSuccess=Username [{0}] successfully authenticated as Principal [{1}] -- Subject was created too
 jaasRealm.beginLogin=JAASRealm login requested for username [{0}] using LoginContext for application [{1}]
 jaasRealm.checkPrincipal=Checking Principal [{0}] [{1}]
+jassRealm.classNotFound=Class [{0}] was not found
 jaasRealm.credentialExpired=Username [{0}] NOT authenticated due to expired credential
 jaasRealm.failedLogin=Username [{0}] NOT authenticated due to failed login
 jaasRealm.loginContextCreated=JAAS LoginContext created for username [{0}]
 jaasRealm.loginException=Login exception authenticating username [{0}]
+jaasRealm.notPrincipal=Class [{0}] not added as it does not implement java.security.Principal
 jaasRealm.rolePrincipalAdd=Adding role Principal [{0}] to this user Principal''s roles
 jaasRealm.rolePrincipalFailure=No valid role Principals found.
 jaasRealm.unexpectedError=Unexpected error
@@ -99,6 +110,8 @@ realmBase.gssContextNotEstablished=Authenticator implementation error: the passe
 realmBase.gssNameFail=Failed to extract name from established GSSContext
 realmBase.hasRoleFailure=Username [{0}] does NOT have role [{1}]
 realmBase.hasRoleSuccess=Username [{0}] has role [{1}]
+realmBase.invalidDigestEncoding=Invalid digest encoding [{0}]
+realmBase.unknownAllRolesMode=Unknown mode [{0}], must be one of: strict, authOnly, strictAuthOnly
 
 userDatabaseRealm.lookup=Exception looking up UserDatabase under key [{0}]
 userDatabaseRealm.noDatabase=No UserDatabase component found under key [{0}]

==================================================
