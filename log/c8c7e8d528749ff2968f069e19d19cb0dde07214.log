c8c7e8d528749ff2968f069e19d19cb0dde07214
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56334#c15
==================================================
Mark Emlyn
==================================================
Wed Jun 18 20:43:58 2014 +0000
==================================================
ELParser.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56334#c15
Handle potential whitespace around input.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1603621 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestELParser.java
index 88aabfdd31..8812f5a7d6 100644
--- a/java/org/apache/jasper/compiler/ELParser.java
+++ b/java/org/apache/jasper/compiler/ELParser.java
@@ -294,30 +294,34 @@ public class ELParser {
         int len = input.length();
         char quote = 0;
         int lastAppend = 0;
+        int start = 0;
+        int end = len;
 
-        if (len > 1) {
+        // Look to see if the value is quoted
+        String trimmed = input.trim();
+        int trimmedLen = trimmed.length();
+        if (trimmedLen > 1) {
             // Might be quoted
-            quote = input.charAt(0);
+            quote = trimmed.charAt(0);
             if (quote == '\'' || quote == '\"') {
-                if (input.charAt(len - 1) != quote) {
+                if (trimmed.charAt(trimmedLen - 1) != quote) {
                     throw new IllegalArgumentException(Localizer.getMessage(
                             "org.apache.jasper.compiler.ELParser.invalidQuotesForStringLiteral",
                             input));
                 }
-                lastAppend = 1;
-                len--;
+                start = input.indexOf(quote) + 1;
+                end = start + trimmedLen - 2;
             } else {
                 quote = 0;
             }
         }
 
         StringBuilder output = null;
-        for (int i = lastAppend; i < len; i++) {
+        for (int i = start; i < end; i++) {
             char ch = input.charAt(i);
             if (ch == '\\' || ch == quote) {
                 if (output == null) {
                     output = new StringBuilder(len + 20);
-                    output.append(quote);
                 }
                 output.append(input.substring(lastAppend, i));
                 lastAppend = i + 1;
@@ -329,9 +333,6 @@ public class ELParser {
             return input;
         } else {
             output.append(input.substring(lastAppend, len));
-            if (quote != 0) {
-                output.append(quote);
-            }
             return output.toString();
         }
     }

==================================================
TestParser.java
index 40f57e9607..f5b661dad8 100644
--- a/test/org/apache/jasper/compiler/TestELParser.java
+++ b/test/org/apache/jasper/compiler/TestELParser.java
@@ -91,6 +91,12 @@ public class TestELParser {
     }
 
 
+    @Test
+    public void testFunction05() throws JasperException {
+        doTestParser("${do:it(x, '\\\\y',z)}", null);
+    }
+
+
     @Test
     public void testCompound01() throws JasperException {
         doTestParser("1${'foo'}1", "1foo1");

==================================================
