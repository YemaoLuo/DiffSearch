f622e3a3b819f03d0ddec214466b031c5ab29933
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=26701
==================================================
Mark Emlyn
==================================================
Sun Mar 6 22:12:10 2011 +0000
==================================================
WebappLoader.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=26701
Provide a mechanism for users to register their own URLStreamHandlerFactory objects.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1078601 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Constants.java
index 446c1dc69d..9bd5a7f22a 100644
--- a/java/org/apache/catalina/loader/WebappLoader.java
+++ b/java/org/apache/catalina/loader/WebappLoader.java
@@ -559,7 +559,7 @@ public class WebappLoader extends LifecycleMBeanBase
         
         // Register a stream handler factory for the JNDI protocol
         URLStreamHandlerFactory streamHandlerFactory =
-            new DirContextURLStreamHandlerFactory();
+                DirContextURLStreamHandlerFactory.getInstance();
         if (first) {
             first = false;
             try {

==================================================
DirContextURLStreamHandlerFactory.java
index dd004e4153..48d21a3764 100644
--- a/java/org/apache/naming/resources/Constants.java
+++ b/java/org/apache/naming/resources/Constants.java
@@ -24,13 +24,5 @@ package org.apache.naming.resources;
  */
 
 public final class Constants {
-
-    public static final String PROTOCOL_HANDLER_VARIABLE = 
-        "java.protocol.handler.pkgs";
-
     public static final String Package = "org.apache.naming.resources";
-
-    // Default namespace name
-    public static final String DEFAULT_NAMESPACE = "DAV:";
-
 }

==================================================
TestDirContextURLStreamHandlerFactory.java
index 54f9da88cc..8886a8e005 100644
--- a/java/org/apache/naming/resources/DirContextURLStreamHandlerFactory.java
+++ b/java/org/apache/naming/resources/DirContextURLStreamHandlerFactory.java
@@ -19,32 +19,38 @@ package org.apache.naming.resources;
 
 import java.net.URLStreamHandler;
 import java.net.URLStreamHandlerFactory;
+import java.util.List;
+import java.util.concurrent.CopyOnWriteArrayList;
 
 /**
- * Factory for Stream handlers to a JNDI directory context.
+ * Factory for Stream handlers to a JNDI directory context that also supports
+ * users specifying additional stream handler.
  * 
  * @author <a href="mailto:remm@apache.org">Remy Maucherat</a>
  * @version $Revision$
  */
-public class DirContextURLStreamHandlerFactory 
-    implements URLStreamHandlerFactory {
+public class DirContextURLStreamHandlerFactory
+        implements URLStreamHandlerFactory {
     
-    
-    // ----------------------------------------------------------- Constructors
-    
-    
-    public DirContextURLStreamHandlerFactory() {
-        // NOOP
+    // Singleton
+    private static DirContextURLStreamHandlerFactory instance =
+        new DirContextURLStreamHandlerFactory();
+
+    public static DirContextURLStreamHandlerFactory getInstance() {
+        return instance;
+    }
+
+    public static void addUserFactory(URLStreamHandlerFactory factory) {
+        instance.userFactories.add(factory);
+    }
+
+
+    private List<URLStreamHandlerFactory> userFactories =
+        new CopyOnWriteArrayList<URLStreamHandlerFactory>();
+
+    private DirContextURLStreamHandlerFactory() {
+        // Hide the default constructor
     }
-    
-    
-    // ----------------------------------------------------- Instance Variables
-    
-    
-    // ------------------------------------------------------------- Properties
-    
-    
-    // ---------------------------------------- URLStreamHandlerFactory Methods
     
     
     /**
@@ -60,6 +66,13 @@ public class DirContextURLStreamHandlerFactory
         if (protocol.equals("jndi")) {
             return new DirContextURLStreamHandler();
         } else {
+            for (URLStreamHandlerFactory factory : userFactories) {
+                URLStreamHandler handler =
+                    factory.createURLStreamHandler(protocol);
+                if (handler != null) {
+                    return handler;
+                }
+            }
             return null;
         }
     }

==================================================
