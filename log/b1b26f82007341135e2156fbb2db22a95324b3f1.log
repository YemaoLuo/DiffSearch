b1b26f82007341135e2156fbb2db22a95324b3f1
==================================================
Fill in some Javadoc. Address a TODO
==================================================
Mark Emlyn
==================================================
Mon Nov 26 15:13:46 2012 +0000
==================================================
ContainerProvider.java
Fill in some Javadoc. Address a TODO

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1413675 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ServerContainer.java
index 074d24a408..b689edceee 100644
--- a/java/javax/websocket/ContainerProvider.java
+++ b/java/javax/websocket/ContainerProvider.java
@@ -19,13 +19,23 @@ package javax.websocket;
 import java.lang.reflect.InvocationTargetException;
 import java.lang.reflect.Method;
 
+/**
+ * Provides access to the implementation. This version of the API is hard-coded
+ * to use the Apache Tomcat WebSocket implementation.
+ */
 public class ContainerProvider {
 
     private static final String CONTAINER_PROVIDER_IMPL =
             "org.apache.tomcat.websocket.ServerContainerImpl";
 
+    /**
+     * Obtain a reference to the Server container used for processing incoming
+     * WebSocket connections.
+     */
     public static ServerContainer getServerContainer() {
-        // TODO SecurityManager
+        // Note: No special handling required when running under a
+        //       SecurityManager as the caller and this class will have the same
+        //       ClassLoader
         ServerContainer result = null;
         try {
             Class<?> clazz = Class.forName(CONTAINER_PROVIDER_IMPL);
@@ -40,6 +50,10 @@ public class ContainerProvider {
         return result;
     }
 
+    /**
+     * Obtain a reference to the ClientContainer used to create outgoing
+     * WebSocket connections.
+     */
     public static ClientContainer getClientContainer() {
         return null;
     }

==================================================
