0658248868f50c5eb0dde9a8fc64784c2c77853b
==================================================
Use a filter rather than a valve to add a default character set.
==================================================
Mark Emlyn
==================================================
Mon Mar 23 21:39:48 2009 +0000
==================================================
AddDefaultCharsetFilter.java
Use a filter rather than a valve to add a default character set.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@757557 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AddDefaultCharsetValve.java
new file mode 100644
index 0000000000..f1ae36d635
--- /dev/null
+++ b/java/org/apache/catalina/filters/AddDefaultCharsetFilter.java
@@ -0,0 +1,94 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ * 
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.catalina.filters;
+
+
+import java.io.IOException;
+
+import javax.servlet.Filter;
+import javax.servlet.FilterChain;
+import javax.servlet.FilterConfig;
+import javax.servlet.ServletException;
+import javax.servlet.ServletRequest;
+import javax.servlet.ServletResponse;
+import javax.servlet.http.HttpServletResponse;
+import javax.servlet.http.HttpServletResponseWrapper;
+
+
+/**
+ * Filter that explicitly sets the default character set for media subtypes of
+ * the "text" type to ISO-8859-1. RFC2616 explicitly states that browsers must
+ * use ISO-8859-1 in these circumstances. However, browsers may attempt to
+ * auto-detect the character set. This may be exploited by an attacker to
+ * perform an XSS attack. Internet Explorer has this behaviour by default. Other
+ * browsers have an option to enable it.
+ * 
+ * This filter prevents the attack by explicitly setting a character set. Unless
+ * the provided character set is explicitly overridden by the user - in which
+ * case they deserve everything they get - the browser will adhere to an
+ * explicitly set character set, thus preventing the XSS attack.
+ */
+public class AddDefaultCharsetFilter implements Filter {
+
+    public void destroy() {
+        // NOOP
+    }
+
+    public void doFilter(ServletRequest request, ServletResponse response,
+            FilterChain chain) throws IOException, ServletException {
+        
+        // Wrap the response
+        if (response instanceof HttpServletResponse) {
+            ResponseWrapper wrapped =
+                new ResponseWrapper((HttpServletResponse)response);
+            chain.doFilter(request, wrapped);
+        } else {
+            chain.doFilter(request, response);
+        }
+    }
+
+    public void init(FilterConfig filterConfig) throws ServletException {
+        // NOOP
+    }
+
+    /**
+     * Wrapper that adds the default character set for text media types if no
+     * character set is specified.
+     */
+    public class ResponseWrapper extends HttpServletResponseWrapper {
+
+        @Override
+        public void setContentType(String ct) {
+            
+            if (ct != null && ct.startsWith("text/") &&
+                    ct.indexOf("charset=") < 0) {
+                // Use getCharacterEncoding() in case the charset has already
+                // been set by a separate call.
+                super.setContentType(ct + ";charset=" + getCharacterEncoding());
+            } else {
+                super.setContentType(ct);
+            }
+
+        }
+
+        public ResponseWrapper(HttpServletResponse response) {
+            super(response);
+        }
+        
+    }
+}

==================================================
