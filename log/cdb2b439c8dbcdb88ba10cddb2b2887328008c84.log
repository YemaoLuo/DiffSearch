cdb2b439c8dbcdb88ba10cddb2b2887328008c84
==================================================
ELResolver.getFeatureDescriptors() has been deprecated
==================================================
Mark Thomas
==================================================
Mon Sep 6 19:56:57 2021 +0100
==================================================
ArrayELResolver.java
ELResolver.getFeatureDescriptors() has been deprecated

The long term plan is to remove this in Jakarta EE 11 to remove the
dependency on the java.desktop module


==================================================
BeanELResolver.java
index ce3d95b08e..24e32d61f5 100644
--- a/java/jakarta/el/ArrayELResolver.java
+++ b/java/jakarta/el/ArrayELResolver.java
@@ -109,6 +109,7 @@ public class ArrayELResolver extends ELResolver {
         return this.readOnly;
     }
 
+    @Deprecated(forRemoval = true, since = "EL 5.0")
     @Override
     public Iterator<FeatureDescriptor> getFeatureDescriptors(ELContext context, Object base) {
         return null;

==================================================
BeanNameELResolver.java
index 61156a7601..07c7f24a9d 100644
--- a/java/jakarta/el/BeanELResolver.java
+++ b/java/jakarta/el/BeanELResolver.java
@@ -170,6 +170,7 @@ public class BeanELResolver extends ELResolver {
         return this.readOnly || this.property(context, base, property).isReadOnly(base);
     }
 
+    @Deprecated(forRemoval = true, since = "EL 5.0")
     @Override
     public Iterator<FeatureDescriptor> getFeatureDescriptors(ELContext context, Object base) {
         if (base == null) {

==================================================
CompositeELResolver.java
index 4dac0422a4..814c6f5c01 100644
--- a/java/jakarta/el/BeanNameELResolver.java
+++ b/java/jakarta/el/BeanNameELResolver.java
@@ -142,6 +142,7 @@ public class BeanNameELResolver extends ELResolver {
         return false;
     }
 
+    @Deprecated(forRemoval = true, since = "EL 5.0")
     @Override
     public Iterator<FeatureDescriptor> getFeatureDescriptors(ELContext context,
             Object base) {

==================================================
ELResolver.java
index 2ff04fae82..40821f5400 100644
--- a/java/jakarta/el/CompositeELResolver.java
+++ b/java/jakarta/el/CompositeELResolver.java
@@ -132,6 +132,7 @@ public class CompositeELResolver extends ELResolver {
         return false;
     }
 
+    @Deprecated(forRemoval = true, since = "EL 5.0")
     @Override
     public Iterator<FeatureDescriptor> getFeatureDescriptors(ELContext context, Object base) {
         return new FeatureIterator(context, base, this.resolvers, this.size);
@@ -163,6 +164,7 @@ public class CompositeELResolver extends ELResolver {
         return null;
     }
 
+    @Deprecated(forRemoval = true, since = "EL 5.0")
     private static final class FeatureIterator implements Iterator<FeatureDescriptor> {
 
         private final ELContext context;

==================================================
ListELResolver.java
index a031c4aa88..e3e387df50 100644
--- a/java/jakarta/el/ELResolver.java
+++ b/java/jakarta/el/ELResolver.java
@@ -127,7 +127,11 @@ public abstract class ELResolver {
      *
      * @return An iterator, possibly empty, of feature descriptors of the given
      *         object
+     *
+     * @deprecated This method will be removed, without replacement, in EL 6.0 /
+     *             Tomcat 11.
      */
+    @Deprecated(forRemoval = true, since = "EL 5.0")
     public abstract Iterator<java.beans.FeatureDescriptor> getFeatureDescriptors(ELContext context, Object base);
 
     /**

==================================================
MapELResolver.java
index 0184bdf94e..b79659b665 100644
--- a/java/jakarta/el/ListELResolver.java
+++ b/java/jakarta/el/ListELResolver.java
@@ -121,6 +121,7 @@ public class ListELResolver extends ELResolver {
         return this.readOnly;
     }
 
+    @Deprecated(forRemoval = true, since = "EL 5.0")
     @Override
     public Iterator<FeatureDescriptor> getFeatureDescriptors(ELContext context, Object base) {
         return null;

==================================================
ResourceBundleELResolver.java
index 9c214b937f..6ce34227f4 100644
--- a/java/jakarta/el/MapELResolver.java
+++ b/java/jakarta/el/MapELResolver.java
@@ -99,6 +99,7 @@ public class MapELResolver extends ELResolver {
         return this.readOnly;
     }
 
+    @Deprecated(forRemoval = true, since = "EL 5.0")
     @Override
     public Iterator<FeatureDescriptor> getFeatureDescriptors(ELContext context, Object base) {
         if (base instanceof Map<?, ?>) {

==================================================
StaticFieldELResolver.java
index 814df3512e..9f2563a1b4 100644
--- a/java/jakarta/el/ResourceBundleELResolver.java
+++ b/java/jakarta/el/ResourceBundleELResolver.java
@@ -86,6 +86,7 @@ public class ResourceBundleELResolver extends ELResolver {
         return false;
     }
 
+    @Deprecated(forRemoval = true, since = "EL 5.0")
     @Override
     public Iterator<FeatureDescriptor> getFeatureDescriptors(
             ELContext context, Object base) {

==================================================
TypeConverter.java
index e5e950b65a..9083a5e44a 100644
--- a/java/jakarta/el/StaticFieldELResolver.java
+++ b/java/jakarta/el/StaticFieldELResolver.java
@@ -187,7 +187,11 @@ public class StaticFieldELResolver extends ELResolver {
 
     /**
      * Always returns <code>null</code>.
+     *
+     * @deprecated This method will be removed, without replacement, in EL 6.0 /
+     *             Tomcat 11.
      */
+    @Deprecated(forRemoval = true, since = "EL 5.0")
     @Override
     public Iterator<FeatureDescriptor> getFeatureDescriptors(ELContext context,
             Object base) {

==================================================
ImplicitObjectELResolver.java
index abbae0e34c..7481396bed 100644
--- a/java/jakarta/el/TypeConverter.java
+++ b/java/jakarta/el/TypeConverter.java
@@ -45,6 +45,7 @@ public abstract class TypeConverter extends ELResolver {
         return false;
     }
 
+    @Deprecated(forRemoval = true, since = "EL 5.0")
     @Override
     public Iterator<FeatureDescriptor> getFeatureDescriptors(ELContext context,
             Object base) {

==================================================
ScopedAttributeELResolver.java
index 3ed47eb459..29a29c7c9f 100644
--- a/java/jakarta/servlet/jsp/el/ImplicitObjectELResolver.java
+++ b/java/jakarta/servlet/jsp/el/ImplicitObjectELResolver.java
@@ -160,6 +160,7 @@ public class ImplicitObjectELResolver extends ELResolver {
         return false;
     }
 
+    @Deprecated(forRemoval = true, since = "JSP 3.1")
     @Override
     public Iterator<FeatureDescriptor> getFeatureDescriptors(ELContext context, Object base) {
         List<FeatureDescriptor> feats = new ArrayList<>(SCOPE_NAMES.length);

==================================================
StreamELResolverImpl.java
index 10fdd0a59a..25c14c233f 100644
--- a/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java
+++ b/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java
@@ -151,6 +151,7 @@ public class ScopedAttributeELResolver extends ELResolver {
         return false;
     }
 
+    @Deprecated(forRemoval = true, since = "JSP 3.1")
     @Override
     public Iterator<FeatureDescriptor> getFeatureDescriptors(ELContext context, Object base) {
 

==================================================
TestArrayELResolver.java
index 29c97e2639..78b874b5b3 100644
--- a/java/org/apache/el/stream/StreamELResolverImpl.java
+++ b/java/org/apache/el/stream/StreamELResolverImpl.java
@@ -48,6 +48,7 @@ public class StreamELResolverImpl extends ELResolver {
         return false;
     }
 
+    @Deprecated(forRemoval = true, since = "Tomcat 10.1.0")
     @Override
     public Iterator<FeatureDescriptor> getFeatureDescriptors(ELContext context,
             Object base) {

==================================================
TestBeanELResolver.java
index c7dd96c84d..00dda1c2d4 100644
--- a/test/jakarta/el/TestArrayELResolver.java
+++ b/test/jakarta/el/TestArrayELResolver.java
@@ -519,6 +519,7 @@ public class TestArrayELResolver {
     }
 
 
+    @Deprecated(forRemoval = true, since = "Tomcat 10.1.0")
     @Test
     public void testGetFeatureDescriptors() {
         // Should always return null

==================================================
TestBeanNameELResolver.java
index 29078aeefc..88fd6ff24f 100644
--- a/test/jakarta/el/TestBeanELResolver.java
+++ b/test/jakarta/el/TestBeanELResolver.java
@@ -368,6 +368,7 @@ public class TestBeanELResolver {
      * Tests that a valid FeatureDescriptors are not returned if base is not
      * Map.
      */
+    @Deprecated(forRemoval = true, since = "Tomcat 10.1.0")
     @Test
     public void testGetFeatureDescriptors01() {
         BeanELResolver resolver = new BeanELResolver();
@@ -381,6 +382,7 @@ public class TestBeanELResolver {
     /**
      * Tests that a valid FeatureDescriptors are returned.
      */
+    @Deprecated(forRemoval = true, since = "Tomcat 10.1.0")
     @Test
     public void testGetFeatureDescriptors02() {
         BeanELResolver resolver = new BeanELResolver();

==================================================
TestMapELResolver.java
index f80455ea99..ca9ca22051 100644
--- a/test/jakarta/el/TestBeanNameELResolver.java
+++ b/test/jakarta/el/TestBeanNameELResolver.java
@@ -471,6 +471,7 @@ public class TestBeanNameELResolver {
     /**
      * Confirm it returns null for 'valid' input.
      */
+    @Deprecated(forRemoval = true, since = "Tomcat 10.1.0")
     public void testGetFeatureDescriptors01() {
         BeanNameELResolver resolver = createBeanNameELResolver();
         ELContext context =
@@ -486,6 +487,7 @@ public class TestBeanNameELResolver {
     /**
      * Confirm it returns null for invalid input.
      */
+    @Deprecated(forRemoval = true, since = "Tomcat 10.1.0")
     public void testGetFeatureDescriptors02() {
         BeanNameELResolver resolver = createBeanNameELResolver();
 

==================================================
TestResourceBundleELResolver.java
index 0889a042f4..e2d0c9e447 100644
--- a/test/jakarta/el/TestMapELResolver.java
+++ b/test/jakarta/el/TestMapELResolver.java
@@ -239,6 +239,7 @@ public class TestMapELResolver {
      * Tests that a valid FeatureDescriptors are not returned if base is not
      * Map.
      */
+    @Deprecated(forRemoval = true, since = "Tomcat 10.1.0")
     @Test
     public void testGetFeatureDescriptors01() {
         MapELResolver mapELResolver = new MapELResolver();
@@ -254,6 +255,7 @@ public class TestMapELResolver {
     /**
      * Tests that a valid FeatureDescriptors are returned.
      */
+    @Deprecated(forRemoval = true, since = "Tomcat 10.1.0")
     @Test
     public void testGetFeatureDescriptors02() {
         MapELResolver mapELResolver = new MapELResolver();

==================================================
