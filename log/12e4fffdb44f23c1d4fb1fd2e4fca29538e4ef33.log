12e4fffdb44f23c1d4fb1fd2e4fca29538e4ef33
==================================================
Access the Manifest directly from the archive resource set.
==================================================
Mark Thomas
==================================================
Tue Jan 27 19:37:03 2015 +0000
==================================================
AbstractArchiveResource.java
Access the Manifest directly from the archive resource set.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1655126 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AbstractArchiveResourceSet.java
index 5cc06ecec1..9c24f8d4f4 100644
--- a/java/org/apache/catalina/webresources/AbstractArchiveResource.java
+++ b/java/org/apache/catalina/webresources/AbstractArchiveResource.java
@@ -27,10 +27,10 @@ import java.util.jar.Manifest;
 
 public abstract class AbstractArchiveResource extends AbstractResource {
 
+    private final AbstractArchiveResourceSet archiveResourceSet;
     private final String base;
     private final String baseUrl;
     private final JarEntry resource;
-    private final Manifest manifest;
     private final String codeBaseUrl;
     private final String name;
     private boolean readCerts = false;
@@ -38,12 +38,12 @@ public abstract class AbstractArchiveResource extends AbstractResource {
 
     protected AbstractArchiveResource(AbstractArchiveResourceSet archiveResourceSet,
             String webAppPath, String base, String baseUrl, JarEntry jarEntry,
-            Manifest manifest, String codeBaseUrl) {
+            String codeBaseUrl) {
         super(archiveResourceSet.getRoot(), webAppPath);
+        this.archiveResourceSet = archiveResourceSet;
         this.base = base;
         this.baseUrl = baseUrl;
         this.resource = jarEntry;
-        this.manifest = manifest;
         this.codeBaseUrl = codeBaseUrl;
 
         String resourceName = resource.getName();
@@ -204,7 +204,7 @@ public abstract class AbstractArchiveResource extends AbstractResource {
 
     @Override
     public Manifest getManifest() {
-        return manifest;
+        return archiveResourceSet.getManifest();
     }
 
     @Override

==================================================
JarResource.java
index e67a10a7ea..8a5bca1180 100644
--- a/java/org/apache/catalina/webresources/AbstractArchiveResourceSet.java
+++ b/java/org/apache/catalina/webresources/AbstractArchiveResourceSet.java
@@ -42,6 +42,10 @@ public abstract class AbstractArchiveResourceSet extends AbstractResourceSet {
         this.manifest = manifest;
     }
 
+    protected final Manifest getManifest() {
+        return manifest;
+    }
+
     protected final void setBaseUrl(URL baseUrl) {
         this.baseUrl = baseUrl;
         if (baseUrl == null) {

==================================================
JarResourceSet.java
index aa6cea72ac..dcd095c382 100644
--- a/java/org/apache/catalina/webresources/JarResource.java
+++ b/java/org/apache/catalina/webresources/JarResource.java
@@ -20,7 +20,6 @@ import java.io.IOException;
 import java.io.InputStream;
 import java.util.jar.JarEntry;
 import java.util.jar.JarFile;
-import java.util.jar.Manifest;
 
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
@@ -34,9 +33,9 @@ public class JarResource extends AbstractArchiveResource {
     private static final Log log = LogFactory.getLog(JarResource.class);
 
     public JarResource(AbstractArchiveResourceSet archiveResourceSet, String webAppPath,
-            String base, String baseUrl, JarEntry jarEntry, Manifest manifest) {
+            String base, String baseUrl, JarEntry jarEntry) {
         super(archiveResourceSet, webAppPath, base, "jar:" + baseUrl, jarEntry,
-                manifest, baseUrl);
+                baseUrl);
     }
 
     @Override

==================================================
JarWarResource.java
index e89314d28a..183bf94517 100644
--- a/java/org/apache/catalina/webresources/JarResourceSet.java
+++ b/java/org/apache/catalina/webresources/JarResourceSet.java
@@ -78,8 +78,7 @@ public class JarResourceSet extends AbstractArchiveResourceSet {
     @Override
     protected WebResource createArchiveResource(JarEntry jarEntry,
             String webAppPath, Manifest manifest) {
-        return new JarResource(this, webAppPath, getBase(), getBaseUrlString(),
-                jarEntry, manifest);
+        return new JarResource(this, webAppPath, getBase(), getBaseUrlString(), jarEntry);
     }
 
     //-------------------------------------------------------- Lifecycle methods

==================================================
JarWarResourceSet.java
index 14bd39324e..1bc51266a7 100644
--- a/java/org/apache/catalina/webresources/JarWarResource.java
+++ b/java/org/apache/catalina/webresources/JarWarResource.java
@@ -21,7 +21,6 @@ import java.io.InputStream;
 import java.util.jar.JarEntry;
 import java.util.jar.JarFile;
 import java.util.jar.JarInputStream;
-import java.util.jar.Manifest;
 
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
@@ -37,9 +36,9 @@ public class JarWarResource extends AbstractArchiveResource {
     private final String archivePath;
 
     public JarWarResource(AbstractArchiveResourceSet archiveResourceSet, String webAppPath,
-            String base, String baseUrl, JarEntry jarEntry, String archivePath, Manifest manifest) {
+            String base, String baseUrl, JarEntry jarEntry, String archivePath) {
         super(archiveResourceSet, webAppPath, base, "jar:war:" + baseUrl + "^/" + archivePath,
-                jarEntry, manifest, "jar:" + baseUrl + "!/" + archivePath);
+                jarEntry, "jar:" + baseUrl + "!/" + archivePath);
         this.archivePath = archivePath;
     }
 

==================================================
