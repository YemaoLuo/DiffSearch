321173bce4a5785875d942d8dd07eeb2ae22de12
==================================================
Deprecate duplicated constants
==================================================
Mark Emlyn
==================================================
Sun Aug 12 17:41:53 2012 +0000
==================================================
ApplicationDispatcher.java
Deprecate duplicated constants

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1372156 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ApplicationFilterFactory.java
index f5f2882b74..8f3f1e36f1 100644
--- a/java/org/apache/catalina/core/ApplicationDispatcher.java
+++ b/java/org/apache/catalina/core/ApplicationDispatcher.java
@@ -437,7 +437,7 @@ final class ApplicationDispatcher
                                 State state)
         throws IOException, ServletException {
 
-        DispatcherType disInt = (DispatcherType) request.getAttribute(ApplicationFilterFactory.DISPATCHER_TYPE_ATTR);
+        DispatcherType disInt = (DispatcherType) request.getAttribute(Globals.DISPATCHER_TYPE_ATTR);
         if (disInt != null) {
             boolean doInvoke = true;
 
@@ -448,12 +448,12 @@ final class ApplicationDispatcher
 
             if (doInvoke) {
                 if (disInt != DispatcherType.ERROR) {
-                    state.outerRequest.setAttribute
-                        (ApplicationFilterFactory.DISPATCHER_REQUEST_PATH_ATTR,
-                         getCombinedPath());
-                    state.outerRequest.setAttribute
-                        (ApplicationFilterFactory.DISPATCHER_TYPE_ATTR,
-                         DispatcherType.FORWARD);
+                    state.outerRequest.setAttribute(
+                            Globals.DISPATCHER_REQUEST_PATH_ATTR,
+                            getCombinedPath());
+                    state.outerRequest.setAttribute(
+                            Globals.DISPATCHER_TYPE_ATTR,
+                            DispatcherType.FORWARD);
                     invoke(state.outerRequest, response, state);
                 } else {
                     invoke(state.outerRequest, response, state);
@@ -539,10 +539,8 @@ final class ApplicationDispatcher
             wrequest.setAttribute(Globals.NAMED_DISPATCHER_ATTR, name);
             if (servletPath != null)
                 wrequest.setServletPath(servletPath);
-            wrequest.setAttribute(ApplicationFilterFactory.DISPATCHER_TYPE_ATTR,
-                    type);
-            wrequest.setAttribute(
-                    ApplicationFilterFactory.DISPATCHER_REQUEST_PATH_ATTR,
+            wrequest.setAttribute(Globals.DISPATCHER_TYPE_ATTR, type);
+            wrequest.setAttribute(Globals.DISPATCHER_REQUEST_PATH_ATTR,
                     getCombinedPath());
             invoke(state.outerRequest, state.outerResponse, state);
         }
@@ -571,10 +569,8 @@ final class ApplicationDispatcher
                 wrequest.setQueryParams(queryString);
             }
 
-            wrequest.setAttribute(ApplicationFilterFactory.DISPATCHER_TYPE_ATTR,
-                    type);
-            wrequest.setAttribute(
-                    ApplicationFilterFactory.DISPATCHER_REQUEST_PATH_ATTR,
+            wrequest.setAttribute(Globals.DISPATCHER_TYPE_ATTR, type);
+            wrequest.setAttribute(Globals.DISPATCHER_REQUEST_PATH_ATTR,
                     getCombinedPath());
             invoke(state.outerRequest, state.outerResponse, state);
         }

==================================================
StandardHostValve.java
index 41fea3b66d..110bf2f22e 100644
--- a/java/org/apache/catalina/core/ApplicationFilterFactory.java
+++ b/java/org/apache/catalina/core/ApplicationFilterFactory.java
@@ -45,10 +45,18 @@ public final class ApplicationFilterFactory {
     // -------------------------------------------------------------- Constants
 
 
+    /**
+     * @deprecated  Use {@link Globals#DISPATCHER_TYPE_ATTR}
+     */
+    @Deprecated
     public static final String DISPATCHER_TYPE_ATTR =
-        Globals.DISPATCHER_TYPE_ATTR;
+            Globals.DISPATCHER_TYPE_ATTR;
+    /**
+     * @deprecated  Use {@link Globals#DISPATCHER_REQUEST_PATH_ATTR}
+     */
+    @Deprecated
     public static final String DISPATCHER_REQUEST_PATH_ATTR =
-        Globals.DISPATCHER_REQUEST_PATH_ATTR;
+            Globals.DISPATCHER_REQUEST_PATH_ATTR;
 
     private static ApplicationFilterFactory factory = null;
 
@@ -87,11 +95,13 @@ public final class ApplicationFilterFactory {
 
         // get the dispatcher type
         DispatcherType dispatcher = null;
-        if (request.getAttribute(DISPATCHER_TYPE_ATTR) != null) {
-            dispatcher = (DispatcherType) request.getAttribute(DISPATCHER_TYPE_ATTR);
+        if (request.getAttribute(Globals.DISPATCHER_TYPE_ATTR) != null) {
+            dispatcher = (DispatcherType) request.getAttribute(
+                    Globals.DISPATCHER_TYPE_ATTR);
         }
         String requestPath = null;
-        Object attribute = request.getAttribute(DISPATCHER_REQUEST_PATH_ATTR);
+        Object attribute = request.getAttribute(
+                Globals.DISPATCHER_REQUEST_PATH_ATTR);
 
         if (attribute != null){
             requestPath = attribute.toString();

==================================================
StandardWrapperValve.java
index 164ef1cf72..7d7106b7e9 100644
--- a/java/org/apache/catalina/core/StandardHostValve.java
+++ b/java/org/apache/catalina/core/StandardHostValve.java
@@ -293,11 +293,10 @@ final class StandardHostValve extends ValveBase {
                 message = "";
             }
             request.setAttribute(RequestDispatcher.ERROR_MESSAGE, message);
-            request.setAttribute
-                (ApplicationFilterFactory.DISPATCHER_REQUEST_PATH_ATTR,
-                 errorPage.getLocation());
-            request.setAttribute(ApplicationFilterFactory.DISPATCHER_TYPE_ATTR,
-                              DispatcherType.ERROR);
+            request.setAttribute(Globals.DISPATCHER_REQUEST_PATH_ATTR,
+                    errorPage.getLocation());
+            request.setAttribute(Globals.DISPATCHER_TYPE_ATTR,
+                    DispatcherType.ERROR);
 
 
             Wrapper wrapper = request.getWrapper();
@@ -364,11 +363,10 @@ final class StandardHostValve extends ValveBase {
 
         if (errorPage != null) {
             response.setAppCommitted(false);
-            request.setAttribute
-                (ApplicationFilterFactory.DISPATCHER_REQUEST_PATH_ATTR,
-                 errorPage.getLocation());
-            request.setAttribute(ApplicationFilterFactory.DISPATCHER_TYPE_ATTR,
-                              DispatcherType.ERROR);
+            request.setAttribute(Globals.DISPATCHER_REQUEST_PATH_ATTR,
+                    errorPage.getLocation());
+            request.setAttribute(Globals.DISPATCHER_TYPE_ATTR,
+                    DispatcherType.ERROR);
             request.setAttribute(RequestDispatcher.ERROR_STATUS_CODE,
                     new Integer(HttpServletResponse.SC_INTERNAL_SERVER_ERROR));
             request.setAttribute(RequestDispatcher.ERROR_MESSAGE,

==================================================
