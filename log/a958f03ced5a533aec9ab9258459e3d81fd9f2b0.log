a958f03ced5a533aec9ab9258459e3d81fd9f2b0
==================================================
Added Javadoc comments for Java 15
==================================================
Igal Sapir
==================================================
0700
==================================================
Priority.java
Added Javadoc comments for Java 15



==================================================
Resource.java
index f5b59c1d4a..74dce8bb70 100644
--- a/java/jakarta/annotation/Priority.java
+++ b/java/jakarta/annotation/Priority.java
@@ -29,5 +29,9 @@ import java.lang.annotation.Target;
 @Target(ElementType.TYPE)
 @Retention(RetentionPolicy.RUNTIME)
 public @interface Priority {
+
+    /**
+     * @return the int value
+     */
     int value();
 }

==================================================
Resources.java
index 70b4d76b91..20cecab8a8 100644
--- a/java/jakarta/annotation/Resource.java
+++ b/java/jakarta/annotation/Resource.java
@@ -27,21 +27,53 @@ import java.lang.annotation.Target;
 @Target({ElementType.TYPE, ElementType.METHOD, ElementType.FIELD})
 @Retention(RetentionPolicy.RUNTIME)
 public @interface Resource {
+
+    /**
+     * The AuthenticationType, either CONTAINER or APPLICATION
+     */
     public enum AuthenticationType {
+        /**
+         * Container authentication
+         */
         CONTAINER,
+        /**
+         * Application authentication
+         */
         APPLICATION
     }
+
+    /**
+     * @return a String with the name of the resource
+     */
     public String name() default "";
+    
     /**
      * Uses generics since Common Annotations 1.2.
      *
      * @return The type for instances of this resource
      */
     public Class<?> type() default Object.class;
+
+    /**
+     * @return the AuthenticationType of the resource default CONTAINER
+     */
     public AuthenticationType authenticationType() default AuthenticationType.CONTAINER;
+
+    /**
+     * @return true (default) if the resource is shareable, or false if not
+     */
     public boolean shareable() default true;
+
+    /**
+     * @return a string with the description for the resource
+     */
     public String description() default "";
+
+    /**
+     * @return a string with the mappedName of the resource
+     */
     public String mappedName() default "";
+
     /**
      * @since Common Annotations 1.1
      *

==================================================
DeclareRoles.java
index 12317ed4c4..d595399e5c 100644
--- a/java/jakarta/annotation/Resources.java
+++ b/java/jakarta/annotation/Resources.java
@@ -29,5 +29,9 @@ import java.lang.annotation.Target;
 @Target(ElementType.TYPE)
 @Retention(RetentionPolicy.RUNTIME)
 public @interface Resources {
+
+    /**
+     * @return a Resource[] with the value of this Resources
+     */
     public Resource[] value();
 }

==================================================
RolesAllowed.java
index e0f93df5ec..0f2eb21e90 100644
--- a/java/jakarta/annotation/security/DeclareRoles.java
+++ b/java/jakarta/annotation/security/DeclareRoles.java
@@ -29,5 +29,9 @@ import java.lang.annotation.Target;
 @Target(ElementType.TYPE)
 @Retention(RetentionPolicy.RUNTIME)
 public @interface DeclareRoles {
+
+    /**
+     * @return a String[] with the roles
+     */
     public String[] value();
 }

==================================================
RunAs.java
index 5c4d14f031..9bb62b578b 100644
--- a/java/jakarta/annotation/security/RolesAllowed.java
+++ b/java/jakarta/annotation/security/RolesAllowed.java
@@ -29,5 +29,9 @@ import java.lang.annotation.Target;
 @Target({ElementType.TYPE, ElementType.METHOD})
 @Retention(RetentionPolicy.RUNTIME)
 public @interface RolesAllowed {
+
+    /**
+     * @return a String[] of the allowed roles
+     */
     public String[] value();
 }

==================================================
DataSourceDefinition.java
index f980219d94..33fe2762e4 100644
--- a/java/jakarta/annotation/security/RunAs.java
+++ b/java/jakarta/annotation/security/RunAs.java
@@ -29,5 +29,9 @@ import java.lang.annotation.Target;
 @Target(ElementType.TYPE)
 @Retention(RetentionPolicy.RUNTIME)
 public @interface RunAs {
+
+    /**
+     * @return a String with the value for RunAs
+     */
     public String value();
 }

==================================================
DataSourceDefinitions.java
index dd003a76da..e4de009e8e 100644
--- a/java/jakarta/annotation/sql/DataSourceDefinition.java
+++ b/java/jakarta/annotation/sql/DataSourceDefinition.java
@@ -27,22 +27,95 @@ import java.lang.annotation.Target;
 @Target(ElementType.TYPE)
 @Retention(RetentionPolicy.RUNTIME)
 public @interface DataSourceDefinition {
+    
+    /**
+     * @return the className
+     */
     String className();
+    
+    /**
+     * @return the name
+     */
     String name();
+    
+    /**
+     * @return the description
+     */
     String description() default "";
+    
+    /**
+     * @return the url
+     */
     String url() default "";
+    
+    /**
+     * @return the user
+     */
     String user() default "";
+    
+    /**
+     * @return the password
+     */
     String password() default "";
+    
+    /**
+     * @return database name
+     */
     String databaseName() default "";
+    
+    /**
+     * @return the port number
+     */
     int portNumber() default -1;
+    
+    /**
+     * @return the server name
+     */
     String serverName() default "localhost";
+    
+    /**
+     * @return the isolation level
+     */
     int isolationLevel() default -1;
+    
+    /**
+     * @return true if the data source is transactional
+     */
     boolean transactional() default true;
+    
+    /**
+     * @return the initial pool size
+     */
     int initialPoolSize() default -1;
+    
+    /**
+     * @return the max pool size
+     */
     int maxPoolSize() default -1;
+    
+    /**
+     * @return the min pool size
+     */
     int minPoolSize() default -1;
+    
+    /**
+     * @return the max idle time
+     */
     int maxIdleTime() default -1;
+    
+    /**
+     * @return the max statements
+     */
     int maxStatements() default -1;
+    
+    /**
+     * @return a String[] with the properties
+     */
     String[] properties() default {};
+    
+    /**
+     * @return the login timeout
+     */
     int loginTimeout() default 0;
+    
 }

==================================================
