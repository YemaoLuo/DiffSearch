561481797673619ce27b3fe2427d5ba4c5ec4e17
==================================================
Fixed bug #49125: toString on byte[] array probably is not correct
==================================================
Christopher Schultz
==================================================
Tue Dec 14 20:49:28 2010 +0000
==================================================
FileMessageFactory.java
Fixed bug #49125: toString on byte[] array probably is not correct
- Added HexUtils.toHexString method
- Wrapped output of byte[] objects with a call to HexUtils.toHexString


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1049263 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AjpMessage.java
index 2bb5f5914d..c0b7b61f23 100644
--- a/java/org/apache/catalina/ha/deploy/FileMessageFactory.java
+++ b/java/org/apache/catalina/ha/deploy/FileMessageFactory.java
@@ -28,6 +28,7 @@ import java.util.concurrent.atomic.AtomicLong;
 
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
+import org.apache.tomcat.util.buf.HexUtils;
 
 /**
  * This factory is used to read files and write files by splitting them up into
@@ -227,7 +228,7 @@ public class FileMessageFactory {
             throw new IllegalArgumentException(
                     "Can't write message, this factory is reading.");
         if (log.isDebugEnabled())
-            log.debug("Message " + msg + " data " + msg.getData()
+            log.debug("Message " + msg + " data " + HexUtils.toHexString(msg.getData())
                     + " data length " + msg.getDataLength() + " out " + out);
         
         if (msg.getMessageNumber() <= lastMessageProcessed.get()) {

==================================================
HexUtils.java
index 7221ba755f..491e280346 100644
--- a/java/org/apache/coyote/ajp/AjpMessage.java
+++ b/java/org/apache/coyote/ajp/AjpMessage.java
@@ -21,6 +21,7 @@ import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.buf.ByteChunk;
 import org.apache.tomcat.util.buf.CharChunk;
+import org.apache.tomcat.util.buf.HexUtils;
 import org.apache.tomcat.util.buf.MessageBytes;
 import org.apache.tomcat.util.res.StringManager;
 
@@ -372,7 +373,7 @@ public class AjpMessage {
      */
     public void dump(String msg) {
         if (log.isDebugEnabled()) {
-            log.debug(msg + ": " + buf + " " + pos +"/" + (len + 4));
+            log.debug(msg + ": " + HexUtils.toHexString(buf) + " " + pos +"/" + (len + 4));
         }
         int max = pos;
         if (len + 4 > pos)

==================================================
