6e0809fe1926cd927e3622112157b135ef67bc8d
==================================================
Code clean-up for o.a.catalina.deploy
==================================================
Mark Emlyn
==================================================
Thu Jul 12 21:40:27 2012 +0000
==================================================
ContextHandler.java
Code clean-up for o.a.catalina.deploy
 - Add final prompted by UCDetector
 - Java 7 use of <>

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1360966 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ContextService.java
index dc47df7357..bf3a25fc08 100644
--- a/java/org/apache/catalina/deploy/ContextHandler.java
+++ b/java/org/apache/catalina/deploy/ContextHandler.java
@@ -56,8 +56,7 @@ public class ContextHandler extends ResourceBase {
      * soapHeader[0] : namespaceURI
      * soapHeader[1] : localpart
      */
-    private final HashMap<String, String> soapHeaders =
-            new HashMap<String, String>();
+    private final HashMap<String, String> soapHeaders = new HashMap<>();
 
     public Iterator<String> getLocalparts() {
         return soapHeaders.keySet().iterator();
@@ -81,7 +80,7 @@ public class ContextHandler extends ResourceBase {
     /**
      * The soapRole.
      */
-    private final ArrayList<String> soapRoles = new ArrayList<String>();
+    private final ArrayList<String> soapRoles = new ArrayList<>();
 
     public String getSoapRole(int i) {
         return this.soapRoles.get(i);
@@ -98,7 +97,7 @@ public class ContextHandler extends ResourceBase {
     /**
      * The portName.
      */
-    private final ArrayList<String> portNames = new ArrayList<String>();
+    private final ArrayList<String> portNames = new ArrayList<>();
 
     public String getPortName(int i) {
         return this.portNames.get(i);

==================================================
ContextTransaction.java
index 40c6178bef..6513c466a0 100644
--- a/java/org/apache/catalina/deploy/ContextService.java
+++ b/java/org/apache/catalina/deploy/ContextService.java
@@ -186,8 +186,7 @@ public class ContextService extends ResourceBase {
      *
      * The instantiation of the handler have to be done.
      */
-    private final HashMap<String, ContextHandler> handlers =
-        new HashMap<String, ContextHandler>();
+    private final HashMap<String, ContextHandler> handlers = new HashMap<>();
 
     public Iterator<String> getHandlers() {
         return handlers.keySet().iterator();

==================================================
FilterDef.java
index d04eab626f..c090c4abd9 100644
--- a/java/org/apache/catalina/deploy/ContextTransaction.java
+++ b/java/org/apache/catalina/deploy/ContextTransaction.java
@@ -41,7 +41,7 @@ public class ContextTransaction implements Serializable {
     /**
      * Holder for our configured properties.
      */
-    private HashMap<String, Object> properties = new HashMap<String, Object>();
+    private final HashMap<String, Object> properties = new HashMap<>();
 
     /**
      * Return a configured property.

==================================================
FilterMap.java
index 6f2ec3e3b4..5d694ad3ab 100644
--- a/java/org/apache/catalina/deploy/FilterDef.java
+++ b/java/org/apache/catalina/deploy/FilterDef.java
@@ -130,7 +130,7 @@ public class FilterDef implements Serializable {
      * The set of initialization parameters for this filter, keyed by
      * parameter name.
      */
-    private Map<String, String> parameters = new HashMap<String, String>();
+    private final Map<String, String> parameters = new HashMap<>();
 
     public Map<String, String> getParameterMap() {
 

==================================================
JspPropertyGroup.java
index 2648afb25d..b29e915d2b 100644
--- a/java/org/apache/catalina/deploy/FilterMap.java
+++ b/java/org/apache/catalina/deploy/FilterMap.java
@@ -178,7 +178,7 @@ public class FilterMap implements Serializable {
     }
 
     public String[] getDispatcherNames() {
-        ArrayList<String> result = new ArrayList<String>();
+        ArrayList<String> result = new ArrayList<>();
         if ((dispatcherMapping & FORWARD) > 0) {
             result.add(DispatcherType.FORWARD.name());
         }

==================================================
NamingResources.java
index 3d206d7e47..2bc038f548 100644
--- a/java/org/apache/catalina/deploy/JspPropertyGroup.java
+++ b/java/org/apache/catalina/deploy/JspPropertyGroup.java
@@ -35,13 +35,13 @@ public class JspPropertyGroup {
     }
     public Boolean getElIgnored() { return elIgnored; }
 
-    private Set<String> includeCodas = new LinkedHashSet<String>();
+    private final Set<String> includeCodas = new LinkedHashSet<>();
     public void addIncludeCoda(String includeCoda) {
         includeCodas.add(includeCoda);
     }
     public Set<String> getIncludeCodas() { return includeCodas; }
 
-    private Set<String> includePreludes = new LinkedHashSet<String>();
+    private final Set<String> includePreludes = new LinkedHashSet<>();
     public void addIncludePrelude(String includePrelude) {
         includePreludes.add(includePrelude);
     }

==================================================
ResourceBase.java
index 0c1e09ee59..b48a85a58f 100644
--- a/java/org/apache/catalina/deploy/NamingResources.java
+++ b/java/org/apache/catalina/deploy/NamingResources.java
@@ -87,66 +87,62 @@ public class NamingResources extends LifecycleMBeanBase implements Serializable
     /**
      * Set of naming entries, keyed by name.
      */
-    private Set<String> entries = new HashSet<String>();
+    private final Set<String> entries = new HashSet<>();
 
 
     /**
      * The EJB resource references for this web application, keyed by name.
      */
-    private HashMap<String, ContextEjb> ejbs =
-        new HashMap<String, ContextEjb>();
+    private final HashMap<String, ContextEjb> ejbs = new HashMap<>();
 
 
     /**
      * The environment entries for this web application, keyed by name.
      */
-    private HashMap<String, ContextEnvironment> envs =
-        new HashMap<String, ContextEnvironment>();
+    private final HashMap<String, ContextEnvironment> envs = new HashMap<>();
 
 
     /**
      * The local  EJB resource references for this web application, keyed by
      * name.
      */
-    private HashMap<String, ContextLocalEjb> localEjbs =
-        new HashMap<String, ContextLocalEjb>();
+    private final HashMap<String, ContextLocalEjb> localEjbs = new HashMap<>();
 
 
     /**
      * The message destination referencess for this web application,
      * keyed by name.
      */
-    private HashMap<String, MessageDestinationRef> mdrs =
-        new HashMap<String, MessageDestinationRef>();
+    private final HashMap<String, MessageDestinationRef> mdrs = new HashMap<>();
 
 
     /**
      * The resource environment references for this web application,
      * keyed by name.
      */
-    private HashMap<String, ContextResourceEnvRef> resourceEnvRefs =
-        new HashMap<String, ContextResourceEnvRef>();
+    private final HashMap<String, ContextResourceEnvRef> resourceEnvRefs =
+        new HashMap<>();
 
 
     /**
      * The resource references for this web application, keyed by name.
      */
-    private HashMap<String, ContextResource> resources =
-        new HashMap<String, ContextResource>();
+    private final HashMap<String, ContextResource> resources =
+        new HashMap<>();
 
 
     /**
      * The resource links for this web application, keyed by name.
      */
-    private HashMap<String, ContextResourceLink> resourceLinks =
-        new HashMap<String, ContextResourceLink>();
+    private final HashMap<String, ContextResourceLink> resourceLinks =
+        new HashMap<>();
 
 
     /**
      * The web service references for this web application, keyed by name.
      */
-    private HashMap<String, ContextService> services =
-        new HashMap<String, ContextService>();
+    private final HashMap<String, ContextService> services =
+        new HashMap<>();
 
 
     /**
@@ -158,7 +154,8 @@ public class NamingResources extends LifecycleMBeanBase implements Serializable
     /**
      * The property change support for this component.
      */
-    protected PropertyChangeSupport support = new PropertyChangeSupport(this);
+    protected final PropertyChangeSupport support =
+            new PropertyChangeSupport(this);
 
 
     // ------------------------------------------------------------- Properties

==================================================
SecurityConstraint.java
index cc93f33bff..8ec2a94549 100644
--- a/java/org/apache/catalina/deploy/ResourceBase.java
+++ b/java/org/apache/catalina/deploy/ResourceBase.java
@@ -83,8 +83,7 @@ public class ResourceBase implements Serializable, Injectable {
     /**
      * Holder for our configured properties.
      */
-    private final HashMap<String, Object> properties =
-            new HashMap<String, Object>();
+    private final HashMap<String, Object> properties = new HashMap<>();
 
     /**
      * Return a configured property.
@@ -114,7 +113,7 @@ public class ResourceBase implements Serializable, Injectable {
         return properties.keySet().iterator();
     }
 
-    private final List<InjectionTarget> injectionTargets = new ArrayList<InjectionTarget>();
+    private final List<InjectionTarget> injectionTargets = new ArrayList<>();
 
     @Override
     public void addInjectionTarget(String injectionTargetName, String jndiName) {

==================================================
ServletDef.java
index a6486c6a76..5d5a78f082 100644
--- a/java/org/apache/catalina/deploy/SecurityConstraint.java
+++ b/java/org/apache/catalina/deploy/SecurityConstraint.java
@@ -481,7 +481,7 @@ public class SecurityConstraint implements Serializable {
      */
     public static SecurityConstraint[] createConstraints(
             ServletSecurityElement element, String urlPattern) {
-        Set<SecurityConstraint> result = new HashSet<SecurityConstraint>();
+        Set<SecurityConstraint> result = new HashSet<>();
 
         // Add the per method constraints
         Collection<HttpMethodConstraintElement> methods =

==================================================
SessionConfig.java
index bcaf32e0ec..33cd282504 100644
--- a/java/org/apache/catalina/deploy/ServletDef.java
+++ b/java/org/apache/catalina/deploy/ServletDef.java
@@ -140,7 +140,7 @@ public class ServletDef implements Serializable {
      * The set of initialization parameters for this servlet, keyed by
      * parameter name.
      */
-    private Map<String, String> parameters = new HashMap<String, String>();
+    private final Map<String, String> parameters = new HashMap<>();
 
     public Map<String, String> getParameterMap() {
 
@@ -197,8 +197,7 @@ public class ServletDef implements Serializable {
     /**
      * The set of security role references for this servlet
      */
-    private Set<SecurityRoleRef> securityRoleRefs =
-        new HashSet<SecurityRoleRef>();
+    private final Set<SecurityRoleRef> securityRoleRefs = new HashSet<>();
 
     public Set<SecurityRoleRef> getSecurityRoleRefs() {
         return (this.securityRoleRefs);

==================================================
WebXml.java
index 6f158d1cff..ab20fea4eb 100644
--- a/java/org/apache/catalina/deploy/SessionConfig.java
+++ b/java/org/apache/catalina/deploy/SessionConfig.java
@@ -35,7 +35,7 @@ public class SessionConfig {
     private Boolean cookieHttpOnly;
     private Boolean cookieSecure;
     private Integer cookieMaxAge;
-    private EnumSet<SessionTrackingMode> sessionTrackingModes =
+    private final EnumSet<SessionTrackingMode> sessionTrackingModes =
         EnumSet.noneOf(SessionTrackingMode.class);
 
     public Integer getSessionTimeout() {

==================================================
