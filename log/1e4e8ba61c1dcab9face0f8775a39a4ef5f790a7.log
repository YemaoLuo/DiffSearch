1e4e8ba61c1dcab9face0f8775a39a4ef5f790a7
==================================================
Refactoring to allow easier re-use.
==================================================
Mark Emlyn
==================================================
Sat Oct 31 11:01:48 2009 +0000
==================================================
TestTomcat.java
Refactoring to allow easier re-use.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@831530 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestTomcatBase.java
index 98b4c01b14..898413740b 100644
--- a/test/org/apache/catalina/startup/TestTomcat.java
+++ b/test/org/apache/catalina/startup/TestTomcat.java
@@ -16,14 +16,9 @@
  */
 package org.apache.catalina.startup;
 
-import java.io.BufferedInputStream;
 import java.io.File;
 import java.io.IOException;
-import java.io.InputStream;
-import java.net.HttpURLConnection;
 import java.net.URL;
-import java.util.List;
-import java.util.Map;
 
 import javax.naming.Context;
 import javax.naming.InitialContext;
@@ -216,35 +211,4 @@ public class TestTomcat extends TestTomcatBase {
         assertEquals(HttpServletResponse.SC_OK, rc);
     }
 
-    /**
-     *  Wrapper for getting the response.
-     */
-    public static ByteChunk getUrl(String path) throws IOException {
-        ByteChunk out = new ByteChunk();
-        getUrl(path, out, null);
-        return out;
-    }
-
-    public static int getUrl(String path, 
-                             ByteChunk out, 
-                             Map<String, List<String>> resHead) throws IOException {
-        URL url = new URL(path);
-        HttpURLConnection connection = 
-            (HttpURLConnection) url.openConnection();
-        connection.setReadTimeout(100000);
-        connection.connect();
-        int rc = connection.getResponseCode();
-        if (resHead != null) {
-            Map<String, List<String>> head = connection.getHeaderFields();
-            resHead.putAll(head);
-        }
-        InputStream is = connection.getInputStream();
-        BufferedInputStream bis = new BufferedInputStream(is);
-        byte[] buf = new byte[2048];
-        int rd = 0;
-        while((rd = bis.read(buf)) > 0) {
-            out.append(buf, 0, rd);
-        }
-        return rc;
-    }
 }

==================================================
