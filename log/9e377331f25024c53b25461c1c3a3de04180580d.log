9e377331f25024c53b25461c1c3a3de04180580d
==================================================
Add initial unit test for ELProcessor and handle the fact that expressions are defined without brackets.
==================================================
Mark Emlyn
==================================================
Fri Jul 12 12:23:25 2013 +0000
==================================================
ELProcessor.java
Add initial unit test for ELProcessor and handle the fact that expressions are defined without brackets.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1502528 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestELProcessor.java
index 23728ef345..c16a43d12f 100644
--- a/java/javax/el/ELProcessor.java
+++ b/java/javax/el/ELProcessor.java
@@ -41,14 +41,14 @@ public class ELProcessor {
 
     public Object getValue(String expression, Class<?> expectedType) {
         ValueExpression ve = factory.createValueExpression(
-                context, expression, expectedType);
+                context, bracket(expression), expectedType);
         return ve.getValue(context);
     }
 
 
     public void setValue(String expression, Object value) {
         ValueExpression ve = factory.createValueExpression(
-                context, expression, Object.class);
+                context, bracket(expression), Object.class);
         ve.setValue(context, value);
     }
 
@@ -58,7 +58,7 @@ public class ELProcessor {
             manager.setVariable(variable, null);
         } else {
             ValueExpression ve = factory.createValueExpression(
-                    context, expression, Object.class);
+                    context, bracket(expression), Object.class);
             manager.setVariable(variable, ve);
         }
     }
@@ -150,6 +150,10 @@ public class ELProcessor {
     }
 
 
+    private static String bracket(String expression) {
+        return "${" + expression + "}";
+    }
+
     private static class MethodSignature {
 
         private final String name;

==================================================
