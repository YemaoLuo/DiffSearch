494452e7eb6d506a24bbe105fd2f482c757fa674
==================================================
Fix BZ 65397 - skip symlinks in getResourcePaths() results
==================================================
Mark Thomas
==================================================
Thu Jun 24 16:00:21 2021 +0100
==================================================
AbstractFileResourceSet.java
Fix BZ 65397 - skip symlinks in getResourcePaths() results

Calls to ServletContext.getResourcePaths() no longer include symbolic
links in the results unless allowLinking has been set to true. If a
resource is skipped because of this change, a warning will be logged as
this typically indicates a configuration issue.

https://bz.apache.org/bugzilla/show_bug.cgi?id=65397


==================================================
DirResourceSet.java
index 59fc77157f..3930a90c5b 100644
--- a/java/org/apache/catalina/webresources/AbstractFileResourceSet.java
+++ b/java/org/apache/catalina/webresources/AbstractFileResourceSet.java
@@ -136,14 +136,7 @@ public abstract class AbstractFileResourceSet extends AbstractResourceSet {
                 // Typically means symlinks are in use but being ignored. Given
                 // the symlink was likely created for a reason, log a warning
                 // that it was ignored.
-                String msg = sm.getString("abstractFileResourceSet.canonicalfileCheckFailed",
-                        getRoot().getContext().getName(), absPath, canPath);
-                // Log issues with configuration files at a higher level
-                if(absPath.startsWith("/META-INF/") || absPath.startsWith("/WEB-INF/")) {
-                    log.error(msg);
-                } else {
-                    log.warn(msg);
-                }
+                logIgnoredSymlink(getRoot().getContext().getName(), absPath, canPath);
             }
             return null;
         }
@@ -152,6 +145,17 @@ public abstract class AbstractFileResourceSet extends AbstractResourceSet {
     }
 
 
+    protected void logIgnoredSymlink(String contextPath, String absPath, String canPath) {
+        String msg = sm.getString("abstractFileResourceSet.canonicalfileCheckFailed",
+                contextPath, absPath, canPath);
+        // Log issues with configuration files at a higher level
+        if(absPath.startsWith("/META-INF/") || absPath.startsWith("/WEB-INF/")) {
+            log.error(msg);
+        } else {
+            log.warn(msg);
+        }
+    }
+
     private boolean isInvalidWindowsFilename(String name) {
         final int len = name.length();
         if (len == 0) {

==================================================
