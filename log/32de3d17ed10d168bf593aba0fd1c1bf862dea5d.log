32de3d17ed10d168bf593aba0fd1c1bf862dea5d
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=57611
==================================================
Mark Thomas
==================================================
Mon Feb 23 22:36:40 2015 +0000
==================================================
AprLifecycleListener.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=57611
issues.a.o -> bz.a.o

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1661806 13f79535-47bb-0310-9956-ffa450edef68



==================================================
JreMemoryLeakPreventionListener.java
index 7d81b3fb87..4cd57c2f9a 100644
--- a/java/org/apache/catalina/core/AprLifecycleListener.java
+++ b/java/org/apache/catalina/core/AprLifecycleListener.java
@@ -100,7 +100,7 @@ public class AprLifecycleListener
     protected static final Object lock = new Object();
 
     public static boolean isAprAvailable() {
-        //https://issues.apache.org/bugzilla/show_bug.cgi?id=48613
+        //https://bz.apache.org/bugzilla/show_bug.cgi?id=48613
         if (instanceCreated) {
             synchronized (lock) {
                 init();

==================================================
StandardWrapper.java
index 84d8e583da..33cb89783f 100644
--- a/java/org/apache/catalina/core/JreMemoryLeakPreventionListener.java
+++ b/java/org/apache/catalina/core/JreMemoryLeakPreventionListener.java
@@ -279,7 +279,7 @@ public class JreMemoryLeakPreventionListener implements LifecycleListener {
                 }
 
                 // Trigger the creation of the "Java2D Disposer" thread.
-                // See https://issues.apache.org/bugzilla/show_bug.cgi?id=51687
+                // See https://bz.apache.org/bugzilla/show_bug.cgi?id=51687
                 if(java2dDisposerProtection) {
                     try {
                         Class.forName("sun.java2d.Disposer");

==================================================
WebappClassLoaderBase.java
index 784cd79b41..01b4a7009e 100644
--- a/java/org/apache/catalina/core/StandardWrapper.java
+++ b/java/org/apache/catalina/core/StandardWrapper.java
@@ -1104,7 +1104,7 @@ public class StandardWrapper extends ContainerBase
                 unavailable(null);
 
                 // Added extra log statement for Bugzilla 36630:
-                // http://issues.apache.org/bugzilla/show_bug.cgi?id=36630
+                // http://bz.apache.org/bugzilla/show_bug.cgi?id=36630
                 if(log.isDebugEnabled()) {
                     log.debug(sm.getString("standardWrapper.instantiate", servletClass), e);
                 }

==================================================
JNDIRealm.java
index 1cca4e038a..0ab2dc205d 100644
--- a/java/org/apache/catalina/loader/WebappClassLoaderBase.java
+++ b/java/org/apache/catalina/loader/WebappClassLoaderBase.java
@@ -2574,7 +2574,7 @@ public abstract class WebappClassLoaderBase extends URLClassLoader
          *
          * In all other cases do not cache the content to prevent
          * excessive memory usage if large resources are present (see
-         * https://issues.apache.org/bugzilla/show_bug.cgi?id=53081).
+         * https://bz.apache.org/bugzilla/show_bug.cgi?id=53081).
          */
         if (isCacheable || fileNeedConvert) {
             byte[] binaryContent = resource.getContent();

==================================================
UpgradeServletOutputStream.java
index 7cb4e9f684..df6e47ff72 100644
--- a/java/org/apache/catalina/realm/JNDIRealm.java
+++ b/java/org/apache/catalina/realm/JNDIRealm.java
@@ -174,7 +174,7 @@ import org.ietf.jgss.GSSCredential;
  * <p><strong>WARNING</strong> - There is a reported bug against the Netscape
  * provider code (com.netscape.jndi.ldap.LdapContextFactory) with respect to
  * successfully authenticated a non-existing user. The
- * report is here: http://issues.apache.org/bugzilla/show_bug.cgi?id=11210 .
+ * report is here: http://bz.apache.org/bugzilla/show_bug.cgi?id=11210 .
  * With luck, Netscape has updated their provider code and this is not an
  * issue. </p>
  *

==================================================
Compiler.java
index 51d5e22ef9..59e0b27ba8 100644
--- a/java/org/apache/coyote/http11/upgrade/UpgradeServletOutputStream.java
+++ b/java/org/apache/coyote/http11/upgrade/UpgradeServletOutputStream.java
@@ -186,7 +186,8 @@ public class UpgradeServletOutputStream extends ServletOutputStream {
             return;
         }
         closed = true;
-        flushInternal(false, false);
+        socketWrapper.setWriteTimeout(socketWrapper.getConnectiontTimeout());
+        flushInternal(true, false);
     }
 
 

==================================================
PageDataImpl.java
index 4e5d111953..c79eb589ab 100644
--- a/java/org/apache/jasper/compiler/Compiler.java
+++ b/java/org/apache/jasper/compiler/Compiler.java
@@ -83,7 +83,7 @@ public abstract class Compiler {
      * <p>
      * Retrieves the parsed nodes of the JSP page, if they are available. May
      * return null. Used in development mode for generating detailed error
-     * messages. http://issues.apache.org/bugzilla/show_bug.cgi?id=37062.
+     * messages. http://bz.apache.org/bugzilla/show_bug.cgi?id=37062.
      * </p>
      */
     public Node.Nodes getPageNodes() {
@@ -388,7 +388,7 @@ public abstract class Compiler {
             // Only get rid of the pageNodes if in production.
             // In development mode, they are used for detailed
             // error messages.
-            // http://issues.apache.org/bugzilla/show_bug.cgi?id=37062
+            // http://bz.apache.org/bugzilla/show_bug.cgi?id=37062
             if (!this.options.getDevelopment()) {
                 pageNodes = null;
             }

==================================================
JspServletWrapper.java
index 394f60283f..6f8e661782 100644
--- a/java/org/apache/jasper/compiler/PageDataImpl.java
+++ b/java/org/apache/jasper/compiler/PageDataImpl.java
@@ -213,7 +213,7 @@ class PageDataImpl extends PageData implements TagConstants {
                         continue;
                     }
 
-                    // Bugzilla 35252: http://issues.apache.org/bugzilla/show_bug.cgi?id=35252
+                    // Bugzilla 35252: http://bz.apache.org/bugzilla/show_bug.cgi?id=35252
                     if(rootAttrs.getIndex(qName) == -1) {
                         rootAttrs.addAttribute(attrs.getURI(i),
                                                attrs.getLocalName(i),

==================================================
SocketWrapperBase.java
index 551d320123..02898a6049 100644
--- a/java/org/apache/jasper/servlet/JspServletWrapper.java
+++ b/java/org/apache/jasper/servlet/JspServletWrapper.java
@@ -514,7 +514,7 @@ public class JspServletWrapper {
      * number in the generated servlet that originated the exception to a line
      * number in the JSP.  Then constructs an exception containing that
      * information, and a snippet of the JSP to help debugging.
-     * Please see http://issues.apache.org/bugzilla/show_bug.cgi?id=37062 and
+     * Please see http://bz.apache.org/bugzilla/show_bug.cgi?id=37062 and
      * http://www.tfenne.com/jasper/ for more details.
      *</p>
      *

==================================================
AsyncChannelGroupUtil.java
index afecdd7162..e07de8cde1 100644
--- a/java/org/apache/tomcat/util/net/SocketWrapperBase.java
+++ b/java/org/apache/tomcat/util/net/SocketWrapperBase.java
@@ -198,6 +198,12 @@ public abstract class SocketWrapperBase<E> {
         return this.writeTimeout;
     }
 
+
+    public long getConnectiontTimeout() {
+        return getEndpoint().getSoTimeout();
+    }
+
+
     public void updateLastWrite() { lastWrite = System.currentTimeMillis(); }
     public long getLastWrite() { return lastWrite; }
     public long getLastRead() { return lastRead; }

==================================================
TestSizePreservation.java
index bfc4f77e10..50604c4583 100644
--- a/modules/jdbc-pool/doc/package.xsl
+++ b/modules/jdbc-pool/doc/package.xsl
@@ -36,7 +36,7 @@
   <xsl:param    name="relative-path"    select="'.'"/>
   <xsl:param    name="void-image"       select="'/images/void.gif'"/>
   <xsl:param    name="standalone"       select="''"/>
-  <xsl:param    name="buglink"          select="'http://issues.apache.org/bugzilla/show_bug.cgi?id='"/>
+  <xsl:param    name="buglink"          select="'http://bz.apache.org/bugzilla/show_bug.cgi?id='"/>
   <xsl:param    name="revlink"          select="'http://svn.apache.org/viewvc?view=rev&amp;rev='"/>
 
   <!-- Defined variables (non-overrideable) -->

==================================================
TestArrayELResolver.java
index 336bef2de5..9215ce7e73 100644
--- a/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/TestSizePreservation.java
+++ b/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/TestSizePreservation.java
@@ -27,7 +27,7 @@ import org.apache.tomcat.jdbc.pool.PoolConfiguration;
 import org.apache.tomcat.jdbc.test.driver.Driver;
 
 /**
- * https://issues.apache.org/bugzilla/show_bug.cgi?id=50613
+ * https://bz.apache.org/bugzilla/show_bug.cgi?id=50613
  */
 public class TestSizePreservation {
 

==================================================
TestImportHandler.java
index 7a1fc5f905..38c66b47f0 100644
--- a/test/javax/el/TestArrayELResolver.java
+++ b/test/javax/el/TestArrayELResolver.java
@@ -247,7 +247,7 @@ public class TestArrayELResolver {
 
     /**
      * Tests setting arrays of primitives.
-     * https://issues.apache.org/bugzilla/show_bug.cgi?id=55691
+     * https://bz.apache.org/bugzilla/show_bug.cgi?id=55691
      */
     @Test
     public void testSetValue08() {

==================================================
TestSSOnonLoginAndBasicAuthenticator.java
index 6a2be77957..01ed3892df 100644
--- a/test/javax/el/TestImportHandler.java
+++ b/test/javax/el/TestImportHandler.java
@@ -75,7 +75,7 @@ public class TestImportHandler {
 
     /**
      * Multiple package imports with a single match.
-     * https://issues.apache.org/bugzilla/show_bug.cgi?id=57113
+     * https://bz.apache.org/bugzilla/show_bug.cgi?id=57113
      */
     @Test
     public void testResolveClass04() {
@@ -92,7 +92,7 @@ public class TestImportHandler {
 
     /**
      * Attempting to resolve something that isn't a simple class name
-     * https://issues.apache.org/bugzilla/show_bug.cgi?id=57132
+     * https://bz.apache.org/bugzilla/show_bug.cgi?id=57132
      */
     @Test
     public void testResolveClass05() {
@@ -107,7 +107,7 @@ public class TestImportHandler {
 
     /**
      * Attempting to resolve something that isn't a simple class name
-     * https://issues.apache.org/bugzilla/show_bug.cgi?id=57132
+     * https://bz.apache.org/bugzilla/show_bug.cgi?id=57132
      */
     @Test
     public void testResolveClass06() {

==================================================
TestSSOnonLoginAndDigestAuthenticator.java
index e595c0b1e2..4f2e0c08a3 100644
--- a/test/org/apache/catalina/authenticator/TestSSOnonLoginAndBasicAuthenticator.java
+++ b/test/org/apache/catalina/authenticator/TestSSOnonLoginAndBasicAuthenticator.java
@@ -307,7 +307,7 @@ public class TestSSOnonLoginAndBasicAuthenticator extends TomcatBaseTest {
      * Finally, wait for the non-login session to expire and try again..
      * This should be rejected with SC_FORBIDDEN 403 status.
      *
-     * (see bugfix https://issues.apache.org/bugzilla/show_bug.cgi?id=52303)
+     * (see bugfix https://bz.apache.org/bugzilla/show_bug.cgi?id=52303)
      *
      * Note: this test should run for ~20 seconds.
      */

==================================================
TestOutputBuffer.java
index 7e524ae5a7..03ec0d1f02 100644
--- a/test/org/apache/catalina/authenticator/TestSSOnonLoginAndDigestAuthenticator.java
+++ b/test/org/apache/catalina/authenticator/TestSSOnonLoginAndDigestAuthenticator.java
@@ -177,7 +177,7 @@ public class TestSSOnonLoginAndDigestAuthenticator extends TomcatBaseTest {
      * Finally, wait for the non-login session to expire and try again..
      * This should be rejected with SC_FORBIDDEN 403 status.
      *
-     * (see bugfix https://issues.apache.org/bugzilla/show_bug.cgi?id=52303)
+     * (see bugfix https://bz.apache.org/bugzilla/show_bug.cgi?id=52303)
      */
     @Test
     public void testDigestExpiredAcceptProtectedWithCookies() throws Exception {

==================================================
TestRequest.java
index 4679574188..4f8c527113 100644
--- a/test/org/apache/catalina/connector/TestOutputBuffer.java
+++ b/test/org/apache/catalina/connector/TestOutputBuffer.java
@@ -39,7 +39,7 @@ public class TestOutputBuffer extends TomcatBaseTest{
      * Expect that the buffered results are slightly slower since Tomcat now has
      * an internal buffer so an extra one just adds overhead.
      *
-     * @see "https://issues.apache.org/bugzilla/show_bug.cgi?id=52328"
+     * @see "https://bz.apache.org/bugzilla/show_bug.cgi?id=52328"
      */
     @Test
     public void testWriteSpeed() throws Exception {

==================================================
TestAsyncContextImpl.java
index 258ebeca58..1d585581fb 100644
--- a/test/org/apache/catalina/connector/TestRequest.java
+++ b/test/org/apache/catalina/connector/TestRequest.java
@@ -69,7 +69,7 @@ public class TestRequest extends TomcatBaseTest {
     }
 
     /**
-     * Test case for https://issues.apache.org/bugzilla/show_bug.cgi?id=37794
+     * Test case for https://bz.apache.org/bugzilla/show_bug.cgi?id=37794
      * POST parameters are not returned from a call to
      * any of the {@link HttpServletRequest} getParameterXXX() methods if the
      * request is chunked.
@@ -264,7 +264,7 @@ public class TestRequest extends TomcatBaseTest {
 
     /*
      * Test case for
-     * <a href="https://issues.apache.org/bugzilla/show_bug.cgi?id=38113">bug
+     * <a href="https://bz.apache.org/bugzilla/show_bug.cgi?id=38113">bug
      * 38118</a>.
      */
     @Test
@@ -396,7 +396,7 @@ public class TestRequest extends TomcatBaseTest {
     }
 
     /**
-     * Test case for https://issues.apache.org/bugzilla/show_bug.cgi?id=48692
+     * Test case for https://bz.apache.org/bugzilla/show_bug.cgi?id=48692
      * PUT requests should be able to fetch request parameters coming from
      * the request body (when properly configured using the new parseBodyMethod
      * setting).

==================================================
TestDefaultServlet.java
index d4b2e01bee..86053551d8 100644
--- a/test/org/apache/catalina/core/TestAsyncContextImpl.java
+++ b/test/org/apache/catalina/core/TestAsyncContextImpl.java
@@ -2083,7 +2083,7 @@ public class TestAsyncContextImpl extends TomcatBaseTest {
     }
 
 
-    // https://issues.apache.org/bugzilla/show_bug.cgi?id=57326
+    // https://bz.apache.org/bugzilla/show_bug.cgi?id=57326
     @Test
     public void testAsyncContextListenerClearing() throws Exception {
         resetTracker();
@@ -2145,7 +2145,7 @@ public class TestAsyncContextImpl extends TomcatBaseTest {
          }
     }
 
-    // https://issues.apache.org/bugzilla/show_bug.cgi?id=57559
+    // https://bz.apache.org/bugzilla/show_bug.cgi?id=57559
     @Test
     public void testAsyncRequestURI() throws Exception {
         // Setup Tomcat instance

==================================================
TestWebdavServlet.java
index fb70b56678..3b42792408 100644
--- a/test/org/apache/catalina/servlets/TestDefaultServlet.java
+++ b/test/org/apache/catalina/servlets/TestDefaultServlet.java
@@ -145,7 +145,7 @@ public class TestDefaultServlet extends TomcatBaseTest {
     }
 
     /*
-     * Test https://issues.apache.org/bugzilla/show_bug.cgi?id=50026
+     * Test https://bz.apache.org/bugzilla/show_bug.cgi?id=50026
      * Verify serving of resources from context root with subpath mapping.
      */
     @Test
@@ -216,7 +216,7 @@ public class TestDefaultServlet extends TomcatBaseTest {
     }
 
     /*
-     * Test https://issues.apache.org/bugzilla/show_bug.cgi?id=50413 Serving a
+     * Test https://bz.apache.org/bugzilla/show_bug.cgi?id=50413 Serving a
      * custom error page
      */
     @Test
@@ -270,7 +270,7 @@ public class TestDefaultServlet extends TomcatBaseTest {
         String tomorrow = format.format(new Date(System.currentTimeMillis()
                 + 24 * 60 * 60 * 1000));
 
-        // https://issues.apache.org/bugzilla/show_bug.cgi?id=50413
+        // https://bz.apache.org/bugzilla/show_bug.cgi?id=50413
         //
         client.reset();
         client.setRequest(new String[] {
@@ -283,7 +283,7 @@ public class TestDefaultServlet extends TomcatBaseTest {
         assertTrue(client.isResponse404());
         assertEquals("It is 404.html", client.getResponseBody());
 
-        // https://issues.apache.org/bugzilla/show_bug.cgi?id=50413#c6
+        // https://bz.apache.org/bugzilla/show_bug.cgi?id=50413#c6
         //
         client.reset();
         client.setRequest(new String[] {

==================================================
TestTomcat.java
index c92efca597..746252333d 100644
--- a/test/org/apache/catalina/servlets/TestWebdavServlet.java
+++ b/test/org/apache/catalina/servlets/TestWebdavServlet.java
@@ -78,7 +78,7 @@ public class TestWebdavServlet extends TomcatBaseTest {
     }
 
     /*
-     * Test https://issues.apache.org/bugzilla/show_bug.cgi?id=50026
+     * Test https://bz.apache.org/bugzilla/show_bug.cgi?id=50026
      * Verify protection of special paths with re-mount of web app resource root.
      */
     @Test

==================================================
TestAbstractHttp11Processor.java
index 54afc45e99..a28f24b224 100644
--- a/test/org/apache/catalina/startup/TestTomcat.java
+++ b/test/org/apache/catalina/startup/TestTomcat.java
@@ -320,7 +320,7 @@ public class TestTomcat extends TomcatBaseTest {
 
 
     /*
-     * Test for https://issues.apache.org/bugzilla/show_bug.cgi?id=47866
+     * Test for https://bz.apache.org/bugzilla/show_bug.cgi?id=47866
      */
     @Test
     public void testGetResource() throws Exception {

==================================================
TestInternalInputBuffer.java
index 4fb9c9ac40..74caf832af 100644
--- a/test/org/apache/coyote/http11/TestAbstractHttp11Processor.java
+++ b/test/org/apache/coyote/http11/TestAbstractHttp11Processor.java
@@ -541,7 +541,7 @@ public class TestAbstractHttp11Processor extends TomcatBaseTest {
     }
 
 
-    // https://issues.apache.org/bugzilla/show_bug.cgi?id=57324
+    // https://bz.apache.org/bugzilla/show_bug.cgi?id=57324
     @Test
     public void testNon2xxResponseWithExpectation() throws Exception {
         doTestNon2xxResponseAndExpectation(true);

==================================================
TestELInJsp.java
index 4822d08836..3775ec5006 100644
--- a/test/org/apache/coyote/http11/TestInternalInputBuffer.java
+++ b/test/org/apache/coyote/http11/TestInternalInputBuffer.java
@@ -41,7 +41,7 @@ import org.apache.catalina.startup.TomcatBaseTest;
 public class TestInternalInputBuffer extends TomcatBaseTest {
 
     /**
-     * Test case for https://issues.apache.org/bugzilla/show_bug.cgi?id=48839
+     * Test case for https://bz.apache.org/bugzilla/show_bug.cgi?id=48839
      */
     @Test
     public void testBug48839() {
@@ -416,7 +416,7 @@ public class TestInternalInputBuffer extends TomcatBaseTest {
 
 
     /**
-     * Test case for https://issues.apache.org/bugzilla/show_bug.cgi?id=54947
+     * Test case for https://bz.apache.org/bugzilla/show_bug.cgi?id=54947
      */
     @Test
     public void testBug54947() {

==================================================
TestNode.java
index 7dd655301d..1bdb89d0ec 100644
--- a/test/org/apache/el/TestELInJsp.java
+++ b/test/org/apache/el/TestELInJsp.java
@@ -406,7 +406,7 @@ public class TestELInJsp extends TomcatBaseTest {
 
 
     /*
-     * BZ https://issues.apache.org/bugzilla/show_bug.cgi?id=57142
+     * BZ https://bz.apache.org/bugzilla/show_bug.cgi?id=57142
      * javax.servlet, javax.servlet.http and javax.servlet.jsp should be
      * imported by default.
      */
@@ -431,7 +431,7 @@ public class TestELInJsp extends TomcatBaseTest {
 
 
     /*
-     * BZ https://issues.apache.org/bugzilla/show_bug.cgi?id=57441
+     * BZ https://bz.apache.org/bugzilla/show_bug.cgi?id=57441
      * Can't validate function names defined in lambdas (or via imports)
      */
     @Test

==================================================
TestWsWebSocketContainer.java
index cfc6e415e6..c1ee3087a4 100644
--- a/test/org/apache/jasper/compiler/TestNode.java
+++ b/test/org/apache/jasper/compiler/TestNode.java
@@ -26,7 +26,7 @@ import org.apache.jasper.compiler.Node.PageDirective;
 public class TestNode {
 
     /*
-     * https://issues.apache.org/bugzilla/show_bug.cgi?id=57099
+     * https://bz.apache.org/bugzilla/show_bug.cgi?id=57099
      */
     @Test(expected=IllegalArgumentException.class)
     public void testPageDirectiveImport01() {

==================================================
