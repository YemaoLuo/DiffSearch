27c441a66193e51bddd9ea245a28b8553998cf43
==================================================
Fix order of field modifiers, as suggested by Checkstyle
==================================================
Konstantin Kolinko
==================================================
Wed Jan 18 12:52:08 2012 +0000
==================================================
DataSourceFactory.java
Fix order of field modifiers, as suggested by Checkstyle
s/final static/static final/

Now Checkstyle checks for jdbc-pool pass successfully.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1232867 13f79535-47bb-0310-9956-ffa450edef68



==================================================
FairBlockingQueue.java
index 4b9a833ec5..4b91e4a7e1 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/DataSourceFactory.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/DataSourceFactory.java
@@ -58,50 +58,50 @@ import org.apache.juli.logging.LogFactory;
 public class DataSourceFactory implements ObjectFactory {
     private static final Log log = LogFactory.getLog(DataSourceFactory.class);
 
-    protected final static String PROP_DEFAULTAUTOCOMMIT = "defaultAutoCommit";
-    protected final static String PROP_DEFAULTREADONLY = "defaultReadOnly";
-    protected final static String PROP_DEFAULTTRANSACTIONISOLATION = "defaultTransactionIsolation";
-    protected final static String PROP_DEFAULTCATALOG = "defaultCatalog";
-
-    protected final static String PROP_DRIVERCLASSNAME = "driverClassName";
-    protected final static String PROP_PASSWORD = "password";
-    protected final static String PROP_URL = "url";
-    protected final static String PROP_USERNAME = "username";
-
-    protected final static String PROP_MAXACTIVE = "maxActive";
-    protected final static String PROP_MAXIDLE = "maxIdle";
-    protected final static String PROP_MINIDLE = "minIdle";
-    protected final static String PROP_INITIALSIZE = "initialSize";
-    protected final static String PROP_MAXWAIT = "maxWait";
-    protected final static String PROP_MAXAGE = "maxAge";
-
-    protected final static String PROP_TESTONBORROW = "testOnBorrow";
-    protected final static String PROP_TESTONRETURN = "testOnReturn";
-    protected final static String PROP_TESTWHILEIDLE = "testWhileIdle";
-    protected final static String PROP_TESTONCONNECT = "testOnConnect";
-    protected final static String PROP_VALIDATIONQUERY = "validationQuery";
-    protected final static String PROP_VALIDATOR_CLASS_NAME = "validatorClassName";
-
-    protected final static String PROP_TIMEBETWEENEVICTIONRUNSMILLIS = "timeBetweenEvictionRunsMillis";
-    protected final static String PROP_NUMTESTSPEREVICTIONRUN = "numTestsPerEvictionRun";
-    protected final static String PROP_MINEVICTABLEIDLETIMEMILLIS = "minEvictableIdleTimeMillis";
-
-    protected final static String PROP_ACCESSTOUNDERLYINGCONNECTIONALLOWED = "accessToUnderlyingConnectionAllowed";
-
-    protected final static String PROP_REMOVEABANDONED = "removeAbandoned";
-    protected final static String PROP_REMOVEABANDONEDTIMEOUT = "removeAbandonedTimeout";
-    protected final static String PROP_LOGABANDONED = "logAbandoned";
-    protected final static String PROP_ABANDONWHENPERCENTAGEFULL = "abandonWhenPercentageFull";
-
-    protected final static String PROP_POOLPREPAREDSTATEMENTS = "poolPreparedStatements";
-    protected final static String PROP_MAXOPENPREPAREDSTATEMENTS = "maxOpenPreparedStatements";
-    protected final static String PROP_CONNECTIONPROPERTIES = "connectionProperties";
-
-    protected final static String PROP_INITSQL = "initSQL";
-    protected final static String PROP_INTERCEPTORS = "jdbcInterceptors";
-    protected final static String PROP_VALIDATIONINTERVAL = "validationInterval";
-    protected final static String PROP_JMX_ENABLED = "jmxEnabled";
-    protected final static String PROP_FAIR_QUEUE = "fairQueue";
+    protected static final String PROP_DEFAULTAUTOCOMMIT = "defaultAutoCommit";
+    protected static final String PROP_DEFAULTREADONLY = "defaultReadOnly";
+    protected static final String PROP_DEFAULTTRANSACTIONISOLATION = "defaultTransactionIsolation";
+    protected static final String PROP_DEFAULTCATALOG = "defaultCatalog";
+
+    protected static final String PROP_DRIVERCLASSNAME = "driverClassName";
+    protected static final String PROP_PASSWORD = "password";
+    protected static final String PROP_URL = "url";
+    protected static final String PROP_USERNAME = "username";
+
+    protected static final String PROP_MAXACTIVE = "maxActive";
+    protected static final String PROP_MAXIDLE = "maxIdle";
+    protected static final String PROP_MINIDLE = "minIdle";
+    protected static final String PROP_INITIALSIZE = "initialSize";
+    protected static final String PROP_MAXWAIT = "maxWait";
+    protected static final String PROP_MAXAGE = "maxAge";
+
+    protected static final String PROP_TESTONBORROW = "testOnBorrow";
+    protected static final String PROP_TESTONRETURN = "testOnReturn";
+    protected static final String PROP_TESTWHILEIDLE = "testWhileIdle";
+    protected static final String PROP_TESTONCONNECT = "testOnConnect";
+    protected static final String PROP_VALIDATIONQUERY = "validationQuery";
+    protected static final String PROP_VALIDATOR_CLASS_NAME = "validatorClassName";
+
+    protected static final String PROP_NUMTESTSPEREVICTIONRUN = "numTestsPerEvictionRun";
+    protected static final String PROP_TIMEBETWEENEVICTIONRUNSMILLIS = "timeBetweenEvictionRunsMillis";
+    protected static final String PROP_MINEVICTABLEIDLETIMEMILLIS = "minEvictableIdleTimeMillis";
+
+    protected static final String PROP_ACCESSTOUNDERLYINGCONNECTIONALLOWED = "accessToUnderlyingConnectionAllowed";
+
+    protected static final String PROP_REMOVEABANDONED = "removeAbandoned";
+    protected static final String PROP_REMOVEABANDONEDTIMEOUT = "removeAbandonedTimeout";
+    protected static final String PROP_LOGABANDONED = "logAbandoned";
+    protected static final String PROP_ABANDONWHENPERCENTAGEFULL = "abandonWhenPercentageFull";
+
+    protected static final String PROP_POOLPREPAREDSTATEMENTS = "poolPreparedStatements";
+    protected static final String PROP_MAXOPENPREPAREDSTATEMENTS = "maxOpenPreparedStatements";
+    protected static final String PROP_CONNECTIONPROPERTIES = "connectionProperties";
+
+    protected static final String PROP_INITSQL = "initSQL";
+    protected static final String PROP_INTERCEPTORS = "jdbcInterceptors";
+    protected static final String PROP_VALIDATIONINTERVAL = "validationInterval";
+    protected static final String PROP_JMX_ENABLED = "jmxEnabled";
+    protected static final String PROP_FAIR_QUEUE = "fairQueue";
 
     protected static final String PROP_USE_EQUALS = "useEquals";
     protected static final String PROP_USE_CON_LOCK = "useLock";
@@ -119,7 +119,7 @@ public class DataSourceFactory implements ObjectFactory {
     public static final String OBJECT_NAME = "object_name";
 
 
-    protected final static String[] ALL_PROPERTIES = {
+    protected static final String[] ALL_PROPERTIES = {
         PROP_DEFAULTAUTOCOMMIT,
         PROP_DEFAULTREADONLY,
         PROP_DEFAULTTRANSACTIONISOLATION,
@@ -533,7 +533,7 @@ public class DataSourceFactory implements ObjectFactory {
      * @return Properties
      * @throws Exception
      */
-    static protected Properties getProperties(String propText) {
+    protected static Properties getProperties(String propText) {
         return PoolProperties.getProperties(propText,null);
     }
 

==================================================
DefaultTestCase.java
index 4b59f41db9..8511c2aac5 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/FairBlockingQueue.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/FairBlockingQueue.java
@@ -53,7 +53,7 @@ public class FairBlockingQueue<E> implements BlockingQueue<E> {
      * lock, on Solaris its the other way around.
      * Until we have tested other platforms we only check for Linux.
      */
-    final static boolean isLinux = "Linux".equals(System.getProperty("os.name")) &&
+    static final boolean isLinux = "Linux".equals(System.getProperty("os.name")) &&
                                    (!Boolean.getBoolean(FairBlockingQueue.class.getName()+".ignoreOS"));
 
     /**

==================================================
