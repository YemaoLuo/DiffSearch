7bddff0b64a858cb42484fe1da7fc78fea68d1c6
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=54086
==================================================
Mark Emlyn
==================================================
Mon Nov 5 00:20:24 2012 +0000
==================================================
ReceiverBase.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=54086
Ensure only a single thread tries to close the selector. Prior to this change both the NioReceiverThread and the thread that stops it called closeSelector()
I also reviewed all other accesses to this.selector and fixed a handful of other potential threading issues.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1405681 13f79535-47bb-0310-9956-ffa450edef68



==================================================
NioReceiver.java
index 8a0c78c52f..8cf6990e02 100644
--- a/java/org/apache/catalina/tribes/transport/ReceiverBase.java
+++ b/java/org/apache/catalina/tribes/transport/ReceiverBase.java
@@ -63,7 +63,7 @@ public abstract class ReceiverBase implements ChannelReceiver, ListenCallback, R
     private int udpRxBufSize = 43800;
     private int udpTxBufSize = 25188;
 
-    private boolean listen = false;
+    private volatile boolean listen = false;
     private RxTaskPool pool;
     private boolean direct = true;
     private long tcpSelectorTimeout = 5000;

==================================================
