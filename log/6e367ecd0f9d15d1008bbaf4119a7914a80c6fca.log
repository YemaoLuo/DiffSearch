6e367ecd0f9d15d1008bbaf4119a7914a80c6fca
==================================================
Fix the remaining Javadocs except the external links to JAX-RPC
==================================================
Mark Emlyn
==================================================
Tue Aug 3 10:44:58 2010 +0000
==================================================
FilterRegistration.java
Fix the remaining Javadocs except the external links to JAX-RPC

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@981816 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Registration.java
index 3f54f95728..cce12d65d6 100644
--- a/java/javax/servlet/FilterRegistration.java
+++ b/java/javax/servlet/FilterRegistration.java
@@ -38,7 +38,7 @@ public interface FilterRegistration extends Registration {
             boolean isMatchAfter, String... servletNames);
     /**
      * 
-     * @return
+     * @return TODO
      */
     public Collection<String> getServletNameMappings();
     
@@ -56,7 +56,7 @@ public interface FilterRegistration extends Registration {
 
     /**
      * 
-     * @return
+     * @return TODO
      */
     public Collection<String> getUrlPatternMappings();
     

==================================================
ServletContext.java
index fe09cc577d..834a08bb54 100644
--- a/java/javax/servlet/Registration.java
+++ b/java/javax/servlet/Registration.java
@@ -34,7 +34,7 @@ public interface Registration {
      * 
      * @param name
      * @param value
-     * @return
+     * @return TODO
      * @throws IllegalArgumentException
      * @throws IllegalStateException
      */
@@ -45,7 +45,7 @@ public interface Registration {
     /**
      * 
      * @param initParameters
-     * @return
+     * @return TODO
      * @throws IllegalArgumentException
      * @throws IllegalStateException
      */

==================================================
ServletRegistration.java
index 7f31c92088..feadfb944b 100644
--- a/java/javax/servlet/ServletContext.java
+++ b/java/javax/servlet/ServletContext.java
@@ -104,14 +104,14 @@ public interface ServletContext {
     public int getMinorVersion();
 
     /**
-     * @return
+     * @return TODO
      * @throws UnsupportedOperationException
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
     public int getEffectiveMajorVersion();
 
     /**
-     * @return
+     * @return TODO
      * @throws UnsupportedOperationException
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
@@ -431,7 +431,7 @@ public interface ServletContext {
     /**
      * @param name
      * @param value
-     * @return
+     * @return TODO
      * @throws IllegalStateException
      * @throws UnsupportedOperationException
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
@@ -519,6 +519,7 @@ public interface ServletContext {
     /**
      * @param servletName
      * @param className
+     * @return TODO
      * @throws IllegalStateException
      *             If the context has already been initialised
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
@@ -529,6 +530,7 @@ public interface ServletContext {
     /**
      * @param servletName
      * @param servlet
+     * @return TODO
      * @throws IllegalStateException
      *             If the context has already been initialised
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
@@ -539,6 +541,7 @@ public interface ServletContext {
     /**
      * @param servletName
      * @param servletClass
+     * @return TODO
      * @throws IllegalStateException
      *             If the context has already been initialised
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
@@ -548,7 +551,7 @@ public interface ServletContext {
 
     /**
      * @param c
-     * @return
+     * @return TODO
      * @throws ServletException
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
@@ -557,14 +560,14 @@ public interface ServletContext {
 
     /**
      * @param servletName
-     * @return
+     * @return TODO
      * @throws UnsupportedOperationException
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
     public ServletRegistration getServletRegistration(String servletName);
 
     /**
-     * @return
+     * @return TODO
      * @throws UnsupportedOperationException
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
@@ -573,6 +576,7 @@ public interface ServletContext {
     /**
      * @param filterName
      * @param className
+     * @return TODO
      * @throws IllegalStateException
      *             If the context has already been initialised
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
@@ -583,6 +587,7 @@ public interface ServletContext {
     /**
      * @param filterName
      * @param filter
+     * @return TODO
      * @throws IllegalStateException
      *             If the context has already been initialised
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
@@ -592,6 +597,7 @@ public interface ServletContext {
     /**
      * @param filterName
      * @param filterClass
+     * @return TODO
      * @throws IllegalStateException
      *             If the context has already been initialised
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
@@ -601,7 +607,7 @@ public interface ServletContext {
 
     /**
      * @param c
-     * @return
+     * @return TODO
      * @throws ServletException
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
@@ -610,21 +616,21 @@ public interface ServletContext {
 
     /**
      * @param filterName
-     * @return
+     * @return TODO
      * @throws UnsupportedOperationException
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
     public FilterRegistration getFilterRegistration(String filterName);
 
     /**
-     * @return
+     * @return TODO
      * @throws UnsupportedOperationException
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
     public Map<String, ? extends FilterRegistration> getFilterRegistrations();
 
     /**
-     * @return
+     * @return TODO
      * @throws UnsupportedOperationException
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
@@ -646,13 +652,13 @@ public interface ServletContext {
             throws IllegalStateException, IllegalArgumentException;
 
     /**
-     * @return
+     * @return TODO
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
     public Set<SessionTrackingMode> getDefaultSessionTrackingModes();
 
     /**
-     * @return
+     * @return TODO
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
     public Set<SessionTrackingMode> getEffectiveSessionTrackingModes();
@@ -672,6 +678,7 @@ public interface ServletContext {
     /**
      * @param <T>
      * @param t
+     * @return TODO
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
     public <T extends EventListener> void addListener(T t);
@@ -679,7 +686,7 @@ public interface ServletContext {
     /**
      * @param <T>
      * @param c
-     * @return
+     * @return TODO
      * @throws ServletException
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
@@ -696,7 +703,7 @@ public interface ServletContext {
     public void declareRoles(String... roleNames);
 
     /**
-     * @return
+     * @return TODO
      * @throws UnsupportedOperationException
      * @throws SecurityException
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
@@ -704,7 +711,7 @@ public interface ServletContext {
     public ClassLoader getClassLoader();
 
     /**
-     * @return
+     * @return TODO
      * @throws UnsupportedOperationException
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */

==================================================
ServletRequest.java
index 3d2fee35e3..9734c5444d 100644
--- a/java/javax/servlet/ServletRegistration.java
+++ b/java/javax/servlet/ServletRegistration.java
@@ -29,7 +29,7 @@ public interface ServletRegistration extends Registration {
     /**
      * 
      * @param urlPatterns
-     * @return
+     * @return TODO
      * @throws IllegalArgumentException if urlPattern is null or empty
      * @throws IllegalStateException if the associated ServletContext has
      *                                  already been initialised

==================================================
HttpServletRequest.java
index 0a2ff5f9cd..767e80afde 100644
--- a/java/javax/servlet/ServletRequest.java
+++ b/java/javax/servlet/ServletRequest.java
@@ -427,13 +427,13 @@ public interface ServletRequest {
     public int getLocalPort();
 
     /**
-     * @return
+     * @return TODO
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
     public ServletContext getServletContext();
 
     /**
-     * @return
+     * @return TODO
      * @throws java.lang.IllegalStateException
      *             If async is not supported for this request
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
@@ -443,7 +443,7 @@ public interface ServletRequest {
     /**
      * @param servletRequest
      * @param servletResponse
-     * @return
+     * @return TODO
      * @throws java.lang.IllegalStateException
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
@@ -451,26 +451,26 @@ public interface ServletRequest {
             ServletResponse servletResponse);
 
     /**
-     * @return
+     * @return TODO
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
     public boolean isAsyncStarted();
 
     /**
-     * @return
+     * @return TODO
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
     public boolean isAsyncSupported();
 
     /**
-     * @return
+     * @return TODO
      * @throws java.lang.IllegalStateException
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
     public AsyncContext getAsyncContext();
 
     /**
-     * @return
+     * @return TODO
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
     public DispatcherType getDispatcherType();

==================================================
HttpServletResponse.java
index 63097a2b34..45e7cb07cb 100644
--- a/java/javax/servlet/http/HttpServletRequest.java
+++ b/java/javax/servlet/http/HttpServletRequest.java
@@ -424,7 +424,7 @@ public interface HttpServletRequest extends ServletRequest {
 
     /**
      * @param response
-     * @return
+     * @return TODO
      * @throws IOException
      * @throws ServletException
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
@@ -455,7 +455,7 @@ public interface HttpServletRequest extends ServletRequest {
     /**
      * Return a collection of all uploaded Parts.
      * 
-     * @return
+     * @return A collection of all uploaded Parts.
      * @throws IOException
      *             if an I/O error occurs
      * @throws IllegalStateException
@@ -472,7 +472,7 @@ public interface HttpServletRequest extends ServletRequest {
      * of all Parts.
      * 
      * @param name
-     * @return
+     * @return The named Part or null if the Part does not exist
      * @throws IOException
      *             if an I/O error occurs
      * @throws IllegalStateException

==================================================
Context.java
index 7ca2f5650e..c111a4d394 100644
--- a/java/javax/servlet/http/HttpServletResponse.java
+++ b/java/javax/servlet/http/HttpServletResponse.java
@@ -301,27 +301,27 @@ public interface HttpServletResponse extends ServletResponse {
     public void setStatus(int sc, String sm);
 
     /**
-     * @return
+     * @return TODO
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
     public int getStatus();
 
     /**
      * @param name
-     * @return
+     * @return TODO
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
     public String getHeader(String name);
 
     /**
      * @param name
-     * @return
+     * @return TODO
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
     public Collection<String> getHeaders(String name);
 
     /**
-     * @return
+     * @return TODO
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
     public Collection<String> getHeaderNames();

==================================================
StandardHost.java
index dd8ee2f6a6..a3fd7fb89b 100644
--- a/java/org/apache/catalina/Context.java
+++ b/java/org/apache/catalina/Context.java
@@ -1215,8 +1215,6 @@ public interface Context extends Container {
     
     /**
      * Is this Context paused whilst it is reloaded?
-     * 
-     * @return
      */
     public boolean getPaused();
 

==================================================
ExpiresFilter.java
index 24d7783424..e5af749530 100644
--- a/java/org/apache/catalina/core/StandardHost.java
+++ b/java/org/apache/catalina/core/StandardHost.java
@@ -223,7 +223,6 @@ public class StandardHost extends ContainerBase implements Host {
     /**
      * Returns true if the Host will attempt to create directories for appBase and xmlBase
      * unless they already exist.
-     * @return
      */
     public boolean getCreateDirs() {
         return createDirs;

==================================================
SimpleTcpCluster.java
index 3ac8fd1896..9ba2aa8b54 100644
--- a/java/org/apache/catalina/filters/ExpiresFilter.java
+++ b/java/org/apache/catalina/filters/ExpiresFilter.java
@@ -1139,7 +1139,6 @@ public class ExpiresFilter extends FilterBase {
      *            can be <code>null</code>
      * @param separator
      *            can be <code>null</code>
-     * @return
      */
     protected static String substringBefore(String str, String separator) {
         if (str == null || str.isEmpty() || separator == null) {

==================================================
HTMLHostManagerServlet.java
index afe1d48241..f772ef3649 100644
--- a/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java
+++ b/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java
@@ -555,7 +555,7 @@ public class SimpleTcpCluster extends LifecycleBase
     /**
      * @param name
      * @param manager
-     * @return
+     * @return TODO
      */
     public String getManagerName(String name, Manager manager) {
         String clusterName = name ;

==================================================
HostManagerServlet.java
index d209d79199..5f3e92ca6f 100644
--- a/java/org/apache/catalina/manager/host/HTMLHostManagerServlet.java
+++ b/java/org/apache/catalina/manager/host/HTMLHostManagerServlet.java
@@ -56,7 +56,7 @@ import org.apache.catalina.util.ServerInfo;
 * @author Glenn L. Nielsen
 * @author Peter Rossbach
 * @version $Id$
-* @see ManagerServlet
+* @see org.apache.catalina.manager.ManagerServlet
 */
 
 public final class HTMLHostManagerServlet extends HostManagerServlet {
@@ -166,7 +166,6 @@ public final class HTMLHostManagerServlet extends HostManagerServlet {
     /**
      * Remove the specified host.
      *
-     * @param writer Writer to render results to
      * @param name host name
      */
     protected String remove(String name) {

==================================================
MBeanFactory.java
index a3048c52cd..d820d98a9b 100644
--- a/java/org/apache/catalina/manager/host/HostManagerServlet.java
+++ b/java/org/apache/catalina/manager/host/HostManagerServlet.java
@@ -267,12 +267,11 @@ public class HostManagerServlet
 
 
     /**
-     * extract boolean value from checkbox with default
+     * Extract boolean value from checkbox with default.
      * @param request
      * @param parameter
      * @param theDefault
      * @param htmlMode
-     * @return
      */
     protected boolean booleanParameter(HttpServletRequest request,
             String parameter, boolean theDefault, boolean htmlMode) {

==================================================
MBeanUtils.java
index 76998ff269..09ddee7507 100644
--- a/java/org/apache/catalina/mbeans/MBeanFactory.java
+++ b/java/org/apache/catalina/mbeans/MBeanFactory.java
@@ -639,8 +639,6 @@ public class MBeanFactory {
      * @param deployOnStartup Deploy on server startup?
      * @param deployXML Should we deploy Context XML config files property?
      * @param unpackWARs Should we unpack WARs when auto deploying?
-     * @param xmlNamespaceAware Should we turn on/off XML namespace awareness?
-     * @param xmlValidation Should we turn on/off XML validation?        
      *
      * @exception Exception if an MBean cannot be created or registered
      */

==================================================
JNDIRealm.java
index c17f696d6a..a5ca8ffaec 100644
--- a/java/org/apache/catalina/mbeans/MBeanUtils.java
+++ b/java/org/apache/catalina/mbeans/MBeanUtils.java
@@ -1623,7 +1623,6 @@ public class MBeanUtils {
      * Service.
      * 
      * @param service 
-     * @return
      */
     public static String getDomain(Service service) {
         
@@ -1656,7 +1655,6 @@ public class MBeanUtils {
      * Container.
      * 
      * @param container
-     * @return
      */
     public static String getDomain(Container container) {
         

==================================================
DefaultServlet.java
index 6ce7834727..abfc05bf93 100644
--- a/java/org/apache/catalina/realm/JNDIRealm.java
+++ b/java/org/apache/catalina/realm/JNDIRealm.java
@@ -1142,7 +1142,7 @@ public class JNDIRealm extends RealmBase {
      *
      * @exception NamingException if a directory server error occurs
      *
-     * @see #getUser(DirContext, String, int)
+     * @see #getUser(DirContext, String, String, int)
      */
     protected User getUser(DirContext context, String username, String credentials)
         throws NamingException {

==================================================
ContextConfig.java
index ca1133111b..463bc467b5 100644
--- a/java/org/apache/catalina/servlets/DefaultServlet.java
+++ b/java/org/apache/catalina/servlets/DefaultServlet.java
@@ -1576,7 +1576,7 @@ public class DefaultServlet
      *
      * @param request The servlet request we are processing
      * @param response The servlet response we are creating
-     * @param resourceInfo File object
+     * @param resourceAttributes File object
      * @return boolean true if the resource meets the specified condition,
      * and false if the condition is not satisfied, in which case request
      * processing is stopped
@@ -1621,7 +1621,7 @@ public class DefaultServlet
      *
      * @param request The servlet request we are processing
      * @param response The servlet response we are creating
-     * @param resourceInfo File object
+     * @param resourceAttributes File object
      * @return boolean true if the resource meets the specified condition,
      * and false if the condition is not satisfied, in which case request
      * processing is stopped
@@ -1659,7 +1659,7 @@ public class DefaultServlet
      *
      * @param request The servlet request we are processing
      * @param response The servlet response we are creating
-     * @param resourceInfo File object
+     * @param resourceAttributes File object
      * @return boolean true if the resource meets the specified condition,
      * and false if the condition is not satisfied, in which case request
      * processing is stopped
@@ -1717,7 +1717,7 @@ public class DefaultServlet
      *
      * @param request The servlet request we are processing
      * @param response The servlet response we are creating
-     * @param resourceInfo File object
+     * @param resourceAttributes File object
      * @return boolean true if the resource meets the specified condition,
      * and false if the condition is not satisfied, in which case request
      * processing is stopped
@@ -1750,7 +1750,8 @@ public class DefaultServlet
      * output stream, and ensure that both streams are closed before returning
      * (even in the face of an exception).
      *
-     * @param resourceInfo The resource information
+     * @param cacheEntry The cache entry for the source resource
+     * @param is The input stream to read the source resource from   
      * @param ostream The output stream to write to
      *
      * @exception IOException if an input/output error occurs
@@ -1796,7 +1797,8 @@ public class DefaultServlet
      * output stream, and ensure that both streams are closed before returning
      * (even in the face of an exception).
      *
-     * @param resourceInfo The resource info
+     * @param cacheEntry The cache entry for the source resource
+     * @param is The input stream to read the source resource from   
      * @param writer The writer to write to
      *
      * @exception IOException if an input/output error occurs
@@ -1839,7 +1841,7 @@ public class DefaultServlet
      * output stream, and ensure that both streams are closed before returning
      * (even in the face of an exception).
      *
-     * @param resourceInfo The ResourceInfo object
+     * @param cacheEntry The cache entry for the source resource
      * @param ostream The output stream to write to
      * @param range Range the client wanted to retrieve
      * @exception IOException if an input/output error occurs
@@ -1870,7 +1872,7 @@ public class DefaultServlet
      * output stream, and ensure that both streams are closed before returning
      * (even in the face of an exception).
      *
-     * @param resourceInfo The ResourceInfo object
+     * @param cacheEntry The cache entry for the source resource
      * @param writer The writer to write to
      * @param range Range the client wanted to retrieve
      * @exception IOException if an input/output error occurs
@@ -1908,7 +1910,7 @@ public class DefaultServlet
      * output stream, and ensure that both streams are closed before returning
      * (even in the face of an exception).
      *
-     * @param resourceInfo The ResourceInfo object
+     * @param cacheEntry The cache entry for the source resource
      * @param ostream The output stream to write to
      * @param ranges Enumeration of the ranges the client wanted to retrieve
      * @param contentType Content type of the resource
@@ -1961,7 +1963,7 @@ public class DefaultServlet
      * output stream, and ensure that both streams are closed before returning
      * (even in the face of an exception).
      *
-     * @param resourceInfo The ResourceInfo object
+     * @param cacheEntry The cache entry for the source resource
      * @param writer The writer to write to
      * @param ranges Enumeration of the ranges the client wanted to retrieve
      * @param contentType Content type of the resource

==================================================
Embedded.java
index cfd2a5ee56..45b08cd15b 100644
--- a/java/org/apache/catalina/startup/ContextConfig.java
+++ b/java/org/apache/catalina/startup/ContextConfig.java
@@ -1554,7 +1554,6 @@ public class ContextConfig
      * @param filename  Name of the file (possibly with one or more leading path
      *                  segments) to read
      * @param path      Location that filename is relative to 
-     * @return
      */
     protected InputSource getWebXmlSource(String filename, String path) {
         File file = new File(filename);

==================================================
Tomcat.java
index 5966cece4c..17ed01cd21 100644
--- a/java/org/apache/catalina/startup/Embedded.java
+++ b/java/org/apache/catalina/startup/Embedded.java
@@ -96,7 +96,7 @@ import org.apache.tomcat.util.log.SystemLogHandler;
  * To initiate a normal shutdown, call the <code>stop()</code> method of
  * this object.
  * <p>
- * @see org.apache.catalina.startup.Catalina#main For a complete example
+ * @see org.apache.catalina.startup.Bootstrap#main For a complete example
  * of how Tomcat is set up and launched as an Embedded application.
  *
  * @author Craig R. McClanahan

==================================================
GzipInterceptor.java
index 9c25635597..43b50e511e 100644
--- a/java/org/apache/catalina/startup/Tomcat.java
+++ b/java/org/apache/catalina/startup/Tomcat.java
@@ -84,7 +84,7 @@ import org.apache.catalina.session.StandardManager;
  * see setters for doc. It can be used for simple tests and
  * demo.
  * 
- * @see TestTomcat for examples on how to use this
+ * @see <a href="http://svn.apache.org/repos/asf/tomcat/trunk/test/org/apache/catalina/startup/TestTomcat.java">TestTomcat</a>
  * @author Costin Manolache
  */
 public class Tomcat {

==================================================
DirectByteArrayOutputStream.java
index 4fab369000..2af590830a 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/GzipInterceptor.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/GzipInterceptor.java
@@ -80,7 +80,7 @@ public class GzipInterceptor extends ChannelInterceptorBase {
     }
     
     /**
-     * @todo Fix to create an automatically growing buffer.
+     * TODO Fix to create an automatically growing buffer.
      * @param data byte[]
      * @return byte[]
      * @throws IOException

==================================================
ObjectReader.java
index b3232a686c..c487d7e18d 100644
--- a/java/org/apache/catalina/tribes/io/DirectByteArrayOutputStream.java
+++ b/java/org/apache/catalina/tribes/io/DirectByteArrayOutputStream.java
@@ -41,7 +41,7 @@ public class DirectByteArrayOutputStream extends OutputStream {
      * @throws IOException if an I/O error occurs. In particular, an
      *   <code>IOException</code> may be thrown if the output stream has
      *   been closed.
-     * @todo Implement this java.io.OutputStream method
+     * TODO Implement this java.io.OutputStream method
      */
     @Override
     public void write(int b) throws IOException {

==================================================
XByteBuffer.java
index 5af6af901f..e97009c4ba 100644
--- a/java/org/apache/catalina/tribes/io/ObjectReader.java
+++ b/java/org/apache/catalina/tribes/io/ObjectReader.java
@@ -114,7 +114,7 @@ public class ObjectReader {
      * Send buffer to cluster listener (callback).
      * Is message complete receiver send message to callback?
      *
-     * @see org.apache.catalina.tribes.transport.ClusterReceiverBase#messageDataReceived(ChannelMessage)
+     * @see org.apache.catalina.tribes.transport.ReceiverBase#messageDataReceived(ChannelMessage)
      * @see XByteBuffer#doesPackageExist()
      * @see XByteBuffer#extractPackage(boolean)
      *

==================================================
AbstractReplicatedMap.java
index 171001bd95..0a940d37b3 100644
--- a/java/org/apache/catalina/tribes/io/XByteBuffer.java
+++ b/java/org/apache/catalina/tribes/io/XByteBuffer.java
@@ -83,7 +83,7 @@ public class XByteBuffer
     /**
      * Constructs a new XByteBuffer
      * @param size - the initial size of the byte buffer
-     * @todo use a pool of byte[] for performance
+     * TODO use a pool of byte[] for performance
      */
     public XByteBuffer(int size, boolean discard) {
         buf = new byte[size];

==================================================
LazyReplicatedMap.java
index b6d827a694..8a3bad07fb 100644
--- a/java/org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java
+++ b/java/org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java
@@ -483,7 +483,7 @@ public abstract class AbstractReplicatedMap extends ConcurrentHashMap implements
     }
 
     /**
-     * @todo implement state transfer
+     * TODO implement state transfer
      * @param msg Serializable
      * @return Serializable - null if no reply should be sent
      */

==================================================
ReplicatedMap.java
index 393b66756e..4ee963a70a 100644
--- a/java/org/apache/catalina/tribes/tipis/LazyReplicatedMap.java
+++ b/java/org/apache/catalina/tribes/tipis/LazyReplicatedMap.java
@@ -60,7 +60,7 @@ import org.apache.juli.logging.LogFactory;
  * 
  * <br><br><b>REMBER TO CALL <code>breakdown()</code> or <code>finalize()</code> when you are done with the map to 
  * avoid memory leaks.<br><br>
- * @todo implement periodic sync/transfer thread
+ * TODO implement periodic sync/transfer thread
  * @author Filip Hanik
  * @version 1.0
  */

==================================================
AbstractSender.java
index 776a10df15..0215c41da9 100644
--- a/java/org/apache/catalina/tribes/tipis/ReplicatedMap.java
+++ b/java/org/apache/catalina/tribes/tipis/ReplicatedMap.java
@@ -39,11 +39,11 @@ import org.apache.catalina.tribes.Member;
  *
  * <br><br><b>REMBER TO CALL <code>breakdown()</code> or <code>finalize()</code> when you are done with the map to
  * avoid memory leaks.<br><br>
- * @todo implement periodic sync/transfer thread
+ * TODO implement periodic sync/transfer thread
  * @author Filip Hanik
  * @version 1.0
  * 
- * @todo memberDisappeared, should do nothing except change map membership
+ * TODO memberDisappeared, should do nothing except change map membership
  *       by default it relocates the primary objects
  */
 public class ReplicatedMap extends AbstractReplicatedMap {

==================================================
ReceiverBase.java
index 258dbdaeea..5424550278 100644
--- a/java/org/apache/catalina/tribes/transport/AbstractSender.java
+++ b/java/org/apache/catalina/tribes/transport/AbstractSender.java
@@ -99,14 +99,14 @@ public abstract class AbstractSender implements DataSender {
      * connect
      *
      * @throws IOException
-     * @todo Implement this org.apache.catalina.tribes.transport.DataSender method
+     * TODO Implement this org.apache.catalina.tribes.transport.DataSender method
      */
     public abstract void connect() throws IOException;
 
     /**
      * disconnect
      *
-     * @todo Implement this org.apache.catalina.tribes.transport.DataSender method
+     * TODO Implement this org.apache.catalina.tribes.transport.DataSender method
      */
     public abstract void disconnect();
 
@@ -114,7 +114,7 @@ public abstract class AbstractSender implements DataSender {
      * keepalive
      *
      * @return boolean
-     * @todo Implement this org.apache.catalina.tribes.transport.DataSender method
+     * TODO Implement this org.apache.catalina.tribes.transport.DataSender method
      */
     public boolean keepalive() {
         boolean disconnect = false;

==================================================
ReplicationTransmitter.java
index 1dd8c8fb64..5be2921c95 100644
--- a/java/org/apache/catalina/tribes/transport/ReceiverBase.java
+++ b/java/org/apache/catalina/tribes/transport/ReceiverBase.java
@@ -106,7 +106,7 @@ public abstract class ReceiverBase implements ChannelReceiver, ListenCallback, R
      * getMessageListener
      *
      * @return MessageListener
-     * @todo Implement this org.apache.catalina.tribes.ChannelReceiver method
+     * TODO Implement this org.apache.catalina.tribes.ChannelReceiver method
      */
     public MessageListener getMessageListener() {
         return listener;
@@ -115,7 +115,7 @@ public abstract class ReceiverBase implements ChannelReceiver, ListenCallback, R
     /**
      *
      * @return The port
-     * @todo Implement this org.apache.catalina.tribes.ChannelReceiver method
+     * TODO Implement this org.apache.catalina.tribes.ChannelReceiver method
      */
     public int getPort() {
         return port;
@@ -142,7 +142,7 @@ public abstract class ReceiverBase implements ChannelReceiver, ListenCallback, R
      * setMessageListener
      *
      * @param listener MessageListener
-     * @todo Implement this org.apache.catalina.tribes.ChannelReceiver method
+     * TODO Implement this org.apache.catalina.tribes.ChannelReceiver method
      */
     public void setMessageListener(MessageListener listener) {
         this.listener = listener;
@@ -239,7 +239,7 @@ public abstract class ReceiverBase implements ChannelReceiver, ListenCallback, R
      * @param socket
      * @param portstart
      * @param retries
-     * @return
+     * @return int
      * @throws IOException
      */
     protected int bindUdp(DatagramSocket socket, int portstart, int retries) throws IOException {

==================================================
BioReceiver.java
index 49f4d80a9e..95f159a52f 100644
--- a/java/org/apache/catalina/tribes/transport/ReplicationTransmitter.java
+++ b/java/org/apache/catalina/tribes/transport/ReplicationTransmitter.java
@@ -72,7 +72,7 @@ public class ReplicationTransmitter implements ChannelSender {
     
     /**
      * Send data to one member
-     * @see org.apache.catalina.tribes.ClusterSender#sendMessage(org.apache.catalina.tribes.ClusterMessage, org.apache.catalina.tribes.Member)
+     * @see org.apache.catalina.tribes.ChannelSender#sendMessage(org.apache.catalina.tribes.ChannelMessage, org.apache.catalina.tribes.Member[])
      */
     public void sendMessage(ChannelMessage message, Member[] destination) throws ChannelException {
         MultiPointSender sender = getTransport();
@@ -83,16 +83,16 @@ public class ReplicationTransmitter implements ChannelSender {
     /**
      * start the sender and register transmitter mbean
      * 
-     * @see org.apache.catalina.tribes.ClusterSender#start()
+     * @see org.apache.catalina.tribes.ChannelSender#start()
      */
     public void start() throws java.io.IOException {
         getTransport().connect();
     }
 
-    /*
+    /**
      * stop the sender and deregister mbeans (transmitter, senders)
      * 
-     * @see org.apache.catalina.tribes.ClusterSender#stop()
+     * @see org.apache.catalina.tribes.ChannelSender#stop()
      */
     public synchronized void stop() {
         getTransport().disconnect();
@@ -101,9 +101,9 @@ public class ReplicationTransmitter implements ChannelSender {
     /**
      * Call transmitter to check for sender socket status
      * 
-     * @see SimpleTcpCluster#backgroundProcess()
+     * @see org.apache.catalina.ha.tcp.SimpleTcpCluster#backgroundProcess()
      */
-
+    @Override
     public void heartbeat() {
         if (getTransport()!=null) getTransport().keepalive();
     }
@@ -112,7 +112,7 @@ public class ReplicationTransmitter implements ChannelSender {
      * add new cluster member and create sender ( s. replicationMode) transfer
      * current properties to sender
      * 
-     * @see org.apache.catalina.tribes.ClusterSender#add(org.apache.catalina.tribes.Member)
+     * @see org.apache.catalina.tribes.ChannelSender#add(org.apache.catalina.tribes.Member)
      */
     public synchronized void add(Member member) {
         getTransport().add(member);
@@ -121,7 +121,7 @@ public class ReplicationTransmitter implements ChannelSender {
     /**
      * remove sender from transmitter. ( deregister mbean and disconnect sender )
      * 
-     * @see org.apache.catalina.tribes.ClusterSender#remove(org.apache.catalina.tribes.Member)
+     * @see org.apache.catalina.tribes.ChannelSender#remove(org.apache.catalina.tribes.Member)
      */
     public synchronized void remove(Member member) {
         getTransport().remove(member);

==================================================
BioReplicationTask.java
index 7d6601ab2c..ff4359f062 100644
--- a/java/org/apache/catalina/tribes/transport/bio/BioReceiver.java
+++ b/java/org/apache/catalina/tribes/transport/bio/BioReceiver.java
@@ -45,7 +45,7 @@ public class BioReceiver extends ReceiverBase implements Runnable {
     /**
      *
      * @throws IOException
-     * @todo Implement this org.apache.catalina.tribes.ChannelReceiver method
+     * TODO Implement this org.apache.catalina.tribes.ChannelReceiver method
      */
     @Override
     public void start() throws IOException {
@@ -83,7 +83,7 @@ public class BioReceiver extends ReceiverBase implements Runnable {
 
     /**
      *
-     * @todo Implement this org.apache.catalina.tribes.ChannelReceiver method
+     * TODO Implement this org.apache.catalina.tribes.ChannelReceiver method
      */
     @Override
     public void stop() {

==================================================
BioSender.java
index 06d3e87c9e..6ae02c9559 100644
--- a/java/org/apache/catalina/tribes/transport/bio/BioReplicationTask.java
+++ b/java/org/apache/catalina/tribes/transport/bio/BioReplicationTask.java
@@ -141,8 +141,7 @@ public class BioReplicationTask extends AbstractRxTask {
 
     /**
      * send a reply-acknowledgment (6,2,3)
-     * @param key
-     * @param channel
+     * @param command
      */
     protected void sendAck(byte[] command) {
         try {

==================================================
MultipointBioSender.java
index 08b983e9a6..4f38cfeb4f 100644
--- a/java/org/apache/catalina/tribes/transport/bio/BioSender.java
+++ b/java/org/apache/catalina/tribes/transport/bio/BioSender.java
@@ -28,7 +28,6 @@ import org.apache.catalina.tribes.RemoteProcessException;
 import org.apache.catalina.tribes.io.XByteBuffer;
 import org.apache.catalina.tribes.transport.AbstractSender;
 import org.apache.catalina.tribes.transport.Constants;
-import org.apache.catalina.tribes.transport.DataSender;
 import org.apache.catalina.tribes.transport.SenderState;
 import org.apache.catalina.tribes.util.StringManager;
 
@@ -89,7 +88,7 @@ public class BioSender extends AbstractSender {
 
     /**
      * Connect other cluster member receiver 
-     * @see org.apache.catalina.tribes.transport.IDataSender#connect()
+     * @see org.apache.catalina.tribes.transport.DataSender#connect()
      */
     @Override
     public  void connect() throws IOException {
@@ -100,7 +99,7 @@ public class BioSender extends AbstractSender {
     /**
      * disconnect and close socket
      * 
-     * @see IDataSender#disconnect()
+     * @see org.apache.catalina.tribes.transport.DataSender#disconnect()
      */
     @Override
     public  void disconnect() {
@@ -114,10 +113,7 @@ public class BioSender extends AbstractSender {
     }
 
     /**
-     * Send message
-     * 
-     * @see org.apache.catalina.tribes.transport.IDataSender#sendMessage(,
-     *      ChannelMessage)
+     * Send message.
      */
     public  void sendMessage(byte[] data, boolean waitForAck) throws IOException {
         IOException exception = null;
@@ -197,10 +193,9 @@ public class BioSender extends AbstractSender {
      }
 
     /**
-     * close socket
+     * Close socket.
      * 
-     * @see DataSender#disconnect()
-     * @see DataSender#closeSocket()
+     * @see #disconnect()
      */
     protected void closeSocket() {
         if(isConnected()) {
@@ -232,7 +227,7 @@ public class BioSender extends AbstractSender {
      * 
      * @see #closeSocket()
      * @see #openSocket()
-     * @see #writeData(ChannelMessage)
+     * @see #sendMessage(byte[], boolean)
      * 
      * @param data
      *            data to send
@@ -251,9 +246,8 @@ public class BioSender extends AbstractSender {
     }
     
     /**
-     * Wait for Acknowledgment from other server
+     * Wait for Acknowledgement from other server.
      * FIXME Please, not wait only for three characters, better control that the wait ack message is correct.
-     * @param timeout
      * @throws java.io.IOException
      * @throws java.net.SocketTimeoutException
      */

==================================================
PooledMultiSender.java
index 4fa8d13b5b..d7f7752d74 100644
--- a/java/org/apache/catalina/tribes/transport/bio/MultipointBioSender.java
+++ b/java/org/apache/catalina/tribes/transport/bio/MultipointBioSender.java
@@ -44,6 +44,7 @@ public class MultipointBioSender extends AbstractSender implements MultiPointSen
     protected HashMap<Member, BioSender> bioSenders =
         new HashMap<Member, BioSender>();
 
+    @Override
     public synchronized void sendMessage(Member[] destination, ChannelMessage msg) throws ChannelException {
         byte[] data = XByteBuffer.createDataPackage((ChannelData)msg);
         BioSender[] senders = setupForSend(destination);

==================================================
FastQueue.java
index cd45251305..362eb53770 100644
--- a/java/org/apache/catalina/tribes/transport/bio/PooledMultiSender.java
+++ b/java/org/apache/catalina/tribes/transport/bio/PooledMultiSender.java
@@ -61,7 +61,7 @@ public class PooledMultiSender extends PooledSender {
      * getNewDataSender
      *
      * @return DataSender
-     * @todo Implement this org.apache.catalina.tribes.transport.PooledSender
+     * TODO Implement this org.apache.catalina.tribes.transport.PooledSender
      *   method
      */
     @Override

==================================================
NioReceiver.java
index dc042432e0..78c058cc64 100644
--- a/java/org/apache/catalina/tribes/transport/bio/util/FastQueue.java
+++ b/java/org/apache/catalina/tribes/transport/bio/util/FastQueue.java
@@ -144,11 +144,6 @@ public class FastQueue {
         lock.setRemoveWaitTimeout(removeWaitTimeout);
     }
 
-    /**
-     * get Max Queue length
-     * 
-     * @see org.apache.catalina.tribes.util.IQueue#getMaxQueueLength()
-     */
     public int getMaxQueueLength() {
         return maxQueueLength;
     }
@@ -236,8 +231,8 @@ public class FastQueue {
     }
 
     /**
-     * Add new data to the queue
-     * @see org.apache.catalina.tribes.util.IQueue#add(java.lang.String, java.lang.Object)
+     * Add new data to the queue.
+     * 
      * FIXME extract some method
      */
     public boolean add(ChannelMessage msg, Member[] destination, InterceptorPayload payload) {
@@ -307,8 +302,7 @@ public class FastQueue {
     }
 
     /**
-     * remove the complete queued object list
-     * @see org.apache.catalina.tribes.util.IQueue#remove()
+     * Remove the complete queued object list.
      * FIXME extract some method
      */
     public LinkObject remove() {

==================================================
NioSender.java
index b216ad6f5b..f2d8a45b47 100644
--- a/java/org/apache/catalina/tribes/transport/nio/NioReceiver.java
+++ b/java/org/apache/catalina/tribes/transport/nio/NioReceiver.java
@@ -91,7 +91,7 @@ public class NioReceiver extends ReceiverBase implements Runnable {
     /**
      * start cluster receiver
      * @throws IOException
-     * @see org.apache.catalina.tribes.ClusterReceiver#start()
+     * @see org.apache.catalina.tribes.ChannelReceiver#start()
      */
     @Override
     public void start() throws IOException {
@@ -345,7 +345,7 @@ public class NioReceiver extends ReceiverBase implements Runnable {
     /**
      * Close Selector.
      *
-     * @see org.apache.catalina.tribes.transport.ClusterReceiverBase#stopListening()
+     * @see org.apache.catalina.tribes.transport.ReceiverBase#stop()
      */
     protected void stopListening() {
         setListen(false);

==================================================
ActionCode.java
index 16813f94da..4c6a1223aa 100644
--- a/java/org/apache/catalina/tribes/transport/nio/NioSender.java
+++ b/java/org/apache/catalina/tribes/transport/nio/NioSender.java
@@ -211,7 +211,7 @@ public class NioSender extends AbstractSender {
      * connect - blocking in this operation
      *
      * @throws IOException
-     * @todo Implement this org.apache.catalina.tribes.transport.IDataSender method
+     * TODO Implement this org.apache.catalina.tribes.transport.IDataSender method
      */
     @Override
     public synchronized void connect() throws IOException {
@@ -256,7 +256,7 @@ public class NioSender extends AbstractSender {
     /**
      * disconnect
      *
-     * @todo Implement this org.apache.catalina.tribes.transport.IDataSender method
+     * TODO Implement this org.apache.catalina.tribes.transport.IDataSender method
      */
     @Override
     public void disconnect() {
@@ -328,7 +328,7 @@ public class NioSender extends AbstractSender {
     *
     * @param data ChannelMessage
     * @throws IOException
-    * @todo Implement this org.apache.catalina.tribes.transport.IDataSender method
+    * TODO Implement this org.apache.catalina.tribes.transport.IDataSender method
     */
    public synchronized void setMessage(byte[] data) throws IOException {
        setMessage(data,0,data.length);

==================================================
OutputBuffer.java
index 8650f33397..a2b7b3eb87 100644
--- a/java/org/apache/coyote/ActionCode.java
+++ b/java/org/apache/coyote/ActionCode.java
@@ -171,7 +171,7 @@ public final class ActionCode {
      */
     public static final ActionCode ACTION_ASYNC_COMPLETE = new ActionCode(27);
     /**
-     * Callback for an async call to {@link javax.servlet.ServletRequest#setAsyncTimeout(long)}
+     * Callback for an async call to {@link javax.servlet.AsyncContext#setTimeout(long)}
      */
     public static final ActionCode ACTION_ASYNC_SETTIMEOUT = new ActionCode(28);
     

==================================================
Http11Processor.java
index 4f6c647510..09fe53adc5 100644
--- a/java/org/apache/coyote/OutputBuffer.java
+++ b/java/org/apache/coyote/OutputBuffer.java
@@ -33,11 +33,11 @@ import org.apache.tomcat.util.buf.ByteChunk;
 public interface OutputBuffer {
 
 
-    /** Write the response. The caller ( tomcat ) owns the chunks.
+    /**
+     * Write the response. The caller ( tomcat ) owns the chunks.
      *
      * @param chunk data to write
      * @param response used to allow buffers that can be shared by multiple responses.
-     * @return
      * @throws IOException
      */
     public int doWrite(ByteChunk chunk, Response response)

==================================================
InternalNioOutputBuffer.java
index e0c7f13d8c..3fdbad0b19 100644
--- a/java/org/apache/coyote/http11/Http11Processor.java
+++ b/java/org/apache/coyote/http11/Http11Processor.java
@@ -1053,7 +1053,6 @@ public class Http11Processor extends AbstractHttp11Processor implements ActionHo
 
     /**
      * Set the socket buffer flag.
-     * @Override
      */
     @Override
     public void setSocketBuffer(int socketBuffer) {

==================================================
ELSupport.java
index 07276089a3..ffa17d2e31 100644
--- a/java/org/apache/coyote/http11/InternalNioOutputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalNioOutputBuffer.java
@@ -199,7 +199,7 @@ public class InternalNioOutputBuffer extends AbstractOutputBuffer {
      * @param flip boolean
      * @return int
      * @throws IOException
-     * @todo Fix non blocking write properly
+     * TODO Fix non blocking write properly
      */
     private synchronized int writeToSocket(ByteBuffer bytebuffer, boolean block, boolean flip) throws IOException {
         if ( flip ) bytebuffer.flip();

==================================================
ReflectionUtil.java
index ba25253ef2..dcb0089a4b 100644
--- a/java/org/apache/el/lang/ELSupport.java
+++ b/java/org/apache/el/lang/ELSupport.java
@@ -173,11 +173,6 @@ public class ELSupport {
         }
     }
 
-    /**
-     * @param obj
-     * @param type
-     * @return
-     */
     public final static Enum<?> coerceToEnum(final Object obj, Class type) {
         if (obj == null || "".equals(obj)) {
             return null;

==================================================
JspUtil.java
index ca53f0e1b7..83331f4632 100644
--- a/java/org/apache/el/util/ReflectionUtil.java
+++ b/java/org/apache/el/util/ReflectionUtil.java
@@ -50,9 +50,6 @@ public class ReflectionUtil {
             byte.class, char.class, double.class, float.class, int.class,
             long.class, short.class, Void.TYPE };
 
-    /**
-     * 
-     */
     private ReflectionUtil() {
         super();
     }
@@ -87,7 +84,6 @@ public class ReflectionUtil {
     /**
      * Converts an array of Class names to Class types
      * @param s
-     * @return
      * @throws ClassNotFoundException
      */
     public static Class<?>[] toTypeArray(String[] s) throws ClassNotFoundException {
@@ -103,7 +99,6 @@ public class ReflectionUtil {
     /**
      * Converts an array of Class types to Class names
      * @param c
-     * @return
      */
     public static String[] toTypeNameArray(Class<?>[] c) {
         if (c == null)
@@ -300,13 +295,6 @@ public class ReflectionUtil {
         return null;
     }
 
-    /**
-     * @param base
-     * @param property
-     * @return
-     * @throws ELException
-     * @throws PropertyNotFoundException
-     */
     public static PropertyDescriptor getPropertyDescriptor(Object base,
             Object property) throws ELException, PropertyNotFoundException {
         String name = ELSupport.coerceToString(property);

==================================================
Constants.java
index 14761ff473..a8a106f3e9 100644
--- a/java/org/apache/jasper/compiler/JspUtil.java
+++ b/java/org/apache/jasper/compiler/JspUtil.java
@@ -897,7 +897,6 @@ public class JspUtil {
      * 'int[]' -> 'int[].class'
      * 
      * @param type
-     * @return
      */
     public static String toJavaSourceTypeFromTld(String type) {
         if (type == null || "void".equals(type)) {

==================================================
AnnotationEntry.java
index c4fca620bb..59c5cb34dc 100644
--- a/java/org/apache/tomcat/util/bcel/Constants.java
+++ b/java/org/apache/tomcat/util/bcel/Constants.java
@@ -25,34 +25,28 @@ package org.apache.tomcat.util.bcel;
  */
 public interface Constants {
 
-    /** One of the access flags for fields, methods, or classes.
-   *  @see #ACC_PUBLIC
+  /** One of the access flags for fields, methods, or classes.
    */
   public final static short ACC_FINAL        = 0x0010;
 
   /** One of the access flags for fields, methods, or classes.
-   *  @see #ACC_PUBLIC
    */
   public final static short ACC_INTERFACE    = 0x0200;
 
   /** One of the access flags for fields, methods, or classes.
-   *  @see #ACC_PUBLIC
    */
   public final static short ACC_ABSTRACT     = 0x0400;
 
   /** One of the access flags for fields, methods, or classes.
-   *  @see #ACC_PUBLIC
    */
   public final static short ACC_ENUM         = 0x4000;
 
   // Applies to classes compiled by new compilers only
   /** One of the access flags for fields, methods, or classes.
-   *  @see #ACC_PUBLIC
    */
   public final static short ACC_SUPER        = 0x0020;
 
   /** One of the access flags for fields, methods, or classes.
-   *  @see #ACC_PUBLIC
    */
   public final static short MAX_ACC_FLAG     = ACC_ENUM;
 

==================================================
AttributeReader.java
index 8c096c7ea7..def10aa3ee 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/AnnotationEntry.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/AnnotationEntry.java
@@ -49,7 +49,6 @@ public class AnnotationEntry implements Constants, Serializable {
      * @param file
      * @param constant_pool
      * @param isRuntimeVisible
-     * @return
      * @throws IOException
      */
     public static AnnotationEntry read(DataInputStream file, ConstantPool constant_pool, boolean isRuntimeVisible) throws IOException {

==================================================
JavaClass.java
index 44c824fb88..e596ebbafb 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/AttributeReader.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/AttributeReader.java
@@ -51,8 +51,6 @@ public interface AttributeReader {
      @return The user-defined AttributeReader should take this data and use
      it to construct an attribute.  In the case of errors, a null can be
      returned which will cause the parsing of the class file to fail.
-
-     @see Attribute#addAttributeReader( String, AttributeReader )
      */
     public Attribute createAttribute( int name_index, int length, java.io.DataInputStream file,
             ConstantPool constant_pool );

==================================================
ByteChunk.java
index 15befb500a..42d2aee4fe 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/JavaClass.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/JavaClass.java
@@ -89,7 +89,6 @@ public class JavaClass extends AccessFlags implements Cloneable, Comparable {
      * @param fields Class fields
      * @param methods Class methods
      * @param attributes Class attributes
-     * @param source Read from file or generated in memory?
      */
     public JavaClass(int class_name_index, int superclass_name_index, String file_name, int major,
             int minor, int access_flags, ConstantPool constant_pool, int[] interfaces,

==================================================
FileItem.java
index 53edd4e59b..350a9332cd 100644
--- a/java/org/apache/tomcat/util/buf/ByteChunk.java
+++ b/java/org/apache/tomcat/util/buf/ByteChunk.java
@@ -828,7 +828,7 @@ public final class ByteChunk implements Cloneable, Serializable {
      * @param bytes The byte array to search
      * @param start The point to start searching from in the byte array
      * @param end   The point to stop searching in the byte array
-     * @param c     The list of bytes to search for 
+     * @param b     The list of bytes to search for 
      * @return      The position of the first instance a byte that is not
      *                  in the list of bytes to search for or -1 if no such byte
      *                  is found.

==================================================
FileUpload.java
index be64060f61..3ca227a30c 100644
--- a/java/org/apache/tomcat/util/http/fileupload/FileItem.java
+++ b/java/org/apache/tomcat/util/http/fileupload/FileItem.java
@@ -28,8 +28,8 @@ import java.io.UnsupportedEncodingException;
  * <code>multipart/form-data</code> POST request.
  *
  * <p> After retrieving an instance of this class from a {@link
- * org.apache.commons.fileupload.FileUpload FileUpload} instance (see
- * {@link org.apache.commons.fileupload.FileUpload
+ * org.apache.tomcat.util.http.fileupload.FileUpload FileUpload} instance (see
+ * {@link org.apache.tomcat.util.http.fileupload.FileUpload
  * #parseRequest(javax.servlet.http.HttpServletRequest)}), you may
  * either request all contents of the file at once using {@link #get()} or
  * request an {@link java.io.InputStream InputStream} with

==================================================
FileUploadBase.java
index edabd66183..b2e93e36c2 100644
--- a/java/org/apache/tomcat/util/http/fileupload/FileUpload.java
+++ b/java/org/apache/tomcat/util/http/fileupload/FileUpload.java
@@ -23,8 +23,8 @@ package org.apache.tomcat.util.http.fileupload;
  * <p>This class handles multiple files per single HTML widget, sent using
  * <code>multipart/mixed</code> encoding type, as specified by
  * <a href="http://www.ietf.org/rfc/rfc1867.txt">RFC 1867</a>.  Use {@link
- * #parseRequest(javax.servlet.http.HttpServletRequest)} to acquire a list
- * of {@link org.apache.commons.fileupload.FileItem FileItems} associated
+ * #parseRequest(RequestContext)} to acquire a list
+ * of {@link org.apache.tomcat.util.http.fileupload.FileItem FileItems} associated
  * with a given HTML widget.</p>
  *
  * <p>How the data for individual parts is stored is determined by the factory

==================================================
ParameterParser.java
index a7ecac9078..e304d118b4 100644
--- a/java/org/apache/tomcat/util/http/fileupload/FileUploadBase.java
+++ b/java/org/apache/tomcat/util/http/fileupload/FileUploadBase.java
@@ -41,8 +41,8 @@ import org.apache.tomcat.util.http.fileupload.util.Streams;
  * <p>This class handles multiple files per single HTML widget, sent using
  * <code>multipart/mixed</code> encoding type, as specified by
  * <a href="http://www.ietf.org/rfc/rfc1867.txt">RFC 1867</a>.  Use {@link
- * #parseRequest(HttpServletRequest)} to acquire a list of {@link
- * org.apache.commons.fileupload.FileItem}s associated with a given HTML
+ * #parseRequest(RequestContext)} to acquire a list of {@link
+ * org.apache.tomcat.util.http.fileupload.FileItem}s associated with a given HTML
  * widget.</p>
  *
  * <p>How the data for individual parts is stored is determined by the factory

==================================================
DiskFileItem.java
index d62e5c0feb..42dadc229f 100644
--- a/java/org/apache/tomcat/util/http/fileupload/ParameterParser.java
+++ b/java/org/apache/tomcat/util/http/fileupload/ParameterParser.java
@@ -265,7 +265,7 @@ public class ParameterParser {
      * Extracts a map of name/value pairs from the given array of
      * characters. Names are expected to be unique.
      *
-     * @param chars the array of characters that contains a sequence of
+     * @param inputChars the array of characters that contains a sequence of
      * name/value pairs
      * @param separator the name/value pairs separator
      *
@@ -282,7 +282,7 @@ public class ParameterParser {
      * Extracts a map of name/value pairs from the given array of
      * characters. Names are expected to be unique.
      *
-     * @param chars the array of characters that contains a sequence of
+     * @param inputChars the array of characters that contains a sequence of
      * name/value pairs
      * @param offset - the initial offset.
      * @param length - the length.

==================================================
DiskFileItemFactory.java
index 039d9951a2..c91dac3603 100644
--- a/java/org/apache/tomcat/util/http/fileupload/disk/DiskFileItem.java
+++ b/java/org/apache/tomcat/util/http/fileupload/disk/DiskFileItem.java
@@ -38,17 +38,18 @@ import org.apache.tomcat.util.http.fileupload.FileUploadException;
 import org.apache.tomcat.util.http.fileupload.InvalidFileNameException;
 import org.apache.tomcat.util.http.fileupload.IOUtils;
 import org.apache.tomcat.util.http.fileupload.ParameterParser;
+import org.apache.tomcat.util.http.fileupload.RequestContext;
 import org.apache.tomcat.util.http.fileupload.util.Streams;
 
 
 /**
  * <p> The default implementation of the
- * {@link org.apache.commons.fileupload.FileItem FileItem} interface.
+ * {@link org.apache.tomcat.util.http.fileupload.FileItem FileItem} interface.
  *
  * <p> After retrieving an instance of this class from a {@link
- * org.apache.commons.fileupload.DiskFileUpload DiskFileUpload} instance (see
- * {@link org.apache.commons.fileupload.DiskFileUpload
- * #parseRequest(javax.servlet.http.HttpServletRequest)}), you may
+ * org.apache.tomcat.util.http.fileupload.FileUpload FileUpload} instance (see
+ * {@link org.apache.tomcat.util.http.fileupload.FileUpload
+ * #parseRequest(RequestContext)}), you may
  * either request all contents of file at once using {@link #get()} or
  * request an {@link java.io.InputStream InputStream} with
  * {@link #getInputStream()} and process the file without attempting to load
@@ -56,7 +57,8 @@ import org.apache.tomcat.util.http.fileupload.util.Streams;
  *
  * <p>Temporary files, which are created for file items, should be
  * deleted later on. The best way to do this is using a
- * {@link FileCleaningTracker}, which you can set on the
+ * {@link org.apache.tomcat.util.http.fileupload.FileCleaningTracker
+ * FileCleaningTracker}, which you can set on the
  * {@link DiskFileItemFactory}. However, if you do use such a tracker,
  * then you must consider the following: Temporary files are automatically
  * deleted as soon as they are no longer needed. (More precisely, when the
@@ -382,7 +384,7 @@ public class DiskFileItem
      *
      * @return The contents of the file, as a string.
      *
-     * @todo Consider making this method throw UnsupportedEncodingException.
+     * TODO Consider making this method throw UnsupportedEncodingException.
      */
     public String getString() {
         byte[] rawdata = get();

==================================================
ServletFileUpload.java
index 88c2540d2b..31e6414e69 100644
--- a/java/org/apache/tomcat/util/http/fileupload/package.html
+++ b/java/org/apache/tomcat/util/http/fileupload/package.html
@@ -17,7 +17,9 @@
 <!-- $Id$ -->
 <html>
   <head>
-    <title>Overview of the org.apache.commons.fileupload component</title>
+    <title>
+      Overview of the org.apache.tomcat.util.http.fileupload component
+    </title>
   </head>
   <body>
     <p><b>NOTE:</b> This code has been copied from commons-fileupload 1.2.1 and
@@ -34,14 +36,12 @@
       While this package provides the generic functionality for file uploads,
       these classes are not typically used directly. Instead, normal usage
       involves one of the provided extensions of
-      {@link org.apache.commons.fileupload.FileUpload FileUpload} such as
-      {@link org.apache.commons.fileupload.servlet.ServletFileUpload ServletFileUpload}
-      or
-      {@link org.apache.commons.fileupload.portlet.PortletFileUpload PortletFileUpload},
+      {@link org.apache.tomcat.util.http.fileupload.FileUpload FileUpload} such as
+      {@link org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload ServletFileUpload}
       together with a factory for 
-      {@link org.apache.commons.fileupload.FileItem FileItem} instances,
+      {@link org.apache.tomcat.util.http.fileupload.FileItem FileItem} instances,
       such as
-      {@link org.apache.commons.fileupload.disk.DiskFileItemFactory DiskFileItemFactory}.
+      {@link org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory DiskFileItemFactory}.
     </p>
     <p>
       The following is a brief example of typical usage in a servlet, storing

==================================================
Streams.java
index a95cc75ac0..1215b44b15 100644
--- a/java/org/apache/tomcat/util/http/fileupload/servlet/ServletFileUpload.java
+++ b/java/org/apache/tomcat/util/http/fileupload/servlet/ServletFileUpload.java
@@ -36,7 +36,7 @@ import org.apache.tomcat.util.http.fileupload.FileUploadException;
  * <code>multipart/mixed</code> encoding type, as specified by
  * <a href="http://www.ietf.org/rfc/rfc1867.txt">RFC 1867</a>.  Use {@link
  * #parseRequest(HttpServletRequest)} to acquire a list of {@link
- * org.apache.commons.fileupload.FileItem}s associated with a given HTML
+ * org.apache.tomcat.util.http.fileupload.FileItem}s associated with a given HTML
  * widget.</p>
  *
  * <p>How the data for individual parts is stored is determined by the factory

==================================================
NioChannel.java
index 46636cae74..20b04845c5 100644
--- a/java/org/apache/tomcat/util/http/fileupload/util/Streams.java
+++ b/java/org/apache/tomcat/util/http/fileupload/util/Streams.java
@@ -135,7 +135,7 @@ public final class Streams {
 
     /**
      * This convenience method allows to read a
-     * {@link org.apache.commons.fileupload.FileItemStream}'s
+     * {@link org.apache.tomcat.util.http.fileupload.FileItemStream}'s
      * content into a string. The platform's default character encoding
      * is used for converting bytes into characters.
      * @param pStream The input stream to read.
@@ -151,7 +151,7 @@ public final class Streams {
 
     /**
      * This convenience method allows to read a
-     * {@link org.apache.commons.fileupload.FileItemStream}'s
+     * {@link org.apache.tomcat.util.http.fileupload.FileItemStream}'s
      * content into a string, using the given character encoding.
      * @param pStream The input stream to read.
      * @param pEncoding The character encoding, typically "UTF-8".

==================================================
NioEndpoint.java
index 298feed568..7d714078b2 100644
--- a/java/org/apache/tomcat/util/net/NioChannel.java
+++ b/java/org/apache/tomcat/util/net/NioChannel.java
@@ -84,7 +84,7 @@ public class NioChannel implements ByteChannel{
      * Closes this channel.
      *
      * @throws IOException If an I/O error occurs
-     * @todo Implement this java.nio.channels.Channel method
+     * TODO Implement this java.nio.channels.Channel method
      */
     public void close() throws IOException {
         getIOChannel().socket().close();
@@ -98,7 +98,7 @@ public class NioChannel implements ByteChannel{
      * Tells whether or not this channel is open.
      *
      * @return <tt>true</tt> if, and only if, this channel is open
-     * @todo Implement this java.nio.channels.Channel method
+     * TODO Implement this java.nio.channels.Channel method
      */
     public boolean isOpen() {
         return sc.isOpen();
@@ -110,7 +110,7 @@ public class NioChannel implements ByteChannel{
      * @param src The buffer from which bytes are to be retrieved
      * @return The number of bytes written, possibly zero
      * @throws IOException If some other I/O error occurs
-     * @todo Implement this java.nio.channels.WritableByteChannel method
+     * TODO Implement this java.nio.channels.WritableByteChannel method
      */
     public int write(ByteBuffer src) throws IOException {
         return sc.write(src);
@@ -122,7 +122,7 @@ public class NioChannel implements ByteChannel{
      * @param dst The buffer into which bytes are to be transferred
      * @return The number of bytes read, possibly zero, or <tt>-1</tt> if the channel has reached end-of-stream
      * @throws IOException If some other I/O error occurs
-     * @todo Implement this java.nio.channels.ReadableByteChannel method
+     * TODO Implement this java.nio.channels.ReadableByteChannel method
      */
     public int read(ByteBuffer dst) throws IOException {
         return sc.read(dst);
@@ -140,7 +140,7 @@ public class NioChannel implements ByteChannel{
      * getBufHandler
      *
      * @return ApplicationBufferHandler
-     * @todo Implement this org.apache.tomcat.util.net.SecureNioChannel method
+     * TODO Implement this org.apache.tomcat.util.net.SecureNioChannel method
      */
     public ApplicationBufferHandler getBufHandler() {
         return bufHandler;
@@ -153,7 +153,7 @@ public class NioChannel implements ByteChannel{
      * getIOChannel
      *
      * @return SocketChannel
-     * @todo Implement this org.apache.tomcat.util.net.SecureNioChannel method
+     * TODO Implement this org.apache.tomcat.util.net.SecureNioChannel method
      */
     public SocketChannel getIOChannel() {
         return sc;
@@ -163,7 +163,7 @@ public class NioChannel implements ByteChannel{
      * isClosing
      *
      * @return boolean
-     * @todo Implement this org.apache.tomcat.util.net.SecureNioChannel method
+     * TODO Implement this org.apache.tomcat.util.net.SecureNioChannel method
      */
     public boolean isClosing() {
         return false;
@@ -173,7 +173,7 @@ public class NioChannel implements ByteChannel{
      * isInitHandshakeComplete
      *
      * @return boolean
-     * @todo Implement this org.apache.tomcat.util.net.SecureNioChannel method
+     * TODO Implement this org.apache.tomcat.util.net.SecureNioChannel method
      */
     public boolean isInitHandshakeComplete() {
         return true;
@@ -202,7 +202,6 @@ public class NioChannel implements ByteChannel{
     
     /**
      * Return true if the buffer wrote data
-     * @return
      * @throws IOException
      */
     public boolean flushOutbound() throws IOException {

==================================================
SecureNioChannel.java
index 4692c9c6fe..1a452483e6 100644
--- a/java/org/apache/tomcat/util/net/NioEndpoint.java
+++ b/java/org/apache/tomcat/util/net/NioEndpoint.java
@@ -367,7 +367,6 @@ public class NioEndpoint extends AbstractEndpoint {
     protected AtomicInteger pollerRotater = new AtomicInteger(0);
     /**
      * Return an available poller in true round robin fashion
-     * @return
      */
     public Poller getPoller0() {
         int idx = Math.abs(pollerRotater.incrementAndGet()) % pollers.length;

==================================================
StandardJarScanner.java
index 19717466fe..49af5703f5 100644
--- a/java/org/apache/tomcat/util/net/SecureNioChannel.java
+++ b/java/org/apache/tomcat/util/net/SecureNioChannel.java
@@ -289,7 +289,7 @@ public class SecureNioChannel extends NioChannel  {
      * </code></pre>
      * @throws IOException if an I/O error occurs
      * @throws IOException if there is data on the outgoing network buffer and we are unable to flush it
-     * @todo Implement this java.io.Closeable method
+     * TODO Implement this java.io.Closeable method
      */
     @Override
     public void close() throws IOException {
@@ -342,7 +342,7 @@ public class SecureNioChannel extends NioChannel  {
      * @return The number of bytes read, possibly zero, or <tt>-1</tt> if the channel has reached end-of-stream
      * @throws IOException If some other I/O error occurs
      * @throws IllegalArgumentException if the destination buffer is different than bufHandler.getReadBuffer()
-     * @todo Implement this java.nio.channels.ReadableByteChannel method
+     * TODO Implement this java.nio.channels.ReadableByteChannel method
      */
     @Override
     public int read(ByteBuffer dst) throws IOException {
@@ -397,7 +397,7 @@ public class SecureNioChannel extends NioChannel  {
      * @param src The buffer from which bytes are to be retrieved
      * @return The number of bytes written, possibly zero
      * @throws IOException If some other I/O error occurs
-     * @todo Implement this java.nio.channels.WritableByteChannel method
+     * TODO Implement this java.nio.channels.WritableByteChannel method
      */
     @Override
     public int write(ByteBuffer src) throws IOException {

==================================================
EchoRpcTest.java
index 810b159b81..d01abdcd0b 100644
--- a/java/org/apache/tomcat/util/scan/StandardJarScanner.java
+++ b/java/org/apache/tomcat/util/scan/StandardJarScanner.java
@@ -118,7 +118,7 @@ public class StandardJarScanner implements JarScanner {
      * @param callback      The handler to process any JARs found
      * @param jarsToSkip    List of JARs to ignore. If this list is null, a
      *                      default list will be read from the system property
-     *                      defined by {@link #SKIP_JARS_PROPERTY} 
+     *                      defined by {@link Constants#SKIP_JARS_PROPERTY} 
      */
     @Override
     public void scan(ServletContext context, ClassLoader classloader,

==================================================
LoadTest.java
index c7ef0b7e00..8f4978969d 100644
--- a/test/org/apache/catalina/tribes/demos/EchoRpcTest.java
+++ b/test/org/apache/catalina/tribes/demos/EchoRpcTest.java
@@ -64,7 +64,7 @@ public class EchoRpcTest implements RpcCallback, Runnable {
      *
      * @param msg Serializable
      * @param sender Member
-     * @todo Implement this org.apache.catalina.tribes.tipis.RpcCallback
+     * TODO Implement this org.apache.catalina.tribes.tipis.RpcCallback
      *   method
      */
     public void leftOver(Serializable msg, Member sender) {
@@ -76,7 +76,7 @@ public class EchoRpcTest implements RpcCallback, Runnable {
      * @param msg Serializable
      * @param sender Member
      * @return Serializable - null if no reply should be sent
-     * @todo Implement this org.apache.catalina.tribes.tipis.RpcCallback
+     * TODO Implement this org.apache.catalina.tribes.tipis.RpcCallback
      *   method
      */
     public Serializable replyRequest(Serializable msg, Member sender) {

==================================================
