6098ba537fccdc68e823f8e8feaa81aeec4b7313
==================================================
Add some comments to track handling of TLS
==================================================
Rainer Jung
==================================================
Wed May 27 10:26:27 2015 +0000
==================================================
AprEndpoint.java
Add some comments to track handling of TLS
default protocols.

Remove "ALL" handling from AprEndpoint,
because SSLHostConfig already resolves "ALL"
to a list of explicit protocols. If "ALL"
manages to dripple down to AprEndpoint, it
will now throw an exception with an invalid ssl
protocol message.


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1681958 13f79535-47bb-0310-9956-ffa450edef68



==================================================
SSLHostConfig.java
index 09a9758600..e3db3de4b0 100644
--- a/java/org/apache/tomcat/util/net/AprEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AprEndpoint.java
@@ -375,6 +375,7 @@ public class AprEndpoint extends AbstractEndpoint<Long> implements SNICallBack {
                 // SSL protocol
                 int value = SSL.SSL_PROTOCOL_NONE;
                 if (sslHostConfig.getProtocols().size() == 0) {
+                    // Native fallback used if protocols=""
                     value = SSL.SSL_PROTOCOL_ALL;
                 } else {
                     for (String protocol : sslHostConfig.getProtocols()) {
@@ -390,8 +391,6 @@ public class AprEndpoint extends AbstractEndpoint<Long> implements SNICallBack {
                             value |= SSL.SSL_PROTOCOL_TLSV1_1;
                         } else if (Constants.SSL_PROTO_TLSv1_2.equalsIgnoreCase(protocol)) {
                             value |= SSL.SSL_PROTOCOL_TLSV1_2;
-                        } else if (Constants.SSL_PROTO_ALL.equalsIgnoreCase(protocol)) {
-                            value |= SSL.SSL_PROTOCOL_ALL;
                         } else {
                             // Protocol not recognized, fail to start as it is safer than
                             // continuing with the default which might enable more than the

==================================================
JSSESocketFactory.java
index 85eb819fb7..e6ea9ad261 100644
--- a/java/org/apache/tomcat/util/net/SSLHostConfig.java
+++ b/java/org/apache/tomcat/util/net/SSLHostConfig.java
@@ -42,6 +42,12 @@ public class SSLHostConfig {
     protected static final Set<String> SSL_PROTO_ALL = new HashSet<>();
 
     static {
+        /* Default used if protocols is not configured, also
+           used if protocols="All" */
+        /* If protocols is configured to be empty, the effective
+           value comes from
+           org.apache.tomcat.util.net.jsse.JSSESocketFactory.defaultServerProtocols
+           (JSSE) resp. org.apache.tomcat.jni.SSL.SSL_PROTOCOL_ALL (OpenSSL)*/
         SSL_PROTO_ALL.add(Constants.SSL_PROTO_SSLv2Hello);
         SSL_PROTO_ALL.add(Constants.SSL_PROTO_TLSv1);
         SSL_PROTO_ALL.add(Constants.SSL_PROTO_TLSv1_1);

==================================================
