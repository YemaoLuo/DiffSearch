3457d7ce53d36447f1aed58c2e73a24dec3dfb7f
==================================================
Force closure of connections upon a server shutdown
==================================================
Filip Hanik
==================================================
Mon Jul 2 18:46:20 2007 +0000
==================================================
NioReceiver.java
Force closure of connections upon a server shutdown


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@552560 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestSenderConnections.java
index a7ba368f9b..86707b3bd4 100644
--- a/java/org/apache/catalina/tribes/transport/nio/NioReceiver.java
+++ b/java/org/apache/catalina/tribes/transport/nio/NioReceiver.java
@@ -37,6 +37,7 @@ import org.apache.catalina.tribes.util.StringManager;
 import java.util.LinkedList;
 import java.util.Set;
 import java.nio.channels.CancelledKeyException;
+import java.nio.channels.ClosedSelectorException;
 
 /**
  * @author Filip Hanik
@@ -303,8 +304,7 @@ public class NioReceiver extends ReceiverBase implements Runnable, ChannelReceiv
 
         }
         serverChannel.close();
-        if (selector != null)
-            selector.close();
+        closeSelector();
     }
 
     
@@ -319,7 +319,7 @@ public class NioReceiver extends ReceiverBase implements Runnable, ChannelReceiv
         if (selector != null) {
             try {
                 selector.wakeup();
-                selector.close();
+                closeSelector();
             } catch (Exception x) {
                 log.error("Unable to close cluster receiver selector.", x);
             } finally {
@@ -328,6 +328,27 @@ public class NioReceiver extends ReceiverBase implements Runnable, ChannelReceiv
         }
     }
 
+    private void closeSelector() throws IOException {
+        Selector selector = this.selector;
+        this.selector = null;
+        if (selector==null) return;
+        try {
+            Iterator it = selector.keys().iterator();
+            // look at each key in the selected set
+            while (it.hasNext()) {
+                SelectionKey key = (SelectionKey)it.next();
+                key.channel().close();
+                key.attach(null);
+                key.cancel();
+            }
+        }catch ( IOException ignore ){
+            if (log.isWarnEnabled()) {
+                log.warn("Unable to cleanup on selector close.",ignore);
+            }
+        }catch ( ClosedSelectorException ignore){}
+        selector.close();
+    }
+
     // ----------------------------------------------------------
 
     /**

==================================================
