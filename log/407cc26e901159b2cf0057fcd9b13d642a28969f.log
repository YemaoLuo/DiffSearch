407cc26e901159b2cf0057fcd9b13d642a28969f
==================================================
Extend the WebResourceRoot API to allow definition of a base, archive
==================================================
Mark Emlyn
==================================================
Mon Sep 16 13:10:18 2013 +0000
==================================================
WebResourceRoot.java
Extend the WebResourceRoot API to allow definition of a base, archive
and internal path for the creation of a ResourceSet

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1523625 13f79535-47bb-0310-9956-ffa450edef68



==================================================
StandardContext.java
index 25de75f2c0..046dfb1b57 100644
--- a/java/org/apache/catalina/WebResourceRoot.java
+++ b/java/org/apache/catalina/WebResourceRoot.java
@@ -179,15 +179,15 @@ public interface WebResourceRoot extends Lifecycle {
      * based on the provided parameters.
      *
      * @param type          The type of {@link WebResourceSet} to create
-     * @param url           The URL of the resource (must locate a JAR, file or
-     *                          directory)
      * @param webAppMount   The path within the web application that the
      *                          resources should be published at. It must start
      *                          with '/'.
+     * @param url           The URL of the resource (must locate a JAR, file or
+     *                          directory)
      * @param internalPath  The path within the resource where the content is to
      *                          be found. It must start with '/'.
      */
-    void createWebResourceSet(ResourceSetType type, URL url, String webAppMount,
+    void createWebResourceSet(ResourceSetType type, String webAppMount, URL url,
             String internalPath);
 
     /**
@@ -195,15 +195,19 @@ public interface WebResourceRoot extends Lifecycle {
      * based on the provided parameters.
      *
      * @param type          The type of {@link WebResourceSet} to create
-     * @param base          The location of the resources
      * @param webAppMount   The path within the web application that the
      *                          resources should be published at. It must start
      *                          with '/'.
-     * @param internalPath  The path within the resource where the content is to
-     *                          be found. It must start with '/'.
+     * @param base          The location of the resources
+     * @param archivePath   The path within the resource to the archive where
+     *                          the content is to be found. If there is no
+     *                          archive then this should be <code>null</code>.
+     * @param internalPath  The path within the archive (or the resource if the
+     *                          archivePath is <code>null</code> where the
+     *                          content is to be found. It must start with '/'.
      */
-    void createWebResourceSet(ResourceSetType type, String base,
-            String webAppMount, String internalPath);
+    void createWebResourceSet(ResourceSetType type, String webAppMount,
+            String base, String archivePath, String internalPath);
 
 
     /**

==================================================
ContextConfig.java
index b0157c1974..a21ca6ece0 100644
--- a/java/org/apache/catalina/core/StandardContext.java
+++ b/java/org/apache/catalina/core/StandardContext.java
@@ -4947,8 +4947,8 @@ public class StandardContext extends ContainerBase
                     "/WEB-INF/classes/META-INF/resources");
             if (webinfClassesResource.isDirectory()) {
                 getResources().createWebResourceSet(
-                        WebResourceRoot.ResourceSetType.RESOURCE_JAR,
-                        webinfClassesResource.getURL(), "/", "/");
+                        WebResourceRoot.ResourceSetType.RESOURCE_JAR, "/",
+                        webinfClassesResource.getURL(), "/");
             }
         }
 

==================================================
DirResourceSet.java
index a289a3c413..28e802d45b 100644
--- a/java/org/apache/catalina/startup/ContextConfig.java
+++ b/java/org/apache/catalina/startup/ContextConfig.java
@@ -1667,7 +1667,7 @@ public class ContextConfig implements LifecycleListener {
                         if (entryName.startsWith("META-INF/resources/")) {
                             context.getResources().createWebResourceSet(
                                     WebResourceRoot.ResourceSetType.RESOURCE_JAR,
-                                    url, "/", "/META-INF/resources");
+                                    "/", url, "/META-INF/resources");
                             break;
                         }
                         jar.nextEntry();
@@ -1679,7 +1679,7 @@ public class ContextConfig implements LifecycleListener {
                     if (resources.isDirectory()) {
                         context.getResources().createWebResourceSet(
                                 WebResourceRoot.ResourceSetType.RESOURCE_JAR,
-                                file.getAbsolutePath(), "/", "/");
+                                "/", file.getAbsolutePath(), null, "/");
                     }
                 }
             } catch (IOException ioe) {

==================================================
StandardRoot.java
index 432862899e..378ab79c35 100644
--- a/java/org/apache/catalina/webresources/DirResourceSet.java
+++ b/java/org/apache/catalina/webresources/DirResourceSet.java
@@ -71,8 +71,8 @@ public class DirResourceSet extends AbstractFileResourceSet {
             f = new File(f, "/WEB-INF/classes/META-INF/resources");
 
             if (f.isDirectory()) {
-                root.createWebResourceSet(ResourceSetType.RESOURCE_JAR,
-                         f.getAbsolutePath(), "/", "/");
+                root.createWebResourceSet(ResourceSetType.RESOURCE_JAR, "/",
+                         f.getAbsolutePath(), null, "/");
             }
         }
 

==================================================
TestCompositeELResolver.java
index 1817535095..838f50d5f8 100644
--- a/java/org/apache/catalina/webresources/StandardRoot.java
+++ b/java/org/apache/catalina/webresources/StandardRoot.java
@@ -44,8 +44,8 @@ import org.apache.tomcat.util.res.StringManager;
  * </p><p>
  * This implementation assumes that the base attribute supplied to {@link
  * StandardRoot#createWebResourceSet(
- * org.apache.catalina.WebResourceRoot.ResourceSetType, String, String, String)}
- * represents the absolute path to a file.
+ * org.apache.catalina.WebResourceRoot.ResourceSetType, String, String, String,
+ * String)} represents the absolute path to a file.
  * </p>
  */
 public class StandardRoot extends LifecycleMBeanBase
@@ -231,15 +231,14 @@ public class StandardRoot extends LifecycleMBeanBase
 
 
     @Override
-    public void createWebResourceSet(ResourceSetType type, URL url,
-            String webAppMount, String internalPath) {
-        createWebResourceSet(type, toBase(url), webAppMount, internalPath);
+    public void createWebResourceSet(ResourceSetType type, String webAppMount,
+            URL url, String internalPath) {
+        createWebResourceSet(type, webAppMount, toBase(url), null, internalPath);
     }
 
     @Override
-    public void createWebResourceSet(ResourceSetType type, String base,
-            String webAppMount, String internalPath) {
-
+    public void createWebResourceSet(ResourceSetType type, String webAppMount,
+            String base, String archivePath, String internalPath) {
         ArrayList<WebResourceSet> resourceList;
         WebResourceSet resourceSet;
 

==================================================
TestStandardContextAliases.java
index 31008c9876..27eec550ad 100644
--- a/test/javax/el/TestCompositeELResolver.java
+++ b/test/javax/el/TestCompositeELResolver.java
@@ -46,8 +46,8 @@ public class TestCompositeELResolver extends TomcatBaseTest {
         File lib = new File("webapps/examples/WEB-INF/lib");
         ctxt.setResources(new StandardRoot(ctxt));
         ctxt.getResources().createWebResourceSet(
-                WebResourceRoot.ResourceSetType.POST, lib.getAbsolutePath(),
-                "/WEB-INF/lib", "/");
+                WebResourceRoot.ResourceSetType.POST, "/WEB-INF/lib",
+                lib.getAbsolutePath(), null, "/");
 
         tomcat.start();
 

==================================================
TestVirtualContext.java
index f106853783..d78eb1ca0b 100644
--- a/test/org/apache/catalina/core/TestStandardContextAliases.java
+++ b/test/org/apache/catalina/core/TestStandardContextAliases.java
@@ -51,8 +51,8 @@ public class TestStandardContextAliases extends TomcatBaseTest {
         File lib = new File("webapps/examples/WEB-INF/lib");
         ctx.setResources(new StandardRoot(ctx));
         ctx.getResources().createWebResourceSet(
-                WebResourceRoot.ResourceSetType.POST, lib.getAbsolutePath(),
-                "/WEB-INF/lib", "/");
+                WebResourceRoot.ResourceSetType.POST, "/WEB-INF/lib",
+                lib.getAbsolutePath(), null, "/");
 
 
         Tomcat.addServlet(ctx, "test", new TestServlet());

==================================================
TestVirtualWebappLoader.java
index 59f42c9f58..98ce975ef1 100644
--- a/test/org/apache/catalina/loader/TestVirtualContext.java
+++ b/test/org/apache/catalina/loader/TestVirtualContext.java
@@ -77,23 +77,23 @@ public class TestVirtualContext extends TomcatBaseTest {
         File f5 = new File("test/webapp-virtual-webapp/src/main/misc");
         File f6 = new File("test/webapp-virtual-webapp/src/main/webapp2");
         ctx.getResources().createWebResourceSet(
-                WebResourceRoot.ResourceSetType.POST, f1.getAbsolutePath(),
-                "/WEB-INF/classes", "/");
+                WebResourceRoot.ResourceSetType.POST, "/WEB-INF/classes",
+                f1.getAbsolutePath(), null, "/");
         ctx.getResources().createWebResourceSet(
-                WebResourceRoot.ResourceSetType.POST, f2.getAbsolutePath(),
-                "/WEB-INF/classes", "/");
+                WebResourceRoot.ResourceSetType.POST, "/WEB-INF/classes",
+                f2.getAbsolutePath(), null, "/");
         ctx.getResources().createWebResourceSet(
-                WebResourceRoot.ResourceSetType.POST, f3.getAbsolutePath(),
-                "/WEB-INF/classes", "/");
+                WebResourceRoot.ResourceSetType.POST, "/WEB-INF/classes",
+                f3.getAbsolutePath(), null, "/");
         ctx.getResources().createWebResourceSet(
-                WebResourceRoot.ResourceSetType.POST, f4.getAbsolutePath(),
-                "/WEB-INF/classes", "/");
+                WebResourceRoot.ResourceSetType.POST, "/WEB-INF/classes",
+                f4.getAbsolutePath(), null, "/");
         ctx.getResources().createWebResourceSet(
-                WebResourceRoot.ResourceSetType.POST, f5.getAbsolutePath(),
-                "/other", "/");
+                WebResourceRoot.ResourceSetType.POST, "/other",
+                f5.getAbsolutePath(), null, "/");
         ctx.getResources().createWebResourceSet(
-                WebResourceRoot.ResourceSetType.POST, f6.getAbsolutePath(),
-                "/", "/");
+                WebResourceRoot.ResourceSetType.POST, "/",
+                f6.getAbsolutePath(), null, "/");
 
         StandardJarScanner jarScanner = new StandardJarScanner();
         jarScanner.setScanAllDirectories(true);
@@ -280,11 +280,11 @@ public class TestVirtualContext extends TomcatBaseTest {
         File f1 = new File("test/webapp-virtual-webapp/target/classes");
         File f2 = new File("test/webapp-virtual-library/target/classes");
         ctx.getResources().createWebResourceSet(
-                WebResourceRoot.ResourceSetType.POST, f1.getAbsolutePath(),
-                "/WEB-INF/classes", "/");
+                WebResourceRoot.ResourceSetType.POST, "/WEB-INF/classes",
+                f1.getAbsolutePath(), null, "/");
         ctx.getResources().createWebResourceSet(
-                WebResourceRoot.ResourceSetType.POST, f2.getAbsolutePath(),
-                "/WEB-INF/classes", "/");
+                WebResourceRoot.ResourceSetType.POST, "/WEB-INF/classes",
+                f2.getAbsolutePath(), null, "/");
 
         tomcat.start();
         // first test that without the setting on StandardContext the annotated
@@ -297,15 +297,14 @@ public class TestVirtualContext extends TomcatBaseTest {
         // path, the servlet is detected
         ctx.setResources(new StandardRoot(ctx));
         ctx.getResources().createWebResourceSet(
-                WebResourceRoot.ResourceSetType.POST, f1.getAbsolutePath(),
-                "/WEB-INF/classes", "/");
+                WebResourceRoot.ResourceSetType.POST, "/WEB-INF/classes",
+                f1.getAbsolutePath(), null, "/");
         ctx.getResources().createWebResourceSet(
-                WebResourceRoot.ResourceSetType.POST, f2.getAbsolutePath(),
-                "/WEB-INF/classes", "/");
+                WebResourceRoot.ResourceSetType.POST, "/WEB-INF/classes",
+                f2.getAbsolutePath(), null, "/");
         ctx.getResources().createWebResourceSet(
-                WebResourceRoot.ResourceSetType.POST,
-                additionWebInfClasses.getAbsolutePath(),
-                "/WEB-INF/classes", "/");
+                WebResourceRoot.ResourceSetType.POST, "/WEB-INF/classes",
+                additionWebInfClasses.getAbsolutePath(), null, "/");
 
         tomcat.start();
         assertPageContains("/test/annotatedServlet", MyAnnotatedServlet.MESSAGE);

==================================================
TesterWebResourceRoot.java
index 45d191d5b7..ba7809689f 100644
--- a/test/org/apache/catalina/loader/TestVirtualWebappLoader.java
+++ b/test/org/apache/catalina/loader/TestVirtualWebappLoader.java
@@ -58,8 +58,8 @@ public class TestVirtualWebappLoader extends TomcatBaseTest {
 
         File f1 = new File("test/webapp-fragments/WEB-INF/lib");
         ctx.getResources().createWebResourceSet(
-                WebResourceRoot.ResourceSetType.POST, f1.getAbsolutePath(),
-                "/WEB-INF/lib", "/");
+                WebResourceRoot.ResourceSetType.POST, "/WEB-INF/lib",
+                f1.getAbsolutePath(), null, "/");
 
         loader.start();
         String[] repos = loader.getLoaderRepositories();

==================================================
TestGenerator.java
index 60ff6d92ff..56d89a251e 100644
--- a/test/org/apache/catalina/webresources/TesterWebResourceRoot.java
+++ b/test/org/apache/catalina/webresources/TesterWebResourceRoot.java
@@ -91,14 +91,14 @@ public class TesterWebResourceRoot extends StandardRoot {
     }
 
     @Override
-    public void createWebResourceSet(ResourceSetType type, URL url,
-            String webAppPath, String internalPath) {
+    public void createWebResourceSet(ResourceSetType type, String webAppPath,
+            URL url, String internalPath) {
         // NO-OP
     }
 
     @Override
-    public void createWebResourceSet(ResourceSetType type, String base,
-            String webAppMount, String internalPath) {
+    public void createWebResourceSet(ResourceSetType type, String webAppPath,
+            String base, String archivePath, String internalPath) {
         // NO-OP
     }
 

==================================================
AbstractTestTag.java
index 2df7934bfa..c6906012db 100644
--- a/test/org/apache/jasper/compiler/TestGenerator.java
+++ b/test/org/apache/jasper/compiler/TestGenerator.java
@@ -121,8 +121,8 @@ public class TestGenerator extends TomcatBaseTest {
         File lib = new File("webapps/examples/WEB-INF/lib");
         ctxt.setResources(new StandardRoot(ctxt));
         ctxt.getResources().createWebResourceSet(
-                WebResourceRoot.ResourceSetType.POST, lib.getAbsolutePath(),
-                "/WEB-INF/lib", "/");
+                WebResourceRoot.ResourceSetType.POST, "/WEB-INF/lib",
+                lib.getAbsolutePath(), null, "/");
 
         tomcat.start();
 

==================================================
