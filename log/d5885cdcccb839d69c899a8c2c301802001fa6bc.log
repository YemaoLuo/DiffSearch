d5885cdcccb839d69c899a8c2c301802001fa6bc
==================================================
Switch to NamingResources interface in objects that represent JNDI
==================================================
Mark Emlyn
==================================================
Mon Jul 8 21:02:52 2013 +0000
==================================================
NamingResourcesImpl.java
Switch to NamingResources interface in objects that represent JNDI
entries in web.xml

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1500948 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ResourceBase.java
index 8cdb764fbc..a7152c61ee 100644
--- a/java/org/apache/catalina/deploy/NamingResourcesImpl.java
+++ b/java/org/apache/catalina/deploy/NamingResourcesImpl.java
@@ -42,6 +42,7 @@ import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.naming.ContextBindings;
 import org.apache.tomcat.util.ExceptionUtils;
+import org.apache.tomcat.util.descriptor.web.NamingResources;
 import org.apache.tomcat.util.res.StringManager;
 
 
@@ -53,7 +54,8 @@ import org.apache.tomcat.util.res.StringManager;
  * @version $Id$
  */
 
-public class NamingResourcesImpl extends LifecycleMBeanBase implements Serializable {
+public class NamingResourcesImpl extends LifecycleMBeanBase
+        implements Serializable, NamingResources {
 
     private static final long serialVersionUID = 1L;
 
@@ -164,6 +166,7 @@ public class NamingResourcesImpl extends LifecycleMBeanBase implements Serializa
     /**
      * Get the container with which the naming resources are associated.
      */
+    @Override
     public Object getContainer() {
         return container;
     }
@@ -220,6 +223,7 @@ public class NamingResourcesImpl extends LifecycleMBeanBase implements Serializa
      *
      * @param environment New environment entry
      */
+    @Override
     public void addEnvironment(ContextEnvironment environment) {
 
         if (entries.contains(environment.getName())) {
@@ -353,6 +357,7 @@ public class NamingResourcesImpl extends LifecycleMBeanBase implements Serializa
      *
      * @param resource New resource reference
      */
+    @Override
     public void addResource(ContextResource resource) {
 
         if (entries.contains(resource.getName())) {
@@ -416,6 +421,7 @@ public class NamingResourcesImpl extends LifecycleMBeanBase implements Serializa
      *
      * @param resourceLink New resource link
      */
+    @Override
     public void addResourceLink(ContextResourceLink resourceLink) {
 
         if (entries.contains(resourceLink.getName())) {
@@ -726,6 +732,7 @@ public class NamingResourcesImpl extends LifecycleMBeanBase implements Serializa
      *
      * @param name Name of the environment entry to remove
      */
+    @Override
     public void removeEnvironment(String name) {
 
         entries.remove(name);
@@ -810,6 +817,7 @@ public class NamingResourcesImpl extends LifecycleMBeanBase implements Serializa
      *
      * @param name Name of the resource reference to remove
      */
+    @Override
     public void removeResource(String name) {
 
         entries.remove(name);
@@ -861,6 +869,7 @@ public class NamingResourcesImpl extends LifecycleMBeanBase implements Serializa
      *
      * @param name Name of the resource link to remove
      */
+    @Override
     public void removeResourceLink(String name) {
 
         entries.remove(name);

==================================================
ContextEnvironmentMBean.java
index a9345e5e80..15ba13249c 100644
--- a/java/org/apache/catalina/deploy/ResourceBase.java
+++ b/java/org/apache/catalina/deploy/ResourceBase.java
@@ -22,6 +22,8 @@ import java.util.HashMap;
 import java.util.Iterator;
 import java.util.List;
 
+import org.apache.tomcat.util.descriptor.web.NamingResources;
+
 
 /**
  * Representation of an Context element
@@ -199,13 +201,13 @@ public class ResourceBase implements Serializable, Injectable {
     /**
      * The NamingResources with which we are associated (if any).
      */
-    protected NamingResourcesImpl resources = null;
+    protected NamingResources resources = null;
 
-    public NamingResourcesImpl getNamingResources() {
+    public NamingResources getNamingResources() {
         return (this.resources);
     }
 
-    void setNamingResources(NamingResourcesImpl resources) {
+    void setNamingResources(NamingResources resources) {
         this.resources = resources;
     }
 }

==================================================
ContextResourceLinkMBean.java
index 8c0d740b47..29014e82cc 100644
--- a/java/org/apache/catalina/mbeans/ContextEnvironmentMBean.java
+++ b/java/org/apache/catalina/mbeans/ContextEnvironmentMBean.java
@@ -14,10 +14,8 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-
 package org.apache.catalina.mbeans;
 
-
 import javax.management.Attribute;
 import javax.management.AttributeNotFoundException;
 import javax.management.InstanceNotFoundException;
@@ -27,7 +25,7 @@ import javax.management.RuntimeOperationsException;
 import javax.management.modelmbean.InvalidTargetObjectTypeException;
 
 import org.apache.catalina.deploy.ContextEnvironment;
-import org.apache.catalina.deploy.NamingResourcesImpl;
+import org.apache.tomcat.util.descriptor.web.NamingResources;
 import org.apache.tomcat.util.modeler.BaseModelMBean;
 
 
@@ -99,7 +97,7 @@ public class ContextEnvironmentMBean extends BaseModelMBean {
 
         // cannot use side-effects.  It's removed and added back each time
         // there is a modification in a resource.
-        NamingResourcesImpl nr = ce.getNamingResources();
+        NamingResources nr = ce.getNamingResources();
         nr.removeEnvironment(ce.getName());
         nr.addEnvironment(ce);
     }

==================================================
ContextResourceMBean.java
index 3fe5be1119..dcf10f60e2 100644
--- a/java/org/apache/catalina/mbeans/ContextResourceLinkMBean.java
+++ b/java/org/apache/catalina/mbeans/ContextResourceLinkMBean.java
@@ -14,10 +14,8 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-
 package org.apache.catalina.mbeans;
 
-
 import javax.management.Attribute;
 import javax.management.AttributeNotFoundException;
 import javax.management.InstanceNotFoundException;
@@ -27,7 +25,7 @@ import javax.management.RuntimeOperationsException;
 import javax.management.modelmbean.InvalidTargetObjectTypeException;
 
 import org.apache.catalina.deploy.ContextResourceLink;
-import org.apache.catalina.deploy.NamingResourcesImpl;
+import org.apache.tomcat.util.descriptor.web.NamingResources;
 import org.apache.tomcat.util.modeler.BaseModelMBean;
 
 
@@ -174,7 +172,7 @@ public class ContextResourceLinkMBean extends BaseModelMBean {
 
         // cannot use side-effects.  It's removed and added back each time
         // there is a modification in a resource.
-        NamingResourcesImpl nr = crl.getNamingResources();
+        NamingResources nr = crl.getNamingResources();
         nr.removeResourceLink(crl.getName());
         nr.addResourceLink(crl);
     }

==================================================
NamingResources.java
index 59c092f9ee..4cf672f046 100644
--- a/java/org/apache/catalina/mbeans/ContextResourceMBean.java
+++ b/java/org/apache/catalina/mbeans/ContextResourceMBean.java
@@ -14,10 +14,8 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-
 package org.apache.catalina.mbeans;
 
-
 import javax.management.Attribute;
 import javax.management.AttributeNotFoundException;
 import javax.management.InstanceNotFoundException;
@@ -27,7 +25,7 @@ import javax.management.RuntimeOperationsException;
 import javax.management.modelmbean.InvalidTargetObjectTypeException;
 
 import org.apache.catalina.deploy.ContextResource;
-import org.apache.catalina.deploy.NamingResourcesImpl;
+import org.apache.tomcat.util.descriptor.web.NamingResources;
 import org.apache.tomcat.util.modeler.BaseModelMBean;
 
 
@@ -179,9 +177,8 @@ public class ContextResourceMBean extends BaseModelMBean {
 
         // cannot use side-effects.  It's removed and added back each time
         // there is a modification in a resource.
-        NamingResourcesImpl nr = cr.getNamingResources();
+        NamingResources nr = cr.getNamingResources();
         nr.removeResource(cr.getName());
         nr.addResource(cr);
     }
-
 }

==================================================
