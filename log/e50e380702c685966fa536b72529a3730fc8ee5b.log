e50e380702c685966fa536b72529a3730fc8ee5b
==================================================
Add handling for are now, hopefully, consistent connection reset results for NIO2 on Windows.
==================================================
Mark Thomas
==================================================
Mon Jul 17 20:53:20 2017 +0000
==================================================
TestHttp2Section_4_2.java
Add handling for are now, hopefully, consistent connection reset results for NIO2 on Windows.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1802210 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestHttp2Section_5_1.java
index f99dd9fe81..590f4cdb73 100644
--- a/test/org/apache/coyote/http2/TestHttp2Section_4_2.java
+++ b/test/org/apache/coyote/http2/TestHttp2Section_4_2.java
@@ -16,9 +16,15 @@
  */
 package org.apache.coyote.http2;
 
+import java.net.SocketException;
+
 import org.junit.Assert;
+import org.junit.Assume;
 import org.junit.Test;
 
+import org.apache.catalina.connector.Connector;
+import org.apache.catalina.startup.Tomcat;
+
 /**
  * Unit tests for Section 4.2 of
  * <a href="https://tools.ietf.org/html/rfc7540">RFC 7540</a>.
@@ -55,11 +61,22 @@ public class TestHttp2Section_4_2 extends Http2TestBase {
 
         os.write(settings);
 
-        // Read GOAWAY frame
-        parser.readFrame(true);
-
-        Assert.assertTrue(output.getTrace(), output.getTrace().startsWith(
-                "0-Goaway-[1]-[" + Http2Error.FRAME_SIZE_ERROR.getCode() + "]-["));
+        try {
+            // Read GOAWAY frame
+            parser.readFrame(true);
+
+            Assert.assertTrue(output.getTrace(), output.getTrace().startsWith(
+                    "0-Goaway-[1]-[" + Http2Error.FRAME_SIZE_ERROR.getCode() + "]-["));
+        } catch (SocketException se) {
+            // On some platform / Connector combinations (e.g. Windows / NIO2),
+            // the TCP connection close will be processed before the client gets
+            // a chance to read the connection close frame.
+            Tomcat tomcat = getTomcatInstance();
+            Connector connector = tomcat.getConnector();
+
+            Assume.assumeTrue("This test is only expected to trigger an exception with NIO2",
+                    connector.getProtocolHandlerClassName().contains("Nio2"));
+        }
     }
 
     @Test

==================================================
TestHttp2Section_6_2.java
index a03fdf8a5c..2724f5938e 100644
--- a/test/org/apache/coyote/http2/TestHttp2Section_5_1.java
+++ b/test/org/apache/coyote/http2/TestHttp2Section_5_1.java
@@ -16,11 +16,16 @@
  */
 package org.apache.coyote.http2;
 
+import java.net.SocketException;
 import java.nio.ByteBuffer;
 
 import org.junit.Assert;
+import org.junit.Assume;
 import org.junit.Test;
 
+import org.apache.catalina.connector.Connector;
+import org.apache.catalina.startup.Tomcat;
+
 /**
  * Unit tests for Section 5.ยง of
  * <a href="https://tools.ietf.org/html/rfc7540">RFC 7540</a>.
@@ -135,11 +140,22 @@ public class TestHttp2Section_5_1 extends Http2TestBase {
         buildSimpleGetRequestPart1(frameHeader, headersPayload, 4);
         writeFrame(frameHeader, headersPayload);
 
-        // headers
-        parser.readFrame(true);
+        try {
+            // headers
+            parser.readFrame(true);
 
-        Assert.assertTrue(output.getTrace(), output.getTrace().startsWith(
-                "0-Goaway-[1]-[" + Http2Error.PROTOCOL_ERROR.getCode() + "]-["));
+            Assert.assertTrue(output.getTrace(), output.getTrace().startsWith(
+                    "0-Goaway-[1]-[" + Http2Error.PROTOCOL_ERROR.getCode() + "]-["));
+        } catch (SocketException se) {
+            // On some platform / Connector combinations (e.g. Windows / NIO2),
+            // the TCP connection close will be processed before the client gets
+            // a chance to read the connection close frame.
+            Tomcat tomcat = getTomcatInstance();
+            Connector connector = tomcat.getConnector();
+
+            Assume.assumeTrue("This test is only expected to trigger an exception with NIO2",
+                    connector.getProtocolHandlerClassName().contains("Nio2"));
+        }
     }
 
 

==================================================
