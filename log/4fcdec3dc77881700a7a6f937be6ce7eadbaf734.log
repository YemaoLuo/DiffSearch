4fcdec3dc77881700a7a6f937be6ce7eadbaf734
==================================================
Revert port of 39088 as per discussion on dev list.
==================================================
Mark Emlyn
==================================================
Mon Jan 29 01:45:06 2007 +0000
==================================================
StandardWrapper.java
Revert port of 39088 as per discussion on dev list.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk@500918 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ErrorReportValve.java
index 159da6b447..ed0003ea34 100644
--- a/java/org/apache/catalina/core/StandardWrapper.java
+++ b/java/org/apache/catalina/core/StandardWrapper.java
@@ -31,8 +31,6 @@ import java.util.Stack;
 import java.security.AccessController;
 import java.security.PrivilegedActionException;
 import java.security.PrivilegedExceptionAction;
-import java.sql.SQLException;
-
 import javax.servlet.Servlet;
 import javax.servlet.ServletConfig;
 import javax.servlet.ServletContext;
@@ -293,7 +291,7 @@ public class StandardWrapper
      */
     protected static Properties restrictedServlets = null;
     
-
+    
     // ------------------------------------------------------------- Properties
 
 
@@ -677,37 +675,20 @@ public class StandardWrapper
      * @param e The servlet exception
      */
     public static Throwable getRootCause(ServletException e) {
-        Throwable rootCause = e.getRootCause();
-        return findRootCause(e, rootCause);
+        Throwable rootCause = e;
+        Throwable rootCauseCheck = null;
+        // Extra aggressive rootCause finding
+        int loops = 0;
+        do {
+            loops++;
+            rootCauseCheck = rootCause.getCause();
+            if (rootCauseCheck != null)
+                rootCause = rootCauseCheck;
+        } while (rootCauseCheck != null && (loops < 20));
+        return rootCause;
     }
 
 
-    /*
-     * Work through the root causes using specific methods for well known types
-     * and getCause() for the rest. Stop when the next rootCause is null or
-     * an exception is found that has itself as its own rootCause. 
-     */
-    private static final Throwable findRootCause(Throwable theException,
-            Throwable theRootCause) {
-        
-        Throwable deeperRootCause = null;
-
-        if (theRootCause == null || theRootCause == theException) {
-            return theException;
-        }
-        
-        if (theRootCause instanceof SQLException) {
-            deeperRootCause = ((SQLException) theRootCause).getNextException();
-        }
-        if (deeperRootCause == null) {
-            deeperRootCause = theRootCause.getCause();
-        }
-        
-        return findRootCause(theRootCause, deeperRootCause);
-    }
-
-
-
     /**
      * Refuse to add a child Container, because Wrappers are the lowest level
      * of the Container hierarchy.

==================================================
