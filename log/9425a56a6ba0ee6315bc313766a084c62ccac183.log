9425a56a6ba0ee6315bc313766a084c62ccac183
==================================================
Ensure that the URL resulting from the RewriteValve is normalized before it is used to map the request.
==================================================
Mark Thomas
==================================================
Thu Dec 11 23:22:59 2014 +0000
==================================================
RewriteValve.java
Ensure that the URL resulting from the RewriteValve is normalized before it is used to map the request.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1644793 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestRewriteValve.java
index 4d9f14e264..bf1f85c571 100644
--- a/java/org/apache/catalina/valves/rewrite/RewriteValve.java
+++ b/java/org/apache/catalina/valves/rewrite/RewriteValve.java
@@ -48,6 +48,7 @@ import org.apache.catalina.util.URLEncoder;
 import org.apache.catalina.valves.ValveBase;
 import org.apache.tomcat.util.buf.CharChunk;
 import org.apache.tomcat.util.buf.MessageBytes;
+import org.apache.tomcat.util.http.RequestUtil;
 import org.apache.tomcat.util.net.URL;
 
 public class RewriteValve extends ValveBase {
@@ -457,14 +458,14 @@ public class RewriteValve extends ValveBase {
                     }
                     chunk.append(URLEncoder.DEFAULT.encode(urlString));
                     request.getCoyoteRequest().requestURI().toChars();
-                    // Decoded URI
+                    // Decoded and normalized URI
                     request.getCoyoteRequest().decodedURI().setString(null);
                     chunk = request.getCoyoteRequest().decodedURI().getCharChunk();
                     chunk.recycle();
                     if (context) {
                         chunk.append(contextPath);
                     }
-                    chunk.append(urlString);
+                    chunk.append(RequestUtil.normalize(urlString));
                     request.getCoyoteRequest().decodedURI().toChars();
                     // Set the new Query if there is one
                     if (queryString != null) {

==================================================
