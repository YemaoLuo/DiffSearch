4b7c3259e7ac0c0fb4a647cc08b34c277ed63c3d
==================================================
- Set of minor optimizations.
==================================================
Remy Maucherat
==================================================
Sat Feb 10 01:32:10 2007 +0000
==================================================
CoyoteAdapter.java
- Set of minor optimizations.
- Use getLength() less often.
- Submitted by Arvind Srinivasan.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk@505604 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AjpAprProcessor.java
index 05ef81aa38..e6b35a20d9 100644
--- a/java/org/apache/catalina/connector/CoyoteAdapter.java
+++ b/java/org/apache/catalina/connector/CoyoteAdapter.java
@@ -505,8 +505,9 @@ public class CoyoteAdapter
         throws Exception {
 
         ByteChunk bc = uri.getByteChunk();
+        int length = bc.getLength();
         CharChunk cc = uri.getCharChunk();
-        cc.allocate(bc.getLength(), -1);
+        cc.allocate(length, -1);
 
         String enc = connector.getURIEncoding();
         if (enc != null) {
@@ -540,10 +541,10 @@ public class CoyoteAdapter
         byte[] bbuf = bc.getBuffer();
         char[] cbuf = cc.getBuffer();
         int start = bc.getStart();
-        for (int i = 0; i < bc.getLength(); i++) {
+        for (int i = 0; i < length; i++) {
             cbuf[i] = (char) (bbuf[i + start] & 0xff);
         }
-        uri.setChars(cbuf, 0, bc.getLength());
+        uri.setChars(cbuf, 0, length);
 
     }
 
@@ -559,16 +560,17 @@ public class CoyoteAdapter
         
         ByteChunk bc = mb.getByteChunk();
         CharChunk cc = mb.getCharChunk();
-        cc.allocate(bc.getLength(), -1);
+        int length = bc.getLength();
+        cc.allocate(length, -1);
 
         // Default encoding: fast conversion
         byte[] bbuf = bc.getBuffer();
         char[] cbuf = cc.getBuffer();
         int start = bc.getStart();
-        for (int i = 0; i < bc.getLength(); i++) {
+        for (int i = 0; i < length; i++) {
             cbuf[i] = (char) (bbuf[i + start] & 0xff);
         }
-        mb.setChars(cbuf, 0, bc.getLength());
+        mb.setChars(cbuf, 0, length);
 
     }
 

==================================================
AjpProcessor.java
index 2422e8cd40..693d656284 100644
--- a/java/org/apache/coyote/ajp/AjpAprProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpAprProcessor.java
@@ -598,8 +598,9 @@ public class AjpAprProcessor implements ActionHook {
 
             // Set the given bytes as the content
             ByteChunk bc = (ByteChunk) param;
-            bodyBytes.setBytes(bc.getBytes(), bc.getStart(), bc.getLength());
-            request.setContentLength(bc.getLength());
+            int length = bc.getLength();
+            bodyBytes.setBytes(bc.getBytes(), bc.getStart(), length);
+            request.setContentLength(length);
             first = false;
             empty = false;
             replay = true;

==================================================
InternalAprOutputBuffer.java
index 3848170523..5f4a3a3f02 100644
--- a/java/org/apache/coyote/ajp/AjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpProcessor.java
@@ -586,8 +586,9 @@ public class AjpProcessor implements ActionHook {
 
             // Set the given bytes as the content
             ByteChunk bc = (ByteChunk) param;
-            bodyBytes.setBytes(bc.getBytes(), bc.getStart(), bc.getLength());
-            request.setContentLength(bc.getLength());
+            int length = bc.getLength();
+            bodyBytes.setBytes(bc.getBytes(), bc.getStart(), length);
+            request.setContentLength(length);
             first = false;
             empty = false;
             replay = true;

==================================================
InternalNioOutputBuffer.java
index b217578b49..926be3b037 100644
--- a/java/org/apache/coyote/http11/InternalAprOutputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalAprOutputBuffer.java
@@ -585,9 +585,9 @@ public class InternalAprOutputBuffer
     protected void write(ByteChunk bc) {
 
         // Writing the byte chunk to the output buffer
-        System.arraycopy(bc.getBytes(), bc.getStart(), buf, pos,
-                         bc.getLength());
-        pos = pos + bc.getLength();
+        int length = bc.getLength();
+        System.arraycopy(bc.getBytes(), bc.getStart(), buf, pos, length);
+        pos = pos + length;
 
     }
 

==================================================
InternalOutputBuffer.java
index 1366312e4d..dae3e52452 100644
--- a/java/org/apache/coyote/http11/InternalNioOutputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalNioOutputBuffer.java
@@ -644,9 +644,9 @@ public class InternalNioOutputBuffer
     protected void write(ByteChunk bc) {
 
         // Writing the byte chunk to the output buffer
-        System.arraycopy(bc.getBytes(), bc.getStart(), buf, pos,
-                         bc.getLength());
-        pos = pos + bc.getLength();
+        int length = bc.getLength();
+        System.arraycopy(bc.getBytes(), bc.getStart(), buf, pos, length);
+        pos = pos + length;
 
     }
 

==================================================
MsgAjp.java
index 1df2fc6fea..4445f23055 100644
--- a/java/org/apache/coyote/http11/InternalOutputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalOutputBuffer.java
@@ -631,9 +631,9 @@ public class InternalOutputBuffer
     protected void write(ByteChunk bc) {
 
         // Writing the byte chunk to the output buffer
-        System.arraycopy(bc.getBytes(), bc.getStart(), buf, pos,
-                         bc.getLength());
-        pos = pos + bc.getLength();
+        int length = bc.getLength();
+        System.arraycopy(bc.getBytes(), bc.getStart(), buf, pos, length);
+        pos = pos + length;
 
     }
 
@@ -756,14 +756,15 @@ public class InternalOutputBuffer
         public int doWrite(ByteChunk chunk, Response res) 
             throws IOException {
 
+            int length = chunk.getLength();
             if (useSocketBuffer) {
                 socketBuffer.append(chunk.getBuffer(), chunk.getStart(), 
-                                   chunk.getLength());
+                                    length);
             } else {
                 outputStream.write(chunk.getBuffer(), chunk.getStart(), 
-                                   chunk.getLength());
+                                   length);
             }
-            return chunk.getLength();
+            return length;
 
         }
 

==================================================
Parameters.java
index 642b270f46..f9fcf3cd2f 100644
--- a/java/org/apache/jk/common/MsgAjp.java
+++ b/java/org/apache/jk/common/MsgAjp.java
@@ -165,8 +165,9 @@ public class MsgAjp extends Msg {
 
         byte[] bytes = bc.getBytes();
         int start=bc.getStart();
-        appendInt( bc.getLength() );
-        cpBytes(bytes, start, bc.getLength());
+        int length = bc.getLength();
+        appendInt( length );
+        cpBytes(bytes, start, length);
         appendByte(0);
     }
 

==================================================
