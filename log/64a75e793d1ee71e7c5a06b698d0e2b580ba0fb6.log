64a75e793d1ee71e7c5a06b698d0e2b580ba0fb6
==================================================
- Tentative patch for the elusive 57799: some blocking IO code uses InputStream.available() (a useless call that has always been in the java.io API). Following the introduction of non blocking, available() now causes real IO to occur. While this should be mostly harmless for APR and NIO (which can "read" 0 bytes), it would leave an async read pending with NIO2. The read IO operation will now not occur unless a read listener has been set (in which case available() is mostly equivalent to the newer isReady() method).
==================================================
Remy Maucherat
==================================================
Mon Nov 2 15:20:44 2015 +0000
==================================================
InputBuffer.java
- Tentative patch for the elusive 57799: some blocking IO code uses InputStream.available() (a useless call that has always been in the java.io API). Following the introduction of non blocking, available() now causes real IO to occur. While this should be mostly harmless for APR and NIO (which can "read" 0 bytes), it would leave an async read pending with NIO2. The read IO operation will now not occur unless a read listener has been set (in which case available() is mostly equivalent to the newer isReady() method).
- Will wait until the fix is confirmed to work to port to 8, if not I will rework this.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1712044 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http11InputBuffer.java
index c99f667c43..63fc529434 100644
--- a/java/org/apache/catalina/connector/LocalStrings.properties
+++ b/java/org/apache/catalina/connector/LocalStrings.properties
@@ -64,6 +64,7 @@ coyoteResponse.sendRedirect.note=<html><body><p>Redirecting to <a href="{0}">{0}
 coyoteResponse.setBufferSize.ise=Cannot change buffer size after data has been written
 
 inputBuffer.streamClosed=Stream closed
+inputBuffer.requiresNonBlocking=Not available in non blocking mode
 
 outputBuffer.writeNull=The String argument to write(String,int,int) may not be null
 

==================================================
Http11Processor.java
index b87408d394..7084a44eba 100644
--- a/java/org/apache/coyote/http11/Http11InputBuffer.java
+++ b/java/org/apache/coyote/http11/Http11InputBuffer.java
@@ -626,14 +626,14 @@ public class Http11InputBuffer implements InputBuffer {
      * Available bytes in the buffers (note that due to encoding, this may not
      * correspond).
      */
-    int available() {
+    int available(boolean read) {
         int available = lastValid - pos;
         if ((available == 0) && (lastActiveFilter >= 0)) {
             for (int i = 0; (available == 0) && (i <= lastActiveFilter); i++) {
                 available = activeFilters[i].available();
             }
         }
-        if (available > 0) {
+        if (available > 0 || !read) {
             return available;
         }
 

==================================================
