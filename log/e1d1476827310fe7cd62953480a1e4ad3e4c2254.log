e1d1476827310fe7cd62953480a1e4ad3e4c2254
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=48399
==================================================
Mark Emlyn
==================================================
Sun Dec 20 03:46:02 2009 +0000
==================================================
DeltaSession.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=48399
Make locks final
Patch by sebb

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@892558 13f79535-47bb-0310-9956-ffa450edef68



==================================================
OrderInterceptor.java
index dfa726ed56..fd70a44469 100644
--- a/java/org/apache/catalina/ha/session/DeltaSession.java
+++ b/java/org/apache/catalina/ha/session/DeltaSession.java
@@ -92,7 +92,7 @@ public class DeltaSession extends StandardSession implements Externalizable,Clus
     private transient long lastTimeReplicated = System.currentTimeMillis();
 
 
-    protected Lock diffLock = new ReentrantReadWriteLock().writeLock();
+    protected final Lock diffLock = new ReentrantReadWriteLock().writeLock();
 
     private long version;
 

==================================================
MultiLockFairBlockingQueue.java
index 04d7e46b31..219b5344ea 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/OrderInterceptor.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/OrderInterceptor.java
@@ -61,8 +61,8 @@ public class OrderInterceptor extends ChannelInterceptorBase {
     private boolean forwardExpired = true;
     private int maxQueue = Integer.MAX_VALUE;
     
-    ReentrantReadWriteLock inLock = new ReentrantReadWriteLock(true);
-    ReentrantReadWriteLock outLock= new ReentrantReadWriteLock(true);
+    final ReentrantReadWriteLock inLock = new ReentrantReadWriteLock(true);
+    final ReentrantReadWriteLock outLock= new ReentrantReadWriteLock(true);
 
     @Override
     public void sendMessage(Member[] destination, ChannelMessage msg, InterceptorPayload payload) throws ChannelException {

==================================================
