f936a46db67e9b444b5495d0c5a55d2238e8b6a6
==================================================
Using the finalizer for sensitive operations is not a good idea since nothing in Tomcat retains the SSLContext instances after using them to init.
==================================================
Remy Maucherat
==================================================
Thu Dec 10 16:30:23 2015 +0000
==================================================
SSLContext.java
Using the finalizer for sensitive operations is not a good idea since nothing in Tomcat retains the SSLContext instances after using them to init.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1719106 13f79535-47bb-0310-9956-ffa450edef68



==================================================
JSSESSLContext.java
index 2e1a3a8ff3..57cacab4e2 100644
--- a/java/org/apache/tomcat/util/net/SSLContext.java
+++ b/java/org/apache/tomcat/util/net/SSLContext.java
@@ -37,6 +37,8 @@ public interface SSLContext {
     public void init(KeyManager[] kms, TrustManager[] tms,
             SecureRandom sr) throws KeyManagementException;
 
+    public void destroy();
+
     public SSLSessionContext getServerSessionContext();
 
     public SSLEngine createSSLEngine();

==================================================
OpenSSLContext.java
index 39abb85250..c4ec83df3f 100644
--- a/java/org/apache/tomcat/util/net/jsse/JSSESSLContext.java
+++ b/java/org/apache/tomcat/util/net/jsse/JSSESSLContext.java
@@ -43,6 +43,10 @@ class JSSESSLContext implements SSLContext {
         context.init(kms, tms, sr);
     }
 
+    @Override
+    public void destroy() {
+    }
+
     @Override
     public SSLSessionContext getServerSessionContext() {
         return context.getServerSessionContext();

==================================================
