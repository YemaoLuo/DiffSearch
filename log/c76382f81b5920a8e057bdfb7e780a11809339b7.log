c76382f81b5920a8e057bdfb7e780a11809339b7
==================================================
Refactor canWrite -> isReady to align with changes made to Servlet spec
==================================================
Mark Emlyn
==================================================
Tue Apr 30 14:24:51 2013 +0000
==================================================
CoyoteOutputStream.java
Refactor canWrite -> isReady to align with changes made to Servlet spec

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1477657 13f79535-47bb-0310-9956-ffa450edef68



==================================================
OutputBuffer.java
index 113f2c4f9e..13cd622a3a 100644
--- a/java/org/apache/catalina/connector/CoyoteOutputStream.java
+++ b/java/org/apache/catalina/connector/CoyoteOutputStream.java
@@ -111,7 +111,7 @@ public class CoyoteOutputStream
 
     @Override
     public boolean isReady() {
-        return ob.canWrite();
+        return ob.isReady();
     }
 
 

==================================================
Http11NioProcessor.java
index cab0f2a1c6..89803ec402 100644
--- a/java/org/apache/catalina/connector/OutputBuffer.java
+++ b/java/org/apache/catalina/connector/OutputBuffer.java
@@ -646,13 +646,13 @@ public class OutputBuffer extends Writer
     }
 
 
-    public boolean canWrite() {
+    public boolean isReady() {
         if (coyoteResponse.getWriteListener() == null) {
             throw new IllegalStateException("not in non blocking mode.");
         }
-        AtomicBoolean canWrite = new AtomicBoolean(true);
-        coyoteResponse.action(ActionCode.NB_WRITE_INTEREST, canWrite);
-        return canWrite.get();
+        AtomicBoolean isReady = new AtomicBoolean(true);
+        coyoteResponse.action(ActionCode.NB_WRITE_INTEREST, isReady);
+        return isReady.get();
     }
 
 

==================================================
InternalNioOutputBuffer.java
index 8cb4f2d75e..41c6e09835 100644
--- a/java/org/apache/coyote/http11/Http11NioProcessor.java
+++ b/java/org/apache/coyote/http11/Http11NioProcessor.java
@@ -614,11 +614,11 @@ public class Http11NioProcessor extends AbstractHttp11Processor<NioChannel> {
             if (socket==null || socket.getSocket().getAttachment(false)==null) {
                 return;
             }
-            AtomicBoolean canWrite = (AtomicBoolean)param;
-            if (outputBuffer.isWritable()) {
-                canWrite.set(true);
+            AtomicBoolean isReady = (AtomicBoolean)param;
+            if (outputBuffer.isReady()) {
+                isReady.set(true);
             } else {
-                canWrite.set(false);
+                isReady.set(false);
             }
         }
     }

==================================================
