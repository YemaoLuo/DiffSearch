af16402ace9f68fdf4294be337bc9e96d5dce660
==================================================
Improve language
==================================================
Mark Thomas
==================================================
Thu May 20 15:20:22 2021 +0100
==================================================
User.java
Improve language



==================================================
TcpFailureDetector.java
index e50fd8f8d2..7f1d1e5521 100644
--- a/java/org/apache/catalina/User.java
+++ b/java/org/apache/catalina/User.java
@@ -24,10 +24,10 @@ import java.util.Iterator;
 
 
 /**
- * <p>Abstract representation of a user in a {@link UserDatabase}.  Each user
- * is optionally associated with a set of {@link Group}s through which he or
- * she inherits additional security roles, and is optionally assigned a set
- * of specific {@link Role}s.</p>
+ * Abstract representation of a user in a {@link UserDatabase}.  Each user is
+ * optionally associated with a set of {@link Group}s through which they inherit
+ * additional security roles, and is optionally assigned a set of specific
+ * {@link Role}s.
  *
  * @author Craig R. McClanahan
  * @since 4.1

==================================================
Response.java
index 746786e9da..e493540d95 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/TcpFailureDetector.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/TcpFailureDetector.java
@@ -265,7 +265,7 @@ public class TcpFailureDetector extends ChannelInterceptorBase implements TcpFai
                 continue;
             }
             if (membership.memberAlive(members[i])) {
-                //we don't have this one in our membership, check to see if he/she is alive
+                //we don't have this one in our membership, check to see if the member is alive
                 if (memberAlive(members[i])) {
                     log.warn(sm.getString("tcpFailureDetector.performBasicCheck.memberAdded", members[i]));
                     super.memberAdded(members[i]);

==================================================
Utf8Decoder.java
index 99d3324ff1..f46dfed0df 100644
--- a/java/org/apache/coyote/Response.java
+++ b/java/org/apache/coyote/Response.java
@@ -432,7 +432,7 @@ public final class Response {
                 return true;
             } catch( NumberFormatException ex ) {
                 // Do nothing - the spec doesn't have any "throws"
-                // and the user might know what he's doing
+                // and the user might know what they're doing
                 return false;
             }
         }

==================================================
OpenSSLEngine.java
index ca819c4232..932e88c764 100644
--- a/java/org/apache/tomcat/util/buf/Utf8Decoder.java
+++ b/java/org/apache/tomcat/util/buf/Utf8Decoder.java
@@ -155,7 +155,7 @@ public class Utf8Decoder extends CharsetDecoder {
         int inIndex = pos + in.arrayOffset();
         int outIndex = out.position() + out.arrayOffset();
         // if someone would change the limit in process,
-        // he would face consequences
+        // they would face consequences
         for (; inIndex < inIndexLimit && outRemaining > 0; inIndex++) {
             int jchar = bArr[inIndex];
             if (jchar < 0) {

==================================================
Room.java
index 1cd8567c85..9f19c6d638 100644
--- a/webapps/docs/realm-howto.xml
+++ b/webapps/docs/realm-howto.xml
@@ -392,7 +392,7 @@ name "java:/comp/env/jdbc/authority".</p>
     <code>Realm</code>.  Thus, any changes you have made to the database
     directly (new users, changed passwords or roles, etc.) will be immediately
     reflected.</li>
-<li>Once a user has been authenticated, the user (and his or her associated
+<li>Once a user has been authenticated, the user (and their associated
     roles) are cached within Tomcat for the duration of the user's login.
     (For FORM-based authentication, that means until the session times out or
     is invalidated; for BASIC authentication, that means until the user
@@ -737,10 +737,10 @@ userPassword: janet</source>
 searches the directory for a unique entry with that value as its mail
 attribute and attempts to bind to the directory as
 <code>uid=jjones,ou=people,dc=mycompany,dc=com</code> with the given
-password. If authentication succeeds, she is assigned three roles:
-"role2" and "role3", the values of the "memberOf" attribute in her
+password. If authentication succeeds, they are assigned three roles:
+"role2" and "role3", the values of the "memberOf" attribute in their
 directory entry, and "tomcat", the value of the "cn" attribute in the
-only group entry of which she is a member.</p>
+only group entry of which they are a member.</p>
 
 <p>Finally, to authenticate the user by retrieving
 the password from the directory and making a local comparison in the
@@ -769,7 +769,7 @@ authentication is usually to be preferred.</p>
     <code>Realm</code>.  Thus, any changes you have made to the directory
     (new users, changed passwords or roles, etc.) will be immediately
     reflected.</li>
-<li>Once a user has been authenticated, the user (and his or her associated
+<li>Once a user has been authenticated, the user (and their associated
     roles) are cached within Tomcat for the duration of the user's login.
     (For FORM-based authentication, that means until the session times out or
     is invalidated; for BASIC authentication, that means until the user
@@ -836,7 +836,7 @@ to all virtual hosts and web applications.  The default contents of the
 <li>When a user attempts to access a protected resource for the first time,
     Tomcat will call the <code>authenticate()</code> method of this
     <code>Realm</code>.</li>
-<li>Once a user has been authenticated, the user (and his or her associated
+<li>Once a user has been authenticated, the user (and their associated
     roles) are cached within Tomcat for the duration of the user's login.
     (For FORM-based authentication, that means until the session times out or
     is invalidated; for BASIC authentication, that means until the user
@@ -894,7 +894,7 @@ valid user, consisting of the following attributes:</p>
 <li>When a user attempts to access a protected resource for the first time,
     Tomcat will call the <code>authenticate()</code> method of this
     <code>Realm</code>.</li>
-<li>Once a user has been authenticated, the user (and his or her associated
+<li>Once a user has been authenticated, the user (and their associated
     roles) are cached within Tomcat for the duration of the user's login.
     (For FORM-based authentication, that means until the session times out or
     is invalidated; for BASIC authentication, that means until the user
@@ -1005,8 +1005,8 @@ and restarting the server, without any code changes to your application.</li>
               method of this <code>Realm</code>.  Thus, any changes you have made in
               the security mechanism directly (new users, changed passwords or
               roles, etc.) will be immediately reflected.</li>
-          <li>Once a user has been authenticated, the user (and his or
-              her associated roles) are cached within Tomcat for the duration of
+          <li>Once a user has been authenticated, the user (and their
+              associated roles) are cached within Tomcat for the duration of
               the user's login.  For FORM-based authentication, that means until
               the session times out or is invalidated; for BASIC authentication,
               that means until the user closes their browser.  Any changes to the

==================================================
