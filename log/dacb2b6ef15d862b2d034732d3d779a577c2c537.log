dacb2b6ef15d862b2d034732d3d779a577c2c537
==================================================
Update internal form of Apache Commons DBCP
==================================================
Mark Thomas
==================================================
Fri May 3 16:46:30 2019 +0100
==================================================
BasicDataSource.java
index 5687de5eae..e28ca946c9 100644
--- a/MERGE.txt
+++ b/MERGE.txt
@@ -63,7 +63,7 @@ Sub-tree
 src/main/java/org/apache/commons/dbcp2
 src/main/resources/org/apache/commons/dbcp2
 The SHA1 ID for the most recent commit to be merged to Tomcat is:
-de20b7779214cf8b0056aa61bb6d56c94ed3afb7
+dcdbc72acf51155d2a6c3f10461d9712a3623686 (2019-04-24)
 
 Pool2
 Sub-tree

==================================================
ObjectNameWrapper.java
index bf008d8073..37f036d7c2 100644
--- a/java/org/apache/tomcat/dbcp/dbcp2/BasicDataSource.java
+++ b/java/org/apache/tomcat/dbcp/dbcp2/BasicDataSource.java
@@ -418,12 +418,12 @@ public class BasicDataSource implements DataSource, BasicDataSourceMXBean, MBean
             registeredJmxObjectName = null;
         }
         closed = true;
-        final GenericObjectPool<?> oldpool = connectionPool;
+        final GenericObjectPool<?> oldPool = connectionPool;
         connectionPool = null;
         dataSource = null;
         try {
-            if (oldpool != null) {
-                oldpool.close();
+            if (oldPool != null) {
+                oldPool.close();
             }
         } catch (final RuntimeException e) {
             throw e;
@@ -1506,7 +1506,8 @@ public class BasicDataSource implements DataSource, BasicDataSourceMXBean, MBean
     /**
      * Manually evicts idle connections.
      *
-     * @throws Exception when there is a problem evicting idle objects.
+     * @throws Exception Thrown by {@link GenericObjectPool#evict()}.
+     * @see GenericObjectPool#evict()
      */
     public void evict() throws Exception {
         if (connectionPool != null) {

==================================================
PoolingDataSource.java
index f036989e98..9c789364e5 100644
--- a/java/org/apache/tomcat/dbcp/dbcp2/ObjectNameWrapper.java
+++ b/java/org/apache/tomcat/dbcp/dbcp2/ObjectNameWrapper.java
@@ -18,6 +18,7 @@
 package org.apache.tomcat.dbcp.dbcp2;
 
 import java.lang.management.ManagementFactory;
+import java.util.Objects;
 
 import javax.management.MBeanServer;
 import javax.management.MalformedObjectNameException;
@@ -76,6 +77,14 @@ class ObjectNameWrapper {
         }
     }
 
+    /**
+     * @since 2.7.0
+     */
+    @Override
+    public String toString() {
+        return Objects.toString(objectName);
+    }
+
     public void unregisterMBean() {
         if (MBEAN_SERVER == null || objectName == null) {
             return;

==================================================
ManagedDataSource.java
index 70601b0fdd..38a04729c5 100644
--- a/java/org/apache/tomcat/dbcp/dbcp2/PoolingDataSource.java
+++ b/java/org/apache/tomcat/dbcp/dbcp2/PoolingDataSource.java
@@ -75,7 +75,7 @@ public class PoolingDataSource<C extends Connection> implements DataSource, Auto
      * @since 2.1
      */
     @Override
-    public void close() throws Exception {
+    public void close() throws RuntimeException, SQLException {
         try {
             pool.close();
         } catch (final RuntimeException rte) {

==================================================
