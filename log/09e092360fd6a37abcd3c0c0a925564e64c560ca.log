09e092360fd6a37abcd3c0c0a925564e64c560ca
==================================================
EL 3.0
==================================================
Mark Emlyn
==================================================
Wed Jul 3 13:17:50 2013 +0000
==================================================
ELContext.java
EL 3.0
Implement new method
Creating ExpressionFactory instances is relatively expensive so they need to be cached but caching them is a potential memory leak since applications may ship their own implementations. Copy the caching approach from the ExpressionFactory implementation.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1499388 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Util.java
index 7e16a924ba..570b132376 100644
--- a/java/javax/el/ELContext.java
+++ b/java/javax/el/ELContext.java
@@ -155,4 +155,23 @@ public abstract class ELContext {
             }
         }
     }
+
+    /**
+     * @since EL 3.0
+     */
+    public Object convertToType(Object obj, Class<?> type) {
+
+        boolean originalResolved = isPropertyResolved();
+        try {
+            ELResolver resolver = getELResolver();
+            Object result = resolver.convertToType(this, obj, type);
+            if (isPropertyResolved()) {
+                return result;
+            }
+        } finally {
+            setPropertyResolved(originalResolved);
+        }
+
+        return Util.getExpressionFactory().coerceToType(type, type);
+    }
 }

==================================================
