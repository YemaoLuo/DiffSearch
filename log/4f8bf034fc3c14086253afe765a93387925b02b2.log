4f8bf034fc3c14086253afe765a93387925b02b2
==================================================
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=47467
==================================================
Mark Thomas
==================================================
Wed Feb 28 16:12:11 2018 +0000
==================================================
HTMLManagerServlet.java
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=47467
When deploying a web application via the manager application and a path is not explicitly specified, derive it from the provided deployment descriptor or, if that is not present, the WAR or DIR.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1825580 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ManagerServlet.java
index 8f46214f1d..12adb653c6 100644
--- a/java/org/apache/catalina/manager/HTMLManagerServlet.java
+++ b/java/org/apache/catalina/manager/HTMLManagerServlet.java
@@ -185,14 +185,19 @@ public final class HTMLManagerServlet extends ManagerServlet {
         if (path != null) {
             cn = new ContextName(path, request.getParameter("version"));
         }
+
         String deployPath = request.getParameter("deployPath");
+        String deployWar = request.getParameter("deployWar");
+        String deployConfig = request.getParameter("deployConfig");
         ContextName deployCn = null;
-        if (deployPath != null) {
-            deployCn = new ContextName(deployPath,
-                    request.getParameter("deployVersion"));
+        if (deployPath != null && deployPath.length() > 0) {
+            deployCn = new ContextName(deployPath, request.getParameter("deployVersion"));
+        } else if (deployConfig != null && deployConfig.length() > 0) {
+            deployCn = ContextName.extractFromPath(deployConfig);
+        } else if (deployWar != null && deployWar.length() > 0) {
+            deployCn = ContextName.extractFromPath(deployWar);
         }
-        String deployConfig = request.getParameter("deployConfig");
-        String deployWar = request.getParameter("deployWar");
+
         String tlsHostName = request.getParameter("tlsHostName");
 
         // Prepare our output writer to generate the response message

==================================================
ContextName.java
index 478d06afd4..9312e478f9 100644
--- a/java/org/apache/catalina/manager/ManagerServlet.java
+++ b/java/org/apache/catalina/manager/ManagerServlet.java
@@ -311,14 +311,20 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
         String command = request.getPathInfo();
         if (command == null)
             command = request.getServletPath();
-        String config = request.getParameter("config");
+
         String path = request.getParameter("path");
+        String war = request.getParameter("war");
+        String config = request.getParameter("config");
         ContextName cn = null;
         if (path != null) {
             cn = new ContextName(path, request.getParameter("version"));
+        } else if (config != null) {
+            cn = ContextName.extractFromPath(config);
+        } else if (war != null) {
+            cn = ContextName.extractFromPath(war);
         }
+
         String type = request.getParameter("type");
-        String war = request.getParameter("war");
         String tag = request.getParameter("tag");
         boolean update = false;
         if ((request.getParameter("update") != null)

==================================================
TestContextNameExtractFromPath.java
index 90b92f7dee..877197da91 100644
--- a/java/org/apache/catalina/util/ContextName.java
+++ b/java/org/apache/catalina/util/ContextName.java
@@ -173,4 +173,29 @@ public final class ContextName {
     public String toString() {
         return getDisplayName();
     }
+
+
+    /**
+     * Extract the final component of the given path which is assumed to be a
+     * base name and generate a {@link ContextName} from that base name.
+     *
+     * @param path The path that ends in a base name
+     *
+     * @return the {@link ContextName} generated from the given base name
+     */
+    public static ContextName extractFromPath(String path) {
+        // Convert '\' to '/'
+        path = path.replaceAll("\\\\", "/");
+        // Remove trailing '/'. Use while just in case a value ends in ///
+        while (path.endsWith("/")) {
+            path = path.substring(0, path.length() - 1);
+        }
+
+        int lastSegment = path.lastIndexOf('/');
+        if (lastSegment > 0) {
+            path = path.substring(lastSegment + 1);
+        }
+
+        return new ContextName(path, true);
+    }
 }

==================================================
