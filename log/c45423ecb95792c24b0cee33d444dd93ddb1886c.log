c45423ecb95792c24b0cee33d444dd93ddb1886c
==================================================
IOExceptions need to trigger the closing of the WebSocket connection.
==================================================
Mark Emlyn
==================================================
Wed Oct 2 10:56:24 2013 +0000
==================================================
AprServletInputStream.java
IOExceptions need to trigger the closing of the WebSocket connection.
Errors need to be propogated for upgraded connections as they are for async connections
Handle Windows specific error code for connection abort

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1528424 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AprEndpoint.java
index 5033bbc0c5..ba0e9f2f77 100644
--- a/java/org/apache/coyote/http11/upgrade/LocalStrings.properties
+++ b/java/org/apache/coyote/http11/upgrade/LocalStrings.properties
@@ -24,6 +24,7 @@ upgrade.sos.canWrite.ise=It is illegal to call canWrite() when the ServletOutput
 upgrade.sos.writeListener.null=It is illegal to pass null to setWriteListener()
 upgrade.sis.write.ise=It is illegal to call any of the write() methods in non-blocking mode without first checking that there is space available by calling isReady()
 
+apr.clientAbort=The client aborted the connection.
 apr.read.error=Unexpected error [{0}] reading data from the APR/native socket.
 apr.write.error=Unexpected error [{0}] writing data to the APR/native socket.
 apr.closed=The socket associated with this connection has been closed.

==================================================
WsHttpUpgradeHandler.java
index 273b907413..d353d98fd1 100644
--- a/java/org/apache/tomcat/util/net/AprEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AprEndpoint.java
@@ -1826,7 +1826,7 @@ public class AprEndpoint extends AbstractEndpoint<Long> {
                                 } else if (((desc[n*2] & Poll.APR_POLLHUP) == Poll.APR_POLLHUP)
                                         || ((desc[n*2] & Poll.APR_POLLERR) == Poll.APR_POLLERR)
                                         || ((desc[n*2] & Poll.APR_POLLNVAL) == Poll.APR_POLLNVAL)) {
-                                    if (wrapper.isAsync()) {
+                                    if (wrapper.isAsync() || wrapper.isUpgraded()) {
                                         // Must be using non-blocking IO for the socket to be in the
                                         // poller during async processing. Need to trigger error
                                         // handling. Poller may return error codes plus the flags it

==================================================
