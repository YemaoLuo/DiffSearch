61df8cfdd7b510ae33ce25ad8bcb693fe12ba6f3
==================================================
Re-factoring in support of https://issues.apache.org/bugzilla/show_bug.cgi?id=50360
==================================================
Mark Emlyn
==================================================
Wed Dec 8 14:51:10 2010 +0000
==================================================
AbstractProtocolHandler.java
Re-factoring in support of https://issues.apache.org/bugzilla/show_bug.cgi?id=50360
Pull up start()

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1043441 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AjpAprProtocol.java
index bd98a31386..94a44adfd9 100644
--- a/java/org/apache/coyote/LocalStrings.properties
+++ b/java/org/apache/coyote/LocalStrings.properties
@@ -18,6 +18,8 @@ abstractProtocolHandler.setAttribute=Set attribute [{0}] with value [{1}]
 abstractProtocolHandler.init=Initializing ProtocolHandler [{0}]
 abstractProtocolHandler.initError=Failed to initialize end point associated with ProtocolHandler [{0}]
 abstractProtocolHandler.mbeanRegistrationFailed=Failed to register MBean [{0}] for ProtocolHandler [{1}]
+abstractProtocolHandler.start=Starting ProtocolHandler [{0}]
+abstractProtocolHandler.startError=Failed to start end point associated with ProtocolHandler [{0}]
 abstractProtocolHandler.pause=Pausing ProtocolHandler [{0}]
 abstractProtocolHandler.pauseError=Failed to pause end point associated with ProtocolHandler [{0}]
 abstractProtocolHandler.resume=Resuming ProtocolHandler [{0}]

==================================================
AjpProtocol.java
index 69141ac3fc..53bf3ba9e7 100644
--- a/java/org/apache/coyote/ajp/AjpAprProtocol.java
+++ b/java/org/apache/coyote/ajp/AjpAprProtocol.java
@@ -86,19 +86,6 @@ public class AjpAprProtocol extends AbstractAjpProtocol {
     // --------------------------------------------------------- Public Methods
 
 
-    @Override
-    public void start() throws Exception {
-        try {
-            endpoint.start();
-        } catch (Exception ex) {
-            log.error(sm.getString("ajpprotocol.endpoint.starterror"), ex);
-            throw ex;
-        }
-        if (log.isInfoEnabled())
-            log.info(sm.getString("ajpprotocol.start", getName()));
-    }
-
-
     public boolean getUseSendfile() { return endpoint.getUseSendfile(); }
     public void setUseSendfile(@SuppressWarnings("unused") boolean useSendfile) {
         /* No sendfile for AJP */

==================================================
Http11AprProtocol.java
index cab49847dd..5ec65ca895 100644
--- a/java/org/apache/coyote/ajp/AjpProtocol.java
+++ b/java/org/apache/coyote/ajp/AjpProtocol.java
@@ -83,22 +83,6 @@ public class AjpProtocol extends AbstractAjpProtocol {
     private AjpConnectionHandler cHandler;
 
 
-    // --------------------------------------------------------- Public Methods
-
-
-    @Override
-    public void start() throws Exception {
-        try {
-            endpoint.start();
-        } catch (Exception ex) {
-            log.error(sm.getString("ajpprotocol.endpoint.starterror"), ex);
-            throw ex;
-        }
-        if (log.isInfoEnabled())
-            log.info(sm.getString("ajpprotocol.start", getName()));
-    }
-
-
     // --------------------------------------  AjpConnectionHandler Inner Class
 
 

==================================================
Http11NioProtocol.java
index 3bd8809735..2480aead53 100644
--- a/java/org/apache/coyote/http11/Http11AprProtocol.java
+++ b/java/org/apache/coyote/http11/Http11AprProtocol.java
@@ -79,18 +79,6 @@ public class Http11AprProtocol extends AbstractHttp11Protocol {
         setProcessorCache(-1);
     }
 
-    @Override
-    public void start() throws Exception {
-        try {
-            endpoint.start();
-        } catch (Exception ex) {
-            log.error(sm.getString("http11protocol.endpoint.starterror"), ex);
-            throw ex;
-        }
-        if(log.isInfoEnabled())
-            log.info(sm.getString("http11protocol.start", getName()));
-    }
-
     private final Http11ConnectionHandler cHandler;
 
     public boolean getUseSendfile() { return ((AprEndpoint)endpoint).getUseSendfile(); }

==================================================
Http11Protocol.java
index 8e90bd1c8b..a0f401735a 100644
--- a/java/org/apache/coyote/http11/Http11NioProtocol.java
+++ b/java/org/apache/coyote/http11/Http11NioProtocol.java
@@ -81,19 +81,6 @@ public class Http11NioProtocol extends AbstractHttp11JsseProtocol {
     }
 
 
-    @Override
-    public void start() throws Exception {
-        try {
-            endpoint.start();
-        } catch (Exception ex) {
-            log.error(sm.getString("http11protocol.endpoint.starterror"), ex);
-            throw ex;
-        }
-        if(log.isInfoEnabled())
-            log.info(sm.getString("http11protocol.start", getName()));
-    }
-
-
     // -------------------- Properties--------------------
     
 

==================================================
