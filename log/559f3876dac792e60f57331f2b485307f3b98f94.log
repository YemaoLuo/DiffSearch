559f3876dac792e60f57331f2b485307f3b98f94
==================================================
Move clientAuth/verifyClient to SSLHostConfig
==================================================
Mark Thomas
==================================================
Thu Apr 30 14:33:58 2015 +0000
==================================================
AbstractHttp11JsseProtocol.java
Move clientAuth/verifyClient to SSLHostConfig

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1677006 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AbstractHttp11Protocol.java
index d1d49055e8..aecd233441 100644
--- a/java/org/apache/coyote/http11/AbstractHttp11JsseProtocol.java
+++ b/java/org/apache/coyote/http11/AbstractHttp11JsseProtocol.java
@@ -25,9 +25,6 @@ public abstract class AbstractHttp11JsseProtocol<S>
         super(endpoint);
     }
 
-    public String getClientAuth() { return getEndpoint().getClientAuth();}
-    public void setClientAuth(String s ) { getEndpoint().setClientAuth(s);}
-
     public String getKeystorePass() { return getEndpoint().getKeystorePass();}
     public void setKeystorePass(String s ) { getEndpoint().setKeystorePass(s);}
 

==================================================
Http11AprProtocol.java
index 934ab6aba6..43fdf5cbb4 100644
--- a/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
+++ b/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
@@ -356,6 +356,9 @@ public abstract class AbstractHttp11Protocol<S> extends AbstractProtocol<S> {
     }
 
 
+    // TODO: All of these SSL setters can be removed once it is no longer
+    // necessary to support the old configuration attributes (Tomcat 10?).
+
     public void setSslEnabledProtocols(String enabledProtocols) {
         registerDefaultSSLHostConfig();
         defaultSSLHostConfig.setProtocols(enabledProtocols);
@@ -384,6 +387,16 @@ public abstract class AbstractHttp11Protocol<S> extends AbstractProtocol<S> {
         defaultSSLHostConfig.setKeyManagerAlgorithm(keyManagerAlgorithm);
     }
 
+    public void setClientAuth(String certificateVerification) {
+        registerDefaultSSLHostConfig();
+        defaultSSLHostConfig.setCertificateVerification(certificateVerification);
+    }
+
+    public void setSSLVerifyClient(String certificateVerification) {
+        registerDefaultSSLHostConfig();
+        defaultSSLHostConfig.setCertificateVerification(certificateVerification);
+    }
+
 
     // ------------------------------------------------------------- Common code
 

==================================================
AbstractEndpoint.java
index 93dabd74f8..fe740167c7 100644
--- a/java/org/apache/coyote/http11/Http11AprProtocol.java
+++ b/java/org/apache/coyote/http11/Http11AprProtocol.java
@@ -132,13 +132,6 @@ public class Http11AprProtocol extends AbstractHttp11Protocol<Long> {
     public void setSSLCARevocationFile(String SSLCARevocationFile) { ((AprEndpoint)getEndpoint()).setSSLCARevocationFile(SSLCARevocationFile); }
 
 
-    /**
-     * SSL verify client.
-     */
-    public String getSSLVerifyClient() { return ((AprEndpoint)getEndpoint()).getSSLVerifyClient(); }
-    public void setSSLVerifyClient(String SSLVerifyClient) { ((AprEndpoint)getEndpoint()).setSSLVerifyClient(SSLVerifyClient); }
-
-
     /**
      * SSL verify depth.
      */

==================================================
AbstractJsseEndpoint.java
index c1708f7a89..b64c5b5f19 100644
--- a/java/org/apache/tomcat/util/net/AbstractEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AbstractEndpoint.java
@@ -984,10 +984,6 @@ public abstract class AbstractEndpoint<S> {
         this.sslImplementationName = s;
     }
 
-    private String clientAuth = "false";
-    public String getClientAuth() { return clientAuth;}
-    public void setClientAuth(String s ) { this.clientAuth = s;}
-
     private String keystorePass = null;
     public String getKeystorePass() { return keystorePass;}
     public void setKeystorePass(String s ) { this.keystorePass = s;}

==================================================
AprEndpoint.java
index 9739683940..a361cb443c 100644
--- a/java/org/apache/tomcat/util/net/AbstractJsseEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AbstractJsseEndpoint.java
@@ -81,13 +81,18 @@ public abstract class AbstractJsseEndpoint<S> extends AbstractEndpoint<S> {
         }
 
         SSLEngine engine = sslContextWrapper.getSSLContext().createSSLEngine();
-        if ("false".equals(getClientAuth())) {
+        switch (sslHostConfig.getCertificateVerification()) {
+        case NONE:
             engine.setNeedClientAuth(false);
             engine.setWantClientAuth(false);
-        } else if ("true".equals(getClientAuth()) || "yes".equals(getClientAuth())){
-            engine.setNeedClientAuth(true);
-        } else if ("want".equals(getClientAuth())) {
+            break;
+        case OPTIONAL:
+        case OPTIONAL_NO_CA:
             engine.setWantClientAuth(true);
+            break;
+        case REQUIRED:
+            engine.setNeedClientAuth(true);
+            break;
         }
         engine.setUseClientMode(false);
         engine.setEnabledCipherSuites(sslContextWrapper.getEnabledCiphers());

==================================================
SSLHostConfig.java
index e0bff09fc9..66a664d24e 100644
--- a/java/org/apache/tomcat/util/net/LocalStrings.properties
+++ b/java/org/apache/tomcat/util/net/LocalStrings.properties
@@ -110,4 +110,5 @@ socket.apr.read.sslGeneralError=An APR general error was returned by the SSL rea
 socket.apr.write.error=Unexpected error [{0}] writing data to the APR/native socket [{1}] with wrapper [{2}].
 socket.apr.closed=The socket [{0}] associated with this connection has been closed.
 
+sslHostConfig.certificateVerificationInvalid=The certificate verification value [{0}] is not recognised
 sslHostConfig.mismatch=The property [{0}] was set on the SSLHostConfig named [{1}] but this property is for connectors of type [{2}] by the SSLHostConfig is being used with a connector of type [{3}]
\ No newline at end of file

==================================================
