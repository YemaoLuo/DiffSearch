bbbee0d96e82fb2a5cbac730366ac49ccb0d366d
==================================================
61681: Allow HTTP/2 push when using a request wrapper. The main problem is that newPUshBuilder doesn't allow passing the base request, unlike startAsync, so add an extra proprietary method to do it. The request wrappers will then have to use reflection or cast to the base RequestFacade type.
==================================================
Remy Maucherat
==================================================
Fri Nov 3 14:31:36 2017 +0000
==================================================
Request.java
61681: Allow HTTP/2 push when using a request wrapper. The main problem is that newPUshBuilder doesn't allow passing the base request, unlike startAsync, so add an extra proprietary method to do it. The request wrappers will then have to use reflection or cast to the base RequestFacade type.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1814192 13f79535-47bb-0310-9956-ffa450edef68



==================================================
RequestFacade.java
index eb7a143b33..2ec3b8941e 100644
--- a/java/org/apache/catalina/connector/Request.java
+++ b/java/org/apache/catalina/connector/Request.java
@@ -1962,10 +1962,15 @@ public class Request implements HttpServletRequest {
 
     @Override
     public PushBuilder newPushBuilder() {
+        return newPushBuilder(this);
+    }
+
+
+    public PushBuilder newPushBuilder(HttpServletRequest request) {
         AtomicBoolean result = new AtomicBoolean();
         coyoteRequest.action(ActionCode.IS_PUSH_SUPPORTED, result);
         if (result.get()) {
-            return new ApplicationPushBuilder(this);
+            return new ApplicationPushBuilder(this, request);
         } else {
             return null;
         }

==================================================
ApplicationHttpRequest.java
index e3b49104b8..11ad088491 100644
--- a/java/org/apache/catalina/connector/RequestFacade.java
+++ b/java/org/apache/catalina/connector/RequestFacade.java
@@ -1130,6 +1130,11 @@ public class RequestFacade implements HttpServletRequest {
     }
 
 
+    public PushBuilder newPushBuilder(HttpServletRequest request) {
+        return this.request.newPushBuilder(request);
+    }
+
+
     @Override
     public boolean isTrailerFieldsReady() {
         return request.isTrailerFieldsReady();

==================================================
ApplicationPushBuilder.java
index 0276e62d4f..fc3a1d655b 100644
--- a/java/org/apache/catalina/core/ApplicationHttpRequest.java
+++ b/java/org/apache/catalina/core/ApplicationHttpRequest.java
@@ -33,6 +33,8 @@ import java.util.NoSuchElementException;
 import javax.servlet.DispatcherType;
 import javax.servlet.RequestDispatcher;
 import javax.servlet.ServletContext;
+import javax.servlet.ServletRequest;
+import javax.servlet.ServletRequestWrapper;
 import javax.servlet.http.HttpServletMapping;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletRequestWrapper;
@@ -43,6 +45,7 @@ import org.apache.catalina.Context;
 import org.apache.catalina.Globals;
 import org.apache.catalina.Manager;
 import org.apache.catalina.Session;
+import org.apache.catalina.connector.RequestFacade;
 import org.apache.catalina.util.ParameterMap;
 import org.apache.catalina.util.RequestUtil;
 import org.apache.tomcat.util.buf.B2CConverter;
@@ -604,7 +607,15 @@ class ApplicationHttpRequest extends HttpServletRequestWrapper {
 
     @Override
     public PushBuilder newPushBuilder() {
-        return new ApplicationPushBuilder(this);
+        ServletRequest current = getRequest();
+        while (current instanceof ServletRequestWrapper) {
+            current = ((ServletRequestWrapper) current).getRequest();
+        }
+        if (current instanceof RequestFacade) {
+            return ((RequestFacade) current).newPushBuilder(this);
+        } else {
+            return null;
+        }
     }
 
 

==================================================
RemoteIpFilter.java
index 7ec75c08e1..b715ae9eb8 100644
--- a/java/org/apache/catalina/core/ApplicationPushBuilder.java
+++ b/java/org/apache/catalina/core/ApplicationPushBuilder.java
@@ -26,8 +26,6 @@ import java.util.List;
 import java.util.Map;
 import java.util.Set;
 
-import javax.servlet.ServletRequest;
-import javax.servlet.ServletRequestWrapper;
 import javax.servlet.SessionTrackingMode;
 import javax.servlet.http.Cookie;
 import javax.servlet.http.HttpServletRequest;
@@ -74,20 +72,11 @@ public class ApplicationPushBuilder implements PushBuilder {
     private String sessionId;
 
 
-    public ApplicationPushBuilder(HttpServletRequest request) {
+    public ApplicationPushBuilder(Request catalinaRequest, HttpServletRequest request) {
+
         baseRequest = request;
-        // Need a reference to the CoyoteRequest in order to process the push
-        ServletRequest current = request;
-        while (current instanceof ServletRequestWrapper) {
-            current = ((ServletRequestWrapper) current).getRequest();
-        }
-        if (current instanceof Request) {
-            catalinaRequest = (Request) current;
-            coyoteRequest = catalinaRequest.getCoyoteRequest();
-        } else {
-            throw new UnsupportedOperationException(sm.getString(
-                    "applicationPushBuilder.noCoyoteRequest", current.getClass().getName()));
-        }
+        this.catalinaRequest = catalinaRequest;
+        coyoteRequest = catalinaRequest.getCoyoteRequest();
 
         // Populate the initial list of HTTP headers
         Enumeration<String> headerNames = request.getHeaderNames();
@@ -169,7 +158,6 @@ public class ApplicationPushBuilder implements PushBuilder {
         }
     }
 
-
     @Override
     public PushBuilder path(String path) {
         if (path.startsWith("/")) {

==================================================
