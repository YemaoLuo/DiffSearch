1969a1265793576dbcb8ffd8873fa95ac500650a
==================================================
Pull up prepareSendfile()
==================================================
Mark Thomas
==================================================
Fri Jan 23 19:03:37 2015 +0000
==================================================
AbstractHttp11Processor.java
Pull up prepareSendfile()

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1654328 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http11AprProcessor.java
index 148cc7292c..d86f9defd0 100644
--- a/java/org/apache/coyote/http11/AbstractHttp11Processor.java
+++ b/java/org/apache/coyote/http11/AbstractHttp11Processor.java
@@ -1559,7 +1559,22 @@ public abstract class AbstractHttp11Processor<S> extends AbstractProcessor<S> {
         return connection.equals(Constants.CLOSE);
     }
 
-    abstract boolean prepareSendfile(OutputFilter[] outputFilters);
+    private boolean prepareSendfile(OutputFilter[] outputFilters) {
+        String fileName = (String) request.getAttribute(
+                org.apache.coyote.Constants.SENDFILE_FILENAME_ATTR);
+        if (fileName != null) {
+            // No entity body sent here
+            getOutputBuffer().addActiveFilter(outputFilters[Constants.VOID_FILTER]);
+            contentDelimitation = true;
+            sendfileData = socketWrapper.createSendfileData(fileName,
+                    ((Long) request.getAttribute(
+                            org.apache.coyote.Constants.SENDFILE_FILE_START_ATTR)).longValue(),
+                    ((Long) request.getAttribute(
+                            org.apache.coyote.Constants.SENDFILE_FILE_END_ATTR)).longValue() - sendfileData.pos);
+            return true;
+        }
+        return false;
+    }
 
     /**
      * Parse host.
@@ -1772,7 +1787,7 @@ public abstract class AbstractHttp11Processor<S> extends AbstractProcessor<S> {
      *
      * @return true if the keep-alive loop should be broken
      */
-    protected boolean breakKeepAliveLoop(SocketWrapperBase<S> socketWrapper) {
+    private boolean breakKeepAliveLoop(SocketWrapperBase<S> socketWrapper) {
         openSocket = keepAlive;
         // Do sendfile as needed: add socket to sendfile and end
         if (sendfileData != null && !getErrorState().isError()) {

==================================================
Http11Nio2Processor.java
index 3febb2fc39..3e42ed9c1e 100644
--- a/java/org/apache/coyote/http11/Http11AprProcessor.java
+++ b/java/org/apache/coyote/http11/Http11AprProcessor.java
@@ -312,25 +312,4 @@ public class Http11AprProcessor extends AbstractHttp11Processor<Long> {
         }
         }
     }
-
-
-    // ------------------------------------------------------ Protected Methods
-
-    @Override
-    protected boolean prepareSendfile(OutputFilter[] outputFilters) {
-        String fileName = (String) request.getAttribute(
-                org.apache.coyote.Constants.SENDFILE_FILENAME_ATTR);
-        if (fileName != null) {
-            // No entity body sent here
-            getOutputBuffer().addActiveFilter(outputFilters[Constants.VOID_FILTER]);
-            contentDelimitation = true;
-            sendfileData = socketWrapper.createSendfileData(fileName,
-                    ((Long) request.getAttribute(
-                            org.apache.coyote.Constants.SENDFILE_FILE_START_ATTR)).longValue(),
-                    ((Long) request.getAttribute(
-                            org.apache.coyote.Constants.SENDFILE_FILE_END_ATTR)).longValue() - sendfileData.pos);
-            return true;
-        }
-        return false;
-    }
 }

==================================================
Http11NioProcessor.java
index c6b4dbec3f..14139efa64 100644
--- a/java/org/apache/coyote/http11/Http11Nio2Processor.java
+++ b/java/org/apache/coyote/http11/Http11Nio2Processor.java
@@ -310,24 +310,6 @@ public class Http11Nio2Processor extends AbstractHttp11Processor<Nio2Channel> {
 
     // ------------------------------------------------------ Protected Methods
 
-    @Override
-    protected boolean prepareSendfile(OutputFilter[] outputFilters) {
-        String fileName = (String) request.getAttribute(
-                org.apache.coyote.Constants.SENDFILE_FILENAME_ATTR);
-        if (fileName != null) {
-            // No entity body sent here
-            getOutputBuffer().addActiveFilter(outputFilters[Constants.VOID_FILTER]);
-            contentDelimitation = true;
-            sendfileData = socketWrapper.createSendfileData(fileName,
-                    ((Long) request.getAttribute(
-                            org.apache.coyote.Constants.SENDFILE_FILE_START_ATTR)).longValue(),
-                    ((Long) request.getAttribute(
-                            org.apache.coyote.Constants.SENDFILE_FILE_END_ATTR)).longValue() - sendfileData.pos);
-            return true;
-        }
-        return false;
-    }
-
     /**
      * Set the SSL information for this HTTP connection.
      */

==================================================
