0520615c42ec13e0306efbfc76a9f4d312f0c3f3
==================================================
Prevent file locking on context stop
==================================================
Mark Emlyn
==================================================
Mon May 13 23:23:21 2013 +0000
==================================================
AbstractFileResourceSet.java
Prevent file locking on context stop

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1482144 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AbstractResourceSet.java
index cf80488e8f..4faf1914a5 100644
--- a/java/org/apache/catalina/webresources/AbstractFileResourceSet.java
+++ b/java/org/apache/catalina/webresources/AbstractFileResourceSet.java
@@ -120,5 +120,11 @@ public abstract class AbstractFileResourceSet extends AbstractResourceSet {
         }
     }
 
+
+    @Override
+    protected void destroyInternal() throws LifecycleException {
+        // NO-OP
+    }
+
     protected abstract void checkType(File file);
 }

==================================================
JarResourceSet.java
index 14d49e8993..2c399afda3 100644
--- a/java/org/apache/catalina/webresources/AbstractResourceSet.java
+++ b/java/org/apache/catalina/webresources/AbstractResourceSet.java
@@ -91,9 +91,4 @@ public abstract class AbstractResourceSet extends LifecycleBase
     protected final void stopInternal() throws LifecycleException {
         setState(LifecycleState.STOPPING);
     }
-
-    @Override
-    protected final void destroyInternal() throws LifecycleException {
-        // NO-OP
-    }
 }

==================================================
StandardRoot.java
index 27c031f42c..e4f78f5b43 100644
--- a/java/org/apache/catalina/webresources/JarResourceSet.java
+++ b/java/org/apache/catalina/webresources/JarResourceSet.java
@@ -268,4 +268,13 @@ public class JarResourceSet extends AbstractResourceSet {
             throw new IllegalArgumentException(e);
         }
     }
+
+    @Override
+    protected void destroyInternal() throws LifecycleException {
+        try {
+            this.base.close();
+        } catch (IOException ioe) {
+            throw new LifecycleException(ioe);
+        }
+    }
 }

==================================================
