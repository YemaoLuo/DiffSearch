479b26ad999488a4c5d405244f8dd7ebfa5dda7d
==================================================
Follow-up to r1817495
==================================================
Mark Thomas
==================================================
Fri Dec 8 15:57:42 2017 +0000
==================================================
ReflectionUtil.java
Follow-up to r1817495

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817517 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestMethodExpressionImpl.java
index 30e1f0c13b..f7593054bf 100644
--- a/java/org/apache/el/util/ReflectionUtil.java
+++ b/java/org/apache/el/util/ReflectionUtil.java
@@ -180,12 +180,12 @@ public class ReflectionUtil {
             }
             if (m.isVarArgs() && paramCount > mParamCount && paramValues != null &&
                     paramValues.length != paramCount) {
-                // Number of parameter types and values do not agree
-                throw new IllegalArgumentException();
+                // Might match a different varargs method
+                continue;
             }
             if (!m.isVarArgs() && paramValues != null && paramCount != paramValues.length) {
-                // Number of parameter types and values do not agree
-                throw new IllegalArgumentException();
+                // Might match a different varargs method
+                continue;
             }
 
             // Check the parameters match
@@ -196,7 +196,7 @@ public class ReflectionUtil {
             for (int i = 0; i < mParamCount; i++) {
                 // Can't be null
                 if (m.isVarArgs() && i == (mParamCount - 1)) {
-                    if (i == paramCount && paramCount == (mParamCount - 1)) {
+                    if (i == paramCount || (paramValues != null && paramValues.length == i)) {
                         // Nothing is passed as varargs
                         assignableMatch++;
                         break;

==================================================
