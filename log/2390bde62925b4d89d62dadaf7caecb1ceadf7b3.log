2390bde62925b4d89d62dadaf7caecb1ceadf7b3
==================================================
In preparation for next servlet revision
==================================================
Filip Hanik
==================================================
Tue Jun 26 17:07:22 2012 +0000
==================================================
AsyncContext.java
In preparation for next servlet revision
Align with the servlet specification signatures as they are defined by the spec itself. These do not represent any functional changes
Most of these are just ordering of methods, others are runtime exception that are defined differently in the method signatures

As an fyi, the easiest way to compare signatures between two libraries is to use javap and diff on the output, that's how I found these changes, verified them against the javadoc and implemented into tomcat




git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1354112 13f79535-47bb-0310-9956-ffa450edef68



==================================================
RequestDispatcher.java
index 4203a4f60b..658a8400f9 100644
--- a/java/javax/servlet/AsyncContext.java
+++ b/java/javax/servlet/AsyncContext.java
@@ -73,12 +73,12 @@ public interface AsyncContext {
     throws ServletException;
 
     /**
-     * Get timeout in milliseconds. 0 or less indicates no timeout.
+     * Set timeout in milliseconds. 0 or less indicates no timeout.
      */
-    long getTimeout();
+    void setTimeout(long timeout);
 
     /**
-     * Set timeout in milliseconds. 0 or less indicates no timeout.
+     * Get timeout in milliseconds. 0 or less indicates no timeout.
      */
-    void setTimeout(long timeout);
+    long getTimeout();
 }

==================================================
ServletContext.java
index 0d3feb48b6..1ab9f2ee5d 100644
--- a/java/javax/servlet/RequestDispatcher.java
+++ b/java/javax/servlet/RequestDispatcher.java
@@ -39,22 +39,22 @@ import java.io.IOException;
  */
 public interface RequestDispatcher {
 
+    static final String FORWARD_REQUEST_URI = "javax.servlet.forward.request_uri";
+    static final String FORWARD_CONTEXT_PATH = "javax.servlet.forward.context_path";
+    static final String FORWARD_PATH_INFO = "javax.servlet.forward.path_info";
+    static final String FORWARD_SERVLET_PATH = "javax.servlet.forward.servlet_path";
+    static final String FORWARD_QUERY_STRING = "javax.servlet.forward.query_string";
+    static final String INCLUDE_REQUEST_URI = "javax.servlet.include.request_uri";
+    static final String INCLUDE_CONTEXT_PATH = "javax.servlet.include.context_path";
+    static final String INCLUDE_PATH_INFO = "javax.servlet.include.path_info";
+    static final String INCLUDE_SERVLET_PATH = "javax.servlet.include.servlet_path";
+    static final String INCLUDE_QUERY_STRING = "javax.servlet.include.query_string";
     public static final String ERROR_EXCEPTION = "javax.servlet.error.exception";
     public static final String ERROR_EXCEPTION_TYPE = "javax.servlet.error.exception_type";
     public static final String ERROR_MESSAGE = "javax.servlet.error.message";
     public static final String ERROR_REQUEST_URI = "javax.servlet.error.request_uri";
     public static final String ERROR_SERVLET_NAME = "javax.servlet.error.servlet_name";
     public static final String ERROR_STATUS_CODE = "javax.servlet.error.status_code";
-    public static final String FORWARD_CONTEXT_PATH = "javax.servlet.forward.context_path";
-    public static final String FORWARD_PATH_INFO = "javax.servlet.forward.path_info";
-    public static final String FORWARD_QUERY_STRING = "javax.servlet.forward.query_string";
-    public static final String FORWARD_REQUEST_URI = "javax.servlet.forward.request_uri";
-    public static final String FORWARD_SERVLET_PATH = "javax.servlet.forward.servlet_path";
-    public static final String INCLUDE_CONTEXT_PATH = "javax.servlet.include.context_path";
-    public static final String INCLUDE_PATH_INFO = "javax.servlet.include.path_info";
-    public static final String INCLUDE_QUERY_STRING = "javax.servlet.include.query_string";
-    public static final String INCLUDE_REQUEST_URI = "javax.servlet.include.request_uri";
-    public static final String INCLUDE_SERVLET_PATH = "javax.servlet.include.servlet_path";
 
     /**
      * Forwards a request from a servlet to another resource (servlet, JSP file,

==================================================
ServletRequest.java
index 2ff25a7e08..ec1a727480 100644
--- a/java/javax/servlet/ServletContext.java
+++ b/java/javax/servlet/ServletContext.java
@@ -60,6 +60,8 @@ public interface ServletContext {
      */
     public static final String ORDERED_LIBS = "javax.servlet.context.orderedLibs";
 
+    public String getContextPath();
+
     /**
      * Returns a <code>ServletContext</code> object that corresponds to a
      * specified URL on the server.
@@ -83,8 +85,6 @@ public interface ServletContext {
      */
     public ServletContext getContext(String uripath);
 
-    public String getContextPath();
-
     /**
      * Returns the major version of the Java Servlet API that this servlet
      * container supports. All implementations that comply with Version 3.0 must
@@ -644,8 +644,7 @@ public interface ServletContext {
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
     public void setSessionTrackingModes(
-            Set<SessionTrackingMode> sessionTrackingModes)
-            throws IllegalStateException, IllegalArgumentException;
+            Set<SessionTrackingMode> sessionTrackingModes);
 
     /**
      * @return TODO
@@ -659,12 +658,6 @@ public interface ServletContext {
      */
     public Set<SessionTrackingMode> getEffectiveSessionTrackingModes();
 
-    /**
-     * @param listenerClass
-     * @since Servlet 3.0 TODO SERVLET3 - Add comments
-     */
-    public void addListener(Class<? extends EventListener> listenerClass);
-
     /**
      * @param className
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
@@ -678,6 +671,12 @@ public interface ServletContext {
      */
     public <T extends EventListener> void addListener(T t);
 
+    /**
+     * @param listenerClass
+     * @since Servlet 3.0 TODO SERVLET3 - Add comments
+     */
+    public void addListener(Class<? extends EventListener> listenerClass);
+
     /**
      * @param <T>
      * @param c
@@ -689,13 +688,11 @@ public interface ServletContext {
             throws ServletException;
 
     /**
-     * @param roleNames
+     * @return TODO
      * @throws UnsupportedOperationException
-     * @throws IllegalArgumentException
-     * @throws IllegalStateException
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
-    public void declareRoles(String... roleNames);
+    public JspConfigDescriptor getJspConfigDescriptor();
 
     /**
      * @return TODO
@@ -706,9 +703,11 @@ public interface ServletContext {
     public ClassLoader getClassLoader();
 
     /**
-     * @return TODO
+     * @param roleNames
      * @throws UnsupportedOperationException
+     * @throws IllegalArgumentException
+     * @throws IllegalStateException
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
-    public JspConfigDescriptor getJspConfigDescriptor();
+    public void declareRoles(String... roleNames);
 }

==================================================
ServletRequestWrapper.java
index 9fd5605368..1ad1d45743 100644
--- a/java/javax/servlet/ServletRequest.java
+++ b/java/javax/servlet/ServletRequest.java
@@ -438,7 +438,7 @@ public interface ServletRequest {
      *             If async is not supported for this request
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
-    public AsyncContext startAsync();
+    public AsyncContext startAsync() throws IllegalStateException;
 
     /**
      * @param servletRequest
@@ -448,7 +448,7 @@ public interface ServletRequest {
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
     public AsyncContext startAsync(ServletRequest servletRequest,
-            ServletResponse servletResponse);
+            ServletResponse servletResponse) throws IllegalStateException;
 
     /**
      * @return TODO

==================================================
ServletSecurityElement.java
index 1e235227cd..5f0919e24a 100644
--- a/java/javax/servlet/ServletRequestWrapper.java
+++ b/java/javax/servlet/ServletRequestWrapper.java
@@ -360,7 +360,7 @@ public class ServletRequestWrapper implements ServletRequest {
      * @since Servlet 3.0
      */
     @Override
-    public AsyncContext startAsync() {
+    public AsyncContext startAsync() throws IllegalStateException {
         return request.startAsync();
     }
 

==================================================
Cookie.java
index 56667b4990..cfc651fa93 100644
--- a/java/javax/servlet/ServletSecurityElement.java
+++ b/java/javax/servlet/ServletSecurityElement.java
@@ -43,6 +43,13 @@ public class ServletSecurityElement extends HttpConstraintElement {
         super();
     }
 
+    /**
+     * Use specified HttpConstraintElement.
+     * @param httpConstraintElement
+     */
+    public ServletSecurityElement(HttpConstraintElement httpConstraintElement) {
+        this (httpConstraintElement, null);
+    }
 
     /**
      * Use specific constraints for specified methods and default
@@ -57,13 +64,6 @@ public class ServletSecurityElement extends HttpConstraintElement {
         addHttpMethodConstraints(httpMethodConstraints);
     }
 
-    /**
-     * Use specified HttpConstraintElement.
-     * @param httpConstraintElement
-     */
-    public ServletSecurityElement(HttpConstraintElement httpConstraintElement) {
-        this (httpConstraintElement, null);
-    }
 
     /**
      * Use specified HttpConstraintElement as default and specific constraints

==================================================
HttpServletRequest.java
index a14f2592db..30516fde48 100644
--- a/java/javax/servlet/http/Cookie.java
+++ b/java/javax/servlet/http/Cookie.java
@@ -451,18 +451,18 @@ public class Cookie implements Cloneable, Serializable {
     }
 
     /**
-     * @return TODO
+     * @param httpOnly
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
-    public boolean isHttpOnly() {
-        return httpOnly;
+    public void setHttpOnly(boolean httpOnly) {
+        this.httpOnly = httpOnly;
     }
 
     /**
-     * @param httpOnly
+     * @return TODO
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
-    public void setHttpOnly(boolean httpOnly) {
-        this.httpOnly = httpOnly;
+    public boolean isHttpOnly() {
+        return httpOnly;
     }
 }

==================================================
HttpServletRequestWrapper.java
index 969ce947fc..2bf2c7cc82 100644
--- a/java/javax/servlet/http/HttpServletRequest.java
+++ b/java/javax/servlet/http/HttpServletRequest.java
@@ -465,7 +465,7 @@ public interface HttpServletRequest extends ServletRequest {
      * @since Servlet 3.0
      */
     public Collection<Part> getParts() throws IOException,
-            IllegalStateException, ServletException;
+            ServletException;
 
     /**
      * Gets the named Part or null if the Part does not exist. Triggers upload
@@ -481,6 +481,6 @@ public interface HttpServletRequest extends ServletRequest {
      *             if the request is not multipart/form-data
      * @since Servlet 3.0
      */
-    public Part getPart(String name) throws IOException, IllegalStateException,
+    public Part getPart(String name) throws IOException,
             ServletException;
 }

==================================================
