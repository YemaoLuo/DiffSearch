6e83c093f2b674dfcdb06151392d0651a8b880ff
==================================================
Revert "Refactcor custom URL handler to use ServiceLoader"
==================================================
Mark Thomas
==================================================
Mon Feb 27 16:01:22 2023 +0000
==================================================
WebappClassLoaderBase.java
index d51f3045cf..9070c52281 100644
--- a/build.xml
+++ b/build.xml
@@ -1169,7 +1169,6 @@
     <jarIt jarfile="${catalina.jar}"
       filesDir="${tomcat.classes}"
       filesId="files.catalina"
-      meta-inf="${tomcat.manifests}/catalina.jar"
       addOSGi="true" />
 
     <!-- Catalina Cluster/HA JAR File -->
@@ -1699,7 +1698,6 @@
            filesId="files.tomcat-embed-core"
            notice="${tomcat.manifests}/servlet-api.jar.notice"
            license="${tomcat.manifests}/servlet-api.jar.license"
-           meta-inf="${tomcat.manifests}/tomcat-embed-core.jar"
            addOSGi="true"
            addGraal="true"
            graalPrefix="org.apache.tomcat.embed/tomcat-embed-core"

==================================================
StandardRoot.java
index 2addcb83c8..b637fdd323 100644
--- a/java/org/apache/catalina/loader/WebappClassLoaderBase.java
+++ b/java/org/apache/catalina/loader/WebappClassLoaderBase.java
@@ -61,6 +61,7 @@ import org.apache.catalina.LifecycleListener;
 import org.apache.catalina.LifecycleState;
 import org.apache.catalina.WebResource;
 import org.apache.catalina.WebResourceRoot;
+import org.apache.catalina.webresources.TomcatURLStreamHandlerFactory;
 import org.apache.juli.WebappProperties;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
@@ -1542,6 +1543,9 @@ public abstract class WebappClassLoaderBase extends URLClassLoader
 
         // Clear the classloader reference in the VM's bean introspector
         java.beans.Introspector.flushCaches();
+
+        // Clear any custom URLStreamHandlers
+        TomcatURLStreamHandlerFactory.release(this);
     }
 
 

==================================================
TomcatURLStreamHandlerFactory.java
index 3609e2c368..2cb98e277a 100644
--- a/java/org/apache/catalina/webresources/StandardRoot.java
+++ b/java/org/apache/catalina/webresources/StandardRoot.java
@@ -45,6 +45,7 @@ import org.apache.catalina.util.LifecycleMBeanBase;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.buf.UriUtil;
+import org.apache.tomcat.util.compat.JreCompat;
 import org.apache.tomcat.util.http.RequestUtil;
 import org.apache.tomcat.util.res.StringManager;
 
@@ -691,12 +692,12 @@ public class StandardRoot extends LifecycleMBeanBase implements WebResourceRoot
         }
     }
 
-    /**
-     * @deprecated Unused. Will be removed in Tomcat 11 onwards.
-     */
-    @Deprecated
     protected void registerURLStreamHandlerFactory() {
-        // NO-OP
+        if (!JreCompat.isGraalAvailable()) {
+            // Ensure support for jar:war:file:/ URLs will be available (required
+            // for resource JARs in packed WAR files).
+            TomcatURLStreamHandlerFactory.register();
+        }
     }
 
     @Override

==================================================
TestClasspathUrlStreamHandler.java
deleted file mode 100644
index e0b27f914f..0000000000
--- a/test/META-INF/services/java.net.spi.URLStreamHandlerProvider
+++ /dev/null
@@ -1,17 +0,0 @@
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-# Handler required when running tests
-org.apache.catalina.webresources.TomcatURLStreamHandlerProvider
\ No newline at end of file

==================================================
TestJarWarResourceSet.java
index 9df2b90fa3..f1bb097b37 100644
--- a/test/org/apache/catalina/webresources/TestClasspathUrlStreamHandler.java
+++ b/test/org/apache/catalina/webresources/TestClasspathUrlStreamHandler.java
@@ -22,10 +22,16 @@ import java.net.URL;
 import java.util.Properties;
 
 import org.junit.Assert;
+import org.junit.BeforeClass;
 import org.junit.Test;
 
 public class TestClasspathUrlStreamHandler {
 
+    @BeforeClass
+    public static void setup() {
+        TomcatURLStreamHandlerFactory.getInstance();
+    }
+
     @Test
     public void testClasspathURL01() throws IOException {
         URL u = new URL("classpath:/org/apache/catalina/webresources/LocalStrings.properties");

==================================================
TestTomcatURLStreamHandlerFactory.java
index ed5b29fd2f..be5d98f87a 100644
--- a/test/org/apache/catalina/webresources/TestJarWarResourceSet.java
+++ b/test/org/apache/catalina/webresources/TestJarWarResourceSet.java
@@ -19,6 +19,7 @@ package org.apache.catalina.webresources;
 import java.io.File;
 
 import org.junit.Assert;
+import org.junit.Before;
 import org.junit.Test;
 
 import org.apache.catalina.Context;
@@ -29,6 +30,12 @@ import org.apache.catalina.startup.TomcatBaseTest;
 
 public class TestJarWarResourceSet extends TomcatBaseTest {
 
+    @Before
+    public void register() {
+        TomcatURLStreamHandlerFactory.register();
+    }
+
+
     @Test
     public void testJarWarMetaInf() throws LifecycleException  {
         Tomcat tomcat = getTomcatInstance();

==================================================
TestHandler.java
similarity index 56%
rename from java/org/apache/catalina/webresources/TomcatURLStreamHandlerProvider.java
rename to test/org/apache/catalina/webresources/TestTomcatURLStreamHandlerFactory.java
index 6be9781506..b999c8be71 100644
--- a/java/org/apache/catalina/webresources/TomcatURLStreamHandlerProvider.java
+++ b/test/org/apache/catalina/webresources/TestTomcatURLStreamHandlerFactory.java
@@ -17,24 +17,27 @@
 package org.apache.catalina.webresources;
 
 import java.net.URLStreamHandler;
-import java.net.spi.URLStreamHandlerProvider;
+import java.net.URLStreamHandlerFactory;
 
-import org.apache.catalina.webresources.war.Handler;
+import org.junit.Before;
+import org.junit.Test;
 
-public class TomcatURLStreamHandlerProvider extends URLStreamHandlerProvider {
-
-    private static final String WAR_PROTOCOL = "war";
-    private static final String CLASSPATH_PROTOCOL = "classpath";
-
-    @Override
-    public URLStreamHandler createURLStreamHandler(String protocol) {
-        if (WAR_PROTOCOL.equals(protocol)) {
-            return new Handler();
-        } else if (CLASSPATH_PROTOCOL.equals(protocol)) {
-            return new ClasspathURLStreamHandler();
-        }
+public class TestTomcatURLStreamHandlerFactory {
 
+    @Before
+    public void register() {
+        TomcatURLStreamHandlerFactory.register();
+    }
 
-        return null;
+    @Test
+    public void testUserFactory() throws Exception {
+        URLStreamHandlerFactory factory = new URLStreamHandlerFactory() {
+            @Override
+            public URLStreamHandler createURLStreamHandler(String protocol) {
+                return null;
+            }
+        };
+        TomcatURLStreamHandlerFactory.getInstance().addUserFactory(factory);
+        TomcatURLStreamHandlerFactory.release(factory.getClass().getClassLoader());
     }
-}
+}
\ No newline at end of file

==================================================
TestWarURLConnection.java
index 0e3ac88a48..c4b72bee15 100644
--- a/test/org/apache/catalina/webresources/war/TestHandler.java
+++ b/test/org/apache/catalina/webresources/war/TestHandler.java
@@ -21,10 +21,19 @@ import java.net.URL;
 import java.net.URLConnection;
 
 import org.junit.Assert;
+import org.junit.Before;
 import org.junit.Test;
 
+import org.apache.catalina.webresources.TomcatURLStreamHandlerFactory;
+
 public class TestHandler {
 
+    @Before
+    public void register() {
+        TomcatURLStreamHandlerFactory.register();
+    }
+
+
     @Test
     public void testUrlFileInJarInWar() throws Exception {
         doTestUrl("jar:war:", "*/WEB-INF/lib/test.jar!/META-INF/resources/index.html");

==================================================
TesterUriUtilBase.java
index 1d82530ce9..f005115824 100644
--- a/test/org/apache/catalina/webresources/war/TestWarURLConnection.java
+++ b/test/org/apache/catalina/webresources/war/TestWarURLConnection.java
@@ -21,10 +21,19 @@ import java.net.URL;
 import java.net.URLConnection;
 
 import org.junit.Assert;
+import org.junit.Before;
 import org.junit.Test;
 
+import org.apache.catalina.webresources.TomcatURLStreamHandlerFactory;
+
 public class TestWarURLConnection {
 
+    @Before
+    public void register() {
+        TomcatURLStreamHandlerFactory.register();
+    }
+
+
     @Test
     public void testContentLength() throws Exception {
         File f = new File("test/webresources/war-url-connection.war");

==================================================
TestConfigFileLoader.java
index bad8b2f685..9980669aa2 100644
--- a/test/org/apache/tomcat/util/buf/TesterUriUtilBase.java
+++ b/test/org/apache/tomcat/util/buf/TesterUriUtilBase.java
@@ -23,12 +23,15 @@ import java.net.URL;
 import org.junit.Assert;
 import org.junit.Test;
 
+import org.apache.catalina.webresources.TomcatURLStreamHandlerFactory;
+
 public abstract class TesterUriUtilBase {
 
     private final String separator;
 
     protected TesterUriUtilBase(String separator) {
         this.separator = separator;
+        TomcatURLStreamHandlerFactory.register();
         System.setProperty("org.apache.tomcat.util.buf.UriUtil.WAR_SEPARATOR", separator);
     }
 

==================================================
TestAbstractInputStreamJar.java
index d87c3de17f..5271e778da 100644
--- a/test/org/apache/tomcat/util/file/TestConfigFileLoader.java
+++ b/test/org/apache/tomcat/util/file/TestConfigFileLoader.java
@@ -27,11 +27,13 @@ import org.junit.BeforeClass;
 import org.junit.Test;
 
 import org.apache.catalina.startup.CatalinaBaseConfigurationSource;
+import org.apache.catalina.webresources.TomcatURLStreamHandlerFactory;
 
 public class TestConfigFileLoader {
 
     @BeforeClass
     public static void setup() {
+        TomcatURLStreamHandlerFactory.getInstance();
         System.setProperty("catalina.base", "");
         ConfigFileLoader.setSource(new CatalinaBaseConfigurationSource(new File(System.getProperty("catalina.base")), null));
     }

==================================================
