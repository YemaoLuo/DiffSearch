cc08f81dc6b4d91587ed71e46bfd7dd5b834b3ea
==================================================
Getter and setter should use symmetric names
==================================================
Mark Thomas
==================================================
Mon Nov 27 10:33:22 2017 +0000
==================================================
WebSocketContainer.java
Getter and setter should use symmetric names

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816418 13f79535-47bb-0310-9956-ffa450edef68



==================================================
WsWebSocketContainer.java
index f2da3e4327..4505ee91e7 100644
--- a/java/javax/websocket/WebSocketContainer.java
+++ b/java/javax/websocket/WebSocketContainer.java
@@ -33,9 +33,20 @@ public interface WebSocketContainer {
      * Set the default timeout for sending a message asynchronously.
      * @param timeout The new default timeout in milliseconds. A non-positive
      *                value means an infinite timeout.
+     *
+     * @deprecated This will be removed in Tomcat 9.
+     *             Use {@link #setDefaultAsyncSendTimeout(long)}
      */
+    @Deprecated
     void setAsyncSendTimeout(long timeout);
 
+    /**
+     * Set the default timeout for sending a message asynchronously.
+     * @param timeout The new default timeout in milliseconds. A non-positive
+     *                value means an infinite timeout.
+     */
+    void setDefaultAsyncSendTimeout(long timeout);
+
     Session connectToServer(Object endpoint, URI path)
             throws DeploymentException, IOException;
 

==================================================
TestWsWebSocketContainer.java
index ce61c352c8..3d4beeabcd 100644
--- a/java/org/apache/tomcat/websocket/WsWebSocketContainer.java
+++ b/java/org/apache/tomcat/websocket/WsWebSocketContainer.java
@@ -986,11 +986,23 @@ public class WsWebSocketContainer implements WebSocketContainer, BackgroundProce
      * The default value for this implementation is -1.
      */
     @Override
+    @Deprecated
     public void setAsyncSendTimeout(long timeout) {
         this.defaultAsyncTimeout = timeout;
     }
 
 
+    /**
+     * {@inheritDoc}
+     *
+     * The default value for this implementation is -1.
+     */
+    @Override
+    public void setDefaultAsyncSendTimeout(long timeout) {
+        this.defaultAsyncTimeout = timeout;
+    }
+
+
     /**
      * Cleans up the resources still in use by WebSocket sessions created from
      * this container. This includes closing sessions and cancelling

==================================================
