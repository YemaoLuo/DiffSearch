6972093b3daffacecb45d016721b025109fc7fb2
==================================================
Fix some more deprecation warnings when building with Java 9.
==================================================
Mark Thomas
==================================================
Thu Oct 5 12:55:10 2017 +0000
==================================================
BeanFactory.java
Fix some more deprecation warnings when building with Java 9.
Use of Class.newInstance() in o.a.naming

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1811201 13f79535-47bb-0310-9956-ffa450edef68



==================================================
EjbFactory.java
index a342f516fd..c51db867eb 100644
--- a/java/org/apache/naming/factory/BeanFactory.java
+++ b/java/org/apache/naming/factory/BeanFactory.java
@@ -145,7 +145,7 @@ public class BeanFactory
                 BeanInfo bi = Introspector.getBeanInfo(beanClass);
                 PropertyDescriptor[] pda = bi.getPropertyDescriptors();
 
-                Object bean = beanClass.newInstance();
+                Object bean = beanClass.getDeclaredConstructor().newInstance();
 
                 /* Look for properties with explicitly configured setter */
                 RefAddr ra = ref.get("forceString");
@@ -288,24 +288,16 @@ public class BeanFactory
                 NamingException ne = new NamingException(ie.getMessage());
                 ne.setRootCause(ie);
                 throw ne;
-            } catch (java.lang.IllegalAccessException iae) {
-                NamingException ne = new NamingException(iae.getMessage());
-                ne.setRootCause(iae);
-                throw ne;
-            } catch (java.lang.InstantiationException ie2) {
-                NamingException ne = new NamingException(ie2.getMessage());
-                ne.setRootCause(ie2);
-                throw ne;
-            } catch (java.lang.reflect.InvocationTargetException ite) {
-                Throwable cause = ite.getCause();
+            } catch (java.lang.ReflectiveOperationException e) {
+                Throwable cause = e.getCause();
                 if (cause instanceof ThreadDeath) {
                     throw (ThreadDeath) cause;
                 }
                 if (cause instanceof VirtualMachineError) {
                     throw (VirtualMachineError) cause;
                 }
-                NamingException ne = new NamingException(ite.getMessage());
-                ne.setRootCause(ite);
+                NamingException ne = new NamingException(e.getMessage());
+                ne.setRootCause(e);
                 throw ne;
             }
 

==================================================
FactoryBase.java
index 53d972b768..89780b3327 100644
--- a/java/org/apache/naming/factory/EjbFactory.java
+++ b/java/org/apache/naming/factory/EjbFactory.java
@@ -44,7 +44,7 @@ public class EjbFactory extends FactoryBase {
                 "javax.ejb.Factory", Constants.OPENEJB_EJB_FACTORY);
         try {
             factory = (ObjectFactory)
-                Class.forName(javaxEjbFactoryClassName).newInstance();
+                Class.forName(javaxEjbFactoryClassName).getDeclaredConstructor().newInstance();
         } catch(Throwable t) {
             if (t instanceof NamingException) {
                 throw (NamingException) t;

==================================================
ResourceFactory.java
index bd16b3dc99..0086d7c215 100644
--- a/java/org/apache/naming/factory/FactoryBase.java
+++ b/java/org/apache/naming/factory/FactoryBase.java
@@ -69,7 +69,7 @@ public abstract class FactoryBase implements ObjectFactory {
                     throw ex;
                 }
                 try {
-                    factory = (ObjectFactory) factoryClass.newInstance();
+                    factory = (ObjectFactory) factoryClass.getDeclaredConstructor().newInstance();
                 } catch(Throwable t) {
                     if (t instanceof NamingException) {
                         throw (NamingException) t;

==================================================
