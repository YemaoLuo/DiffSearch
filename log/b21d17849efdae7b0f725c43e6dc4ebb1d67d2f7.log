b21d17849efdae7b0f725c43e6dc4ebb1d67d2f7
==================================================
Update the echo WebSocket example to use the new APIs.
==================================================
Mark Emlyn
==================================================
Sat Dec 15 19:58:09 2012 +0000
==================================================
EchoAnnotation.java
Update the echo WebSocket example to use the new APIs.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1422335 13f79535-47bb-0310-9956-ffa450edef68



==================================================
EchoEndpoint.java
index bf35af9c59..dcd2cf0c7d 100644
--- a/webapps/examples/WEB-INF/classes/websocket/echo/EchoAnnotation.java
+++ b/webapps/examples/WEB-INF/classes/websocket/echo/EchoAnnotation.java
@@ -18,20 +18,12 @@ package websocket.echo;
 
 import javax.websocket.WebSocketEndpoint;
 import javax.websocket.WebSocketMessage;
-import javax.websocket.WebSocketOpen;
-import javax.websocket.WebSocketPathParam;
 
-@WebSocketEndpoint("/websocket/echoAnnotation/{test}")
+@WebSocketEndpoint("/websocket/echoAnnotation")
 public class EchoAnnotation {
 
-    @WebSocketOpen
-    public void printOpen(@WebSocketPathParam("test") String test) {
-        System.out.println("EchoAnnotation.printOpen() with [" + test + "]");
-    }
-
     @WebSocketMessage
     public String printMessage(String msg) {
-        System.out.println("EchoAnnotation.printMessage() with [" + msg + "]");
         return msg;
     }
 }

==================================================
EchoMessage.java
index 6f118083a2..0cf1f90453 100644
--- a/webapps/examples/WEB-INF/classes/websocket/echo/EchoEndpoint.java
+++ b/webapps/examples/WEB-INF/classes/websocket/echo/EchoEndpoint.java
@@ -19,6 +19,7 @@ package websocket.echo;
 import java.io.IOException;
 
 import javax.websocket.Endpoint;
+import javax.websocket.MessageHandler;
 import javax.websocket.RemoteEndpoint;
 import javax.websocket.Session;
 
@@ -27,11 +28,11 @@ public class EchoEndpoint extends Endpoint{
     @Override
     public void onOpen(Session session) {
         RemoteEndpoint remoteEndpoint = session.getRemote();
-        session.addMessageHandler(new EchoMessageHandler<>(remoteEndpoint));
+        session.addMessageHandler(new EchoMessageHandler(remoteEndpoint));
     }
 
-    private static class EchoMessageHandler<T>
-            implements javax.websocket.MessageHandler.Basic<String> {
+    private static class EchoMessageHandler
+            implements MessageHandler.Basic<String> {
 
         private final RemoteEndpoint remoteEndpoint;
 
@@ -42,7 +43,6 @@ public class EchoEndpoint extends Endpoint{
         @Override
         public void onMessage(String message) {
             try {
-                System.out.println(message);
                 if (remoteEndpoint != null) {
                     remoteEndpoint.sendString(message);
                 }

==================================================
EchoStream.java
deleted file mode 100644
index 9f82b60703..0000000000
--- a/webapps/examples/WEB-INF/classes/websocket/echo/EchoMessage.java
+++ /dev/null
@@ -1,86 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package websocket.echo;
-
-import java.io.IOException;
-import java.nio.ByteBuffer;
-import java.nio.CharBuffer;
-
-import javax.servlet.ServletException;
-import javax.servlet.http.HttpServletRequest;
-
-import org.apache.catalina.websocket.MessageHandler;
-import org.apache.catalina.websocket.StreamHandler;
-import org.apache.catalina.websocket.WebSocketServlet;
-
-
-public class EchoMessage extends WebSocketServlet {
-
-    private static final long serialVersionUID = 1L;
-    private volatile int byteBufSize;
-    private volatile int charBufSize;
-
-    @Override
-    public void init() throws ServletException {
-        super.init();
-        byteBufSize = getInitParameterIntValue("byteBufferMaxSize", 2097152);
-        charBufSize = getInitParameterIntValue("charBufferMaxSize", 2097152);
-    }
-
-    public int getInitParameterIntValue(String name, int defaultValue) {
-        String val = this.getInitParameter(name);
-        int result;
-        if(null != val) {
-            try {
-                result = Integer.parseInt(val);
-            }catch (Exception x) {
-                result = defaultValue;
-            }
-        } else {
-            result = defaultValue;
-        }
-
-        return result;
-    }
-
-
-
-    @Override
-    protected StreamHandler createWebSocketHandler(String subProtocol,
-            HttpServletRequest request) {
-        return new EchoMessageHandler(byteBufSize,charBufSize);
-    }
-
-    private static final class EchoMessageHandler extends MessageHandler {
-
-        public EchoMessageHandler(int byteBufferMaxSize, int charBufferMaxSize) {
-            super();
-            setByteBufferMaxSize(byteBufferMaxSize);
-            setCharBufferMaxSize(charBufferMaxSize);
-        }
-
-        @Override
-        protected void onBinaryMessage(ByteBuffer message) throws IOException {
-            getWsOutbound().writeBinaryMessage(message);
-        }
-
-        @Override
-        protected void onTextMessage(CharBuffer message) throws IOException {
-            getWsOutbound().writeTextMessage(message);
-        }
-    }
-}

==================================================
