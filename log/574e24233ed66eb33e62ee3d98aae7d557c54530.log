574e24233ed66eb33e62ee3d98aae7d557c54530
==================================================
Fix Javadoc errors
==================================================
Mark Thomas
==================================================
Wed Dec 14 11:06:02 2016 +0000
==================================================
AbstractAjpProtocol.java
Fix Javadoc errors

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1774184 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AjpProcessor.java
index 7330b31229..a1a6aed4a2 100644
--- a/java/org/apache/coyote/ajp/AbstractAjpProtocol.java
+++ b/java/org/apache/coyote/ajp/AbstractAjpProtocol.java
@@ -111,11 +111,14 @@ public abstract class AbstractAjpProtocol<S> extends AbstractProtocol<S> {
     }
 
 
+    private boolean tomcatAuthentication = true;
     /**
      * Should authentication be done in the native web server layer,
      * or in the Servlet container ?
+     *
+     * @return {@code true} if authentication should be performed by Tomcat,
+     *         otherwise {@code false}
      */
-    private boolean tomcatAuthentication = true;
     public boolean getTomcatAuthentication() { return tomcatAuthentication; }
     public void setTomcatAuthentication(boolean tomcatAuthentication) {
         this.tomcatAuthentication = tomcatAuthentication;
@@ -186,7 +189,6 @@ public abstract class AbstractAjpProtocol<S> extends AbstractProtocol<S> {
     protected Processor createProcessor() {
         AjpProcessor processor = new AjpProcessor(this);
         processor.setAdapter(getAdapter());
-        processor.setTomcatAuthentication(getTomcatAuthentication());
         processor.setTomcatAuthorization(getTomcatAuthorization());
         processor.setRequiredSecret(requiredSecret);
         processor.setKeepAliveTimeout(getKeepAliveTimeout());

==================================================
AbstractHttp11Protocol.java
index aa7ffd0589..a937689d3a 100644
--- a/java/org/apache/coyote/ajp/AjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpProcessor.java
@@ -289,16 +289,6 @@ public class AjpProcessor extends AbstractProcessor {
     public void setKeepAliveTimeout(int timeout) { keepAliveTimeout = timeout; }
 
 
-    /**
-     * Use Tomcat authentication ?
-     */
-    private boolean tomcatAuthentication = true;
-    public boolean getTomcatAuthentication() { return tomcatAuthentication; }
-    public void setTomcatAuthentication(boolean tomcatAuthentication) {
-        this.tomcatAuthentication = tomcatAuthentication;
-    }
-
-
     /**
      * Use Tomcat authorization ?
      */
@@ -807,7 +797,7 @@ public class AjpProcessor extends AbstractProcessor {
                 break;
 
             case Constants.SC_A_REMOTE_USER :
-                if (tomcatAuthorization || !tomcatAuthentication) {
+                if (tomcatAuthorization || !protocol.getTomcatAuthentication()) {
                     // Implies tomcatAuthentication == false
                     requestHeaderMessage.getBytes(request.getRemoteUser());
                     request.setRemoteUserNeedsAuthorization(tomcatAuthorization);
@@ -818,7 +808,7 @@ public class AjpProcessor extends AbstractProcessor {
                 break;
 
             case Constants.SC_A_AUTH_TYPE :
-                if (tomcatAuthentication) {
+                if (protocol.getTomcatAuthentication()) {
                     // ignore server
                     requestHeaderMessage.getBytes(tmpMB);
                 } else {

==================================================
