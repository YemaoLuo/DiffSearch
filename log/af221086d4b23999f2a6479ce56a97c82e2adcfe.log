af221086d4b23999f2a6479ce56a97c82e2adcfe
==================================================
Support logging of all response header values at AccessLogValve (ex. add %{Set-Cookie}o to your pattern)
==================================================
Peter Rossbach
==================================================
Thu Sep 13 19:31:16 2007 +0000
==================================================
AccessLogValve.java
Support logging of all response header values at AccessLogValve (ex. add %{Set-Cookie}o to your pattern)
and ExtendedAccessLogValve (ex. add x-O(Set-Cookie) to your pattern)


git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk@575411 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ExtendedAccessLogValve.java
index 3556e74b8e..ef3d6abb28 100644
--- a/java/org/apache/catalina/valves/AccessLogValve.java
+++ b/java/org/apache/catalina/valves/AccessLogValve.java
@@ -94,6 +94,7 @@ import org.apache.juli.logging.LogFactory;
  * It is modeled after the apache syntax:
  * <ul>
  * <li><code>%{xxx}i</code> for incoming headers
+ * <li><code>%{xxx}o</code> for outgoing response headers
  * <li><code>%{xxx}c</code> for a specific cookie
  * <li><code>%{xxx}r</code> xxx is an attribute in the ServletRequest
  * <li><code>%{xxx}s</code> xxx is an attribute in the HttpSession
@@ -111,7 +112,9 @@ import org.apache.juli.logging.LogFactory;
  * @author Jason Brittain
  * @author Remy Maucherat
  * @author Takayuki Kaneko
- * @version $Revision$ $Date: 2007-01-04 12:17:11 +0900
+ * @author Peter Rossbach
+ * 
+ * @version $Revision$ $Date$
  */
 
 public class AccessLogValve
@@ -140,7 +143,7 @@ public class AccessLogValve
      * The descriptive information about this implementation.
      */
     protected static final String info =
-        "org.apache.catalina.valves.AccessLogValve/2.0";
+        "org.apache.catalina.valves.AccessLogValve/2.1";
 
 
     /**
@@ -1247,6 +1250,34 @@ public class AccessLogValve
         }
     }
 
+    /**
+     * write a specific response header - %{xxx}o
+     */
+    protected class ResponseHeaderElement implements AccessLogElement {
+        private String header;
+
+        public ResponseHeaderElement(String header) {
+            this.header = header;
+        }
+        
+        public void addElement(StringBuffer buf, Date date, Request request,
+                Response response, long time) {
+           if (null != response) {
+                String[] values = response.getHeaderValues(header);
+                if(values.length > 0) {
+                    for (int i = 0; i < values.length; i++) {
+                        String string = values[i];
+                        buf.append(string) ;
+                        if(i+1<values.length)
+                            buf.append(",");
+                    }
+                    return ;
+                }
+            }
+            buf.append("-");
+        }
+    }
+    
     /**
      * write an attribute in the ServletRequest - %{xxx}r
      */
@@ -1370,10 +1401,12 @@ public class AccessLogValve
             return new HeaderElement(header);
         case 'c':
             return new CookieElement(header);
+        case 'o':
+            return new ResponseHeaderElement(header);
         case 'r':
             return new RequestAttributeElement(header);
         case 's':
-            return new SessionAttributeElement(header);
+            return new SessionAttributeElement(header);            
         default:
             return new StringElement("???");
         }

==================================================
