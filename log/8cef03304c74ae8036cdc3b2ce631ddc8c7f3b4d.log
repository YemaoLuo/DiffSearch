8cef03304c74ae8036cdc3b2ce631ddc8c7f3b4d
==================================================
Add parsing of the archive path (currently unused) from the supplied
==================================================
Mark Emlyn
==================================================
Mon Sep 16 13:11:08 2013 +0000
==================================================
StandardRoot.java
index 987d6fb839..ccad91b80d 100644
--- a/java/org/apache/catalina/webresources/LocalStrings.properties
+++ b/java/org/apache/catalina/webresources/LocalStrings.properties
@@ -34,4 +34,5 @@ standardRoot.createInvalidFile=Unable to create WebResourceSet from [{0}]
 standardRoot.createNoFileResourceSet=The FileResourceSet feature has not yet been implemented
 standardRoot.createUnknownType=Unable to create WebResourceSet of unknown type [{0}]
 standardRoot.noContext=A Context has not been configured for this WebResourceRoot
-standardRoot.startInvalidMain=The main resource set specified [{0}] is not valid
\ No newline at end of file
+standardRoot.startInvalidMain=The main resource set specified [{0}] is not valid
+standardRoot.unsupportedProtocol=The URL protocol [{0}] is not supported by this web resources implementation
\ No newline at end of file

==================================================
TestStandardRoot.java
index 838f50d5f8..044f4a8622 100644
--- a/java/org/apache/catalina/webresources/StandardRoot.java
+++ b/java/org/apache/catalina/webresources/StandardRoot.java
@@ -233,7 +233,9 @@ public class StandardRoot extends LifecycleMBeanBase
     @Override
     public void createWebResourceSet(ResourceSetType type, String webAppMount,
             URL url, String internalPath) {
-        createWebResourceSet(type, webAppMount, toBase(url), null, internalPath);
+        BaseLocation baseLocation = new BaseLocation(url);
+        createWebResourceSet(type, webAppMount, baseLocation.getBasePath(),
+                baseLocation.getArchivePath(), internalPath);
     }
 
     @Override
@@ -380,27 +382,6 @@ public class StandardRoot extends LifecycleMBeanBase
         }
     }
 
-    protected String toBase(URL url) {
-        File f = null;
-
-        if ("jar".equals(url.getProtocol())) {
-            String jarUrl = url.toString();
-            String fileUrl = jarUrl.substring(4, jarUrl.length() - 2);
-            try {
-                f = new File(new URL(fileUrl).toURI());
-            } catch (MalformedURLException | URISyntaxException e) {
-                throw new IllegalArgumentException(e);
-            }
-        } else {
-            try {
-                f = new File(url.toURI());
-            } catch (URISyntaxException e) {
-                throw new IllegalArgumentException(e);
-            }
-        }
-        return f.getAbsolutePath();
-    }
-
     /**
      * For unit testing
      */
@@ -510,4 +491,55 @@ public class StandardRoot extends LifecycleMBeanBase
 
         super.destroyInternal();
     }
+
+
+    // Unit tests need to access this class
+    static class BaseLocation {
+
+        private final String basePath;
+        private final String archivePath;
+
+        BaseLocation(URL url) {
+            File f = null;
+
+            if ("jar".equals(url.getProtocol())) {
+                String jarUrl = url.toString();
+                int endOfFileUrl = jarUrl.indexOf("!/");
+                String fileUrl = jarUrl.substring(4, endOfFileUrl);
+                try {
+                    f = new File(new URL(fileUrl).toURI());
+                } catch (MalformedURLException | URISyntaxException e) {
+                    throw new IllegalArgumentException(e);
+                }
+                int startOfArchivePath = endOfFileUrl + 2;
+                if (jarUrl.length() >  startOfArchivePath) {
+                    archivePath = jarUrl.substring(startOfArchivePath);
+                } else {
+                    archivePath = null;
+                }
+            } else if ("file".equals(url.getProtocol())){
+                try {
+                    f = new File(url.toURI());
+                } catch (URISyntaxException e) {
+                    throw new IllegalArgumentException(e);
+                }
+                archivePath = null;
+            } else {
+                throw new IllegalArgumentException(sm.getString(
+                        "standardRoot.unsupportedProtocol", url.getProtocol()));
+            }
+
+            basePath = f.getAbsolutePath();
+        }
+
+
+        public String getBasePath() {
+            return basePath;
+        }
+
+
+        public String getArchivePath() {
+            return archivePath;
+        }
+    }
 }

==================================================
