50bf5afcf5d52f7c0038e0d06b1d15faae74f4d7
==================================================
Rename since it is going to be used to extract more than just the SNI information
==================================================
Mark Thomas
==================================================
Fri Jun 19 13:24:27 2015 +0000
==================================================
SecureNio2Channel.java
Rename since it is going to be used to extract more than just the SNI information

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1686409 13f79535-47bb-0310-9956-ffa450edef68



==================================================
SecureNioChannel.java
index b982fa757c..7a3f20393a 100644
--- a/java/org/apache/tomcat/util/net/SecureNio2Channel.java
+++ b/java/org/apache/tomcat/util/net/SecureNio2Channel.java
@@ -36,7 +36,7 @@ import javax.net.ssl.SSLException;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.buf.ByteBufferUtils;
-import org.apache.tomcat.util.net.SNIExtractor.SNIResult;
+import org.apache.tomcat.util.net.TLSClientHelloExtractor.SNIResult;
 import org.apache.tomcat.util.res.StringManager;
 
 /**
@@ -314,7 +314,7 @@ public class SecureNio2Channel extends Nio2Channel  {
             return 1;
         }
 
-        SNIExtractor extractor = new SNIExtractor(netInBuffer);
+        TLSClientHelloExtractor extractor = new TLSClientHelloExtractor(netInBuffer);
 
         while (extractor.getResult() == SNIResult.UNDERFLOW &&
                 netInBuffer.capacity() < endpoint.getSniParseLimit()) {
@@ -326,7 +326,7 @@ public class SecureNio2Channel extends Nio2Channel  {
 
             netInBuffer = ByteBufferUtils.expand(netInBuffer, newLimit);
             sc.read(netInBuffer);
-            extractor = new SNIExtractor(netInBuffer);
+            extractor = new TLSClientHelloExtractor(netInBuffer);
         }
 
         String hostName = null;

==================================================
TLSClientHelloExtractor.java
index f76488e46e..a7c2ed68c2 100644
--- a/java/org/apache/tomcat/util/net/SecureNioChannel.java
+++ b/java/org/apache/tomcat/util/net/SecureNioChannel.java
@@ -33,7 +33,7 @@ import javax.net.ssl.SSLException;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.buf.ByteBufferUtils;
-import org.apache.tomcat.util.net.SNIExtractor.SNIResult;
+import org.apache.tomcat.util.net.TLSClientHelloExtractor.SNIResult;
 import org.apache.tomcat.util.res.StringManager;
 
 /**
@@ -252,7 +252,7 @@ public class SecureNioChannel extends NioChannel  {
     private int processSNI() throws IOException {
         // Read some data into the network input buffer so we can peek at it.
         sc.read(netInBuffer);
-        SNIExtractor extractor = new SNIExtractor(netInBuffer);
+        TLSClientHelloExtractor extractor = new TLSClientHelloExtractor(netInBuffer);
 
         while (extractor.getResult() == SNIResult.UNDERFLOW &&
                 netInBuffer.capacity() < endpoint.getSniParseLimit()) {
@@ -264,7 +264,7 @@ public class SecureNioChannel extends NioChannel  {
 
             netInBuffer = ByteBufferUtils.expand(netInBuffer, newLimit);
             sc.read(netInBuffer);
-            extractor = new SNIExtractor(netInBuffer);
+            extractor = new TLSClientHelloExtractor(netInBuffer);
         }
 
         String hostName = null;

==================================================
