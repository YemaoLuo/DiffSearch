b527e70e3089c1e3fe499439ef8838e8a3730f36
==================================================
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=45931
==================================================
Mark Thomas
==================================================
Tue Jun 6 12:10:04 2017 +0000
==================================================
EmbeddedServletOptions.java
index 8a2a2a4d97..20b944f953 100644
--- a/conf/web.xml
+++ b/conf/web.xml
@@ -233,7 +233,13 @@
   <!--                       debugging be suppressed?  [false]              -->
   <!--                                                                      -->
   <!--   trimSpaces          Should template text that consists entirely of -->
-  <!--                       whitespace be removed from the output? [false] -->
+  <!--                       whitespace be removed from the output (true),  -->
+  <!--                       replaced with a single space (single) or left  -->
+  <!--                       unchanged (false)? Note that if a JSP page or  -->
+  <!--                       tag file specifies a trimDirectiveWhitespaces  -->
+  <!--                       value of true, that will take precedence over  -->
+  <!--                       this configuration setting for that page/tag.  -->
+  <!--                       [false]                                        -->
   <!--                                                                      -->
   <!--   xpoweredBy          Determines whether X-Powered-By response       -->
   <!--                       header is added by generated servlet.  [false] -->

==================================================
JspC.java
index 41e5a19fa9..56f19c40cb 100644
--- a/java/org/apache/jasper/EmbeddedServletOptions.java
+++ b/java/org/apache/jasper/EmbeddedServletOptions.java
@@ -63,9 +63,9 @@ public final class EmbeddedServletOptions implements Options {
     private boolean keepGenerated = true;
 
     /**
-     * Should template text that consists entirely of whitespace be removed?
+     * How should template text that consists entirely of whitespace be handled?
      */
-    private boolean trimSpaces = false;
+    private TrimSpacesOption trimSpaces = TrimSpacesOption.FALSE;
 
     /**
      * Determines whether tag handler pooling is enabled.
@@ -238,11 +238,8 @@ public final class EmbeddedServletOptions implements Options {
         return keepGenerated;
     }
 
-    /**
-     * Should template text that consists entirely of whitespace be removed?
-     */
     @Override
-    public boolean getTrimSpaces() {
+    public TrimSpacesOption getTrimSpaces() {
         return trimSpaces;
     }
 
@@ -499,13 +496,11 @@ public final class EmbeddedServletOptions implements Options {
 
         String trimsp = config.getInitParameter("trimSpaces");
         if (trimsp != null) {
-            if (trimsp.equalsIgnoreCase("true")) {
-                trimSpaces = true;
-            } else if (trimsp.equalsIgnoreCase("false")) {
-                trimSpaces = false;
-            } else {
+            try {
+                trimSpaces = TrimSpacesOption.valueOf(trimsp.toUpperCase());
+            } catch (IllegalArgumentException iae) {
                 if (log.isWarnEnabled()) {
-                    log.warn(Localizer.getMessage("jsp.warning.trimspaces"));
+                    log.warn(Localizer.getMessage("jsp.warning.trimspaces"), iae);
                 }
             }
         }

==================================================
Options.java
index b7d10e2df3..6248221ca2 100644
--- a/java/org/apache/jasper/JspC.java
+++ b/java/org/apache/jasper/JspC.java
@@ -167,7 +167,7 @@ public class JspC extends Task implements Options {
 
     protected String classPath = null;
     protected ClassLoader loader = null;
-    protected boolean trimSpaces = false;
+    protected TrimSpacesOption trimSpaces = TrimSpacesOption.FALSE;
     protected boolean genStringAsCharArray = false;
     protected boolean validateTld;
     protected boolean validateXml;
@@ -348,7 +348,13 @@ public class JspC extends Task implements Options {
             } else if (tok.equals(SWITCH_XPOWERED_BY)) {
                 xpoweredBy = true;
             } else if (tok.equals(SWITCH_TRIM_SPACES)) {
-                setTrimSpaces(true);
+                tok = nextArg();
+                if (TrimSpacesOption.SINGLE.toString().equalsIgnoreCase(tok)) {
+                    setTrimSpaces(TrimSpacesOption.SINGLE);
+                } else {
+                    setTrimSpaces(TrimSpacesOption.TRUE);
+                    argPos--;
+                }
             } else if (tok.equals(SWITCH_CACHE)) {
                 tok = nextArg();
                 if ("false".equals(tok)) {
@@ -429,22 +435,23 @@ public class JspC extends Task implements Options {
         return true;
     }
 
-    /**
-     * {@inheritDoc}
-     */
     @Override
-    public boolean getTrimSpaces() {
+    public TrimSpacesOption getTrimSpaces() {
         return trimSpaces;
     }
 
+    public void setTrimSpaces(TrimSpacesOption trimSpaces) {
+        this.trimSpaces = trimSpaces;
+    }
+
     /**
-     * Sets the option to remove template text that consists entirely of
-     * whitespace.
+     * Sets the option to control handling of template text that consists
+     * entirely of whitespace.
      *
      * @param ts New value
      */
-    public void setTrimSpaces(boolean ts) {
-        this.trimSpaces = ts;
+    public void setTrimSpaces(String ts) {
+        this.trimSpaces = TrimSpacesOption.valueOf(ts);
     }
 
     /**

==================================================
TrimSpacesOption.java
index 081b4833c7..9d0fbf930e 100644
--- a/java/org/apache/jasper/Options.java
+++ b/java/org/apache/jasper/Options.java
@@ -98,10 +98,13 @@ public interface Options {
     public boolean isSmapDumped();
 
     /**
-     * @return <code>true</code> to remove template text that consists entirely
-     *         of whitespace
+     * @return {@link TrimSpacesOption#TRUE} to remove template text that
+     *         consists only of whitespace from the output completely,
+     *         {@link TrimSpacesOption#SINGLE} to replace such template text
+     *         with a single space or {@link TrimSpacesOption#FALSE} to leave
+     *         such template text unchanged
      */
-    public boolean getTrimSpaces();
+    public TrimSpacesOption getTrimSpaces();
 
     /**
      * Gets the class-id value that is sent to Internet Explorer when using

==================================================
TextOptimizer.java
new file mode 100644
index 0000000000..faf7476006
--- /dev/null
+++ b/java/org/apache/jasper/TrimSpacesOption.java
@@ -0,0 +1,23 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.jasper;
+
+public enum TrimSpacesOption {
+    FALSE,
+    TRUE,
+    SINGLE
+}

==================================================
