28b6cec455cb970260c7559790c944b4cb981158
==================================================
Add POJO support to programmatic http -> ws upgrade
==================================================
Mark Thomas
==================================================
Wed Dec 15 20:21:43 2021 +0000
==================================================
UpgradeUtil.java
index 16fdaf2ef0..3698b90ba5 100644
--- a/java/org/apache/tomcat/websocket/server/LocalStrings.properties
+++ b/java/org/apache/tomcat/websocket/server/LocalStrings.properties
@@ -22,6 +22,7 @@ serverContainer.missingAnnotation=Cannot deploy POJO class [{0}] as it is not an
 serverContainer.servletContextMissing=No ServletContext was specified
 
 upgradeUtil.incompatibleRsv=Extensions were specified that have incompatible RSV bit usage
+upgradeUtil.pojoMpaFail=Unable to complete method mapping for POJO class [{0}]
 
 uriTemplate.duplicateParameter=The parameter [{0}] appears more than once in the path which is not permitted
 uriTemplate.emptySegment=The path [{0}] contains one or more empty segments which is not permitted

==================================================
WsServerContainer.java
index 5a07c937d8..5201a4366f 100644
--- a/java/org/apache/tomcat/websocket/server/UpgradeUtil.java
+++ b/java/org/apache/tomcat/websocket/server/UpgradeUtil.java
@@ -31,6 +31,8 @@ import jakarta.servlet.ServletRequest;
 import jakarta.servlet.ServletResponse;
 import jakarta.servlet.http.HttpServletRequest;
 import jakarta.servlet.http.HttpServletResponse;
+import jakarta.websocket.DeploymentException;
+import jakarta.websocket.Endpoint;
 import jakarta.websocket.Extension;
 import jakarta.websocket.HandshakeResponse;
 import jakarta.websocket.server.ServerEndpointConfig;
@@ -43,6 +45,7 @@ import org.apache.tomcat.websocket.Transformation;
 import org.apache.tomcat.websocket.TransformationFactory;
 import org.apache.tomcat.websocket.Util;
 import org.apache.tomcat.websocket.WsHandshakeResponse;
+import org.apache.tomcat.websocket.pojo.PojoMethodMapping;
 
 public class UpgradeUtil {
 
@@ -197,12 +200,31 @@ public class UpgradeUtil {
             resp.setHeader(Constants.WS_EXTENSIONS_HEADER_NAME, responseHeaderExtensions.toString());
         }
 
-        WsHandshakeRequest wsRequest = new WsHandshakeRequest(req, pathParams);
-        WsHandshakeResponse wsResponse = new WsHandshakeResponse();
+        // Add method mapping to user properties
+        if (!Endpoint.class.isAssignableFrom(sec.getEndpointClass()) &&
+                sec.getUserProperties().get(org.apache.tomcat.websocket.pojo.Constants.POJO_METHOD_MAPPING_KEY) == null) {
+            // This is a POJO endpoint and the application has called upgrade
+            // directly. Need to add the method mapping.
+            try {
+                PojoMethodMapping methodMapping = new PojoMethodMapping(sec.getEndpointClass(),
+                        sec.getDecoders(), sec.getPath(), sc.getInstanceManager(Thread.currentThread().getContextClassLoader()));
+                if (methodMapping.getOnClose() != null || methodMapping.getOnOpen() != null
+                        || methodMapping.getOnError() != null || methodMapping.hasMessageHandlers()) {
+                    sec.getUserProperties().put(
+                            org.apache.tomcat.websocket.pojo.Constants.POJO_METHOD_MAPPING_KEY, methodMapping);
+                }
+            } catch (DeploymentException e) {
+                throw new ServletException(
+                        sm.getString("upgradeUtil.pojoMpaFail", sec.getEndpointClass().getName()),  e);
+            }
+        }
+
         WsPerSessionServerEndpointConfig perSessionServerEndpointConfig =
                 new WsPerSessionServerEndpointConfig(sec);
-        sec.getConfigurator().modifyHandshake(perSessionServerEndpointConfig,
-                wsRequest, wsResponse);
+
+        WsHandshakeRequest wsRequest = new WsHandshakeRequest(req, pathParams);
+        WsHandshakeResponse wsResponse = new WsHandshakeResponse();
+        sec.getConfigurator().modifyHandshake(perSessionServerEndpointConfig, wsRequest, wsResponse);
         wsRequest.finished();
 
         // Add any additional headers

==================================================
