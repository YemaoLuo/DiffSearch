0ee4a7a0684c3e21cafdfac817754c7bdac86180
==================================================
Refactor error page related code into a separate class so it can be re-used in the ErrorReportValve.
==================================================
Mark Thomas
==================================================
Fri Feb 9 12:27:53 2018 +0000
==================================================
Context.java
Refactor error page related code into a separate class so it can be re-used in the ErrorReportValve.
Deprecate a couple of unused methods.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1823647 13f79535-47bb-0310-9956-ffa450edef68



==================================================
StandardContext.java
index 349b0006a1..12d3daa1bc 100644
--- a/java/org/apache/catalina/Context.java
+++ b/java/org/apache/catalina/Context.java
@@ -1087,7 +1087,11 @@ public interface Context extends Container, ContextBind {
      * HTTP status code, if any; otherwise return <code>null</code>.
      *
      * @param status HTTP status code to look up
+     *
+     * @deprecated Unused. Will be removed in Tomcat 10.
+     *             Use {@link #findErrorPage(int)} instead.
      */
+    @Deprecated
     public String findStatusPage(int status);
 
 
@@ -1095,7 +1099,11 @@ public interface Context extends Container, ContextBind {
      * @return the set of HTTP status codes for which error pages have
      * been specified.  If none are specified, a zero-length array
      * is returned.
+     *
+     * @deprecated Unused. Will be removed in Tomcat 10.
+     *             Use {@link #findErrorPages()} instead.
      */
+    @Deprecated
     public int[] findStatusPages();
 
 

==================================================
ErrorPageSupport.java
index 9d8064656b..9307afc5b1 100644
--- a/java/org/apache/catalina/core/StandardContext.java
+++ b/java/org/apache/catalina/core/StandardContext.java
@@ -31,7 +31,6 @@ import java.util.Enumeration;
 import java.util.EventListener;
 import java.util.HashMap;
 import java.util.HashSet;
-import java.util.Iterator;
 import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Locale;
@@ -104,6 +103,7 @@ import org.apache.catalina.loader.WebappLoader;
 import org.apache.catalina.session.StandardManager;
 import org.apache.catalina.util.CharsetMapper;
 import org.apache.catalina.util.ContextName;
+import org.apache.catalina.util.ErrorPageSupport;
 import org.apache.catalina.util.ExtensionValidator;
 import org.apache.catalina.util.URLEncoder;
 import org.apache.catalina.webresources.StandardRoot;
@@ -366,12 +366,7 @@ public class StandardContext extends ContainerBase
     private String docBase = null;
 
 
-    /**
-     * The exception pages for this web application, keyed by fully qualified
-     * class name of the Java exception.
-     */
-    private Map<String, ErrorPage> exceptionPages = new HashMap<>();
-
+    private final ErrorPageSupport errorPageSupport = new ErrorPageSupport();
 
     /**
      * The set of filter configurations (and associated filter instances) we
@@ -546,13 +541,6 @@ public class StandardContext extends ContainerBase
      */
     private AtomicLong sequenceNumber = new AtomicLong(0);
 
-    /**
-     * The status code error pages for this web application, keyed by
-     * HTTP status code (as an Integer). Note status code zero is used for the
-     * default error page.
-     */
-    private Map<Integer, ErrorPage> statusPages = new HashMap<>();
-
 
     /**
      * Set flag to true to cause the system.out and system.err to be redirected
@@ -2850,20 +2838,8 @@ public class StandardContext extends ContainerBase
             }
         }
 
-        // Add the specified error page to our internal collections
-        String exceptionType = errorPage.getExceptionType();
-        if (exceptionType != null) {
-            synchronized (exceptionPages) {
-                exceptionPages.put(exceptionType, errorPage);
-            }
-        } else {
-            synchronized (statusPages) {
-                statusPages.put(Integer.valueOf(errorPage.getErrorCode()),
-                                errorPage);
-            }
-        }
+        errorPageSupport.add(errorPage);
         fireContainerEvent("addErrorPage", errorPage);
-
     }
 
 
@@ -3298,7 +3274,7 @@ public class StandardContext extends ContainerBase
      */
     @Override
     public ErrorPage findErrorPage(int errorCode) {
-        return statusPages.get(Integer.valueOf(errorCode));
+        return errorPageSupport.find(errorCode);
     }
 
 
@@ -3310,9 +3286,7 @@ public class StandardContext extends ContainerBase
      */
     @Override
     public ErrorPage findErrorPage(String exceptionType) {
-        synchronized (exceptionPages) {
-            return exceptionPages.get(exceptionType);
-        }
+        return errorPageSupport.find(exceptionType);
     }
 
 
@@ -3322,23 +3296,7 @@ public class StandardContext extends ContainerBase
      */
     @Override
     public ErrorPage[] findErrorPages() {
-
-        synchronized(exceptionPages) {
-            synchronized(statusPages) {
-                ErrorPage results1[] = new ErrorPage[exceptionPages.size()];
-                results1 = exceptionPages.values().toArray(results1);
-                ErrorPage results2[] = new ErrorPage[statusPages.size()];
-                results2 = statusPages.values().toArray(results2);
-                ErrorPage results[] =
-                    new ErrorPage[results1.length + results2.length];
-                for (int i = 0; i < results1.length; i++)
-                    results[i] = results1[i];
-                for (int i = results1.length; i < results.length; i++)
-                    results[i] = results2[i - results1.length];
-                return results;
-            }
-        }
-
+        return errorPageSupport.findAll();
     }
 
 
@@ -3555,39 +3513,33 @@ public class StandardContext extends ContainerBase
     }
 
 
-    /**
-     * @return the context-relative URI of the error page for the specified
-     * HTTP status code, if any; otherwise return <code>null</code>.
-     *
-     * @param status HTTP status code to look up
-     */
     @Override
+    @Deprecated
     public String findStatusPage(int status) {
 
-        ErrorPage errorPage = statusPages.get(Integer.valueOf(status));
-        if (errorPage!=null) {
+        ErrorPage errorPage = findErrorPage(status);
+        if (errorPage != null) {
             return errorPage.getLocation();
         }
         return null;
-
     }
 
 
-    /**
-     * @return the set of HTTP status codes for which error pages have
-     * been specified.  If none are specified, a zero-length array
-     * is returned.
-     */
     @Override
+    @Deprecated
     public int[] findStatusPages() {
-        synchronized (statusPages) {
-            int results[] = new int[statusPages.size()];
-            Iterator<Integer> elements = statusPages.keySet().iterator();
-            int i = 0;
-            while (elements.hasNext())
-                results[i++] = elements.next().intValue();
-            return results;
+        ErrorPage[] errorPages = findErrorPages();
+        int size = errorPages.length;
+        int temp[] = new int[size];
+        int count = 0;
+        for (int i = 0; i < size; i++) {
+            if (errorPages[i].getExceptionType() == null) {
+                temp[count++] = errorPages[i].getErrorCode();
+            }
         }
+        int result[] = new int[count];
+        System.arraycopy(temp, 0, result, 0, count);
+        return result;
     }
 
 
@@ -3861,19 +3813,8 @@ public class StandardContext extends ContainerBase
      */
     @Override
     public void removeErrorPage(ErrorPage errorPage) {
-
-        String exceptionType = errorPage.getExceptionType();
-        if (exceptionType != null) {
-            synchronized (exceptionPages) {
-                exceptionPages.remove(exceptionType);
-            }
-        } else {
-            synchronized (statusPages) {
-                statusPages.remove(Integer.valueOf(errorPage.getErrorCode()));
-            }
-        }
+        errorPageSupport.remove(errorPage);
         fireContainerEvent("removeErrorPage", errorPage);
-
     }
 
 

==================================================
