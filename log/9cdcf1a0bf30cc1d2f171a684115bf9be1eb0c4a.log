9cdcf1a0bf30cc1d2f171a684115bf9be1eb0c4a
==================================================
Better names
==================================================
Mark Emlyn
==================================================
Tue Nov 5 11:39:25 2013 +0000
==================================================
JarFactory.java
Better names

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1538949 13f79535-47bb-0310-9956-ffa450edef68



==================================================
JarFileUrlJar.java
index 6bfc1fbd3c..f90381358c 100644
--- a/java/org/apache/tomcat/util/scan/JarFactory.java
+++ b/java/org/apache/tomcat/util/scan/JarFactory.java
@@ -33,9 +33,9 @@ public class JarFactory {
         String jarUrl = url.toString();
         if (jarUrl.startsWith("jar:file:")) {
             if (jarUrl.endsWith("!/")) {
-                return new FileUrlJar(url);
+                return new JarFileUrlJar(url);
             } else {
-                return new FileUrlNestedJar(url);
+                return new JarFileUrlNestedJar(url);
             }
         } else {
             return new UrlJar(url);

==================================================
JarFileUrlNestedJar.java
similarity index 97%
rename from java/org/apache/tomcat/util/scan/FileUrlJar.java
rename to java/org/apache/tomcat/util/scan/JarFileUrlJar.java
index 3c33b14da1..a86407d69e 100644
--- a/java/org/apache/tomcat/util/scan/FileUrlJar.java
+++ b/java/org/apache/tomcat/util/scan/JarFileUrlJar.java
@@ -29,14 +29,14 @@ import java.util.zip.ZipEntry;
  * Implementation of {@link Jar} that is optimised for file based JAR URLs that
  * refer directly to a JAR file (e.g URLs of the form jar:file: ... .jar!/) .
  */
-public class FileUrlJar implements Jar {
+public class JarFileUrlJar implements Jar {
 
     private final JarFile jarFile;
     private final URL jarFileURL;
     private Enumeration<JarEntry> entries;
     private JarEntry entry = null;
 
-    public FileUrlJar(URL url) throws IOException {
+    public JarFileUrlJar(URL url) throws IOException {
         JarURLConnection jarConn = (JarURLConnection) url.openConnection();
         jarConn.setUseCaches(false);
         jarFile = jarConn.getJarFile();

==================================================
