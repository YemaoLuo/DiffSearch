8823e03982e52bb61f8426ec6a273938f9444842
==================================================
Fix some flushing issues identified when running the Autobhan WebSocket test suite
==================================================
Mark Thomas
==================================================
Mon Jan 12 22:35:19 2015 +0000
==================================================
UpgradeServletOutputStream.java
Fix some flushing issues identified when running the Autobhan WebSocket test suite

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1651219 13f79535-47bb-0310-9956-ffa450edef68



==================================================
WsRemoteEndpointImplServer.java
index fae322aa8a..9c14e9c626 100644
--- a/java/org/apache/coyote/http11/upgrade/UpgradeServletOutputStream.java
+++ b/java/org/apache/coyote/http11/upgrade/UpgradeServletOutputStream.java
@@ -45,6 +45,8 @@ public class UpgradeServletOutputStream extends ServletOutputStream {
     // synchronization may be required (see fireListenerLock for an example).
     private final Object writeLock = new Object();
 
+    private volatile boolean flushing = false;
+
     private volatile boolean closeRequired = false;
 
     // Start in blocking-mode
@@ -69,11 +71,17 @@ public class UpgradeServletOutputStream extends ServletOutputStream {
         }
 
         // Make sure isReady() and onWritePossible() have a consistent view of
-        // buffer and fireListener when determining if the listener should fire
+        // fireListener when determining if the listener should fire
         synchronized (fireListenerLock) {
-            boolean result = socketWrapper.isReadyForWrite();
-            fireListener = !result;
-            return result;
+            if (flushing) {
+                socketWrapper.registerWriteInterest();
+                fireListener = true;
+                return false;
+            } else {
+                boolean result = socketWrapper.isReadyForWrite();
+                fireListener = !result;
+                return result;
+            }
         }
     }
 
@@ -124,10 +132,30 @@ public class UpgradeServletOutputStream extends ServletOutputStream {
 
     @Override
     public void flush() throws IOException {
-        socketWrapper.flush(listener == null);
+        flushInternal(listener == null, true);
     }
 
 
+    private void flushInternal(boolean block, boolean updateFlushing) throws IOException {
+        try {
+            synchronized (writeLock) {
+                if (updateFlushing) {
+                    flushing = socketWrapper.flush(block);
+                } else {
+                    socketWrapper.flush(block);
+                }
+            }
+        } catch (Throwable t) {
+            ExceptionUtils.handleThrowable(t);
+            onError(t);
+            if (t instanceof IOException) {
+                throw (IOException) t;
+            } else {
+                throw new IOException(t);
+            }
+        }
+    }
+
     @Override
     public void close() throws IOException {
         closeRequired = true;
@@ -156,18 +184,14 @@ public class UpgradeServletOutputStream extends ServletOutputStream {
 
 
     protected final void onWritePossible() throws IOException {
-        try {
-            synchronized (writeLock) {
-                socketWrapper.flush(false);
-            }
-        } catch (Throwable t) {
-            ExceptionUtils.handleThrowable(t);
-            onError(t);
-            if (t instanceof IOException) {
-                throw t;
-            } else {
-                throw new IOException(t);
+        if (flushing) {
+            flushInternal(false, true);
+            if (flushing) {
+                socketWrapper.registerWriteInterest();
+                return;
             }
+        } else {
+            flushInternal(false, false);
         }
 
         // Make sure isReady() and onWritePossible() have a consistent view

==================================================
