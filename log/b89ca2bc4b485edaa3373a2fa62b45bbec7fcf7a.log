b89ca2bc4b485edaa3373a2fa62b45bbec7fcf7a
==================================================
Add MBean for ResetAbandonedTimer.
==================================================
Keiichi Fujino
==================================================
Thu Feb 1 08:47:18 2018 +0000
==================================================
ResetAbandonedTimer.java
Add MBean for ResetAbandonedTimer.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1822860 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ResetAbandonedTimerMBean.java
index e8b340b6cb..d9e7c075fa 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/interceptor/ResetAbandonedTimer.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/interceptor/ResetAbandonedTimer.java
@@ -19,8 +19,11 @@ package org.apache.tomcat.jdbc.pool.interceptor;
 
 import java.lang.reflect.Method;
 
+import javax.management.ObjectName;
+
 import org.apache.tomcat.jdbc.pool.ConnectionPool;
 import org.apache.tomcat.jdbc.pool.PooledConnection;
+import org.apache.tomcat.jdbc.pool.jmx.JmxUtil;
 
 /**
  * Class that resets the abandoned timer on any activity on the
@@ -30,10 +33,12 @@ import org.apache.tomcat.jdbc.pool.PooledConnection;
  * This is useful for batch processing programs that use connections for extensive amount of times.
  *
  */
-public class ResetAbandonedTimer extends AbstractQueryReport {
+public class ResetAbandonedTimer extends AbstractQueryReport implements ResetAbandonedTimerMBean {
 
     private PooledConnection pcon;
 
+    private ObjectName oname = null;
+
     public ResetAbandonedTimer() {
     }
 
@@ -42,11 +47,20 @@ public class ResetAbandonedTimer extends AbstractQueryReport {
         super.reset(parent, con);
         if (con == null) {
             this.pcon = null;
+            if (oname != null) {
+                JmxUtil.unregisterJmx(oname);
+                oname = null;
+            }
         } else {
             this.pcon = con;
+            if (oname == null) {
+                String keyprop = ",JdbcInterceptor=" + getClass().getSimpleName();
+                oname = JmxUtil.registerJmx(pcon.getObjectName(), keyprop, this);
+            }
         }
     }
 
+    @Override
     public boolean resetTimer() {
         boolean result = false;
         if (pcon != null) {

==================================================
