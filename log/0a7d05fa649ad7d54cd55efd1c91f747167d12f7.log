0a7d05fa649ad7d54cd55efd1c91f747167d12f7
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=57089
==================================================
Mark Emlyn
==================================================
Thu Oct 16 19:01:35 2014 +0000
==================================================
ManagerBase.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=57089
Ensure that configuration of a session ID generator is not lost when a web application is reloaded.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1632411 13f79535-47bb-0310-9956-ffa450edef68



==================================================
SessionIdGeneratorBase.java
index b09348abfb..c2c51adf48 100644
--- a/java/org/apache/catalina/session/ManagerBase.java
+++ b/java/org/apache/catalina/session/ManagerBase.java
@@ -36,6 +36,7 @@ import java.util.concurrent.atomic.AtomicLong;
 import org.apache.catalina.Container;
 import org.apache.catalina.Context;
 import org.apache.catalina.Engine;
+import org.apache.catalina.Lifecycle;
 import org.apache.catalina.LifecycleException;
 import org.apache.catalina.Manager;
 import org.apache.catalina.Session;
@@ -615,17 +616,23 @@ public abstract class ManagerBase extends LifecycleMBeanBase
             sig.setSecureRandomProvider(getSecureRandomProvider());
         }
 
-        // Force initialization of the random number generator
-        if (log.isDebugEnabled())
-            log.debug("Force random number initialization starting");
-        sessionIdGenerator.generateSessionId();
-        if (log.isDebugEnabled())
-            log.debug("Force random number initialization completed");
+        if (sessionIdGenerator instanceof Lifecycle) {
+            ((Lifecycle) sessionIdGenerator).start();
+        } else {
+            // Force initialization of the random number generator
+            if (log.isDebugEnabled())
+                log.debug("Force random number initialization starting");
+            sessionIdGenerator.generateSessionId();
+            if (log.isDebugEnabled())
+                log.debug("Force random number initialization completed");
+        }
     }
 
     @Override
     protected void stopInternal() throws LifecycleException {
-        this.sessionIdGenerator = null;
+        if (sessionIdGenerator instanceof Lifecycle) {
+            ((Lifecycle) sessionIdGenerator).stop();
+        }
     }
 
 

==================================================
