0b0e67900af6aa8882f69765b4dd2cc58e3b95e6
==================================================
Revert "Avoid waste of resources due to reconstruction of objects"
==================================================
Mark Thomas
==================================================
Thu May 14 09:39:22 2020 +0100
==================================================
ApplicationContext.java
Revert "Avoid waste of resources due to reconstruction of objects"

This reverts commit 1719b71374d57d59bdcd99537bf13348cdaf87c7.



==================================================
ReplicationValve.java
index 004055a96f..61981e5c80 100644
--- a/java/org/apache/catalina/core/ApplicationContext.java
+++ b/java/org/apache/catalina/core/ApplicationContext.java
@@ -171,7 +171,7 @@ public class ApplicationContext implements ServletContext {
     /**
      * Thread local data used during request dispatch.
      */
-    private static final ThreadLocal<DispatchData> dispatchData = new ThreadLocal<>();
+    private final ThreadLocal<DispatchData> dispatchData = new ThreadLocal<>();
 
 
     /**

==================================================
PersistentManagerBase.java
index 8cd73b9965..144dbbb304 100644
--- a/java/org/apache/catalina/ha/tcp/ReplicationValve.java
+++ b/java/org/apache/catalina/ha/tcp/ReplicationValve.java
@@ -85,7 +85,7 @@ public class ReplicationValve
     /**
      * crossContext session container
      */
-    protected static final ThreadLocal<ArrayList<DeltaSession>> crossContextSessions =
+    protected final ThreadLocal<ArrayList<DeltaSession>> crossContextSessions =
         new ThreadLocal<>() ;
 
     /**

==================================================
RewriteCond.java
index 1fd08bec46..9f52c44659 100644
--- a/java/org/apache/catalina/session/PersistentManagerBase.java
+++ b/java/org/apache/catalina/session/PersistentManagerBase.java
@@ -188,7 +188,7 @@ public abstract class PersistentManagerBase extends ManagerBase
      * Session that is currently getting swapped in to prevent loading it more
      * than once concurrently
      */
-    private static final ThreadLocal<Session> sessionToSwapIn = new ThreadLocal<>();
+    private final ThreadLocal<Session> sessionToSwapIn = new ThreadLocal<>();
 
 
     // ------------------------------------------------------------- Properties

==================================================
RewriteRule.java
index a980d817e9..47a904c1e0 100644
--- a/java/org/apache/catalina/valves/rewrite/RewriteCond.java
+++ b/java/org/apache/catalina/valves/rewrite/RewriteCond.java
@@ -28,7 +28,7 @@ public class RewriteCond {
 
     public static class PatternCondition extends Condition {
         public Pattern pattern;
-        private static ThreadLocal<Matcher> matcher = new ThreadLocal<>();
+        private ThreadLocal<Matcher> matcher = new ThreadLocal<>();
 
         @Override
         public boolean evaluate(String value, Resolver resolver) {

==================================================
RewriteValve.java
index 0aa96de1b8..833a12c177 100644
--- a/java/org/apache/catalina/valves/rewrite/RewriteRule.java
+++ b/java/org/apache/catalina/valves/rewrite/RewriteRule.java
@@ -26,7 +26,7 @@ public class RewriteRule {
 
     protected RewriteCond[] conditions = new RewriteCond[0];
 
-    protected static ThreadLocal<Pattern> pattern = new ThreadLocal<>();
+    protected ThreadLocal<Pattern> pattern = new ThreadLocal<>();
     protected Substitution substitution = null;
 
     protected String patternString = null;
@@ -186,7 +186,7 @@ public class RewriteRule {
     protected boolean cookieSecure = false;
     protected boolean cookieHttpOnly = false;
     protected Substitution cookieSubstitution = null;
-    protected static ThreadLocal<String> cookieResult = new ThreadLocal<>();
+    protected ThreadLocal<String> cookieResult = new ThreadLocal<>();
 
     /**
      *  This forces a request attribute named VAR to be set to the value VAL,

==================================================
ClassLoaderLogManager.java
index 9025293a1e..20d8ba0f9b 100644
--- a/java/org/apache/catalina/valves/rewrite/RewriteValve.java
+++ b/java/org/apache/catalina/valves/rewrite/RewriteValve.java
@@ -77,7 +77,7 @@ public class RewriteValve extends ValveBase {
     /**
      * If rewriting occurs, the whole request will be processed again.
      */
-    protected static ThreadLocal<Boolean> invoked = new ThreadLocal<>();
+    protected ThreadLocal<Boolean> invoked = new ThreadLocal<>();
 
 
     /**

==================================================
Benchmarks.java
index cf3ad4c3dd..a04285c9f0 100644
--- a/java/org/apache/juli/ClassLoaderLogManager.java
+++ b/java/org/apache/juli/ClassLoaderLogManager.java
@@ -112,7 +112,7 @@ public class ClassLoaderLogManager extends LogManager {
      * This prefix is used to allow using prefixes for the properties names
      * of handlers and their subcomponents.
      */
-    protected static final ThreadLocal<String> prefix = new ThreadLocal<>();
+    protected final ThreadLocal<String> prefix = new ThreadLocal<>();
 
 
     /**

==================================================
