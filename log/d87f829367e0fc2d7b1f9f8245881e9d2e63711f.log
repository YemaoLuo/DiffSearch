d87f829367e0fc2d7b1f9f8245881e9d2e63711f
==================================================
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=62175
==================================================
Felix Schumacher
==================================================
Thu Mar 15 20:58:03 2018 +0000
==================================================
PersistentManagerBase.java
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=62175

Avoid infinite recursion, when trying to validate
a session while loading it with PersistentManager.



git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1826869 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestPersistentManager.java
index 939719221d..15963b072e 100644
--- a/java/org/apache/catalina/session/PersistentManagerBase.java
+++ b/java/org/apache/catalina/session/PersistentManagerBase.java
@@ -183,6 +183,12 @@ public abstract class PersistentManagerBase extends ManagerBase
      */
     private final Map<String,Object> sessionSwapInLocks = new HashMap<>();
 
+    /*
+     * Session that is currently getting swapped in to prevent loading it more
+     * than once concurrently
+     */
+    private final ThreadLocal<Session> sessionToSwapIn = new ThreadLocal<>();
+
 
     // ------------------------------------------------------------- Properties
 
@@ -707,18 +713,25 @@ public abstract class PersistentManagerBase extends ManagerBase
             session = sessions.get(id);
 
             if (session == null) {
-                session = loadSessionFromStore(id);
-
-                if (session != null && !session.isValid()) {
-                    log.error(sm.getString(
-                            "persistentManager.swapInInvalid", id));
-                    session.expire();
-                    removeSession(id);
-                    session = null;
-                }
+                Session currentSwapInSession = sessionToSwapIn.get();
+                try {
+                    if (currentSwapInSession == null || !id.equals(currentSwapInSession.getId())) {
+                        session = loadSessionFromStore(id);
+                        sessionToSwapIn.set(session);
+
+                        if (session != null && !session.isValid()) {
+                            log.error(sm.getString("persistentManager.swapInInvalid", id));
+                            session.expire();
+                            removeSession(id);
+                            session = null;
+                        }
 
-                if (session != null) {
-                    reactivateLoadedSession(id, session);
+                        if (session != null) {
+                            reactivateLoadedSession(id, session);
+                        }
+                    }
+                } finally {
+                    sessionToSwapIn.remove();
                 }
             }
         }

==================================================
