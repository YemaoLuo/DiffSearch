0bfaf55bbe41242ee152c44ec992f71d58925027
==================================================
Remove JreCompat from EL implementation as it is no longer required
==================================================
Mark Thomas
==================================================
Wed Jul 28 12:12:26 2021 +0100
==================================================
Jre9Compat.java
Remove JreCompat from EL implementation as it is no longer required


==================================================
JreCompat.java
deleted file mode 100644
index 3debecc531..0000000000
--- a/java/org/apache/el/util/Jre9Compat.java
+++ /dev/null
@@ -1,58 +0,0 @@
-/*
- *  Licensed to the Apache Software Foundation (ASF) under one or more
- *  contributor license agreements.  See the NOTICE file distributed with
- *  this work for additional information regarding copyright ownership.
- *  The ASF licenses this file to You under the Apache License, Version 2.0
- *  (the "License"); you may not use this file except in compliance with
- *  the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.apache.el.util;
-
-import java.lang.reflect.AccessibleObject;
-import java.lang.reflect.Method;
-
-/*
- * This is a cut down version of org.apache.tomcat.util.Jre9Compat that provides
- * only the methods required by the EL implementation.
- *
- * This class is duplicated in jakarta.el
- * When making changes keep the two in sync.
- */
-class Jre9Compat extends JreCompat {
-
-    private static final Method canAccessMethod;
-
-
-    static {
-        Method m1 = null;
-        try {
-            m1 = AccessibleObject.class.getMethod("canAccess", new Class<?>[] { Object.class });
-        } catch (NoSuchMethodException e) {
-            // Expected for Java 8
-        }
-        canAccessMethod = m1;
-    }
-
-
-    public static boolean isSupported() {
-        return canAccessMethod != null;
-    }
-
-
-    @Override
-    public boolean canAccess(Object base, AccessibleObject accessibleObject) {
-        try {
-            return ((Boolean) canAccessMethod.invoke(accessibleObject, base)).booleanValue();
-        } catch (ReflectiveOperationException | IllegalArgumentException e) {
-            return false;
-        }
-    }
-}

==================================================
ReflectionUtil.java
deleted file mode 100644
index 5c1fc6a6bf..0000000000
--- a/java/org/apache/el/util/JreCompat.java
+++ /dev/null
@@ -1,60 +0,0 @@
-/*
- *  Licensed to the Apache Software Foundation (ASF) under one or more
- *  contributor license agreements.  See the NOTICE file distributed with
- *  this work for additional information regarding copyright ownership.
- *  The ASF licenses this file to You under the Apache License, Version 2.0
- *  (the "License"); you may not use this file except in compliance with
- *  the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.apache.el.util;
-
-import java.lang.reflect.AccessibleObject;
-
-/*
- * This is a cut down version of org.apache.tomcat.util.JreCompat that provides
- * only the methods required by the EL implementation.
- *
- * This class is duplicated in jakarta.el
- * When making changes keep the two in sync.
- */
-public class JreCompat {
-
-    private static final JreCompat instance;
-
-    static {
-        if (Jre9Compat.isSupported()) {
-            instance = new Jre9Compat();
-        } else {
-            instance = new JreCompat();
-        }
-    }
-
-
-    public static JreCompat getInstance() {
-        return instance;
-    }
-
-
-    /**
-     * Is the accessibleObject accessible (as a result of appropriate module
-     * exports) on the provided instance?
-     *
-     * @param base  The specific instance to be tested.
-     * @param accessibleObject  The method/field/constructor to be tested.
-     *
-     * @return {code true} if the AccessibleObject can be accessed otherwise
-     *         {code false}
-     */
-    public boolean canAccess(Object base, AccessibleObject accessibleObject) {
-        // Java 8 doesn't support modules so default to true
-        return true;
-    }
-}

==================================================
