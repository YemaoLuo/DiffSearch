098c4c81602ba1e8d5f33b0795d7caf55f70d573
==================================================
Simpler way to determine Graal runtime
==================================================
Filip Hanik
==================================================
0700
==================================================
JspRuntimeLibrary.java
Simpler way to determine Graal runtime

Also, allows to mock the behavior
https://www.graalvm.org/sdk/javadoc/org/graalvm/nativeimage/ImageInfo.html#PROPERTY_IMAGE_CODE_KEY



==================================================
NamingContext.java
index cfb6e759ca..f27ce3b1e7 100644
--- a/java/org/apache/jasper/runtime/JspRuntimeLibrary.java
+++ b/java/org/apache/jasper/runtime/JspRuntimeLibrary.java
@@ -56,21 +56,7 @@ import org.apache.tomcat.InstanceManager;
  */
 public class JspRuntimeLibrary {
 
-    public static final boolean GRAAL;
-
-    static {
-        boolean result = false;
-        try {
-            Class<?> nativeImageClazz = Class.forName("org.graalvm.nativeimage.ImageInfo");
-            result = nativeImageClazz.getMethod("inImageCode").invoke(null) != null;
-            // Note: This will also be true for the Graal substrate VM
-        } catch (ClassNotFoundException e) {
-            // Must be Graal
-        } catch (ReflectiveOperationException | IllegalArgumentException e) {
-            // Should never happen
-        }
-        GRAAL = result;
-    }
+    public static final boolean GRAAL = System.getProperty("org.graalvm.nativeimage.imagecode") != null;
 
     /**
      * Returns the value of the jakarta.servlet.error.exception request

==================================================
GraalCompat.java
index 0471279a1f..40f40855de 100644
--- a/java/org/apache/naming/NamingContext.java
+++ b/java/org/apache/naming/NamingContext.java
@@ -792,20 +792,7 @@ public class NamingContext implements Context {
     // ------------------------------------------------------ Protected Methods
 
 
-    private static final boolean GRAAL;
-
-    static {
-        boolean result = false;
-        try {
-            Class<?> nativeImageClazz = Class.forName("org.graalvm.nativeimage.ImageInfo");
-            result = Boolean.TRUE.equals(nativeImageClazz.getMethod("inImageCode").invoke(null));
-        } catch (ClassNotFoundException e) {
-            // Must be Graal
-        } catch (ReflectiveOperationException | IllegalArgumentException e) {
-            // Should never happen
-        }
-        GRAAL = result;
-    }
+    private static final boolean GRAAL = System.getProperty("org.graalvm.nativeimage.imagecode") != null;
 
     /**
      * Retrieves the named object.

==================================================
