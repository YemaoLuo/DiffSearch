c4774682045d3ffc4b4bc940fdcf79f2fe598f82
==================================================
UCDetector clean-up
==================================================
Mark Emlyn
==================================================
Fri Jul 13 21:20:48 2012 +0000
==================================================
HeartbeatListener.java
UCDetector clean-up
 - Remove unused code
 - Use final where appropriate

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1361404 13f79535-47bb-0310-9956-ffa450edef68



==================================================
MultiCastSender.java
index c99f94836b..0348c6affa 100644
--- a/java/org/apache/catalina/ha/backend/HeartbeatListener.java
+++ b/java/org/apache/catalina/ha/backend/HeartbeatListener.java
@@ -33,42 +33,35 @@ import org.apache.juli.logging.LogFactory;
  * what about the bind(IP. port) only IP makes sense (for the moment).
  * BTW:v  = version :-)
  */
-public class HeartbeatListener
-    implements LifecycleListener, ContainerListener {
+public class HeartbeatListener implements LifecycleListener, ContainerListener {
 
     private static final Log log = LogFactory.getLog(HeartbeatListener.class);
 
     /* To allow to select the connector */
-    int port = 0;
-    String host = null;
-    public void setHost(String host) { this.host = host; }
-    public void setPort(int port) { this.port = port; }
+    private int port = 0;
+    private String host = null;
 
     /* for multicasting stuff */
-    String ip = "224.0.1.105"; /* Multicast IP */
-    int multiport = 23364;     /* Multicast Port */
-    int ttl = 16;
+    private final String ip = "224.0.1.105"; /* Multicast IP */
+    private final int multiport = 23364;     /* Multicast Port */
+    private final int ttl = 16;
 
-    public void setGroup(String ip) { this.ip = ip; }
+    public String getHost() { return host; }
     public String getGroup() { return ip; }
-    public void setMultiport(int multiport) { this.multiport = multiport; }
     public int getMultiport() { return multiport; }
-    public void setTtl(int ttl) { this.ttl = ttl; }
     public int getTtl() { return ttl; }
 
     /**
      * Proxy list, format "address:port,address:port".
      */
-    protected String proxyList = null;
+    private final String proxyList = null;
     public String getProxyList() { return proxyList; }
-    public void setProxyList(String proxyList) { this.proxyList = proxyList; }
 
     /**
      * URL prefix.
      */
-    protected String proxyURL = "/HeartbeatListener";
+    private final String proxyURL = "/HeartbeatListener";
     public String getProxyURL() { return proxyURL; }
-    public void setProxyURL(String proxyURL) { this.proxyURL = proxyURL; }
 
     private CollectedInfo coll = null;
 

==================================================
Proxy.java
index cb9596f4d4..9aef24b3f4 100644
--- a/java/org/apache/catalina/ha/backend/MultiCastSender.java
+++ b/java/org/apache/catalina/ha/backend/MultiCastSender.java
@@ -52,8 +52,8 @@ public class MultiCastSender
         if (s == null) {
             try {
                 group = InetAddress.getByName(config.getGroup());
-                if (config.host != null) {
-                    InetAddress addr =  InetAddress.getByName(config.host);
+                if (config.getHost() != null) {
+                    InetAddress addr =  InetAddress.getByName(config.getHost());
                     InetSocketAddress addrs = new InetSocketAddress(addr, config.getMultiport());
                     s = new MulticastSocket(addrs);
                 } else

==================================================
TcpSender.java
index aa967f0863..5de7ad9b73 100644
--- a/java/org/apache/catalina/ha/backend/Proxy.java
+++ b/java/org/apache/catalina/ha/backend/Proxy.java
@@ -26,9 +26,6 @@ import java.net.InetAddress;
  */
 public class Proxy {
 
-  protected enum State { OK, ERROR, DOWN }
-
   public InetAddress address = null;
   public int port = 80;
-  public State state = State.OK;
 }

==================================================
