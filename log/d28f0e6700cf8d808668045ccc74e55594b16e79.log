d28f0e6700cf8d808668045ccc74e55594b16e79
==================================================
Updating Tomcat's copy of BCEL as far as r1750000 (more to come)
==================================================
Mark Thomas
==================================================
Mon Aug 22 10:02:53 2016 +0000
==================================================
ArrayElementValue.java
Updating Tomcat's copy of BCEL as far as r1750000 (more to come)

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1757132 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ClassElementValue.java
index 9f0b49bd95..f84054fd4a 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ArrayElementValue.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ArrayElementValue.java
@@ -35,7 +35,7 @@ public class ArrayElementValue extends ElementValue
     @Override
     public String stringifyValue()
     {
-        StringBuilder sb = new StringBuilder();
+        final StringBuilder sb = new StringBuilder();
         sb.append("[");
         for (int i = 0; i < evalues.length; i++)
         {

==================================================
ClassParser.java
index c41a8c9e56..10fa589f7a 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ClassElementValue.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ClassElementValue.java
@@ -35,7 +35,7 @@ public class ClassElementValue extends ElementValue
     @Override
     public String stringifyValue()
     {
-        ConstantUtf8 cu8 = (ConstantUtf8) super.getConstantPool().getConstant(idx,
+        final ConstantUtf8 cu8 = (ConstantUtf8) super.getConstantPool().getConstant(idx,
                 Const.CONSTANT_Utf8);
         return cu8.getBytes();
     }

==================================================
Constant.java
index ba6d72b3e1..dac8496ff0 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ClassParser.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ClassParser.java
@@ -106,7 +106,7 @@ public final class ClassParser {
      * @throws  ClassFormatException
      */
     private void readAttributes() throws IOException, ClassFormatException {
-        int attributes_count = dataInputStream.readUnsignedShort();
+        final int attributes_count = dataInputStream.readUnsignedShort();
         for (int i = 0; i < attributes_count; i++) {
             ConstantUtf8 c;
             String name;
@@ -181,7 +181,7 @@ public final class ClassParser {
      * @throws  ClassFormatException
      */
     private void readFields() throws IOException, ClassFormatException {
-        int fields_count = dataInputStream.readUnsignedShort();
+        final int fields_count = dataInputStream.readUnsignedShort();
         for (int i = 0; i < fields_count; i++) {
             Utility.swallowFieldOrMethod(dataInputStream);
         }
@@ -208,7 +208,7 @@ public final class ClassParser {
      * @throws  ClassFormatException
      */
     private void readInterfaces() throws IOException, ClassFormatException {
-        int interfaces_count = dataInputStream.readUnsignedShort();
+        final int interfaces_count = dataInputStream.readUnsignedShort();
         if (interfaces_count > 0) {
             interface_names = new String[interfaces_count];
             for (int i = 0; i < interfaces_count; i++) {
@@ -227,7 +227,7 @@ public final class ClassParser {
      * @throws  ClassFormatException
      */
     private void readMethods() throws IOException, ClassFormatException {
-        int methods_count = dataInputStream.readUnsignedShort();
+        final int methods_count = dataInputStream.readUnsignedShort();
         for (int i = 0; i < methods_count; i++) {
             Utility.swallowFieldOrMethod(dataInputStream);
         }

==================================================
ConstantPool.java
index 578cc5a83b..51f75cedf0 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Constant.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Constant.java
@@ -64,7 +64,7 @@ public abstract class Constant {
      */
     static Constant readConstant(final DataInput input) throws IOException,
             ClassFormatException {
-        byte b = input.readByte(); // Read tag byte
+        final byte b = input.readByte(); // Read tag byte
         int skipSize;
         switch (b) {
             case Const.CONSTANT_Class:

==================================================
ElementValue.java
index 246a74d87c..e03378c64b 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantPool.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ConstantPool.java
@@ -45,7 +45,7 @@ public class ConstantPool {
      * @throws ClassFormatException
      */
     ConstantPool(final DataInput input) throws IOException, ClassFormatException {
-        int constant_pool_count = input.readUnsignedShort();
+        final int constant_pool_count = input.readUnsignedShort();
         constant_pool = new Constant[constant_pool_count];
         /* constant_pool[0] is unused by the compiler and may be used freely
          * by the implementation.

==================================================
ElementValuePair.java
index c3fceeb1de..43dad8a597 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ElementValue.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ElementValue.java
@@ -49,7 +49,7 @@ public abstract class ElementValue
 
     public static ElementValue readElementValue(final DataInput input, final ConstantPool cpool) throws IOException
     {
-        byte type = input.readByte();
+        final byte type = input.readByte();
         switch (type)
         {
             case PRIMITIVE_BYTE:
@@ -75,8 +75,8 @@ public abstract class ElementValue
                 return new AnnotationElementValue(ANNOTATION, new AnnotationEntry(input, cpool), cpool);
 
             case ARRAY:
-                int numArrayVals = input.readUnsignedShort();
-                ElementValue[] evalues = new ElementValue[numArrayVals];
+                final int numArrayVals = input.readUnsignedShort();
+                final ElementValue[] evalues = new ElementValue[numArrayVals];
                 for (int j = 0; j < numArrayVals; j++)
                 {
                     evalues[j] = ElementValue.readElementValue(input, cpool);

==================================================
EnumElementValue.java
index ccb4ceea8d..46e1a31aec 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ElementValuePair.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ElementValuePair.java
@@ -43,7 +43,7 @@ public class ElementValuePair
 
     public String getNameString()
     {
-        ConstantUtf8 c = (ConstantUtf8) constantPool.getConstant(
+        final ConstantUtf8 c = (ConstantUtf8) constantPool.getConstant(
                 elementNameIndex, Const.CONSTANT_Utf8);
         return c.getBytes();
     }

==================================================
SimpleElementValue.java
index 5eeb0a399b..421a69f919 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/EnumElementValue.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/EnumElementValue.java
@@ -34,7 +34,7 @@ public class EnumElementValue extends ElementValue
     @Override
     public String stringifyValue()
     {
-        ConstantUtf8 cu8 = (ConstantUtf8) super.getConstantPool().getConstant(valueIdx,
+        final ConstantUtf8 cu8 = (ConstantUtf8) super.getConstantPool().getConstant(valueIdx,
                 Const.CONSTANT_Utf8);
         return cu8.getBytes();
     }

==================================================
