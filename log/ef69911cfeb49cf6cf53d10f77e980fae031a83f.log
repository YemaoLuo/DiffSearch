ef69911cfeb49cf6cf53d10f77e980fae031a83f
==================================================
Fixed comet processing.
==================================================
Filip Hanik
==================================================
Fri Jun 16 20:55:06 2006 +0000
==================================================
Http11AprProcessor.java
Fixed comet processing.
The following bug was existing:
When a comet request had begun, and the browser sent some more data, the Tomcat APR component was never reading the data from the socket and lead to two kinds of failures
1. The CometServlet.read returned false, cause no data was read, and the socket closed
2. If the CometServlet.read was overwritten and return true, the thread got stuck in a loop, forever hanging.

The solution was to read the incoming data from the socket, update the content length of the request, and make sure that the input filters would still allow to read the data.

I think the following features still need to be fixed:
1. If CometServlet.read return false, the adapter should call CometServlet.end, not CometServlet.error
2. If CometServlet.read throws an error, then the adapter should call CometServlet.error
3. When CometServlet.read returns false, don't close the socket, keep alive should still work and we should still be able to process more HTTP requests on that connection



git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk@414906 13f79535-47bb-0310-9956-ffa450edef68



==================================================
InternalAprInputBuffer.java
index 841e81fc96..6c3181104d 100644
--- a/java/org/apache/coyote/http11/Http11AprProcessor.java
+++ b/java/org/apache/coyote/http11/Http11AprProcessor.java
@@ -743,9 +743,19 @@ public class Http11AprProcessor implements ActionHook {
         
         try {
             rp.setStage(org.apache.coyote.Constants.STAGE_SERVICE);
-            error = !adapter.event(request, response, error);
-            if (request.getAttribute("org.apache.tomcat.comet") == null) {
-                comet = false;
+            int data = inputBuffer.readSocketData();
+            if ( data > 0 ) {
+                int contentLength = request.getContentLength();
+                if (contentLength>=0) request.setContentLength(contentLength + data);
+                for (int i=0; i<inputBuffer.activeFilters.length; i++) {
+                    //this resets the remaining flag and the content length on the filter
+                    //if we don't do this, then request.getInputStream.read will return 0
+                    if (inputBuffer.activeFilters[i]!=null) inputBuffer.activeFilters[i].setRequest(request);
+                }
+                error = !adapter.event(request, response, error);
+                if (request.getAttribute("org.apache.tomcat.comet") == null) {
+                    comet = false;
+                }
             }
         } catch (InterruptedIOException e) {
             error = true;

==================================================
