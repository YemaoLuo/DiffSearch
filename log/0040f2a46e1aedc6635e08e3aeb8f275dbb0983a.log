0040f2a46e1aedc6635e08e3aeb8f275dbb0983a
==================================================
Refactor
==================================================
Mark Thomas
==================================================
Sat Oct 24 08:49:50 2015 +0000
==================================================
Response.java
Refactor
 - Remove duplicate code
 - Use standard mechanism to pre-load classes for the SecurityManager

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1710313 13f79535-47bb-0310-9956-ffa450edef68



==================================================
SecurityClassLoad.java
index eced886e60..fff4225b10 100644
--- a/java/org/apache/catalina/connector/Response.java
+++ b/java/org/apache/catalina/connector/Response.java
@@ -81,9 +81,6 @@ public class Response
     private static final boolean ENFORCE_ENCODING_IN_GET_WRITER;
 
     static {
-        // Ensure that URL is loaded for SM
-        URL.isSchemeChar('c');
-
         ENFORCE_ENCODING_IN_GET_WRITER = Boolean.valueOf(
                 System.getProperty("org.apache.catalina.connector.Response.ENFORCE_ENCODING_IN_GET_WRITER",
                         "true")).booleanValue();
@@ -1593,7 +1590,7 @@ public class Response
                 throw iae;
             }
 
-        } else if (leadingSlash || !hasScheme(location)) {
+        } else if (leadingSlash || !URL.hasScheme(location)) {
 
             redirectURLCC.recycle();
 
@@ -1768,22 +1765,6 @@ public class Response
         return true;
     }
 
-    /**
-     * Determine if a URI string has a <code>scheme</code> component.
-     */
-    private boolean hasScheme(String uri) {
-        int len = uri.length();
-        for(int i=0; i < len ; i++) {
-            char c = uri.charAt(i);
-            if(c == ':') {
-                return i > 0;
-            } else if(!URL.isSchemeChar(c)) {
-                return false;
-            }
-        }
-        return false;
-    }
-
     /**
      * Return the specified URL with the specified session identifier
      * suitably encoded.

==================================================
RewriteValve.java
index d7f0a69491..6ef06311ce 100644
--- a/java/org/apache/catalina/security/SecurityClassLoad.java
+++ b/java/org/apache/catalina/security/SecurityClassLoad.java
@@ -286,6 +286,7 @@ public final class SecurityClassLoad {
                 "util.net.NioBlockingSelector$BlockPoller$2");
         loader.loadClass(basePackage +
                 "util.net.NioBlockingSelector$BlockPoller$3");
+        loader.loadClass(basePackage + "util.net.URL");
         // security
         loader.loadClass(basePackage + "util.security.PrivilegedGetTccl");
         loader.loadClass(basePackage + "util.security.PrivilegedSetTccl");

==================================================
URL.java
index 773cb75bc5..61cf6f5300 100644
--- a/java/org/apache/catalina/valves/rewrite/RewriteValve.java
+++ b/java/org/apache/catalina/valves/rewrite/RewriteValve.java
@@ -344,7 +344,7 @@ public class RewriteValve extends ValveBase {
                     // 1. this valve is associated with a context
                     // 2. the url starts with a leading slash
                     // 3. the url isn't absolute
-                    if (context && urlString.charAt(0) == '/' && !hasScheme(urlString)) {
+                    if (context && urlString.charAt(0) == '/' && !URL.hasScheme(urlString)) {
                         urlString.insert(0, request.getContext().getEncodedPath());
                     }
                     response.sendRedirect(urlString.toString());
@@ -735,21 +735,4 @@ public class RewriteValve extends ValveBase {
             throw new IllegalArgumentException("Invalid flag in: " + line + " flag: " + flag);
         }
     }
-
-
-    /**
-     * Determine if a URI string has a <code>scheme</code> component.
-     */
-    protected static boolean hasScheme(StringBuffer uri) {
-        int len = uri.length();
-        for(int i=0; i < len ; i++) {
-            char c = uri.charAt(i);
-            if(c == ':') {
-                return i > 0;
-            } else if(!URL.isSchemeChar(c)) {
-                return false;
-            }
-        }
-        return false;
-    }
 }

==================================================
