d35ec13487d7abcbad4aa976b7ca64103dfd04ce
==================================================
Removed unused code
==================================================
Mark Emlyn
==================================================
Mon Jan 30 20:41:59 2012 +0000
==================================================
Container.java
Removed unused code

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1237986 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ContainerBase.java
index 19a4e2b645..73577c016f 100644
--- a/java/org/apache/catalina/Container.java
+++ b/java/org/apache/catalina/Container.java
@@ -14,17 +14,13 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-
-
 package org.apache.catalina;
 
 
 import java.beans.PropertyChangeListener;
-import java.io.IOException;
 
 import javax.management.ObjectName;
 import javax.naming.directory.DirContext;
-import javax.servlet.ServletException;
 
 import org.apache.catalina.connector.Request;
 import org.apache.catalina.connector.Response;
@@ -82,7 +78,6 @@ import org.apache.juli.logging.Log;
  * @author Remy Maucherat
  * @version $Id$
  */
-
 public interface Container extends Lifecycle {
 
 
@@ -96,15 +91,6 @@ public interface Container extends Lifecycle {
     public static final String ADD_CHILD_EVENT = "addChild";
 
 
-    /**
-     * The ContainerEvent event type sent when a Mapper is added
-     * by <code>addMapper()</code>.
-     * @deprecated Unused. Will be removed in Tomcat 8.0.x.
-     */
-    @Deprecated
-    public static final String ADD_MAPPER_EVENT = "addMapper";
-
-
     /**
      * The ContainerEvent event type sent when a valve is added
      * by <code>addValve()</code>, if this Container supports pipelines.
@@ -119,15 +105,6 @@ public interface Container extends Lifecycle {
     public static final String REMOVE_CHILD_EVENT = "removeChild";
 
 
-    /**
-     * The ContainerEvent event type sent when a Mapper is removed
-     * by <code>removeMapper()</code>.
-     * @deprecated Unused. Will be removed in Tomcat 8.0.x.
-     */
-    @Deprecated
-    public static final String REMOVE_MAPPER_EVENT = "removeMapper";
-
-
     /**
      * The ContainerEvent event type sent when a valve is removed
      * by <code>removeValve()</code>, if this Container supports pipelines.
@@ -392,25 +369,6 @@ public interface Container extends Lifecycle {
     public ContainerListener[] findContainerListeners();
 
 
-    /**
-     * Process the specified Request, and generate the corresponding Response,
-     * according to the design of this particular Container.
-     *
-     * @param request Request to be processed
-     * @param response Response to be produced
-     *
-     * @exception IOException if an input/output error occurred while
-     *  processing
-     * @exception ServletException if a ServletException was thrown
-     *  while processing this request
-     *
-     * @deprecated Unused. Will be removed in Tomcat 8.0.x.
-     */
-    @Deprecated
-    public void invoke(Request request, Response response)
-        throws IOException, ServletException;
-
-
     /**
      * Remove an existing child Container from association with this parent
      * Container.

==================================================
FailedContext.java
index 8025914b12..737e52f045 100644
--- a/java/org/apache/catalina/core/ContainerBase.java
+++ b/java/org/apache/catalina/core/ContainerBase.java
@@ -19,7 +19,6 @@ package org.apache.catalina.core;
 
 import java.beans.PropertyChangeListener;
 import java.beans.PropertyChangeSupport;
-import java.io.IOException;
 import java.security.AccessController;
 import java.security.PrivilegedAction;
 import java.util.ArrayList;
@@ -39,7 +38,6 @@ import java.util.concurrent.locks.ReentrantReadWriteLock;
 
 import javax.management.ObjectName;
 import javax.naming.directory.DirContext;
-import javax.servlet.ServletException;
 
 import org.apache.catalina.AccessLog;
 import org.apache.catalina.CatalinaFactory;
@@ -962,30 +960,6 @@ public abstract class ContainerBase extends LifecycleMBeanBase
     }
 
 
-    /**
-     * Process the specified Request, to produce the corresponding Response,
-     * by invoking the first Valve in our pipeline (if any), or the basic
-     * Valve otherwise.
-     *
-     * @param request Request to be processed
-     * @param response Response to be produced
-     *
-     * @exception IllegalStateException if neither a pipeline or a basic
-     *  Valve have been configured for this Container
-     * @exception IOException if an input/output error occurred while
-     *  processing
-     * @exception ServletException if a ServletException was thrown
-     *  while processing this request
-     */
-    @Override
-    public void invoke(Request request, Response response)
-        throws IOException, ServletException {
-
-        pipeline.getFirst().invoke(request, response);
-
-    }
-
-
     /**
      * Remove an existing child Container from association with this parent
      * Container.

==================================================
