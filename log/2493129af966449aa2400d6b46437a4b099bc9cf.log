2493129af966449aa2400d6b46437a4b099bc9cf
==================================================
Refactoring: HTTP/1.1 - HTTP/2 alignment
==================================================
Mark Thomas
==================================================
Thu Nov 30 10:19:54 2017 +0000
==================================================
Http11OutputBuffer.java
Refactoring: HTTP/1.1 - HTTP/2 alignment

Introduce HttpOutputBuffer into class hierarchy

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816695 13f79535-47bb-0310-9956-ffa450edef68



==================================================
HttpOutputBuffer.java
index 4d02c3e628..f4a3bfd93b 100644
--- a/java/org/apache/coyote/http11/Http11OutputBuffer.java
+++ b/java/org/apache/coyote/http11/Http11OutputBuffer.java
@@ -21,7 +21,6 @@ import java.nio.ByteBuffer;
 import java.util.Arrays;
 
 import org.apache.coyote.ActionCode;
-import org.apache.coyote.OutputBuffer;
 import org.apache.coyote.Response;
 import org.apache.coyote.http11.filters.GzipOutputFilter;
 import org.apache.juli.logging.Log;
@@ -37,7 +36,7 @@ import org.apache.tomcat.util.res.StringManager;
  * headers (once committed) and the response body. Note that buffering of the
  * response body happens at a higher level.
  */
-public class Http11OutputBuffer implements OutputBuffer {
+public class Http11OutputBuffer implements HttpOutputBuffer {
 
     // -------------------------------------------------------------- Variables
 
@@ -94,7 +93,7 @@ public class Http11OutputBuffer implements OutputBuffer {
     /**
      * Underlying output buffer.
      */
-    protected OutputBuffer outputStreamOutputBuffer;
+    protected HttpOutputBuffer outputStreamOutputBuffer;
 
 
     /**
@@ -539,7 +538,7 @@ public class Http11OutputBuffer implements OutputBuffer {
     /**
      * This class is an output buffer which will write data to a socket.
      */
-    protected class SocketOutputBuffer implements OutputBuffer {
+    protected class SocketOutputBuffer implements HttpOutputBuffer {
 
         /**
          * Write chunk.

==================================================
OutputFilter.java
new file mode 100644
index 0000000000..fd95eb6ffc
--- /dev/null
+++ b/java/org/apache/coyote/http11/HttpOutputBuffer.java
@@ -0,0 +1,23 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one or more
+ *  contributor license agreements.  See the NOTICE file distributed with
+ *  this work for additional information regarding copyright ownership.
+ *  The ASF licenses this file to You under the Apache License, Version 2.0
+ *  (the "License"); you may not use this file except in compliance with
+ *  the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing, software
+ *  distributed under the License is distributed on an "AS IS" BASIS,
+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *  See the License for the specific language governing permissions and
+ *  limitations under the License.
+ */
+package org.apache.coyote.http11;
+
+import org.apache.coyote.OutputBuffer;
+
+public interface HttpOutputBuffer extends OutputBuffer {
+
+}

==================================================
ChunkedOutputFilter.java
index 2f7d5b1082..7b5411a810 100644
--- a/java/org/apache/coyote/http11/OutputFilter.java
+++ b/java/org/apache/coyote/http11/OutputFilter.java
@@ -18,7 +18,6 @@ package org.apache.coyote.http11;
 
 import java.io.IOException;
 
-import org.apache.coyote.OutputBuffer;
 import org.apache.coyote.Response;
 
 /**
@@ -26,7 +25,7 @@ import org.apache.coyote.Response;
  *
  * @author Remy Maucherat
  */
-public interface OutputFilter extends OutputBuffer {
+public interface OutputFilter extends HttpOutputBuffer {
 
     /**
      * Some filters need additional parameters from the response. All the
@@ -49,7 +48,7 @@ public interface OutputFilter extends OutputBuffer {
      *
      * @param buffer The next buffer instance
      */
-    public void setBuffer(OutputBuffer buffer);
+    public void setBuffer(HttpOutputBuffer buffer);
 
 
     /**

==================================================
GzipOutputFilter.java
index 6631907861..7d8dc0f45a 100644
--- a/java/org/apache/coyote/http11/filters/ChunkedOutputFilter.java
+++ b/java/org/apache/coyote/http11/filters/ChunkedOutputFilter.java
@@ -26,8 +26,8 @@ import java.util.Map;
 import java.util.Set;
 import java.util.function.Supplier;
 
-import org.apache.coyote.OutputBuffer;
 import org.apache.coyote.Response;
+import org.apache.coyote.http11.HttpOutputBuffer;
 import org.apache.coyote.http11.OutputFilter;
 import org.apache.tomcat.util.buf.HexUtils;
 import org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream;
@@ -67,7 +67,7 @@ public class ChunkedOutputFilter implements OutputFilter {
     /**
      * Next buffer in the pipeline.
      */
-    protected OutputBuffer buffer;
+    protected HttpOutputBuffer buffer;
 
 
     /**
@@ -146,7 +146,7 @@ public class ChunkedOutputFilter implements OutputFilter {
 
 
     @Override
-    public void setBuffer(OutputBuffer buffer) {
+    public void setBuffer(HttpOutputBuffer buffer) {
         this.buffer = buffer;
     }
 

==================================================
IdentityOutputFilter.java
index b5da07d8d6..016619897c 100644
--- a/java/org/apache/coyote/http11/filters/GzipOutputFilter.java
+++ b/java/org/apache/coyote/http11/filters/GzipOutputFilter.java
@@ -21,8 +21,8 @@ import java.io.OutputStream;
 import java.nio.ByteBuffer;
 import java.util.zip.GZIPOutputStream;
 
-import org.apache.coyote.OutputBuffer;
 import org.apache.coyote.Response;
+import org.apache.coyote.http11.HttpOutputBuffer;
 import org.apache.coyote.http11.OutputFilter;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
@@ -42,7 +42,7 @@ public class GzipOutputFilter implements OutputFilter {
     /**
      * Next buffer in the pipeline.
      */
-    protected OutputBuffer buffer;
+    protected HttpOutputBuffer buffer;
 
 
     /**
@@ -110,7 +110,7 @@ public class GzipOutputFilter implements OutputFilter {
 
 
     @Override
-    public void setBuffer(OutputBuffer buffer) {
+    public void setBuffer(HttpOutputBuffer buffer) {
         this.buffer = buffer;
     }
 

==================================================
VoidOutputFilter.java
index 5bf06e6f91..778e7bf4e2 100644
--- a/java/org/apache/coyote/http11/filters/IdentityOutputFilter.java
+++ b/java/org/apache/coyote/http11/filters/IdentityOutputFilter.java
@@ -19,8 +19,8 @@ package org.apache.coyote.http11.filters;
 import java.io.IOException;
 import java.nio.ByteBuffer;
 
-import org.apache.coyote.OutputBuffer;
 import org.apache.coyote.Response;
+import org.apache.coyote.http11.HttpOutputBuffer;
 import org.apache.coyote.http11.OutputFilter;
 
 /**
@@ -47,7 +47,7 @@ public class IdentityOutputFilter implements OutputFilter {
     /**
      * Next buffer in the pipeline.
      */
-    protected OutputBuffer buffer;
+    protected HttpOutputBuffer buffer;
 
 
     // --------------------------------------------------- OutputBuffer Methods
@@ -106,7 +106,7 @@ public class IdentityOutputFilter implements OutputFilter {
 
 
     @Override
-    public void setBuffer(OutputBuffer buffer) {
+    public void setBuffer(HttpOutputBuffer buffer) {
         this.buffer = buffer;
     }
 

==================================================
TesterOutputBuffer.java
index d2a244a875..81f7c08f7f 100644
--- a/java/org/apache/coyote/http11/filters/VoidOutputFilter.java
+++ b/java/org/apache/coyote/http11/filters/VoidOutputFilter.java
@@ -19,8 +19,8 @@ package org.apache.coyote.http11.filters;
 import java.io.IOException;
 import java.nio.ByteBuffer;
 
-import org.apache.coyote.OutputBuffer;
 import org.apache.coyote.Response;
+import org.apache.coyote.http11.HttpOutputBuffer;
 import org.apache.coyote.http11.OutputFilter;
 
 /**
@@ -54,7 +54,7 @@ public class VoidOutputFilter implements OutputFilter {
 
 
     @Override
-    public void setBuffer(OutputBuffer buffer) {
+    public void setBuffer(HttpOutputBuffer buffer) {
         // NO-OP
     }
 

==================================================
