2a315eea006f87ed28fe7dd78162075dd85d7a63
==================================================
Pull up duplicate code to new abstract base class
==================================================
Mark Emlyn
==================================================
Mon Feb 25 12:30:22 2013 +0000
==================================================
WsRemoteEndpointAsync.java
Pull up duplicate code to new abstract base class

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1449682 13f79535-47bb-0310-9956-ffa450edef68



==================================================
WsRemoteEndpointBase.java
index 3472e41643..964223baaa 100644
--- a/java/org/apache/tomcat/websocket/WsRemoteEndpointAsync.java
+++ b/java/org/apache/tomcat/websocket/WsRemoteEndpointAsync.java
@@ -16,53 +16,17 @@
  */
 package org.apache.tomcat.websocket;
 
-import java.io.IOException;
 import java.nio.ByteBuffer;
 import java.util.concurrent.Future;
 
 import javax.websocket.RemoteEndpoint;
 import javax.websocket.SendHandler;
 
-// TODO Use a common base class
-public class WsRemoteEndpointAsync implements RemoteEndpoint.Async {
-
-    private final WsRemoteEndpointImplBase base;
-
+public class WsRemoteEndpointAsync extends WsRemoteEndpointBase
+        implements RemoteEndpoint.Async {
 
     WsRemoteEndpointAsync(WsRemoteEndpointImplBase base) {
-        this.base = base;
-    }
-
-
-    @Override
-    public void setBatchingAllowed(boolean batchingAllowed) throws IOException {
-        base.setBatchingAllowed(batchingAllowed);
-    }
-
-
-    @Override
-    public boolean getBatchingAllowed() {
-        return base.getBatchingAllowed();
-    }
-
-
-    @Override
-    public void flushBatch() throws IOException {
-        base.flushBatch();
-    }
-
-
-    @Override
-    public void sendPing(ByteBuffer applicationData) throws IOException,
-            IllegalArgumentException {
-        base.sendPing(applicationData);
-    }
-
-
-    @Override
-    public void sendPong(ByteBuffer applicationData) throws IOException,
-            IllegalArgumentException {
-        base.sendPong(applicationData);
+        super(base);
     }
 
 

==================================================
WsRemoteEndpointBasic.java
new file mode 100644
index 0000000000..e883c2ca0a
--- /dev/null
+++ b/java/org/apache/tomcat/websocket/WsRemoteEndpointBase.java
@@ -0,0 +1,64 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one or more
+ *  contributor license agreements.  See the NOTICE file distributed with
+ *  this work for additional information regarding copyright ownership.
+ *  The ASF licenses this file to You under the Apache License, Version 2.0
+ *  (the "License"); you may not use this file except in compliance with
+ *  the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing, software
+ *  distributed under the License is distributed on an "AS IS" BASIS,
+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *  See the License for the specific language governing permissions and
+ *  limitations under the License.
+ */
+package org.apache.tomcat.websocket;
+
+import java.io.IOException;
+import java.nio.ByteBuffer;
+
+import javax.websocket.RemoteEndpoint;
+
+public abstract class WsRemoteEndpointBase implements RemoteEndpoint {
+
+    protected final WsRemoteEndpointImplBase base;
+
+
+    WsRemoteEndpointBase(WsRemoteEndpointImplBase base) {
+        this.base = base;
+    }
+
+
+    @Override
+    public final void setBatchingAllowed(boolean batchingAllowed) throws IOException {
+        base.setBatchingAllowed(batchingAllowed);
+    }
+
+
+    @Override
+    public final boolean getBatchingAllowed() {
+        return base.getBatchingAllowed();
+    }
+
+
+    @Override
+    public final void flushBatch() throws IOException {
+        base.flushBatch();
+    }
+
+
+    @Override
+    public final void sendPing(ByteBuffer applicationData) throws IOException,
+            IllegalArgumentException {
+        base.sendPing(applicationData);
+    }
+
+
+    @Override
+    public final void sendPong(ByteBuffer applicationData) throws IOException,
+            IllegalArgumentException {
+        base.sendPong(applicationData);
+    }
+}

==================================================
