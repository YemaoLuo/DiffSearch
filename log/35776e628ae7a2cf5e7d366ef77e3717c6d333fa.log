35776e628ae7a2cf5e7d366ef77e3717c6d333fa
==================================================
Move configuration to CookieProcessor
==================================================
John Kelly
==================================================
Tue May 14 09:47:19 2019 +0100
==================================================
Context.java
Move configuration to CookieProcessor



==================================================
Response.java
index fef50c01d5..5e3d28586c 100644
--- a/java/org/apache/catalina/Context.java
+++ b/java/org/apache/catalina/Context.java
@@ -39,7 +39,6 @@ import org.apache.tomcat.util.descriptor.web.FilterMap;
 import org.apache.tomcat.util.descriptor.web.LoginConfig;
 import org.apache.tomcat.util.descriptor.web.SecurityConstraint;
 import org.apache.tomcat.util.http.CookieProcessor;
-import org.apache.tomcat.util.http.SameSiteCookies;
 
 /**
  * A <b>Context</b> is a Container that represents a servlet context, and
@@ -253,24 +252,6 @@ public interface Context extends Container, ContextBind {
     public void setUseHttpOnly(boolean useHttpOnly);
 
 
-    /**
-     * Gets the value of the sameSiteCookies setting.
-     *
-     * @return  The value of the setting (<code>none</code>, <code>lax</code>, <code>strict</code>)
-     *
-     */
-    public SameSiteCookies getSameSiteCookies();
-
-
-    /**
-     * Sets the value of the sameSiteCookies setting.
-     *
-     * @param value   Can be set to <code>none</code>, <code>lax</code>, <code>strict</code>.
-     *
-     */
-    public void setSameSiteCookies(String value);
-
-
     /**
      * Gets the domain to use for session cookies. Overrides any setting that
      * may be specified by the application.

==================================================
ApplicationPushBuilder.java
index d9961959b7..0df7e00db2 100644
--- a/java/org/apache/catalina/connector/Response.java
+++ b/java/org/apache/catalina/connector/Response.java
@@ -973,7 +973,7 @@ public class Response implements HttpServletResponse {
             return AccessController.doPrivileged(
                     new PrivilegedGenerateCookieString(getContext(), cookie));
         } else {
-            return getContext().getCookieProcessor().generateHeader(cookie, getContext().getSameSiteCookies());
+            return getContext().getCookieProcessor().generateHeader(cookie);
         }
     }
 
@@ -1839,7 +1839,7 @@ public class Response implements HttpServletResponse {
 
         @Override
         public String run(){
-            return context.getCookieProcessor().generateHeader(cookie, context.getSameSiteCookies());
+            return context.getCookieProcessor().generateHeader(cookie);
         }
     }
 

==================================================
StandardContext.java
index e1c183385c..58858aecb1 100644
--- a/java/org/apache/catalina/core/ApplicationPushBuilder.java
+++ b/java/org/apache/catalina/core/ApplicationPushBuilder.java
@@ -161,7 +161,7 @@ public class ApplicationPushBuilder implements PushBuilder {
         }
         List<String> cookieValues = new ArrayList<>(1);
         cookieValues.add(generateCookieHeader(cookies,
-                catalinaRequest.getContext().getCookieProcessor(), context));
+                catalinaRequest.getContext().getCookieProcessor()));
         headers.put("cookie", cookieValues);
 
         // Authentication
@@ -425,7 +425,7 @@ public class ApplicationPushBuilder implements PushBuilder {
     }
 
 
-    private static String generateCookieHeader(List<Cookie> cookies, CookieProcessor cookieProcessor, Context context) {
+    private static String generateCookieHeader(List<Cookie> cookies, CookieProcessor cookieProcessor) {
         StringBuilder result = new StringBuilder();
         boolean first = true;
         for (Cookie cookie : cookies) {
@@ -439,7 +439,7 @@ public class ApplicationPushBuilder implements PushBuilder {
             // However, if passed a Cookie with just a name and value set it
             // will generate an appropriate header for the Cookie header on the
             // pushed request.
-            result.append(cookieProcessor.generateHeader(cookie, context.getSameSiteCookies()));
+            result.append(cookieProcessor.generateHeader(cookie));
         }
         return result.toString();
     }

==================================================
FailedContext.java
index 722fa5f024..af616213d5 100644
--- a/java/org/apache/catalina/core/mbeans-descriptors.xml
+++ b/java/org/apache/catalina/core/mbeans-descriptors.xml
@@ -264,10 +264,6 @@
                description="Should Tomcat renew the threads of the thread pool when the application is stopped to avoid memory leaks because of uncleaned ThreadLocal variables."
                type="boolean"/>
 
-    <attribute name="sameSiteCookies"
-               description="The setting to use for the same site cookie attribute."
-               type="java.lang.String"/>
-
     <attribute name="server"
                description="The J2EE Server this module is deployed on"
                type="java.lang.String"/>

==================================================
CookieProcessor.java
index c38f804abf..02f58472b6 100644
--- a/java/org/apache/catalina/startup/FailedContext.java
+++ b/java/org/apache/catalina/startup/FailedContext.java
@@ -62,7 +62,6 @@ import org.apache.tomcat.util.descriptor.web.FilterMap;
 import org.apache.tomcat.util.descriptor.web.LoginConfig;
 import org.apache.tomcat.util.descriptor.web.SecurityConstraint;
 import org.apache.tomcat.util.http.CookieProcessor;
-import org.apache.tomcat.util.http.SameSiteCookies;
 import org.apache.tomcat.util.res.StringManager;
 
 /**
@@ -346,11 +345,6 @@ public class FailedContext extends LifecycleMBeanBase implements Context {
     @Override
     public void setUseHttpOnly(boolean useHttpOnly) { /* NO-OP */ }
 
-    @Override
-    public SameSiteCookies getSameSiteCookies() { return null; }
-    @Override
-    public void setSameSiteCookies(String sameSiteCookies) { /* NO-OP */ }
-
     @Override
     public String getSessionCookieDomain() { return null; }
     @Override

==================================================
LegacyCookieProcessor.java
index 0f6a554db8..e0efbf1718 100644
--- a/java/org/apache/tomcat/util/http/CookieProcessor.java
+++ b/java/org/apache/tomcat/util/http/CookieProcessor.java
@@ -36,12 +36,10 @@ public interface CookieProcessor {
      *
      * @param cookie The cookie for which the header will be generated
      *
-     * @param sameSiteCookies The sameSiteCookies attribute specified in context.
-     *
      * @return The header value in a form that can be added directly to the
      *         response
      */
-    String generateHeader(Cookie cookie, SameSiteCookies sameSiteCookies);
+    String generateHeader(Cookie cookie);
 
     /**
      * Obtain the character set that will be used when converting between bytes

==================================================
Rfc6265CookieProcessor.java
index 49c7a4edb2..f4b5f00089 100644
--- a/java/org/apache/tomcat/util/http/LegacyCookieProcessor.java
+++ b/java/org/apache/tomcat/util/http/LegacyCookieProcessor.java
@@ -79,6 +79,7 @@ public final class LegacyCookieProcessor extends CookieProcessorBase {
 
     private final BitSet allowedWithoutQuotes = new BitSet(128);
 
+    private SameSiteCookies sameSiteCookies = SameSiteCookies.NONE;
 
     public LegacyCookieProcessor() {
         // BitSet elements will default to false
@@ -195,6 +196,16 @@ public final class LegacyCookieProcessor extends CookieProcessorBase {
     }
 
 
+    public SameSiteCookies getSameSiteCookies() {
+        return sameSiteCookies;
+    }
+
+
+    public void setSameSiteCookies(String sameSiteCookies) {
+        this.sameSiteCookies = SameSiteCookies.toAttribute(sameSiteCookies);
+    }
+
+
     @Override
     public Charset getCharset() {
         return StandardCharsets.ISO_8859_1;
@@ -234,7 +245,7 @@ public final class LegacyCookieProcessor extends CookieProcessorBase {
 
 
     @Override
-    public String generateHeader(Cookie cookie, SameSiteCookies sameSiteCookies) {
+    public String generateHeader(Cookie cookie) {
         /*
          * The spec allows some latitude on when to send the version attribute
          * with a Set-Cookie header. To be nice to clients, we'll make sure the

==================================================
TesterContext.java
index 29d3d19e54..fab21d8a4c 100644
--- a/java/org/apache/tomcat/util/http/Rfc6265CookieProcessor.java
+++ b/java/org/apache/tomcat/util/http/Rfc6265CookieProcessor.java
@@ -52,6 +52,8 @@ public class Rfc6265CookieProcessor extends CookieProcessorBase {
         domainValid.set('-');
     }
 
+    private SameSiteCookies sameSiteCookies = SameSiteCookies.NONE;
+
 
     @Override
     public Charset getCharset() {
@@ -59,6 +61,16 @@ public class Rfc6265CookieProcessor extends CookieProcessorBase {
     }
 
 
+    public SameSiteCookies getSameSiteCookies() {
+        return sameSiteCookies;
+    }
+
+
+    public void setSameSiteCookies(String sameSiteCookies) {
+        this.sameSiteCookies = SameSiteCookies.toAttribute(sameSiteCookies);
+    }
+
+
     @Override
     public void parseCookieHeader(MimeHeaders headers,
             ServerCookies serverCookies) {
@@ -98,7 +110,7 @@ public class Rfc6265CookieProcessor extends CookieProcessorBase {
 
 
     @Override
-    public String generateHeader(javax.servlet.http.Cookie cookie, SameSiteCookies sameSiteCookies) {
+    public String generateHeader(javax.servlet.http.Cookie cookie) {
 
         // Can't use StringBuilder due to DateFormat
         StringBuffer header = new StringBuffer();

==================================================
TestCookieProcessorGeneration.java
index 8d45fcd8a6..9725e76eb4 100644
--- a/test/org/apache/tomcat/unittest/TesterContext.java
+++ b/test/org/apache/tomcat/unittest/TesterContext.java
@@ -63,7 +63,6 @@ import org.apache.tomcat.util.descriptor.web.FilterMap;
 import org.apache.tomcat.util.descriptor.web.LoginConfig;
 import org.apache.tomcat.util.descriptor.web.SecurityConstraint;
 import org.apache.tomcat.util.http.CookieProcessor;
-import org.apache.tomcat.util.http.SameSiteCookies;
 
 /**
  * Minimal implementation for use in unit tests.
@@ -420,16 +419,6 @@ public class TesterContext implements Context {
         // NO-OP
     }
 
-    @Override
-    public SameSiteCookies getSameSiteCookies() {
-        return null;
-    }
-
-    @Override
-    public void setSameSiteCookies(String value) {
-        // NO-OP
-    }
-
     @Override
     public String getSessionCookieDomain() {
         return null;

==================================================
