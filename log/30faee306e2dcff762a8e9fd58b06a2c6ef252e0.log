30faee306e2dcff762a8e9fd58b06a2c6ef252e0
==================================================
Implement getters and setters for session idle timeout.
==================================================
Mark Emlyn
==================================================
Wed Feb 13 21:23:51 2013 +0000
==================================================
Session.java
Implement getters and setters for session idle timeout.
The actual timeout mechanism is still TODO

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1445935 13f79535-47bb-0310-9956-ffa450edef68



==================================================
WebSocketContainer.java
index a991be9fcd..2b1e51f908 100644
--- a/java/javax/websocket/Session.java
+++ b/java/javax/websocket/Session.java
@@ -48,8 +48,16 @@ public interface Session extends Closeable {
 
     boolean isOpen();
 
+    /**
+     * Get the idle timeout for this session in milliseconds. Zero or negative
+     * values indicate an infinite timeout.
+     */
     long getTimeout();
 
+    /**
+     * Set the idle timeout for this session in milliseconds. Zero or negative
+     * values indicate an infinite timeout.
+     */
     void setTimeout(long seconds);
 
     /**

==================================================
WsSession.java
index 8ac8a77e7d..b614d211c5 100644
--- a/java/javax/websocket/WebSocketContainer.java
+++ b/java/javax/websocket/WebSocketContainer.java
@@ -55,8 +55,16 @@ public interface WebSocketContainer {
             ClientEndpointConfiguration clientEndpointConfiguration, URI path)
             throws DeploymentException;
 
+    /**
+     * Get the current default session idle timeout in milliseconds. Zero or
+     * negative values indicate an infinite timeout.
+     */
     long getMaxSessionIdleTimeout();
 
+    /**
+     * Set the current default session idle timeout in milliseconds. Zero or
+     * negative values indicate an infinite timeout.
+     */
     void setMaxSessionIdleTimeout(long timeout);
 
     /**

==================================================
WsWebSocketContainer.java
index ef3736ecc2..0c0a06bb14 100644
--- a/java/org/apache/tomcat/websocket/WsSession.java
+++ b/java/org/apache/tomcat/websocket/WsSession.java
@@ -63,6 +63,7 @@ public class WsSession implements Session {
             Constants.DEFAULT_BUFFER_SIZE;
     private volatile int maxTextMessageBufferSize =
             Constants.DEFAULT_BUFFER_SIZE;
+    private volatile long sessionIdleTimeout = 0;
 
 
     /**
@@ -87,6 +88,8 @@ public class WsSession implements Session {
                 webSocketContainer.getDefaultMaxBinaryMessageBufferSize();
         this.maxTextMessageBufferSize =
                 webSocketContainer.getDefaultMaxTextMessageBufferSize();
+        this.sessionIdleTimeout =
+                webSocketContainer.getMaxSessionIdleTimeout();
     }
 
 
@@ -203,14 +206,13 @@ public class WsSession implements Session {
 
     @Override
     public long getTimeout() {
-        // TODO Auto-generated method stub
-        return 0;
+        return sessionIdleTimeout;
     }
 
 
     @Override
-    public void setTimeout(long seconds) {
-        // TODO Auto-generated method stub
+    public void setTimeout(long timeout) {
+        this.sessionIdleTimeout = timeout;
     }
 
 

==================================================
