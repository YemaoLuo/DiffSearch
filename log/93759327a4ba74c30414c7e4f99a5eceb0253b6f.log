93759327a4ba74c30414c7e4f99a5eceb0253b6f
==================================================
Refactor Connector/Endpoint pause only stop new connections/requests
==================================================
Mark Thomas
==================================================
Mon Jan 10 17:22:28 2022 +0000
==================================================
AbstractProtocol.java
Refactor Connector/Endpoint pause only stop new connections/requests


==================================================
Nio2Endpoint.java
index c286a23773..896e94d78d 100644
--- a/java/org/apache/coyote/AbstractProtocol.java
+++ b/java/org/apache/coyote/AbstractProtocol.java
@@ -585,9 +585,7 @@ public abstract class AbstractProtocol<S> implements ProtocolHandler,
         endpoint.start();
         monitorFuture = getUtilityExecutor().scheduleWithFixedDelay(
                 () -> {
-                    if (!isPaused()) {
-                        startAsyncTimeout();
-                    }
+                    startAsyncTimeout();
                 }, 0, 60, TimeUnit.SECONDS);
     }
 
@@ -630,7 +628,6 @@ public abstract class AbstractProtocol<S> implements ProtocolHandler,
             getLog().info(sm.getString("abstractProtocolHandler.pause", getName()));
         }
 
-        stopAsyncTimeout();
         endpoint.pause();
     }
 
@@ -647,7 +644,6 @@ public abstract class AbstractProtocol<S> implements ProtocolHandler,
         }
 
         endpoint.resume();
-        startAsyncTimeout();
     }
 
 

==================================================
NioEndpoint.java
index 47825f0ec9..c9dc0d35f6 100644
--- a/java/org/apache/tomcat/util/net/Nio2Endpoint.java
+++ b/java/org/apache/tomcat/util/net/Nio2Endpoint.java
@@ -932,7 +932,7 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel,AsynchronousS
                 if (getSocket().isOpen()) {
                     getSocket().close(true);
                 }
-                if (getEndpoint().running && !getEndpoint().paused) {
+                if (getEndpoint().running) {
                     if (nioChannels == null || !nioChannels.push(getSocket())) {
                         getSocket().free();
                     }
@@ -1671,7 +1671,7 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel,AsynchronousS
                 socketWrapper = null;
                 event = null;
                 //return to cache
-                if (running && !paused && processorCache != null) {
+                if (running && processorCache != null) {
                     processorCache.push(this);
                 }
             }

==================================================
