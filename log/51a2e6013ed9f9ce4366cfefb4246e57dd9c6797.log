51a2e6013ed9f9ce4366cfefb4246e57dd9c6797
==================================================
Delete some deprecated code planned for removal in Tomcat 10
==================================================
remm remm@apache.org
==================================================
Wed Jan 15 11:14:19 2020 +0100
==================================================
CompressionConfig.java
Delete some deprecated code planned for removal in Tomcat 10

noCompressionStrongETag is now set to true.


==================================================
AbstractHttp11Protocol.java
index 5d26c88e0c..b2b2e2a498 100644
--- a/java/org/apache/coyote/CompressionConfig.java
+++ b/java/org/apache/coyote/CompressionConfig.java
@@ -46,7 +46,6 @@ public class CompressionConfig {
             "text/javascript,application/javascript,application/json,application/xml";
     private String[] compressibleMimeTypes = null;
     private int compressionMinSize = 2048;
-    private boolean noCompressionStrongETag = true;
 
 
     /**
@@ -183,35 +182,6 @@ public class CompressionConfig {
     }
 
 
-    /**
-     * Determine if compression is disabled if the resource has a strong ETag.
-     *
-     * @return {@code true} if compression is disabled, otherwise {@code false}
-     *
-     * @deprecated Will be removed in Tomcat 10 where it will be hard-coded to
-     *             {@code true}
-     */
-    @Deprecated
-    public boolean getNoCompressionStrongETag() {
-        return noCompressionStrongETag;
-    }
-
-
-    /**
-     * Set whether compression is disabled for resources with a strong ETag.
-     *
-     * @param noCompressionStrongETag {@code true} if compression is disabled,
-     *                                otherwise {@code false}
-     *
-     * @deprecated Will be removed in Tomcat 10 where it will be hard-coded to
-     *             {@code true}
-     */
-    @Deprecated
-    public void setNoCompressionStrongETag(boolean noCompressionStrongETag) {
-        this.noCompressionStrongETag = noCompressionStrongETag;
-    }
-
-
     /**
      * Determines if compression should be enabled for the given response and if
      * it is, sets any necessary headers to mark it as such.
@@ -266,13 +236,11 @@ public class CompressionConfig {
         }
 
         // Check if the resource has a strong ETag
-        if (noCompressionStrongETag) {
-            String eTag = responseHeaders.getHeader("ETag");
-            if (eTag != null && !eTag.trim().startsWith("W/")) {
-                // Has an ETag that doesn't start with "W/..." so it must be a
-                // strong ETag
-                return false;
-            }
+        String eTag = responseHeaders.getHeader("ETag");
+        if (eTag != null && !eTag.trim().startsWith("W/")) {
+            // Has an ETag that doesn't start with "W/..." so it must be a
+            // strong ETag
+            return false;
         }
 
         // If processing reaches this far, the response might be compressed.

==================================================
Http2Protocol.java
index 3f02a1274b..c40e1b35d0 100644
--- a/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
+++ b/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
@@ -279,16 +279,6 @@ public abstract class AbstractHttp11Protocol<S> extends AbstractProtocol<S> {
     }
 
 
-    @Deprecated
-    public boolean getNoCompressionStrongETag() {
-        return compressionConfig.getNoCompressionStrongETag();
-    }
-    @Deprecated
-    public void setNoCompressionStrongETag(boolean noCompressionStrongETag) {
-        compressionConfig.setNoCompressionStrongETag(noCompressionStrongETag);
-    }
-
-
     public boolean useCompression(Request request, Response response) {
         return compressionConfig.useCompression(request, response);
     }

==================================================
TestCompressionConfig.java
index ed2350542c..aab980cff3 100644
--- a/java/org/apache/coyote/http2/Http2Protocol.java
+++ b/java/org/apache/coyote/http2/Http2Protocol.java
@@ -408,16 +408,6 @@ public class Http2Protocol implements UpgradeProtocol {
     }
 
 
-    @Deprecated
-    public boolean getNoCompressionStrongETag() {
-        return compressionConfig.getNoCompressionStrongETag();
-    }
-    @Deprecated
-    public void setNoCompressionStrongETag(boolean noCompressionStrongETag) {
-        compressionConfig.setNoCompressionStrongETag(noCompressionStrongETag);
-    }
-
-
     public boolean useCompression(Request request, Response response) {
         return compressionConfig.useCompression(request, response);
     }

==================================================
