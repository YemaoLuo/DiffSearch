4cbb52f1cbf06f1141d9721297219629229470b5
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49142
==================================================
Mark Emlyn
==================================================
Wed Nov 24 22:08:38 2010 +0000
==================================================
GenericServlet.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49142
Add missing serialVersionUIDs using Eclipse's auto correct and a little manual formatting

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1038846 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ServletContextAttributeEvent.java
index 68034cff9d..d3bb2d3ee4 100644
--- a/java/javax/servlet/GenericServlet.java
+++ b/java/javax/servlet/GenericServlet.java
@@ -42,6 +42,8 @@ import java.util.Enumeration;
 public abstract class GenericServlet implements Servlet, ServletConfig,
         java.io.Serializable {
 
+    private static final long serialVersionUID = 1L;
+
     private transient ServletConfig config;
 
     /**

==================================================
ServletContextEvent.java
index 3a5975e57f..be23e8298e 100644
--- a/java/javax/servlet/ServletContextAttributeEvent.java
+++ b/java/javax/servlet/ServletContextAttributeEvent.java
@@ -24,6 +24,8 @@ package javax.servlet;
  * @since v 2.3
  */
 public class ServletContextAttributeEvent extends ServletContextEvent {
+    private static final long serialVersionUID = 1L;
+
     private final String name;
     private final Object value;
 

==================================================
ServletException.java
index 9793f2f82e..06ff312e1d 100644
--- a/java/javax/servlet/ServletContextEvent.java
+++ b/java/javax/servlet/ServletContextEvent.java
@@ -25,6 +25,8 @@ package javax.servlet;
  */
 public class ServletContextEvent extends java.util.EventObject {
 
+    private static final long serialVersionUID = 1L;
+
     /**
      * Construct a ServletContextEvent from the given context.
      * 

==================================================
ServletRequestAttributeEvent.java
index cf35694fa1..e22a065716 100644
--- a/java/javax/servlet/ServletException.java
+++ b/java/javax/servlet/ServletException.java
@@ -25,6 +25,8 @@ package javax.servlet;
  */
 public class ServletException extends Exception {
 
+    private static final long serialVersionUID = 1L;
+
     /**
      * Constructs a new servlet exception.
      */

==================================================
ServletRequestEvent.java
index d06b8919df..29795989ad 100644
--- a/java/javax/servlet/ServletRequestAttributeEvent.java
+++ b/java/javax/servlet/ServletRequestAttributeEvent.java
@@ -24,6 +24,8 @@ package javax.servlet;
  * @since Servlet 2.4
  */
 public class ServletRequestAttributeEvent extends ServletRequestEvent {
+    private static final long serialVersionUID = 1L;
+
     private final String name;
     private final Object value;
 

==================================================
UnavailableException.java
index 8246bc0b6e..a8be6cc671 100644
--- a/java/javax/servlet/ServletRequestEvent.java
+++ b/java/javax/servlet/ServletRequestEvent.java
@@ -24,6 +24,8 @@ package javax.servlet;
  * @since Servlet 2.4
  */
 public class ServletRequestEvent extends java.util.EventObject {
+    private static final long serialVersionUID = 1L;
+
     private final ServletRequest request;
 
     /**

==================================================
HttpServlet.java
index 23e67b4191..172cb8ed67 100644
--- a/java/javax/servlet/UnavailableException.java
+++ b/java/javax/servlet/UnavailableException.java
@@ -44,6 +44,8 @@ package javax.servlet;
  */
 public class UnavailableException extends ServletException {
 
+    private static final long serialVersionUID = 1L;
+
     private final Servlet servlet; // what's unavailable
     private final boolean permanent; // needs admin action?
     private final int seconds; // unavailability estimate

==================================================
HttpSessionBindingEvent.java
index d41af02efd..7bb6cfa8e9 100644
--- a/java/javax/servlet/http/HttpServlet.java
+++ b/java/javax/servlet/http/HttpServlet.java
@@ -75,6 +75,8 @@ import javax.servlet.ServletResponse;
  */
 public abstract class HttpServlet extends GenericServlet {
 
+    private static final long serialVersionUID = 1L;
+
     private static final String METHOD_DELETE = "DELETE";
     private static final String METHOD_HEAD = "HEAD";
     private static final String METHOD_GET = "GET";

==================================================
HttpSessionEvent.java
index bc4430d3b2..3501fcafec 100644
--- a/java/javax/servlet/http/HttpSessionBindingEvent.java
+++ b/java/javax/servlet/http/HttpSessionBindingEvent.java
@@ -36,12 +36,12 @@ package javax.servlet.http;
  */
 public class HttpSessionBindingEvent extends HttpSessionEvent {
 
-    /* The name to which the object is being bound or unbound */
+    private static final long serialVersionUID = 1L;
 
+    /* The name to which the object is being bound or unbound */
     private final String name;
 
     /* The object is being bound or unbound */
-
     private final Object value;
 
     /**

==================================================
JspException.java
index 6aa4adc57c..79a34c5534 100644
--- a/java/javax/servlet/http/HttpSessionEvent.java
+++ b/java/javax/servlet/http/HttpSessionEvent.java
@@ -23,6 +23,8 @@ package javax.servlet.http;
  * @since v 2.3
  */
 public class HttpSessionEvent extends java.util.EventObject {
+    private static final long serialVersionUID = 1L;
+
     /** Construct a session event from the given source. */
     public HttpSessionEvent(HttpSession source) {
         super(source);

==================================================
JspTagException.java
index 54a28ac773..90f311a620 100644
--- a/java/javax/servlet/jsp/JspException.java
+++ b/java/javax/servlet/jsp/JspException.java
@@ -23,6 +23,9 @@ package javax.servlet.jsp;
  */
 public class JspException extends Exception {
 
+    private static final long serialVersionUID = 1L;
+
+
     /**
      * Construct a JspException.
      */

==================================================
SkipPageException.java
index d15e3c1d2d..64d86971ce 100644
--- a/java/javax/servlet/jsp/JspTagException.java
+++ b/java/javax/servlet/jsp/JspTagException.java
@@ -23,6 +23,8 @@ package javax.servlet.jsp;
  */
 public class JspTagException extends JspException {
 
+    private static final long serialVersionUID = 1L;
+
     /**
      * Constructs a new JspTagException with the specified message. The message
      * can be written to the server log and/or displayed for the user.

==================================================
ELException.java
index 1ed632dd98..ba0e15a26d 100644
--- a/java/javax/servlet/jsp/SkipPageException.java
+++ b/java/javax/servlet/jsp/SkipPageException.java
@@ -34,6 +34,8 @@ package javax.servlet.jsp;
  */
 public class SkipPageException extends JspException {
 
+    private static final long serialVersionUID = 1L;
+
     /**
      * Creates a SkipPageException with no message.
      */

==================================================
ELParseException.java
index 8beb7186d5..f6bdd5c8ad 100644
--- a/java/javax/servlet/jsp/el/ELException.java
+++ b/java/javax/servlet/jsp/el/ELException.java
@@ -27,6 +27,8 @@ package javax.servlet.jsp.el;
 @SuppressWarnings("dep-ann") // TCK signature test fails with annotation
 public class ELException extends Exception {
 
+    private static final long serialVersionUID = 1L;
+
     /**
      * Creates an ELException with no detail message.
      **/

==================================================
TagSupport.java
index c9ea437bf0..35e45136fa 100644
--- a/java/javax/servlet/jsp/el/ELParseException.java
+++ b/java/javax/servlet/jsp/el/ELParseException.java
@@ -27,7 +27,9 @@ package javax.servlet.jsp.el;
 @SuppressWarnings("dep-ann") // TCK signature test fails with annotation
 public class ELParseException extends ELException {
 
- //-------------------------------------
+ private static final long serialVersionUID = 1L;
+
+//-------------------------------------
   /**
    * Creates an ELParseException with no detail message.
    */

==================================================
FileMessage.java
index 709ecbd5fb..7efb63d84a 100644
--- a/java/javax/servlet/jsp/tagext/TagSupport.java
+++ b/java/javax/servlet/jsp/tagext/TagSupport.java
@@ -38,6 +38,8 @@ import javax.servlet.jsp.PageContext;
  */
 public class TagSupport implements IterationTag, Serializable {
 
+    private static final long serialVersionUID = 1L;
+
     /**
      * Find the instance of a given class type that is closest to a given
      * instance.

==================================================
UndeployMessage.java
index 65bc5ee9ca..03e3b42668 100644
--- a/java/org/apache/catalina/ha/deploy/FileMessage.java
+++ b/java/org/apache/catalina/ha/deploy/FileMessage.java
@@ -28,6 +28,8 @@ import org.apache.catalina.tribes.Member;
  */
 
 public class FileMessage extends ClusterMessageBase {
+    private static final long serialVersionUID = 1L;
+
     private int messageNumber;
     private byte[] data;
     private int dataLength;

==================================================
StatusManagerServlet.java
index c5848c75bc..768f185d80 100644
--- a/java/org/apache/catalina/ha/deploy/UndeployMessage.java
+++ b/java/org/apache/catalina/ha/deploy/UndeployMessage.java
@@ -22,6 +22,8 @@ import java.io.Serializable;
 import org.apache.catalina.ha.ClusterMessage;
 import org.apache.catalina.tribes.Member;
 public class UndeployMessage implements ClusterMessage,Serializable {
+    private static final long serialVersionUID = 1L;
+
     private Member address;
     private long timestamp;
     private String uniqueId;

==================================================
StandardSession.java
index 29e64e43c1..22a54fe1c0 100644
--- a/java/org/apache/catalina/manager/StatusManagerServlet.java
+++ b/java/org/apache/catalina/manager/StatusManagerServlet.java
@@ -51,10 +51,9 @@ import org.apache.tomcat.util.res.StringManager;
 public class StatusManagerServlet
     extends HttpServlet implements NotificationListener {
 
+    private static final long serialVersionUID = 1L;
 
     // ----------------------------------------------------- Instance Variables
-
-
     /**
      * MBean server.
      */

==================================================
SSIServlet.java
index 9f96c61b80..2c3227fa32 100644
--- a/java/org/apache/catalina/session/StandardSession.java
+++ b/java/org/apache/catalina/session/StandardSession.java
@@ -81,8 +81,9 @@ import org.apache.tomcat.util.res.StringManager;
  * @version $Id$
  */
 
-public class StandardSession
-    implements HttpSession, Session, Serializable {
+public class StandardSession implements HttpSession, Session, Serializable {
+
+    private static final long serialVersionUID = 1L;
 
     protected static final boolean STRICT_SERVLET_COMPLIANCE;
 

==================================================
SSIStopProcessingException.java
index 0b275d3926..d781750eb6 100644
--- a/java/org/apache/catalina/ssi/SSIServlet.java
+++ b/java/org/apache/catalina/ssi/SSIServlet.java
@@ -45,6 +45,8 @@ import org.apache.catalina.Globals;
  * @version $Id$
  */
 public class SSIServlet extends HttpServlet {
+    private static final long serialVersionUID = 1L;
+
     /** Debug level for this servlet. */
     protected int debug = 0;
     /** Should the output be buffered. */

==================================================
ChannelException.java
index 51caabcc9d..02cd86d34a 100644
--- a/java/org/apache/catalina/ssi/SSIStopProcessingException.java
+++ b/java/org/apache/catalina/ssi/SSIStopProcessingException.java
@@ -27,5 +27,7 @@ package org.apache.catalina.ssi;
  * @version $Id$
  */
 public class SSIStopProcessingException extends Exception {
+
+    private static final long serialVersionUID = 1L;
     // No specific functionality for this class
 }
\ No newline at end of file

==================================================
RemoteProcessException.java
index a67dfc8d12..886c462cd8 100644
--- a/java/org/apache/catalina/tribes/ChannelException.java
+++ b/java/org/apache/catalina/tribes/ChannelException.java
@@ -31,6 +31,7 @@ import java.util.ArrayList;
  */
 
 public class ChannelException extends Exception {
+    private static final long serialVersionUID = 1L;
     /**
      * Empty list to avoid reinstatiating lists
      */

==================================================
UniqueId.java
index 10b0b80dc0..51885a1ddd 100644
--- a/java/org/apache/catalina/tribes/RemoteProcessException.java
+++ b/java/org/apache/catalina/tribes/RemoteProcessException.java
@@ -28,6 +28,8 @@ package org.apache.catalina.tribes;
  * @version 1.0
  */
 public class RemoteProcessException extends RuntimeException {
+    private static final long serialVersionUID = 1L;
+
     public RemoteProcessException() {
         super();
     }

==================================================
ChannelData.java
index 62e67fb73e..2bec537721 100644
--- a/java/org/apache/catalina/tribes/UniqueId.java
+++ b/java/org/apache/catalina/tribes/UniqueId.java
@@ -29,6 +29,8 @@ import org.apache.catalina.tribes.util.Arrays;
  * @version 1.0
  */
 public final class UniqueId implements Serializable{
+    private static final long serialVersionUID = 1L;
+
     protected byte[] id;
     
     public UniqueId() {

==================================================
AbstractReplicatedMap.java
index 9984eb7b3c..8ec8515a8c 100644
--- a/java/org/apache/catalina/tribes/io/ChannelData.java
+++ b/java/org/apache/catalina/tribes/io/ChannelData.java
@@ -36,6 +36,8 @@ import org.apache.catalina.tribes.util.UUIDGenerator;
  * 
  */
 public class ChannelData implements ChannelMessage {
+    private static final long serialVersionUID = 1L;
+
     public static final ChannelData[] EMPTY_DATA_ARRAY = new ChannelData[0];
     
     public static volatile boolean USE_SECURE_RANDOM_FOR_UUID = false;

==================================================
LazyReplicatedMap.java
index 2c9afd6d51..e36920f940 100644
--- a/java/org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java
+++ b/java/org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java
@@ -54,6 +54,8 @@ import org.apache.juli.logging.LogFactory;
  * @version 1.0
  */
 public abstract class AbstractReplicatedMap extends ConcurrentHashMap implements RpcCallback, ChannelListener, MembershipListener, Heartbeat {
+    private static final long serialVersionUID = 1L;
+
     private static final Log log = LogFactory.getLog(AbstractReplicatedMap.class);
 
     /**
@@ -1259,6 +1261,7 @@ public abstract class AbstractReplicatedMap extends ConcurrentHashMap implements
 //------------------------------------------------------------------------------
 
     public static class MapMessage implements Serializable {
+        private static final long serialVersionUID = 1L;
         public static final int MSG_BACKUP = 1;
         public static final int MSG_RETRIEVE_BACKUP = 2;
         public static final int MSG_PROXY = 3;

==================================================
ReplicatedMap.java
index 7d0a06294b..a5c8294b72 100644
--- a/java/org/apache/catalina/tribes/tipis/LazyReplicatedMap.java
+++ b/java/org/apache/catalina/tribes/tipis/LazyReplicatedMap.java
@@ -64,6 +64,7 @@ import org.apache.juli.logging.LogFactory;
  * @version 1.0
  */
 public class LazyReplicatedMap extends AbstractReplicatedMap {
+    private static final long serialVersionUID = 1L;
     private static final Log log = LogFactory.getLog(LazyReplicatedMap.class);
 
 

==================================================
ExecutorFactory.java
index 0215c41da9..7076c57130 100644
--- a/java/org/apache/catalina/tribes/tipis/ReplicatedMap.java
+++ b/java/org/apache/catalina/tribes/tipis/ReplicatedMap.java
@@ -48,9 +48,11 @@ import org.apache.catalina.tribes.Member;
  */
 public class ReplicatedMap extends AbstractReplicatedMap {
 
-//------------------------------------------------------------------------------
-//              CONSTRUCTORS / DESTRUCTORS
-//------------------------------------------------------------------------------
+    private static final long serialVersionUID = 1L;
+
+    //--------------------------------------------------------------------------
+    //              CONSTRUCTORS / DESTRUCTORS
+    //--------------------------------------------------------------------------
     /**
      * Creates a new map
      * @param channel The channel to use for communication

==================================================
ParameterMap.java
index de8d2e2339..ca33d02cac 100644
--- a/java/org/apache/catalina/tribes/util/ExecutorFactory.java
+++ b/java/org/apache/catalina/tribes/util/ExecutorFactory.java
@@ -43,6 +43,8 @@ public class ExecutorFactory {
     
      // ---------------------------------------------- TaskQueue Inner Class
     private static class TaskQueue extends LinkedBlockingQueue<Runnable> {
+        private static final long serialVersionUID = 1L;
+
         ThreadPoolExecutor parent = null;
 
         public TaskQueue() {

==================================================
ResourceSet.java
index e1b9b77d5f..66b2c26fc7 100644
--- a/java/org/apache/catalina/util/ParameterMap.java
+++ b/java/org/apache/catalina/util/ParameterMap.java
@@ -38,10 +38,10 @@ import org.apache.tomcat.util.res.StringManager;
 
 public final class ParameterMap<K,V> extends HashMap<K,V> {
 
-
-    // ----------------------------------------------------------- Constructors
+    private static final long serialVersionUID = 1L;
 
 
+    // ----------------------------------------------------------- Constructors
     /**
      * Construct a new, empty map with the default initial capacity and
      * load factor.

==================================================
JasperException.java
index 465528dfe0..9c3cdcd8a2 100644
--- a/java/org/apache/catalina/util/ResourceSet.java
+++ b/java/org/apache/catalina/util/ResourceSet.java
@@ -38,10 +38,9 @@ import org.apache.tomcat.util.res.StringManager;
 
 public final class ResourceSet<T> extends HashSet<T> {
 
+    private static final long serialVersionUID = 1L;
 
     // ----------------------------------------------------------- Constructors
-
-
     /**
      * Construct a new, empty set with the default initial capacity and
      * load factor.

==================================================
JspDocumentParser.java
index 3dd19aa705..582c6667e7 100644
--- a/java/org/apache/jasper/JasperException.java
+++ b/java/org/apache/jasper/JasperException.java
@@ -25,6 +25,8 @@ package org.apache.jasper;
  */
 public class JasperException extends javax.servlet.ServletException {
     
+    private static final long serialVersionUID = 1L;
+
     public JasperException(String reason) {
         super(reason);
     }

==================================================
HttpJspBase.java
index 9faa07e504..0e3cc24000 100644
--- a/java/org/apache/jasper/compiler/JspDocumentParser.java
+++ b/java/org/apache/jasper/compiler/JspDocumentParser.java
@@ -1445,7 +1445,9 @@ class JspDocumentParser
      * validation is turned off.
      */
     private static class EnableDTDValidationException
-        extends SAXParseException {
+            extends SAXParseException {
+
+        private static final long serialVersionUID = 1L;
 
         EnableDTDValidationException(String message, Locator loc) {
             super(message, loc);

==================================================
LogConfigurationException.java
index e6221c0c20..73969706ff 100644
--- a/java/org/apache/jasper/runtime/HttpJspBase.java
+++ b/java/org/apache/jasper/runtime/HttpJspBase.java
@@ -35,6 +35,8 @@ import org.apache.jasper.compiler.Localizer;
  */
 public abstract class HttpJspBase extends HttpServlet implements HttpJspPage {
     
+    private static final long serialVersionUID = 1L;
+
     protected HttpJspBase() {
     }
 

==================================================
EjbRef.java
index 31d0e90bb9..6a73116c69 100644
--- a/java/org/apache/juli/logging/LogConfigurationException.java
+++ b/java/org/apache/juli/logging/LogConfigurationException.java
@@ -30,6 +30,9 @@ package org.apache.juli.logging;
 public class LogConfigurationException extends RuntimeException {
 
 
+    private static final long serialVersionUID = 1L;
+
+
     /**
      * Construct a new exception with <code>null</code> as its detail message.
      */

==================================================
HandlerRef.java
index 8d3ee0cbaa..4062abd75f 100644
--- a/java/org/apache/naming/EjbRef.java
+++ b/java/org/apache/naming/EjbRef.java
@@ -29,13 +29,12 @@ import javax.naming.StringRefAddr;
  * @version $Id$
  */
 
-public class EjbRef
-    extends Reference {
+public class EjbRef extends Reference {
 
+    private static final long serialVersionUID = 1L;
 
+    
     // -------------------------------------------------------------- Constants
-
-
     /**
      * Default factory for this reference.
      */

==================================================
JndiPermission.java
index 07e0be7c41..9425b036cc 100644
--- a/java/org/apache/naming/HandlerRef.java
+++ b/java/org/apache/naming/HandlerRef.java
@@ -31,13 +31,12 @@ import javax.naming.StringRefAddr;
  * @author Fabien Carrion
  */
 
-public class HandlerRef
-    extends Reference {
+public class HandlerRef extends Reference {
 
+    private static final long serialVersionUID = 1L;
 
+    
     // -------------------------------------------------------------- Constants
-
-
     /**
      * Default factory for this reference.
      */

==================================================
ResourceEnvRef.java
index bb99271721..80d2e7d558 100644
--- a/java/org/apache/naming/JndiPermission.java
+++ b/java/org/apache/naming/JndiPermission.java
@@ -38,6 +38,8 @@ import java.security.BasicPermission;
 
 public final class JndiPermission extends BasicPermission {
 
+    private static final long serialVersionUID = 1L;
+
     // ----------------------------------------------------------- Constructors
 
     /**

==================================================
ResourceLinkRef.java
index c7d1722df4..dc9dd740fc 100644
--- a/java/org/apache/naming/ResourceEnvRef.java
+++ b/java/org/apache/naming/ResourceEnvRef.java
@@ -28,13 +28,12 @@ import javax.naming.Reference;
  * @version $Id$
  */
 
-public class ResourceEnvRef
-    extends Reference {
+public class ResourceEnvRef extends Reference {
 
+    private static final long serialVersionUID = 1L;
 
     // -------------------------------------------------------------- Constants
 
-
     /**
      * Default factory for this reference.
      */

==================================================
ServiceRef.java
index 08fd390965..4c24c06726 100644
--- a/java/org/apache/naming/ResourceLinkRef.java
+++ b/java/org/apache/naming/ResourceLinkRef.java
@@ -29,13 +29,12 @@ import javax.naming.StringRefAddr;
  * @version $Id$
  */
 
-public class ResourceLinkRef
-    extends Reference {
+public class ResourceLinkRef extends Reference {
 
+    private static final long serialVersionUID = 1L;
 
     // -------------------------------------------------------------- Constants
 
-
     /**
      * Default factory for this reference.
      */

==================================================
TransactionRef.java
index aa061652b4..548c080eec 100644
--- a/java/org/apache/naming/ServiceRef.java
+++ b/java/org/apache/naming/ServiceRef.java
@@ -32,13 +32,12 @@ import javax.naming.StringRefAddr;
  * @author Fabien Carrion
  */
 
-public class ServiceRef
-    extends Reference {
+public class ServiceRef extends Reference {
 
+    private static final long serialVersionUID = 1L;
 
     // -------------------------------------------------------------- Constants
 
-
     /**
      * Default factory for this reference.
      */

==================================================
CharChunk.java
index b7b06889f8..6c9f6d49b2 100644
--- a/java/org/apache/naming/TransactionRef.java
+++ b/java/org/apache/naming/TransactionRef.java
@@ -28,13 +28,12 @@ import javax.naming.Reference;
  * @version $Id$
  */
 
-public class TransactionRef
-    extends Reference {
+public class TransactionRef extends Reference {
 
+    private static final long serialVersionUID = 1L;
 
     // -------------------------------------------------------------- Constants
 
-
     /**
      * Default factory for this reference.
      */

==================================================
MessageBytes.java
index 1974c6fc8a..5b5f6352c8 100644
--- a/java/org/apache/tomcat/util/buf/CharChunk.java
+++ b/java/org/apache/tomcat/util/buf/CharChunk.java
@@ -33,6 +33,8 @@ import java.io.Serializable;
  */
 public final class CharChunk implements Cloneable, Serializable, CharSequence {
 
+    private static final long serialVersionUID = 1L;
+
     // Input interface, used when the buffer is emptied.
     public static interface CharInputChannel {
         /** 

==================================================
BaseAttributeFilter.java
index ae9d801c12..e8cd3b3672 100644
--- a/java/org/apache/tomcat/util/buf/MessageBytes.java
+++ b/java/org/apache/tomcat/util/buf/MessageBytes.java
@@ -34,6 +34,8 @@ import java.util.Locale;
  * @author Costin Manolache
  */
 public final class MessageBytes implements Cloneable, Serializable {
+    private static final long serialVersionUID = 1L;
+
     // primary type ( whatever is set as original value )
     private int type = T_NULL;
 

==================================================
FixedNotificationFilter.java
index 567e48453c..6ef7b5b2e8 100644
--- a/java/org/apache/tomcat/util/modeler/BaseAttributeFilter.java
+++ b/java/org/apache/tomcat/util/modeler/BaseAttributeFilter.java
@@ -38,10 +38,10 @@ import javax.management.NotificationFilter;
 
 public class BaseAttributeFilter implements NotificationFilter {
 
+    private static final long serialVersionUID = 1L;
 
     // ----------------------------------------------------------- Constructors
 
-
     /**
      * Construct a new filter that accepts only the specified attribute
      * name.

==================================================
ManagedBean.java
index aecb64003f..882c85b71a 100644
--- a/java/org/apache/tomcat/util/modeler/FixedNotificationFilter.java
+++ b/java/org/apache/tomcat/util/modeler/FixedNotificationFilter.java
@@ -40,6 +40,7 @@ import javax.management.NotificationFilter;
  */
 public class FixedNotificationFilter implements NotificationFilter {
 
+    private static final long serialVersionUID = 1L;
     /**
      * The set of attribute names that are accepted by this filter.  If this
      * list is empty, all attribute names are accepted.

==================================================
URL.java
index a5f391c028..9a1a37d3cd 100644
--- a/java/org/apache/tomcat/util/modeler/ManagedBean.java
+++ b/java/org/apache/tomcat/util/modeler/ManagedBean.java
@@ -45,8 +45,10 @@ import javax.management.ServiceNotFoundException;
  * @version $Id$
  */
 
-public class ManagedBean implements java.io.Serializable
-{
+public class ManagedBean implements java.io.Serializable {
+
+    private static final long serialVersionUID = 1L;
+    
     private static final String BASE_MBEAN = "org.apache.tomcat.util.modeler.BaseModelMBean";
     // ----------------------------------------------------- Instance Variables
     static final Object[] NO_ARGS_PARAM = new Object[0];

==================================================
MapDemo.java
index 1ed45ebe3a..714189b61f 100644
--- a/java/org/apache/tomcat/util/net/URL.java
+++ b/java/org/apache/tomcat/util/net/URL.java
@@ -47,10 +47,11 @@ import java.util.Locale;
 
 public final class URL implements Serializable {
 
+    private static final long serialVersionUID = 1L;
 
+    
     // ----------------------------------------------------------- Constructors
 
-
     /**
      * Create a URL object from the specified String representation.
      *

==================================================
Clock2.java
index 10838c0316..066e311f7a 100644
--- a/test/org/apache/catalina/tribes/demos/MapDemo.java
+++ b/test/org/apache/catalina/tribes/demos/MapDemo.java
@@ -204,8 +204,11 @@ public class MapDemo implements ChannelListener, MembershipListener{
         }
     }
 
-    public static class SimpleTableDemo
-        extends JPanel implements ActionListener{
+    public static class SimpleTableDemo extends JPanel
+            implements ActionListener {
+
+        private static final long serialVersionUID = 1L;
+
         private static int WIDTH = 550;
         
         private LazyReplicatedMap map;
@@ -213,6 +216,7 @@ public class MapDemo implements ChannelListener, MembershipListener{
         AbstractTableModel dataModel = new AbstractTableModel() {
             
             
+            private static final long serialVersionUID = 1L;
             String[] columnNames = {
                                    "Rownum",
                                    "Key",
@@ -518,6 +522,8 @@ public class MapDemo implements ChannelListener, MembershipListener{
     
     static class ColorRenderer extends DefaultTableCellRenderer {
         
+        private static final long serialVersionUID = 1L;
+
         public ColorRenderer() {
             super();
         }

==================================================
