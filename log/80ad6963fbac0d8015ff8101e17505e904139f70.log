80ad6963fbac0d8015ff8101e17505e904139f70
==================================================
Generics for o.a.c.tribes.transport.bio
==================================================
Mark Emlyn
==================================================
Wed Dec 24 15:59:03 2008 +0000
==================================================
MultipointBioSender.java
Generics for o.a.c.tribes.transport.bio
Fix various Eclipse warnings (unused code etc)

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@729323 13f79535-47bb-0310-9956-ffa450edef68



==================================================
PooledMultiSender.java
index 3672a3c865..948062cf5a 100644
--- a/java/org/apache/catalina/tribes/transport/bio/MultipointBioSender.java
+++ b/java/org/apache/catalina/tribes/transport/bio/MultipointBioSender.java
@@ -41,7 +41,8 @@ public class MultipointBioSender extends AbstractSender implements MultiPointSen
     }
     
     protected long selectTimeout = 1000; 
-    protected HashMap bioSenders = new HashMap();
+    protected HashMap<Member, BioSender> bioSenders =
+        new HashMap<Member, BioSender>();
 
     public synchronized void sendMessage(Member[] destination, ChannelMessage msg) throws ChannelException {
         byte[] data = XByteBuffer.createDataPackage((ChannelData)msg);
@@ -65,10 +66,10 @@ public class MultipointBioSender extends AbstractSender implements MultiPointSen
         BioSender[] result = new BioSender[destination.length];
         for ( int i=0; i<destination.length; i++ ) {
             try {
-                BioSender sender = (BioSender) bioSenders.get(destination[i]);
+                BioSender sender = bioSenders.get(destination[i]);
                 if (sender == null) {
                     sender = new BioSender();
-                    sender.transferProperties(this,sender);
+                    AbstractSender.transferProperties(this,sender);
                     sender.setDestination(destination[i]);
                     bioSenders.put(destination[i], sender);
                 }
@@ -96,7 +97,7 @@ public class MultipointBioSender extends AbstractSender implements MultiPointSen
         for (int i=0; i<members.length; i++ ) {
             Member mbr = (Member)members[i];
             try {
-                BioSender sender = (BioSender)bioSenders.get(mbr);
+                BioSender sender = bioSenders.get(mbr);
                 sender.disconnect();
             }catch ( Exception e ) {
                 if ( x == null ) x = new ChannelException(e);
@@ -113,7 +114,7 @@ public class MultipointBioSender extends AbstractSender implements MultiPointSen
 
     public void remove(Member member) {
         //disconnect senders
-        BioSender sender = (BioSender)bioSenders.remove(member);
+        BioSender sender = bioSenders.remove(member);
         if ( sender != null ) sender.disconnect();
     }
 
@@ -131,9 +132,9 @@ public class MultipointBioSender extends AbstractSender implements MultiPointSen
     public boolean keepalive() {
         //throw new UnsupportedOperationException("Method ParallelBioSender.checkKeepAlive() not implemented");
         boolean result = false;
-        Map.Entry[] entries = (Map.Entry[])bioSenders.entrySet().toArray(new Map.Entry[bioSenders.size()]);
+        Map.Entry<Member,BioSender>[] entries = bioSenders.entrySet().toArray(new Map.Entry[bioSenders.size()]);
         for ( int i=0; i<entries.length; i++ ) {
-            BioSender sender = (BioSender)entries[i].getValue();
+            BioSender sender = entries[i].getValue();
             if ( sender.keepalive() ) {
                 bioSenders.remove(entries[i].getKey());
             }

==================================================
FastQueue.java
index e017be22e2..196b4e928e 100644
--- a/java/org/apache/catalina/tribes/transport/bio/PooledMultiSender.java
+++ b/java/org/apache/catalina/tribes/transport/bio/PooledMultiSender.java
@@ -16,6 +16,7 @@
  */
 package org.apache.catalina.tribes.transport.bio;
 
+import org.apache.catalina.tribes.transport.AbstractSender;
 import org.apache.catalina.tribes.transport.DataSender;
 import org.apache.catalina.tribes.transport.PooledSender;
 import org.apache.catalina.tribes.Member;
@@ -65,7 +66,7 @@ public class PooledMultiSender extends PooledSender {
      */
     public DataSender getNewDataSender() {
         MultipointBioSender sender = new MultipointBioSender();
-        sender.transferProperties(this,sender);
+        AbstractSender.transferProperties(this,sender);
         return sender;
     }
 

==================================================
SingleRemoveSynchronizedAddLock.java
index 452f789513..3669f00b7c 100644
--- a/java/org/apache/catalina/tribes/transport/bio/util/FastQueue.java
+++ b/java/org/apache/catalina/tribes/transport/bio/util/FastQueue.java
@@ -61,11 +61,7 @@ public class FastQueue {
      */
     private boolean checkLock = false;
 
-    /**
-     * protocol the thread wait times
-     */
-    private boolean timeWait = false;
-
+    
     private boolean inAdd = false;
 
     private boolean inRemove = false;
@@ -98,11 +94,6 @@ public class FastQueue {
      */
     private int maxSize = 0;
 
-    /**
-     *  avg size sample interval
-     */
-    private int sampleInterval = 100;
-
     /**
      * Generate Queue SingleRemoveSynchronizedAddLock and set add and wait
      * Timeouts
@@ -251,7 +242,6 @@ public class FastQueue {
      */
     public boolean add(ChannelMessage msg, Member[] destination, InterceptorPayload payload) {
         boolean ok = true;
-        long time = 0;
 
         if (!enabled) {
             if (log.isInfoEnabled())
@@ -259,9 +249,6 @@ public class FastQueue {
             return false;
         }
 
-        if (timeWait) {
-            time = System.currentTimeMillis();
-        }
         lock.lockAdd();
         try {
             if (log.isTraceEnabled()) {
@@ -327,7 +314,6 @@ public class FastQueue {
     public LinkObject remove() {
         LinkObject element;
         boolean gotLock;
-        long time = 0;
 
         if (!enabled) {
             if (log.isInfoEnabled())
@@ -335,9 +321,6 @@ public class FastQueue {
             return null;
         }
 
-        if (timeWait) {
-            time = System.currentTimeMillis();
-        }
         gotLock = lock.lockRemove();
         try {
 
@@ -381,9 +364,6 @@ public class FastQueue {
                 log.trace("FastQueue.remove: remove ending with size " + size);
             }
 
-            if (timeWait) {
-                time = System.currentTimeMillis();
-            }
         } finally {
             lock.unlockRemove();
         }

==================================================
