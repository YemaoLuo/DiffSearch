44e3d8aeb6e9fdcf7c4ea069f60ba66d2a7bd663
==================================================
Refactor to replace Stack with ArrayDeque / ConcurrentLinkedQueue
==================================================
Mark Thomas
==================================================
Thu Sep 15 19:41:45 2022 +0100
==================================================
StandardContext.java
Refactor to replace Stack with ArrayDeque / ConcurrentLinkedQueue


==================================================
WebdavServlet.java
index 6c75f88e9c..3b9c12d4be 100644
--- a/java/org/apache/catalina/core/StandardContext.java
+++ b/java/org/apache/catalina/core/StandardContext.java
@@ -24,6 +24,7 @@ import java.net.URL;
 import java.nio.charset.StandardCharsets;
 import java.security.AccessController;
 import java.security.PrivilegedAction;
+import java.util.ArrayDeque;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collection;
@@ -36,8 +37,8 @@ import java.util.List;
 import java.util.Locale;
 import java.util.Map;
 import java.util.Map.Entry;
+import java.util.Queue;
 import java.util.Set;
-import java.util.Stack;
 import java.util.TreeMap;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.CopyOnWriteArrayList;
@@ -5856,14 +5857,14 @@ public class StandardContext extends ContainerBase
             if (parent == null) {
             namingContextName = getName();
             } else {
-            Stack<String> stk = new Stack<>();
+            Queue<String> stk = new ArrayDeque<>();
             StringBuilder buff = new StringBuilder();
             while (parent != null) {
-                stk.push(parent.getName());
+                stk.add(parent.getName());
                 parent = parent.getParent();
             }
-            while (!stk.empty()) {
-                buff.append("/" + stk.pop());
+            while (!stk.isEmpty()) {
+                buff.append("/" + stk.remove());
             }
             buff.append(getName());
             namingContextName = buff.toString();

==================================================
ParserController.java
index 0a5f401399..7b9e7f84fd 100644
--- a/java/org/apache/catalina/servlets/WebdavServlet.java
+++ b/java/org/apache/catalina/servlets/WebdavServlet.java
@@ -25,6 +25,7 @@ import java.io.Writer;
 import java.net.URI;
 import java.net.URISyntaxException;
 import java.nio.charset.StandardCharsets;
+import java.util.ArrayDeque;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Date;
@@ -33,7 +34,7 @@ import java.util.Iterator;
 import java.util.List;
 import java.util.Locale;
 import java.util.Map;
-import java.util.Stack;
+import java.util.Queue;
 import java.util.TimeZone;
 import java.util.concurrent.ConcurrentHashMap;
 
@@ -617,15 +618,15 @@ public class WebdavServlet extends DefaultServlet {
             parseProperties(req, generatedXML, path, type, properties);
         } else {
             // The stack always contains the object of the current level
-            Stack<String> stack = new Stack<>();
-            stack.push(path);
+            Queue<String> stack = new ArrayDeque<>();
+            stack.add(path);
 
             // Stack of the objects one level below
-            Stack<String> stackBelow = new Stack<>();
+            Queue<String> stackBelow = new ArrayDeque<>();
 
             while ((!stack.isEmpty()) && (depth >= 0)) {
 
-                String currentPath = stack.pop();
+                String currentPath = stack.remove();
                 parseProperties(req, generatedXML, currentPath, type, properties);
 
                 resource = resources.getResource(currentPath);
@@ -639,7 +640,7 @@ public class WebdavServlet extends DefaultServlet {
                             newPath += "/";
                         }
                         newPath += entry;
-                        stackBelow.push(newPath);
+                        stackBelow.add(newPath);
                     }
 
                     // Displaying the lock-null resources present in that
@@ -659,7 +660,7 @@ public class WebdavServlet extends DefaultServlet {
                 if (stack.isEmpty()) {
                     depth--;
                     stack = stackBelow;
-                    stackBelow = new Stack<>();
+                    stackBelow = new ArrayDeque<>();
                 }
 
                 generatedXML.sendData();

==================================================
SystemLogHandler.java
index 376df38707..362e5ae2f4 100644
--- a/java/org/apache/jasper/compiler/ParserController.java
+++ b/java/org/apache/jasper/compiler/ParserController.java
@@ -20,7 +20,8 @@ import java.io.BufferedInputStream;
 import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.io.InputStreamReader;
-import java.util.Stack;
+import java.util.ArrayDeque;
+import java.util.Queue;
 
 import org.apache.jasper.JasperException;
 import org.apache.jasper.JspCompilationContext;
@@ -55,7 +56,7 @@ class ParserController implements TagConstants {
      * A stack to keep track of the 'current base directory'
      * for include directives that refer to relative paths.
      */
-    private final Stack<String> baseDirStack = new Stack<>();
+    private final Queue<String> baseDirStack = new ArrayDeque<>();
 
     private boolean isEncodingSpecifiedInProlog;
     private boolean isBomPresent;
@@ -247,7 +248,7 @@ class ParserController implements TagConstants {
             }
         }
 
-        baseDirStack.pop();
+        baseDirStack.remove();
 
         return parsedPage;
     }
@@ -518,11 +519,9 @@ class ParserController implements TagConstants {
     private String resolveFileName(String inFileName) {
         String fileName = inFileName.replace('\\', '/');
         boolean isAbsolute = fileName.startsWith("/");
-        fileName = isAbsolute ? fileName
-                : baseDirStack.peek() + fileName;
-        String baseDir =
-            fileName.substring(0, fileName.lastIndexOf('/') + 1);
-        baseDirStack.push(baseDir);
+        fileName = isAbsolute ? fileName : baseDirStack.peek() + fileName;
+        String baseDir = fileName.substring(0, fileName.lastIndexOf('/') + 1);
+        baseDirStack.add(baseDir);
         return fileName;
     }
 

==================================================
