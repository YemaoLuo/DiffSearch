3c331b093dfd699be91ecd49a490b28038cf0e4d
==================================================
Refactor creation of SSLContext to include configuration
==================================================
Mark Thomas
==================================================
Thu Feb 21 09:29:29 2019 +0000
==================================================
AbstractJsseEndpoint.java
Refactor creation of SSLContext to include configuration

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1854025 13f79535-47bb-0310-9956-ffa450edef68



==================================================
SSLUtilBase.java
index d4cd9132cc..f3fc86a010 100644
--- a/java/org/apache/tomcat/util/net/AbstractJsseEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AbstractJsseEndpoint.java
@@ -109,7 +109,6 @@ public abstract class AbstractJsseEndpoint<S,U> extends AbstractEndpoint<S,U> {
             SSLContext sslContext;
             try {
                 sslContext = sslUtil.createSSLContext(negotiableProtocols);
-                sslContext.init(sslUtil.getKeyManagers(), sslUtil.getTrustManagers(), null);
             } catch (Exception e) {
                 throw new IllegalArgumentException(e.getMessage(), e);
             }

==================================================
JSSEUtil.java
index c8b696551f..5e4045a815 100644
--- a/java/org/apache/tomcat/util/net/SSLUtilBase.java
+++ b/java/org/apache/tomcat/util/net/SSLUtilBase.java
@@ -202,6 +202,14 @@ public abstract class SSLUtilBase implements SSLUtil {
     }
 
 
+    @Override
+    public final SSLContext createSSLContext(List<String> negotiableProtocols) throws Exception {
+        SSLContext sslContext = createSSLContextInternal(negotiableProtocols);
+        sslContext.init(getKeyManagers(), getTrustManagers(), null);
+        return sslContext;
+    }
+
+
     @Override
     public String[] getEnabledProtocols() {
         return enabledProtocols;
@@ -217,4 +225,5 @@ public abstract class SSLUtilBase implements SSLUtil {
     protected abstract Log getLog();
     protected abstract boolean isTls13Available();
     protected abstract boolean isTls13RenegAuthAvailable();
+    protected abstract SSLContext createSSLContextInternal(List<String> negotiableProtocols) throws Exception;
 }

==================================================
OpenSSLUtil.java
index e39e6e4df4..84e1bb8462 100644
--- a/java/org/apache/tomcat/util/net/jsse/JSSEUtil.java
+++ b/java/org/apache/tomcat/util/net/jsse/JSSEUtil.java
@@ -184,7 +184,8 @@ public class JSSEUtil extends SSLUtilBase {
 
 
     @Override
-    public SSLContext createSSLContext(List<String> negotiableProtocols) throws NoSuchAlgorithmException {
+    public SSLContext createSSLContextInternal(List<String> negotiableProtocols)
+            throws NoSuchAlgorithmException {
         return new JSSESSLContext(sslHostConfig.getSslProtocol());
     }
 

==================================================
