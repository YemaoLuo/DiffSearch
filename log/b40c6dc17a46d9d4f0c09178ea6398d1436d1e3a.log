b40c6dc17a46d9d4f0c09178ea6398d1436d1e3a
==================================================
Remove endpoint from AprServletOutputStream
==================================================
Mark Emlyn
==================================================
Mon Nov 10 16:46:32 2014 +0000
==================================================
Http11AprProtocol.java
Remove endpoint from AprServletOutputStream

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1637928 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AprProcessor.java
index 829f2e9933..add0040083 100644
--- a/java/org/apache/coyote/http11/Http11AprProtocol.java
+++ b/java/org/apache/coyote/http11/Http11AprProtocol.java
@@ -325,8 +325,7 @@ public class Http11AprProtocol extends AbstractHttp11Protocol<Long> {
                 SocketWrapperBase<Long> socket, ByteBuffer leftoverInput,
                 HttpUpgradeHandler httpUpgradeProcessor)
                 throws IOException {
-            return new AprProcessor(socket, leftoverInput,
-                    httpUpgradeProcessor, (AprEndpoint) proto.endpoint,
+            return new AprProcessor(socket, leftoverInput, httpUpgradeProcessor,
                     proto.getUpgradeAsyncWriteBufferSize());
         }
     }

==================================================
AprServletOutputStream.java
index 835d3f44a6..9a78b8cafa 100644
--- a/java/org/apache/coyote/http11/upgrade/AprProcessor.java
+++ b/java/org/apache/coyote/http11/upgrade/AprProcessor.java
@@ -23,7 +23,6 @@ import javax.servlet.http.HttpUpgradeHandler;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.jni.Socket;
-import org.apache.tomcat.util.net.AprEndpoint;
 import org.apache.tomcat.util.net.AprEndpoint.AprSocketWrapper;
 import org.apache.tomcat.util.net.SocketWrapperBase;
 
@@ -36,11 +35,10 @@ public class AprProcessor extends AbstractProcessor<Long> {
     private static final int INFINITE_TIMEOUT = -1;
 
     public AprProcessor(SocketWrapperBase<Long> wrapper, ByteBuffer leftOverInput,
-            HttpUpgradeHandler httpUpgradeProcessor, AprEndpoint endpoint,
-            int asyncWriteBufferSize) {
+            HttpUpgradeHandler httpUpgradeProcessor, int asyncWriteBufferSize) {
         super(httpUpgradeProcessor,
                 new AprServletInputStream(wrapper),
-                new AprServletOutputStream(wrapper, asyncWriteBufferSize, endpoint));
+                new AprServletOutputStream(wrapper, asyncWriteBufferSize));
         ((AprSocketWrapper) wrapper).setLeftOverInput(leftOverInput);
         Socket.timeoutSet(wrapper.getSocket().longValue(), INFINITE_TIMEOUT);
     }

==================================================
