2cc3788778110a71ef7dc5faa57f7b385856aff0
==================================================
Review javax.* and o.a.catalina.[ant-connectors] for unused code using UCDetector and mark unused code as deprecated.
==================================================
Mark Emlyn
==================================================
Mon Oct 24 21:46:24 2011 +0000
==================================================
Constants.java
Review javax.* and o.a.catalina.[ant-connectors] for unused code using UCDetector and mark unused code as deprecated.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1188399 13f79535-47bb-0310-9956-ffa450edef68



==================================================
SingleSignOn.java
index 4eba898c69..3285b758e6 100644
--- a/java/org/apache/catalina/authenticator/Constants.java
+++ b/java/org/apache/catalina/authenticator/Constants.java
@@ -25,9 +25,13 @@ public class Constants {
 
     // Authentication methods for login configuration
     // Servlet spec schemes
+    @Deprecated
     public static final String BASIC_METHOD = "BASIC";
+    @Deprecated
     public static final String CERT_METHOD = "CLIENT_CERT";
+    @Deprecated
     public static final String DIGEST_METHOD = "DIGEST";
+    @Deprecated
     public static final String FORM_METHOD = "FORM";
     // Vendor specific schemes
     public static final String SPNEGO_METHOD = "SPNEGO";

==================================================
InputBuffer.java
index 7779876960..30e2005afe 100644
--- a/java/org/apache/catalina/authenticator/SingleSignOn.java
+++ b/java/org/apache/catalina/authenticator/SingleSignOn.java
@@ -93,6 +93,7 @@ public class SingleSignOn extends ValveBase implements SessionListener {
     /**
      * The string manager for this package.
      */
+    @Deprecated
     protected static final StringManager sm =
         StringManager.getManager(Constants.Package);
 

==================================================
MapperListener.java
index 0a4631015c..0829742ab3 100644
--- a/java/org/apache/catalina/connector/InputBuffer.java
+++ b/java/org/apache/catalina/connector/InputBuffer.java
@@ -185,6 +185,7 @@ public class InputBuffer extends Reader
      *
      * @return the associated Coyote request
      */
+    @Deprecated
     public Request getRequest() {
         return this.coyoteRequest;
     }

==================================================
OutputBuffer.java
index 758e99e8d5..de9980242c 100644
--- a/java/org/apache/catalina/connector/MapperListener.java
+++ b/java/org/apache/catalina/connector/MapperListener.java
@@ -85,6 +85,7 @@ public class MapperListener extends LifecycleMBeanBase
 
     // --------------------------------------------------------- Public Methods
 
+    @Deprecated
     public String getConnectorName() {
         return this.connector.toString();
     }

==================================================
Request.java
index 72cffc7fcc..687868fa67 100644
--- a/java/org/apache/catalina/connector/OutputBuffer.java
+++ b/java/org/apache/catalina/connector/OutputBuffer.java
@@ -178,6 +178,7 @@ public class OutputBuffer extends Writer
      *
      * @return the associated Coyote response
      */
+    @Deprecated
     public Response getResponse() {
         return this.coyoteResponse;
     }

==================================================
Response.java
index 4e381682e8..0f6f585cb9 100644
--- a/java/org/apache/catalina/connector/Request.java
+++ b/java/org/apache/catalina/connector/Request.java
@@ -280,6 +280,7 @@ public class Request
     /**
      * Session parsed flag.
      */
+    @Deprecated
     protected boolean sessionParsed = false;
 
 
@@ -531,9 +532,11 @@ public class Request
         pathParameters.clear();
     }
 
+    @Deprecated
     protected boolean isProcessing() {
         return coyoteRequest.isProcessing();
     }
+
     /**
      * Clear cached encoders (to save memory for Comet requests).
      */
@@ -639,6 +642,7 @@ public class Request
      *
      * @param host The newly associated Host
      */
+    @Deprecated
     public void setHost(Host host) {
         mappingData.host = host;
     }
@@ -801,6 +805,7 @@ public class Request
      * Return an Iterator containing the String names of all notes bindings
      * that exist for this request.
      */
+    @Deprecated
     public Iterator<String> getNoteNames() {
         return notes.keySet().iterator();
     }
@@ -875,6 +880,7 @@ public class Request
      *
      * @param name The server name
      */
+    @Deprecated
     public void setServerName(String name) {
         coyoteRequest.serverName().setString(name);
     }
@@ -1756,6 +1762,7 @@ public class Request
      * @param name Name of this request parameter
      * @param values Corresponding values for this request parameter
      */
+    @Deprecated
     public void addParameter(String name, String values[]) {
         coyoteRequest.getParameters().addParameterValues(name, values);
     }
@@ -1773,6 +1780,7 @@ public class Request
     /**
      * Clear the collection of Headers associated with this Request.
      */
+    @Deprecated
     public void clearHeaders() {
         // Not used
     }
@@ -1789,6 +1797,7 @@ public class Request
     /**
      * Clear the collection of parameters associated with this Request.
      */
+    @Deprecated
     public void clearParameters() {
         // Not used
     }
@@ -1813,6 +1822,7 @@ public class Request
      *
      * @param path The context path
      */
+    @Deprecated
     public void setContextPath(String path) {
 
         if (path == null) {
@@ -1906,6 +1916,7 @@ public class Request
      *
      * @return the URL decoded request URI
      */
+    @Deprecated
     public MessageBytes getDecodedRequestURIMB() {
         return coyoteRequest.decodedURI();
     }
@@ -1918,6 +1929,7 @@ public class Request
      *
      * @param path The servlet path
      */
+    @Deprecated
     public void setServletPath(String path) {
         if (path != null) {
             mappingData.wrapperPath.setString(path);
@@ -1980,6 +1992,7 @@ public class Request
      *
      * @return the context path
      */
+    @Deprecated
     public MessageBytes getContextPathMB() {
         return mappingData.contextPath;
     }
@@ -2003,6 +2016,7 @@ public class Request
     /**
      * Set the set of cookies received with this Request.
      */
+    @Deprecated
     public void setCookies(Cookie[] cookies) {
 
         this.cookies = cookies;
@@ -2114,6 +2128,7 @@ public class Request
      *
      * @return the path info
      */
+    @Deprecated
     public MessageBytes getPathInfoMB() {
         return mappingData.pathInfo;
     }
@@ -2246,6 +2261,7 @@ public class Request
      *
      * @return the servlet path
      */
+    @Deprecated
     public MessageBytes getServletPathMB() {
         return mappingData.wrapperPath;
     }
@@ -2542,6 +2558,7 @@ public class Request
      * Not part of Servlet 3 spec but probably should be.
      * @return true if the requested session ID was obtained from the SSL session
      */
+    @Deprecated
     public boolean isRequestedSessionIdFromSSL() {
         return requestedSessionSSL;
     }

==================================================
