4093384107cdf23b2b86aa42b561d66faabf70f4
==================================================
Javadoc fixes.
==================================================
Remy Maucherat
==================================================
Tue Jan 12 15:02:50 2016 +0000
==================================================
CGIServlet.java
Javadoc fixes.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1724255 13f79535-47bb-0310-9956-ffa450edef68



==================================================
DefaultServlet.java
index bb054dffec..d3baf1e577 100644
--- a/java/org/apache/catalina/servlets/CGIServlet.java
+++ b/java/org/apache/catalina/servlets/CGIServlet.java
@@ -173,8 +173,8 @@ import org.apache.catalina.util.IOTools;
  * and stderr (which should not be too hard).
  * <br>
  * If you find your cgi scripts are timing out receiving input, you can set
- * the init parameter <code></code> of your webapps' cgi-handling servlet
- * to be
+ * the init parameter <code>stderrTimeout</code> of your webapps' cgi-handling
+ * servlet.
  * </p>
  * <p>
  *
@@ -211,7 +211,6 @@ import org.apache.catalina.util.IOTools;
  * <a href="http://cgi-spec.golux.com">http://cgi-spec.golux.com</a>.
  *
  * </p>
- * <p>
  * <h3>TODO:</h3>
  * <ul>
  * <li> Support for setting headers (for example, Location headers don't work)
@@ -231,7 +230,6 @@ import org.apache.catalina.util.IOTools;
  *
  * @author Martin T Dengler [root@martindengler.com]
  * @author Amy Roh
- * @since Tomcat 4.0
  */
 public final class CGIServlet extends HttpServlet {
 
@@ -631,7 +629,7 @@ public final class CGIServlet extends HttpServlet {
     }
 
 
-    /*
+    /**
      * Behaviour depends on the status code and the value of debug.
      *
      * Status < 400  - Always calls setStatus. Returns false. CGI servlet will
@@ -657,11 +655,6 @@ public final class CGIServlet extends HttpServlet {
     /**
      * Encapsulates the CGI environment and rules to derive
      * that environment from the servlet container and request information.
-     *
-     * <p>
-     * </p>
-     *
-     * @since    Tomcat 4.0
      */
     protected class CGIEnvironment {
 
@@ -708,7 +701,7 @@ public final class CGIServlet extends HttpServlet {
          *                   the Servlet API
          * @param  context   ServletContext for information provided by the
          *                   Servlet API
-         *
+         * @throws IOException an IO error occurred
          */
         protected CGIEnvironment(HttpServletRequest req,
                                  ServletContext context) throws IOException {
@@ -744,7 +737,7 @@ public final class CGIServlet extends HttpServlet {
          *
          * @param  req   HttpServletRequest for information provided by
          *               the Servlet API
-         * @throws UnsupportedEncodingException
+         * @throws UnsupportedEncodingException Unknown encoding
          */
         protected void setupFromRequest(HttpServletRequest req)
                 throws UnsupportedEncodingException {
@@ -861,8 +854,6 @@ public final class CGIServlet extends HttpServlet {
          * <code>name</code> -    simple name (no directories) of the
          *                        cgi script, or null if no cgi was found
          * </ul>
-         *
-         * @since Tomcat 4.0
          */
         protected String[] findCGI(String pathInfo, String webAppRootDir,
                                    String contextPath, String servletPath,
@@ -939,6 +930,7 @@ public final class CGIServlet extends HttpServlet {
          *
          * @return   true if environment was set OK, false if there
          *           was a problem and no environment was set
+         * @throws IOException an IO error occurred
          */
         protected boolean setCGIEnvironment(HttpServletRequest req) throws IOException {
 

==================================================
WebdavServlet.java
index 039e8b5a73..ebb9fa8e56 100644
--- a/java/org/apache/catalina/servlets/DefaultServlet.java
+++ b/java/org/apache/catalina/servlets/DefaultServlet.java
@@ -329,6 +329,7 @@ public class DefaultServlet extends HttpServlet {
      * Return the relative path associated with this servlet.
      *
      * @param request The servlet request we are processing
+     * @return the relative path
      */
     protected String getRelativePath(HttpServletRequest request) {
         return getRelativePath(request, false);
@@ -544,6 +545,11 @@ public class DefaultServlet extends HttpServlet {
      * Handle a partial PUT.  New content specified in request is appended to
      * existing content in oldRevisionContent (if present). This code does
      * not support simultaneous partial updates to the same resource.
+     * @param req The Servlet request
+     * @param range The range that will be written
+     * @param path The path
+     * @return the associated file object
+     * @throws IOException an IO error occurred
      */
     protected File executePartialPut(HttpServletRequest req, Range range,
                                      String path)
@@ -642,9 +648,10 @@ public class DefaultServlet extends HttpServlet {
      * @param request   The servlet request we are processing
      * @param response  The servlet response we are creating
      * @param resource  The resource
-     * @return boolean true if the resource meets all the specified conditions,
-     * and false if any of the conditions is not satisfied, in which case
-     * request processing is stopped
+     * @return <code>true</code> if the resource meets all the specified
+     *  conditions, and <code>false</code> if any of the conditions is not
+     *  satisfied, in which case request processing is stopped
+     * @throws IOException an IO error occurred
      */
     protected boolean checkIfHeaders(HttpServletRequest request,
                                      HttpServletResponse response,
@@ -663,6 +670,7 @@ public class DefaultServlet extends HttpServlet {
      * URL rewriter.
      *
      * @param path Path which has to be rewritten
+     * @return the rewritten path
      */
     protected String rewriteUrl(String path) {
         return URLEncoder.DEFAULT.encode( path );
@@ -1047,7 +1055,8 @@ public class DefaultServlet extends HttpServlet {
      *
      * @param request The servlet request we a)re processing
      * @param response The servlet response we are creating
-     * @return Range
+     * @return the range object
+     * @throws IOException an IO error occurred
      */
     protected Range parseContentRange(HttpServletRequest request,
                                       HttpServletResponse response)
@@ -1109,7 +1118,8 @@ public class DefaultServlet extends HttpServlet {
      * @param request   The servlet request we are processing
      * @param response  The servlet response we are creating
      * @param resource  The resource
-     * @return Vector of ranges
+     * @return a list of ranges
+     * @throws IOException an IO error occurred
      */
     protected ArrayList<Range> parseRange(HttpServletRequest request,
             HttpServletResponse response,
@@ -1244,7 +1254,12 @@ public class DefaultServlet extends HttpServlet {
 
 
     /**
-     *  Decide which way to render. HTML or XML.
+     * Decide which way to render. HTML or XML.
+     * @param contextPath The path
+     * @param resource The resource
+     * @return the input stream with the rendered output
+     * @throws IOException an IO error occurred
+     * @throws ServletException rendering error
      */
     protected InputStream render(String contextPath, WebResource resource)
         throws IOException, ServletException {
@@ -1269,6 +1284,11 @@ public class DefaultServlet extends HttpServlet {
      *
      * @param contextPath Context path to which our internal paths are
      *  relative
+     * @param resource The associated resource
+     * @param xsltSource The XSL stylesheet
+     * @return the XML data
+     * @throws IOException an IO error occurred
+     * @throws ServletException rendering error
      */
     protected InputStream renderXml(String contextPath, WebResource resource, Source xsltSource)
         throws IOException, ServletException {
@@ -1399,6 +1419,9 @@ public class DefaultServlet extends HttpServlet {
      *
      * @param contextPath Context path to which our internal paths are
      *  relative
+     * @param resource The resource
+     * @return the HTML data
+     * @throws IOException an IO error occurred
      */
     protected InputStream renderHtml(String contextPath, WebResource resource)
         throws IOException {
@@ -1550,6 +1573,7 @@ public class DefaultServlet extends HttpServlet {
      * Render the specified file size (in bytes).
      *
      * @param size File size (in bytes)
+     * @return the formatted size
      */
     protected String renderSize(long size) {
 
@@ -1565,11 +1589,19 @@ public class DefaultServlet extends HttpServlet {
 
     /**
      * Get the readme file as a string.
+     * @param directory The directory to search
+     * @return the readme for the specified directory
      */
     protected String getReadme(WebResource directory) {
         return getReadme(directory, null);
     }
 
+    /**
+     * Get the readme file as a string.
+     * @param directory The directory to search
+     * @param encoding The readme encoding
+     * @return the readme for the specified directory
+     */
     protected String getReadme(WebResource directory, String encoding) {
 
         if (readmeFile != null) {
@@ -1609,7 +1641,10 @@ public class DefaultServlet extends HttpServlet {
 
 
     /**
-     * Return a Source for the xsl template (if possible)
+     * Return a Source for the xsl template (if possible).
+     * @param directory The directory to search
+     * @return the source for the specified directory
+     * @throws IOException an IO error occurred
      */
     protected Source findXsltSource(WebResource directory)
         throws IOException {
@@ -1739,6 +1774,14 @@ public class DefaultServlet extends HttpServlet {
 
     /**
      * Check if sendfile can be used.
+     * @param request The Servlet request
+     * @param response The Servlet response
+     * @param resource The resource
+     * @param length The length which will be written (will be used only if
+     *  range is null)
+     * @param range The range that will be written
+     * @return <code>true</code> if sendfile should be used (writing is then
+     *  delegated to the endpoint)
      */
     protected boolean checkSendfile(HttpServletRequest request,
                                   HttpServletResponse response,
@@ -1771,9 +1814,10 @@ public class DefaultServlet extends HttpServlet {
      * @param request   The servlet request we are processing
      * @param response  The servlet response we are creating
      * @param resource  The resource
-     * @return boolean true if the resource meets the specified condition,
-     * and false if the condition is not satisfied, in which case request
-     * processing is stopped
+     * @return <code>true</code> if the resource meets the specified condition,
+     *  and <code>false</code> if the condition is not satisfied, in which case
+     *  request processing is stopped
+     * @throws IOException an IO error occurred
      */
     protected boolean checkIfMatch(HttpServletRequest request,
             HttpServletResponse response, WebResource resource)
@@ -1814,9 +1858,9 @@ public class DefaultServlet extends HttpServlet {
      * @param request   The servlet request we are processing
      * @param response  The servlet response we are creating
      * @param resource  The resource
-     * @return boolean true if the resource meets the specified condition,
-     * and false if the condition is not satisfied, in which case request
-     * processing is stopped
+     * @return <code>true</code> if the resource meets the specified condition,
+     *  and <code>false</code> if the condition is not satisfied, in which case
+     *  request processing is stopped
      */
     protected boolean checkIfModifiedSince(HttpServletRequest request,
             HttpServletResponse response, WebResource resource) {
@@ -1850,9 +1894,10 @@ public class DefaultServlet extends HttpServlet {
      * @param request   The servlet request we are processing
      * @param response  The servlet response we are creating
      * @param resource  The resource
-     * @return boolean true if the resource meets the specified condition,
-     * and false if the condition is not satisfied, in which case request
-     * processing is stopped
+     * @return <code>true</code> if the resource meets the specified condition,
+     *  and <code>false</code> if the condition is not satisfied, in which case
+     *  request processing is stopped
+     * @throws IOException an IO error occurred
      */
     protected boolean checkIfNoneMatch(HttpServletRequest request,
             HttpServletResponse response, WebResource resource)
@@ -1903,8 +1948,8 @@ public class DefaultServlet extends HttpServlet {
      * Check if the user agent supports gzip encoding.
      *
      * @param request   The servlet request we are processing
-     * @return boolean true if the user agent supports gzip encoding,
-     * and false if the user agent does not support gzip encoding
+     * @return <code>true</code> if the user agent supports gzip encoding,
+     * and <code>false</code> if the user agent does not support gzip encoding.
      */
     protected boolean checkIfGzip(HttpServletRequest request) {
         Enumeration<String> headers = request.getHeaders("Accept-Encoding");
@@ -1924,9 +1969,10 @@ public class DefaultServlet extends HttpServlet {
      * @param request   The servlet request we are processing
      * @param response  The servlet response we are creating
      * @param resource  The resource
-     * @return boolean true if the resource meets the specified condition,
-     * and false if the condition is not satisfied, in which case request
-     * processing is stopped
+     * @return <code>true</code> if the resource meets the specified condition,
+     *  and <code>false</code> if the condition is not satisfied, in which case
+     *  request processing is stopped
+     * @throws IOException an IO error occurred
      */
     protected boolean checkIfUnmodifiedSince(HttpServletRequest request,
             HttpServletResponse response, WebResource resource)
@@ -2061,7 +2107,7 @@ public class DefaultServlet extends HttpServlet {
      * @param resource      The source resource
      * @param ostream       The output stream to write to
      * @param ranges        Enumeration of the ranges the client wanted to
- *                          retrieve
+     *                          retrieve
      * @param contentType   Content type of the resource
      * @exception IOException if an input/output error occurs
      */

==================================================
PersistentManagerBase.java
index 59cb38e210..8bc573eb86 100644
--- a/java/org/apache/catalina/servlets/WebdavServlet.java
+++ b/java/org/apache/catalina/servlets/WebdavServlet.java
@@ -271,6 +271,9 @@ public class WebdavServlet
 
     /**
      * Return JAXP document builder instance.
+     * @return the document builder
+     * @throws ServletException document builder creation failed
+     *  (wrapped <code>ParserConfigurationException</code> exception)
      */
     protected DocumentBuilder getDocumentBuilder()
         throws ServletException {
@@ -418,8 +421,8 @@ public class WebdavServlet
     /**
      * OPTIONS Method.
      *
-     * @param req The request
-     * @param resp The response
+     * @param req The Servlet request
+     * @param resp The Servlet response
      * @throws ServletException If an error occurs
      * @throws IOException If an IO error occurs
      */
@@ -438,6 +441,10 @@ public class WebdavServlet
 
     /**
      * PROPFIND Method.
+     * @param req The Servlet request
+     * @param resp The Servlet response
+     * @throws ServletException If an error occurs
+     * @throws IOException If an IO error occurs
      */
     protected void doPropfind(HttpServletRequest req, HttpServletResponse resp)
         throws ServletException, IOException {
@@ -671,6 +678,9 @@ public class WebdavServlet
 
     /**
      * PROPPATCH Method.
+     * @param req The Servlet request
+     * @param resp The Servlet response
+     * @throws IOException If an IO error occurs
      */
     protected void doProppatch(HttpServletRequest req, HttpServletResponse resp)
             throws IOException {
@@ -692,6 +702,10 @@ public class WebdavServlet
 
     /**
      * MKCOL Method.
+     * @param req The Servlet request
+     * @param resp The Servlet response
+     * @throws ServletException If an error occurs
+     * @throws IOException If an IO error occurs
      */
     protected void doMkcol(HttpServletRequest req, HttpServletResponse resp)
         throws ServletException, IOException {
@@ -752,6 +766,10 @@ public class WebdavServlet
 
     /**
      * DELETE Method.
+     * @param req The Servlet request
+     * @param resp The Servlet response
+     * @throws ServletException If an error occurs
+     * @throws IOException If an IO error occurs
      */
     @Override
     protected void doDelete(HttpServletRequest req, HttpServletResponse resp)
@@ -801,6 +819,9 @@ public class WebdavServlet
 
     /**
      * COPY Method.
+     * @param req The Servlet request
+     * @param resp The Servlet response
+     * @throws IOException If an IO error occurs
      */
     protected void doCopy(HttpServletRequest req, HttpServletResponse resp)
             throws IOException {
@@ -817,6 +838,9 @@ public class WebdavServlet
 
     /**
      * MOVE Method.
+     * @param req The Servlet request
+     * @param resp The Servlet response
+     * @throws IOException If an IO error occurs
      */
     protected void doMove(HttpServletRequest req, HttpServletResponse resp)
             throws IOException {
@@ -842,6 +866,10 @@ public class WebdavServlet
 
     /**
      * LOCK Method.
+     * @param req The Servlet request
+     * @param resp The Servlet response
+     * @throws ServletException If an error occurs
+     * @throws IOException If an IO error occurs
      */
     protected void doLock(HttpServletRequest req, HttpServletResponse resp)
         throws ServletException, IOException {
@@ -1303,6 +1331,9 @@ public class WebdavServlet
 
     /**
      * UNLOCK Method.
+     * @param req The Servlet request
+     * @param resp The Servlet response
+     * @throws IOException If an IO error occurs
      */
     protected void doUnlock(HttpServletRequest req, HttpServletResponse resp)
             throws IOException {
@@ -1384,9 +1415,9 @@ public class WebdavServlet
      * has give the appropriate lock tokens.
      *
      * @param req Servlet request
-     * @return boolean true if the resource is locked (and no appropriate
-     * lock token has been found for at least one of the non-shared locks which
-     * are present on the resource).
+     * @return <code>true</code> if the resource is locked (and no appropriate
+     *  lock token has been found for at least one of
+     *  the non-shared locks which are present on the resource).
      */
     private boolean isLocked(HttpServletRequest req) {
 
@@ -1410,9 +1441,9 @@ public class WebdavServlet
      *
      * @param path Path of the resource
      * @param ifHeader "If" HTTP header which was included in the request
-     * @return boolean true if the resource is locked (and no appropriate
-     * lock token has been found for at least one of the non-shared locks which
-     * are present on the resource).
+     * @return <code>true</code> if the resource is locked (and no appropriate
+     *  lock token has been found for at least one of
+     *  the non-shared locks which are present on the resource).
      */
     private boolean isLocked(String path, String ifHeader) {
 
@@ -1475,6 +1506,7 @@ public class WebdavServlet
      * @param req Servlet request
      * @param resp Servlet response
      * @return boolean true if the copy is successful
+     * @throws IOException If an IO error occurs
      */
     private boolean copyResource(HttpServletRequest req,
                                  HttpServletResponse resp)
@@ -1631,6 +1663,7 @@ public class WebdavServlet
      * during the copy operation
      * @param source Path of the resource to be copied
      * @param dest Destination path
+     * @return <code>true</code> if the copy was successful
      */
     private boolean copyResource(Hashtable<String,Integer> errorList,
             String source, String dest) {
@@ -1696,7 +1729,8 @@ public class WebdavServlet
      *
      * @param req Servlet request
      * @param resp Servlet response
-     * @return boolean true if the copy is successful
+     * @return <code>true</code> if the delete is successful
+     * @throws IOException If an IO error occurs
      */
     private boolean deleteResource(HttpServletRequest req,
                                    HttpServletResponse resp)
@@ -1717,6 +1751,8 @@ public class WebdavServlet
      * @param resp Servlet response
      * @param setStatus Should the response status be set on successful
      *                  completion
+     * @return <code>true</code> if the delete is successful
+     * @throws IOException If an IO error occurs
      */
     private boolean deleteResource(String path, HttpServletRequest req,
                                    HttpServletResponse resp, boolean setStatus)
@@ -1771,7 +1807,7 @@ public class WebdavServlet
 
     /**
      * Deletes a collection.
-     *
+     * @param req The Servlet request
      * @param path Path to the collection to be deleted
      * @param errorList Contains the list of the errors which occurred
      */
@@ -1834,6 +1870,7 @@ public class WebdavServlet
      * @param req Servlet request
      * @param resp Servlet response
      * @param errorList List of error to be displayed
+     * @throws IOException If an IO error occurs
      */
     private void sendReport(HttpServletRequest req, HttpServletResponse resp,
                             Hashtable<String,Integer> errorList)
@@ -2405,7 +2442,7 @@ public class WebdavServlet
      *
      * @param path Path
      * @param generatedXML XML data to which the locks info will be appended
-     * @return true if at least one lock was displayed
+     * @return <code>true</code> if at least one lock was displayed
      */
     private boolean generateLockDiscovery
         (String path, XMLWriter generatedXML) {
@@ -2446,6 +2483,7 @@ public class WebdavServlet
 
     /**
      * Get creation date in ISO format.
+     * @return the formatted creation date
      */
     private String getISOCreationDate(long creationDate) {
         return creationDateFormat.format(new Date(creationDate));
@@ -2453,7 +2491,8 @@ public class WebdavServlet
 
     /**
      * Determines the methods normally allowed for the resource.
-     *
+     * @param req The Servlet request
+     * @return a string builder with the allowed HTTP methods
      */
     private StringBuilder determineMethodsAllowed(HttpServletRequest req) {
 
@@ -2489,17 +2528,6 @@ public class WebdavServlet
     private class LockInfo {
 
 
-        // -------------------------------------------------------- Constructor
-
-
-        /**
-         * Constructor.
-         */
-        public LockInfo() {
-            // Ignore
-        }
-
-
         // ------------------------------------------------- Instance Variables
 
 

==================================================
StandardManager.java
index aebcad71b3..50ea73a4a1 100644
--- a/java/org/apache/catalina/session/PersistentManagerBase.java
+++ b/java/org/apache/catalina/session/PersistentManagerBase.java
@@ -686,7 +686,9 @@ public abstract class PersistentManagerBase extends ManagerBase
      * in, but will not be added to the active session list if it
      * is invalid or past its expiration.
      *
+     * @param id The id of the session that should be swapped in
      * @return restored session, or {@code null}, if none is found
+     * @throws IOException an IO error occurred
      */
     protected Session swapIn(String id) throws IOException {
 
@@ -787,7 +789,8 @@ public abstract class PersistentManagerBase extends ManagerBase
      * is past its expiration or invalid, this method does
      * nothing.
      *
-     * @param session The Session to write out.
+     * @param session The Session to write out
+     * @throws IOException an IO error occurred
      */
     protected void swapOut(Session session) throws IOException {
 
@@ -807,6 +810,8 @@ public abstract class PersistentManagerBase extends ManagerBase
      * Write the provided session to the Store without modifying
      * the copy in memory or triggering passivation events. Does
      * nothing if the session is invalid or past its expiration.
+     * @param session The session that should be written
+     * @throws IOException an IO error occurred
      */
     protected void writeSession(Session session) throws IOException {
 

==================================================
ExpressionParseTree.java
index 1fb47a69ec..6b053d8f01 100644
--- a/java/org/apache/catalina/session/StandardManager.java
+++ b/java/org/apache/catalina/session/StandardManager.java
@@ -519,6 +519,7 @@ public class StandardManager extends ManagerBase {
     /**
      * Return a File object representing the pathname to our
      * persistence file, if any.
+     * @return the file
      */
     protected File file() {
         if ((pathname == null) || (pathname.length() == 0))

==================================================
ExpressionTokenizer.java
index 5efa03825f..7bde84848f 100644
--- a/java/org/apache/catalina/ssi/ExpressionParseTree.java
+++ b/java/org/apache/catalina/ssi/ExpressionParseTree.java
@@ -50,6 +50,9 @@ public class ExpressionParseTree {
 
     /**
      * Creates a new parse tree for the specified expression.
+     * @param expr The expression string
+     * @param ssiMediator Used to evaluated the expressions
+     * @throws ParseException a parsing error occurred
      */
     public ExpressionParseTree(String expr, SSIMediator ssiMediator)
             throws ParseException {
@@ -61,6 +64,7 @@ public class ExpressionParseTree {
     /**
      * Evaluates the tree and returns true or false. The specified SSIMediator
      * is used to resolve variable references.
+     * @return the evaluation result
      */
     public boolean evaluateTree() {
         return root.evaluate();
@@ -70,6 +74,7 @@ public class ExpressionParseTree {
     /**
      * Pushes a new operator onto the opp stack, resolving existing opps as
      * needed.
+     * @param node The operator node
      */
     private void pushOpp(OppNode node) {
         // If node is null then it's just a group marker
@@ -115,6 +120,8 @@ public class ExpressionParseTree {
 
     /**
      * Parses the specified expression into a tree of parse nodes.
+     * @param expr The expression to parse
+     * @throws ParseException a parsing error occurred
      */
     private void parseExpression(String expr) throws ParseException {
         StringNode currStringNode = null;

==================================================
ResponseIncludeWrapper.java
index ad5aa6a868..a99a17da03 100644
--- a/java/org/apache/catalina/ssi/ExpressionTokenizer.java
+++ b/java/org/apache/catalina/ssi/ExpressionTokenizer.java
@@ -46,6 +46,7 @@ public class ExpressionTokenizer {
 
     /**
      * Creates a new parser for the specified expression.
+     * @param expr The expression
      */
     public ExpressionTokenizer(String expr) {
         this.expr = expr.trim().toCharArray();
@@ -54,7 +55,7 @@ public class ExpressionTokenizer {
 
 
     /**
-     * Returns true if there are more tokens.
+     * @return <code>true</code> if there are more tokens.
      */
     public boolean hasMoreTokens() {
         return index < length;
@@ -62,7 +63,7 @@ public class ExpressionTokenizer {
 
 
     /**
-     * Returns the current index for error reporting purposes.
+     * @return the current index for error reporting purposes.
      */
     public int getIndex() {
         return index;
@@ -76,7 +77,7 @@ public class ExpressionTokenizer {
 
 
     /**
-     * Returns the next token type and initializes any state variables
+     * @return the next token type and initializes any state variables
      * accordingly.
      */
     public int nextToken() {
@@ -176,7 +177,7 @@ public class ExpressionTokenizer {
 
 
     /**
-     * Returns the String value of the token if it was type TOKEN_STRING.
+     * @return the String value of the token if it was type TOKEN_STRING.
      * Otherwise null is returned.
      */
     public String getTokenValue() {

==================================================
SSIMediator.java
index 313376f78f..c1d43941cc 100644
--- a/java/org/apache/catalina/ssi/ResponseIncludeWrapper.java
+++ b/java/org/apache/catalina/ssi/ResponseIncludeWrapper.java
@@ -90,6 +90,7 @@ public class ResponseIncludeWrapper extends HttpServletResponseWrapper {
      * Flush the servletOutputStream or printWriter ( only one will be non-null )
      * This must be called after a requestDispatcher.include, since we can't
      * assume that the included servlet flushed its stream.
+     * @throws IOException an IO error occurred
      */
     public void flushOutputStreamOrWriter() throws IOException {
         if (servletOutputStream != null) {

==================================================
SSIProcessor.java
index 0c71147868..d9a67fb50d 100644
--- a/java/org/apache/catalina/ssi/SSIMediator.java
+++ b/java/org/apache/catalina/ssi/SSIMediator.java
@@ -201,6 +201,8 @@ public class SSIMediator {
     /**
      * Applies variable substitution to the specified String and returns the
      * new resolved string.
+     * @param val The value which should be checked
+     * @return the value after variable substitution
      */
     public String substituteVariables(String val) {
         // If it has no references or HTML entities then no work

==================================================
SSIServlet.java
index e2dbed3314..9f5153fb02 100644
--- a/java/org/apache/catalina/ssi/SSIProcessor.java
+++ b/java/org/apache/catalina/ssi/SSIProcessor.java
@@ -85,6 +85,7 @@ public class SSIProcessor {
      *
      * @param reader
      *            the reader to read the file containing SSIs from
+     * @param lastModifiedDate resource last modification date
      * @param writer
      *            the writer to write the file with the SSIs processed.
      * @return the most current modified date resulting from any SSI commands
@@ -185,7 +186,8 @@ public class SSIProcessor {
      *
      * @param cmd
      *            a value of type 'StringBuilder'
-     * @return a value of type 'String[]'
+     * @param start index on which parsing will start
+     * @return an array with the parameter names
      */
     protected String[] parseParamNames(StringBuilder cmd, int start) {
         int bIdx = start;
@@ -235,7 +237,9 @@ public class SSIProcessor {
      *
      * @param cmd
      *            a value of type 'StringBuilder'
-     * @return a value of type 'String[]'
+     * @param start index on which parsing will start
+     * @param count number of values which should be parsed
+     * @return an array with the parameter values
      */
     protected String[] parseParamValues(StringBuilder cmd, int start, int count) {
         int valIndex = 0;

==================================================
SSIServletRequestUtil.java
index a98a32c14c..918d108d22 100644
--- a/java/org/apache/catalina/ssi/SSIServlet.java
+++ b/java/org/apache/catalina/ssi/SSIServlet.java
@@ -145,6 +145,7 @@ public class SSIServlet extends HttpServlet {
      *            a value of type 'HttpServletRequest'
      * @param res
      *            a value of type 'HttpServletResponse'
+     * @throws IOException an IO error occurred
      */
     protected void requestHandler(HttpServletRequest req,
             HttpServletResponse res) throws IOException {

==================================================
