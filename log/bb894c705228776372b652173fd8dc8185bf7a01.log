bb894c705228776372b652173fd8dc8185bf7a01
==================================================
Some Javadoc fixes for Java 8 <br/> -> <br>
==================================================
Mark Emlyn
==================================================
Sun Oct 12 10:21:51 2014 +0000
==================================================
HttpConstraint.java
Some Javadoc fixes for Java 8 <br/> -> <br>

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1631157 13f79535-47bb-0310-9956-ffa450edef68



==================================================
HttpMethodConstraint.java
index fd4366c474..eb4ff09f99 100644
--- a/java/javax/servlet/annotation/HttpConstraint.java
+++ b/java/javax/servlet/annotation/HttpConstraint.java
@@ -58,7 +58,7 @@ public @interface HttpConstraint {
      * @return array of names. The array may be of zero length, in which case
      *         the EmptyRoleSemantic applies; the returned value determines
      *         whether access is to be permitted or denied regardless of the
-     *         identity and authentication state in either case, PERMIT or DENY.<br />
+     *         identity and authentication state in either case, PERMIT or DENY.<br>
      *         Otherwise, when the array contains one or more role names access
      *         is permitted if the user a member of at least one of the named
      *         roles. The EmptyRoleSemantic is not applied in this case.

==================================================
MultipartConfig.java
index 84e7c1d073..e8455ec757 100644
--- a/java/javax/servlet/annotation/HttpMethodConstraint.java
+++ b/java/javax/servlet/annotation/HttpMethodConstraint.java
@@ -65,7 +65,7 @@ public @interface HttpMethodConstraint {
      * @return array of names. The array may be of zero length, in which case
      *         the EmptyRoleSemantic applies; the returned value determines
      *         whether access is to be permitted or denied regardless of the
-     *         identity and authentication state in either case, PERMIT or DENY.<br />
+     *         identity and authentication state in either case, PERMIT or DENY.<br>
      *         Otherwise, when the array contains one or more role names access
      *         is permitted if the user a member of at least one of the named
      *         roles. The EmptyRoleSemantic is not applied in this case.

==================================================
ServletSecurity.java
index a86f86ed16..d6111818ba 100644
--- a/java/javax/servlet/annotation/MultipartConfig.java
+++ b/java/javax/servlet/annotation/MultipartConfig.java
@@ -24,20 +24,20 @@ import java.lang.annotation.Target;
 /**
  * This annotation is used to indicate that the {@link javax.servlet.Servlet} on
  * which it is declared expects requests to made using the {@code
- * multipart/form-data} MIME type. <br />
- * <br />
+ * multipart/form-data} MIME type. <br>
+ * <br>
  *
  * {@link javax.servlet.http.Part} components of a given {@code
  * multipart/form-data} request are retrieved by a Servlet annotated with
  * {@code MultipartConfig} by calling
  * {@link javax.servlet.http.HttpServletRequest#getPart} or
- * {@link javax.servlet.http.HttpServletRequest#getParts}.<br />
- * <br />
+ * {@link javax.servlet.http.HttpServletRequest#getParts}.<br>
+ * <br>
  *
- * E.g. <code>@WebServlet("/upload")}</code><br />
+ * E.g. <code>@WebServlet("/upload")}</code><br>
  *
  * <code>@MultipartConfig()</code> <code>public class UploadServlet extends
- * HttpServlet ... } </code><br />
+ * HttpServlet ... } </code><br>
  *
  * @since Servlet 3.0
  */

==================================================
WebFilter.java
index 7ed432ee10..1e71ea9c15 100644
--- a/java/javax/servlet/annotation/ServletSecurity.java
+++ b/java/javax/servlet/annotation/ServletSecurity.java
@@ -25,10 +25,10 @@ import java.lang.annotation.Target;
 
 /**
  * Declare this annotation on a {@link javax.servlet.Servlet} implementation
- * class to enforce security constraints on HTTP protocol requests.<br />
+ * class to enforce security constraints on HTTP protocol requests.<br>
  * The container applies constraints to the URL patterns mapped to each Servlet
- * which declares this annotation.<br />
- * <br />
+ * which declares this annotation.<br>
+ * <br>
  *
  * @since Servlet 3.0
  */

==================================================
WebInitParam.java
index 08cbfdbd15..730270ef4b 100644
--- a/java/javax/servlet/annotation/WebFilter.java
+++ b/java/javax/servlet/annotation/WebFilter.java
@@ -25,34 +25,34 @@ import java.lang.annotation.Target;
 import javax.servlet.DispatcherType;
 
 /**
- * The annotation used to declare a Servlet {@link javax.servlet.Filter}. <br />
- * <br />
+ * The annotation used to declare a Servlet {@link javax.servlet.Filter}. <br>
+ * <br>
  *
  * This annotation will be processed by the container during deployment, the
  * Filter class in which it is found will be created as per the configuration
  * and applied to the URL patterns, {@link javax.servlet.Servlet}s and
- * {@link javax.servlet.DispatcherType}s.<br />
- * <br/>
+ * {@link javax.servlet.DispatcherType}s.<br>
+ * <br>
  *
  * If the name attribute is not defined, the fully qualified name of the class
- * is used.<br/>
- * <br/>
+ * is used.<br>
+ * <br>
  *
  * At least one URL pattern MUST be declared in either the {@code value} or
- * {@code urlPattern} attribute of the annotation, but not both.<br/>
- * <br/>
+ * {@code urlPattern} attribute of the annotation, but not both.<br>
+ * <br>
  *
  * The {@code value} attribute is recommended for use when the URL pattern is
  * the only attribute being set, otherwise the {@code urlPattern} attribute
- * should be used.<br />
- * <br />
+ * should be used.<br>
+ * <br>
  *
  * The annotated class MUST implement {@link javax.servlet.Filter}.
  *
  * E.g.
  *
- * <code>@WebFilter("/path/*")</code><br />
- * <code>public class AnExampleFilter implements Filter { ... </code><br />
+ * <code>@WebFilter("/path/*")</code><br>
+ * <code>public class AnExampleFilter implements Filter { ... </code><br>
  *
  * @since Servlet 3.0 (Section 8.1.2)
  *

==================================================
WebListener.java
index e5fb73f64d..a39823c455 100644
--- a/java/javax/servlet/annotation/WebInitParam.java
+++ b/java/javax/servlet/annotation/WebInitParam.java
@@ -26,12 +26,12 @@ import java.lang.annotation.Target;
  * The annotation used to declare an initialization parameter on a
  * {@link javax.servlet.Servlet} or {@link javax.servlet.Filter}, within a
  * {@link javax.servlet.annotation.WebFilter} or
- * {@link javax.servlet.annotation.WebServlet} annotation.<br />
- * <br />
+ * {@link javax.servlet.annotation.WebServlet} annotation.<br>
+ * <br>
  *
  * E.g.
  * <code>&amp;#064;WebServlet(name="TestServlet", urlPatterns={"/test"},initParams={&amp;#064;WebInitParam(name="test", value="true")})
- * public class TestServlet extends HttpServlet { ... </code><br />
+ * public class TestServlet extends HttpServlet { ... </code><br>
  *
  * @since Servlet 3.0
  */

==================================================
WebServlet.java
index 81f5ff749f..e1d4f09dae 100644
--- a/java/javax/servlet/annotation/WebListener.java
+++ b/java/javax/servlet/annotation/WebListener.java
@@ -24,8 +24,8 @@ import java.lang.annotation.Target;
 
 /**
  * The annotation used to declare a listener for various types of event, in a
- * given web application context.<br />
- * <br />
+ * given web application context.<br>
+ * <br>
  *
  * The class annotated MUST implement one, (or more), of the following
  * interfaces: {@link javax.servlet.http.HttpSessionAttributeListener},
@@ -35,10 +35,10 @@ import java.lang.annotation.Target;
  * {@link javax.servlet.ServletRequestAttributeListener},
  * {@link javax.servlet.ServletRequestListener} or
  * {@link javax.servlet.http.HttpSessionIdListener}
- * <br />
+ * <br>
  *
- * E.g. <code>@WebListener</code><br />
- * <code>public TestListener implements ServletContextListener {</code><br />
+ * E.g. <code>@WebListener</code><br>
+ * <code>public TestListener implements ServletContextListener {</code><br>
  *
  * @since Servlet 3.0
  */

==================================================
JMXAccessorCondition.java
index eebf8bacb9..3f2bba0aa1 100644
--- a/java/javax/servlet/annotation/WebServlet.java
+++ b/java/javax/servlet/annotation/WebServlet.java
@@ -24,31 +24,31 @@ import java.lang.annotation.Target;
 
 /**
  * This annotation is used to declare the configuration of an
- * {@link javax.servlet.Servlet}. <br/>
+ * {@link javax.servlet.Servlet}. <br>
  *
  * If the name attribute is not defined, the fully qualified name of the class
- * is used.<br/>
- * <br/>
+ * is used.<br>
+ * <br>
  *
  * At least one URL pattern MUST be declared in either the {@code value} or
- * {@code urlPattern} attribute of the annotation, but not both.<br/>
- * <br/>
+ * {@code urlPattern} attribute of the annotation, but not both.<br>
+ * <br>
  *
  * The {@code value} attribute is recommended for use when the URL pattern is
  * the only attribute being set, otherwise the {@code urlPattern} attribute
- * should be used.<br />
- * <br />
+ * should be used.<br>
+ * <br>
  *
  * The class on which this annotation is declared MUST extend
- * {@link javax.servlet.http.HttpServlet}. <br />
- * <br />
+ * {@link javax.servlet.http.HttpServlet}. <br>
+ * <br>
  *
- * E.g. <code>@WebServlet("/path")}<br />
- * public class TestServlet extends HttpServlet ... {</code><br />
+ * E.g. <code>@WebServlet("/path")}<br>
+ * public class TestServlet extends HttpServlet ... {</code><br>
  *
  * E.g.
- * <code>@WebServlet(name="TestServlet", urlPatterns={"/path", "/alt"}) <br />
- * public class TestServlet extends HttpServlet ... {</code><br />
+ * <code>@WebServlet(name="TestServlet", urlPatterns={"/path", "/alt"}) <br>
+ * public class TestServlet extends HttpServlet ... {</code><br>
  *
  * @since Servlet 3.0 (Section 8.1.1)
  *

==================================================
JMXAccessorCreateTask.java
index f14116515a..2071b3729b 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorCondition.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorCondition.java
@@ -73,7 +73,7 @@ import org.apache.tools.ant.BuildException;
  * <li>&lt; lesser than (&amp;lt;)</li>
  * <li>&lt;= lesser than or equals (&amp;lt;=)</li>
  * </ul>
- * <b>NOTE</b>:  For numeric expressions the type must be set and use xml entities as operations.<br/>
+ * <b>NOTE</b>:  For numeric expressions the type must be set and use xml entities as operations.<br>
  * As type we currently support <em>long</em> and <em>double</em>.
  * @author Peter Rossbach
  * @since 5.5.10

==================================================
JMXAccessorGetTask.java
index fef6861575..48ce40de09 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorCreateTask.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorCreateTask.java
@@ -33,7 +33,7 @@ import org.apache.tools.ant.BuildException;
  * </ul>
  * <p>
  * Examples:
- * <br/>
+ * <br>
  * create a new Mbean at jmx.server connection
  * <pre>
  *   &lt;jmx:create

==================================================
JMXAccessorQueryTask.java
index 4374e7070f..5b7df954a2 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorGetTask.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorGetTask.java
@@ -34,7 +34,7 @@ import org.apache.tools.ant.BuildException;
  * </ul>
  * <p>
  * Examples:
- * <br/>
+ * <br>
  * Get a Mbean IDataSender attribute nrOfRequests and create a new ant property <em>IDataSender.9025.nrOfRequests</em>
  * <pre>
  *   &lt;jmx:get

==================================================
JMXAccessorTask.java
index ddd74e809e..020fdf7367 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorQueryTask.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorQueryTask.java
@@ -39,7 +39,7 @@ import org.apache.tools.ant.BuildException;
  * <li>Show query result as Ant console log</li>
  * <li>Bind query result as Ant properties</li>
  * </ul>
- * <br/>
+ * <br>
  * Query a list of Mbeans.
  * <pre>
  *   &lt;jmxQuery
@@ -49,7 +49,7 @@ import org.apache.tools.ant.BuildException;
  *           resultproperty="manager" /&gt;
  * </pre>
  * with attribute <em>attributebinding="true"</em> you can get
- * all attributes also from result objects.<br/>
+ * all attributes also from result objects.<br>
  * The property manager.lenght show the size of the result
  * and with manager.[0..length].name the
  * resulted ObjectNames are saved.

==================================================
JMXAccessorUnregisterTask.java
index cd5c9eb7fe..4813a2cdd2 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorTask.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorTask.java
@@ -81,7 +81,7 @@ import org.apache.tools.ant.Project;
  * </p>
  * All JMXAccessorXXXTask support the attribute <em>if</em> and
  * <em>unless</em>. With <em>if</em> the task is only execute when property
- * exist and with <em>unless</em> when property not exists. <br/><b>NOTE
+ * exist and with <em>unless</em> when property not exists. <br><b>NOTE
  * </b>: These tasks require Ant 1.6 or later interface.
  *
  * @author Peter Rossbach

==================================================
CometEvent.java
index 35ecd51a05..3dcfffb8b5 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorUnregisterTask.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorUnregisterTask.java
@@ -28,7 +28,7 @@ import org.apache.tools.ant.BuildException;
  * </ul>
  * <p>
  * Examples:
- * <br/>
+ * <br>
  * unregister an existing Mbean at jmx.server connection
  * <pre>
  *   &lt;jmx:unregister

==================================================
StandardEngine.java
index 129873686c..4cadc6c424 100644
--- a/java/org/apache/catalina/comet/CometEvent.java
+++ b/java/org/apache/catalina/comet/CometEvent.java
@@ -123,13 +123,13 @@ public interface CometEvent {
 
     /**
      * Sets the timeout for this Comet connection. Please NOTE, that the implementation
-     * of a per connection timeout is OPTIONAL and MAY NOT be implemented.<br/>
+     * of a per connection timeout is OPTIONAL and MAY NOT be implemented.<br>
      * This method sets the timeout in milliseconds of idle time on the connection.
      * The timeout is reset every time data is received from the connection or data is flushed
      * using <code>response.flushBuffer()</code>. If a timeout occurs, the
      * <code>error(HttpServletRequest, HttpServletResponse)</code> method is invoked. The
      * web application SHOULD NOT attempt to reuse the request and response objects after a timeout
-     * as the <code>error(HttpServletRequest, HttpServletResponse)</code> method indicates.<br/>
+     * as the <code>error(HttpServletRequest, HttpServletResponse)</code> method indicates.<br>
      * This method should not be called asynchronously, as that will have no effect.
      *
      * @param timeout The timeout in milliseconds for this connection, must be a positive value, larger than 0

==================================================
AddDefaultCharsetFilter.java
index 2e01a41b1c..86e266fe0f 100644
--- a/java/org/apache/catalina/core/StandardEngine.java
+++ b/java/org/apache/catalina/core/StandardEngine.java
@@ -46,7 +46,7 @@ import org.apache.juli.logging.LogFactory;
 /**
  * Standard implementation of the <b>Engine</b> interface.  Each
  * child container must be a Host implementation to process the specific
- * fully qualified host name of that virtual host. <br/>
+ * fully qualified host name of that virtual host. <br>
  * You can set the jvmRoute direct or with the System.property <b>jvmRoute</b>.
  *
  * @author Craig R. McClanahan

==================================================
RemoteIpFilter.java
index 0970e8473d..930093c44a 100644
--- a/java/org/apache/catalina/filters/AddDefaultCharsetFilter.java
+++ b/java/org/apache/catalina/filters/AddDefaultCharsetFilter.java
@@ -38,7 +38,7 @@ import org.apache.juli.logging.LogFactory;
  * defined for media with subtype "text". However, browsers may attempt to
  * auto-detect the character set. This may be exploited by an attacker to
  * perform an XSS attack. Internet Explorer has this behaviour by default. Other
- * browsers have an option to enable it.<br/>
+ * browsers have an option to enable it.<br>
  *
  * This filter prevents the attack by explicitly setting a character set. Unless
  * the provided character set is explicitly overridden by the user - in which

==================================================
JvmRouteBinderValve.java
index ab83d0f0fb..2780345201 100644
--- a/java/org/apache/catalina/filters/RemoteIpFilter.java
+++ b/java/org/apache/catalina/filters/RemoteIpFilter.java
@@ -112,7 +112,7 @@ import org.apache.juli.logging.LogFactory;
  *     169\.254\.\d{1,3}\.\d{1,3}|127\.\d{1,3}\.\d{1,3}\.\d{1,3}|
  *     172\.1[6-9]{1}\.\d{1,3}\.\d{1,3}|172\.2[0-9]{1}\.\d{1,3}\.\d{1,3}|
  *     172\.3[0-1]{1}\.\d{1,3}\.\d{1,3}
- *     <br/>
+ *     <br>
  * By default, 10/8, 192.168/16, 169.254/16, 127/8 and 172.16/12 are allowed.</td>
  * </tr>
  * </tr>

==================================================
DefaultServlet.java
index 88c6d7aadc..ad02298119 100644
--- a/java/org/apache/catalina/ha/session/JvmRouteBinderValve.java
+++ b/java/org/apache/catalina/ha/session/JvmRouteBinderValve.java
@@ -52,7 +52,7 @@ import org.apache.tomcat.util.res.StringManager;
  * <p>
  * Add this Valve to your host definition at conf/server.xml .
  *
- * Since 5.5.10 as direct cluster valve:<br/>
+ * Since 5.5.10 as direct cluster valve:<br>
  *
  * <pre>
  *  &lt;Cluster&gt;
@@ -60,8 +60,8 @@ import org.apache.tomcat.util.res.StringManager;
  *  &lt;/Cluster&gt;
  * </pre>
  *
- * <br />
- * Before 5.5.10 as Host element:<br/>
+ * <br>
+ * Before 5.5.10 as Host element:<br>
  *
  * <pre>
  *  &lt;Host&gt;
@@ -69,7 +69,7 @@ import org.apache.tomcat.util.res.StringManager;
  *  &lt;/Host&gt;
  * </pre>
  *
- * <em>A Trick:</em><br/>
+ * <em>A Trick:</em><br>
  * You can enable this mod_jk turnover mode via JMX before you drop a node to
  * all backup nodes! Set enable true on all JvmRouteBinderValve backups, disable
  * worker at mod_jk and then drop node and restart it! Then enable mod_jk worker

==================================================
XByteBuffer.java
index cbf65b64f2..3da5de7c86 100644
--- a/java/org/apache/catalina/servlets/DefaultServlet.java
+++ b/java/org/apache/catalina/servlets/DefaultServlet.java
@@ -94,7 +94,7 @@ import org.xml.sax.ext.EntityResolver2;
  * <p>It can be mapped to sub-paths, however in all cases resources are served
  * from the web appplication resource root using the full path from the root
  * of the web application context.
- * <br/>e.g. given a web application structure:
+ * <br>e.g. given a web application structure:
  *</p>
  * <pre>
  * /context

==================================================
McastService.java
index 7f12ffb500..0eb112d39b 100644
--- a/java/org/apache/catalina/tribes/io/XByteBuffer.java
+++ b/java/org/apache/catalina/tribes/io/XByteBuffer.java
@@ -34,7 +34,7 @@ import java.util.concurrent.atomic.AtomicInteger;
  * as they come in on a socket.
  * <br>
  * <b>THIS CLASS IS NOT THREAD SAFE</B><BR>
- * <br/>
+ * <br>
  * Transfer package:
  * <ul>
  * <li><b>START_DATA/b> - 7 bytes - <i>FLT2002</i></li>

==================================================
Membership.java
index e7986b4d0c..435269e833 100644
--- a/java/org/apache/catalina/tribes/membership/McastService.java
+++ b/java/org/apache/catalina/tribes/membership/McastService.java
@@ -92,7 +92,7 @@ public class McastService implements MembershipService,MembershipListener,Messag
     /**
      *
      * @param properties
-     * <BR/>All are required<BR />
+     * <br>All are required<br>
      * 1. mcastPort - the port to listen to<BR>
      * 2. mcastAddress - the mcast group address<BR>
      * 4. bindAddress - the bind address if any - only one that can be null<BR>

==================================================
LazyReplicatedMap.java
index 89c5e0f042..55ab464614 100644
--- a/java/org/apache/catalina/tribes/membership/Membership.java
+++ b/java/org/apache/catalina/tribes/membership/Membership.java
@@ -111,7 +111,7 @@ public class Membership implements Cloneable {
      * Notify the membership that this member has announced itself.
      *
      * @param member - the member that just pinged us
-     * @return - true if this member is new to the cluster, false otherwise.<br/>
+     * @return - true if this member is new to the cluster, false otherwise.<br>
      * - false if this member is the local member or updated.
      */
     public synchronized boolean memberAlive(Member member) {

==================================================
FastQueue.java
index aa48d4f219..8b61ba5307 100644
--- a/java/org/apache/catalina/tribes/tipis/LazyReplicatedMap.java
+++ b/java/org/apache/catalina/tribes/tipis/LazyReplicatedMap.java
@@ -29,8 +29,8 @@ import org.apache.juli.logging.LogFactory;
 /**
  * A smart implementation of a stateful replicated map. uses primary/secondary backup strategy.
  * One node is always the primary and one node is always the backup.
- * This map is synchronized across a cluster, and only has one backup member.<br/>
- * A perfect usage for this map would be a session map for a session manager in a clustered environment.<br/>
+ * This map is synchronized across a cluster, and only has one backup member.<br>
+ * A perfect usage for this map would be a session map for a session manager in a clustered environment.<br>
  * The only way to modify this list is to use the <code>put, putAll, remove</code> methods.
  * entrySet, entrySetFull, keySet, keySetFull, returns all non modifiable sets.<br><br>
  * If objects (values) in the map change without invoking <code>put()</code> or <code>remove()</code>

==================================================
LifecycleMBeanBase.java
index 9551093f99..4e27370925 100644
--- a/java/org/apache/catalina/tribes/transport/bio/util/FastQueue.java
+++ b/java/org/apache/catalina/tribes/transport/bio/util/FastQueue.java
@@ -26,7 +26,7 @@ import org.apache.catalina.tribes.group.InterceptorPayload;
 
 
 /**
- * A fast queue that remover thread lock the adder thread. <br/>Limit the queue
+ * A fast queue that remover thread lock the adder thread. <br>Limit the queue
  * length when you have strange producer thread problems.
  *
  * FIXME add i18n support to log messages

==================================================
RemoteIpValve.java
index 7759f82de6..1386cd632b 100644
--- a/java/org/apache/catalina/util/LifecycleMBeanBase.java
+++ b/java/org/apache/catalina/util/LifecycleMBeanBase.java
@@ -134,7 +134,7 @@ public abstract class LifecycleMBeanBase extends LifecycleBase
     /**
      * Utility method to enable sub-classes to easily register additional
      * components that don't implement {@link JmxEnabled} with an MBean server.
-     * <br/>
+     * <br>
      * Note: This method should only be used once {@link #initInternal()} has
      * been called and before {@link #destroyInternal()} has been called.
      *
@@ -174,7 +174,7 @@ public abstract class LifecycleMBeanBase extends LifecycleBase
     /**
      * Utility method to enable sub-classes to easily unregister additional
      * components that don't implement {@link JmxEnabled} with an MBean server.
-     * <br/>
+     * <br>
      * Note: This method should only be used once {@link #initInternal()} has
      * been called and before {@link #destroyInternal()} has been called.
      *

==================================================
AbstractNioInputBuffer.java
index 5d67938d20..81f247d88f 100644
--- a/java/org/apache/catalina/valves/RemoteIpValve.java
+++ b/java/org/apache/catalina/valves/RemoteIpValve.java
@@ -93,7 +93,7 @@ import org.apache.juli.logging.LogFactory;
  *     169\.254\.\d{1,3}\.\d{1,3}|127\.\d{1,3}\.\d{1,3}\.\d{1,3}|
  *     172\.1[6-9]{1}\.\d{1,3}\.\d{1,3}|172\.2[0-9]{1}\.\d{1,3}\.\d{1,3}|
  *     172\.3[0-1]{1}\.\d{1,3}\.\d{1,3}
- *     <br/>
+ *     <br>
  * By default, 10/8, 192.168/16, 169.254/16, 127/8 and 172.16/12 are allowed.</td>
  * </tr>
  * </tr>

==================================================
ChunkedInputFilter.java
index 1dc5763e12..85b6630787 100644
--- a/java/org/apache/coyote/http11/AbstractNioInputBuffer.java
+++ b/java/org/apache/coyote/http11/AbstractNioInputBuffer.java
@@ -38,7 +38,7 @@ public abstract class AbstractNioInputBuffer<S> extends AbstractInputBuffer<S> {
         HEADER_START,
         /**
          * Reading a header name. All characters of header are HTTP_TOKEN_CHAR.
-         * Header name is followed by ':'. No whitespace is allowed.<br />
+         * Header name is followed by ':'. No whitespace is allowed.<br>
          * Any non-HTTP_TOKEN_CHAR (this includes any whitespace) encountered
          * before ':' will result in the whole line being ignored.
          */
@@ -627,25 +627,25 @@ public abstract class AbstractNioInputBuffer<S> extends AbstractInputBuffer<S> {
     private final HeaderParseData headerData = new HeaderParseData();
     public static class HeaderParseData {
         /**
-         * When parsing header name: first character of the header.<br />
-         * When skipping broken header line: first character of the header.<br />
+         * When parsing header name: first character of the header.<br>
+         * When skipping broken header line: first character of the header.<br>
          * When parsing header value: first character after ':'.
          */
         int start = 0;
         /**
-         * When parsing header name: not used (stays as 0).<br />
-         * When skipping broken header line: not used (stays as 0).<br />
+         * When parsing header name: not used (stays as 0).<br>
+         * When skipping broken header line: not used (stays as 0).<br>
          * When parsing header value: starts as the first character after ':'.
          * Then is increased as far as more bytes of the header are harvested.
          * Bytes from buf[pos] are copied to buf[realPos]. Thus the string from
          * [start] to [realPos-1] is the prepared value of the header, with
-         * whitespaces removed as needed.<br />
+         * whitespaces removed as needed.<br>
          */
         int realPos = 0;
         /**
-         * When parsing header name: not used (stays as 0).<br />
-         * When skipping broken header line: last non-CR/non-LF character.<br />
-         * When parsing header value: position after the last not-LWS character.<br />
+         * When parsing header name: not used (stays as 0).<br>
+         * When skipping broken header line: last non-CR/non-LF character.<br>
+         * When parsing header value: position after the last not-LWS character.<br>
          */
         int lastSignificantChar = 0;
         /**

==================================================
Buffer.java
index e64aadb437..dfc06d02e4 100644
--- a/java/org/apache/coyote/http11/filters/ChunkedInputFilter.java
+++ b/java/org/apache/coyote/http11/filters/ChunkedInputFilter.java
@@ -322,8 +322,8 @@ public class ChunkedInputFilter implements InputFilter {
 
     /**
      * Parse the header of a chunk.
-     * A chunk header can look like one of the following:<br />
-     * A10CRLF<br />
+     * A chunk header can look like one of the following:<br>
+     * A10CRLF<br>
      * F23;chunk-extension to be ignoredCRLF
      *
      * <p>

==================================================
File.java
index 3a26d5f8e6..703bfca40e 100644
--- a/java/org/apache/tomcat/jni/Buffer.java
+++ b/java/org/apache/tomcat/jni/Buffer.java
@@ -58,7 +58,7 @@ public class Buffer {
 
     /**
      * Allocate a new ByteBuffer from already allocated memory.
-     * <br />Allocated memory must be provided from call to the
+     * <br>Allocated memory must be provided from call to the
      * Stdlib.alloc or Stdlib.calloc methods.
      * @param mem The memory to use
      * @param size The amount of memory to use
@@ -68,7 +68,7 @@ public class Buffer {
 
     /**
      * Deallocates or frees a memory block used by ByteBuffer
-     * <br /><b>Warning :</b> Call this method only on ByteBuffers
+     * <br><b>Warning :</b> Call this method only on ByteBuffers
      * that were created by calling Buffer.alloc or Buffer.calloc.
      * @param buf Previously allocated ByteBuffer to be freed.
      */

==================================================
Global.java
index eacf6b2161..abfda32cec 100644
--- a/java/org/apache/tomcat/jni/File.java
+++ b/java/org/apache/tomcat/jni/File.java
@@ -58,7 +58,7 @@ public class File {
      */
     public static final int APR_FOPEN_SENDFILE_ENABLED = 0x01000;
     /** Platform dependent flag to enable large file support;
-     * <br /><b>Warning :</b> The APR_LARGEFILE flag only has effect on some platforms
+     * <br><b>Warning :</b> The APR_LARGEFILE flag only has effect on some platforms
      * where sizeof(apr_off_t) == 4.  Where implemented, it allows opening
      * and writing to a file which exceeds the size which can be
      * represented by apr_off_t (2 gigabytes).  When a file's size does
@@ -107,7 +107,7 @@ public class File {
 
     /* apr_filetype_e values for the filetype member of the
      * apr_file_info_t structure
-     * <br /><b>Warning :</b>: Not all of the filetypes below can be determined.
+     * <br><b>Warning :</b>: Not all of the filetypes below can be determined.
      * For example, a given platform might not correctly report
      * a socket descriptor as APR_SOCK if that type isn't
      * well-identified on that platform.  In such cases where
@@ -263,7 +263,7 @@ public class File {
 
     /**
      * Rename the specified file.
-     * <br /><b>Warning :</b> If a file exists at the new location, then it will be
+     * <br><b>Warning :</b> If a file exists at the new location, then it will be
      * overwritten.  Moving files or directories across devices may not be
      * possible.
      * @param fromPath The full path to the original file (using / on all systems)
@@ -275,7 +275,7 @@ public class File {
     /**
      * Copy the specified file to another file.
      * The new file does not need to exist, it will be created if required.
-     * <br /><b>Warning :</b> If the new file already exists, its contents will be overwritten.
+     * <br><b>Warning :</b> If the new file already exists, its contents will be overwritten.
      * @param fromPath The full path to the original file (using / on all systems)
      * @param toPath The full path to the new file (using / on all systems)
      * @param perms Access permissions for the new file if it is created.
@@ -562,10 +562,10 @@ public class File {
 
     /**
      * Set the specified file's permission bits.
-     * <br /><b>Warning :</b> Some platforms may not be able to apply all of the
+     * <br><b>Warning :</b> Some platforms may not be able to apply all of the
      * available permission bits; APR_INCOMPLETE will be returned if some
      * permissions are specified which could not be set.
-     * <br /><b>Warning :</b> Platforms which do not implement this feature will return
+     * <br><b>Warning :</b> Platforms which do not implement this feature will return
      * APR_ENOTIMPL.
      * @param fname The file (name) to apply the permissions to.
      * @param perms The permission bits to apply to the file.
@@ -579,7 +579,7 @@ public class File {
      *      of the file permissions, because the operations to provide these
      *      attributes are platform specific and may involve more than simply
      *      setting permission bits.
-     * <br /><b>Warning :</b> Platforms which do not implement this feature will return
+     * <br><b>Warning :</b> Platforms which do not implement this feature will return
      *      APR_ENOTIMPL.
      * @param fname The full path to the file (using / on all systems)
      * @param attributes Or'd combination of
@@ -595,7 +595,7 @@ public class File {
 
     /**
      * Set the mtime of the specified file.
-     * <br /><b>Warning :</b> Platforms which do not implement this feature will return
+     * <br><b>Warning :</b> Platforms which do not implement this feature will return
      *      APR_ENOTIMPL.
      * @param fname The full path to the file (using / on all systems)
      * @param mtime The mtime to apply to the file in microseconds

==================================================
Lock.java
index af13fbfe9e..60a4e8f741 100644
--- a/java/org/apache/tomcat/jni/Global.java
+++ b/java/org/apache/tomcat/jni/Global.java
@@ -29,7 +29,7 @@ public class Global {
      * this API if only cross-process or cross-thread mutual exclusion is
      * required. See apr_proc_mutex.h and apr_thread_mutex.h for more
      * specialized lock routines.
-     * <br /><b>Warning :</b> Check APR_HAS_foo_SERIALIZE defines to see if the platform supports
+     * <br><b>Warning :</b> Check APR_HAS_foo_SERIALIZE defines to see if the platform supports
      *          APR_LOCK_foo.  Only APR_LOCK_DEFAULT is portable.
      * @param fname A file name to use if the lock mechanism requires one.  This
      *        argument should always be provided.  The lock code itself will

==================================================
Multicast.java
index 209e056e6f..0c8aa05b5f 100644
--- a/java/org/apache/tomcat/jni/Lock.java
+++ b/java/org/apache/tomcat/jni/Lock.java
@@ -25,7 +25,7 @@ public class Lock {
 
     /**
      * Enumerated potential types for APR process locking methods
-     * <br /><b>Warning :</b> Check APR_HAS_foo_SERIALIZE defines to see if the platform supports
+     * <br><b>Warning :</b> Check APR_HAS_foo_SERIALIZE defines to see if the platform supports
      *          APR_LOCK_foo.  Only APR_LOCK_DEFAULT is portable.
      */
 
@@ -38,7 +38,7 @@ public class Lock {
 
     /**
      * Create and initialize a mutex that can be used to synchronize processes.
-     * <br /><b>Warning :</b> Check APR_HAS_foo_SERIALIZE defines to see if the platform supports
+     * <br><b>Warning :</b> Check APR_HAS_foo_SERIALIZE defines to see if the platform supports
      *          APR_LOCK_foo.  Only APR_LOCK_DEFAULT is portable.
      * @param fname A file name to use if the lock mechanism requires one.  This
      *        argument should always be provided.  The lock code itself will

==================================================
Pool.java
index 579a161e1d..edbb300a4f 100644
--- a/java/org/apache/tomcat/jni/Multicast.java
+++ b/java/org/apache/tomcat/jni/Multicast.java
@@ -52,7 +52,7 @@ public class Multicast {
      * Set the Multicast Time to Live (ttl) for a multicast transmission.
      * @param sock The socket to set the multicast ttl
      * @param ttl Time to live to Assign. 0-255, default=1
-     * <br /><b>Remark :</b> If the TTL is 0, packets will only be seen
+     * <br><b>Remark :</b> If the TTL is 0, packets will only be seen
      * by sockets on the local machine,
      * and only when multicast loopback is enabled.
      */

==================================================
Procattr.java
index b036e9cafa..617b1b72ef 100644
--- a/java/org/apache/tomcat/jni/Pool.java
+++ b/java/org/apache/tomcat/jni/Pool.java
@@ -137,7 +137,7 @@ public class Pool {
      * @param data The user data associated with the pool.
      * @param key The key to use for association
      * @param pool The current pool
-     * <br /><b>Warning :</b>
+     * <br><b>Warning :</b>
      * The data to be attached to the pool should have a life span
      * at least as long as the pool it is being attached to.
      * Object attached to the pool will be globally referenced

==================================================
SSL.java
index e522ca635d..7f6869cde6 100644
--- a/java/org/apache/tomcat/jni/Procattr.java
+++ b/java/org/apache/tomcat/jni/Procattr.java
@@ -42,7 +42,7 @@ public class Procattr {
     public static native int ioSet(long attr, int in, int out, int err);
     /**
      * Set the child_in and/or parent_in values to existing apr_file_t values.
-     * <br />
+     * <br>
      * This is NOT a required initializer function. This is
      * useful if you have already opened a pipe (or multiple files)
      * that you wish to use, perhaps persistently across multiple
@@ -57,7 +57,7 @@ public class Procattr {
 
     /**
      * Set the child_out and parent_out values to existing apr_file_t values.
-     * <br />
+     * <br>
      * This is NOT a required initializer function. This is
      * useful if you have already opened a pipe (or multiple files)
      * that you wish to use, perhaps persistently across multiple
@@ -70,7 +70,7 @@ public class Procattr {
 
     /**
      * Set the child_err and parent_err values to existing apr_file_t values.
-     * <br />
+     * <br>
      * This is NOT a required initializer function. This is
      * useful if you have already opened a pipe (or multiple files)
      * that you wish to use, perhaps persistently across multiple
@@ -117,7 +117,7 @@ public class Procattr {
      * @param attr The procattr describing the child process to be created.
      * @param chk Flag to indicate whether or not extra work should be done
      *            to try to report failures to the caller.
-     * <br />
+     * <br>
      * This flag only affects apr_proc_create() on platforms where
      * fork() is used.  This leads to extra overhead in the calling
      * process, but that may help the application handle such
@@ -140,7 +140,7 @@ public class Procattr {
      * @param attr The procattr describing the child process to be created.
      * @param pool The the pool to use.
      * @param o The Object to call in the child process.
-     * <br />
+     * <br>
      * At the present time, it will only be called from apr_proc_create()
      * on platforms where fork() is used.  It will never be called on other
      * platforms, on those platforms apr_proc_create() will return the error

==================================================
SSLContext.java
index 9e85a828e2..73f8ff64fd 100644
--- a/java/org/apache/tomcat/jni/SSL.java
+++ b/java/org/apache/tomcat/jni/SSL.java
@@ -317,7 +317,7 @@ public final class SSL {
 
     /**
      * Generate temporary RSA key.
-     * <br />
+     * <br>
      * Index can be one of:
      * <PRE>
      * SSL_TMP_KEY_RSA_512
@@ -333,7 +333,7 @@ public final class SSL {
 
     /**
      * Load temporary DSA key from file
-     * <br />
+     * <br>
      * Index can be one of:
      * <PRE>
      * SSL_TMP_KEY_DH_512

==================================================
SSLSocket.java
index c97790f926..dbdb93b51a 100644
--- a/java/org/apache/tomcat/jni/SSLContext.java
+++ b/java/org/apache/tomcat/jni/SSLContext.java
@@ -61,7 +61,7 @@ public final class SSLContext {
 
     /**
      * Associate BIOCallback for input or output data capture.
-     * <br />
+     * <br>
      * First word in the output string will contain error
      * level in the form:
      * <PRE>
@@ -98,11 +98,11 @@ public final class SSLContext {
      * Sets the "quiet shutdown" flag for <b>ctx</b> to be
      * <b>mode</b>. SSL objects created from <b>ctx</b> inherit the
      * <b>mode</b> valid at the time and may be 0 or 1.
-     * <br />
+     * <br>
      * Normally when a SSL connection is finished, the parties must send out
      * "close notify" alert messages using L<SSL_shutdown(3)|SSL_shutdown(3)>
      * for a clean shutdown.
-     * <br />
+     * <br>
      * When setting the "quiet shutdown" flag to 1, <b>SSL.shutdown</b>
      * will set the internal flags to SSL_SENT_SHUTDOWN|SSL_RECEIVED_SHUTDOWN.
      * (<b>SSL_shutdown</b> then behaves like called with
@@ -117,7 +117,7 @@ public final class SSLContext {
 
     /**
      * Cipher Suite available for negotiation in SSL handshake.
-     * <br />
+     * <br>
      * This complex directive uses a colon-separated cipher-spec string consisting
      * of OpenSSL cipher specifications to configure the Cipher Suite the client
      * is permitted to negotiate in the SSL handshake phase. Notice that this
@@ -135,13 +135,13 @@ public final class SSLContext {
     /**
      * Set File of concatenated PEM-encoded CA CRLs or
      * directory of PEM-encoded CA Certificates for Client Auth
-     * <br />
+     * <br>
      * This directive sets the all-in-one file where you can assemble the
      * Certificate Revocation Lists (CRL) of Certification Authorities (CA)
      * whose clients you deal with. These are used for Client Authentication.
      * Such a file is simply the concatenation of the various PEM-encoded CRL
      * files, in order of preference.
-     * <br />
+     * <br>
      * The files in this directory have to be PEM-encoded and are accessed through
      * hash filenames. So usually you can't just place the Certificate files there:
      * you also have to create symbolic links named hash-value.N. And you should
@@ -157,14 +157,14 @@ public final class SSLContext {
 
     /**
      * Set File of PEM-encoded Server CA Certificates
-     * <br />
+     * <br>
      * This directive sets the optional all-in-one file where you can assemble the
      * certificates of Certification Authorities (CA) which form the certificate
      * chain of the server certificate. This starts with the issuing CA certificate
      * of of the server certificate and can range up to the root CA certificate.
      * Such a file is simply the concatenation of the various PEM-encoded CA
      * Certificate files, usually in certificate chain order.
-     * <br />
+     * <br>
      * But be careful: Providing the certificate chain works only if you are using
      * a single (either RSA or DSA) based server certificate. If you are using a
      * coupled RSA+DSA certificate pair, this will work only if actually both
@@ -180,7 +180,7 @@ public final class SSLContext {
 
     /**
      * Set Certificate
-     * <br />
+     * <br>
      * Point setCertificateFile at a PEM encoded certificate.  If
      * the certificate is encrypted, then you will be prompted for a
      * pass phrase.  Note that a kill -HUP will prompt again. A test
@@ -188,7 +188,7 @@ public final class SSLContext {
      * built time. Keep in mind that if you've both a RSA and a DSA
      * certificate you can configure both in parallel (to also allow
      * the use of DSA ciphers, etc.)
-     * <br />
+     * <br>
      * If the key is not combined with the certificate, use key param
      * to point at the key file.  Keep in mind that if
      * you've both a RSA and a DSA private key you can configure
@@ -208,14 +208,14 @@ public final class SSLContext {
     /**
      * Set File and Directory of concatenated PEM-encoded CA Certificates
      * for Client Auth
-     * <br />
+     * <br>
      * This directive sets the all-in-one file where you can assemble the
      * Certificates of Certification Authorities (CA) whose clients you deal with.
      * These are used for Client Authentication. Such a file is simply the
      * concatenation of the various PEM-encoded Certificate files, in order of
      * preference. This can be used alternatively and/or additionally to
      * path.
-     * <br />
+     * <br>
      * The files in this directory have to be PEM-encoded and are accessed through
      * hash filenames. So usually you can't just place the Certificate files there:
      * you also have to create symbolic links named hash-value.N. And you should
@@ -239,7 +239,7 @@ public final class SSLContext {
 
     /**
      * Set SSL connection shutdown type
-     * <br />
+     * <br>
      * The following levels are available for level:
      * <PRE>
      * SSL_SHUTDOWN_TYPE_STANDARD
@@ -254,7 +254,7 @@ public final class SSLContext {
     /**
      * Set Type of Client Certificate verification and Maximum depth of CA Certificates
      * in Client Certificate verification.
-     * <br />
+     * <br>
      * This directive sets the Certificate verification level for the Client
      * Authentication. Notice that this directive can be used both in per-server
      * and per-directory context. In per-server context it applies to the client
@@ -262,7 +262,7 @@ public final class SSLContext {
      * is established. In per-directory context it forces a SSL renegotiation with
      * the reconfigured client verification level after the HTTP request was read
      * but before the HTTP response is sent.
-     * <br />
+     * <br>
      * The following levels are available for level:
      * <PRE>
      * SSL_CVERIFY_NONE           - No client Certificate is required at all
@@ -271,7 +271,7 @@ public final class SSLContext {
      * SSL_CVERIFY_OPTIONAL_NO_CA - The client may present a valid Certificate
      *                              but it need not to be (successfully) verifiable
      * </PRE>
-     * <br />
+     * <br>
      * The depth actually is the maximum number of intermediate certificate issuers,
      * i.e. the number of CA certificates which are max allowed to be followed while
      * verifying the client certificate. A depth of 0 means that self-signed client

==================================================
Shm.java
index bc7c2a781b..82a4b98a26 100644
--- a/java/org/apache/tomcat/jni/SSLSocket.java
+++ b/java/org/apache/tomcat/jni/SSLSocket.java
@@ -57,10 +57,10 @@ public class SSLSocket {
     /**
      * Set Type of Client Certificate verification and Maximum depth of CA
      * Certificates in Client Certificate verification.
-     * <br />
+     * <br>
      * This is used to change the verification level for a connection prior to
      * starting a re-negotiation.
-     * <br />
+     * <br>
      * The following levels are available for level:
      * <PRE>
      * SSL_CVERIFY_NONE           - No client Certificate is required at all
@@ -71,7 +71,7 @@ public class SSLSocket {
      *                              but it need not to be (successfully)
      *                              verifiable
      * </PRE>
-     * <br />
+     * <br>
      * @param sock  The socket to change.
      * @param level Type of Client Certificate verification.
      */

==================================================
Socket.java
index c8df841a4d..6ccf9cf5ca 100644
--- a/java/org/apache/tomcat/jni/Shm.java
+++ b/java/org/apache/tomcat/jni/Shm.java
@@ -27,15 +27,15 @@ public class Shm {
 
     /**
      * Create and make accessible a shared memory segment.
-     * <br />
-     * A note about Anonymous vs. Named shared memory segments:<br />
+     * <br>
+     * A note about Anonymous vs. Named shared memory segments:<br>
      *         Not all platforms support anonymous shared memory segments, but in
      *         some cases it is preferred over other types of shared memory
      *         implementations. Passing a NULL 'file' parameter to this function
      *         will cause the subsystem to use anonymous shared memory segments.
      *         If such a system is not available, APR_ENOTIMPL is returned.
-     * <br />
-     * A note about allocation sizes:<br />
+     * <br>
+     * A note about allocation sizes:<br>
      *         On some platforms it is necessary to store some metainformation
      *         about the segment within the actual segment. In order to supply
      *         the caller with the requested size it may be necessary for the
@@ -55,7 +55,7 @@ public class Shm {
 
     /**
      * Remove shared memory segment associated with a filename.
-     * <br />
+     * <br>
      * This function is only supported on platforms which support
      * name-based shared memory segments, and will return APR_ENOTIMPL on
      * platforms without such support.

==================================================
Status.java
index 1a220a2654..7cc9b20885 100644
--- a/java/org/apache/tomcat/jni/Socket.java
+++ b/java/org/apache/tomcat/jni/Socket.java
@@ -117,7 +117,7 @@ public class Socket {
 
     /**
      * Shutdown either reading, writing, or both sides of a socket.
-     * <br />
+     * <br>
      * This does not actually close the socket descriptor, it just
      *      controls which calls are still valid on the socket.
      * @param thesocket The socket to close
@@ -499,7 +499,7 @@ public class Socket {
     /**
      * Send a file from an open file descriptor to a socket, along with
      * optional headers and trailers.
-     * <br />
+     * <br>
      * This functions acts like a blocking write by default.  To change
      *         this behavior, use apr_socket_timeout_set() or the
      *         APR_SO_NONBLOCK socket option.

==================================================
Time.java
index 6b694714eb..bb7979749b 100644
--- a/java/org/apache/tomcat/jni/Status.java
+++ b/java/org/apache/tomcat/jni/Status.java
@@ -183,7 +183,7 @@ public class Status {
     private static native boolean is(int err, int idx);
     /**
      * APR_STATUS_IS Status Value Tests
-     * <br /><b>Warning :</b> For any particular error condition, more than one of these tests
+     * <br><b>Warning :</b> For any particular error condition, more than one of these tests
      *      may match. This is because platform-specific error codes may not
      *      always match the semantics of the POSIX codes these tests (and the
      *      corresponding APR error codes) are named after. A notable example

==================================================
ByteChunk.java
index 2eceb6528f..02e6d49de5 100644
--- a/java/org/apache/tomcat/jni/Time.java
+++ b/java/org/apache/tomcat/jni/Time.java
@@ -64,7 +64,7 @@ public class Time {
 
     /**
      * Sleep for the specified number of micro-seconds.
-     * <br /><b>Warning :</b> May sleep for longer than the specified time.
+     * <br><b>Warning :</b> May sleep for longer than the specified time.
      * @param t desired amount of time to sleep.
      */
     public static native void sleep(long t);

==================================================
Cookie.java
index f9dc4632b5..0ea122b764 100644
--- a/java/org/apache/tomcat/util/buf/ByteChunk.java
+++ b/java/org/apache/tomcat/util/buf/ByteChunk.java
@@ -689,7 +689,7 @@ public final class ByteChunk implements Cloneable, Serializable {
      * Returns the first instance of the given character in this ByteChunk
      * starting at the specified byte. If the character is not found, -1 is
      * returned.
-     * <br/>
+     * <br>
      * NOTE: This only works for characters in the range 0-127.
      *
      * @param c         The character
@@ -705,7 +705,7 @@ public final class ByteChunk implements Cloneable, Serializable {
     /**
      * Returns the first instance of the given character in the given byte array
      * between the specified start and end.
-     * <br/>
+     * <br>
      * NOTE: This only works for characters in the range 0-127.
      *
      * @param bytes The byte array to search

==================================================
JSSESocketFactory.java
index 997cf6e572..b20b55586f 100644
--- a/java/org/apache/tomcat/util/http/parser/Cookie.java
+++ b/java/org/apache/tomcat/util/http/parser/Cookie.java
@@ -43,7 +43,7 @@ import org.apache.tomcat.util.res.StringManager;
  *       be quoted even though / is not permitted in a token.</li>
  * </ul>
  *
- * <p>Implementation note:<br/>
+ * <p>Implementation note:<br>
  * This class has been carefully tuned to ensure that it has equal or better
  * performance than the original Netscape/RFC2109 cookie parser. Before
  * committing and changes, ensure that the TesterCookiePerformance unit test

==================================================
Bayeux.java
index 9e9fdbaa90..6c2a8c1de5 100644
--- a/java/org/apache/tomcat/util/net/jsse/JSSESocketFactory.java
+++ b/java/org/apache/tomcat/util/net/jsse/JSSESocketFactory.java
@@ -70,7 +70,7 @@ import org.apache.tomcat.util.res.StringManager;
 
 /**
  * SSL server socket factory. It <b>requires</b> a valid RSA key and
- * JSSE.<br/>
+ * JSSE.<br>
  * keytool -genkey -alias tomcat -keyalg RSA</br>
  * Use "changeit" as password (this is the default we use).
  *

==================================================
DataFilter.java
index a4706341c8..6c54fa66d7 100644
--- a/modules/bayeux/java/org/apache/cometd/bayeux/Bayeux.java
+++ b/modules/bayeux/java/org/apache/cometd/bayeux/Bayeux.java
@@ -18,27 +18,27 @@ package org.apache.cometd.bayeux;
 
 import java.util.List;
 
-/** Bayeux Interface.<br/>
+/** Bayeux Interface.<br>
  * This interface represents the server side API for the Bayeux messaging protocol.
- * Bayeux is a simple subscribe/publish/receive methodology, not far from JMS, but much simplified.<br/>
- * It is used both by the actual implementation and by server side clients.<br/>
+ * Bayeux is a simple subscribe/publish/receive methodology, not far from JMS, but much simplified.<br>
+ * It is used both by the actual implementation and by server side clients.<br>
  * Server side clients use this to create, retrieve and subscribe to channels.
  * Server side clients are represented, just like remote clients, through the Client interface.
- * <br/>
+ * <br>
  * The Bayeux implementations is intended to be thread safe and multiple threads may simultaneously call Bayeux methods.
- * <br/>
+ * <br>
  * The Bayeux object, is the starting point for any cometd application relying on the Bayeux object.
  * Dependent on the container, the Bayeux object will be stored in the <code>javax.servlet.ServletContext</code> object
- * as an attribute under the name <code>Bayeux.DOJOX_COMETD_BAYEUX</code><br/>
- * To retrieve this object, one would simply call<br/>
+ * as an attribute under the name <code>Bayeux.DOJOX_COMETD_BAYEUX</code><br>
+ * To retrieve this object, one would simply call<br>
  * <code>Bayeux bx = (Bayeux)getServletContext().getAttribute(Bayeux.DOJOX_COMETD_BAYEUX);
- * <br/><br/>
+ * <br><br>
  * The Bayeux protocol is pretty straight forward and includes a bunch of messaging that is not needed to be known to clients,
  * both server side and remote clients.
  * This object gets initialized by a container dependent servlet, and the servlet then handles all Bayeux communication from the client.
- * Remote messsages are delivered to channels, and to server side clients using the <code>Listener</code> interface.<br/>
- * <br/>
- * A <code>Bayeux session</code> is active as long as the webapp hosting the Bayeux object is active.<br/>
+ * Remote messsages are delivered to channels, and to server side clients using the <code>Listener</code> interface.<br>
+ * <br>
+ * A <code>Bayeux session</code> is active as long as the webapp hosting the Bayeux object is active.<br>
  * When the webapplication shuts down, the Bayeux object will unsubscribe all clients and remove all the active channels.
  *
  * @author Greg Wilkins
@@ -164,7 +164,7 @@ public interface Bayeux {
     public List<Client> getClients();
 
     /**
-     * Returns true if a client with the given id exists.<br/>
+     * Returns true if a client with the given id exists.<br>
      * Same as executing <code>getClient(id)!=null</code>.
      * @param clientId String
      * @return boolean - true if the client exists
@@ -185,7 +185,7 @@ public interface Bayeux {
     /**
      * Returns the channel for a given channel id.
      * If the channel doesn't exist, and the <code>create</code> parameter is set to true,
-     * the channel will be created and added to the list of active channels.<br/>
+     * the channel will be created and added to the list of active channels.<br>
      * if <code>create</code> is set to false, and the channel doesn't exist, null will be returned.
      * @param channelId String - the id of the channel to be retrieved or created
      * @param create boolean - true if the Bayeux impl should create the channel
@@ -211,7 +211,7 @@ public interface Bayeux {
 
     /**
      * returns true if a channel with the given channelId exists.
-     * <br/>Same as executing <code>Bayeux.getChannel(channelId,false)!=null</code>
+     * <br>Same as executing <code>Bayeux.getChannel(channelId,false)!=null</code>
      * @param channelId String
      * @return boolean - true if the channel exists.
      */

==================================================
Listener.java
index bd04b01334..8111a9cfa0 100644
--- a/modules/bayeux/java/org/apache/cometd/bayeux/DataFilter.java
+++ b/modules/bayeux/java/org/apache/cometd/bayeux/DataFilter.java
@@ -17,10 +17,10 @@
 package org.apache.cometd.bayeux;
 
 /**
- * Data Filter<br/>
+ * Data Filter<br>
  * Data filters are used to transform data as it is sent to a Channel.
  * Messages are filtered as the message is published to a channel, invoking the
- * {@link Channel#publish(Message)} method.<br/>
+ * {@link Channel#publish(Message)} method.<br>
  * This method gets invoked in two different scenarios, the first being when a message is received from
  * a remote client, and the Bayeux implementation invokes the publish method directly.
  * The second scenario is when a local client invokes {@link Channel#publish(Message)} directly in the local JVM.

==================================================
Message.java
index 50e5651477..089a8bdd37 100644
--- a/modules/bayeux/java/org/apache/cometd/bayeux/Listener.java
+++ b/modules/bayeux/java/org/apache/cometd/bayeux/Listener.java
@@ -17,7 +17,7 @@
 package org.apache.cometd.bayeux;
 
 /**
- * Cometd Listener interface.<br/>
+ * Cometd Listener interface.<br>
  * For local clients, in order to receive messages, they pass in a callback object
  * when the local client is created using the {@link Bayeux#newClient(String,Listener)} method.
  * This callback object, implementing the Listener interface, is used to deliver messages to local, in JVM, clients.

==================================================
BayeuxRequest.java
index 7dc7d07a39..3544561534 100644
--- a/modules/bayeux/java/org/apache/cometd/bayeux/Message.java
+++ b/modules/bayeux/java/org/apache/cometd/bayeux/Message.java
@@ -19,7 +19,7 @@ package org.apache.cometd.bayeux;
 import java.util.Map;
 
 /**
- * A Bayeux Message<br/>
+ * A Bayeux Message<br>
  * A Bayeux message is a Map of String/Object key value pairs representing the data in the message.
  * The message contains information about the channel it was published through and who the sender was
  *

==================================================
DataSource.java
index d08b713d02..43e2b4e7f3 100644
--- a/modules/bayeux/java/org/apache/tomcat/bayeux/BayeuxRequest.java
+++ b/modules/bayeux/java/org/apache/tomcat/bayeux/BayeuxRequest.java
@@ -35,7 +35,7 @@ public interface BayeuxRequest {
      * Validates a specific request.
      * This method must be called prior to process()
      * as a request can do pre processing in the validate method.
-     * <br/>
+     * <br>
      * Should the validation fail, an error object is returned
      * containing an error message, and potentially a stack trace
      * if an exception was generated

==================================================
DataSourceFactory.java
index ad2ac0aa01..b002fbcbe9 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/DataSource.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/DataSource.java
@@ -63,7 +63,7 @@ public class DataSource extends DataSourceProxy implements javax.sql.DataSource,
     protected volatile ObjectName oname = null;
 
     /**
-     * Unregisters the underlying connection pool mbean.<br/>
+     * Unregisters the underlying connection pool mbean.<br>
      * {@inheritDoc}
      */
     @Override
@@ -72,7 +72,7 @@ public class DataSource extends DataSourceProxy implements javax.sql.DataSource,
     }
 
     /**
-     * no-op<br/>
+     * no-op<br>
      * {@inheritDoc}
      */
     @Override
@@ -82,7 +82,7 @@ public class DataSource extends DataSourceProxy implements javax.sql.DataSource,
 
 
     /**
-     * no-op<br/>
+     * no-op<br>
      * {@inheritDoc}
      */
     @Override
@@ -91,7 +91,7 @@ public class DataSource extends DataSourceProxy implements javax.sql.DataSource,
     }
 
     /**
-     * If the connection pool MBean exists, it will be registered during this operation.<br/>
+     * If the connection pool MBean exists, it will be registered during this operation.<br>
      * {@inheritDoc}
      */
     @Override

==================================================
DataSourceProxy.java
index bd12438547..0f6c89ab45 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/DataSourceFactory.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/DataSourceFactory.java
@@ -40,9 +40,9 @@ import org.apache.juli.logging.LogFactory;
  * <code>RefAddr</code> values of the specified <code>Reference</code>,
  * which must match the names and data types of the
  * <code>BasicDataSource</code> bean properties.</p>
- * <br/>
- * Properties available for configuration:<br/>
- * <a href="http://commons.apache.org/dbcp/configuration.html">Commons DBCP properties</a><br/>
+ * <br>
+ * Properties available for configuration:<br>
+ * <a href="http://commons.apache.org/dbcp/configuration.html">Commons DBCP properties</a><br>
  *<ol>
  *  <li>initSQL - A query that gets executed once, right after the connection is established.</li>
  *  <li>testOnConnect - run validationQuery after connection has been established.</li>

==================================================
FairBlockingQueue.java
index a1144adc5a..5997428094 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/DataSourceProxy.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/DataSourceProxy.java
@@ -35,7 +35,7 @@ import org.apache.tomcat.jdbc.pool.PoolProperties.InterceptorDefinition;
  *
  * The DataSource proxy lets us implements methods that don't exist in the current
  * compiler JDK but might be methods that are part of a future JDK DataSource interface.
- * <br/>
+ * <br>
  * It's a trick to work around compiler issues when implementing interfaces. For example,
  * I could put in Java 6 methods of javax.sql.DataSource here, and compile it with JDK 1.5
  * and still be able to run under Java 6 without getting NoSuchMethodException.

==================================================
JdbcInterceptor.java
index 75e40b2b6d..c96249c44a 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/FairBlockingQueue.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/FairBlockingQueue.java
@@ -34,7 +34,7 @@ import java.util.concurrent.locks.ReentrantLock;
  * invocations to method poll(...) will get handed out in the order they were received.
  * Locking is fine grained, a shared lock is only used during the first level of contention, waiting is done in a
  * lock per thread basis so that order is guaranteed once the thread goes into a suspended monitor state.
- * <br/>
+ * <br>
  * Not all of the methods of the {@link java.util.concurrent.BlockingQueue} are implemented.
  *
  */

==================================================
MultiLockFairBlockingQueue.java
index 18e6d544d9..e4a693566d 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/JdbcInterceptor.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/JdbcInterceptor.java
@@ -26,7 +26,7 @@ import org.apache.tomcat.jdbc.pool.PoolProperties.InterceptorProperty;
  * Abstract class that is to be extended for implementations of interceptors.
  * Everytime an operation is called on the {@link java.sql.Connection} object the
  * {@link #invoke(Object, Method, Object[])} method on the interceptor will be called.
- * Interceptors are useful to change or improve behavior of the connection pool.<br/>
+ * Interceptors are useful to change or improve behavior of the connection pool.<br>
  * Interceptors can receive a set of properties. Each sub class is responsible for parsing the properties during runtime when they
  * are needed or simply override the {@link #setProperties(Map)} method.
  * Properties arrive in a key-value pair of Strings as they were received through the configuration.
@@ -155,7 +155,7 @@ public abstract class JdbcInterceptor implements InvocationHandler {
      * Gets called each time the connection is borrowed from the pool
      * This means that if an interceptor holds a reference to the connection
      * the interceptor can be reused for another connection.
-     * <br/>
+     * <br>
      * This method may be called with null as both arguments when we are closing down the connection.
      * @param parent - the connection pool owning the connection
      * @param con - the pooled connection

==================================================
PoolConfiguration.java
index 6f37da68b9..e1572f1e3d 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/MultiLockFairBlockingQueue.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/MultiLockFairBlockingQueue.java
@@ -38,7 +38,7 @@ import java.util.concurrent.locks.ReentrantLock;
  * invocations to method poll(...) will get handed out in the order they were received.
  * Locking is fine grained, a shared lock is only used during the first level of contention, waiting is done in a
  * lock per thread basis so that order is guaranteed once the thread goes into a suspended monitor state.
- * <br/>
+ * <br>
  * Not all of the methods of the {@link java.util.concurrent.BlockingQueue} are implemented.
  *
  */

==================================================
TestMain.java
index 4ac3891379..0cd1df4973 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/PoolConfiguration.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/PoolConfiguration.java
@@ -86,7 +86,7 @@ public interface PoolConfiguration {
 
     /**
      * The connection properties that will be sent to the JDBC driver when establishing new connections.
-     * Format of the string is [propertyName=property;] <br/>
+     * Format of the string is [propertyName=property;] <br>
      * NOTE - The "user" and "password" properties will be passed explicitly, so they do not need to be included here.
      * The default value is null.
      */

==================================================
