3990c93cd90a535f4120f4668f209e57ac9f1b09
==================================================
Pull up hasDataToWrite()
==================================================
Mark Emlyn
==================================================
Thu May 2 20:58:25 2013 +0000
==================================================
AbstractOutputBuffer.java
Pull up hasDataToWrite()

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1478539 13f79535-47bb-0310-9956-ffa450edef68



==================================================
InternalAprOutputBuffer.java
index d9ccca13e5..7343861354 100644
--- a/java/org/apache/coyote/http11/AbstractOutputBuffer.java
+++ b/java/org/apache/coyote/http11/AbstractOutputBuffer.java
@@ -20,6 +20,7 @@ import java.io.IOException;
 import java.nio.ByteBuffer;
 import java.security.AccessController;
 import java.security.PrivilegedAction;
+import java.util.Iterator;
 import java.util.concurrent.LinkedBlockingDeque;
 import java.util.concurrent.atomic.AtomicBoolean;
 
@@ -603,7 +604,8 @@ public abstract class AbstractOutputBuffer<S> implements OutputBuffer {
 
     //------------------------------------------------------ Non-blocking writes
 
-    protected abstract boolean hasDataToWrite();
+    protected abstract boolean hasMoreDataToFlush();
+
 
     /**
      * Writes any remaining buffered data.
@@ -640,6 +642,23 @@ public abstract class AbstractOutputBuffer<S> implements OutputBuffer {
     }
 
 
+    public final boolean hasDataToWrite() {
+        return hasMoreDataToFlush() || hasBufferedData();
+    }
+
+
+    private boolean hasBufferedData() {
+        boolean result = false;
+        if (bufferedWrites!=null) {
+            Iterator<ByteBufferHolder> iter = bufferedWrites.iterator();
+            while (!result && iter.hasNext()) {
+                result = iter.next().hasData();
+            }
+        }
+        return result;
+    }
+
+
     protected static class ByteBufferHolder {
         private final ByteBuffer buf;
         private final AtomicBoolean flipped;

==================================================
InternalNioOutputBuffer.java
index 919ef8f417..06dd796bac 100644
--- a/java/org/apache/coyote/http11/InternalAprOutputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalAprOutputBuffer.java
@@ -168,7 +168,7 @@ public class InternalAprOutputBuffer extends AbstractOutputBuffer<Long> {
     //-------------------------------------------------- Non-blocking IO methods
 
     @Override
-    protected boolean hasDataToWrite() {
+    protected boolean hasMoreDataToFlush() {
         // TODO
         return false;
     }

==================================================
InternalOutputBuffer.java
index 78ff9ac6ab..5a1ad1ca53 100644
--- a/java/org/apache/coyote/http11/InternalNioOutputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalNioOutputBuffer.java
@@ -269,7 +269,8 @@ public class InternalNioOutputBuffer extends AbstractOutputBuffer<NioChannel> {
         return dataLeft;
     }
 
-    private boolean hasMoreDataToFlush() {
+    @Override
+    protected boolean hasMoreDataToFlush() {
         return (flipped && socket.getBufHandler().getWriteBuffer().remaining()>0) ||
         (!flipped && socket.getBufHandler().getWriteBuffer().position() > 0);
     }
@@ -290,25 +291,6 @@ public class InternalNioOutputBuffer extends AbstractOutputBuffer<NioChannel> {
     }
 
 
-    //-------------------------------------------------- Non-blocking IO methods
-
-    private boolean hasBufferedData() {
-        boolean result = false;
-        if (bufferedWrites!=null) {
-            Iterator<ByteBufferHolder> iter = bufferedWrites.iterator();
-            while (!result && iter.hasNext()) {
-                result = iter.next().hasData();
-            }
-        }
-        return result;
-    }
-
-    @Override
-    public boolean hasDataToWrite() {
-        return hasMoreDataToFlush() || hasBufferedData();
-    }
-
-
     // ----------------------------------- OutputStreamOutputBuffer Inner Class
 
     /**

==================================================
