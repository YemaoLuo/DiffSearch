ac6d7385f221586c484e3cb886a81a89a06cf4bb
==================================================
Remainder of fix for https://bz.apache.org/bugzilla/show_bug.cgi?id=59219
==================================================
Mark Thomas
==================================================
Mon Apr 18 20:35:27 2016 +0000
==================================================
ErrorReportValve.java
Remainder of fix for https://bz.apache.org/bugzilla/show_bug.cgi?id=59219
If an exception is throw during a dispatch(), trigger the Async error handling process

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1739817 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AsyncStateMachine.java
index 47af60a52a..d61211e793 100644
--- a/java/org/apache/catalina/valves/ErrorReportValve.java
+++ b/java/org/apache/catalina/valves/ErrorReportValve.java
@@ -98,11 +98,13 @@ public class ErrorReportValve extends ValveBase {
         Throwable throwable = (Throwable) request.getAttribute(RequestDispatcher.ERROR_EXCEPTION);
 
         // If an async request is in progress and is not going to end once this
-        // container thread finishes, do not process the error page here but
-        // trigger an error dispatch so the additional async processing such as
-        // firing onError() occurs.
+        // container thread finishes, do not process any error page here.
         if (request.isAsync() && !request.isAsyncCompleting()) {
-            if (throwable != null) {
+            // If an async dispatch is in progress the error handling in the
+            // CoyoteAdapter will trigger the necessary processing. It is only
+            // necessary to trigger it here if async is starting (i.e. this is
+            // the post-processing of the service() method)
+            if (throwable != null && request.isAsyncDispatching()) {
                 request.getAsyncContextInternal().setErrorState(throwable, true);
             }
             return;

==================================================
