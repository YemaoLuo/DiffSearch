39d70e580a160610f789a9439ea9205bc9e0a6df
==================================================
Remove unnecessary casts
==================================================
Konstantin Kolinko
==================================================
Sat Feb 9 00:58:08 2013 +0000
==================================================
ConnectorSF.java
Remove unnecessary casts

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1444303 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ConnectorStoreAppender.java
index f030d28b7f..f70b33e7f9 100644
--- a/java/org/apache/catalina/storeconfig/ConnectorSF.java
+++ b/java/org/apache/catalina/storeconfig/ConnectorSF.java
@@ -19,7 +19,6 @@ package org.apache.catalina.storeconfig;
 
 import java.io.PrintWriter;
 
-import org.apache.catalina.Lifecycle;
 import org.apache.catalina.LifecycleListener;
 import org.apache.catalina.connector.Connector;
 
@@ -43,11 +42,8 @@ public class ConnectorSF extends StoreFactoryBase {
         if (aConnector instanceof Connector) {
             Connector connector = (Connector) aConnector;
             // Store nested <Listener> elements
-            if (connector instanceof Lifecycle) {
-                LifecycleListener listeners[] = ((Lifecycle) connector)
-                        .findLifecycleListeners();
-                storeElementArray(aWriter, indent, listeners);
-            }
+            LifecycleListener listeners[] = connector.findLifecycleListeners();
+            storeElementArray(aWriter, indent, listeners);
         }
     }
 

==================================================
StandardContextSF.java
index 1aa69d3779..12c7d0d84b 100644
--- a/java/org/apache/catalina/storeconfig/ConnectorStoreAppender.java
+++ b/java/org/apache/catalina/storeconfig/ConnectorStoreAppender.java
@@ -93,7 +93,7 @@ public class ConnectorStoreAppender extends StoreAppender {
         Iterator<String> propertyIterator = propertyKeys.iterator();
         while (propertyIterator.hasNext()) {
             String key = propertyIterator.next();
-            Object value = (Object) IntrospectionUtils.getProperty(bean, key);
+            Object value = IntrospectionUtils.getProperty(bean, key);
 
             if (desc.isTransientAttribute(key)) {
                 continue; // Skip the specified exceptions
@@ -172,7 +172,7 @@ public class ConnectorStoreAppender extends StoreAppender {
             }
             String key = descriptors[i].getName();
             if (replacements.get(key) != null) {
-                key = (String) replacements.get(key);
+                key = replacements.get(key);
             }
             if (!propertyKeys.contains(key)) {
                 propertyKeys.add(key);
@@ -243,7 +243,7 @@ public class ConnectorStoreAppender extends StoreAppender {
             Object value) {
         String repl = name;
         if (replacements.get(name) != null) {
-            repl = (String) replacements.get(name);
+            repl = replacements.get(name);
         }
         super.printValue(writer, indent, repl, value);
     }

==================================================
StandardEngineSF.java
index 1bd840e8c4..309024f751 100644
--- a/java/org/apache/catalina/storeconfig/StandardContextSF.java
+++ b/java/org/apache/catalina/storeconfig/StandardContextSF.java
@@ -30,7 +30,6 @@ import org.apache.catalina.Container;
 import org.apache.catalina.Context;
 import org.apache.catalina.Engine;
 import org.apache.catalina.Host;
-import org.apache.catalina.Lifecycle;
 import org.apache.catalina.LifecycleListener;
 import org.apache.catalina.Loader;
 import org.apache.catalina.Manager;
@@ -151,7 +150,7 @@ public class StandardContextSF extends StoreFactoryBase {
      * @throws Exception
      */
     protected void storeWithBackup(StandardContext aContext) throws Exception {
-        StoreFileMover mover = getConfigFileWriter((Context) aContext);
+        StoreFileMover mover = getConfigFileWriter(aContext);
         if (mover != null) {
             // Bugzilla 37781 Check to make sure we can write this output file
             if ((mover.getConfigOld() == null)
@@ -243,11 +242,9 @@ public class StandardContextSF extends StoreFactoryBase {
         if (aContext instanceof StandardContext) {
             StandardContext context = (StandardContext) aContext;
             // Store nested <Listener> elements
-            if (context instanceof Lifecycle) {
-                LifecycleListener listeners[] = context
-                        .findLifecycleListeners();
-                storeElementArray(aWriter, indent, listeners);
-            }
+            LifecycleListener listeners[] = context.findLifecycleListeners();
+            storeElementArray(aWriter, indent, listeners);
+
             // Store nested <Valve> elements
             Valve valves[] = context.getPipeline().getValves();
             storeElementArray(aWriter, indent, valves);
@@ -373,7 +370,7 @@ public class StandardContextSF extends StoreFactoryBase {
                 continue;
             resource.add(wresources[i]);
         }
-        return (String[]) resource.toArray(new String[resource.size()]);
+        return resource.toArray(new String[resource.size()]);
     }
 
 }

==================================================
StandardHostSF.java
index 12234a2b86..256d3c02c6 100644
--- a/java/org/apache/catalina/storeconfig/StandardEngineSF.java
+++ b/java/org/apache/catalina/storeconfig/StandardEngineSF.java
@@ -51,11 +51,9 @@ public class StandardEngineSF extends StoreFactoryBase {
         if (aEngine instanceof StandardEngine) {
             StandardEngine engine = (StandardEngine) aEngine;
             // Store nested <Listener> elements
-            if (engine instanceof Lifecycle) {
-                LifecycleListener listeners[] = ((Lifecycle) engine)
-                        .findLifecycleListeners();
-                storeElementArray(aWriter, indent, listeners);
-            }
+            LifecycleListener listeners[] = ((Lifecycle) engine)
+                    .findLifecycleListeners();
+            storeElementArray(aWriter, indent, listeners);
 
             // Store nested <Realm> element
             Realm realm = engine.getRealm();

==================================================
StandardServiceSF.java
index a5420f1723..9645bf5198 100644
--- a/java/org/apache/catalina/storeconfig/StandardHostSF.java
+++ b/java/org/apache/catalina/storeconfig/StandardHostSF.java
@@ -55,11 +55,9 @@ public class StandardHostSF extends StoreFactoryBase {
         if (aHost instanceof StandardHost) {
             StandardHost host = (StandardHost) aHost;
             // Store nested <Listener> elements
-            if (host instanceof Lifecycle) {
-                LifecycleListener listeners[] = ((Lifecycle) host)
-                        .findLifecycleListeners();
-                storeElementArray(aWriter, indent, listeners);
-            }
+            LifecycleListener listeners[] = ((Lifecycle) host)
+                    .findLifecycleListeners();
+            storeElementArray(aWriter, indent, listeners);
 
             // Store nested <Alias> elements
             String aliases[] = host.findAliases();

==================================================
StoreAppender.java
index b4ab2e659f..5af68d4818 100644
--- a/java/org/apache/catalina/storeconfig/StandardServiceSF.java
+++ b/java/org/apache/catalina/storeconfig/StandardServiceSF.java
@@ -45,11 +45,10 @@ public class StandardServiceSF extends StoreFactoryBase {
         if (aService instanceof StandardService) {
             StandardService service = (StandardService) aService;
             // Store nested <Listener> elements
-            if (service instanceof Lifecycle) {
-                LifecycleListener listeners[] = ((Lifecycle) service)
-                        .findLifecycleListeners();
-                storeElementArray(aWriter, indent, listeners);
-            }
+            LifecycleListener listeners[] = ((Lifecycle) service)
+                    .findLifecycleListeners();
+            storeElementArray(aWriter, indent, listeners);
+
             // Store nested <Executor> elements
             Executor[] executors = service.findExecutors();
             storeElementArray(aWriter, indent, executors);

==================================================
StoreConfig.java
index 46bcf4076c..844668d4d3 100644
--- a/java/org/apache/catalina/storeconfig/StoreAppender.java
+++ b/java/org/apache/catalina/storeconfig/StoreAppender.java
@@ -252,7 +252,7 @@ public class StoreAppender {
         if (bean instanceof ResourceBase) {
             ResourceBase resource = (ResourceBase) bean;
             for (Iterator<String> iter = resource.listProperties(); iter.hasNext();) {
-                String name = (String) iter.next();
+                String name = iter.next();
                 Object value = resource.getProperty(name);
                 if (!isPersistable(value.getClass())) {
                     continue;

==================================================
StoreRegistry.java
index eb698b7617..6c98d4255c 100644
--- a/java/org/apache/catalina/storeconfig/StoreConfig.java
+++ b/java/org/apache/catalina/storeconfig/StoreConfig.java
@@ -137,14 +137,15 @@ public class StoreConfig implements IStoreConfig {
                         desc.setStoreSeparate(true);
                         desc.setBackup(backup);
                         desc.setExternalAllowed(externalAllowed);
-                        store((Server) aServer);
+                        store(aServer);
                     } finally {
                         desc.setStoreSeparate(oldSeparate);
                         desc.setBackup(oldBackup);
                         desc.setExternalAllowed(oldExternalAllowed);
                     }
-                } else
-                    store((Server) aServer);
+                } else {
+                    store(aServer);
+                }
             } catch (Exception e) {
                 if (log.isInfoEnabled())
                     log.info("Object " + aServerName

==================================================
