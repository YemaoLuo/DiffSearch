256e9a03005fa421a1924d0d33942436c5ca20e5
==================================================
Avoid useless exception wrapping in async IO
==================================================
remm remm@apache.org
==================================================
Wed May 8 00:36:50 2019 +0200
==================================================
Http2AsyncParser.java
Avoid useless exception wrapping in async IO


==================================================
Nio2Endpoint.java
index 92bf09fd97..827105aba9 100644
--- a/java/org/apache/coyote/http2/Http2AsyncParser.java
+++ b/java/org/apache/coyote/http2/Http2AsyncParser.java
@@ -152,6 +152,8 @@ class Http2AsyncParser extends Http2Parser {
                 throw (Http2Exception) error;
             } else if (error instanceof IOException) {
                 throw (IOException) error;
+            } else if (error instanceof RuntimeException) {
+                throw (RuntimeException) error;
             } else {
                 throw new RuntimeException(error);
             }

==================================================
NioEndpoint.java
index 815713a7cd..a4844bcb20 100644
--- a/java/org/apache/tomcat/util/net/Nio2Endpoint.java
+++ b/java/org/apache/tomcat/util/net/Nio2Endpoint.java
@@ -1189,13 +1189,12 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel,AsynchronousS
             }
             @Override
             public void failed(Throwable exc, OperationState<A> state) {
-                IOException ioe;
+                IOException ioe = null;
                 if (exc instanceof InterruptedByTimeoutException) {
                     ioe = new SocketTimeoutException();
+                    exc = ioe;
                 } else if (exc instanceof IOException) {
                     ioe = (IOException) exc;
-                } else {
-                    ioe = new IOException(exc);
                 }
                 setError(ioe);
                 boolean notify = false;
@@ -1206,7 +1205,7 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel,AsynchronousS
                     state.state = Nio2Endpoint.isInline() ? CompletionState.ERROR : CompletionState.DONE;
                 }
                 if (state.handler != null) {
-                    state.handler.failed(ioe, state.attachment);
+                    state.handler.failed(exc, state.attachment);
                 }
                 if (notify) {
                     synchronized (state) {

==================================================
