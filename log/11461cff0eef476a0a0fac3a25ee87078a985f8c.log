11461cff0eef476a0a0fac3a25ee87078a985f8c
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56784
==================================================
Mark Emlyn
==================================================
Tue Aug 5 15:15:00 2014 +0000
==================================================
ContainerBase.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56784
Fix a couple of rare but theoretically possible atomicity bugs.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1615942 13f79535-47bb-0310-9956-ffa450edef68



==================================================
StandardContext.java
index 475fe796ca..7a6283b6cb 100644
--- a/java/org/apache/catalina/core/ContainerBase.java
+++ b/java/org/apache/catalina/core/ContainerBase.java
@@ -1267,16 +1267,15 @@ public abstract class ContainerBase extends LifecycleMBeanBase
     }
 
     public ObjectName[] getChildren() {
-        ObjectName result[]=new ObjectName[children.size()];
-        Iterator<Container> it=children.values().iterator();
-        int i=0;
-        while( it.hasNext() ) {
-            Object next=it.next();
-            if( next instanceof ContainerBase ) {
-                result[i++]=((ContainerBase)next).getObjectName();
+        List<ObjectName> names = new ArrayList<>(children.size());
+        Iterator<Container>  it = children.values().iterator();
+        while (it.hasNext()) {
+            Object next = it.next();
+            if (next instanceof ContainerBase) {
+                names.add(((ContainerBase)next).getObjectName());
             }
         }
-        return result;
+        return names.toArray(new ObjectName[names.size()]);
     }
 
 

==================================================
