05c2829fb9c49475cb48f5e14ff400e65e2974da
==================================================
Improve handling of stack overflow errors when parsing EL expressions.
==================================================
Mark Thomas
==================================================
Thu Aug 18 17:33:01 2022 +0100
==================================================
ExpressionFactoryImpl.java
Improve handling of stack overflow errors when parsing EL expressions.


==================================================
ExpressionBuilder.java
index 7f41d8c9d0..82f5cf123b 100644
--- a/java/org/apache/el/ExpressionFactoryImpl.java
+++ b/java/org/apache/el/ExpressionFactoryImpl.java
@@ -25,6 +25,7 @@ import jakarta.el.ValueExpression;
 import org.apache.el.lang.ELSupport;
 import org.apache.el.lang.ExpressionBuilder;
 import org.apache.el.stream.StreamELResolverImpl;
+import org.apache.el.util.ExceptionUtils;
 import org.apache.el.util.MessageFactory;
 
 
@@ -36,6 +37,10 @@ import org.apache.el.util.MessageFactory;
 @aQute.bnd.annotation.spi.ServiceProvider(value=ExpressionFactory.class)
 public class ExpressionFactoryImpl extends ExpressionFactory {
 
+    static {
+        ExceptionUtils.preload();
+    }
+
     @Override
     public <T> T coerceToType(Object obj, Class<T> type) {
         return ELSupport.coerceToType(null, obj, type);

==================================================
ExceptionUtils.java
index a98daac78a..b03b78cbf3 100644
--- a/java/org/apache/el/lang/ExpressionBuilder.java
+++ b/java/org/apache/el/lang/ExpressionBuilder.java
@@ -41,6 +41,7 @@ import org.apache.el.parser.ELParser;
 import org.apache.el.parser.Node;
 import org.apache.el.parser.NodeVisitor;
 import org.apache.el.util.ConcurrentCache;
+import org.apache.el.util.ExceptionUtils;
 import org.apache.el.util.MessageFactory;
 
 /**
@@ -139,9 +140,10 @@ public final class ExpressionBuilder implements NodeVisitor {
                     n = n.jjtGetChild(0);
                 }
                 expressionCache.put(expr, n);
-            } catch (Exception e) {
+            } catch (Throwable t) {
+                ExceptionUtils.handleThrowable(t);
                 throw new ELException(
-                        MessageFactory.get("error.parseFail", expr), e);
+                        MessageFactory.get("error.parseFail", expr), t);
             } finally {
                 if (parser != null) {
                     parserCache.push(parser);

==================================================
