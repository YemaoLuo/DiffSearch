a8f8d04566997c60a520fde126b4718847c6767f
==================================================
Refactor: Make adapter reference final
==================================================
Mark Thomas
==================================================
Tue Sep 5 09:43:38 2017 +0000
==================================================
AbstractProcessor.java
Refactor: Make adapter reference final

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1807324 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AbstractAjpProtocol.java
index 625bf9bfa4..db4f9ff5a9 100644
--- a/java/org/apache/coyote/AbstractProcessor.java
+++ b/java/org/apache/coyote/AbstractProcessor.java
@@ -42,7 +42,7 @@ public abstract class AbstractProcessor extends AbstractProcessorLight implement
 
     private static final StringManager sm = StringManager.getManager(AbstractProcessor.class);
 
-    protected Adapter adapter;
+    protected final Adapter adapter;
     protected final AsyncStateMachine asyncStateMachine;
     private volatile long asyncTimeout = -1;
     protected final Request request;
@@ -57,12 +57,13 @@ public abstract class AbstractProcessor extends AbstractProcessorLight implement
     private ErrorState errorState = ErrorState.NONE;
 
 
-    public AbstractProcessor() {
-        this(new Request(), new Response());
+    public AbstractProcessor(Adapter adapter) {
+        this(adapter, new Request(), new Response());
     }
 
 
-    protected AbstractProcessor(Request coyoteRequest, Response coyoteResponse) {
+    protected AbstractProcessor(Adapter adapter, Request coyoteRequest, Response coyoteResponse) {
+        this.adapter = adapter;
         asyncStateMachine = new AsyncStateMachine(this);
         request = coyoteRequest;
         response = coyoteResponse;
@@ -113,16 +114,6 @@ public abstract class AbstractProcessor extends AbstractProcessorLight implement
     }
 
 
-    /**
-     * Set the associated adapter.
-     *
-     * @param adapter the new adapter
-     */
-    public void setAdapter(Adapter adapter) {
-        this.adapter = adapter;
-    }
-
-
     /**
      * Get the associated adapter.
      *

==================================================
AjpProcessor.java
index b1fbc3b9bf..2500abd7ad 100644
--- a/java/org/apache/coyote/ajp/AbstractAjpProtocol.java
+++ b/java/org/apache/coyote/ajp/AbstractAjpProtocol.java
@@ -195,8 +195,7 @@ public abstract class AbstractAjpProtocol<S> extends AbstractProtocol<S> {
 
     @Override
     protected Processor createProcessor() {
-        AjpProcessor processor = new AjpProcessor(this);
-        processor.setAdapter(getAdapter());
+        AjpProcessor processor = new AjpProcessor(this, getAdapter());
         return processor;
     }
 

==================================================
AbstractHttp11Protocol.java
index 0dbf3d7e9a..ce134cb01e 100644
--- a/java/org/apache/coyote/ajp/AjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpProcessor.java
@@ -30,6 +30,7 @@ import javax.servlet.http.HttpServletResponse;
 
 import org.apache.coyote.AbstractProcessor;
 import org.apache.coyote.ActionCode;
+import org.apache.coyote.Adapter;
 import org.apache.coyote.ErrorState;
 import org.apache.coyote.InputBuffer;
 import org.apache.coyote.OutputBuffer;
@@ -244,8 +245,8 @@ public class AjpProcessor extends AbstractProcessor {
 
     // ------------------------------------------------------------ Constructor
 
-    public AjpProcessor(AbstractAjpProtocol<?> protocol) {
-        super();
+    public AjpProcessor(AbstractAjpProtocol<?> protocol, Adapter adapter) {
+        super(adapter);
         this.protocol = protocol;
 
         int packetSize = protocol.getPacketSize();

==================================================
Http11Processor.java
index d9c22b9af5..4bd83f2941 100644
--- a/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
+++ b/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
@@ -934,8 +934,7 @@ public abstract class AbstractHttp11Protocol<S> extends AbstractProtocol<S> {
 
     @Override
     protected Processor createProcessor() {
-        Http11Processor processor = new Http11Processor(this);
-        processor.setAdapter(getAdapter());
+        Http11Processor processor = new Http11Processor(this, adapter);
         return processor;
     }
 

==================================================
StreamProcessor.java
index 5c26f194e5..34df427b88 100644
--- a/java/org/apache/coyote/http11/Http11Processor.java
+++ b/java/org/apache/coyote/http11/Http11Processor.java
@@ -27,6 +27,7 @@ import javax.servlet.http.HttpServletResponse;
 
 import org.apache.coyote.AbstractProcessor;
 import org.apache.coyote.ActionCode;
+import org.apache.coyote.Adapter;
 import org.apache.coyote.ErrorState;
 import org.apache.coyote.Request;
 import org.apache.coyote.RequestInfo;
@@ -149,8 +150,8 @@ public class Http11Processor extends AbstractProcessor {
     private SendfileDataBase sendfileData = null;
 
 
-    public Http11Processor(AbstractHttp11Protocol<?> protocol) {
-        super();
+    public Http11Processor(AbstractHttp11Protocol<?> protocol, Adapter adapter) {
+        super(adapter);
         this.protocol = protocol;
 
         userDataHelper = new UserDataHelper(log);

==================================================
