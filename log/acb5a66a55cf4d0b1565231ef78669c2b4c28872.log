acb5a66a55cf4d0b1565231ef78669c2b4c28872
==================================================
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=60152
==================================================
Mark Thomas
==================================================
Fri Oct 7 14:39:47 2016 +0000
==================================================
Connector.java
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=60152
Provide an option for Connector Lifecycle exceptions to be re-thrown rather than logged. This is controlled by the new throwOnFailure  attribute of the Connector.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1763769 13f79535-47bb-0310-9956-ffa450edef68



==================================================
StandardService.java
index a018cd69fc..42081236e1 100644
--- a/java/org/apache/catalina/core/LocalStrings_es.properties
+++ b/java/org/apache/catalina/core/LocalStrings_es.properties
@@ -127,9 +127,6 @@ standardHost.noContext = No se ha configurado Contexto para procesar este requer
 standardHost.notContext = El Hijo de una M\u00E1quina debe de ser un Contexto
 standardHost.nullName = Es necesario poner el nombre de M\u00E1quina
 standardServer.shutdownViaPort = Se ha recibido un comando de apagado a trav\u00E9s del puerto de apagado. Parando la instancia del Servidor.
-standardService.connector.initFailed = No pude inicializar el conector [{0}]
-standardService.connector.startFailed = No pude arrancar el conector [{0}]
-standardService.connector.stopFailed = No pude parar el conector [{0}]
 standardService.start.name = Arrancando servicio {0}
 standardService.stop.name = Parando servicio {0}
 standardWrapper.allocate = Error reservando espacio para una instancia de servlet

==================================================
TestConnector.java
index 093aa80e34..6f1e80566b 100644
--- a/java/org/apache/catalina/core/StandardService.java
+++ b/java/org/apache/catalina/core/StandardService.java
@@ -434,15 +434,9 @@ public class StandardService extends LifecycleMBeanBase implements Service {
         // Start our defined Connectors second
         synchronized (connectorsLock) {
             for (Connector connector: connectors) {
-                try {
-                    // If it has already failed, don't try and start it
-                    if (connector.getState() != LifecycleState.FAILED) {
-                        connector.start();
-                    }
-                } catch (Exception e) {
-                    log.error(sm.getString(
-                            "standardService.connector.startFailed",
-                            connector), e);
+                // If it has already failed, don't try and start it
+                if (connector.getState() != LifecycleState.FAILED) {
+                    connector.start();
                 }
             }
         }
@@ -488,13 +482,7 @@ public class StandardService extends LifecycleMBeanBase implements Service {
                     // stopped (e.g. via a JMX call)
                     continue;
                 }
-                try {
-                    connector.stop();
-                } catch (Exception e) {
-                    log.error(sm.getString(
-                            "standardService.connector.stopFailed",
-                            connector), e);
-                }
+                connector.stop();
             }
         }
 
@@ -539,16 +527,7 @@ public class StandardService extends LifecycleMBeanBase implements Service {
         // Initialize our defined Connectors
         synchronized (connectorsLock) {
             for (Connector connector : connectors) {
-                try {
-                    connector.init();
-                } catch (Exception e) {
-                    String message = sm.getString(
-                            "standardService.connector.initFailed", connector);
-                    log.error(message, e);
-
-                    if (Boolean.getBoolean("org.apache.catalina.startup.EXIT_ON_INIT_FAILURE"))
-                        throw new LifecycleException(message);
-                }
+                connector.init();
             }
         }
     }
@@ -561,12 +540,7 @@ public class StandardService extends LifecycleMBeanBase implements Service {
         // Destroy our defined Connectors
         synchronized (connectorsLock) {
             for (Connector connector : connectors) {
-                try {
-                    connector.destroy();
-                } catch (Exception e) {
-                    log.error(sm.getString(
-                            "standardService.connector.destroyFailed", connector), e);
-                }
+                connector.destroy();
             }
         }
 

==================================================
