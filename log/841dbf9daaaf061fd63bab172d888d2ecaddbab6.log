841dbf9daaaf061fd63bab172d888d2ecaddbab6
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56717
==================================================
Konstantin Kolinko
==================================================
Tue Jul 15 00:45:55 2014 +0000
==================================================
Mapper.java
index 69c2092b14..4ea19483d0 100644
--- a/java/org/apache/catalina/mapper/LocalStrings.properties
+++ b/java/org/apache/catalina/mapper/LocalStrings.properties
@@ -13,6 +13,10 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
+mapper.addHost.success=Registered host [{0}]
+mapper.addHost.sameHost=Duplicate registration of the same host [{0}]. Ignored.
+mapper.addHostAlias.success=Registered alias [{0}] for host [{1}]
+mapper.addHostAlias.sameHost=Duplicate registration of alias [{0}] for the same host [{1}]. Ignored.
 mapper.removeWrapper=Removing wrapper from Context [{0}] with path [{1}]
 mapper.duplicateHost=Duplicate Host [{0}]. The name is already used by Host [{1}]. This Host will be ignored.
 mapper.duplicateHostAlias=Duplicate host Alias [{0}] in Host [{1}]. The name is already used by Host [{2}]. This Alias will be ignored.

==================================================
TestMapper.java
index b21d16df54..4211e400f9 100644
--- a/java/org/apache/catalina/mapper/Mapper.java
+++ b/java/org/apache/catalina/mapper/Mapper.java
@@ -96,12 +96,25 @@ public final class Mapper {
         MappedHost newHost = new MappedHost(name, host);
         if (insertMap(hosts, newHosts, newHost)) {
             hosts = newHosts;
+            if (log.isDebugEnabled()) {
+                log.debug(sm.getString("mapper.addHost.success", name));
+            }
         } else {
             MappedHost duplicate = hosts[find(hosts, name)];
-            log.error(sm.getString("mapper.duplicateHost", name,
-                    duplicate.getRealHostName()));
-            // Do not add aliases, as removeHost(hostName) won't be able to remove them
-            return;
+            if (duplicate.object == host) {
+                // The host is already registered in the mapper.
+                // E.g. it might have been added by addContextVersion()
+                if (log.isDebugEnabled()) {
+                    log.debug(sm.getString("mapper.addHost.sameHost", name));
+                }
+                newHost = duplicate;
+            } else {
+                log.error(sm.getString("mapper.duplicateHost", name,
+                        duplicate.getRealHostName()));
+                // Do not add aliases, as removeHost(hostName) won't be able to
+                // remove them
+                return;
+            }
         }
         List<MappedHost> newAliases = new ArrayList<>(aliases.length);
         for (String alias : aliases) {
@@ -158,6 +171,10 @@ public final class Mapper {
         MappedHost[] newHosts = new MappedHost[hosts.length + 1];
         if (insertMap(hosts, newHosts, newAlias)) {
             hosts = newHosts;
+            if (log.isDebugEnabled()) {
+                log.debug(sm.getString("mapper.addHostAlias.success",
+                        newAlias.name, newAlias.getRealHostName()));
+            }
             return true;
         } else {
             MappedHost duplicate = hosts[find(hosts, newAlias.name)];
@@ -165,6 +182,10 @@ public final class Mapper {
                 // A duplicate Alias for the same Host.
                 // A harmless redundancy. E.g.
                 // <Host name="localhost"><Alias>localhost</Alias></Host>
+                if (log.isDebugEnabled()) {
+                    log.debug(sm.getString("mapper.addHostAlias.sameHost",
+                            newAlias.name, newAlias.getRealHostName()));
+                }
                 return false;
             }
             log.error(sm.getString("mapper.duplicateHostAlias", newAlias.name,

==================================================
