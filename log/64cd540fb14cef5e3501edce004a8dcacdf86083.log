64cd540fb14cef5e3501edce004a8dcacdf86083
==================================================
UCDetector changes. Make read-only fields final
==================================================
Mark Emlyn
==================================================
Thu Dec 29 19:44:04 2011 +0000
==================================================
ProxyDirContext.java
UCDetector changes. Make read-only fields final

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1225626 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ResourceCache.java
index bf2f17096a..72790982be 100644
--- a/java/org/apache/naming/resources/ProxyDirContext.java
+++ b/java/org/apache/naming/resources/ProxyDirContext.java
@@ -73,6 +73,10 @@ public class ProxyDirContext implements DirContext {
     public ProxyDirContext(Hashtable<String,String> env,
             DirContext dirContext) {
         this.dirContext = dirContext;
+
+        ResourceCache cache = null;
+        int cacheTTL = 5000;  // 5s
+        int cacheObjectMaxSize = 512; // 512 KB
         if (dirContext instanceof BaseDirContext) {
             // Initialize parameters based on the associated dir context, like
             // the caching policy.
@@ -95,6 +99,10 @@ public class ProxyDirContext implements DirContext {
                 }
             }
         }
+        this.cache = cache;
+        this.cacheTTL = cacheTTL;
+        this.cacheObjectMaxSize = cacheObjectMaxSize;
+
         hostName = env.get(HOST);
         contextName = env.get(CONTEXT);
         int i = contextName.indexOf('#');
@@ -150,19 +158,19 @@ public class ProxyDirContext implements DirContext {
     /**
      * Cache.
      */
-    protected ResourceCache cache = null;
+    protected final ResourceCache cache;
 
 
     /**
      * Cache TTL.
      */
-    protected int cacheTTL = 5000; // 5s
+    protected final int cacheTTL;
 
 
     /**
      * Max size of resources which will have their content cached.
      */
-    protected int cacheObjectMaxSize = 512; // 512 KB
+    protected final int cacheObjectMaxSize;
 
 
     /**

==================================================
WARDirContext.java
index db8b3ddaeb..d65e301ed1 100644
--- a/java/org/apache/naming/resources/ResourceCache.java
+++ b/java/org/apache/naming/resources/ResourceCache.java
@@ -44,7 +44,7 @@ public class ResourceCache {
     /**
      * Random generator used to determine elements to free.
      */
-    protected Random random = new Random();
+    protected final Random random = new Random();
 
 
     /**
@@ -57,7 +57,7 @@ public class ResourceCache {
     /**
      * Not found cache.
      */
-    protected HashMap<String,CacheEntry> notFoundCache =
+    protected final HashMap<String,CacheEntry> notFoundCache =
         new HashMap<String,CacheEntry>();
 
 

==================================================
