786a169100dead39a0b70c0d7066eb9e6057ed0a
==================================================
Server side wss support
==================================================
Mark Emlyn
==================================================
Mon Feb 18 23:16:53 2013 +0000
==================================================
WsSession.java
Server side wss support

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1447548 13f79535-47bb-0310-9956-ffa450edef68



==================================================
WsWebSocketContainer.java
index a6f58c920d..79e2f655f8 100644
--- a/java/org/apache/tomcat/websocket/WsSession.java
+++ b/java/org/apache/tomcat/websocket/WsSession.java
@@ -60,6 +60,7 @@ public class WsSession implements Session {
     private final WsRequest request;
     private final String subProtocol;
     private final Map<String,String> pathParameters;
+    private final boolean secure;
 
     private MessageHandler textMessageHandler = null;
     private MessageHandler binaryMessageHandler = null;
@@ -88,7 +89,8 @@ public class WsSession implements Session {
             WsRemoteEndpointBase wsRemoteEndpoint,
             WsWebSocketContainer wsWebSocketContainer,
             WsRequest request, String subProtocol,
-            Map<String,String> pathParameters) {
+            Map<String,String> pathParameters,
+            boolean secure) {
         this.localEndpoint = localEndpoint;
         this.wsRemoteEndpoint = wsRemoteEndpoint;
         this.wsRemoteEndpoint.setSession(this);
@@ -105,6 +107,7 @@ public class WsSession implements Session {
         this.request = request;
         this.subProtocol = subProtocol;
         this.pathParameters = pathParameters;
+        this.secure = secure;
     }
 
 
@@ -206,8 +209,7 @@ public class WsSession implements Session {
 
     @Override
     public boolean isSecure() {
-        // TODO Auto-generated method stub
-        return false;
+        return secure;
     }
 
 

==================================================
WsProtocolHandler.java
index c2caa5f0c7..7b9bb68345 100644
--- a/java/org/apache/tomcat/websocket/WsWebSocketContainer.java
+++ b/java/org/apache/tomcat/websocket/WsWebSocketContainer.java
@@ -173,7 +173,7 @@ public class WsWebSocketContainer
         }
 
         WsSession wsSession = new WsSession(endpoint, wsRemoteEndpointClient,
-                this, null, subProtocol, Collections.EMPTY_MAP);
+                this, null, subProtocol, Collections.EMPTY_MAP, false);
         endpoint.onOpen(wsSession, clientEndpointConfiguration);
         registerSession(clazz, wsSession);
 

==================================================
WsServlet.java
index 40b393f521..60bdbaabf3 100644
--- a/java/org/apache/tomcat/websocket/server/WsProtocolHandler.java
+++ b/java/org/apache/tomcat/websocket/server/WsProtocolHandler.java
@@ -43,7 +43,7 @@ import org.apache.tomcat.websocket.WsSession;
  */
 public class WsProtocolHandler implements HttpUpgradeHandler {
 
-    private static StringManager sm =
+    private static final StringManager sm =
             StringManager.getManager(Constants.PACKAGE_NAME);
     private static final Log log =
             LogFactory.getLog(WsProtocolHandler.class);
@@ -55,19 +55,21 @@ public class WsProtocolHandler implements HttpUpgradeHandler {
     private final WsRequest request;
     private final String subProtocol;
     private final Map<String,String> pathParameters;
+    private final boolean secure;
 
     private WsSession wsSession;
 
 
     public WsProtocolHandler(Endpoint ep, EndpointConfiguration endpointConfig,
             ServerContainerImpl wsc, WsRequest request, String subProtocol,
-            Map<String,String> pathParameters) {
+            Map<String,String> pathParameters, boolean secure) {
         this.ep = ep;
         this.endpointConfig = endpointConfig;
         this.webSocketContainer = wsc;
         this.request = request;
         this.subProtocol = subProtocol;
         this.pathParameters = pathParameters;
+        this.secure = secure;
         applicationClassLoader = Thread.currentThread().getContextClassLoader();
     }
 
@@ -93,7 +95,8 @@ public class WsProtocolHandler implements HttpUpgradeHandler {
             WsRemoteEndpointServer wsRemoteEndpointServer =
                     new WsRemoteEndpointServer(sos, webSocketContainer);
             wsSession = new WsSession(ep, wsRemoteEndpointServer,
-                    webSocketContainer, request, subProtocol, pathParameters);
+                    webSocketContainer, request, subProtocol, pathParameters,
+                    secure);
             WsFrameServer wsFrame = new WsFrameServer(
                     sis,
                     wsSession);

==================================================
