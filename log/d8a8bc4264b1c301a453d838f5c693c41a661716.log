d8a8bc4264b1c301a453d838f5c693c41a661716
==================================================
Clean-up / simplification.
==================================================
Mark Emlyn
==================================================
Tue Aug 18 08:29:25 2009 +0000
==================================================
FilterBase.java
Clean-up / simplification.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@805321 13f79535-47bb-0310-9956-ffa450edef68



==================================================
RequestFilter.java
index 6a62a418f0..0d1c393b64 100644
--- a/java/org/apache/catalina/filters/FilterBase.java
+++ b/java/org/apache/catalina/filters/FilterBase.java
@@ -22,17 +22,14 @@ import java.util.Enumeration;
 import javax.servlet.Filter;
 import javax.servlet.FilterConfig;
 import javax.servlet.ServletException;
-import javax.servlet.ServletRequest;
-import javax.servlet.ServletResponse;
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.http.HttpServletResponse;
 
 import org.apache.juli.logging.Log;
 import org.apache.tomcat.util.IntrospectionUtils;
 import org.apache.tomcat.util.res.StringManager;
 
 /**
- * Base class for filters that provide some utility methods. 
+ * Base class for filters that provides generic initialisation and a simple
+ * no-op destruction. 
  * 
  * @author xxd
  *
@@ -42,6 +39,8 @@ public abstract class FilterBase implements Filter {
     protected static final StringManager sm =
         StringManager.getManager(Constants.Package);
 
+    protected abstract Log getLogger();
+    
     public void init(FilterConfig filterConfig) throws ServletException {
         Enumeration<String> paramNames = filterConfig.getInitParameterNames();
         while (paramNames.hasMoreElements()) {
@@ -54,38 +53,9 @@ public abstract class FilterBase implements Filter {
         }    
     }
 
-    /**
-     * Whether the request object is an HttpServletRequest or not.
-     * 
-     * @param request
-     * @return
-     */
-    protected boolean isHttpServletRequest(ServletRequest request) {
-        return request instanceof HttpServletRequest;
-    }
-
-    /**
-     * Whether the response object is an HttpServletResponse or not.
-     * 
-     * @param response
-     * @return
-     */
-    protected boolean isHttpServletResponse(ServletResponse response) {
-        return response instanceof HttpServletResponse;
+    @Override
+    public void destroy() {
+        // NOOP
     }
 
-    /**
-     * Whether the corresponding Servlet is an HttpServlet or not.
-     * 
-     * @param request
-     * @param response
-     * @return
-     */
-    protected boolean isHttpServlet(ServletRequest request,
-            ServletResponse response) {
-        return isHttpServletRequest(request) && isHttpServletResponse(response);
-    }
-
-    protected abstract Log getLogger();
-    
 }

==================================================
