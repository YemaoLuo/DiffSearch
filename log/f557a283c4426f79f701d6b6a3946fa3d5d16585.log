f557a283c4426f79f701d6b6a3946fa3d5d16585
==================================================
Clean-up
==================================================
Mark Emlyn
==================================================
Mon Sep 3 21:40:37 2012 +0000
==================================================
Bug51582.java
Clean-up
- Java 7 <>
- unused code
- autoboxing

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1380376 13f79535-47bb-0310-9956-ffa450edef68



==================================================
EqualsHashCodeTest.java
index fa21c1abf8..7d3c0a35ac 100644
--- a/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/bugs/Bug51582.java
+++ b/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/bugs/Bug51582.java
@@ -69,7 +69,7 @@ public class Bug51582
       final Connection connection = pool.getConnection();
       final CallableStatement s = connection.prepareCall("{CALL SLEEP()}");
 
-      List<Thread> threadList = new ArrayList<Thread>();
+      List<Thread> threadList = new ArrayList<>();
 
       for (int l = 0; l < 3; l++)
       {

==================================================
JmxPasswordTest.java
index 0aecc3b6d5..931920e62f 100644
--- a/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/EqualsHashCodeTest.java
+++ b/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/EqualsHashCodeTest.java
@@ -20,7 +20,6 @@ import java.sql.Connection;
 
 import javax.sql.PooledConnection;
 
-import org.apache.tomcat.jdbc.pool.ConnectionPool;
 import org.apache.tomcat.jdbc.test.driver.Driver;
 
 public class EqualsHashCodeTest extends DefaultTestCase{
@@ -42,7 +41,7 @@ public class EqualsHashCodeTest extends DefaultTestCase{
         this.datasource.setMaxIdle(datasource.getMaxActive());
         this.datasource.setUsername(username);
         this.datasource.getConnection().close();
-        ConnectionPool pool = datasource.createPool();
+        datasource.createPool();
     }
 
     public void testEquals() throws Exception {
@@ -67,7 +66,7 @@ public class EqualsHashCodeTest extends DefaultTestCase{
         assertEquals(con1.hashCode(), con1.hashCode());
         Connection con2 = datasource.getConnection();
         assertEquals(con2.hashCode(), con2.hashCode());
-        assertNotSame(con1.hashCode(), con2.hashCode());
+        assertTrue(con1.hashCode() != con2.hashCode());
         con2.close();
         assertEquals(con2.hashCode(), con2.hashCode());
     }

==================================================
TestAsyncQueue.java
index 42e397747f..e6ac454736 100644
--- a/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/JmxPasswordTest.java
+++ b/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/JmxPasswordTest.java
@@ -48,7 +48,7 @@ public class JmxPasswordTest extends DefaultTestCase{
         this.datasource.getConnection().close();
         MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();
         String domain = "tomcat.jdbc";
-        Hashtable<String,String> properties = new Hashtable<String,String>();
+        Hashtable<String,String> properties = new Hashtable<>();
         properties.put("type", "ConnectionPool");
         properties.put("class", this.getClass().getName());
         oname = new ObjectName(domain,properties);

==================================================
