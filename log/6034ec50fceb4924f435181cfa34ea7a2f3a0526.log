6034ec50fceb4924f435181cfa34ea7a2f3a0526
==================================================
Update throws declaration for Servlet 3 file upload
==================================================
Mark Emlyn
==================================================
Tue Nov 17 02:41:55 2009 +0000
==================================================
HttpServletRequest.java
Update throws declaration for Servlet 3 file upload
Do the easy part of the implementation

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@881109 13f79535-47bb-0310-9956-ffa450edef68



==================================================
HttpServletRequestWrapper.java
index 2589b8ff66..813484dda7 100644
--- a/java/javax/servlet/http/HttpServletRequest.java
+++ b/java/javax/servlet/http/HttpServletRequest.java
@@ -697,21 +697,27 @@ public interface HttpServletRequest extends ServletRequest {
     
     
     /**
-     * 
+     * Return a collection of all uploaded Parts.
      * @return
+     * @throws IOException           if an I/O error occurs
+     * @throws IllegalStateException if size limits are exceeded
+     * @throws ServletException      if the request is not multipart/form-data
      * @since Servlet 3.0
-     * TODO SERVLET3 - Add comments
      */
-    public Collection<Part> getParts() throws IOException, ServletException;
+    public Collection<Part> getParts() throws IOException,
+            IllegalStateException, ServletException;
     
     
     /**
-     * 
+     * Gets the named Part or null if the Part does not exist. Triggers upload
+     * of all Parts. 
      * @param name
      * @return
-     * @throws IllegalArgumentException
+     * @throws IOException           if an I/O error occurs
+     * @throws IllegalStateException if size limits are exceeded
+     * @throws ServletException      if the request is not multipart/form-data
      * @since Servlet 3.0
-     * TODO SERVLET3 - Add comments
      */
-    public Part getPart(String name);
+    public Part getPart(String name) throws IOException, IllegalStateException,
+            ServletException; 
 }

==================================================
Request.java
index 832fd5d13e..2d9454aeea 100644
--- a/java/javax/servlet/http/HttpServletRequestWrapper.java
+++ b/java/javax/servlet/http/HttpServletRequestWrapper.java
@@ -294,15 +294,20 @@ public class HttpServletRequestWrapper extends ServletRequestWrapper implements
      * @since Servlet 3.0
      * TODO SERVLET3 - Add comments
      */
-    public Collection<Part> getParts() throws IOException, ServletException {
+    public Collection<Part> getParts() throws IllegalStateException,
+            IOException, ServletException {
         return this._getHttpServletRequest().getParts();
     }
 
     /**
+     * @throws ServletException 
+     * @throws IOException 
+     * @throws IllegalStateException 
      * @since Servlet 3.0
      * TODO SERVLET3 - Add comments
      */
-    public Part getPart(String name) {
+    public Part getPart(String name) throws IllegalStateException, IOException,
+            ServletException {
         return this._getHttpServletRequest().getPart(name);
     }
 

==================================================
RequestFacade.java
index 29d9c745dc..f0a1fb3fbe 100644
--- a/java/org/apache/catalina/connector/Request.java
+++ b/java/org/apache/catalina/connector/Request.java
@@ -2380,13 +2380,22 @@ public class Request
                 null, null, null);
     }
     
-    public Collection<Part> getParts() {
+    public Collection<Part> getParts() throws IOException, IllegalStateException,
+            ServletException {
         // TODO SERVLET3 - file upload
         return null;
     }
     
-    public Part getPart(String name) throws IllegalArgumentException {
-        // TODO SERVLET3 - file upload
+    public Part getPart(String name) throws IOException, IllegalStateException,
+            ServletException {
+        Collection<Part> parts = getParts();
+        Iterator<Part> iterator = parts.iterator();
+        while (iterator.hasNext()) {
+            Part part = iterator.next();
+            if (name.equals(part.getName())) {
+                return part;
+            }
+        }
         return null;
     }
 

==================================================
