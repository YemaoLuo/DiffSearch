c33732159e28d073d456e1f832013ffd8702cd41
==================================================
Review diff to Commons FileUpload. Format changes to reduce diff.
==================================================
Mark Thomas
==================================================
Fri May 3 17:22:43 2019 +0100
==================================================
FileUploadBase.java
Review diff to Commons FileUpload. Format changes to reduce diff.


==================================================
ParameterParser.java
index 8eb23c76d7..486434ad53 100644
--- a/java/org/apache/tomcat/util/http/fileupload/FileUploadBase.java
+++ b/java/org/apache/tomcat/util/http/fileupload/FileUploadBase.java
@@ -404,8 +404,7 @@ public abstract class FileUploadBase {
                 ParameterParser parser = new ParameterParser();
                 parser.setLowerCaseNames(true);
                 // Parameter parser can handle null input
-                Map<String,String> params =
-                    parser.parse(pContentDisposition, ';');
+                Map<String, String> params = parser.parse(pContentDisposition, ';');
                 if (params.containsKey("filename")) {
                     fileName = params.get("filename");
                     if (fileName != null) {
@@ -447,7 +446,7 @@ public abstract class FileUploadBase {
             ParameterParser parser = new ParameterParser();
             parser.setLowerCaseNames(true);
             // Parameter parser can handle null input
-            Map<String,String> params = parser.parse(pContentDisposition, ';');
+            Map<String, String> params = parser.parse(pContentDisposition, ';');
             fieldName = params.get("name");
             if (fieldName != null) {
                 fieldName = fieldName.trim();

==================================================
DiskFileItem.java
index e0ccd916f5..061be67679 100644
--- a/java/org/apache/tomcat/util/http/fileupload/ParameterParser.java
+++ b/java/org/apache/tomcat/util/http/fileupload/ParameterParser.java
@@ -226,7 +226,7 @@ public class ParameterParser {
      *
      * @return a map of name/value pairs
      */
-    public Map<String,String> parse(final String str, char[] separators) {
+    public Map<String, String> parse(final String str, char[] separators) {
         if (separators == null || separators.length == 0) {
             return new HashMap<>();
         }
@@ -253,7 +253,7 @@ public class ParameterParser {
      *
      * @return a map of name/value pairs
      */
-    public Map<String,String> parse(final String str, char separator) {
+    public Map<String, String> parse(final String str, char separator) {
         if (str == null) {
             return new HashMap<>();
         }
@@ -270,7 +270,7 @@ public class ParameterParser {
      *
      * @return a map of name/value pairs
      */
-    public Map<String,String> parse(final char[] charArray, char separator) {
+    public Map<String, String> parse(final char[] charArray, char separator) {
         if (charArray == null) {
             return new HashMap<>();
         }
@@ -289,7 +289,7 @@ public class ParameterParser {
      *
      * @return a map of name/value pairs
      */
-    public Map<String,String> parse(
+    public Map<String, String> parse(
         final char[] charArray,
         int offset,
         int length,
@@ -298,7 +298,7 @@ public class ParameterParser {
         if (charArray == null) {
             return new HashMap<>();
         }
-        HashMap<String,String> params = new HashMap<>();
+        HashMap<String, String> params = new HashMap<>();
         this.chars = charArray;
         this.pos = offset;
         this.len = length;

==================================================
