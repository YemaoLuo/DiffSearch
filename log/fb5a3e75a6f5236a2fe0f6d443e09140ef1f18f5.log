fb5a3e75a6f5236a2fe0f6d443e09140ef1f18f5
==================================================
https://issues.apache.org/bugzilla/show_bug.cgi?id=49102
==================================================
Tim Whittington
==================================================
Thu Sep 23 10:38:56 2010 +0000
==================================================
AjpAprProcessor.java
https://issues.apache.org/bugzilla/show_bug.cgi?id=49102

Protecting AJP code -> header/method lookup arrays with getters.
No measurable slowdown (especially after a profiling JIT gets done with it).

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1000400 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AjpProcessor.java
index 48f92e19d6..c0c3c07502 100644
--- a/java/org/apache/coyote/ajp/AjpAprProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpAprProcessor.java
@@ -713,7 +713,7 @@ public class AjpAprProcessor implements ActionHook {
         // Translate the HTTP method code to a String.
         byte methodCode = requestHeaderMessage.getByte();
         if (methodCode != Constants.SC_M_JK_STORED) {
-            String methodName = Constants.methodTransArray[methodCode - 1];
+            String methodName = Constants.getMethodForCode(methodCode - 1);
             request.method().setString(methodName);
         }
 
@@ -747,7 +747,7 @@ public class AjpAprProcessor implements ActionHook {
             isc &= 0xFF00;
             if(0xA000 == isc) {
                 requestHeaderMessage.getInt(); // To advance the read position
-                hName = Constants.headerTransArray[hId - 1];
+                hName = Constants.getHeaderForCode(hId - 1);
                 vMB = headers.addValue(hName);
             } else {
                 // reset hId -- if the header currently being read

==================================================
Constants.java
index c7c45ba576..f6097c0009 100644
--- a/java/org/apache/coyote/ajp/AjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpProcessor.java
@@ -719,7 +719,7 @@ public class AjpProcessor implements ActionHook {
         // Translate the HTTP method code to a String.
         byte methodCode = requestHeaderMessage.getByte();
         if (methodCode != Constants.SC_M_JK_STORED) {
-            String methodName = Constants.methodTransArray[methodCode - 1];
+            String methodName = Constants.getMethodForCode(methodCode - 1);
             request.method().setString(methodName);
         }
 
@@ -753,7 +753,7 @@ public class AjpProcessor implements ActionHook {
             isc &= 0xFF00;
             if(0xA000 == isc) {
                 requestHeaderMessage.getInt(); // To advance the read position
-                hName = Constants.headerTransArray[hId - 1];
+                hName = Constants.getHeaderForCode(hId - 1);
                 vMB = headers.addValue(hName);
             } else {
                 // reset hId -- if the header currently being read

==================================================
