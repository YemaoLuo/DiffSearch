ed91995123e6f4d33fbf3e5ef9f17873b6e6bfbc
==================================================
Don't set read/write timeouts multiple times.
==================================================
Mark Thomas
==================================================
Sat Dec 17 16:25:36 2016 +0000
==================================================
Nio2Endpoint.java
Don't set read/write timeouts multiple times.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1774793 13f79535-47bb-0310-9956-ffa450edef68



==================================================
NioEndpoint.java
index eca8b2cfed..ddedf77ce5 100644
--- a/java/org/apache/tomcat/util/net/Nio2Endpoint.java
+++ b/java/org/apache/tomcat/util/net/Nio2Endpoint.java
@@ -298,12 +298,10 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel,AsynchronousS
             }
             Nio2SocketWrapper socketWrapper = new Nio2SocketWrapper(channel, this);
             channel.reset(socket, socketWrapper);
-            socketWrapper.setReadTimeout(getSocketProperties().getSoTimeout());
-            socketWrapper.setWriteTimeout(getSocketProperties().getSoTimeout());
-            socketWrapper.setKeepAliveLeft(Nio2Endpoint.this.getMaxKeepAliveRequests());
-            socketWrapper.setSecure(isSSLEnabled());
             socketWrapper.setReadTimeout(getConnectionTimeout());
             socketWrapper.setWriteTimeout(getConnectionTimeout());
+            socketWrapper.setKeepAliveLeft(Nio2Endpoint.this.getMaxKeepAliveRequests());
+            socketWrapper.setSecure(isSSLEnabled());
             // Continue processing on another thread
             return processSocket(socketWrapper, SocketEvent.OPEN_READ, true);
         } catch (Throwable t) {

==================================================
