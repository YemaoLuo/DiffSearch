62a684cd2b2039a68e74813cf4e20fc95a2cebe4
==================================================
Partial fix for BZ 63362 provide h2 request statistics
==================================================
Mark Thomas
==================================================
Wed Jun 24 19:24:17 2020 +0100
==================================================
AbstractProtocol.java
Partial fix for BZ 63362 provide h2 request statistics



==================================================
UpgradeProtocol.java
index 83960cbe9c..43c8d64778 100644
--- a/java/org/apache/coyote/LocalStrings.properties
+++ b/java/org/apache/coyote/LocalStrings.properties
@@ -36,6 +36,7 @@ abstractProcessor.socket.ssl=Exception getting SSL attributes
 abstractProtocol.mbeanDeregistrationFailed=Failed to deregister MBean named [{0}] from MBean server [{1}]
 abstractProtocol.processorRegisterError=Error registering request processor
 abstractProtocol.processorUnregisterError=Error unregistering request processor
+abstractProtocol.upgradeProtocolDestroyError=Error destroying upgrade protocol
 abstractProtocol.waitingProcessor.add=Added processor [{0}] to waiting processors
 abstractProtocol.waitingProcessor.remove=Removed processor [{0}] from waiting processors
 

==================================================
Http2Protocol.java
index dc840df9e4..cd2767b126 100644
--- a/java/org/apache/coyote/UpgradeProtocol.java
+++ b/java/org/apache/coyote/UpgradeProtocol.java
@@ -107,4 +107,26 @@ public interface UpgradeProtocol {
     public default void setHttp11Protocol(AbstractProtocol<?> protocol) {
         // NO-OP
     }
+
+
+    /**
+     * Initialise the upgrade protocol. Called once the parent HTTP/1.1 protocol
+     * has initialised.
+     *
+     * @throws Exception If initialisation fails
+     */
+    public default void init() throws Exception {
+        // NO-OP
+    }
+
+
+    /**
+     * Destroy the upgrade protocol. Called before the parent HTTP/1.1 protocol
+     * is destroyed.
+     *
+     * @throws Exception If the upgrade protocol is not destroyed cleanly
+     */
+    public default void destroy() throws Exception {
+        // NO-OP
+    }
 }

==================================================
StreamProcessor.java
index a93955bc46..1be95d9f24 100644
--- a/java/org/apache/coyote/http2/Http2Protocol.java
+++ b/java/org/apache/coyote/http2/Http2Protocol.java
@@ -19,17 +19,21 @@ package org.apache.coyote.http2;
 import java.nio.charset.StandardCharsets;
 import java.util.Enumeration;
 
+import javax.management.ObjectName;
+
 import org.apache.coyote.AbstractProtocol;
 import org.apache.coyote.Adapter;
 import org.apache.coyote.ContinueResponseTiming;
 import org.apache.coyote.Processor;
 import org.apache.coyote.Request;
+import org.apache.coyote.RequestGroupInfo;
 import org.apache.coyote.Response;
 import org.apache.coyote.UpgradeProtocol;
 import org.apache.coyote.UpgradeToken;
 import org.apache.coyote.http11.AbstractHttp11Protocol;
 import org.apache.coyote.http11.upgrade.InternalHttpUpgradeHandler;
 import org.apache.coyote.http11.upgrade.UpgradeProcessorInternal;
+import org.apache.tomcat.util.modeler.Registry;
 import org.apache.tomcat.util.net.SocketWrapperBase;
 
 public class Http2Protocol implements UpgradeProtocol {
@@ -81,6 +85,9 @@ public class Http2Protocol implements UpgradeProtocol {
     // Reference to HTTP/1.1 protocol that this instance is configured under
     private AbstractHttp11Protocol<?> http11Protocol = null;
 
+    private RequestGroupInfo global = new RequestGroupInfo();
+    private ObjectName rgOname = null;
+
     @Override
     public String getHttpUpgradeName(boolean isSSLEnabled) {
         if (isSSLEnabled) {
@@ -328,8 +335,42 @@ public class Http2Protocol implements UpgradeProtocol {
         return this.http11Protocol;
     }
 
+
     @Override
     public void setHttp11Protocol(AbstractProtocol<?> http11Protocol) {
         this.http11Protocol = (AbstractHttp11Protocol<?>) http11Protocol;
     }
+
+
+    public RequestGroupInfo getGlobal() {
+        return global;
+    }
+
+
+    @Override
+    public void init() throws Exception {
+        ObjectName parentRgOname = http11Protocol.getGlobalRequestProcessorMBeanName();
+        if (parentRgOname != null) {
+            StringBuilder name = new StringBuilder(parentRgOname.getCanonicalName());
+            name.append(",Upgrade=");
+            // Neither of these names need quoting
+            if (http11Protocol.isSSLEnabled()) {
+                name.append(ALPN_NAME);
+            } else {
+                name.append(HTTP_UPGRADE_NAME);
+            }
+            ObjectName rgOname = new ObjectName(name.toString());
+            this.rgOname = rgOname;
+            Registry.getRegistry(null, null).registerComponent(global, rgOname, null);
+        }
+    }
+
+
+    @Override
+    public void destroy() throws Exception {
+        ObjectName rgOname = this.rgOname;
+        if (rgOname != null) {
+            Registry.getRegistry(null, null).unregisterComponent(rgOname);
+        }
+    }
 }

==================================================
