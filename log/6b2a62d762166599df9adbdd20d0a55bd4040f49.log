6b2a62d762166599df9adbdd20d0a55bd4040f49
==================================================
Push register write-interest down into the SocketWrapper
==================================================
Mark Thomas
==================================================
Thu Jan 8 13:10:26 2015 +0000
==================================================
InternalAprOutputBuffer.java
Push register write-interest down into the SocketWrapper

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1650275 13f79535-47bb-0310-9956-ffa450edef68



==================================================
InternalNioOutputBuffer.java
index 523713fd18..688fdd8f90 100644
--- a/java/org/apache/coyote/http11/InternalAprOutputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalAprOutputBuffer.java
@@ -14,14 +14,12 @@
  *  See the License for the specific language governing permissions and
  *  limitations under the License.
  */
-
 package org.apache.coyote.http11;
 
 import java.io.IOException;
 import java.nio.ByteBuffer;
 
 import org.apache.coyote.Response;
-import org.apache.tomcat.util.net.AprEndpoint;
 import org.apache.tomcat.util.net.SocketWrapperBase;
 
 /**
@@ -83,8 +81,7 @@ public class InternalAprOutputBuffer extends AbstractOutputBuffer<Long> {
 
 
     @Override
-    protected void registerWriteInterest() {
-        ((AprEndpoint) socketWrapper.getEndpoint()).getPoller().add(
-                socketWrapper.getSocket().longValue(), -1, false, true);
+    protected void registerWriteInterest() throws IOException {
+        socketWrapper.registerWriteInterest();
     }
 }

==================================================
AprEndpoint.java
index b423c4b522..0a57e72bcc 100644
--- a/java/org/apache/coyote/http11/InternalNioOutputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalNioOutputBuffer.java
@@ -14,15 +14,12 @@
  *  See the License for the specific language governing permissions and
  *  limitations under the License.
  */
-
 package org.apache.coyote.http11;
 
 import java.io.IOException;
-import java.nio.channels.SelectionKey;
 
 import org.apache.coyote.Response;
 import org.apache.tomcat.util.net.NioChannel;
-import org.apache.tomcat.util.net.NioEndpoint.NioSocketWrapper;
 import org.apache.tomcat.util.net.SocketWrapperBase;
 
 /**
@@ -78,6 +75,6 @@ public class InternalNioOutputBuffer extends AbstractOutputBuffer<NioChannel> {
 
     @Override
     protected void registerWriteInterest() throws IOException {
-        ((NioSocketWrapper) socketWrapper).getPoller().add(socketWrapper.getSocket(), SelectionKey.OP_WRITE);
+        socketWrapper.registerWriteInterest();
     }
 }

==================================================
Nio2Endpoint.java
index ab122d56f5..af0fec2810 100644
--- a/java/org/apache/tomcat/util/net/AprEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AprEndpoint.java
@@ -2614,6 +2614,12 @@ public class AprEndpoint extends AbstractEndpoint<Long> {
         }
 
 
+        @Override
+        public void registerWriteInterest() throws IOException {
+            ((AprEndpoint) getEndpoint()).getPoller().add(getSocket().longValue(), -1, false, true);
+        }
+
+
         @Override
         public void regsiterForEvent(boolean read, boolean write) {
             ((AprEndpoint) getEndpoint()).getPoller().add(

==================================================
NioEndpoint.java
index 84e74944bb..030a5d1974 100644
--- a/java/org/apache/tomcat/util/net/Nio2Endpoint.java
+++ b/java/org/apache/tomcat/util/net/Nio2Endpoint.java
@@ -1069,11 +1069,18 @@ public class Nio2Endpoint extends AbstractEndpoint<Nio2Channel> {
         }
 
 
+        @Override
+        public void registerWriteInterest() throws IOException {
+            // TODO Auto-generated method stub
+        }
+
+
         @Override
         public void regsiterForEvent(boolean read, boolean write) {
             // NO-OP. Appropriate handlers will already have been registered.
         }
 
+
         @Override
         public boolean flush(boolean block) throws IOException {
             // TODO Auto-generated method stub

==================================================
SocketWrapperBase.java
index 8eb7222b3d..2a49e7b012 100644
--- a/java/org/apache/tomcat/util/net/NioEndpoint.java
+++ b/java/org/apache/tomcat/util/net/NioEndpoint.java
@@ -1547,6 +1547,13 @@ public class NioEndpoint extends AbstractEndpoint<NioChannel> {
             return written;
         }
 
+
+        @Override
+        public void registerWriteInterest() throws IOException {
+            getPoller().add(getSocket(), SelectionKey.OP_WRITE);
+        }
+
+
         @Override
         public void regsiterForEvent(boolean read, boolean write) {
             SelectionKey key = getSocket().getIOChannel().keyFor(

==================================================
