ff782642f3696c9950672e34ec8ee0414d618d01
==================================================
Rename and provide a better comment
==================================================
Mark Thomas
==================================================
Thu Aug 16 07:34:13 2018 +0000
==================================================
Nio2Endpoint.java
Rename and provide a better comment

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1838155 13f79535-47bb-0310-9956-ffa450edef68



==================================================
SocketWrapperBase.java
index 9f2aea2655..171ffea8d8 100644
--- a/java/org/apache/tomcat/util/net/Nio2Endpoint.java
+++ b/java/org/apache/tomcat/util/net/Nio2Endpoint.java
@@ -572,10 +572,10 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel,AsynchronousS
                     synchronized (writeCompletionHandler) {
                         if (nBytes.intValue() < 0) {
                             failed(new EOFException(sm.getString("iob.failedwrite")), attachment);
-                        } else if (!writeBuffer.isEmpty()) {
+                        } else if (!nonBlockingWriteBuffer.isEmpty()) {
                             nestedWriteCompletionCount.get().incrementAndGet();
                             // Continue writing data using a gathering write
-                            ByteBuffer[] array = writeBuffer.toArray(attachment);
+                            ByteBuffer[] array = nonBlockingWriteBuffer.toArray(attachment);
                             getSocket().write(array, 0, array.length,
                                     toNio2Timeout(getWriteTimeout()), TimeUnit.MILLISECONDS,
                                     array, gatheringWriteCompletionHandler);
@@ -621,10 +621,10 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel,AsynchronousS
                     synchronized (writeCompletionHandler) {
                         if (nBytes.longValue() < 0) {
                             failed(new EOFException(sm.getString("iob.failedwrite")), attachment);
-                        } else if (!writeBuffer.isEmpty() || arrayHasData(attachment)) {
+                        } else if (!nonBlockingWriteBuffer.isEmpty() || arrayHasData(attachment)) {
                             // Continue writing data using a gathering write
                             nestedWriteCompletionCount.get().incrementAndGet();
-                            ByteBuffer[] array = writeBuffer.toArray(attachment);
+                            ByteBuffer[] array = nonBlockingWriteBuffer.toArray(attachment);
                             getSocket().write(array, 0, array.length,
                                     toNio2Timeout(getWriteTimeout()), TimeUnit.MILLISECONDS,
                                     array, gatheringWriteCompletionHandler);
@@ -1164,11 +1164,11 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel,AsynchronousS
                     off = off + thisTime;
                     if (len > 0) {
                         // Remaining data must be buffered
-                        writeBuffer.add(buf, off, len);
+                        nonBlockingWriteBuffer.add(buf, off, len);
                     }
                     flushNonBlocking(true);
                 } else {
-                    writeBuffer.add(buf, off, len);
+                    nonBlockingWriteBuffer.add(buf, off, len);
                 }
             }
         }
@@ -1199,11 +1199,11 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel,AsynchronousS
                     transfer(from, socketBufferHandler.getWriteBuffer());
                     if (from.remaining() > 0) {
                         // Remaining data must be buffered
-                        writeBuffer.add(from);
+                        nonBlockingWriteBuffer.add(from);
                     }
                     flushNonBlocking(true);
                 } else {
-                    writeBuffer.add(from);
+                    nonBlockingWriteBuffer.add(from);
                 }
             }
         }
@@ -1274,8 +1274,8 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel,AsynchronousS
             synchronized (writeCompletionHandler) {
                 if (hasPermit || writePending.tryAcquire()) {
                     socketBufferHandler.configureWriteBufferForRead();
-                    if (!writeBuffer.isEmpty()) {
-                        ByteBuffer[] array = writeBuffer.toArray(socketBufferHandler.getWriteBuffer());
+                    if (!nonBlockingWriteBuffer.isEmpty()) {
+                        ByteBuffer[] array = nonBlockingWriteBuffer.toArray(socketBufferHandler.getWriteBuffer());
                         Nio2Endpoint.startInline();
                         getSocket().write(array, 0, array.length, toNio2Timeout(getWriteTimeout()),
                                 TimeUnit.MILLISECONDS, array, gatheringWriteCompletionHandler);
@@ -1303,7 +1303,7 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel,AsynchronousS
         public boolean hasDataToWrite() {
             synchronized (writeCompletionHandler) {
                 return !socketBufferHandler.isWriteBufferEmpty() ||
-                        !writeBuffer.isEmpty() || getError() != null;
+                        !nonBlockingWriteBuffer.isEmpty() || getError() != null;
             }
         }
 

==================================================
