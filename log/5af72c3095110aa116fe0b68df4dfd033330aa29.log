5af72c3095110aa116fe0b68df4dfd033330aa29
==================================================
Add the Endpoint to the SocketWrapper
==================================================
Mark Emlyn
==================================================
Mon Nov 10 16:45:20 2014 +0000
==================================================
AprEndpoint.java
Add the Endpoint to the SocketWrapper

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1637919 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Nio2Endpoint.java
index 3148476ee0..c2035a1ae0 100644
--- a/java/org/apache/tomcat/util/net/AprEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AprEndpoint.java
@@ -823,7 +823,7 @@ public class AprEndpoint extends AbstractEndpoint<Long> {
                             Long.valueOf(socket)));
                 }
                 AprSocketWrapper wrapper =
-                        new AprSocketWrapper(Long.valueOf(socket));
+                        new AprSocketWrapper(Long.valueOf(socket), this);
                 wrapper.setKeepAliveLeft(getMaxKeepAliveRequests());
                 wrapper.setSecure(isSSLEnabled());
                 connections.put(Long.valueOf(socket), wrapper);
@@ -2351,8 +2351,8 @@ public class AprEndpoint extends AbstractEndpoint<Long> {
         // This field should only be used by Poller#run()
         private int pollerFlags = 0;
 
-        public AprSocketWrapper(Long socket) {
-            super(socket);
+        public AprSocketWrapper(Long socket, AprEndpoint endpoint) {
+            super(socket, endpoint);
         }
     }
 }

==================================================
NioEndpoint.java
index 3daf96c1a3..33d31e68b5 100644
--- a/java/org/apache/tomcat/util/net/Nio2Endpoint.java
+++ b/java/org/apache/tomcat/util/net/Nio2Endpoint.java
@@ -511,7 +511,7 @@ public class Nio2Endpoint extends AbstractEndpoint<Nio2Channel> {
             }
             Nio2SocketWrapper socketWrapper = (useCaches) ? socketWrapperCache.pop() : null;
             if (socketWrapper == null) {
-                socketWrapper = new Nio2SocketWrapper(channel);
+                socketWrapper = new Nio2SocketWrapper(channel, this);
             }
             channel.reset(socket, socketWrapper);
             socketWrapper.reset(channel, getSocketProperties().getSoTimeout());
@@ -732,8 +732,8 @@ public class Nio2Endpoint extends AbstractEndpoint<Nio2Channel> {
         private SendfileData sendfileData = null;
         private boolean upgradeInit = false;
 
-        public Nio2SocketWrapper(Nio2Channel channel) {
-            super(channel);
+        public Nio2SocketWrapper(Nio2Channel channel, Nio2Endpoint endpoint) {
+            super(channel, endpoint);
         }
 
         @Override

==================================================
SocketWrapperBase.java
index 34838c50fd..bda0feb969 100644
--- a/java/org/apache/tomcat/util/net/NioEndpoint.java
+++ b/java/org/apache/tomcat/util/net/NioEndpoint.java
@@ -926,7 +926,7 @@ public class NioEndpoint extends AbstractEndpoint<NioChannel> {
         public void register(final NioChannel socket) {
             socket.setPoller(this);
             NioSocketWrapper key = keyCache.pop();
-            final NioSocketWrapper ka = key!=null?key:new NioSocketWrapper(socket);
+            final NioSocketWrapper ka = key!=null?key:new NioSocketWrapper(socket, NioEndpoint.this);
             ka.reset(this,socket,getSocketProperties().getSoTimeout());
             ka.setKeepAliveLeft(NioEndpoint.this.getMaxKeepAliveRequests());
             ka.setSecure(isSSLEnabled());
@@ -1321,8 +1321,8 @@ public class NioEndpoint extends AbstractEndpoint<NioChannel> {
 // ----------------------------------------------------- Key Attachment Class
     public static class NioSocketWrapper extends SocketWrapperBase<NioChannel> {
 
-        public NioSocketWrapper(NioChannel channel) {
-            super(channel);
+        public NioSocketWrapper(NioChannel channel, NioEndpoint endpoint) {
+            super(channel, endpoint);
         }
 
         public void reset(Poller poller, NioChannel channel, long soTimeout) {

==================================================
