0f985f26faa8515def44fb54442483f1d341e569
==================================================
fix #55917 by allowing 8-bit ISO-8859-1 characters in V0 cookie values
==================================================
Jeremy Boynes
==================================================
Mon Dec 23 19:15:35 2013 +0000
==================================================
Cookies.java
fix #55917 by allowing 8-bit ISO-8859-1 characters in V0 cookie values

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1553187 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestCookies.java
index 8a9f4197fd..5be69c01b8 100644
--- a/java/org/apache/tomcat/util/http/Cookies.java
+++ b/java/org/apache/tomcat/util/http/Cookies.java
@@ -508,14 +508,7 @@ public final class Cookies {
     private static final int getTokenEndPosition(byte bytes[], int off, int end,
             int version, boolean isName){
         int pos = off;
-        while (pos < end &&
-                (!CookieSupport.isHttpSeparator((char)bytes[pos]) ||
-                 version == 0 &&
-                        CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 &&
-                        bytes[pos] != '=' &&
-                        !CookieSupport.isV0Separator((char)bytes[pos]) ||
-                 !isName && bytes[pos] == '=' &&
-                         CookieSupport.ALLOW_EQUALS_IN_VALUE)) {
+        while (pos < end && allowInToken(bytes[pos], version, isName)) {
             pos++;
         }
 
@@ -525,6 +518,34 @@ public final class Cookies {
         return pos;
     }
 
+    private static boolean allowInToken(byte b, int version, boolean isName) {
+        // byte is signed so cast into a positive int for comparisons
+        int octet = ((int)b) & 0xff;
+
+        // disallow all controls
+        if (octet < 0x20 && octet != 0x09 || octet >= 0x7f && octet < 0xa0) {
+            throw new IllegalArgumentException(
+                    "Control character in cookie value or attribute.");
+        }
+
+        // values 0xa0-0xff are allowed in V0 values, otherwise disallow
+        if (octet >= 0x80) {
+            if (isName || version != 0) {
+                throw new IllegalArgumentException(
+                        "Control character in cookie value or attribute.");
+            }
+            return true;
+        }
+
+        return !CookieSupport.isHttpSeparator((char) b) ||
+                version == 0 &&
+                        CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 &&
+                        b != '=' &&
+                        !CookieSupport.isV0Separator((char) b) ||
+                !isName && b == '=' &&
+                        CookieSupport.ALLOW_EQUALS_IN_VALUE;
+    }
+
     /**
      * Given a starting position after an initial quote character, this gets
      * the position of the end quote. This escapes anything after a '\' char

==================================================
