f41c7d91e2d33f4d09254f7a46df63960238bbc4
==================================================
Micro optimization: Use String#[last]indexOf(int) instead of #indexOf(String) where possible
==================================================
Martin Tzvetanov
==================================================
Wed Dec 9 10:59:10 2020 +0200
==================================================
MBeanDumper.java
Micro optimization: Use String#[last]indexOf(int) instead of #indexOf(String) where possible



==================================================
NetMask.java
index adddd6a221..8949f25de8 100644
--- a/java/org/apache/catalina/mbeans/MBeanDumper.java
+++ b/java/org/apache/catalina/mbeans/MBeanDumper.java
@@ -159,7 +159,7 @@ public class MBeanDumper {
         // The only invalid char is \n
         // We also need to keep the string short and split it with \nSPACE
         // XXX TODO
-        int idx = value.indexOf("\n");
+        int idx = value.indexOf('\n');
         if (idx < 0) {
             return value;
         }

==================================================
RemoteCIDRValve.java
index fa3406519f..bdad9f9de9 100644
--- a/java/org/apache/catalina/util/NetMask.java
+++ b/java/org/apache/catalina/util/NetMask.java
@@ -96,7 +96,7 @@ public final class NetMask {
 
         expression = input;
 
-        final int portIdx = input.indexOf(";");
+        final int portIdx = input.indexOf(';');
         final String nonPortPart;
 
         if (portIdx == -1) {
@@ -116,7 +116,7 @@ public final class NetMask {
             }
         }
 
-        final int idx = nonPortPart.indexOf("/");
+        final int idx = nonPortPart.indexOf('/');
 
         /*
          * Handle the "IP only" case first

==================================================
ResolverImpl.java
index 4565c71b7d..06cd548ec4 100644
--- a/java/org/apache/catalina/valves/RemoteCIDRValve.java
+++ b/java/org/apache/catalina/valves/RemoteCIDRValve.java
@@ -141,7 +141,7 @@ public final class RemoteCIDRValve extends RequestFilterValve {
     @Override
     public boolean isAllowed(final String property) {
 
-        final int portIdx = property.indexOf(";");
+        final int portIdx = property.indexOf(';');
         final int port;
         final String nonPortPart;
 

==================================================
RewriteValve.java
index 01afcfff65..8e925dcff3 100644
--- a/java/org/apache/catalina/valves/rewrite/ResolverImpl.java
+++ b/java/org/apache/catalina/valves/rewrite/ResolverImpl.java
@@ -287,7 +287,7 @@ public class ResolverImpl extends Resolver {
         StringTokenizer tokenizer = new StringTokenizer(fullDN, ",");
         while (tokenizer.hasMoreElements()) {
             String token = tokenizer.nextToken().trim();
-            int pos = token.indexOf("=");
+            int pos = token.indexOf('=');
             if (pos > 0 && (pos + 1) < token.length()) {
                 components.put(token.substring(0, pos), token.substring(pos + 1));
             }

==================================================
JspCServletContext.java
index 9c760619ff..9277e3ce59 100644
--- a/java/org/apache/catalina/valves/rewrite/RewriteValve.java
+++ b/java/org/apache/catalina/valves/rewrite/RewriteValve.java
@@ -364,7 +364,7 @@ public class RewriteValve extends ValveBase {
                     // Append the query string to the url if there is one and it
                     // hasn't been rewritten
                     String urlStringDecoded = urlDecoded.toString();
-                    int index = urlStringDecoded.indexOf("?");
+                    int index = urlStringDecoded.indexOf('?');
                     String rewrittenQueryStringDecoded;
                     if (index == -1) {
                         rewrittenQueryStringDecoded = null;

==================================================
RFC2231Utility.java
index 2727aedfb7..8fc0a1fb3f 100644
--- a/java/org/apache/jasper/servlet/JspCServletContext.java
+++ b/java/org/apache/jasper/servlet/JspCServletContext.java
@@ -470,7 +470,7 @@ public class JspCServletContext implements ServletContext {
                         if (entryName.startsWith(jarPath) &&
                                 entryName.length() > jarPath.length()) {
                             // Let the Set implementation handle duplicates
-                            int sep = entryName.indexOf("/", jarPath.length());
+                            int sep = entryName.indexOf('/', jarPath.length());
                             if (sep < 0) {
                                 // This is a file - strip leading "META-INF/resources"
                                 thePaths.add(entryName.substring(18));

==================================================
Registry.java
index 386b228d93..a30f34e669 100644
--- a/java/org/apache/tomcat/util/http/fileupload/util/mime/RFC2231Utility.java
+++ b/java/org/apache/tomcat/util/http/fileupload/util/mime/RFC2231Utility.java
@@ -51,7 +51,7 @@ public final class RFC2231Utility {
      */
     public static boolean hasEncodedValue(String paramName) {
         if (paramName != null) {
-            return paramName.lastIndexOf("*") == (paramName.length() - 1);
+            return paramName.lastIndexOf('*') == (paramName.length() - 1);
         }
         return false;
     }
@@ -65,7 +65,7 @@ public final class RFC2231Utility {
     public static String stripDelimiter(String paramName) {
         if (hasEncodedValue(paramName)) {
             StringBuilder paramBuilder = new StringBuilder(paramName);
-            paramBuilder.deleteCharAt(paramName.lastIndexOf("*"));
+            paramBuilder.deleteCharAt(paramName.lastIndexOf('*'));
             return paramBuilder.toString();
         }
         return paramName;

==================================================
IPv6Utils.java
index 43e1dd6cbe..514bfe0de9 100644
--- a/java/org/apache/tomcat/util/modeler/Registry.java
+++ b/java/org/apache/tomcat/util/modeler/Registry.java
@@ -714,8 +714,8 @@ public class Registry implements RegistryMBean, MBeanRegistration {
 
         String className = type;
         String pkg = className;
-        while (pkg.indexOf(".") > 0) {
-            int lastComp = pkg.lastIndexOf(".");
+        while (pkg.indexOf('.') > 0) {
+            int lastComp = pkg.lastIndexOf('.');
             if (lastComp <= 0)
                 return;
             pkg = pkg.substring(0, lastComp);

==================================================
TestHttp11InputBufferCRLF.java
index bccc0a2683..19b5d83355 100644
--- a/java/org/apache/tomcat/util/net/IPv6Utils.java
+++ b/java/org/apache/tomcat/util/net/IPv6Utils.java
@@ -60,7 +60,7 @@ public class IPv6Utils {
         if (ipv6Address.contains(".")) {
             // IPv4 in IPv6
             // e.g. 0:0:0:0:0:FFFF:127.0.0.1
-            int lastColonPos = ipv6Address.lastIndexOf(":");
+            int lastColonPos = ipv6Address.lastIndexOf(':');
             int lastColonsPos = ipv6Address.lastIndexOf("::");
             if (lastColonsPos >= 0 && lastColonPos == lastColonsPos + 1) {
                 /*
@@ -80,7 +80,7 @@ public class IPv6Utils {
         } else if (ipv6Address.contains("%")) {
             // Zone ID
             // e.g. fe80:0:0:0:f0f0:c0c0:1919:1234%4
-            ipv6AddressLength = ipv6Address.lastIndexOf("%");
+            ipv6AddressLength = ipv6Address.lastIndexOf('%');
         }
 
         StringBuilder result = new StringBuilder();

==================================================
