282f6026e44f7a658001cf859eb1f6377e74b97a
==================================================
The container is responsible for the first calls to onDataAvailable()
==================================================
Mark Thomas
==================================================
Sun Feb 22 18:49:27 2015 +0000
==================================================
UpgradeServletInputStream.java
The container is responsible for the first calls to onDataAvailable()
and onWritePossible(). Trigger them from the setting of the appropriate
listener.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1661515 13f79535-47bb-0310-9956-ffa450edef68



==================================================
UpgradeServletOutputStream.java
index 865682f448..bd3deb9778 100644
--- a/java/org/apache/coyote/http11/upgrade/UpgradeServletInputStream.java
+++ b/java/org/apache/coyote/http11/upgrade/UpgradeServletInputStream.java
@@ -21,9 +21,11 @@ import java.io.IOException;
 import javax.servlet.ReadListener;
 import javax.servlet.ServletInputStream;
 
+import org.apache.coyote.ContainerThreadMarker;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.ExceptionUtils;
+import org.apache.tomcat.util.net.DispatchType;
 import org.apache.tomcat.util.net.SocketWrapperBase;
 import org.apache.tomcat.util.res.StringManager;
 
@@ -98,6 +100,13 @@ public class UpgradeServletInputStream extends ServletInputStream {
             throw new IllegalStateException(sm.getString("upgrade.sis.read.closed"));
         }
 
+        // Container is responsible for first call to onDataAvailable().
+        if (ContainerThreadMarker.isContainerThread()) {
+            socketWrapper.addDispatch(DispatchType.NON_BLOCKING_READ);
+        } else {
+            socketWrapper.registerReadInterest();
+        }
+
         this.listener = listener;
         this.applicationLoader = Thread.currentThread().getContextClassLoader();
         // Switching to non-blocking. Don't know if data is available.

==================================================
