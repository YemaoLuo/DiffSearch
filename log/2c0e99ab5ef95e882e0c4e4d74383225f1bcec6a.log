2c0e99ab5ef95e882e0c4e4d74383225f1bcec6a
==================================================
Add a (current unused) method to set socket timeouts
==================================================
Mark Emlyn
==================================================
Fri Aug 30 23:11:33 2013 +0000
==================================================
AbstractAjpProcessor.java
Add a (current unused) method to set socket timeouts

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1519114 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AjpAprProcessor.java
index c4aec55783..f7a8c19958 100644
--- a/java/org/apache/coyote/ajp/AbstractAjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AbstractAjpProcessor.java
@@ -46,6 +46,7 @@ import org.apache.tomcat.util.net.AbstractEndpoint;
 import org.apache.tomcat.util.net.AbstractEndpoint.Handler.SocketState;
 import org.apache.tomcat.util.net.SSLSupport;
 import org.apache.tomcat.util.net.SocketStatus;
+import org.apache.tomcat.util.net.SocketWrapper;
 import org.apache.tomcat.util.res.StringManager;
 
 /**
@@ -648,6 +649,10 @@ public abstract class AbstractAjpProcessor<S> extends AbstractProcessor<S> {
     protected abstract void output(byte[] src, int offset, int length)
             throws IOException;
 
+    // Methods used by process
+    protected abstract void setTimeout(SocketWrapper<S> socketWrapper,
+            int timeout) throws IOException;
+
     // Methods used by SocketInputBuffer
     /** Receive a chunk of data. Called to implement the
      *  'special' packet in ajp13 and to receive the data

==================================================
AjpNioProcessor.java
index 1e563c1b8a..7c1cbcfc20 100644
--- a/java/org/apache/coyote/ajp/AjpAprProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpAprProcessor.java
@@ -272,6 +272,13 @@ public class AjpAprProcessor extends AbstractAjpProcessor<Long> {
 
     // ------------------------------------------------------ Protected Methods
 
+    @Override
+    protected void setTimeout(SocketWrapper<Long> socketWrapper,
+            int timeout) throws IOException {
+        Socket.timeoutSet(
+                socketWrapper.getSocket().longValue(), timeout * 1000);
+    }
+
 
     @Override
     protected void output(byte[] src, int offset, int length)

==================================================
AjpProcessor.java
index 5f613d4e47..4b19863785 100644
--- a/java/org/apache/coyote/ajp/AjpNioProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpNioProcessor.java
@@ -265,6 +265,13 @@ public class AjpNioProcessor extends AbstractAjpProcessor<NioChannel> {
 
     // ------------------------------------------------------ Protected Methods
 
+    @Override
+    protected void setTimeout(SocketWrapper<NioChannel> socketWrapper,
+            int timeout) throws IOException {
+        socketWrapper.setTimeout(timeout);
+    }
+
+
     @Override
     protected void output(byte[] src, int offset, int length)
             throws IOException {

==================================================
