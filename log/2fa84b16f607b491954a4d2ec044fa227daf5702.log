2fa84b16f607b491954a4d2ec044fa227daf5702
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=57132
==================================================
Konstantin Kolinko
==================================================
Thu Oct 23 08:43:52 2014 +0000
==================================================
ImportHandler.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=57132
ImportHandler.resolveClass() fails to report conflicting import when called repeatedly

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1633769 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestImportHandler.java
index 1eb6b39a9e..70fdac7bd6 100644
--- a/java/javax/el/ImportHandler.java
+++ b/java/javax/el/ImportHandler.java
@@ -51,7 +51,7 @@ public class ImportHandler {
         String className = name.substring(0, lastPeriod);
         String fieldOrMethodName = name.substring(lastPeriod + 1);
 
-        Class<?> clazz = findClass(className, false);
+        Class<?> clazz = findClass(className);
 
         if (clazz == null) {
             throw new ELException(Util.message(
@@ -108,12 +108,22 @@ public class ImportHandler {
                     null, "importHandler.invalidClassName", name));
         }
 
-        Class<?> clazz = findClass(name, true);
+        Class<?> clazz = findClass(name);
 
         if (clazz == null) {
             throw new ELException(Util.message(
                     null, "importHandler.classNotFound", name));
         }
+
+        String simpleName = clazz.getSimpleName();
+        Class<?> conflict = clazzes.get(simpleName);
+
+        if (conflict != null) {
+            throw new ELException(Util.message(null,
+                    "importHandler.ambiguousImport", name, conflict.getName()));
+        }
+
+        clazzes.put(simpleName, clazz);
     }
 
 
@@ -143,11 +153,19 @@ public class ImportHandler {
             // (which correctly triggers an error)
             for (String p : packages) {
                 String className = p + '.' + name;
-                Class<?> clazz = findClass(className, true);
+                Class<?> clazz = findClass(className);
                 if (clazz != null) {
+                    if (result != null) {
+                        throw new ELException(Util.message(null,
+                                "importHandler.ambiguousImport", className,
+                                result.getName()));
+                    }
                     result = clazz;
                 }
             }
+            if (result != null) {
+                clazzes.put(name, result);
+            }
         }
 
         return result;
@@ -159,7 +177,7 @@ public class ImportHandler {
     }
 
 
-    private Class<?> findClass(String name, boolean cache) {
+    private Class<?> findClass(String name) {
         Class<?> clazz;
         try {
              clazz = Class.forName(name);
@@ -175,18 +193,6 @@ public class ImportHandler {
                     null, "importHandler.invalidClass", name));
         }
 
-        if (cache) {
-            String simpleName = clazz.getSimpleName();
-            Class<?> conflict = clazzes.get(simpleName);
-
-            if (conflict != null) {
-                throw new ELException(Util.message(null,
-                        "importHandler.ambiguousImport", name, conflict.getName()));
-            }
-
-            clazzes.put(simpleName, clazz);
-        }
-
         return clazz;
     }
 }

==================================================
