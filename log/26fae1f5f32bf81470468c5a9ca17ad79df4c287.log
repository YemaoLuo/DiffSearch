26fae1f5f32bf81470468c5a9ca17ad79df4c287
==================================================
TLD handling improvements
==================================================
Mark Emlyn
==================================================
Thu Aug 6 13:08:31 2009 +0000
==================================================
TldConfig.java
index 071fe48ec5..455d26e378 100644
--- a/java/org/apache/catalina/startup/LocalStrings.properties
+++ b/java/org/apache/catalina/startup/LocalStrings.properties
@@ -93,7 +93,9 @@ hostConfig.undeploying=Undeploying deployed web applications
 tldConfig.addListeners=Adding {0} listeners from TLD files
 tldConfig.cce=Lifecycle event data object {0} is not a Context
 tldConfig.classloaderFail=Failed to process ''{0}'' for TLDs.
+tldConfig.classloaderStart=Scanning for TLDs in classloader hierarchy
 tldConfig.execute=Error processing TLD files for context path {0}
+tldConfig.jarUrlStart=Scanning for TLD files in URL ''{0}''
 tldConfig.webinflibStart=Scanning WEB-INF/lib for JARs containing META-INF/**/*.TLD
 tldConfig.webinflibJarFail=Failed to scan JAR ''{0}'' for TLDs
 tldConfig.webinfFail=Failed to process TLD found at ''{0}''

==================================================
TldLocationsCache.java
index 1a472fb7f9..33bf53d423 100644
--- a/java/org/apache/catalina/startup/TldConfig.java
+++ b/java/org/apache/catalina/startup/TldConfig.java
@@ -63,6 +63,12 @@ public final class TldConfig  implements LifecycleListener {
     private static final String WEB_INF = "/WEB-INF/";
     private static final String WEB_INF_LIB = "/WEB-INF/lib/";
     
+    // Configuration properties
+    private static final boolean SCAN_CLASSPATH = Boolean.valueOf(
+            System.getProperty(
+                "org.apache.jasper.compiler.TldLocationsCache.SCAN_CLASSPATH",
+                "true")).booleanValue();
+
     // Names of JARs that are known not to contain any TLDs
     private static HashSet<String> noTldJars;
 
@@ -334,7 +340,9 @@ public final class TldConfig  implements LifecycleListener {
         tldScanWebInfLib();
         
         // Stage 4 - Additional entries from the container
-        tldScanClassloaders();
+        if (SCAN_CLASSPATH) {
+            tldScanClassloaders();
+        }
 
         // Now add all the listeners we found to the listeners for this context
         String list[] = getTldListeners();
@@ -511,6 +519,10 @@ public final class TldConfig  implements LifecycleListener {
      */
     private void tldScanClassloaders() {
 
+        if (log.isTraceEnabled()) {
+            log.trace(sm.getString("tldConfig.classloaderStart"));
+        }
+
         ClassLoader loader = 
             Thread.currentThread().getContextClassLoader();
         
@@ -543,6 +555,10 @@ public final class TldConfig  implements LifecycleListener {
      * Keep in sync with o.a.j.comiler.TldLocationsCache
      */
     private void tldScanJar(URL url) throws IOException {
+        if (log.isTraceEnabled()) {
+            log.trace(sm.getString("tldConfig.jarUrlStart", url));
+        }
+
         URLConnection conn = url.openConnection();
         if (conn instanceof JarURLConnection) {
             tldScanJar((JarURLConnection) conn);

==================================================
