d7d7c118206f6e80296197fb56fa4d482bdb1af8
==================================================
Pull up longPoll()
==================================================
Mark Thomas
==================================================
Thu May 28 08:02:10 2015 +0000
==================================================
AbstractProtocol.java
Pull up longPoll()

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1682163 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AbstractAjpProtocol.java
index 1c0f60edde..510daf57e7 100644
--- a/java/org/apache/coyote/AbstractProtocol.java
+++ b/java/org/apache/coyote/AbstractProtocol.java
@@ -831,7 +831,7 @@ public abstract class AbstractProtocol<S> implements ProtocolHandler,
         }
 
         protected abstract P createProcessor();
-        protected abstract void longPoll(SocketWrapperBase<S> socket,
+        protected abstract void longPoll(SocketWrapperBase<?> socket,
                 Processor processor);
 
         /**

==================================================
AbstractHttp11Protocol.java
index 937753c668..ed0903e6e8 100644
--- a/java/org/apache/coyote/ajp/AbstractAjpProtocol.java
+++ b/java/org/apache/coyote/ajp/AbstractAjpProtocol.java
@@ -169,7 +169,7 @@ public abstract class AbstractAjpProtocol<S> extends AbstractProtocol<S> {
         }
 
         @Override
-        protected void longPoll(SocketWrapperBase<S> socket, Processor processor) {
+        protected void longPoll(SocketWrapperBase<?> socket, Processor processor) {
             // Same requirements for all AJP connectors
             socket.setAsync(true);
         }

==================================================
Http11AprProtocol.java
index c43b29dc77..09a9c55ecb 100644
--- a/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
+++ b/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
@@ -37,6 +37,7 @@ import org.apache.coyote.UpgradeProtocol;
 import org.apache.coyote.http11.upgrade.InternalHttpUpgradeHandler;
 import org.apache.coyote.http11.upgrade.UpgradeProcessorExternal;
 import org.apache.coyote.http11.upgrade.UpgradeProcessorInternal;
+//import org.apache.coyote.http2.Http2Protocol;
 import org.apache.tomcat.util.net.AbstractEndpoint;
 import org.apache.tomcat.util.net.SSLHostConfig;
 import org.apache.tomcat.util.net.SocketWrapperBase;
@@ -626,5 +627,20 @@ public abstract class AbstractHttp11Protocol<S> extends AbstractProtocol<S> {
                 return new UpgradeProcessorExternal(socket, leftoverInput, httpUpgradeHandler);
             }
         }
+
+
+        @Override
+        protected void longPoll(SocketWrapperBase<?> socket, Processor processor) {
+            if (processor.isAsync()) {
+                // Async
+                socket.setAsync(true);
+            } else {
+                // Either:
+                //  - this is an upgraded connection
+                //  - the request line/headers have not been completely
+                //    read
+                socket.registerReadInterest();
+            }
+        }
     }
 }

==================================================
Http11Nio2Protocol.java
index d6efb13542..a04f9f4074 100644
--- a/java/org/apache/coyote/http11/Http11AprProtocol.java
+++ b/java/org/apache/coyote/http11/Http11AprProtocol.java
@@ -104,19 +104,5 @@ public class Http11AprProtocol extends AbstractHttp11Protocol<Long> {
                 socket.registerReadInterest();
             }
         }
-
-        @Override
-        protected void longPoll(SocketWrapperBase<Long> socket, Processor processor) {
-            if (processor.isAsync()) {
-                // Async
-                socket.setAsync(true);
-            } else {
-                // Either:
-                //  - this is an upgraded connection
-                //  - the request line/headers have not been completely
-                //    read
-                socket.registerReadInterest();
-            }
-        }
     }
 }

==================================================
Http11NioProtocol.java
index 5bd259e5d8..e473138eaf 100644
--- a/java/org/apache/coyote/http11/Http11Nio2Protocol.java
+++ b/java/org/apache/coyote/http11/Http11Nio2Protocol.java
@@ -100,19 +100,6 @@ public class Http11Nio2Protocol extends AbstractHttp11JsseProtocol<Nio2Channel>
         }
 
 
-        @Override
-        protected void longPoll(SocketWrapperBase<Nio2Channel> socket, Processor processor) {
-            if (processor.isAsync()) {
-                socket.setAsync(true);
-            } else {
-                // Either:
-                //  - this is an upgraded connection
-                //  - the request line/headers have not been completely
-                //    read
-                socket.registerReadInterest();
-            }
-        }
-
         @Override
         public void closeAll() {
             for (Nio2Channel channel : connections.keySet()) {

==================================================
