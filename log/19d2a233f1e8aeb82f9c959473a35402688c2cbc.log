19d2a233f1e8aeb82f9c959473a35402688c2cbc
==================================================
Reviewing BZ 53085
==================================================
Mark Thomas
==================================================
Fri Jun 8 16:05:35 2018 +0000
==================================================
ApplicationFilterConfig.java
Reviewing BZ 53085
Remove unnecessary code now Context.getInstanceManager() has been added.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1833194 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AsyncContextImpl.java
index 2e7a593745..cb3186c0bf 100644
--- a/java/org/apache/catalina/core/ApplicationFilterConfig.java
+++ b/java/org/apache/catalina/core/ApplicationFilterConfig.java
@@ -22,7 +22,6 @@ import java.io.ObjectInputStream;
 import java.io.Serializable;
 import java.util.Collections;
 import java.util.Enumeration;
-import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 
@@ -38,7 +37,6 @@ import org.apache.catalina.Globals;
 import org.apache.catalina.security.SecurityUtil;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
-import org.apache.tomcat.InstanceManager;
 import org.apache.tomcat.util.ExceptionUtils;
 import org.apache.tomcat.util.descriptor.web.FilterDef;
 import org.apache.tomcat.util.log.SystemLogHandler;
@@ -104,7 +102,7 @@ public final class ApplicationFilterConfig implements FilterConfig, Serializable
             getFilter();
         } else {
             this.filter = filterDef.getFilter();
-            getInstanceManager().newInstance(filter);
+            context.getInstanceManager().newInstance(filter);
             initFilter();
         }
     }
@@ -130,11 +128,6 @@ public final class ApplicationFilterConfig implements FilterConfig, Serializable
      */
     private final FilterDef filterDef;
 
-    /**
-     * the InstanceManager used to create and destroy filter instances.
-     */
-    private transient InstanceManager instanceManager;
-
     /**
      * JMX registration name
      */
@@ -253,7 +246,7 @@ public final class ApplicationFilterConfig implements FilterConfig, Serializable
 
         // Identify the class loader we will be using
         String filterClass = filterDef.getFilterClass();
-        this.filter = (Filter) getInstanceManager().newInstance(filterClass);
+        this.filter = (Filter) context.getInstanceManager().newInstance(filterClass);
 
         initFilter();
 
@@ -334,20 +327,6 @@ public final class ApplicationFilterConfig implements FilterConfig, Serializable
 
     // -------------------------------------------------------- Private Methods
 
-    private InstanceManager getInstanceManager() {
-        if (instanceManager == null) {
-            if (context instanceof StandardContext) {
-                instanceManager = context.getInstanceManager();
-            } else {
-                instanceManager = new DefaultInstanceManager(null,
-                        new HashMap<String, Map<String, String>>(),
-                        context,
-                        getClass().getClassLoader());
-            }
-        }
-        return instanceManager;
-    }
-
     private void registerJMX() {
         String parentName = context.getName();
         if (!parentName.startsWith("/")) {

==================================================
