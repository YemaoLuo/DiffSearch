58bfe009ff2e30800457e6e7343ae57de40b2144
==================================================
Trigger sending the headers from the Http2OutputBuffer as the
==================================================
Mark Thomas
==================================================
Thu Nov 30 10:20:50 2017 +0000
==================================================
Http2OutputBuffer.java
Trigger sending the headers from the Http2OutputBuffer as the
StreamOutputBuffer is too late if a filter (e.g. GZip) needs to
be added.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816704 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Stream.java
index bb3cbe24fd..eda486885a 100644
--- a/java/org/apache/coyote/http2/Http2OutputBuffer.java
+++ b/java/org/apache/coyote/http2/Http2OutputBuffer.java
@@ -19,12 +19,14 @@ package org.apache.coyote.http2;
 import java.io.IOException;
 import java.nio.ByteBuffer;
 
+import org.apache.coyote.Response;
 import org.apache.coyote.http.HttpOutputBuffer;
 import org.apache.coyote.http11.OutputFilter;
 import org.apache.coyote.http2.Stream.StreamOutputBuffer;
 
 public class Http2OutputBuffer implements HttpOutputBuffer {
 
+    private final Response coyoteResponse;
     private HttpOutputBuffer next;
 
 
@@ -43,13 +45,17 @@ public class Http2OutputBuffer implements HttpOutputBuffer {
     }
 
 
-    public Http2OutputBuffer(StreamOutputBuffer streamOutputBuffer) {
+    public Http2OutputBuffer(Response coyoteResponse, StreamOutputBuffer streamOutputBuffer) {
+        this.coyoteResponse = coyoteResponse;
         this.next = streamOutputBuffer;
     }
 
 
     @Override
     public int doWrite(ByteBuffer chunk) throws IOException {
+        if (!coyoteResponse.isCommitted()) {
+            coyoteResponse.sendHeaders();
+        }
         return next.doWrite(chunk);
     }
 

==================================================
