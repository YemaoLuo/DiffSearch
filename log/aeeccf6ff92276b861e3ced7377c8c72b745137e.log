aeeccf6ff92276b861e3ced7377c8c72b745137e
==================================================
Servlet 3. Implement ServletContainerInitializer support
==================================================
Mark Emlyn
==================================================
Fri Apr 23 13:34:17 2010 +0000
==================================================
Context.java
Servlet 3. Implement ServletContainerInitializer support

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@937288 13f79535-47bb-0310-9956-ffa450edef68



==================================================
StandardContext.java
index ef2bd3cfcf..4539b7070c 100644
--- a/java/org/apache/catalina/Context.java
+++ b/java/org/apache/catalina/Context.java
@@ -20,7 +20,9 @@ package org.apache.catalina;
 
 
 import java.net.URL;
+import java.util.Set;
 
+import javax.servlet.ServletContainerInitializer;
 import javax.servlet.ServletContext;
 import javax.servlet.descriptor.JspConfigDescriptor;
 
@@ -1183,11 +1185,23 @@ public interface Context extends Container {
      */
     public JspConfigDescriptor getJspConfigDescriptor();
 
+    
     /**
      * Add a URL for a JAR that contains static resources in a
      * META-INF/resources directory that should be included in the static
      * resources for this context.
      */
     public void addResourceJarUrl(URL url);
+    
+    
+    /**
+     * Add a ServletContainerInitializer instance to this web application.
+     * 
+     * @param sci       The instance to add
+     * @param classes   The classes in which the initializer expressed an
+     *                  interest
+     */
+    public void addServletContainerInitializer(
+            ServletContainerInitializer sci, Set<Class<?>> classes);
 }
 

==================================================
ContextConfig.java
index 4c1c58bf42..717ff5067e 100644
--- a/java/org/apache/catalina/core/StandardContext.java
+++ b/java/org/apache/catalina/core/StandardContext.java
@@ -28,8 +28,10 @@ import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.Hashtable;
 import java.util.Iterator;
+import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
+import java.util.Set;
 import java.util.Stack;
 import java.util.TreeMap;
 
@@ -48,6 +50,7 @@ import javax.management.ObjectName;
 import javax.naming.NamingException;
 import javax.naming.directory.DirContext;
 import javax.servlet.FilterConfig;
+import javax.servlet.ServletContainerInitializer;
 import javax.servlet.ServletContext;
 import javax.servlet.ServletContextAttributeListener;
 import javax.servlet.ServletContextEvent;
@@ -228,6 +231,13 @@ public class StandardContext
         new Object[0];
 
 
+    /**
+     * The ordered set of ServletContainerInitializers for this web application.
+     */
+    private Map<ServletContainerInitializer,Set<Class<?>>> initializers =
+        new LinkedHashMap<ServletContainerInitializer,Set<Class<?>>>();
+    
+    
     /**
      * The set of application parameters defined for this application.
      */
@@ -987,6 +997,19 @@ public class StandardContext
     }
     
     
+    /**
+     * Add a ServletContainerInitializer instance to this web application.
+     * 
+     * @param sci       The instance to add
+     * @param classes   The classes in which the initializer expressed an
+     *                  interest
+     */
+    public void addServletContainerInitializer(
+            ServletContainerInitializer sci, Set<Class<?>> classes) {
+        initializers.put(sci, classes);
+    }
+
+    
     /**
      * Return the "follow standard delegation model" flag used to configure
      * our ClassLoader.
@@ -4712,6 +4735,19 @@ public class StandardContext
                 postWelcomeFiles();
             }
             
+            // Call ServletContainerInitializers
+            for (Map.Entry<ServletContainerInitializer, Set<Class<?>>> entry :
+                initializers.entrySet()) {
+                try {
+                    entry.getKey().onStartup(entry.getValue(),
+                            getServletContext());
+                } catch (ServletException e) {
+                    // TODO: Log error
+                    ok = false;
+                    break;
+                }
+            }
+
             // Configure and call application event listeners
             if (ok) {
                 if (!listenerStart()) {
@@ -4971,7 +5007,7 @@ public class StandardContext
 
     }
     
-    private void resetContext() throws Exception, MBeanRegistrationException {
+    private void resetContext() throws Exception {
         // Restore the original state ( pre reading web.xml in start )
         // If you extend this - override this method and make sure to clean up
         children = new HashMap<String, Container>();
@@ -4987,6 +5023,8 @@ public class StandardContext
         applicationLifecycleListenersObjects = new Object[0];
         jspConfigDescriptor = new ApplicationJspConfigDescriptor();
         
+        initializers.clear();
+        
         if(log.isDebugEnabled())
             log.debug("resetContext " + oname);
     }

==================================================
