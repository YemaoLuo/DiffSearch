4d719497e5de8226efc55debcb0e24a176fd9bfc
==================================================
Fix BZ 65586 - Correct bloom filter lookups for directories with final /
==================================================
Mark Thomas
==================================================
Mon Sep 27 21:38:49 2021 +0100
==================================================
JarContents.java
Fix BZ 65586 - Correct bloom filter lookups for directories with final /

https://bz.apache.org/bugzilla/show_bug.cgi?id=65586


==================================================
TestAbstractArchiveResourceSet.java
index 6346d522a3..71cc50f573 100644
--- a/java/org/apache/catalina/webresources/JarContents.java
+++ b/java/org/apache/catalina/webresources/JarContents.java
@@ -77,6 +77,16 @@ public final class JarContents {
 
             bits1.set(pathHash1 % TABLE_SIZE);
             bits2.set(pathHash2 % TABLE_SIZE);
+
+            // While directory entry names always end in "/", application code
+            // may look them up without the trailing "/". Add this second form.
+            if (entry.isDirectory()) {
+                pathHash1 = hashcode(name, startPos, name.length() - 1, HASH_PRIME_1);
+                pathHash2 = hashcode(name, startPos, name.length() - 1, HASH_PRIME_2);
+
+                bits1.set(pathHash1 % TABLE_SIZE);
+                bits2.set(pathHash2 % TABLE_SIZE);
+            }
         }
     }
 
@@ -91,9 +101,12 @@ public final class JarContents {
      * @return hashcode of the range.
      */
     private int hashcode(String content, int startPos, int hashPrime) {
+        return hashcode(content, startPos, content.length(), hashPrime);
+    }
+
+    private int hashcode(String content, int startPos, int endPos, int hashPrime) {
         int h = hashPrime/2;
-        int contentLength = content.length();
-        for (int i = startPos; i < contentLength; i++) {
+        for (int i = startPos; i < endPos; i++) {
             h = hashPrime * h + content.charAt(i);
         }
 

==================================================
TesterWebResourceRoot.java
new file mode 100644
index 0000000000..7c5b2f275d
--- /dev/null
+++ b/test/org/apache/catalina/webresources/TestAbstractArchiveResourceSet.java
@@ -0,0 +1,49 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.catalina.webresources;
+
+import java.io.File;
+
+import org.junit.Assert;
+import org.junit.Test;
+
+import org.apache.catalina.WebResource;
+import org.apache.catalina.WebResourceRoot;
+
+public class TestAbstractArchiveResourceSet {
+
+    /*
+     * https://bz.apache.org/bugzilla/show_bug.cgi?id=65586
+     */
+    @Test
+    public void testBloomFilterWithDirectory() {
+        WebResourceRoot root = new TesterWebResourceRoot();
+
+        root.getContext().setUseBloomFilterForArchives(true);
+
+        File file = new File("webapps/examples/WEB-INF/lib/taglibs-standard-impl-1.2.5-migrated-0.0.1.jar");
+
+        JarResourceSet jarResourceSet = new JarResourceSet(root, "/WEB-INF/classes", file.getAbsolutePath(), "/");
+        jarResourceSet.getArchiveEntries(false);
+
+        WebResource r1 = jarResourceSet.getResource("/WEB-INF/classes/org/");
+        Assert.assertTrue(r1.isDirectory());
+
+        WebResource r2 = jarResourceSet.getResource("/WEB-INF/classes/org");
+        Assert.assertTrue(r2.isDirectory());
+    }
+}

==================================================
TesterContext.java
index 6217f26f41..a56186ee1b 100644
--- a/test/org/apache/catalina/webresources/TesterWebResourceRoot.java
+++ b/test/org/apache/catalina/webresources/TesterWebResourceRoot.java
@@ -80,9 +80,10 @@ public class TesterWebResourceRoot extends StandardRoot {
         return null;
     }
 
+    Context context = new TesterContext();
     @Override
     public Context getContext() {
-        return new TesterContext();
+        return context;
     }
 
     @Override

==================================================
