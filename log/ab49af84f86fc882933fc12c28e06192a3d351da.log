ab49af84f86fc882933fc12c28e06192a3d351da
==================================================
Spelling fixes. Patch provided by Josh Soref.
==================================================
Violeta Georgieva
==================================================
Tue Jan 10 15:14:52 2017 +0000
==================================================
Session.java
Spelling fixes. Patch provided by Josh Soref.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1778139 13f79535-47bb-0310-9956-ffa450edef68



==================================================
JMXAccessorQueryTask.java
index f551ada52d..c9f74be8bd 100644
--- a/java/org/apache/catalina/Session.java
+++ b/java/org/apache/catalina/Session.java
@@ -326,7 +326,7 @@ public interface Session {
     /**
      * Remove a session event listener from this component.
      *
-     * @param listener remove the sesion listener, which will no longer be
+     * @param listener remove the session listener, which will no longer be
      *     notified
      */
     public void removeSessionListener(SessionListener listener);

==================================================
JMXAccessorTask.java
index 68807a1045..df06f8967e 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorQueryTask.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorQueryTask.java
@@ -50,7 +50,7 @@ import org.apache.tools.ant.BuildException;
  * </pre>
  * with attribute <em>attributebinding="true"</em> you can get
  * all attributes also from result objects.<br>
- * The property manager.lenght show the size of the result
+ * The property manager.length show the size of the result
  * and with manager.[0..length].name the
  * resulted ObjectNames are saved.
  * These tasks require Ant 1.6 or later interface.

==================================================
FormAuthenticator.java
index c17656cf01..903bd3cd30 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorTask.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorTask.java
@@ -60,7 +60,7 @@ import org.apache.tools.ant.Project;
  * <li>Bind Get, Call, Query result at Ant properties</li>
  * </ul>
  *
- * Examples: open server with reference and autorisation
+ * Examples: open server with reference and authorisation
  *
  * <pre>
  *

==================================================
AuthConfigFactoryImpl.java
index 40d9f3c949..e5f5854222 100644
--- a/java/org/apache/catalina/authenticator/FormAuthenticator.java
+++ b/java/org/apache/catalina/authenticator/FormAuthenticator.java
@@ -567,7 +567,7 @@ public class FormAuthenticator
         String method = saved.getMethod();
         MimeHeaders rmh = request.getCoyoteRequest().getMimeHeaders();
         rmh.recycle();
-        boolean cachable = "GET".equalsIgnoreCase(method) ||
+        boolean cacheable = "GET".equalsIgnoreCase(method) ||
                            "HEAD".equalsIgnoreCase(method);
         Iterator<String> names = saved.getHeaderNames();
         while (names.hasNext()) {
@@ -576,7 +576,7 @@ public class FormAuthenticator
             // Assuming that it can quietly recover from an unexpected 412.
             // BZ 43687
             if(!("If-Modified-Since".equalsIgnoreCase(name) ||
-                 (cachable && "If-None-Match".equalsIgnoreCase(name)))) {
+                 (cacheable && "If-None-Match".equalsIgnoreCase(name)))) {
                 Iterator<String> values = saved.getHeaderValues(name);
                 while (values.hasNext()) {
                     rmh.addValue(name).setString(values.next());

==================================================
CoyoteAdapter.java
index a82af276f6..15b04ff17e 100644
--- a/java/org/apache/catalina/authenticator/package.html
+++ b/java/org/apache/catalina/authenticator/package.html
@@ -36,7 +36,7 @@ following Properties file:</p>
 following JavaBeans properties (with default values in square brackets):</p>
 <ul>
 <li><b>cache</b> - Should we cache authenticated Principals (thus avoiding
-    per-request lookups in our underyling <code>Realm</code>) if this request
+    per-request lookups in our underlying <code>Realm</code>) if this request
     is part of an HTTP session?  [true]</li>
 <li><b>debug</b> - Debugging detail level for this component.  [0]</li>
 </ul>

==================================================
CoyoteOutputStream.java
index 27cd958439..bf16b75433 100644
--- a/java/org/apache/catalina/connector/CoyoteAdapter.java
+++ b/java/org/apache/catalina/connector/CoyoteAdapter.java
@@ -1097,7 +1097,7 @@ public class CoyoteAdapter implements Adapter {
     /**
      * Character conversion of the a US-ASCII MessageBytes.
      *
-     * @param mb The MessageBytes instance contaning the bytes that should be converted to chars
+     * @param mb The MessageBytes instance containing the bytes that should be converted to chars
      */
     protected void convertMB(MessageBytes mb) {
 

==================================================
Request.java
index b0a2363b1d..688f68f409 100644
--- a/java/org/apache/catalina/connector/LocalStrings.properties
+++ b/java/org/apache/catalina/connector/LocalStrings.properties
@@ -48,7 +48,7 @@ coyoteRequest.parseParameters=Exception thrown whilst processing POSTed paramete
 coyoteRequest.postTooLarge=Parameters were not parsed because the size of the posted data was too big. Use the maxPostSize attribute of the connector to resolve this if the application should accept large POSTs.
 coyoteRequest.chunkedPostTooLarge=Parameters were not parsed because the size of the posted data was too big. Because this request was a chunked request, it could not be processed further. Use the maxPostSize attribute of the connector to resolve this if the application should accept large POSTs.
 coyoteRequest.alreadyAuthenticated=This request has already been authenticated
-coyoteRequest.authenticate.ise=Cannot call authenticate() after the reponse has been committed
+coyoteRequest.authenticate.ise=Cannot call authenticate() after the response has been committed
 coyoteRequest.uploadLocationInvalid=The temporary upload location [{0}] is not valid
 coyoteRequest.sessionEndAccessFail=Exception triggered ending access to session while recycling request
 coyoteRequest.sendfileNotCanonical=Unable to determine canonical name of file [{0}] specified for use with sendfile

==================================================
ApplicationContextFacade.java
index 902bc61d04..caba7c6bbf 100644
--- a/java/org/apache/catalina/connector/Request.java
+++ b/java/org/apache/catalina/connector/Request.java
@@ -955,7 +955,7 @@ public class Request implements HttpServletRequest {
         if (isSecure() && !sslAttributesParsed) {
             getAttribute(Globals.CERTIFICATES_ATTR);
         }
-        // Take a copy to prevent ConncurrentModificationExceptions if used to
+        // Take a copy to prevent ConcurrentModificationExceptions if used to
         // remove attributes
         Set<String> names = new HashSet<>();
         names.addAll(attributes.keySet());

==================================================
ApplicationDispatcher.java
index f1ced89a86..0a0b57c150 100644
--- a/java/org/apache/catalina/core/ApplicationContextFacade.java
+++ b/java/org/apache/catalina/core/ApplicationContextFacade.java
@@ -788,7 +788,7 @@ public class ApplicationContextFacade implements ServletContext {
     /**
      * Use reflection to invoke the requested method. Cache the method object
      * to speed up the process
-     * @param appContext The AppliationContext object on which the method
+     * @param appContext The ApplicationContext object on which the method
      *                   will be invoked
      * @param methodName The method to call.
      * @param params The arguments passed to the called method.
@@ -846,7 +846,7 @@ public class ApplicationContextFacade implements ServletContext {
     /**
      * Executes the method of the specified <code>ApplicationContext</code>
      * @param method The method object to be invoked.
-     * @param context The AppliationContext object on which the method
+     * @param context The ApplicationContext object on which the method
      *                   will be invoked
      * @param params The arguments passed to the called method.
      */

==================================================
AprLifecycleListener.java
index 9089d009d7..0616a01c7d 100644
--- a/java/org/apache/catalina/core/ApplicationDispatcher.java
+++ b/java/org/apache/catalina/core/ApplicationDispatcher.java
@@ -393,7 +393,7 @@ final class ApplicationDispatcher implements AsyncDispatcher, RequestDispatcher
 
         // This is not a real close in order to support error processing
         if (wrapper.getLogger().isDebugEnabled() )
-            wrapper.getLogger().debug(" Disabling the response for futher output");
+            wrapper.getLogger().debug(" Disabling the response for further output");
 
         if  (response instanceof ResponseFacade) {
             ((ResponseFacade) response).finish();

==================================================
StandardContext.java
index 375d9718c9..926d7226a2 100644
--- a/java/org/apache/catalina/core/LocalStrings.properties
+++ b/java/org/apache/catalina/core/LocalStrings.properties
@@ -41,8 +41,8 @@ applicationDispatcher.deallocateException=Deallocate exception for servlet {0}
 applicationDispatcher.forward.ise=Cannot forward after response has been committed
 applicationDispatcher.isUnavailable=Servlet {0} is currently unavailable
 applicationDispatcher.serviceException=Servlet.service() for servlet {0} threw exception
-applicationDispatcher.specViolation.request=Original SevletRequest or wrapped original ServletRequest not passed to RequestDispatcher in violation of SRV.8.2 and SRV.14.2.5.1
-applicationDispatcher.specViolation.response=Original SevletResponse or wrapped original ServletResponse not passed to RequestDispatcher in violation of SRV.8.2 and SRV.14.2.5.1
+applicationDispatcher.specViolation.request=Original ServletRequest or wrapped original ServletRequest not passed to RequestDispatcher in violation of SRV.8.2 and SRV.14.2.5.1
+applicationDispatcher.specViolation.response=Original ServletResponse or wrapped original ServletResponse not passed to RequestDispatcher in violation of SRV.8.2 and SRV.14.2.5.1
 applicationFilterConfig.jmxRegisterFail=JMX registration failed for filter of type [{0}] and name [{1}]
 applicationFilterConfig.jmxUnregister=JMX de-registration complete for filter of type [{0}] and name [{1}]
 applicationFilterConfig.jmxUnregisterFail=JMX de-registration failed for filter of type [{0}] and name [{1}]
@@ -181,7 +181,7 @@ standardEngine.notHost=Child of an Engine must be a Host
 standardEngine.notParent=Engine cannot have a parent Container
 standardHost.asyncStateError=An asynchronous request was received for processing that was neither an async dispatch nor an error to process
 standardHost.clientAbort=Remote Client Aborted Request, IOException: {0}
-standardHost.invalidErrorReportValveClass=Couldn''t load specified error report valve class: {0}
+standardHost.invalidErrorReportValveClass=Couldn't load specified error report valve class: {0}
 standardHost.noContext=No Context configured to process this request
 standardHost.notContext=Child of a Host must be a Context
 standardHost.nullName=Host name is required
@@ -189,7 +189,7 @@ standardHost.problematicAppBase=Using an empty string for appBase on host [{0}]
 standardHostValue.customStatusFailed=Custom error page [{0}] could not be dispatched correctly
 standardServer.accept.timeout=The socket listening for the shutdown command experienced an unexpected timeout [{0}] milliseconds after the call to accept(). Is this an instance of bug 56684?
 standardServer.shutdownViaPort=A valid shutdown command was received via the shutdown port. Stopping the Server instance.
-standardServer.storeConfig.notAvailable=No StoreConfig implementation was registered as an MBean named [{0}] so no configuration could be saved. A suitable MBean is normally registered via the StoreConfigLifecyleListener.
+standardServer.storeConfig.notAvailable=No StoreConfig implementation was registered as an MBean named [{0}] so no configuration could be saved. A suitable MBean is normally registered via the StoreConfigLifecycleListener.
 standardService.engine.startFailed=Failed to start associated Engine
 standardService.engine.stopFailed=Failed to stop associated Engine
 standardService.mapperListener.startFailed=Failed to start associated MapperListener

==================================================
StandardHost.java
index 8716d29b94..4079c9ddd5 100644
--- a/java/org/apache/catalina/core/StandardContext.java
+++ b/java/org/apache/catalina/core/StandardContext.java
@@ -4992,7 +4992,7 @@ public class StandardContext extends ContainerBase
         }
 
         if (!dependencyCheck) {
-            // do not make application available if depency check fails
+            // do not make application available if dependency check fails
             ok = false;
         }
 
@@ -5183,7 +5183,7 @@ public class StandardContext extends ContainerBase
             }
 
             // Check constraints for uncovered HTTP methods
-            // Needs to be after SCIs and listeners as they may programatically
+            // Needs to be after SCIs and listeners as they may programmatically
             // change constraints
             if (ok) {
                 checkConstraintsForUncoveredMethods(findConstraints());
@@ -5408,7 +5408,7 @@ public class StandardContext extends ContainerBase
                 log.debug("Processing standard container shutdown");
 
             // JNDI resources are unbound in CONFIGURE_STOP_EVENT so stop
-            // naming resources before they are unbound since NamingResoucres
+            // naming resources before they are unbound since NamingResources
             // does a JNDI lookup to retrieve the resource. This needs to be
             // after the application has finished with the resource
             if (namingResources != null) {
@@ -5465,7 +5465,7 @@ public class StandardContext extends ContainerBase
         try {
             resetContext();
         } catch( Exception ex ) {
-            log.error( "Error reseting context " + this + " " + ex, ex );
+            log.error( "Error resetting context " + this + " " + ex, ex );
         }
 
         //reset the instance manager
@@ -5685,10 +5685,10 @@ public class StandardContext extends ContainerBase
                 }
             }
 
-            // Note: For progammatically added Servlets this may not be the
+            // Note: For programmatically added Servlets this may not be the
             //       complete set of security constraints since additional
             //       URL patterns can be added after the application has called
-            //       setSecurity. For all programmatically added servilets, the
+            //       setSecurity. For all programmatically added servlets, the
             //       #dynamicServletAdded() method sets a flag that ensures that
             //       the constraints are re-evaluated before the servlet is
             //       first used
@@ -6203,7 +6203,7 @@ public class StandardContext extends ContainerBase
     }
 
 
-    /* Remove a JMX notficationListener
+    /* Remove a JMX notificationListener
      * @see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
      */
     @Override

==================================================
StandardWrapper.java
index 6c7888d869..d70c00d114 100644
--- a/java/org/apache/catalina/core/StandardHost.java
+++ b/java/org/apache/catalina/core/StandardHost.java
@@ -474,7 +474,7 @@ public class StandardHost extends ContainerBase implements Host {
     /**
      * Deploy XML Context config files flag mutator.
      *
-     * @param deployXML <code>true</code> if context descirptors should be deployed
+     * @param deployXML <code>true</code> if context descriptors should be deployed
      */
     public void setDeployXML(boolean deployXML) {
 
@@ -582,7 +582,7 @@ public class StandardHost extends ContainerBase implements Host {
     /**
      * Unpack WARs flag mutator.
      *
-     * @param unpackWARs <code>true</code> to unpack WARs on deployement
+     * @param unpackWARs <code>true</code> to unpack WARs on deployment
      */
     public void setUnpackWARs(boolean unpackWARs) {
 

==================================================
StandardWrapperFacade.java
index 305e6d8b5c..a0715c5d96 100644
--- a/java/org/apache/catalina/core/StandardWrapper.java
+++ b/java/org/apache/catalina/core/StandardWrapper.java
@@ -1677,7 +1677,7 @@ public class StandardWrapper extends ContainerBase
         // Shut down this component
         super.stopInternal();
 
-        // Send j2ee.state.stoppped notification
+        // Send j2ee.state.stopped notification
         if (this.getObjectName() != null) {
             Notification notification =
                 new Notification("j2ee.state.stopped", this.getObjectName(),
@@ -1761,7 +1761,7 @@ public class StandardWrapper extends ContainerBase
 
 
     /**
-     * Remove a JMX notficationListener
+     * Remove a JMX notificationListener
      * @see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
      */
     @Override

==================================================
NamingResourcesImpl.java
index eef3860d0e..e156ade601 100644
--- a/java/org/apache/catalina/core/mbeans-descriptors.xml
+++ b/java/org/apache/catalina/core/mbeans-descriptors.xml
@@ -145,7 +145,7 @@
                type="boolean" />
 
     <attribute name="instanceManager"
-               description="Object that creates and destroys servlets, filters, and listeners. Include dependency injection and postConstruct/preDestory handling"
+               description="Object that creates and destroys servlets, filters, and listeners. Include dependency injection and postConstruct/preDestroy handling"
                type="org.apache.tomcat.InstanceManager" />
 
     <attribute name="javaVMs"
@@ -1701,7 +1701,7 @@
                impact="ACTION"
                returnType="java.lang.String">
       <parameter name="name"
-                 description="Security role reference used within this servle"
+                 description="Security role reference used within this servlet"
                  type="java.lang.String"/>
     </operation>
 

==================================================
ExpiresFilter.java
index 582d22ef8e..0817523c57 100644
--- a/java/org/apache/catalina/deploy/NamingResourcesImpl.java
+++ b/java/org/apache/catalina/deploy/NamingResourcesImpl.java
@@ -120,7 +120,7 @@ public class NamingResourcesImpl extends LifecycleMBeanBase
 
 
     /**
-     * The message destination referencess for this web application,
+     * The message destination references for this web application,
      * keyed by name.
      */
     private final HashMap<String, MessageDestinationRef> mdrs = new HashMap<>();

==================================================
RemoteIpFilter.java
index 367b07601f..56590c22c5 100644
--- a/java/org/apache/catalina/filters/ExpiresFilter.java
+++ b/java/org/apache/catalina/filters/ExpiresFilter.java
@@ -464,14 +464,14 @@ public class ExpiresFilter extends FilterBase {
         DAY(Calendar.DAY_OF_YEAR), HOUR(Calendar.HOUR), MINUTE(Calendar.MINUTE), MONTH(
                 Calendar.MONTH), SECOND(Calendar.SECOND), WEEK(
                 Calendar.WEEK_OF_YEAR), YEAR(Calendar.YEAR);
-        private final int calendardField;
+        private final int calendarField;
 
-        private DurationUnit(int calendardField) {
-            this.calendardField = calendardField;
+        private DurationUnit(int calendarField) {
+            this.calendarField = calendarField;
         }
 
         public int getCalendardField() {
-            return calendardField;
+            return calendarField;
         }
 
     }

==================================================
RequestDumperFilter.java
index 1ad0381ec2..57398bea7e 100644
--- a/java/org/apache/catalina/filters/RemoteIpFilter.java
+++ b/java/org/apache/catalina/filters/RemoteIpFilter.java
@@ -877,7 +877,7 @@ public class RemoteIpFilter extends GenericFilter {
     }
 
     /**
-     * Wrap the incoming <code>request</code> in a {@link XForwardedRequest} if the http header <code>x-forwareded-for</code> is not empty.
+     * Wrap the incoming <code>request</code> in a {@link XForwardedRequest} if the http header <code>x-forwarded-for</code> is not empty.
      * {@inheritDoc}
      */
     @Override

==================================================
CollectedInfo.java
index 0ad10ea3e3..5a2c1e9d09 100644
--- a/java/org/apache/catalina/filters/RequestDumperFilter.java
+++ b/java/org/apache/catalina/filters/RequestDumperFilter.java
@@ -43,7 +43,7 @@ import org.apache.juli.logging.LogFactory;
  * <p>When using this Filter, it is strongly recommended that the
  * <code>org.apache.catalina.filter.RequestDumperFilter</code> logger is
  * directed to a dedicated file and that the
- * <code>org.apache.juli.VerbatimFormmater</code> is used.</p>
+ * <code>org.apache.juli.VerbatimFormatter</code> is used.</p>
  *
  * @author Craig R. McClanahan
  */

==================================================
HeartbeatListener.java
index e9e7a01823..c166ecfea7 100644
--- a/java/org/apache/catalina/ha/backend/CollectedInfo.java
+++ b/java/org/apache/catalina/ha/backend/CollectedInfo.java
@@ -32,7 +32,7 @@ import org.apache.tomcat.util.modeler.Registry;
 /*
  * Listener to provider informations to mod_heartbeat.c
  * *msg_format = "v=%u&ready=%u&busy=%u"; (message to send).
- * send the muticast message using the format...
+ * send the multicast message using the format...
  * what about the bind(IP. port) only IP makes sense (for the moment).
  * BTW:v  = version :-)
  */

==================================================
MultiCastSender.java
index 0348c6affa..9f9ee6089a 100644
--- a/java/org/apache/catalina/ha/backend/HeartbeatListener.java
+++ b/java/org/apache/catalina/ha/backend/HeartbeatListener.java
@@ -29,7 +29,7 @@ import org.apache.juli.logging.LogFactory;
 /*
  * Listener to provider informations to mod_heartbeat.c
  * *msg_format = "v=%u&ready=%u&busy=%u"; (message to send).
- * send the muticast message using the format...
+ * send the multicast message using the format...
  * what about the bind(IP. port) only IP makes sense (for the moment).
  * BTW:v  = version :-)
  */
@@ -117,7 +117,7 @@ public class HeartbeatListener implements LifecycleListener, ContainerListener {
             try {
                 sender.send(output);
             } catch (Exception ex) {
-                log.error("Unable to send colllected load information: " + ex);
+                log.error("Unable to send collected load information: " + ex);
             }
         }
     }

==================================================
FarmWarDeployer.java
index fd5e6273fd..60feacfcc7 100644
--- a/java/org/apache/catalina/ha/backend/MultiCastSender.java
+++ b/java/org/apache/catalina/ha/backend/MultiCastSender.java
@@ -73,7 +73,7 @@ public class MultiCastSender
         try {
             s.send(data);
         } catch (Exception ex) {
-            log.error("Unable to send colllected load information: " + ex);
+            log.error("Unable to send collected load information: " + ex);
             s.close();
             s = null;
             return -1;

==================================================
JvmRouteBinderValve.java
index bc569dbbc2..5c1374f1a3 100644
--- a/java/org/apache/catalina/ha/deploy/LocalStrings.properties
+++ b/java/org/apache/catalina/ha/deploy/LocalStrings.properties
@@ -39,7 +39,7 @@ farmWarDeployer.sendEnd=Send cluster war deployment path [{0}], war [{1}] finish
 farmWarDeployer.sendFragment=Send cluster war fragment path [{0}], war [{1}] to [{2}]
 farmWarDeployer.sendStart=Send cluster war deployment path [{0}], war [{1}] started.
 farmWarDeployer.servicingDeploy=Application [{0}] is being serviced. Touch war file [{1}] again!
-farmWarDeployer.servicingUneploy=Application [{0}] is being serviced and can't be removed from backup cluster node
+farmWarDeployer.servicingUndeploy=Application [{0}] is being serviced and can't be removed from backup cluster node
 farmWarDeployer.started=Cluster FarmWarDeployer started.
 farmWarDeployer.stopped=Cluster FarmWarDeployer stopped.
 farmWarDeployer.undeployEnd=Undeployment from [{0}] finished.

==================================================
SimpleTcpCluster.java
index d89b35c733..0b6cf22fd5 100644
--- a/java/org/apache/catalina/ha/session/mbeans-descriptors.xml
+++ b/java/org/apache/catalina/ha/session/mbeans-descriptors.xml
@@ -304,7 +304,7 @@
       type="boolean"/>
     <attribute
       name="sessionAttributeNameFilter"
-      descritpion="The string pattern used for including session attributes in replication. Null means all attributes are included."
+      description="The string pattern used for including session attributes in replication. Null means all attributes are included."
       type="java.lang.String"/>
     <attribute
       name="sessionAttributeValueClassNameFilter"

==================================================
JMXProxyServlet.java
index 053ec1a65f..302bf8aea7 100644
--- a/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java
+++ b/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java
@@ -739,7 +739,7 @@ public class SimpleTcpCluster extends LifecycleMBeanBase
 
     /**
      * notify all listeners from receiving a new message is not ClusterMessage
-     * emit Failure Event to LifecylceListener
+     * emit Failure Event to LifecycleListener
      *
      * @param msg
      *            received Message

==================================================
RealmBase.java
index 7eb65844ed..5b591ca5d1 100644
--- a/java/org/apache/catalina/realm/LocalStrings.properties
+++ b/java/org/apache/catalina/realm/LocalStrings.properties
@@ -29,7 +29,7 @@ jaasRealm.loginContextCreated=JAAS LoginContext created for username "{0}"
 jaasRealm.checkPrincipal=Checking Principal "{0}" [{1}]
 jaasRealm.userPrincipalSuccess=Principal "{0}" is a valid user class. We will use this as the user Principal.
 jaasRealm.userPrincipalFailure=No valid user Principal found
-jaasRealm.rolePrincipalAdd=Adding role Principal "{0}" to this user Principal''s roles
+jaasRealm.rolePrincipalAdd=Adding role Principal "{0}" to this user Principal's roles
 jaasRealm.rolePrincipalFailure=No valid role Principals found.
 jaasCallback.username=Returned username "{0}"
 jdbcRealm.authenticateFailure=Username {0} NOT successfully authenticated

==================================================
SecurityListener.java
index c0ec843a9f..c13b59f5b4 100644
--- a/java/org/apache/catalina/realm/RealmBase.java
+++ b/java/org/apache/catalina/realm/RealmBase.java
@@ -421,7 +421,7 @@ public abstract class RealmBase extends LifecycleMBeanBase implements Realm {
 
         if (log.isDebugEnabled()) {
             log.debug("Digest : " + clientDigest + " Username:" + username
-                    + " ClientSigest:" + clientDigest + " nonce:" + nonce
+                    + " ClientDigest:" + clientDigest + " nonce:" + nonce
                     + " nc:" + nc + " cnonce:" + cnonce + " qop:" + qop
                     + " realm:" + realm + "md5a2:" + md5a2
                     + " Server digest:" + serverDigest);
@@ -777,7 +777,7 @@ public abstract class RealmBase extends LifecycleMBeanBase implements Realm {
     }
 
     /**
-     * Convert an ArrayList to a SecurityContraint [].
+     * Convert an ArrayList to a SecurityConstraint [].
      */
     private SecurityConstraint [] resultsToArray(
             ArrayList<SecurityConstraint> results) {

==================================================
CGIServlet.java
index 4eac0ddedc..feb056a3dd 100644
--- a/java/org/apache/catalina/security/SecurityListener.java
+++ b/java/org/apache/catalina/security/SecurityListener.java
@@ -94,7 +94,7 @@ public class SecurityListener implements LifecycleListener {
      * Returns the current list of operating system users not permitted to run
      * Tomcat.
      *
-     * @return  A comma separated list of operating sytem user names.
+     * @return  A comma separated list of operating system user names.
      */
     public String getCheckedOsUsers() {
         if (checkedOsUsers.size() == 0) {

==================================================
DefaultServlet.java
index d3746d5d44..aea980ba1a 100644
--- a/java/org/apache/catalina/servlets/CGIServlet.java
+++ b/java/org/apache/catalina/servlets/CGIServlet.java
@@ -1630,7 +1630,7 @@ public final class CGIServlet extends HttpServlet {
                     try {
                         errReaderThread.join(stderrTimeout);
                     } catch (InterruptedException e) {
-                        log.warn(sm.getString("cgiServlet.runReaderInterupt"));                    }
+                        log.warn(sm.getString("cgiServlet.runReaderInterrupt"));                    }
                 }
                 if (proc != null){
                     proc.destroy();

==================================================
ManagerBase.java
index b92c9b0a1c..b915f442fe 100644
--- a/java/org/apache/catalina/servlets/LocalStrings.properties
+++ b/java/org/apache/catalina/servlets/LocalStrings.properties
@@ -27,7 +27,7 @@ cgiServlet.runFail=I/O problems processing CGI
 cgiServlet.runHeaderReaderFail=I/O problems closing header reader
 cgiServlet.runInvalidStatus=Invalid status [{0}]
 cgiServlet.runOutputStreamFail=I/O problems closing output stream
-cgiServlet.runReaderInterupt=Interupted waiting for stderr reader thread
+cgiServlet.runReaderInterrupt=Interrupted waiting for stderr reader thread
 cgiServlet.runStdErr=stderr line: [{0}]
 cgiServlet.runStdErrCount=Received [{0}] lines on stderr
 cgiServlet.runStdErrFail=I/O problems with stderr

==================================================
ContextConfig.java
index a886e4b3c2..ccec4d64bb 100644
--- a/java/org/apache/catalina/session/mbeans-descriptors.xml
+++ b/java/org/apache/catalina/session/mbeans-descriptors.xml
@@ -119,7 +119,7 @@
             writeable="false"/>
 
     <attribute   name="sessionAttributeNameFilter"
-          descritpion="The string pattern used for including session attributes in distribution. Null means all attributes are included."
+          description="The string pattern used for including session attributes in distribution. Null means all attributes are included."
                  type="java.lang.String"/>
 
     <attribute   name="sessionAttributeValueClassNameFilter"
@@ -306,7 +306,7 @@
             writeable="false"/>
 
     <attribute   name="sessionAttributeNameFilter"
-          descritpion="The string pattern used for including session attributes in distribution. Null means all attributes are included."
+          description="The string pattern used for including session attributes in distribution. Null means all attributes are included."
                  type="java.lang.String"/>
 
     <attribute   name="sessionAttributeValueClassNameFilter"

==================================================
LifecycleListenerRule.java
index ab977d1807..012a17fdc9 100644
--- a/java/org/apache/catalina/startup/ContextConfig.java
+++ b/java/org/apache/catalina/startup/ContextConfig.java
@@ -1431,7 +1431,7 @@ public class ContextConfig implements LifecycleListener {
             } else {
                 if(log.isDebugEnabled()) {
                     for (String urlPattern : jspPropertyGroup.getUrlPatterns()) {
-                        log.debug("Skiping " + urlPattern + " , no servlet " +
+                        log.debug("Skipping " + urlPattern + " , no servlet " +
                                 jspServletName);
                     }
                 }
@@ -2199,8 +2199,8 @@ public class ContextConfig implements LifecycleListener {
 
         populateJavaClassCache(javaClass.getSuperclassName(), javaClassCache);
 
-        for (String iterface : javaClass.getInterfaceNames()) {
-            populateJavaClassCache(iterface, javaClassCache);
+        for (String interfaceName : javaClass.getInterfaceNames()) {
+            populateJavaClassCache(interfaceName, javaClassCache);
         }
     }
 

==================================================
ConnectorStoreAppender.java
index 8543520e1e..4cbbc89e78 100644
--- a/java/org/apache/catalina/startup/LifecycleListenerRule.java
+++ b/java/org/apache/catalina/startup/LifecycleListenerRule.java
@@ -122,7 +122,7 @@ public class LifecycleListenerRule extends Rule {
             className = listenerClass;
         }
 
-        // Instantiate a new LifecyleListener implementation object
+        // Instantiate a new LifecycleListener implementation object
         Class<?> clazz = Class.forName(className);
         LifecycleListener listener =
             (LifecycleListener) clazz.newInstance();

==================================================
StoreAppender.java
index 5ebfcab27a..2ad9636dba 100644
--- a/java/org/apache/catalina/storeconfig/ConnectorStoreAppender.java
+++ b/java/org/apache/catalina/storeconfig/ConnectorStoreAppender.java
@@ -38,9 +38,9 @@ import org.apache.tomcat.util.net.SocketProperties;
 /**
  * Store the Connector attributes. Connector has really special design. A
  * Connector is only a startup Wrapper for a ProtocolHandler. This meant that
- * ProtocolHandler get all there attribtues from the Connector attribtue map.
+ * ProtocolHandler get all there attributes from the Connector attribute map.
  * Strange is that some attributes change there name and the attribute
- * sslProtocol need a sepzial handling
+ * sslProtocol need a special handling
  */
 public class ConnectorStoreAppender extends StoreAppender {
 
@@ -264,7 +264,7 @@ public class ConnectorStoreAppender extends StoreAppender {
     }
 
     /**
-     * Print Connector Values. <ul><li> Spezial handling to default jkHome.
+     * Print Connector Values. <ul><li> Special handling to default jkHome.
      * </li><li> Don't save catalina.base path at server.xml</li><li></ul>
      *
      * @see org.apache.catalina.storeconfig.StoreAppender#isPrintValue(java.lang.Object,

==================================================
StoreConfigLifecycleListener.java
index 395cc8d955..776de6f2ab 100644
--- a/java/org/apache/catalina/storeconfig/StoreAppender.java
+++ b/java/org/apache/catalina/storeconfig/StoreAppender.java
@@ -203,7 +203,7 @@ public class StoreAppender {
      * @param bean
      *            Bean whose properties are to be rendered as attributes,
      * @param desc
-     *            RegistryDescrpitor from this bean
+     *            RegistryDescriptor from this bean
      *
      * @exception Exception
      *                if an exception occurs while storing
@@ -277,7 +277,7 @@ public class StoreAppender {
      * @param writer PrintWriter to which we are storing
      * @param indent Indentation level
      * @param bean The current bean
-     * @param desc RegistryDescrpitor from this bean
+     * @param desc RegistryDescriptor from this bean
      * @param attributeName The attribute name to store
      * @param bean2 A default instance of the bean for comparison
      * @param value The attribute value

==================================================
StoreFactoryBase.java
index 0ef487e867..741608c4f4 100644
--- a/java/org/apache/catalina/storeconfig/StoreConfigLifecycleListener.java
+++ b/java/org/apache/catalina/storeconfig/StoreConfigLifecycleListener.java
@@ -75,7 +75,7 @@ public class StoreConfigLifecycleListener implements LifecycleListener {
      }
 
     /**
-     * Create StoreConfig MBean and load StoreRgistry MBeans name is
+     * Create StoreConfig MBean and load StoreRegistry MBeans name is
      * <code>Catalina:type=StoreConfig</code>.
      * @param server The Server instance
      */

==================================================
ChannelException.java
index 159c8c2d84..588ccdd265 100644
--- a/java/org/apache/catalina/storeconfig/StoreFactoryBase.java
+++ b/java/org/apache/catalina/storeconfig/StoreFactoryBase.java
@@ -25,7 +25,7 @@ import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.res.StringManager;
 
 /**
- * StoreFactory saves spezial elements.
+ * StoreFactory saves special elements.
  * Output was generate with StoreAppenders.
  */
 public class StoreFactoryBase implements IStoreFactory {
@@ -47,7 +47,7 @@ public class StoreFactoryBase implements IStoreFactory {
     private static final String info = "org.apache.catalina.config.StoreFactoryBase/1.0";
 
     /**
-     * @return descriptive information about this Facotry implementation and the
+     * @return descriptive information about this Factory implementation and the
      * corresponding version number, in the format
      * <code>&lt;description&gt;/&lt;version&gt;</code>.
      */
@@ -192,7 +192,7 @@ public class StoreFactoryBase implements IStoreFactory {
                     storeElement(aWriter, indent, elements[i]);
                 } catch (IOException ioe) {
                     // ignore children report error them self!
-                    // see StandartContext.storeWithBackup()
+                    // see StandardContext.storeWithBackup()
                 }
             }
         }

==================================================
ErrorHandler.java
index c81a39c8d2..ef13bba9a3 100644
--- a/java/org/apache/catalina/tribes/ChannelException.java
+++ b/java/org/apache/catalina/tribes/ChannelException.java
@@ -30,7 +30,7 @@ import java.util.ArrayList;
 public class ChannelException extends Exception {
     private static final long serialVersionUID = 1L;
     /**
-     * Empty list to avoid reinstatiating lists
+     * Empty list to avoid reinstantiating lists
      */
     protected static final FaultyMember[] EMPTY_LIST = new FaultyMember[0];
     /**

==================================================
RpcCallback.java
index 2dc88ce29a..97faf6f453 100644
--- a/java/org/apache/catalina/tribes/ErrorHandler.java
+++ b/java/org/apache/catalina/tribes/ErrorHandler.java
@@ -28,7 +28,7 @@ package org.apache.catalina.tribes;
 public interface ErrorHandler {
 
     /**
-     * Invoked if the message is dispatched asynch, and an error occurs
+     * Invoked if the message is dispatched async, and an error occurs
      * @param x ChannelException - the error that happened
      * @param id - the unique id for the message
      * @see Channel#send(Member[], java.io.Serializable, int, ErrorHandler)

==================================================
FragmentationInterceptor.java
index ba70ea98c1..d7a1832131 100644
--- a/java/org/apache/catalina/tribes/group/RpcCallback.java
+++ b/java/org/apache/catalina/tribes/group/RpcCallback.java
@@ -28,7 +28,7 @@ import org.apache.catalina.tribes.Member;
 public interface RpcCallback {
 
     /**
-     * Allows sending a response to a recieved message.
+     * Allows sending a response to a received message.
      * @param msg The message
      * @param sender Member
      * @return Serializable object, <code>null</code> if no reply should be sent

==================================================
NonBlockingCoordinator.java
index bd240cf3ec..1626d99cf9 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/LocalStrings.properties
+++ b/java/org/apache/catalina/tribes/group/interceptors/LocalStrings.properties
@@ -42,7 +42,7 @@ tcpFailureDetector.already.disappeared=Verification complete. Member already dis
 tcpFailureDetector.member.disappeared=Verification complete. Member disappeared[{0}]
 tcpFailureDetector.still.alive=Verification complete. Member still alive[{0}]
 tcpFailureDetector.heartbeat.failed=Unable to perform heartbeat on the TcpFailureDetector.
-tcpFailureDetector.performBasicCheck.memberAdded=Member added, even though we weren''t  notified:{0}
+tcpFailureDetector.performBasicCheck.memberAdded=Member added, even though we weren't  notified:{0}
 tcpFailureDetector.suspectMember.dead=Suspect member, confirmed dead.[{0}]
 tcpFailureDetector.suspectMember.alive=Suspect member, confirmed alive.[{0}]
 tcpFailureDetector.failureDetection.failed=Unable to perform failure detection check, assuming member down.

==================================================
OrderInterceptor.java
index 72ea61870a..ff75f9ce58 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/NonBlockingCoordinator.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/NonBlockingCoordinator.java
@@ -195,7 +195,7 @@ public class NonBlockingCoordinator extends ChannelInterceptorBase {
         synchronized (electionMutex) {
             Member local = getLocalMember(false);
             Member[] others = membership.getMembers();
-            fireInterceptorEvent(new CoordinationEvent(CoordinationEvent.EVT_START_ELECT,this,"Election initated"));
+            fireInterceptorEvent(new CoordinationEvent(CoordinationEvent.EVT_START_ELECT,this,"Election initiated"));
             if ( others.length == 0 ) {
                 this.viewId = new UniqueId(UUIDGenerator.randomUUID(false));
                 this.view = new Membership(local,AbsoluteOrder.comp, true);

==================================================
AbstractReplicatedMap.java
index 46e2410d81..a91ee24b73 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/OrderInterceptor.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/OrderInterceptor.java
@@ -42,8 +42,8 @@ import org.apache.catalina.tribes.util.StringManager;
  * and the queue might become rather large. If this is the case, then you might want to set
  * the value OrderInterceptor.maxQueue = 25 (meaning that we will never keep more than 25 messages in our queue)
  * <br><b>Configuration Options</b><br>
- * OrderInteceptor.expire=&lt;milliseconds&gt; - if a message arrives out of order, how long before we act on it <b>default=3000ms</b><br>
- * OrderInteceptor.maxQueue=&lt;max queue size&gt; - how much can the queue grow to ensure ordering.
+ * OrderInterceptor.expire=&lt;milliseconds&gt; - if a message arrives out of order, how long before we act on it <b>default=3000ms</b><br>
+ * OrderInterceptor.maxQueue=&lt;max queue size&gt; - how much can the queue grow to ensure ordering.
  *   This setting is useful to avoid OutOfMemoryErrors<b>default=Integer.MAX_VALUE</b><br>
  * OrderInterceptor.forwardExpired=&lt;boolean&gt; - this flag tells the interceptor what to
  * do when a message has expired or the queue has grown larger than the maxQueue value.

==================================================
LazyReplicatedMap.java
index b49110db0a..4255f83a9a 100644
--- a/java/org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java
+++ b/java/org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java
@@ -166,7 +166,7 @@ public abstract class AbstractReplicatedMap<K,V>
      * Creates a new map.
      * @param owner The map owner
      * @param channel The channel to use for communication
-     * @param timeout long - timeout for RPC messags
+     * @param timeout long - timeout for RPC messages
      * @param mapContextName String - unique name for this map, to allow multiple maps per channel
      * @param initialCapacity int - the size of this map, see HashMap
      * @param loadFactor float - load factor, see HashMap

==================================================
ReplicatedMap.java
index 421c2b47a9..69bd2efe0b 100644
--- a/java/org/apache/catalina/tribes/tipis/LazyReplicatedMap.java
+++ b/java/org/apache/catalina/tribes/tipis/LazyReplicatedMap.java
@@ -57,7 +57,7 @@ import org.apache.juli.logging.LogFactory;
  * each time the object gets replicated the entire object gets serialized, hence a call to <code>replicate(true)</code>
  * will replicate all objects in this map that are using this node as primary.
  *
- * <br><br><b>REMBER TO CALL</b> <code>breakdown()</code> or <code>finalize()</code> when you are done with the map to
+ * <br><br><b>REMEMBER TO CALL</b> <code>breakdown()</code> or <code>finalize()</code> when you are done with the map to
  * avoid memory leaks.<br><br>
  * TODO implement periodic sync/transfer thread
  *
@@ -76,7 +76,7 @@ public class LazyReplicatedMap<K,V> extends AbstractReplicatedMap<K,V> {
      * Creates a new map
      * @param owner The map owner
      * @param channel The channel to use for communication
-     * @param timeout long - timeout for RPC messags
+     * @param timeout long - timeout for RPC messages
      * @param mapContextName String - unique name for this map, to allow multiple maps per channel
      * @param initialCapacity int - the size of this map, see HashMap
      * @param loadFactor float - load factor, see HashMap
@@ -90,7 +90,7 @@ public class LazyReplicatedMap<K,V> extends AbstractReplicatedMap<K,V> {
      * Creates a new map
      * @param owner The map owner
      * @param channel The channel to use for communication
-     * @param timeout long - timeout for RPC messags
+     * @param timeout long - timeout for RPC messages
      * @param mapContextName String - unique name for this map, to allow multiple maps per channel
      * @param initialCapacity int - the size of this map, see HashMap
      * @param cls Class loaders
@@ -103,7 +103,7 @@ public class LazyReplicatedMap<K,V> extends AbstractReplicatedMap<K,V> {
      * Creates a new map
      * @param owner The map owner
      * @param channel The channel to use for communication
-     * @param timeout long - timeout for RPC messags
+     * @param timeout long - timeout for RPC messages
      * @param mapContextName String - unique name for this map, to allow multiple maps per channel
      * @param cls Class loaders
      */
@@ -115,7 +115,7 @@ public class LazyReplicatedMap<K,V> extends AbstractReplicatedMap<K,V> {
      * Creates a new map
      * @param owner The map owner
      * @param channel The channel to use for communication
-     * @param timeout long - timeout for RPC messags
+     * @param timeout long - timeout for RPC messages
      * @param mapContextName String - unique name for this map, to allow multiple maps per channel
      * @param cls Class loaders
      * @param terminate boolean - Flag for whether to terminate this map that failed to start.

==================================================
BioReplicationTask.java
index 49142261c7..ae9498b750 100644
--- a/java/org/apache/catalina/tribes/tipis/ReplicatedMap.java
+++ b/java/org/apache/catalina/tribes/tipis/ReplicatedMap.java
@@ -67,7 +67,7 @@ public class ReplicatedMap<K,V> extends AbstractReplicatedMap<K,V> {
      * Creates a new map
      * @param owner The map owner
      * @param channel The channel to use for communication
-     * @param timeout long - timeout for RPC messags
+     * @param timeout long - timeout for RPC messages
      * @param mapContextName String - unique name for this map, to allow multiple maps per channel
      * @param initialCapacity int - the size of this map, see HashMap
      * @param loadFactor float - load factor, see HashMap
@@ -81,7 +81,7 @@ public class ReplicatedMap<K,V> extends AbstractReplicatedMap<K,V> {
      * Creates a new map
      * @param owner The map owner
      * @param channel The channel to use for communication
-     * @param timeout long - timeout for RPC messags
+     * @param timeout long - timeout for RPC messages
      * @param mapContextName String - unique name for this map, to allow multiple maps per channel
      * @param initialCapacity int - the size of this map, see HashMap
      * @param cls Class loaders
@@ -94,7 +94,7 @@ public class ReplicatedMap<K,V> extends AbstractReplicatedMap<K,V> {
      * Creates a new map
      * @param owner The map owner
      * @param channel The channel to use for communication
-     * @param timeout long - timeout for RPC messags
+     * @param timeout long - timeout for RPC messages
      * @param mapContextName String - unique name for this map, to allow multiple maps per channel
      * @param cls Class loaders
      */
@@ -106,7 +106,7 @@ public class ReplicatedMap<K,V> extends AbstractReplicatedMap<K,V> {
      * Creates a new map
      * @param owner The map owner
      * @param channel The channel to use for communication
-     * @param timeout long - timeout for RPC messags
+     * @param timeout long - timeout for RPC messages
      * @param mapContextName String - unique name for this map, to allow multiple maps per channel
      * @param cls Class loaders
      * @param terminate boolean - Flag for whether to terminate this map that failed to start.

==================================================
NioReplicationTask.java
index 229f7b0a08..2ceccf041f 100644
--- a/java/org/apache/catalina/tribes/transport/bio/LocalStrings.properties
+++ b/java/org/apache/catalina/tribes/transport/bio/LocalStrings.properties
@@ -13,7 +13,7 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-bioReceiver.threadpool.fail=ThreadPool can initilzed. Listener not started
+bioReceiver.threadpool.fail=ThreadPool can initialized. Listener not started
 bioReceiver.start.fail=Unable to start cluster receiver
 bioReceiver.socket.closeFailed=Failed to close socket
 bioReceiver.run.fail=Unable to run replication listener.

==================================================
ExtensionValidator.java
index 7b7c353179..a6ad6a252c 100644
--- a/java/org/apache/catalina/tribes/transport/nio/NioReplicationTask.java
+++ b/java/org/apache/catalina/tribes/transport/nio/NioReplicationTask.java
@@ -200,7 +200,7 @@ public class NioReplicationTask extends AbstractRxTask {
             /**
              * Use send ack here if you want to ack the request to the remote
              * server before completing the request
-             * This is considered an asynchronized request
+             * This is considered an asynchronous request
              */
             if (ChannelData.sendAckAsync(msgs[i].getOptions())) sendAck(key,(WritableByteChannel)channel,Constants.ACK_COMMAND,saddr);
             try {

==================================================
Introspection.java
index 5122c4f70f..f9da4cf7a5 100644
--- a/java/org/apache/catalina/util/ExtensionValidator.java
+++ b/java/org/apache/catalina/util/ExtensionValidator.java
@@ -113,7 +113,7 @@ public final class ExtensionValidator {
      * file in the /META-INF/ directory of the application and all
      * MANIFEST.MF files in each JAR file located in the WEB-INF/lib
      * directory and creates an <code>ArrayList</code> of
-     * <code>ManifestResorce</code> objects. These objects are then passed
+     * <code>ManifestResource</code> objects. These objects are then passed
      * to the validateManifestResources method for validation.
      *
      * @param resources The resources configured for this Web Application
@@ -286,7 +286,7 @@ public final class ExtensionValidator {
     * Build this list of available extensions so that we do not have to
     * re-build this list every time we iterate through the list of required
     * extensions. All available extensions in all of the
-    * <code>MainfestResource</code> objects will be added to a
+    * <code>ManifestResource</code> objects will be added to a
     * <code>HashMap</code> which is returned on the first dependency list
     * processing pass.
     *

==================================================
RemoteIpValve.java
index 3de1a92032..9999bba71f 100644
--- a/java/org/apache/catalina/util/Introspection.java
+++ b/java/org/apache/catalina/util/Introspection.java
@@ -140,7 +140,7 @@ public class Introspection {
      * Attempt to load a class using the given Container's class loader. If the
      * class cannot be loaded, a debug level log message will be written to the
      * Container's log and null will be returned.
-     * @param context The class loader of this context will be used to attemmpt
+     * @param context The class loader of this context will be used to attempt
      *  to load the class
      * @param className The class name
      * @return the loaded class or <code>null</code> if loading failed

==================================================
StuckThreadDetectionValve.java
index b817b35c86..57f0715553 100644
--- a/java/org/apache/catalina/valves/RemoteIpValve.java
+++ b/java/org/apache/catalina/valves/RemoteIpValve.java
@@ -768,7 +768,7 @@ public class RemoteIpValve extends ValveBase {
 
     /**
      * <p>
-     * Header that holds the incoming protocol, usally named <code>X-Forwarded-Proto</code>. If <code>null</code>, request.scheme and
+     * Header that holds the incoming protocol, usually named <code>X-Forwarded-Proto</code>. If <code>null</code>, request.scheme and
      * request.secure will not be modified.
      * </p>
      * <p>

==================================================
RewriteValve.java
index a4ae23f192..3a71f529b3 100644
--- a/java/org/apache/catalina/valves/StuckThreadDetectionValve.java
+++ b/java/org/apache/catalina/valves/StuckThreadDetectionValve.java
@@ -60,7 +60,7 @@ public class StuckThreadDetectionValve extends ValveBase {
     private final AtomicInteger stuckCount = new AtomicInteger(0);
 
     /**
-     * Keeps count of the number of stuck threads that have been interruoted
+     * Keeps count of the number of stuck threads that have been interrupted
      */
     private AtomicLong interruptedThreadsCount = new AtomicLong();
 
@@ -77,7 +77,7 @@ public class StuckThreadDetectionValve extends ValveBase {
     /**
      * The only references we keep to actual running Thread objects are in
      * this Map (which is automatically cleaned in invoke()s finally clause).
-     * That way, Threads can be GC'ed, eventhough the Valve still thinks they
+     * That way, Threads can be GC'ed, even though the Valve still thinks they
      * are stuck (caused by a long monitor interval)
      */
     private final Map<Long, MonitoredThread> activeThreads = new ConcurrentHashMap<>();

==================================================
StandardRoot.java
index b789ccdd25..351bd93fcc 100644
--- a/java/org/apache/catalina/valves/rewrite/RewriteValve.java
+++ b/java/org/apache/catalina/valves/rewrite/RewriteValve.java
@@ -729,7 +729,7 @@ public class RewriteValve extends ValveBase {
 
 
     /**
-     * Parser for ReweriteRule flags.
+     * Parser for RewriteRule flags.
      * @param line The configuration line being parsed
      * @param rule The current rule
      * @param flag The flag

==================================================
TomcatURLStreamHandlerFactory.java
index 12999381c3..8d99951ea6 100644
--- a/java/org/apache/catalina/webresources/StandardRoot.java
+++ b/java/org/apache/catalina/webresources/StandardRoot.java
@@ -237,7 +237,7 @@ public class StandardRoot extends LifecycleMBeanBase implements WebResourceRoot
      * can be normalized without stepping outside of the root.
      *
      * @param path
-     * @return  the normlized path
+     * @return  the normalized path
      */
     private String validate(String path) {
         if (!getState().isAvailable()) {

==================================================
