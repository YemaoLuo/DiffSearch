e2242e27765ba2b6499bee942da34ea6c038fc2f
==================================================
Whilst I am thinking about excluding stuff from FindBugs - add some exceptions for the generated code with issues and fix the remaining issues in the same package
==================================================
Mark Emlyn
==================================================
Wed Dec 15 14:54:23 2010 +0000
==================================================
AstNegative.java
Whilst I am thinking about excluding stuff from FindBugs - add some exceptions for the generated code with issues and fix the remaining issues in the same package

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1049572 13f79535-47bb-0310-9956-ffa450edef68



==================================================
SimpleNode.java
index e16a0a79e6..1e89c80b7f 100644
--- a/java/org/apache/el/parser/AstNegative.java
+++ b/java/org/apache/el/parser/AstNegative.java
@@ -47,7 +47,7 @@ public final class AstNegative extends SimpleNode {
         Object obj = this.children[0].getValue(ctx);
 
         if (obj == null) {
-            return new Long(0);
+            return Long.valueOf(0);
         }
         if (obj instanceof BigDecimal) {
             return ((BigDecimal) obj).negate();
@@ -59,27 +59,27 @@ public final class AstNegative extends SimpleNode {
             if (isStringFloat((String) obj)) {
                 return new Double(-Double.parseDouble((String) obj));
             }
-            return new Long(-Long.parseLong((String) obj));
+            return Long.valueOf(-Long.parseLong((String) obj));
         }
         if (obj instanceof Long) {
-            return new Long(-((Long) obj).longValue());
+            return Long.valueOf(-((Long) obj).longValue());
         }
         if (obj instanceof Double) {
             return new Double(-((Double) obj).doubleValue());
         }
         if (obj instanceof Integer) {
-            return new Integer(-((Integer) obj).intValue());
+            return Integer.valueOf(-((Integer) obj).intValue());
         }
         if (obj instanceof Float) {
             return new Float(-((Float) obj).floatValue());
         }
         if (obj instanceof Short) {
-            return new Short((short) -((Short) obj).shortValue());
+            return Short.valueOf((short) -((Short) obj).shortValue());
         }
         if (obj instanceof Byte) {
-            return new Byte((byte) -((Byte) obj).byteValue());
+            return Byte.valueOf((byte) -((Byte) obj).byteValue());
         }
         Long num = (Long) coerceToNumber(obj, Long.class);
-        return new Long(-num.longValue());
+        return Long.valueOf(-num.longValue());
     }
 }

==================================================
