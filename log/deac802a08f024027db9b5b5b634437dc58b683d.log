deac802a08f024027db9b5b5b634437dc58b683d
==================================================
BZ 64872 Optimised StringInterpreter for Enum Values
==================================================
Mark Thomas
==================================================
Wed Nov 25 12:15:23 2020 +0000
==================================================
StringInterpreterEnum.java
BZ 64872 Optimised StringInterpreter for Enum Values

This is not strictly spec compliant hence it isn't enabled by
default but it should work for many applicaitons.
https://bz.apache.org/bugzilla/show_bug.cgi?id=64872



==================================================
TestELInterpreterTagSetters.java
new file mode 100644
index 0000000000..b85f33947e
--- /dev/null
+++ b/java/org/apache/jasper/optimizations/StringInterpreterEnum.java
@@ -0,0 +1,37 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.jasper.optimizations;
+
+import org.apache.jasper.compiler.StringInterpreterFactory.DefaultStringInterpreter;
+
+/**
+ * Provides an optimised conversion of string values to Enums. It bypasses the
+ * check for registered PropertyEditor.
+ */
+public class StringInterpreterEnum extends DefaultStringInterpreter {
+
+    @Override
+    protected String coerceToOtherType(Class<?> c, String s, boolean isNamedAttribute) {
+        if (c.isEnum() && !isNamedAttribute) {
+            @SuppressWarnings({ "unchecked", "rawtypes" })
+            Enum<?> enumValue = Enum.valueOf((Class<? extends Enum>) c, s);
+            return c.getName() + "." + enumValue.name();
+        }
+
+        return null;
+    }
+}

==================================================
TestStringInterpreterTagSetters.java
index 8fd71c29fd..0b9f87f546 100644
--- a/test/org/apache/jasper/optimizations/TestELInterpreterTagSetters.java
+++ b/test/org/apache/jasper/optimizations/TestELInterpreterTagSetters.java
@@ -40,6 +40,7 @@ import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.jasper.JspCompilationContext;
 import org.apache.jasper.compiler.ELInterpreter;
 import org.apache.jasper.compiler.ELInterpreterFactory;
+import org.apache.jasper.compiler.StringInterpreter;
 import org.apache.tomcat.util.buf.ByteChunk;
 
 @RunWith(Parameterized.class)
@@ -112,6 +113,8 @@ public class TestELInterpreterTagSetters extends TomcatBaseTest {
         Context ctxt = (Context) tomcat.getHost().findChild("/test");
         ctxt.getServletContext().setAttribute(ELInterpreter.class.getCanonicalName(), elInterpreter);
 
+        ctxt.getServletContext().setAttribute(StringInterpreter.class.getCanonicalName(), new StringInterpreterEnum());
+
         ByteChunk bc = getUrl("http://localhost:" + getPort() + "/test/bug6nnnn/bug64872-" + target + ".jsp");
 
         String actual = bc.toString();

==================================================
