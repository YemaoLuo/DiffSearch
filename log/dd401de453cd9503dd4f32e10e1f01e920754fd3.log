dd401de453cd9503dd4f32e10e1f01e920754fd3
==================================================
add missing copyright header
==================================================
Violeta Georgieva
==================================================
Wed Apr 5 07:06:13 2017 +0000
==================================================
ExtensionValidator.java
add missing copyright header
ws police

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1790180 13f79535-47bb-0310-9956-ffa450edef68



==================================================
JarWarResourceSet.java
index 3957266b15..2b35802744 100644
--- a/java/org/apache/catalina/util/ExtensionValidator.java
+++ b/java/org/apache/catalina/util/ExtensionValidator.java
@@ -152,9 +152,9 @@ public final class ExtensionValidator {
                 String jarName = manifestResource.getURL().toExternalForm();
                 Manifest jmanifest = manifestResource.getManifest();
                 if (jmanifest != null) {
-	                ManifestResource mre = new ManifestResource(jarName,
-	                        jmanifest, ManifestResource.APPLICATION);
-	                appManifestResources.add(mre);
+                    ManifestResource mre = new ManifestResource(jarName,
+                            jmanifest, ManifestResource.APPLICATION);
+                    appManifestResources.add(mre);
                 }
             }
         }

==================================================
TestJarWarResourceSet.java
index d8911e8d34..805d8ddb4f 100644
--- a/java/org/apache/catalina/webresources/JarWarResourceSet.java
+++ b/java/org/apache/catalina/webresources/JarWarResourceSet.java
@@ -109,25 +109,25 @@ public class JarWarResourceSet extends AbstractArchiveResourceSet {
                         JarEntry entry = jarIs.getNextJarEntry();
                         boolean hasMetaInf = false;
                         while (entry != null) {
-                        	if (!hasMetaInf && entry.getName().startsWith("META-INF/")) {
-                        		hasMetaInf = true;
-                        	}
+                            if (!hasMetaInf && entry.getName().startsWith("META-INF/")) {
+                                hasMetaInf = true;
+                            }
                             archiveEntries.put(entry.getName(), entry);
                             entry = jarIs.getNextJarEntry();
                         }
                         setManifest(jarIs.getManifest());
-                    	// Hacks to work-around JarInputStream swallowing these
+                        // Hacks to work-around JarInputStream swallowing these
                         // entries. The attributes for these entries will be
                         // incomplete. Making the attributes available would
                         // require (re-)reading the stream as a ZipInputStream
                         // and creating JarEntry objects from the ZipEntries.
                         if (hasMetaInf) {
-                           	JarEntry metaInfDir = new JarEntry("META-INF/");
-                        	archiveEntries.put(metaInfDir.getName(), metaInfDir);
+                            JarEntry metaInfDir = new JarEntry("META-INF/");
+                            archiveEntries.put(metaInfDir.getName(), metaInfDir);
                         }
                         if (jarIs.getManifest() != null) {
-                        	JarEntry manifest = new JarEntry("META-INF/MANIFEST.MF");
-                        	archiveEntries.put(manifest.getName(), manifest);
+                            JarEntry manifest = new JarEntry("META-INF/MANIFEST.MF");
+                            archiveEntries.put(manifest.getName(), manifest);
                         }
                     }
                 } catch (IOException ioe) {

==================================================
