cb051fb79b593416d3d7b32a2c8e9742d4001b32
==================================================
Re-factoring. Preparing for Http11AprProtocol to extend AbstractHttp11Protocol
==================================================
Mark Emlyn
==================================================
Tue Aug 31 19:13:01 2010 +0000
==================================================
AbstractHttp11JsseProtocol.java
Re-factoring. Preparing for Http11AprProtocol to extend AbstractHttp11Protocol

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@991296 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AbstractHttp11Protocol.java
new file mode 100644
index 0000000000..c6eeca6e34
--- /dev/null
+++ b/java/org/apache/coyote/http11/AbstractHttp11JsseProtocol.java
@@ -0,0 +1,101 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one or more
+ *  contributor license agreements.  See the NOTICE file distributed with
+ *  this work for additional information regarding copyright ownership.
+ *  The ASF licenses this file to You under the Apache License, Version 2.0
+ *  (the "License"); you may not use this file except in compliance with
+ *  the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing, software
+ *  distributed under the License is distributed on an "AS IS" BASIS,
+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *  See the License for the specific language governing permissions and
+ *  limitations under the License.
+ */
+package org.apache.coyote.http11;
+
+public abstract class AbstractHttp11JsseProtocol
+        extends AbstractHttp11Protocol {
+
+    public String getAlgorithm() { return endpoint.getAlgorithm();}
+    public void setAlgorithm(String s ) { endpoint.setAlgorithm(s);}
+    
+    public String getClientAuth() { return endpoint.getClientAuth();}
+    public void setClientAuth(String s ) { endpoint.setClientAuth(s);}
+
+    public String getKeystoreFile() { return endpoint.getKeystoreFile();}
+    public void setKeystoreFile(String s ) { endpoint.setKeystoreFile(s);}
+
+    public String getKeystorePass() { return endpoint.getKeystorePass();}
+    public void setKeystorePass(String s ) { endpoint.setKeystorePass(s);}
+    
+    public String getKeystoreType() { return endpoint.getKeystoreType();}
+    public void setKeystoreType(String s ) { endpoint.setKeystoreType(s);}
+
+    public String getKeystoreProvider() {
+        return endpoint.getKeystoreProvider();
+    }
+    public void setKeystoreProvider(String s ) {
+        endpoint.setKeystoreProvider(s);
+    }
+
+    public String getSslProtocol() { return endpoint.getSslProtocol();}
+    public void setSslProtocol(String s) { endpoint.setSslProtocol(s);}
+    
+    public String getCiphers() { return endpoint.getCiphers();}
+    public void setCiphers(String s) { endpoint.setCiphers(s);}
+
+    public String getKeyAlias() { return endpoint.getKeyAlias();}
+    public void setKeyAlias(String s ) { endpoint.setKeyAlias(s);}
+
+    public String getKeyPass() { return endpoint.getKeyPass();}
+    public void setKeyPass(String s ) { endpoint.setKeyPass(s);}
+    
+    public void setTruststoreFile(String f){ endpoint.setTruststoreFile(f);}
+    public String getTruststoreFile(){ return endpoint.getTruststoreFile();}
+
+    public void setTruststorePass(String p){ endpoint.setTruststorePass(p);}
+    public String getTruststorePass(){return endpoint.getTruststorePass();}
+
+    public void setTruststoreType(String t){ endpoint.setTruststoreType(t);}
+    public String getTruststoreType(){ return endpoint.getTruststoreType();}
+
+    public void setTruststoreProvider(String t){
+        endpoint.setTruststoreProvider(t);
+    }
+    public String getTruststoreProvider(){
+        return endpoint.getTruststoreProvider();
+    }
+
+    public void setTruststoreAlgorithm(String a){
+        endpoint.setTruststoreAlgorithm(a);
+    }
+    public String getTruststoreAlgorithm(){
+        return endpoint.getTruststoreAlgorithm();
+    }
+    
+    public void setTrustMaxCertLength(String s){
+        endpoint.setTrustMaxCertLength(s);
+    }
+    public String getTrustMaxCertLength(){
+        return endpoint.getTrustMaxCertLength();
+    }
+    
+    public void setCrlFile(String s){endpoint.setCrlFile(s);}
+    public String getCrlFile(){ return endpoint.getCrlFile();}
+    
+    public void setSessionCacheSize(String s){endpoint.setSessionCacheSize(s);}
+    public String getSessionCacheSize(){ return endpoint.getSessionCacheSize();}
+
+    public void setSessionTimeout(String s){endpoint.setSessionTimeout(s);}
+    public String getSessionTimeout(){ return endpoint.getSessionTimeout();}
+    
+    public void setAllowUnsafeLegacyRenegotiation(String s) {
+        endpoint.setAllowUnsafeLegacyRenegotiation(s);
+    }
+    public String getAllowUnsafeLegacyRenegotiation() {
+        return endpoint.getAllowUnsafeLegacyRenegotiation();
+    }
+}

==================================================
Http11NioProtocol.java
index 8835334b4f..c52385cf4e 100644
--- a/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
+++ b/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
@@ -334,71 +334,6 @@ public abstract class AbstractHttp11Protocol implements ProtocolHandler, MBeanRe
 
     public int getSoLinger() { return endpoint.getSoLinger(); }
     public void setSoLinger(int soLinger) { endpoint.setSoLinger(soLinger); }
-
-    // JSSE SSL attrbutes
-    public String getAlgorithm() { return endpoint.getAlgorithm();}
-    public void setAlgorithm(String s ) { endpoint.setAlgorithm(s);}
-    
-    public String getClientAuth() { return endpoint.getClientAuth();}
-    public void setClientAuth(String s ) { endpoint.setClientAuth(s);}
-
-    public String getKeystoreFile() { return endpoint.getKeystoreFile();}
-    public void setKeystoreFile(String s ) { endpoint.setKeystoreFile(s);}
-
-    public String getKeystorePass() { return endpoint.getKeystorePass();}
-    public void setKeystorePass(String s ) { endpoint.setKeystorePass(s);}
-    
-    public String getKeystoreType() { return endpoint.getKeystoreType();}
-    public void setKeystoreType(String s ) { endpoint.setKeystoreType(s);}
-
-    public String getKeystoreProvider() { return endpoint.getKeystoreProvider();}
-    public void setKeystoreProvider(String s ) { endpoint.setKeystoreProvider(s);}
-
-    public String getSslProtocol() { return endpoint.getSslProtocol();}
-    public void setSslProtocol(String s) { endpoint.setSslProtocol(s);}
-    
-    public String getCiphers() { return endpoint.getCiphers();}
-    public void setCiphers(String s) { endpoint.setCiphers(s);}
-
-    public String getKeyAlias() { return endpoint.getKeyAlias();}
-    public void setKeyAlias(String s ) { endpoint.setKeyAlias(s);}
-
-    public String getKeyPass() { return endpoint.getKeyPass();}
-    public void setKeyPass(String s ) { endpoint.setKeyPass(s);}
-    
-    public void setTruststoreFile(String f){ endpoint.setTruststoreFile(f);}
-    public String getTruststoreFile(){ return endpoint.getTruststoreFile();}
-
-    public void setTruststorePass(String p){ endpoint.setTruststorePass(p);}
-    public String getTruststorePass(){return endpoint.getTruststorePass();}
-
-    public void setTruststoreType(String t){ endpoint.setTruststoreType(t);}
-    public String getTruststoreType(){ return endpoint.getTruststoreType();}
-
-    public void setTruststoreProvider(String t){endpoint.setTruststoreProvider(t);}
-    public String getTruststoreProvider(){ return endpoint.getTruststoreProvider();}
-
-    public void setTruststoreAlgorithm(String a){endpoint.setTruststoreAlgorithm(a);}
-    public String getTruststoreAlgorithm(){ return endpoint.getTruststoreAlgorithm();}
-    
-    public void setTrustMaxCertLength(String s){endpoint.setTrustMaxCertLength(s);}
-    public String getTrustMaxCertLength(){ return endpoint.getTrustMaxCertLength();}
-    
-    public void setCrlFile(String s){endpoint.setCrlFile(s);}
-    public String getCrlFile(){ return endpoint.getCrlFile();}
-    
-    public void setSessionCacheSize(String s){endpoint.setSessionCacheSize(s);}
-    public String getSessionCacheSize(){ return endpoint.getSessionCacheSize();}
-
-    public void setSessionTimeout(String s){endpoint.setSessionTimeout(s);}
-    public String getSessionTimeout(){ return endpoint.getSessionTimeout();}
-    
-    public void setAllowUnsafeLegacyRenegotiation(String s) {
-        endpoint.setAllowUnsafeLegacyRenegotiation(s);
-    }
-    public String getAllowUnsafeLegacyRenegotiation() {
-        return endpoint.getAllowUnsafeLegacyRenegotiation();
-    }
     
     @Override
     public abstract void init() throws Exception;

==================================================
Http11Protocol.java
index 0e52c04cff..55236793ff 100644
--- a/java/org/apache/coyote/http11/Http11NioProtocol.java
+++ b/java/org/apache/coyote/http11/Http11NioProtocol.java
@@ -48,7 +48,7 @@ import org.apache.tomcat.util.net.jsse.JSSEImplementation;
  * @author Costin Manolache
  * @author Filip Hanik
  */
-public class Http11NioProtocol extends AbstractHttp11Protocol {
+public class Http11NioProtocol extends AbstractHttp11JsseProtocol {
     
     private static final Log log = LogFactory.getLog(Http11NioProtocol.class);
     

==================================================
