f4a20af7e62f3c5274fce7f0fcead377be9bb7a7
==================================================
Remove unused code.
==================================================
Mark Thomas
==================================================
Tue May 22 20:10:16 2018 +0000
==================================================
StatementCache.java
Remove unused code.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1832062 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestAsyncQueue.java
index a5719236a2..4d20f86cbb 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/interceptor/StatementCache.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/interceptor/StatementCache.java
@@ -262,7 +262,6 @@ public class StatementCache extends StatementDecoratorInterceptor implements Sta
     }
 
     protected class CachedStatement extends StatementDecoratorInterceptor.StatementProxy<PreparedStatement> {
-        boolean cached = false;
         CacheKey key;
         public CachedStatement(PreparedStatement parent, String sql) {
             super(parent, sql);
@@ -291,7 +290,6 @@ public class StatementCache extends StatementDecoratorInterceptor implements Sta
                     proxy.setConnection(getConnection());
                     proxy.setConstructor(getConstructor());
                     if (cacheStatement(proxy)) {
-                        proxy.cached = true;
                         shouldClose = false;
                     }
                 } catch (RuntimeException | ReflectiveOperationException | SQLException x) {

==================================================
TestTimeout.java
index 0c178ac7b3..4a8a6a1f70 100644
--- a/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/TestAsyncQueue.java
+++ b/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/TestAsyncQueue.java
@@ -73,7 +73,6 @@ public class TestAsyncQueue {
     protected class OfferThread extends Thread {
         Object item = null;
         long delay = 5000;
-        volatile boolean offered = false;
         public OfferThread(Object i, long d) {
             this.item = i;
             this.delay = d;
@@ -87,7 +86,6 @@ public class TestAsyncQueue {
             } catch (Exception ignore){
                 // Ignore
             }
-            offered = true;
             TestAsyncQueue.this.queue.offer(item);
         }
     }

==================================================
