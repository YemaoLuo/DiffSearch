ce1de3faa770a1a467a4b0b92a4e4b19783dbb37
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56253
==================================================
Mark Emlyn
==================================================
Thu Mar 13 10:42:49 2014 +0000
==================================================
AbstractArchiveResourceSet.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56253
When listing resources that are provided by a JAR, fix possible StringIndexOutOfBoundsExceptions. Add some unit tests for this and similar scenarios and fix the additional issues those unit tests identified. Based on a patch by Larry Isaacs. 

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1577103 13f79535-47bb-0310-9956-ffa450edef68



==================================================
JarResourceRoot.java
index 3802032182..e67a10a7ea 100644
--- a/java/org/apache/catalina/webresources/AbstractArchiveResourceSet.java
+++ b/java/org/apache/catalina/webresources/AbstractArchiveResourceSet.java
@@ -75,7 +75,7 @@ public abstract class AbstractArchiveResourceSet extends AbstractResourceSet {
             String pathInJar =
                     getInternalPath() + path.substring(webAppMount.length());
             // Always strip off the leading '/' to get the JAR path
-            if (pathInJar.charAt(0) == '/') {
+            if (pathInJar.length() > 0 && pathInJar.charAt(0) == '/') {
                 pathInJar = pathInJar.substring(1);
             }
             Iterator<String> entries = jarFileEntries.keySet().iterator();
@@ -128,11 +128,13 @@ public abstract class AbstractArchiveResourceSet extends AbstractResourceSet {
                     getInternalPath() + path.substring(webAppMount.length());
             // Always strip off the leading '/' to get the JAR path and make
             // sure it ends in '/'
-            if (pathInJar.charAt(pathInJar.length() - 1) != '/') {
-                pathInJar = pathInJar.substring(1) + '/';
-            }
-            if (pathInJar.charAt(0) == '/') {
-                pathInJar = pathInJar.substring(1);
+            if (pathInJar.length() > 0) {
+                if (pathInJar.charAt(pathInJar.length() - 1) != '/') {
+                    pathInJar = pathInJar.substring(1) + '/';
+                }
+                if (pathInJar.charAt(0) == '/') {
+                    pathInJar = pathInJar.substring(1);
+                }
             }
 
             Iterator<String> entries = jarFileEntries.keySet().iterator();
@@ -218,6 +220,10 @@ public abstract class AbstractArchiveResourceSet extends AbstractResourceSet {
             }
             if (pathInJar.equals("")) {
                 // Special case
+                // This is a directory resource so the path must end with /
+                if (!path.endsWith("/")) {
+                    path = path + "/";
+                }
                 return new JarResourceRoot(root, new File(getBase()),
                         baseUrlString, path);
             } else {

==================================================
AbstractTestResourceSet.java
index 770b5e8312..3deec34d4c 100644
--- a/java/org/apache/catalina/webresources/LocalStrings.properties
+++ b/java/org/apache/catalina/webresources/LocalStrings.properties
@@ -35,6 +35,8 @@ fileResource.getUrlFail=Unable to determine a URL for the resource [{0}]
 jarResource.getInputStreamFail=Unable to obtain an InputStream for the resource [{0}] located in the JAR [{1}]
 jarResource.getUrlFail=Unable to determine a URL for the resource [{0}] located in the JAR [{1}]
 
+jarResourceRoot.invalidWebAppPath=This resource always refers to a directory so the supplied webAppPath must end with / but the provided webAppPath was [{0}]
+
 standardRoot.checkStateNotStarted=The resources may not be accessed if they are not currently started
 standardRoot.createInvalidFile=Unable to create WebResourceSet from [{0}]
 standardRoot.createNoFileResourceSet=The FileResourceSet feature has not yet been implemented

==================================================
