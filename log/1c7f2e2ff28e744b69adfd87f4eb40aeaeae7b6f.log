1c7f2e2ff28e744b69adfd87f4eb40aeaeae7b6f
==================================================
Remove unused code (ConstantCP and sub-classes)
==================================================
Mark Emlyn
==================================================
Wed Sep 10 21:56:03 2014 +0000
==================================================
Constant.java
Remove unused code (ConstantCP and sub-classes)

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1624142 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ConstantCP.java
index dbc3c609fc..0656435536 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Constant.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Constant.java
@@ -98,11 +98,10 @@ public abstract class Constant implements Cloneable, Serializable {
             case Constants.CONSTANT_Class:
                 return new ConstantClass(file);
             case Constants.CONSTANT_Fieldref:
-                return new ConstantFieldref(file);
             case Constants.CONSTANT_Methodref:
-                return new ConstantMethodref(file);
             case Constants.CONSTANT_InterfaceMethodref:
-                return new ConstantInterfaceMethodref(file);
+                Utility.swallowConstantCP(file);
+                return null;
             case Constants.CONSTANT_String:
                 return new ConstantString(file);
             case Constants.CONSTANT_Integer:

==================================================
ConstantFieldref.java
deleted file mode 100644
index efe217d9cc..0000000000
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantCP.java
+++ /dev/null
@@ -1,76 +0,0 @@
-/*
- *  Licensed to the Apache Software Foundation (ASF) under one or more
- *  contributor license agreements.  See the NOTICE file distributed with
- *  this work for additional information regarding copyright ownership.
- *  The ASF licenses this file to You under the Apache License, Version 2.0
- *  (the "License"); you may not use this file except in compliance with
- *  the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- *
- */
-package org.apache.tomcat.util.bcel.classfile;
-
-import java.io.DataInput;
-import java.io.IOException;
-
-/**
- * Abstract super class for Fieldref and Methodref constants.
- *
- * @author  <A HREF="mailto:m.dahm@gmx.de">M. Dahm</A>
- * @see     ConstantFieldref
- * @see     ConstantMethodref
- * @see     ConstantInterfaceMethodref
- */
-public abstract class ConstantCP extends Constant {
-
-    private static final long serialVersionUID = 7282382456501145526L;
-    /** References to the constants containing the class and the field signature
-     */
-    protected int class_index, name_and_type_index;
-
-
-    /**
-     * Initialize instance from file data.
-     *
-     * @param tag  Constant type tag
-     * @param file Input stream
-     * @throws IOException
-     */
-    ConstantCP(byte tag, DataInput file) throws IOException {
-        this(tag, file.readUnsignedShort(), file.readUnsignedShort());
-    }
-
-
-    /**
-     * @param class_index Reference to the class containing the field
-     * @param name_and_type_index and the field signature
-     */
-    protected ConstantCP(byte tag, int class_index, int name_and_type_index) {
-        super(tag);
-        this.class_index = class_index;
-        this.name_and_type_index = name_and_type_index;
-    }
-
-
-    /**
-     * @return Reference (index) to class this field or method belongs to.
-     */
-    public final int getClassIndex() {
-        return class_index;
-    }
-
-
-    /**
-     * @return Reference (index) to signature of the field.
-     */
-    public final int getNameAndTypeIndex() {
-        return name_and_type_index;
-    }
-}

==================================================
ConstantInterfaceMethodref.java
deleted file mode 100644
index 7617f5a58c..0000000000
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantFieldref.java
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- *  Licensed to the Apache Software Foundation (ASF) under one or more
- *  contributor license agreements.  See the NOTICE file distributed with
- *  this work for additional information regarding copyright ownership.
- *  The ASF licenses this file to You under the Apache License, Version 2.0
- *  (the "License"); you may not use this file except in compliance with
- *  the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- *
- */
-package org.apache.tomcat.util.bcel.classfile;
-
-import java.io.DataInputStream;
-import java.io.IOException;
-
-import org.apache.tomcat.util.bcel.Constants;
-
-/**
- * This class represents a constant pool reference to a field.
- *
- * @author  <A HREF="mailto:m.dahm@gmx.de">M. Dahm</A>
- */
-public final class ConstantFieldref extends ConstantCP {
-
-
-    private static final long serialVersionUID = -8062332095934294437L;
-
-    /**
-     * Initialize instance from file data.
-     *
-     * @param file input stream
-     * @throws IOException
-     */
-    ConstantFieldref(DataInputStream file) throws IOException {
-        super(Constants.CONSTANT_Fieldref, file);
-    }
-}

==================================================
ConstantMethodref.java
deleted file mode 100644
index e4c13ff21d..0000000000
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantInterfaceMethodref.java
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- *  Licensed to the Apache Software Foundation (ASF) under one or more
- *  contributor license agreements.  See the NOTICE file distributed with
- *  this work for additional information regarding copyright ownership.
- *  The ASF licenses this file to You under the Apache License, Version 2.0
- *  (the "License"); you may not use this file except in compliance with
- *  the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- *
- */
-package org.apache.tomcat.util.bcel.classfile;
-
-import java.io.DataInputStream;
-import java.io.IOException;
-
-import org.apache.tomcat.util.bcel.Constants;
-
-/**
- * This class represents a constant pool reference to an interface method.
- *
- * @author  <A HREF="mailto:m.dahm@gmx.de">M. Dahm</A>
- */
-public final class ConstantInterfaceMethodref extends ConstantCP {
-
-
-    private static final long serialVersionUID = -8587605570227841891L;
-
-    /**
-     * Initialize instance from file data.
-     *
-     * @param file input stream
-     * @throws IOException
-     */
-    ConstantInterfaceMethodref(DataInputStream file) throws IOException {
-        super(Constants.CONSTANT_InterfaceMethodref, file);
-    }
-}

==================================================
ConstantPool.java
deleted file mode 100644
index 2654c853a0..0000000000
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantMethodref.java
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- *  Licensed to the Apache Software Foundation (ASF) under one or more
- *  contributor license agreements.  See the NOTICE file distributed with
- *  this work for additional information regarding copyright ownership.
- *  The ASF licenses this file to You under the Apache License, Version 2.0
- *  (the "License"); you may not use this file except in compliance with
- *  the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- *
- */
-package org.apache.tomcat.util.bcel.classfile;
-
-import java.io.DataInputStream;
-import java.io.IOException;
-
-import org.apache.tomcat.util.bcel.Constants;
-
-/**
- * This class represents a constant pool reference to a method.
- *
- * @author  <A HREF="mailto:m.dahm@gmx.de">M. Dahm</A>
- */
-public final class ConstantMethodref extends ConstantCP {
-
-
-    private static final long serialVersionUID = -7857009620954576086L;
-
-    /**
-     * Initialize instance from file data.
-     *
-     * @param file input stream
-     * @throws IOException
-     */
-    ConstantMethodref(DataInputStream file) throws IOException {
-        super(Constants.CONSTANT_Methodref, file);
-    }
-}

==================================================
Utility.java
index 28b3378222..fc544283a8 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantPool.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ConstantPool.java
@@ -115,13 +115,6 @@ public class ConstantPool implements Cloneable, Serializable {
                         + " " + constantToString(((ConstantNameAndType) c).getSignatureIndex(),
                         Constants.CONSTANT_Utf8));
                 break;
-            case Constants.CONSTANT_InterfaceMethodref:
-            case Constants.CONSTANT_Methodref:
-            case Constants.CONSTANT_Fieldref:
-                str = (constantToString(((ConstantCP) c).getClassIndex(), Constants.CONSTANT_Class)
-                        + "." + constantToString(((ConstantCP) c).getNameAndTypeIndex(),
-                        Constants.CONSTANT_NameAndType));
-                break;
             default: // Never reached
                 throw new RuntimeException("Unknown constant type " + tag);
         }

==================================================
