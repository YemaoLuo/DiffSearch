b477206f789f2a4962aacdeb5a700a55adc40be2
==================================================
Perform null-checking on input and stored credentials before passing them off to CredentialHandlers for matching.
==================================================
Christopher Schultz
==================================================
Mon Oct 5 04:15:24 2015 +0000
==================================================
JDBCRealm.java
Perform null-checking on input and stored credentials before passing them off to CredentialHandlers for matching.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1706745 13f79535-47bb-0310-9956-ffa450edef68



==================================================
MemoryRealm.java
index ee085e55ca..326352404d 100644
--- a/java/org/apache/catalina/realm/JDBCRealm.java
+++ b/java/org/apache/catalina/realm/JDBCRealm.java
@@ -386,6 +386,13 @@ public class JDBCRealm
         // Look up the user's credentials
         String dbCredentials = getPassword(username);
 
+        if (credentials == null || dbCredentials == null) {
+            if (containerLog.isTraceEnabled())
+                containerLog.trace(sm.getString("jdbcRealm.authenticateFailure",
+                                                username));
+            return null;
+        }
+
         // Validate the user's credentials
         boolean validated = getCredentialHandler().matches(credentials, dbCredentials);
 

==================================================
RealmBase.java
index 7bf1e35900..bb26c63c6a 100644
--- a/java/org/apache/catalina/realm/MemoryRealm.java
+++ b/java/org/apache/catalina/realm/MemoryRealm.java
@@ -119,6 +119,11 @@ public class MemoryRealm  extends RealmBase {
         if (principal == null) {
             validated = false;
         } else {
+            if (credentials == null || principal.getPassword() == null) {
+                if (log.isDebugEnabled())
+                    log.debug(sm.getString("memoryRealm.authenticateFailure", username));
+                return (null);
+            }
             validated = getCredentialHandler().matches(credentials, principal.getPassword());
         }
 

==================================================
