339177dd5b45577231f573c7474d4592aee62fa7
==================================================
Code clean-up for o.a.catalina.filters
==================================================
Mark Emlyn
==================================================
Fri Jul 13 20:51:19 2012 +0000
==================================================
CsrfPreventionFilter.java
Code clean-up for o.a.catalina.filters
 - Add final prompted by UCDetector
 - Java 7 use of <>

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1361394 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ExpiresFilter.java
index f98c785167..749c16520e 100644
--- a/java/org/apache/catalina/filters/CsrfPreventionFilter.java
+++ b/java/org/apache/catalina/filters/CsrfPreventionFilter.java
@@ -56,7 +56,7 @@ public class CsrfPreventionFilter extends FilterBase {
 
     private Random randomSource;
 
-    private final Set<String> entryPoints = new HashSet<String>();
+    private final Set<String> entryPoints = new HashSet<>();
 
     private int nonceCacheSize = 5;
 
@@ -153,7 +153,6 @@ public class CsrfPreventionFilter extends FilterBase {
                 }
             }
 
-            @SuppressWarnings("unchecked")
             LruCache<String> nonceCache =
                 (LruCache<String>) req.getSession(true).getAttribute(
                     Constants.CSRF_NONCE_SESSION_ATTR_NAME);
@@ -169,7 +168,7 @@ public class CsrfPreventionFilter extends FilterBase {
             }
 
             if (nonceCache == null) {
-                nonceCache = new LruCache<String>(nonceCacheSize);
+                nonceCache = new LruCache<>(nonceCacheSize);
                 req.getSession().setAttribute(
                         Constants.CSRF_NONCE_SESSION_ATTR_NAME, nonceCache);
             }

==================================================
RemoteIpFilter.java
index 1fa4c0fe60..2fbf5f9d97 100644
--- a/java/org/apache/catalina/filters/ExpiresFilter.java
+++ b/java/org/apache/catalina/filters/ExpiresFilter.java
@@ -1177,7 +1177,7 @@ public class ExpiresFilter extends FilterBase {
     /**
      * Expires configuration by content type. Visible for test.
      */
-    private Map<String, ExpiresConfiguration> expiresConfigurationByContentType = new LinkedHashMap<String, ExpiresConfiguration>();
+    private Map<String, ExpiresConfiguration> expiresConfigurationByContentType = new LinkedHashMap<>();
 
     @Override
     public void doFilter(ServletRequest request, ServletResponse response,
@@ -1536,7 +1536,7 @@ public class ExpiresFilter extends FilterBase {
             }
         }
 
-        List<Duration> durations = new ArrayList<Duration>();
+        List<Duration> durations = new ArrayList<>();
 
         while (currentToken != null) {
             int amount;

==================================================
