c930e8e4e45278ab99036b0d8615f0ba8f9255a2
==================================================
Remove unused dump() method
==================================================
Mark Emlyn
==================================================
Sun Aug 26 20:58:03 2012 +0000
==================================================
AnnotationDefault.java
Remove unused dump() method

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1377516 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Attribute.java
index e62a12849a..42a70bf35b 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/AnnotationDefault.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/AnnotationDefault.java
@@ -18,7 +18,6 @@
 package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInputStream;
-import java.io.DataOutputStream;
 import java.io.IOException;
 
 import org.apache.tomcat.util.bcel.Constants;
@@ -86,11 +85,4 @@ public class AnnotationDefault extends Attribute
     {
         throw new RuntimeException("Not implemented yet!");
     }
-
-    @Override
-    public final void dump(DataOutputStream dos) throws IOException
-    {
-      super.dump(dos);
-      default_value.dump(dos);
-    }
 }

==================================================
Code.java
index 335b009567..4e98a6038c 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Attribute.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Attribute.java
@@ -18,7 +18,6 @@
 package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInputStream;
-import java.io.DataOutputStream;
 import java.io.IOException;
 import java.io.Serializable;
 import java.util.HashMap;
@@ -69,19 +68,6 @@ public abstract class Attribute implements Cloneable, Serializable
         this.constant_pool = constant_pool;
     }
 
-    /**
-     * Dump attribute to file stream in binary format.
-     *
-     * @param file
-     *            Output file stream
-     * @throws IOException
-     */
-    public void dump(DataOutputStream file) throws IOException
-    {
-        file.writeShort(name_index);
-        file.writeInt(length);
-    }
-
     private static final Map<String,AttributeReader> readers =
             new HashMap<String,AttributeReader>();
 

==================================================
ConstantValue.java
index 1df7415717..d9cc4c0c37 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Code.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Code.java
@@ -18,7 +18,6 @@
 package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInputStream;
-import java.io.DataOutputStream;
 import java.io.IOException;
 
 import org.apache.tomcat.util.bcel.Constants;
@@ -114,30 +113,6 @@ public final class Code extends Attribute {
     }
 
 
-    /**
-     * Dump code attribute to file stream in binary format.
-     *
-     * @param file Output file stream
-     * @throws IOException
-     */
-    @Override
-    public final void dump( DataOutputStream file ) throws IOException {
-        super.dump(file);
-        file.writeShort(max_stack);
-        file.writeShort(max_locals);
-        file.writeInt(code_length);
-        file.write(code, 0, code_length);
-        file.writeShort(exception_table_length);
-        for (int i = 0; i < exception_table_length; i++) {
-            exception_table[i].dump(file);
-        }
-        file.writeShort(attributes_count);
-        for (int i = 0; i < attributes_count; i++) {
-            attributes[i].dump(file);
-        }
-    }
-
-
     /**
      * @return LocalVariableTable of Code, if it has one
      */

==================================================
Deprecated.java
index cb356fb5ab..95a9b6c587 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantValue.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ConstantValue.java
@@ -17,7 +17,6 @@
 package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInput;
-import java.io.DataOutputStream;
 import java.io.IOException;
 
 import org.apache.tomcat.util.bcel.Constants;
@@ -64,19 +63,6 @@ public final class ConstantValue extends Attribute {
     }
 
 
-    /**
-     * Dump constant value attribute to file stream on binary format.
-     *
-     * @param file Output file stream
-     * @throws IOException
-     */
-    @Override
-    public final void dump( DataOutputStream file ) throws IOException {
-        super.dump(file);
-        file.writeShort(constantvalue_index);
-    }
-
-
     /**
      * @return String representation of constant value.
      */

==================================================
EnclosingMethod.java
index 9f88a4414e..135bf3089f 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Deprecated.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Deprecated.java
@@ -18,7 +18,6 @@
 package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInputStream;
-import java.io.DataOutputStream;
 import java.io.IOException;
 
 import org.apache.tomcat.util.bcel.Constants;
@@ -69,21 +68,6 @@ public final class Deprecated extends Attribute {
     }
 
 
-    /**
-     * Dump source file attribute to file stream in binary format.
-     *
-     * @param file Output file stream
-     * @throws IOException
-     */
-    @Override
-    public final void dump( DataOutputStream file ) throws IOException {
-        super.dump(file);
-        if (length > 0) {
-            file.write(bytes, 0, length);
-        }
-    }
-
-
     /**
      * @return attribute name
      */

==================================================
ExceptionTable.java
index 5a0e46068d..9c107f70e0 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/EnclosingMethod.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/EnclosingMethod.java
@@ -17,7 +17,6 @@
 package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInputStream;
-import java.io.DataOutputStream;
 import java.io.IOException;
 
 import org.apache.tomcat.util.bcel.Constants;
@@ -61,11 +60,4 @@ public class EnclosingMethod extends Attribute {
         // is this next line sufficient?
         // return (EnclosingMethod)clone();
     }
-
-    @Override
-    public final void dump(DataOutputStream file) throws IOException {
-        super.dump(file);
-        file.writeShort(classIndex);
-        file.writeShort(methodIndex);
-    }
 }

==================================================
InnerClasses.java
index e24b022bd0..952d747368 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ExceptionTable.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ExceptionTable.java
@@ -18,7 +18,6 @@
 package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInputStream;
-import java.io.DataOutputStream;
 import java.io.IOException;
 
 import org.apache.tomcat.util.bcel.Constants;
@@ -74,22 +73,6 @@ public final class ExceptionTable extends Attribute {
     }
 
 
-    /**
-     * Dump exceptions attribute to file stream in binary format.
-     *
-     * @param file Output file stream
-     * @throws IOException
-     */
-    @Override
-    public final void dump( DataOutputStream file ) throws IOException {
-        super.dump(file);
-        file.writeShort(number_of_exceptions);
-        for (int i = 0; i < number_of_exceptions; i++) {
-            file.writeShort(exception_index_table[i]);
-        }
-    }
-
-
     /**
      * @param exception_index_table the list of exception indexes
      * Also redefines number_of_exceptions according to table length.

==================================================
LineNumberTable.java
index f69f815d91..6bc97fc5a7 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/InnerClasses.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/InnerClasses.java
@@ -18,7 +18,6 @@
 package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInputStream;
-import java.io.DataOutputStream;
 import java.io.IOException;
 
 import org.apache.tomcat.util.bcel.Constants;
@@ -73,22 +72,6 @@ public final class InnerClasses extends Attribute {
     }
 
 
-    /**
-     * Dump source file attribute to file stream in binary format.
-     *
-     * @param file Output file stream
-     * @throws IOException
-     */
-    @Override
-    public final void dump( DataOutputStream file ) throws IOException {
-        super.dump(file);
-        file.writeShort(number_of_classes);
-        for (int i = 0; i < number_of_classes; i++) {
-            inner_classes[i].dump(file);
-        }
-    }
-
-
     /**
      * @param inner_classes the array of inner classes
      */

==================================================
LocalVariableTable.java
index 5feaa9751c..7b43a089cd 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/LineNumberTable.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/LineNumberTable.java
@@ -18,7 +18,6 @@
 package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInputStream;
-import java.io.DataOutputStream;
 import java.io.IOException;
 
 import org.apache.tomcat.util.bcel.Constants;
@@ -72,22 +71,6 @@ public final class LineNumberTable extends Attribute {
     }
 
 
-    /**
-     * Dump line number table attribute to file stream in binary format.
-     *
-     * @param file Output file stream
-     * @throws IOException
-     */
-    @Override
-    public final void dump( DataOutputStream file ) throws IOException {
-        super.dump(file);
-        file.writeShort(line_number_table_length);
-        for (int i = 0; i < line_number_table_length; i++) {
-            line_number_table[i].dump(file);
-        }
-    }
-
-
     /**
      * @param line_number_table the line number entries for this table
      */

==================================================
LocalVariableTypeTable.java
index 2668336ac8..9984827b53 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/LocalVariableTable.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/LocalVariableTable.java
@@ -18,7 +18,6 @@
 package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInputStream;
-import java.io.DataOutputStream;
 import java.io.IOException;
 
 import org.apache.tomcat.util.bcel.Constants;
@@ -71,22 +70,6 @@ public class LocalVariableTable extends Attribute {
     }
 
 
-    /**
-     * Dump local variable table attribute to file stream in binary format.
-     *
-     * @param file Output file stream
-     * @throws IOException
-     */
-    @Override
-    public final void dump( DataOutputStream file ) throws IOException {
-        super.dump(file);
-        file.writeShort(local_variable_table_length);
-        for (int i = 0; i < local_variable_table_length; i++) {
-            local_variable_table[i].dump(file);
-        }
-    }
-
-
     /**
      *
      * @param index the variable slot

==================================================
PMGClass.java
index dce9456f83..6ec6526af7 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/LocalVariableTypeTable.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/LocalVariableTypeTable.java
@@ -17,7 +17,6 @@
 package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInputStream;
-import java.io.DataOutputStream;
 import java.io.IOException;
 
 import org.apache.tomcat.util.bcel.Constants;
@@ -72,15 +71,6 @@ private int             local_variable_type_table_length; // Table of local
       local_variable_type_table[i] = new LocalVariable(dis, cpool);
   }
 
-  @Override
-  public final void dump(DataOutputStream file) throws IOException
-  {
-    super.dump(file);
-    file.writeShort(local_variable_type_table_length);
-    for(int i=0; i < local_variable_type_table_length; i++)
-      local_variable_type_table[i].dump(file);
-  }
-
   public final void setLocalVariableTable(LocalVariable[] local_variable_table)
   {
     this.local_variable_type_table = local_variable_table;

==================================================
RuntimeInvisibleAnnotations.java
index 4b5ce1bb06..0ce4de22ca 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/PMGClass.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/PMGClass.java
@@ -18,7 +18,6 @@
 package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInput;
-import java.io.DataOutputStream;
 import java.io.IOException;
 
 import org.apache.tomcat.util.bcel.Constants;
@@ -66,20 +65,6 @@ public final class PMGClass extends Attribute {
     }
 
 
-    /**
-     * Dump source file attribute to file stream in binary format.
-     *
-     * @param file Output file stream
-     * @throws IOException
-     */
-    @Override
-    public final void dump( DataOutputStream file ) throws IOException {
-        super.dump(file);
-        file.writeShort(pmg_index);
-        file.writeShort(pmg_class_index);
-    }
-
-
     /**
      * @return PMG name.
      */

==================================================
RuntimeVisibleAnnotations.java
index 138964d8b9..8deb53696d 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/RuntimeInvisibleAnnotations.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/RuntimeInvisibleAnnotations.java
@@ -18,7 +18,6 @@
 package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInputStream;
-import java.io.DataOutputStream;
 import java.io.IOException;
 
 import org.apache.tomcat.util.bcel.Constants;
@@ -62,11 +61,4 @@ public class RuntimeInvisibleAnnotations extends Annotations
         Annotations c = (Annotations) clone();
         return c;
     }
-
-    @Override
-    public final void dump(DataOutputStream dos) throws IOException
-    {
-        super.dump(dos);
-        writeAnnotations(dos);
-    }
 }

==================================================
Signature.java
index 7a2315021a..b4d8e0274b 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/RuntimeVisibleAnnotations.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/RuntimeVisibleAnnotations.java
@@ -18,7 +18,6 @@
 package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInputStream;
-import java.io.DataOutputStream;
 import java.io.IOException;
 
 import org.apache.tomcat.util.bcel.Constants;
@@ -62,11 +61,4 @@ public class RuntimeVisibleAnnotations extends Annotations
         Annotations c = (Annotations) clone();
         return c;
     }
-
-    @Override
-    public final void dump(DataOutputStream dos) throws IOException
-    {
-        super.dump(dos);
-        writeAnnotations(dos);
-    }
 }

==================================================
SourceFile.java
index a920f9ea16..134b85ff96 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Signature.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Signature.java
@@ -18,7 +18,6 @@
 package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInput;
-import java.io.DataOutputStream;
 import java.io.IOException;
 
 import org.apache.tomcat.util.bcel.Constants;
@@ -63,19 +62,6 @@ public final class Signature extends Attribute {
     }
 
 
-    /**
-     * Dump source file attribute to file stream in binary format.
-     *
-     * @param file Output file stream
-     * @throws IOException
-     */
-    @Override
-    public final void dump( DataOutputStream file ) throws IOException {
-        super.dump(file);
-        file.writeShort(signature_index);
-    }
-
-
     /**
      * @return GJ signature.
      */

==================================================
StackMap.java
index 28aaf790b4..07e3bd06bd 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/SourceFile.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/SourceFile.java
@@ -18,7 +18,6 @@
 package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInput;
-import java.io.DataOutputStream;
 import java.io.IOException;
 
 import org.apache.tomcat.util.bcel.Constants;
@@ -72,19 +71,6 @@ public final class SourceFile extends Attribute {
     }
 
 
-    /**
-     * Dump source file attribute to file stream in binary format.
-     *
-     * @param file Output file stream
-     * @throws IOException
-     */
-    @Override
-    public final void dump( DataOutputStream file ) throws IOException {
-        super.dump(file);
-        file.writeShort(sourcefile_index);
-    }
-
-
     /**
      * @return Source file name.
      */

==================================================
StackMapTable.java
index 68918cd16f..2ad1753647 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/StackMap.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/StackMap.java
@@ -18,7 +18,6 @@
 package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInputStream;
-import java.io.DataOutputStream;
 import java.io.IOException;
 
 import org.apache.tomcat.util.bcel.Constants;
@@ -76,22 +75,6 @@ public final class StackMap extends Attribute {
     }
 
 
-    /**
-     * Dump line number table attribute to file stream in binary format.
-     *
-     * @param file Output file stream
-     * @throws IOException
-     */
-    @Override
-    public final void dump( DataOutputStream file ) throws IOException {
-        super.dump(file);
-        file.writeShort(map_length);
-        for (int i = 0; i < map_length; i++) {
-            map[i].dump(file);
-        }
-    }
-
-
     /**
      * @param map Array of stack map entries
      */

==================================================
Synthetic.java
index 938943328a..3b01d5b9a9 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/StackMapTable.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/StackMapTable.java
@@ -18,7 +18,6 @@
 package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInputStream;
-import java.io.DataOutputStream;
 import java.io.IOException;
 
 import org.apache.tomcat.util.bcel.Constants;
@@ -76,22 +75,6 @@ public final class StackMapTable extends Attribute {
     }
 
 
-    /**
-     * Dump line number table attribute to file stream in binary format.
-     *
-     * @param file Output file stream
-     * @throws IOException
-     */
-    @Override
-    public final void dump( DataOutputStream file ) throws IOException {
-        super.dump(file);
-        file.writeShort(map_length);
-        for (int i = 0; i < map_length; i++) {
-            map[i].dump(file);
-        }
-    }
-
-
     /**
      * @param map Array of stack map entries
      */

==================================================
Unknown.java
index 71066ac913..92f5a17455 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Synthetic.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Synthetic.java
@@ -18,7 +18,6 @@
 package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInputStream;
-import java.io.DataOutputStream;
 import java.io.IOException;
 
 import org.apache.tomcat.util.bcel.Constants;
@@ -75,21 +74,6 @@ public final class Synthetic extends Attribute {
     }
 
 
-    /**
-     * Dump source file attribute to file stream in binary format.
-     *
-     * @param file Output file stream
-     * @throws IOException
-     */
-    @Override
-    public final void dump( DataOutputStream file ) throws IOException {
-        super.dump(file);
-        if (length > 0) {
-            file.write(bytes, 0, length);
-        }
-    }
-
-
     /**
      * @return String representation.
      */

==================================================
