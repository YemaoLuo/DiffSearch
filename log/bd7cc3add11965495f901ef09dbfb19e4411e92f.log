bd7cc3add11965495f901ef09dbfb19e4411e92f
==================================================
Refactor: Obtain limits directly from protocol
==================================================
Mark Thomas
==================================================
Tue Sep 5 09:44:04 2017 +0000
==================================================
Http2Protocol.java
Refactor: Obtain limits directly from protocol

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1807329 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http2UpgradeHandler.java
index e37e2d8e8e..a54efeec69 100644
--- a/java/org/apache/coyote/http2/Http2Protocol.java
+++ b/java/org/apache/coyote/http2/Http2Protocol.java
@@ -105,11 +105,6 @@ public class Http2Protocol implements UpgradeProtocol {
                 ? new Http2AsyncUpgradeHandler(this, adapter, coyoteRequest)
                 : new Http2UpgradeHandler(this, adapter, coyoteRequest);
 
-        result.setAllowedTrailerHeaders(allowedTrailerHeaders);
-        result.setMaxHeaderCount(getMaxHeaderCount());
-        result.setMaxHeaderSize(getMaxHeaderSize());
-        result.setMaxTrailerCount(getMaxTrailerCount());
-        result.setMaxTrailerSize(getMaxTrailerSize());
         result.setInitiatePingDisabled(initiatePingDisabled);
         return result;
     }
@@ -226,6 +221,11 @@ public class Http2Protocol implements UpgradeProtocol {
     }
 
 
+    boolean isTrailerHeaderAllowed(String headerName) {
+        return allowedTrailerHeaders.contains(headerName);
+    }
+
+
     public void setMaxHeaderCount(int maxHeaderCount) {
         this.maxHeaderCount = maxHeaderCount;
     }

==================================================
Stream.java
index be26d98055..1bd048fa5f 100644
--- a/java/org/apache/coyote/http2/Http2UpgradeHandler.java
+++ b/java/org/apache/coyote/http2/Http2UpgradeHandler.java
@@ -20,7 +20,6 @@ import java.io.EOFException;
 import java.io.IOException;
 import java.nio.ByteBuffer;
 import java.nio.charset.StandardCharsets;
-import java.util.Collections;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.Iterator;
@@ -138,13 +137,6 @@ class Http2UpgradeHandler extends AbstractStream implements InternalHttpUpgradeH
     private AtomicInteger streamConcurrency = null;
     private Queue<StreamRunnable> queuedRunnable = null;
 
-    // Limits
-    private Set<String> allowedTrailerHeaders = Collections.emptySet();
-    private int maxHeaderCount = Constants.DEFAULT_MAX_HEADER_COUNT;
-    private int maxHeaderSize = Constants.DEFAULT_MAX_HEADER_SIZE;
-    private int maxTrailerCount = Constants.DEFAULT_MAX_TRAILER_COUNT;
-    private int maxTrailerSize = Constants.DEFAULT_MAX_TRAILER_SIZE;
-
 
     Http2UpgradeHandler(Http2Protocol protocol, Adapter adapter, Request coyoteRequest) {
         super (STREAM_ID_ZERO);
@@ -384,6 +376,11 @@ class Http2UpgradeHandler extends AbstractStream implements InternalHttpUpgradeH
     }
 
 
+    Http2Protocol getProtocol() {
+        return protocol;
+    }
+
+
     @Override
     public void pause() {
         if (log.isDebugEnabled()) {
@@ -1120,58 +1117,8 @@ class Http2UpgradeHandler extends AbstractStream implements InternalHttpUpgradeH
     }
 
 
-    boolean isTrailerHeaderAllowed(String headerName) {
-        return allowedTrailerHeaders.contains(headerName);
-    }
-
-
     // ------------------------------------------- Configuration getters/setters
 
-    public void setAllowedTrailerHeaders(Set<String> allowedTrailerHeaders) {
-        this.allowedTrailerHeaders = allowedTrailerHeaders;
-    }
-
-
-    public void setMaxHeaderCount(int maxHeaderCount) {
-        this.maxHeaderCount = maxHeaderCount;
-    }
-
-
-    public int getMaxHeaderCount() {
-        return maxHeaderCount;
-    }
-
-
-    public void setMaxHeaderSize(int maxHeaderSize) {
-        this.maxHeaderSize = maxHeaderSize;
-    }
-
-
-    public int getMaxHeaderSize() {
-        return maxHeaderSize;
-    }
-
-
-    public void setMaxTrailerCount(int maxTrailerCount) {
-        this.maxTrailerCount = maxTrailerCount;
-    }
-
-
-    public int getMaxTrailerCount() {
-        return maxTrailerCount;
-    }
-
-
-    public void setMaxTrailerSize(int maxTrailerSize) {
-        this.maxTrailerSize = maxTrailerSize;
-    }
-
-
-    public int getMaxTrailerSize() {
-        return maxTrailerSize;
-    }
-
-
     public void setInitiatePingDisabled(boolean initiatePingDisabled) {
         pingManager.initiateDisabled = initiatePingDisabled;
     }

==================================================
