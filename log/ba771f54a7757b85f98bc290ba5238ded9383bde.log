ba771f54a7757b85f98bc290ba5238ded9383bde
==================================================
No point in having abstract methods in an abstract class that are defined in an implemented interface.
==================================================
Mark Thomas
==================================================
Thu Oct 8 21:15:20 2015 +0000
==================================================
AbstractProcessor.java
No point in having abstract methods in an abstract class that are defined in an implemented interface.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1707621 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Processor.java
index 6534bbef16..9eb97e1a62 100644
--- a/java/org/apache/coyote/AbstractProcessor.java
+++ b/java/org/apache/coyote/AbstractProcessor.java
@@ -21,7 +21,6 @@ import java.io.InterruptedIOException;
 import java.util.concurrent.Executor;
 
 import javax.servlet.RequestDispatcher;
-import javax.servlet.http.HttpUpgradeHandler;
 
 import org.apache.juli.logging.Log;
 import org.apache.tomcat.util.ExceptionUtils;
@@ -193,16 +192,6 @@ public abstract class AbstractProcessor implements ActionHook, Processor {
         getAdapter().errorDispatch(request, response);
     }
 
-    @Override
-    public abstract boolean isUpgrade();
-
-    /**
-     * Process HTTP requests. All requests are treated as HTTP requests to start
-     * with although they may change type during processing.
-     */
-    @Override
-    public abstract SocketState process(SocketWrapperBase<?> socket) throws IOException;
-
 
     /**
      * Process an in-progress request that is not longer in standard HTTP mode.
@@ -287,8 +276,5 @@ public abstract class AbstractProcessor implements ActionHook, Processor {
      */
     protected abstract SocketState dispatchEndRequest();
 
-    @Override
-    public abstract HttpUpgradeHandler getHttpUpgradeHandler();
-
     protected abstract Log getLog();
 }

==================================================
