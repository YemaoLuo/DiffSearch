c580bc60c9188fd8ea2df13d9afabbbf1861d7fb
==================================================
Add some Javadoc.
==================================================
Mark Emlyn
==================================================
Sun Sep 26 22:37:31 2010 +0000
==================================================
AjpProcessor.java
Add some Javadoc.
Use SocketStatus.OPEN rather than STOP since the BIO connector treats them the same way and it reduces code complexity. It also simplifies async re-factoring I have in the works,

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1001545 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http11Processor.java
index f6097c0009..02ec3ee2ce 100644
--- a/java/org/apache/coyote/ajp/AjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpProcessor.java
@@ -660,7 +660,7 @@ public class AjpProcessor implements ActionHook {
             RequestInfo rp = request.getRequestProcessor();
             if ( rp.getStage() != org.apache.coyote.Constants.STAGE_SERVICE ) { //async handling
                 dispatch.set(true);
-                endpoint.processSocket(this.socket, SocketStatus.STOP);
+                endpoint.processSocket(this.socket, SocketStatus.OPEN);
             } else {
                 dispatch.set(false);
             }

==================================================
JIoEndpoint.java
index 5b056ac3fa..1a88f84142 100644
--- a/java/org/apache/coyote/http11/Http11Processor.java
+++ b/java/org/apache/coyote/http11/Http11Processor.java
@@ -502,7 +502,7 @@ public class Http11Processor extends AbstractHttp11Processor implements ActionHo
             RequestInfo rp = request.getRequestProcessor();
             if ( rp.getStage() != org.apache.coyote.Constants.STAGE_SERVICE ) { //async handling
                 dispatch.set(true);
-                endpoint.processSocket(this.socket, SocketStatus.STOP);
+                endpoint.processSocket(this.socket, SocketStatus.OPEN);
             } else {
                 dispatch.set(false);
             }

==================================================
