cad93e885ab5526a44c91832b7c4d0c5dca7bab2
==================================================
fix typo(an sql)
==================================================
KangZhiDong worldkzd@gmail.com
==================================================
Fri Sep 6 22:53:51 2019 +0800
==================================================
JDBCRealm.java
fix typo(an sql)



==================================================
Jdbc41Bridge.java
index 2f111777d2..f27d9acbf7 100644
--- a/java/org/apache/catalina/realm/JDBCRealm.java
+++ b/java/org/apache/catalina/realm/JDBCRealm.java
@@ -306,7 +306,7 @@ public class JDBCRealm
         // This needs rewritten with better pooling support, the existing code
         // needs signature changes since the Prepared statements needs cached
         // with the connections.
-        // The code below will try twice if there is a SQLException so the
+        // The code below will try twice if there is an SQLException so the
         // connection may try to be opened again. On normal conditions (including
         // invalid login - the above is only used once.
         int numberOfTries = 2;
@@ -509,7 +509,7 @@ public class JDBCRealm
         // This needs rewritten with better pooling support, the existing code
         // needs signature changes since the Prepared statements needs cached
         // with the connections.
-        // The code below will try twice if there is a SQLException so the
+        // The code below will try twice if there is an SQLException so the
         // connection may try to be opened again. On normal conditions (including
         // invalid login - the above is only used once.
         int numberOfTries = 2;
@@ -581,7 +581,7 @@ public class JDBCRealm
         // This needs rewritten wuth better pooling support, the existing code
         // needs signature changes since the Prepared statements needs cached
         // with the connections.
-        // The code below will try twice if there is a SQLException so the
+        // The code below will try twice if there is an SQLException so the
         // connection may try to be opened again. On normal conditions (including
         // invalid login - the above is only used once.
         int numberOfTries = 2;

==================================================
SQLExceptionList.java
index eb0d09db00..0cb852a2c9 100644
--- a/java/org/apache/tomcat/dbcp/dbcp2/Jdbc41Bridge.java
+++ b/java/org/apache/tomcat/dbcp/dbcp2/Jdbc41Bridge.java
@@ -415,7 +415,7 @@ public class Jdbc41Bridge {
      * Delegates to {@link Statement#closeOnCompletion()} without throwing a {@link AbstractMethodError}.
      * <p>
      * If the JDBC driver does not implement {@link Statement#closeOnCompletion()}, then just check that the connection
-     * is closed to then throw a SQLException.
+     * is closed to then throw an SQLException.
      * </p>
      *
      * @param statement
@@ -438,7 +438,7 @@ public class Jdbc41Bridge {
      * Delegates to {@link Statement#isCloseOnCompletion()} without throwing a {@link AbstractMethodError}.
      * <p>
      * If the JDBC driver does not implement {@link Statement#isCloseOnCompletion()}, then just check that the
-     * connection is closed to then throw a SQLException.
+     * connection is closed to then throw an SQLException.
      * </p>
      *
      * @param statement

==================================================
LocalXAConnectionFactory.java
index 6f24f044c5..3f8d1af5f4 100644
--- a/java/org/apache/tomcat/dbcp/dbcp2/SQLExceptionList.java
+++ b/java/org/apache/tomcat/dbcp/dbcp2/SQLExceptionList.java
@@ -21,7 +21,7 @@ import java.sql.SQLException;
 import java.util.List;
 
 /**
- * A SQLException based on a list of Throwable causes.
+ * An SQLException based on a list of Throwable causes.
  * <p>
  * The first exception in the list is used as this exception's cause and is accessible with the usual
  * {@link #getCause()} while the complete list is accessible with {@link #getCauseList()}.

==================================================
PoolConfiguration.java
index 890fe4081e..852b83bc1b 100644
--- a/modules/jdbc-pool/doc/jdbc-pool.xml
+++ b/modules/jdbc-pool/doc/jdbc-pool.xml
@@ -119,7 +119,7 @@
   <subsection name="Additional features">
     <p>The Tomcat connection pool offers a few additional features over what most other pools let you do:</p>
     <ul>
-      <li><code>initSQL</code> - the ability to run a SQL statement exactly once, when the connection is created</li>
+      <li><code>initSQL</code> - the ability to run an SQL statement exactly once, when the connection is created</li>
       <li><code>validationInterval</code> - in addition to running validations on connections, avoid running them too frequently.</li>
       <li><code>jdbcInterceptors</code> - flexible and pluggable interceptors to create any customizations around the pool,
           the query execution and the result set handling. More on this in the advanced section.</li>

==================================================
TrapException.java
index 2359fc8eb2..4ce770871b 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/PoolConfiguration.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/PoolConfiguration.java
@@ -501,7 +501,7 @@ public interface PoolConfiguration {
      * The SQL query that will be used to validate connections from this
      * pool before returning them to the caller or pool.
      * If specified, this query does not have to return any data,
-     * it just can't throw a SQLException.
+     * it just can't throw an SQLException.
      * The default value is null.
      * Example values are SELECT 1(mysql),
      * select 1 from dual(oracle),
@@ -514,7 +514,7 @@ public interface PoolConfiguration {
      * The SQL query that will be used to validate connections from this
      * pool before returning them to the caller or pool.
      * If specified, this query does not have to return any data,
-     * it just can't throw a SQLException.
+     * it just can't throw an SQLException.
      * The default value is null.
      * Example values are SELECT 1(mysql),
      * select 1 from dual(oracle),

==================================================
