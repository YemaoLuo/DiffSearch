abd121b326bae42119e9608df4c2b9656d50581e
==================================================
Simplify calls to switch between standard and keep-alive timeouts
==================================================
Mark Emlyn
==================================================
Wed Nov 12 10:49:02 2014 +0000
==================================================
AbstractAjpProcessor.java
Simplify calls to switch between standard and keep-alive timeouts

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1638748 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AjpAprProcessor.java
index 0de01d1b5f..05eb144300 100644
--- a/java/org/apache/coyote/ajp/AbstractAjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AbstractAjpProcessor.java
@@ -738,7 +738,7 @@ public abstract class AbstractAjpProcessor<S> extends AbstractProcessor<S> {
                 }
                 // Set back timeout if keep alive timeout is enabled
                 if (keepAliveTimeout > 0) {
-                    setTimeout(socketWrapper, soTimeout);
+                    socketWrapper.setTimeout(soTimeout);
                 }
                 // Check message type, process right away and break if
                 // not regular request processing
@@ -843,7 +843,7 @@ public abstract class AbstractAjpProcessor<S> extends AbstractProcessor<S> {
             rp.setStage(org.apache.coyote.Constants.STAGE_KEEPALIVE);
             // Set keep alive timeout if enabled
             if (keepAliveTimeout > 0) {
-                setTimeout(socketWrapper, keepAliveTimeout);
+                socketWrapper.setTimeout(keepAliveTimeout);
             }
 
             recycle(false);
@@ -935,9 +935,6 @@ public abstract class AbstractAjpProcessor<S> extends AbstractProcessor<S> {
     protected abstract void setupSocket(SocketWrapperBase<S> socketWrapper)
             throws IOException;
 
-    protected abstract void setTimeout(SocketWrapperBase<S> socketWrapper,
-            int timeout) throws IOException;
-
     // Methods used by readMessage
     /**
      * Read at least the specified amount of bytes, and place them

==================================================
AjpNio2Processor.java
index 1fa8cddc85..3ae0816511 100644
--- a/java/org/apache/coyote/ajp/AjpAprProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpAprProcessor.java
@@ -94,14 +94,6 @@ public class AjpAprProcessor extends AbstractAjpProcessor<Long> {
     }
 
 
-    @Override
-    protected void setTimeout(SocketWrapperBase<Long> socketWrapper,
-            int timeout) throws IOException {
-        Socket.timeoutSet(
-                socketWrapper.getSocket().longValue(), timeout * 1000);
-    }
-
-
     @Override
     protected int output(byte[] src, int offset, int length, boolean block)
             throws IOException {

==================================================
AjpNioProcessor.java
index 3e9acc7b8f..0aaa9ecb80 100644
--- a/java/org/apache/coyote/ajp/AjpNio2Processor.java
+++ b/java/org/apache/coyote/ajp/AjpNio2Processor.java
@@ -126,13 +126,6 @@ public class AjpNio2Processor extends AbstractAjpProcessor<Nio2Channel> {
     }
 
 
-    @Override
-    protected void setTimeout(SocketWrapperBase<Nio2Channel> socketWrapper,
-            int timeout) throws IOException {
-        socketWrapper.setTimeout(timeout);
-    }
-
-
     @Override
     protected int output(byte[] src, int offset, int length, boolean block)
             throws IOException {

==================================================
AprEndpoint.java
index 0a5d33c683..d5cad18d31 100644
--- a/java/org/apache/coyote/ajp/AjpNioProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpNioProcessor.java
@@ -106,13 +106,6 @@ public class AjpNioProcessor extends AbstractAjpProcessor<NioChannel> {
     }
 
 
-    @Override
-    protected void setTimeout(SocketWrapperBase<NioChannel> socketWrapper,
-            int timeout) throws IOException {
-        socketWrapper.setTimeout(timeout);
-    }
-
-
     @Override
     protected int output(byte[] src, int offset, int length, boolean block)
             throws IOException {

==================================================
