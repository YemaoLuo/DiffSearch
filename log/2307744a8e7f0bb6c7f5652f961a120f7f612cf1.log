2307744a8e7f0bb6c7f5652f961a120f7f612cf1
==================================================
Introduce a new method CoyoteOutputStream.write(ByteBuffer)
==================================================
Violeta Georgieva
==================================================
Mon Aug 29 18:10:36 2016 +0000
==================================================
CoyoteOutputStream.java
Introduce a new method CoyoteOutputStream.write(ByteBuffer)

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1758276 13f79535-47bb-0310-9956-ffa450edef68



==================================================
OutputBuffer.java
index b6e131a7e1..950d0f5c43 100644
--- a/java/org/apache/catalina/connector/CoyoteOutputStream.java
+++ b/java/org/apache/catalina/connector/CoyoteOutputStream.java
@@ -17,6 +17,7 @@
 package org.apache.catalina.connector;
 
 import java.io.IOException;
+import java.nio.ByteBuffer;
 
 import javax.servlet.ServletOutputStream;
 import javax.servlet.WriteListener;
@@ -100,6 +101,15 @@ public class CoyoteOutputStream extends ServletOutputStream {
     }
 
 
+    public void write(ByteBuffer from) throws IOException {
+        boolean nonBlocking = checkNonBlockingWrite();
+        ob.write(from);
+        if (nonBlocking) {
+            checkRegisterForWrite();
+        }
+    }
+
+
     /**
      * Will send the buffer to the client.
      */

==================================================
TestCoyoteOutputStream.java
index 467c10afe2..300ddb1858 100644
--- a/java/org/apache/catalina/connector/OutputBuffer.java
+++ b/java/org/apache/catalina/connector/OutputBuffer.java
@@ -430,6 +430,17 @@ public class OutputBuffer extends Writer
     }
 
 
+    public void write(ByteBuffer from) throws IOException {
+
+        if (suspended) {
+            return;
+        }
+
+        writeBytes(from);
+
+    }
+
+
     private void writeBytes(byte b[], int off, int len)
         throws IOException {
 
@@ -449,6 +460,24 @@ public class OutputBuffer extends Writer
     }
 
 
+    private void writeBytes(ByteBuffer from) throws IOException {
+
+        if (closed) {
+            return;
+        }
+
+        bb.append(from);
+        bytesWritten += from.remaining();
+
+        // if called from within flush(), then immediately flush
+        // remaining bytes
+        if (doFlush) {
+            bb.flushBuffer();
+        }
+
+    }
+
+
     public void writeByte(int b)
         throws IOException {
 

==================================================
