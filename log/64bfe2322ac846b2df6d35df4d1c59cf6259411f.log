64bfe2322ac846b2df6d35df4d1c59cf6259411f
==================================================
Move UpgradeProcessor creation from the ConnectionHandler to the
==================================================
Mark Thomas
==================================================
Sun Nov 8 16:53:21 2015 +0000
==================================================
AbstractProtocol.java
Move UpgradeProcessor creation from the ConnectionHandler to the
Protocol

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1713255 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AbstractAjpProtocol.java
index cca3779615..99001204a0 100644
--- a/java/org/apache/coyote/AbstractProtocol.java
+++ b/java/org/apache/coyote/AbstractProtocol.java
@@ -428,6 +428,11 @@ public abstract class AbstractProtocol<S> implements ProtocolHandler,
     protected abstract Processor createProcessor();
 
 
+    protected abstract Processor createUpgradeProcessor(
+            SocketWrapperBase<?> socket, ByteBuffer leftoverInput,
+            UpgradeToken upgradeToken) throws IOException;
+
+
     // ----------------------------------------------------- JMX related methods
 
     protected String domain;
@@ -756,7 +761,7 @@ public abstract class AbstractProtocol<S> implements ProtocolHandler,
                         // Release the Http11 processor to be re-used
                         release(wrapper, processor, false);
                         // Create the upgrade processor
-                        processor = createUpgradeProcessor(
+                        processor = getProtocol().createUpgradeProcessor(
                                 wrapper, leftoverInput, upgradeToken);
                         // Mark the connection as upgraded
                         wrapper.setUpgraded(true);
@@ -933,11 +938,6 @@ public abstract class AbstractProtocol<S> implements ProtocolHandler,
         }
 
 
-        protected abstract Processor createUpgradeProcessor(
-                SocketWrapperBase<?> socket, ByteBuffer leftoverInput,
-                UpgradeToken upgradeToken) throws IOException;
-
-
         protected void register(Processor processor) {
             if (getProtocol().getDomain() != null) {
                 synchronized (this) {

==================================================
AbstractHttp11Protocol.java
index 689dff4555..55a4ba2860 100644
--- a/java/org/apache/coyote/ajp/AbstractAjpProtocol.java
+++ b/java/org/apache/coyote/ajp/AbstractAjpProtocol.java
@@ -169,6 +169,14 @@ public abstract class AbstractAjpProtocol<S> extends AbstractProtocol<S> {
     }
 
 
+    @Override
+    protected Processor createUpgradeProcessor(SocketWrapperBase<?> socket,
+            ByteBuffer leftoverInput, UpgradeToken upgradeToken) {
+        // TODO should fail - throw IOE
+        return null;
+    }
+
+
     protected static class AjpConnectionHandler<S>
             extends AbstractConnectionHandler<S,AjpProcessor> {
 
@@ -182,13 +190,5 @@ public abstract class AbstractAjpProtocol<S> extends AbstractProtocol<S> {
         protected AbstractAjpProtocol<S> getProtocol() {
             return proto;
         }
-
-
-        @Override
-        protected AjpProcessor createUpgradeProcessor(SocketWrapperBase<?> socket,
-                ByteBuffer leftoverInput, UpgradeToken upgradeToken) {
-            // TODO should fail - throw IOE
-            return null;
-        }
     }
 }

==================================================
