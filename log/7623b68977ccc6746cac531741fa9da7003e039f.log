7623b68977ccc6746cac531741fa9da7003e039f
==================================================
Javadoc fixes for InputBuffer
==================================================
Mark Thomas
==================================================
Thu Apr 9 12:54:41 2015 +0000
==================================================
InputBuffer.java
Javadoc fixes for InputBuffer

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1672325 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AjpProcessor.java
index 5ec4bf75cd..4f8eb99cea 100644
--- a/java/org/apache/coyote/InputBuffer.java
+++ b/java/org/apache/coyote/InputBuffer.java
@@ -27,11 +27,17 @@ import org.apache.tomcat.util.buf.ByteChunk;
 public interface InputBuffer {
 
     /**
-     * Read from the input
-     * Return from the input stream.
-        IMPORTANT: the current model assumes that the protocol will 'own' the
-        buffer and return a pointer to it in ByteChunk ( i.e. the param will
-        have chunk.getBytes()==null before call, and the result after the call ).
-    */
+     * Read from the input stream into the given buffer.
+     * IMPORTANT: the current model assumes that the protocol will 'own' the
+     * buffer and return a pointer to it in ByteChunk (i.e. the param will
+     * have chunk.getBytes()==null before call, and the result after the call).
+     *
+     * @param chunk The buffer to read data into.
+     *
+     * @return The number of bytes that have been added to the buffer or -1 for
+     *         end of stream
+     *
+     * @throws IOException If an I/O error occurs reading from the input stream
+     */
     public int doRead(ByteChunk chunk) throws IOException;
 }

==================================================
Http11InputBuffer.java
index 465d09c7b4..e8661aeaa1 100644
--- a/java/org/apache/coyote/ajp/AjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpProcessor.java
@@ -1584,9 +1584,6 @@ public class AjpProcessor extends AbstractProcessor {
      */
     protected class SocketInputBuffer implements InputBuffer {
 
-        /**
-         * Read bytes into the specified chunk.
-         */
         @Override
         public int doRead(ByteChunk chunk) throws IOException {
 

==================================================
InputFilter.java
index 9e4cd6e8c4..77f67a01c1 100644
--- a/java/org/apache/coyote/http11/Http11InputBuffer.java
+++ b/java/org/apache/coyote/http11/Http11InputBuffer.java
@@ -292,9 +292,6 @@ public class Http11InputBuffer implements InputBuffer {
 
     // ---------------------------------------------------- InputBuffer Methods
 
-    /**
-     * Read some bytes.
-     */
     @Override
     public int doRead(ByteChunk chunk) throws IOException {
 
@@ -1046,9 +1043,6 @@ public class Http11InputBuffer implements InputBuffer {
      */
     private class SocketInputBuffer implements InputBuffer {
 
-        /**
-         * Read bytes into the specified chunk.
-         */
         @Override
         public int doRead(ByteChunk chunk) throws IOException {
 

==================================================
ChunkedInputFilter.java
index e5b5067bb6..80add8c7ac 100644
--- a/java/org/apache/coyote/http11/InputFilter.java
+++ b/java/org/apache/coyote/http11/InputFilter.java
@@ -30,16 +30,6 @@ import org.apache.tomcat.util.buf.ByteChunk;
  */
 public interface InputFilter extends InputBuffer {
 
-
-    /**
-     * Read bytes.
-     *
-     * @return Number of bytes read.
-     */
-    @Override
-    public int doRead(ByteChunk chunk) throws IOException;
-
-
     /**
      * Some filters need additional parameters from the request. All the
      * necessary reading can occur in that method, as this method is called

==================================================
IdentityInputFilter.java
index 6f50a61b7b..c52c6dc266 100644
--- a/java/org/apache/coyote/http11/filters/ChunkedInputFilter.java
+++ b/java/org/apache/coyote/http11/filters/ChunkedInputFilter.java
@@ -164,15 +164,6 @@ public class ChunkedInputFilter implements InputFilter {
 
     // ---------------------------------------------------- InputBuffer Methods
 
-    /**
-     * Read bytes.
-     *
-     * @return If the filter does request length control, this value is
-     * significant; it should be the number of bytes consumed from the buffer,
-     * up until the end of the current request body, or the buffer length,
-     * whichever is greater. If the filter does not do request body length
-     * control, the returned value should be -1.
-     */
     @Override
     public int doRead(ByteChunk chunk) throws IOException {
         if (endChunk) {

==================================================
SavedRequestInputFilter.java
index 9bdb98a270..6cb5d05587 100644
--- a/java/org/apache/coyote/http11/filters/IdentityInputFilter.java
+++ b/java/org/apache/coyote/http11/filters/IdentityInputFilter.java
@@ -90,15 +90,6 @@ public class IdentityInputFilter implements InputFilter {
 
     // ---------------------------------------------------- InputBuffer Methods
 
-    /**
-     * Read bytes.
-     *
-     * @return If the filter does request length control, this value is
-     * significant; it should be the number of bytes consumed from the buffer,
-     * up until the end of the current request body, or the buffer length,
-     * whichever is greater. If the filter does not do request body length
-     * control, the returned value should be -1.
-     */
     @Override
     public int doRead(ByteChunk chunk) throws IOException {
 

==================================================
VoidInputFilter.java
index 6f7cc65429..4dd59ee6d3 100644
--- a/java/org/apache/coyote/http11/filters/SavedRequestInputFilter.java
+++ b/java/org/apache/coyote/http11/filters/SavedRequestInputFilter.java
@@ -43,9 +43,6 @@ public class SavedRequestInputFilter implements InputFilter {
         this.input = input;
     }
 
-    /**
-     * Read bytes.
-     */
     @Override
     public int doRead(ByteChunk chunk) throws IOException {
         if(input.getOffset()>= input.getEnd())

==================================================
