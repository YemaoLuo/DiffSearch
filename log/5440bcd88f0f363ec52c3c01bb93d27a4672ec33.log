5440bcd88f0f363ec52c3c01bb93d27a4672ec33
==================================================
Refactoring
==================================================
Mark Thomas
==================================================
Mon Jan 11 15:40:04 2016 +0000
==================================================
AbstractJsseEndpoint.java
Refactoring
- Add a base class for SSLUtil. Not used much at the moment but I have plans...
- Only need to pass SSLHostCondigCertificate when creating SSLUtil since it has a reference to the SSLHostConfig already

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1724066 13f79535-47bb-0310-9956-ffa450edef68



==================================================
SSLHostConfigCertificate.java
index 3646bcfd9b..8d35c629d4 100644
--- a/java/org/apache/tomcat/util/net/AbstractJsseEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AbstractJsseEndpoint.java
@@ -78,7 +78,7 @@ public abstract class AbstractJsseEndpoint<S> extends AbstractEndpoint<S> {
 
             for (SSLHostConfig sslHostConfig : sslHostConfigs.values()) {
                 for (SSLHostConfigCertificate certificate : sslHostConfig.getCertificates(true)) {
-                    SSLUtil sslUtil = sslImplementation.getSSLUtil(sslHostConfig, certificate);
+                    SSLUtil sslUtil = sslImplementation.getSSLUtil(certificate);
 
                     SSLContext sslContext = sslUtil.createSSLContext(negotiableProtocols);
                     sslContext.init(sslUtil.getKeyManagers(), sslUtil.getTrustManagers(), null);

==================================================
SSLImplementation.java
index 8bda74abfa..9cba47792b 100644
--- a/java/org/apache/tomcat/util/net/SSLHostConfigCertificate.java
+++ b/java/org/apache/tomcat/util/net/SSLHostConfigCertificate.java
@@ -78,6 +78,11 @@ public class SSLHostConfigCertificate {
 
     // Common
 
+    public SSLHostConfig getSSLHostConfig() {
+        return sslHostConfig;
+    }
+
+
     public Type getType() {
         return type;
     }

==================================================
SSLUtilBase.java
index 75b4709fac..76972246fd 100644
--- a/java/org/apache/tomcat/util/net/SSLImplementation.java
+++ b/java/org/apache/tomcat/util/net/SSLImplementation.java
@@ -66,6 +66,5 @@ public abstract class SSLImplementation {
 
     public abstract SSLSupport getSSLSupport(SSLSession session);
 
-    public abstract SSLUtil getSSLUtil(SSLHostConfig sslHostConfig,
-            SSLHostConfigCertificate certificate);
+    public abstract SSLUtil getSSLUtil(SSLHostConfigCertificate certificate);
 }

==================================================
JSSEImplementation.java
new file mode 100644
index 0000000000..11ab156b34
--- /dev/null
+++ b/java/org/apache/tomcat/util/net/SSLUtilBase.java
@@ -0,0 +1,30 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one or more
+ *  contributor license agreements.  See the NOTICE file distributed with
+ *  this work for additional information regarding copyright ownership.
+ *  The ASF licenses this file to You under the Apache License, Version 2.0
+ *  (the "License"); you may not use this file except in compliance with
+ *  the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing, software
+ *  distributed under the License is distributed on an "AS IS" BASIS,
+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *  See the License for the specific language governing permissions and
+ *  limitations under the License.
+ */
+package org.apache.tomcat.util.net;
+
+/**
+ * Common base class for {@link SSLUtil} implementations.
+ */
+public abstract class SSLUtilBase implements SSLUtil {
+
+    protected final SSLHostConfigCertificate certificate;
+
+
+    protected SSLUtilBase(SSLHostConfigCertificate certificate) {
+        this.certificate = certificate;
+    }
+}

==================================================
JSSEUtil.java
index 241b1fd45d..a2833d3c2d 100644
--- a/java/org/apache/tomcat/util/net/jsse/JSSEImplementation.java
+++ b/java/org/apache/tomcat/util/net/jsse/JSSEImplementation.java
@@ -18,7 +18,6 @@ package org.apache.tomcat.util.net.jsse;
 
 import javax.net.ssl.SSLSession;
 
-import org.apache.tomcat.util.net.SSLHostConfig;
 import org.apache.tomcat.util.net.SSLHostConfigCertificate;
 import org.apache.tomcat.util.net.SSLImplementation;
 import org.apache.tomcat.util.net.SSLSupport;
@@ -46,7 +45,7 @@ public class JSSEImplementation extends SSLImplementation {
     }
 
     @Override
-    public SSLUtil getSSLUtil(SSLHostConfig sslHostConfig, SSLHostConfigCertificate certificate) {
-        return new JSSEUtil(sslHostConfig, certificate);
+    public SSLUtil getSSLUtil(SSLHostConfigCertificate certificate) {
+        return new JSSEUtil(certificate);
     }
 }

==================================================
OpenSSLContext.java
index c52fb54cc3..e7face4546 100644
--- a/java/org/apache/tomcat/util/net/jsse/JSSEUtil.java
+++ b/java/org/apache/tomcat/util/net/jsse/JSSEUtil.java
@@ -57,7 +57,7 @@ import org.apache.tomcat.util.file.ConfigFileLoader;
 import org.apache.tomcat.util.net.SSLContext;
 import org.apache.tomcat.util.net.SSLHostConfig;
 import org.apache.tomcat.util.net.SSLHostConfigCertificate;
-import org.apache.tomcat.util.net.SSLUtil;
+import org.apache.tomcat.util.net.SSLUtilBase;
 import org.apache.tomcat.util.res.StringManager;
 
 /**
@@ -69,20 +69,19 @@ import org.apache.tomcat.util.res.StringManager;
  * @author EKR
  * @author Jan Luehe
  */
-public class JSSEUtil implements SSLUtil {
+public class JSSEUtil extends SSLUtilBase {
 
     private static final Log log = LogFactory.getLog(JSSEUtil.class);
     private static final StringManager sm = StringManager.getManager(JSSEUtil.class);
 
     private final SSLHostConfig sslHostConfig;
-    private final SSLHostConfigCertificate certificate;
 
     private final String[] defaultServerProtocols;
 
 
-    public JSSEUtil (SSLHostConfig sslHostConfig, SSLHostConfigCertificate certificate) {
-        this.sslHostConfig = sslHostConfig;
-        this.certificate = certificate;
+    public JSSEUtil (SSLHostConfigCertificate certificate) {
+        super(certificate);
+        this.sslHostConfig = certificate.getSSLHostConfig();
 
         SSLContext context;
         try {

==================================================
OpenSSLImplementation.java
index a51464b455..00c7884634 100644
--- a/java/org/apache/tomcat/util/net/openssl/OpenSSLContext.java
+++ b/java/org/apache/tomcat/util/net/openssl/OpenSSLContext.java
@@ -103,9 +103,9 @@ public class OpenSSLContext implements org.apache.tomcat.util.net.SSLContext {
         }
     }
 
-    public OpenSSLContext(SSLHostConfig sslHostConfig, SSLHostConfigCertificate certificate, List<String> negotiableProtocols)
+    public OpenSSLContext(SSLHostConfigCertificate certificate, List<String> negotiableProtocols)
             throws SSLException {
-        this.sslHostConfig = sslHostConfig;
+        this.sslHostConfig = certificate.getSSLHostConfig();
         this.certificate = certificate;
         aprPool = Pool.create(0);
         boolean success = false;

==================================================
OpenSSLUtil.java
index 105da218c7..6f2c3bfc14 100644
--- a/java/org/apache/tomcat/util/net/openssl/OpenSSLImplementation.java
+++ b/java/org/apache/tomcat/util/net/openssl/OpenSSLImplementation.java
@@ -18,7 +18,6 @@ package org.apache.tomcat.util.net.openssl;
 
 import javax.net.ssl.SSLSession;
 
-import org.apache.tomcat.util.net.SSLHostConfig;
 import org.apache.tomcat.util.net.SSLHostConfigCertificate;
 import org.apache.tomcat.util.net.SSLImplementation;
 import org.apache.tomcat.util.net.SSLSupport;
@@ -33,8 +32,8 @@ public class OpenSSLImplementation extends SSLImplementation {
     }
 
     @Override
-    public SSLUtil getSSLUtil(SSLHostConfig sslHostConfig, SSLHostConfigCertificate certificate) {
-        return new OpenSSLUtil(sslHostConfig, certificate);
+    public SSLUtil getSSLUtil(SSLHostConfigCertificate certificate) {
+        return new OpenSSLUtil(certificate);
     }
 
 }

==================================================
TesterBug50640SslImpl.java
index c242d57d4d..b7960a067e 100644
--- a/java/org/apache/tomcat/util/net/openssl/OpenSSLUtil.java
+++ b/java/org/apache/tomcat/util/net/openssl/OpenSSLUtil.java
@@ -25,24 +25,22 @@ import javax.net.ssl.TrustManager;
 import org.apache.tomcat.util.net.SSLContext;
 import org.apache.tomcat.util.net.SSLHostConfig;
 import org.apache.tomcat.util.net.SSLHostConfigCertificate;
-import org.apache.tomcat.util.net.SSLUtil;
+import org.apache.tomcat.util.net.SSLUtilBase;
 import org.apache.tomcat.util.net.jsse.JSSEUtil;
 
-public class OpenSSLUtil implements SSLUtil {
+public class OpenSSLUtil extends SSLUtilBase {
 
-    private final SSLHostConfig sslHostConfig;
-    private final SSLHostConfigCertificate certificate;
     private final JSSEUtil jsseUtil;
 
     private String[] enabledProtocols = null;
     private String[] enabledCiphers = null;
 
-    public OpenSSLUtil(SSLHostConfig sslHostConfig, SSLHostConfigCertificate certificate) {
-        this.sslHostConfig = sslHostConfig;
-        this.certificate = certificate;
+    public OpenSSLUtil(SSLHostConfigCertificate certificate) {
+        super(certificate);
+
         if (certificate.getCertificateFile() == null) {
             // Using JSSE configuration for keystore and truststore
-            jsseUtil = new JSSEUtil(sslHostConfig, certificate);
+            jsseUtil = new JSSEUtil(certificate);
         } else {
             // Use OpenSSL configuration for certificates
             jsseUtil = null;
@@ -51,7 +49,7 @@ public class OpenSSLUtil implements SSLUtil {
 
     @Override
     public SSLContext createSSLContext(List<String> negotiableProtocols) throws Exception {
-        return new OpenSSLContext(sslHostConfig, certificate, negotiableProtocols);
+        return new OpenSSLContext(certificate, negotiableProtocols);
     }
 
     @Override

==================================================
