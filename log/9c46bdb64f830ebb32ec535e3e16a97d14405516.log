9c46bdb64f830ebb32ec535e3e16a97d14405516
==================================================
Pass the SNI host name to the SSLEngine creation since the engine
==================================================
Mark Thomas
==================================================
Mon Apr 13 13:53:56 2015 +0000
==================================================
AbstractJsseEndpoint.java
Pass the SNI host name to the SSLEngine creation since the engine
created is going to have to depend on the SNI host name.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1673193 13f79535-47bb-0310-9956-ffa450edef68



==================================================
SecureNio2Channel.java
index f5a84072e5..98d97c9fc5 100644
--- a/java/org/apache/tomcat/util/net/LocalStrings.properties
+++ b/java/org/apache/tomcat/util/net/LocalStrings.properties
@@ -96,6 +96,7 @@ channel.nio.ssl.closing=Channel is in closing state.
 channel.nio.ssl.invalidBuffer=You can only read using the application read buffer provided by the handler.
 channel.nio.ssl.expandNetInBuffer=Expanding network input buffer to [{0}] bytes
 channel.nio.ssl.expandNetOutBuffer=Expanding network output buffer to [{0}] bytes
+channel.nio.ssl.sniHostName=The SNI host name extracted for this connection was [{0}]
 
 sniExtractor.clientHelloTooBig=The ClientHello was not presented in a single TLS record so no SNI information could be extracted
 

==================================================
SecureNioChannel.java
index 183bea9e7e..c0557b5b85 100644
--- a/java/org/apache/tomcat/util/net/SecureNio2Channel.java
+++ b/java/org/apache/tomcat/util/net/SecureNio2Channel.java
@@ -346,12 +346,11 @@ public class SecureNio2Channel extends Nio2Channel  {
             break;
         }
 
-        // TODO: Extract the correct configuration for the requested host name
-        //       and set up the SSLEngine accordingly. At that point this can
-        //       become a debug level message.
-        log.info("SNI hostname was [" + hostName + "]");
+        if (log.isDebugEnabled()) {
+            log.debug(sm.getString("channel.nio.ssl.sniHostName", hostName));
+        }
 
-        sslEngine = endpoint.createSSLEngine();
+        sslEngine = endpoint.createSSLEngine(hostName);
 
         // Ensure the application buffers (which have to be created earlier) are
         // big enough.

==================================================
