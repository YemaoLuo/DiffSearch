e7cec4da9fe287c92cdad1fad5428f36dbb358df
==================================================
Move the event notification ThreadPoolExecutor to MembershipProviderBase.
==================================================
Keiichi Fujino
==================================================
Mon Oct 15 07:21:26 2018 +0000
==================================================
McastServiceImpl.java
Move the event notification ThreadPoolExecutor to MembershipProviderBase.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1843879 13f79535-47bb-0310-9956-ffa450edef68



==================================================
MembershipProviderBase.java
index bfbedb6564..5f6412803e 100644
--- a/java/org/apache/catalina/tribes/membership/McastServiceImpl.java
+++ b/java/org/apache/catalina/tribes/membership/McastServiceImpl.java
@@ -26,8 +26,6 @@ import java.net.InetSocketAddress;
 import java.net.MulticastSocket;
 import java.net.SocketTimeoutException;
 import java.util.Arrays;
-import java.util.concurrent.ExecutorService;
-import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicBoolean;
 
 import org.apache.catalina.tribes.Channel;
@@ -36,7 +34,6 @@ import org.apache.catalina.tribes.MembershipListener;
 import org.apache.catalina.tribes.MessageListener;
 import org.apache.catalina.tribes.io.ChannelData;
 import org.apache.catalina.tribes.io.XByteBuffer;
-import org.apache.catalina.tribes.util.ExecutorFactory;
 import org.apache.catalina.tribes.util.StringManager;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
@@ -141,12 +138,6 @@ public class McastServiceImpl extends MembershipProviderBase {
      */
     protected boolean recoveryEnabled = true;
 
-    /**
-     * Dont interrupt the sender/receiver thread, but pass off to an executor
-     */
-    protected final ExecutorService executor =
-            ExecutorFactory.newThreadPool(0, 2, 2, TimeUnit.SECONDS);
-
     /**
      * disable/enable local loopback message
      */
@@ -329,6 +320,7 @@ public class McastServiceImpl extends MembershipProviderBase {
         startLevel = (startLevel & (~level));
         //we're shutting down, send a shutdown message and close the socket
         if ( startLevel == 0 ) {
+            executor.shutdownNow();
             //send a stop message
             member.setCommand(Member.SHUTDOWN_PAYLOAD);
             send(false);

==================================================
StaticMembershipProvider.java
index f6b269857e..0d45b18276 100644
--- a/java/org/apache/catalina/tribes/membership/MembershipProviderBase.java
+++ b/java/org/apache/catalina/tribes/membership/MembershipProviderBase.java
@@ -18,17 +18,22 @@
 package org.apache.catalina.tribes.membership;
 
 import java.util.Properties;
+import java.util.concurrent.ExecutorService;
+import java.util.concurrent.TimeUnit;
 
 import org.apache.catalina.tribes.Member;
 import org.apache.catalina.tribes.MembershipListener;
 import org.apache.catalina.tribes.MembershipProvider;
 import org.apache.catalina.tribes.MembershipService;
+import org.apache.catalina.tribes.util.ExecutorFactory;
 
 public abstract class MembershipProviderBase implements MembershipProvider {
 
     protected Membership membership;
     protected MembershipListener membershipListener;
     protected MembershipService service;
+    // The event notification executor
+    protected final ExecutorService executor = ExecutorFactory.newThreadPool(0, 10, 10, TimeUnit.SECONDS);
 
     @Override
     public void init(Properties properties) throws Exception {

==================================================
