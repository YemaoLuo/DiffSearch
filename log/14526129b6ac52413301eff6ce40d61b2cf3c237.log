14526129b6ac52413301eff6ce40d61b2cf3c237
==================================================
Fix a handful of Eclipse warnings
==================================================
Mark Emlyn
==================================================
Thu Mar 29 20:31:19 2012 +0000
==================================================
PoolExhaustedException.java
Fix a handful of Eclipse warnings

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1307096 13f79535-47bb-0310-9956-ffa450edef68



==================================================
PoolProperties.java
index d4872f0025..15f36abcfe 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/PoolExhaustedException.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/PoolExhaustedException.java
@@ -20,6 +20,8 @@ import java.sql.SQLException;
 
 public class PoolExhaustedException extends SQLException {
 
+    private static final long serialVersionUID = 3501536931777262475L;
+
     public PoolExhaustedException() {
     }
 

==================================================
ConnectionState.java
index 2356fb2131..68b11919e1 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/PoolProperties.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/PoolProperties.java
@@ -35,6 +35,8 @@ import org.apache.juli.logging.LogFactory;
  *
  */
 public class PoolProperties implements PoolConfiguration, Cloneable, Serializable {
+
+    private static final long serialVersionUID = -8519283440854213745L;
     private static final Log log = LogFactory.getLog(PoolProperties.class);
 
     public static final int DEFAULT_MAX_ACTIVE = 100;

==================================================
StatementDecoratorInterceptor.java
index decb0edfbe..5843687dd5 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/interceptor/ConnectionState.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/interceptor/ConnectionState.java
@@ -131,7 +131,7 @@ public class ConnectionState extends JdbcInterceptor  {
                 case 1:{result = transactionIsolation; break;}
                 case 2:{result = readOnly; break;}
                 case 3:{result = catalog; break;}
-                default: result = null;
+                default: // NOOP
             }
             //return cached result, if we have it
             if (result!=null) return result;

==================================================
