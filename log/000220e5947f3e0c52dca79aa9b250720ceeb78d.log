000220e5947f3e0c52dca79aa9b250720ceeb78d
==================================================
Refactor to more closely align AsyncTimeout implementations
==================================================
Mark Emlyn
==================================================
Mon Jun 9 17:11:36 2014 +0000
==================================================
AprEndpoint.java
Refactor to more closely align AsyncTimeout implementations

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1601443 13f79535-47bb-0310-9956-ffa450edef68



==================================================
JIoEndpoint.java
index 776c2d102d..6a3030825e 100644
--- a/java/org/apache/tomcat/util/net/AprEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AprEndpoint.java
@@ -1082,7 +1082,7 @@ public class AprEndpoint extends AbstractEndpoint<Long> {
                     if (socket.isAsync()) {
                         long access = socket.getLastAccess();
                         if (socket.getTimeout() > 0 &&
-                                (now-access)>socket.getTimeout()) {
+                                (now-access) > socket.getTimeout()) {
                             processSocket(socket, SocketStatus.TIMEOUT, true);
                         }
                     }

==================================================
Nio2Endpoint.java
index 93d8e0395f..6adafcab51 100644
--- a/java/org/apache/tomcat/util/net/JIoEndpoint.java
+++ b/java/org/apache/tomcat/util/net/JIoEndpoint.java
@@ -168,10 +168,12 @@ public class JIoEndpoint extends AbstractEndpoint<Socket> {
                     waitingRequests.iterator();
                 while (sockets.hasNext()) {
                     SocketWrapper<Socket> socket = sockets.next();
-                    long access = socket.getLastAccess();
-                    if (socket.getTimeout() > 0 &&
-                            (now-access)>socket.getTimeout()) {
-                        processSocket(socket, SocketStatus.TIMEOUT, true);
+                    if (socket.isAsync()) {
+                        long access = socket.getLastAccess();
+                        if (socket.getTimeout() > 0 &&
+                                (now-access) > socket.getTimeout()) {
+                            processSocket(socket, SocketStatus.TIMEOUT, true);
+                        }
                     }
                 }
 

==================================================
