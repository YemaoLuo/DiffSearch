84ae12a3bac4ae620abe968a6220402f0229457e
==================================================
Allow RemoteAddreValve and RemoteHostValve to
==================================================
Rainer Jung
==================================================
Sun Nov 30 18:30:47 2014 +0000
==================================================
RequestFilterValve.java
Allow RemoteAddreValve and RemoteHostValve to
trigger authentication instead of denying a
request with a status code.

This only works in combination with preemptiveAuthentication
on the application context.

It can be used to add an additional authentication
without touching the application war.

Example:

<Context preemptiveAuthentication="true">
  <Valve className="org.apache.catalina.valves.RequestFilterValve"
         allow=".*,8009"
         addLocalPort="true"
         invalidAuthenticationWhenDeny="true"/>
  <Valve className="org.apache.catalina.authenticator.BasicAuthenticator" />
</Context>

This will allow normal access via the port 8009 connector (AJP)
but will trigger basic auth when accessed via any other connector.
An administrator can use an http port to check whether the app
works but public access will still be restricted to the AJP port.


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1642595 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestRequestFilterValve.java
index 9f74d34b75..e9d6bec7b5 100644
--- a/java/org/apache/catalina/valves/RequestFilterValve.java
+++ b/java/org/apache/catalina/valves/RequestFilterValve.java
@@ -23,6 +23,7 @@ import java.util.regex.Pattern;
 import javax.servlet.ServletException;
 import javax.servlet.http.HttpServletResponse;
 
+import org.apache.catalina.Context;
 import org.apache.catalina.LifecycleException;
 import org.apache.catalina.connector.Request;
 import org.apache.catalina.connector.Response;
@@ -52,6 +53,11 @@ import org.apache.catalina.connector.Response;
  * <li>The request will be rejected with a "Forbidden" HTTP response.</li>
  * </ul>
  * <p>
+ * As an option the valve can generate an invalid <code>authenticate</code>
+ * header instead of denying the request. This can be combined with the
+ * context attribute <code>preemptiveAuthentication="true"</code> and an
+ * authenticator to force authentication instead of denial.
+ * <p>
  * This Valve may be attached to any Container, depending on the granularity
  * of the filtering you wish to perform.
  *
@@ -117,6 +123,14 @@ public abstract class RequestFilterValve extends ValveBase {
      */
     protected int denyStatus = HttpServletResponse.SC_FORBIDDEN;
 
+    /**
+     * <p>If <code>invalidAuthenticationWhenDeny</code> is true
+     * and the context has <code>preemptiveAuthentication</code>
+     * set, set an invalid authorization header to trigger basic auth
+     * instead of denying the request..
+     */
+    private boolean invalidAuthenticationWhenDeny = false;
+
     // ------------------------------------------------------------- Properties
 
 
@@ -221,6 +235,23 @@ public abstract class RequestFilterValve extends ValveBase {
         this.denyStatus = denyStatus;
     }
 
+
+    /**
+     * Return true if a deny is handled by setting an invalid auth header.
+     */
+    public boolean getInvalidAuthenticationWhenDeny() {
+        return invalidAuthenticationWhenDeny;
+    }
+
+
+    /**
+     * Set invalidAuthenticationWhenDeny property.
+     */
+    public void setInvalidAuthenticationWhenDeny(boolean value) {
+        invalidAuthenticationWhenDeny = value;
+    }
+
+
     // --------------------------------------------------------- Public Methods
 
     /**
@@ -290,6 +321,9 @@ public abstract class RequestFilterValve extends ValveBase {
 
     /**
      * Reject the request that was denied by this valve.
+     * <p>If <code>invalidAuthenticationWhenDeny</code> is true
+     * and the context has <code>preemptiveAuthentication</code>
+     * set, set an invalid authorization header to trigger basic auth.
      *
      * @param request The servlet request to be processed
      * @param response The servlet response to be processed
@@ -298,6 +332,16 @@ public abstract class RequestFilterValve extends ValveBase {
      */
     protected void denyRequest(Request request, Response response)
             throws IOException, ServletException {
+        if (invalidAuthenticationWhenDeny) {
+            Context context = request.getContext();
+            if (context != null && context.getPreemptiveAuthentication()) {
+                if (request.getCoyoteRequest().getMimeHeaders().getValue("authorization") == null) {
+                    request.getCoyoteRequest().getMimeHeaders().addValue("authorization").setString("invalid");
+                }
+                getNext().invoke(request, response);
+                return;
+            }
+        }
         response.sendError(denyStatus);
     }
 

==================================================
