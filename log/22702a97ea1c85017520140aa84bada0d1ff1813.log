22702a97ea1c85017520140aa84bada0d1ff1813
==================================================
Two fixes,
==================================================
Filip Hanik
==================================================
Thu Jun 22 20:28:27 2006 +0000
==================================================
InternalNioInputBuffer.java
Two fixes,
process timeouts last, no need to check a timeout on a valid read. hence we do it after we process the actual operations
Throw an IO exception if we reach end of stream so that the sockets can get properly closed down
Speed is the same for nio and io right now, nio seems just a tad faster without keep alives


git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk@416461 13f79535-47bb-0310-9956-ffa450edef68



==================================================
NioEndpoint.java
index 3959f1ab65..2a95757640 100644
--- a/java/org/apache/coyote/http11/InternalNioInputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalNioInputBuffer.java
@@ -559,7 +559,8 @@ public class InternalNioInputBuffer implements InputBuffer {
                 lastValid = pos + nRead;
                 return true;
             } else if (nRead == -1) {
-                return false;
+                //return false;
+                throw new IOException("end of stream reached.");
             }
             timedOut = (readTimeout != -1) && ((System.currentTimeMillis()-start)>this.readTimeout);
             if ( !timedOut && nRead == 0 ) 

==================================================
