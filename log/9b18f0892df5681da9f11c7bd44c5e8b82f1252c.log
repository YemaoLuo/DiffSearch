9b18f0892df5681da9f11c7bd44c5e8b82f1252c
==================================================
Java 8 Javadoc fixes.
==================================================
Mark Thomas
==================================================
Tue Jan 20 10:37:58 2015 +0000
==================================================
AuthenticatorBase.java
Java 8 Javadoc fixes.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1653219 13f79535-47bb-0310-9956-ffa450edef68



==================================================
FormAuthenticator.java
index a309bf1ace..43cacca651 100644
--- a/java/org/apache/catalina/authenticator/AuthenticatorBase.java
+++ b/java/org/apache/catalina/authenticator/AuthenticatorBase.java
@@ -223,6 +223,9 @@ public abstract class AuthenticatorBase extends ValveBase implements Authenticat
 
     /**
      * Return the cache authenticated Principals flag.
+     *
+     * @return <code>true</code> if authenticated Principals will be cached,
+     *         otherwise <code>false</code>
      */
     public boolean getCache() {
         return this.cache;
@@ -270,6 +273,9 @@ public abstract class AuthenticatorBase extends ValveBase implements Authenticat
     /**
      * Return the flag that states if we add headers to disable caching by
      * proxies.
+     *
+     * @return <code>true</code> if the headers will be added, otherwise
+     *         <code>false</code>
      */
     public boolean getDisableProxyCaching() {
         return disableProxyCaching;
@@ -288,6 +294,9 @@ public abstract class AuthenticatorBase extends ValveBase implements Authenticat
     /**
      * Return the flag that states, if proxy caching is disabled, what headers
      * we add to disable the caching.
+     *
+     * @return <code>true</code> if a Pragma header should be used, otherwise
+     *         <code>false</code>
      */
     public boolean getSecurePagesWithPragma() {
         return securePagesWithPragma;
@@ -296,6 +305,7 @@ public abstract class AuthenticatorBase extends ValveBase implements Authenticat
     /**
      * Set the value of the flag that states what headers we add to disable
      * proxy caching.
+     *
      * @param securePagesWithPragma <code>true</code> if we add headers which
      * are incompatible with downloading office documents in IE under SSL but
      * which fix a caching problem in Mozilla.
@@ -331,11 +341,12 @@ public abstract class AuthenticatorBase extends ValveBase implements Authenticat
 
     /**
      * Return the secure random number generator class name.
+     *
+     * @return The fully qualified name of the SecureRandom implementation to
+     *         use
      */
     public String getSecureRandomClass() {
-
-        return (this.secureRandomClass);
-
+        return this.secureRandomClass;
     }
 
 
@@ -352,6 +363,8 @@ public abstract class AuthenticatorBase extends ValveBase implements Authenticat
 
     /**
      * Return the secure random number generator algorithm name.
+     *
+     * @return The name of the SecureRandom algorithm used
      */
     public String getSecureRandomAlgorithm() {
         return secureRandomAlgorithm;
@@ -371,6 +384,8 @@ public abstract class AuthenticatorBase extends ValveBase implements Authenticat
 
     /**
      * Return the secure random number generator provider name.
+     *
+     * @return The name of the SecureRandom provider
      */
     public String getSecureRandomProvider() {
         return secureRandomProvider;

==================================================
SingleSignOnEntry.java
index 57a3cd7138..29444bde0d 100644
--- a/java/org/apache/catalina/authenticator/FormAuthenticator.java
+++ b/java/org/apache/catalina/authenticator/FormAuthenticator.java
@@ -76,7 +76,9 @@ public class FormAuthenticator
     // ------------------------------------------------------------- Properties
 
     /**
-     * Return the character encoding to use to read the username and password.
+     * Return the character encoding to use to read the user name and password.
+     *
+     * @return The name of the character encoding
      */
     public String getCharacterEncoding() {
         return characterEncoding;
@@ -84,7 +86,9 @@ public class FormAuthenticator
 
 
     /**
-     * Set the character encoding to be used to read the username and password.
+     * Set the character encoding to be used to read the user name and password.
+     *
+     * @param encoding The name of the encoding to use
      */
     public void setCharacterEncoding(String encoding) {
         characterEncoding = encoding;
@@ -93,6 +97,8 @@ public class FormAuthenticator
 
     /**
      * Return the landing page to use when FORM auth is mis-used.
+     *
+     * @return The path to the landing page relative to the web application root
      */
     public String getLandingPage() {
         return landingPage;
@@ -101,6 +107,9 @@ public class FormAuthenticator
 
     /**
      * Set the landing page to use when the FORM auth is mis-used.
+     *
+     * @param landingPage The path to the landing page relative to the web
+     *                    application root
      */
     public void setLandingPage(String landingPage) {
         this.landingPage = landingPage;

==================================================
