1391bda0716a1c2cc44954464bb6b038aeed11e0
==================================================
- Do not use a extra Thread for the room as synchronizing access to the Room's internals should suffice.
==================================================
Konstantin Prei√üer
==================================================
Tue Oct 15 17:06:32 2013 +0000
==================================================
DrawboardEndpoint.java
- Do not use a extra Thread for the room as synchronizing access to the Room's internals should suffice.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1532437 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Room.java
index 69ade98c78..633f39aebf 100644
--- a/webapps/examples/WEB-INF/classes/websocket/drawboard/DrawboardEndpoint.java
+++ b/webapps/examples/WEB-INF/classes/websocket/drawboard/DrawboardEndpoint.java
@@ -72,7 +72,7 @@ public final class DrawboardEndpoint extends Endpoint {
         session.addMessageHandler(stringHandler);
         final Client client = new Client(session);
 
-        room.invoke(new Runnable() {
+        room.invokeAndWait(new Runnable() {
             @Override
             public void run() {
                 try {
@@ -100,7 +100,7 @@ public final class DrawboardEndpoint extends Endpoint {
 
     @Override
     public void onClose(Session session, CloseReason closeReason) {
-        room.invoke(new Runnable() {
+        room.invokeAndWait(new Runnable() {
             @Override
             public void run() {
                 try {
@@ -148,7 +148,7 @@ public final class DrawboardEndpoint extends Endpoint {
         @Override
         public void onMessage(final String message) {
             // Invoke handling of the message in the room.
-            room.invoke(new Runnable() {
+            room.invokeAndWait(new Runnable() {
                 @Override
                 public void run() {
                     try {

==================================================
