cab2a8eaf142e80aee92d287b464bf8540828b1a
==================================================
Post-review from kkolonko: fix typo in constant name, push initialization down into subclass.
==================================================
Christopher Schultz
==================================================
0500
==================================================
Constants.java
Post-review from kkolonko: fix typo in constant name, push initialization down into subclass.



==================================================
CsrfPreventionFilter.java
index 87dd6c4ab3..ab550b1419 100644
--- a/java/org/apache/catalina/filters/Constants.java
+++ b/java/org/apache/catalina/filters/Constants.java
@@ -72,6 +72,6 @@ public final class Constants {
      * The servlet context attribute key under which the
      * CSRF REST header name can be found.
      */
-    public static final String CSRF_REST_NONCE_HEDAER_NAME_KEY =
+    public static final String CSRF_REST_NONCE_HEADER_NAME_KEY =
         "org.apache.catalina.filters.CSRF_REST_NONCE_HEADER_NAME";
 }

==================================================
CsrfPreventionFilterBase.java
index 369745b867..8aace6b100 100644
--- a/java/org/apache/catalina/filters/CsrfPreventionFilter.java
+++ b/java/org/apache/catalina/filters/CsrfPreventionFilter.java
@@ -24,6 +24,7 @@ import java.util.Map;
 import java.util.Set;
 
 import javax.servlet.FilterChain;
+import javax.servlet.FilterConfig;
 import javax.servlet.ServletException;
 import javax.servlet.ServletRequest;
 import javax.servlet.ServletResponse;
@@ -82,6 +83,22 @@ public class CsrfPreventionFilter extends CsrfPreventionFilterBase {
         this.nonceCacheSize = nonceCacheSize;
     }
 
+    @Override
+    public void init(FilterConfig filterConfig) throws ServletException {
+        // Set the parameters
+        super.init(filterConfig);
+
+        // Put the expected request parameter name into the application scope
+        filterConfig.getServletContext().setAttribute(
+                Constants.CSRF_NONCE_REQUEST_PARAM_NAME_KEY,
+                Constants.CSRF_NONCE_REQUEST_PARAM);
+
+        // Put the expected request header name into the application scope
+        filterConfig.getServletContext().setAttribute(
+                Constants.CSRF_REST_NONCE_HEADER_NAME_KEY,
+                Constants.CSRF_REST_NONCE_HEADER_NAME);
+    }
+
     @Override
     public void doFilter(ServletRequest request, ServletResponse response,
             FilterChain chain) throws IOException, ServletException {

==================================================
