cdbef255c961c5e53e782b2e8d9e14e48207aa94
==================================================
Remove unused code (LocalVariableTypeTable)
==================================================
Mark Emlyn
==================================================
Wed Sep 10 21:03:28 2014 +0000
==================================================
Attribute.java
Remove unused code (LocalVariableTypeTable)

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1624132 13f79535-47bb-0310-9956-ffa450edef68



==================================================
LocalVariableTypeTable.java
index f19253f409..1e8d8e9f26 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Attribute.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Attribute.java
@@ -145,8 +145,8 @@ public abstract class Attribute implements Cloneable, Serializable
             return new AnnotationDefault(name_index, length, file,
                     constant_pool);
         case Constants.ATTR_LOCAL_VARIABLE_TYPE_TABLE:
-            return new LocalVariableTypeTable(name_index, length, file,
-                    constant_pool);
+            Utility.swallowLocalVariableTypeTable(file);
+            return null;
         case Constants.ATTR_ENCLOSING_METHOD:
             return new EnclosingMethod(name_index, length, file, constant_pool);
         case Constants.ATTR_STACK_MAP_TABLE:

==================================================
Utility.java
deleted file mode 100644
index f92ea9b9cc..0000000000
--- a/java/org/apache/tomcat/util/bcel/classfile/LocalVariableTypeTable.java
+++ /dev/null
@@ -1,63 +0,0 @@
-/**
- *  Licensed to the Apache Software Foundation (ASF) under one or more
- *  contributor license agreements.  See the NOTICE file distributed with
- *  this work for additional information regarding copyright ownership.
- *  The ASF licenses this file to You under the Apache License, Version 2.0
- *  (the "License"); you may not use this file except in compliance with
- *  the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.apache.tomcat.util.bcel.classfile;
-
-import java.io.DataInputStream;
-import java.io.IOException;
-
-// The new table is used when generic types are about...
-
-//LocalVariableTable_attribute {
-//       u2 attribute_name_index;
-//       u4 attribute_length;
-//       u2 local_variable_table_length;
-//       {  u2 start_pc;
-//          u2 length;
-//          u2 name_index;
-//          u2 descriptor_index;
-//          u2 index;
-//       } local_variable_table[local_variable_table_length];
-//     }
-
-//LocalVariableTypeTable_attribute {
-//    u2 attribute_name_index;
-//    u4 attribute_length;
-//    u2 local_variable_type_table_length;
-//    {
-//      u2 start_pc;
-//      u2 length;
-//      u2 name_index;
-//      u2 signature_index;
-//      u2 index;
-//    } local_variable_type_table[local_variable_type_table_length];
-//  }
-// J5TODO: Needs some testing !
-public class LocalVariableTypeTable extends Attribute {
-    private static final long serialVersionUID = -5466082154076451597L;
-
-    LocalVariableTypeTable(int name_index, int length,
-            DataInputStream dis, ConstantPool constant_pool)
-                    throws IOException {
-        super(name_index, length, constant_pool);
-
-        int local_variable_type_table_length = (dis.readUnsignedShort());
-
-        for(int i=0; i < local_variable_type_table_length; i++) {
-            Utility.swallowLocalVariable(dis);
-        }
-    }
-}

==================================================
