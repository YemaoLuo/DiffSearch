8c07939fbde3d020fcedb003efeea413525fb0f5
==================================================
Align ActionCode.REQUEST_BODY_FULLY_READ
==================================================
Mark Thomas
==================================================
Fri Aug 12 07:47:05 2016 +0000
==================================================
AjpProcessor.java
Align ActionCode.REQUEST_BODY_FULLY_READ

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1756100 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http11Processor.java
index c2d4074404..1c76e61013 100644
--- a/java/org/apache/coyote/ajp/AjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpProcessor.java
@@ -542,7 +542,7 @@ public class AjpProcessor extends AbstractProcessor {
         // Servlet 3.1 non-blocking I/O
         case REQUEST_BODY_FULLY_READ: {
             AtomicBoolean result = (AtomicBoolean) param;
-            result.set(endOfStream);
+            result.set(isRequestBodyFullyRead());
             break;
         }
         case NB_READ_INTEREST: {
@@ -1507,6 +1507,11 @@ public class AjpProcessor extends AbstractProcessor {
     }
 
     
+    private boolean isRequestBodyFullyRead() {
+        return endOfStream;
+    }
+    
+    
     /**
      * Read at least the specified amount of bytes, and place them
      * in the input buffer. Note that if any data is available to read then this

==================================================
StreamProcessor.java
index 44ca15b292..3d9e9fd6bd 100644
--- a/java/org/apache/coyote/http11/Http11Processor.java
+++ b/java/org/apache/coyote/http11/Http11Processor.java
@@ -835,7 +835,7 @@ public class Http11Processor extends AbstractProcessor {
         // Servlet 3.1 non-blocking I/O
         case REQUEST_BODY_FULLY_READ: {
             AtomicBoolean result = (AtomicBoolean) param;
-            result.set(inputBuffer.isFinished());
+            result.set(isRequestBodyFullyRead());
             break;
         }
         case NB_READ_INTEREST: {
@@ -1830,6 +1830,11 @@ public class Http11Processor extends AbstractProcessor {
     }
     
     
+    private boolean isRequestBodyFullyRead() {
+        return inputBuffer.isFinished();
+    }
+    
+    
     /**
      * Checks to see if the keep-alive loop should be broken, performing any
      * processing (e.g. sendfile handling) that may have an impact on whether

==================================================
