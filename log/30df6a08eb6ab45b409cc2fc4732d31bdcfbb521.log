30df6a08eb6ab45b409cc2fc4732d31bdcfbb521
==================================================
Reduce memory footprint of closed http/2 streams
==================================================
Mark Thomas
==================================================
Thu Sep 24 21:47:09 2020 +0100
==================================================
AbstractNonZeroStream.java
Reduce memory footprint of closed http/2 streams

This refactoring replaces closed streams with a new RecycledStream
object and changes the mechanism used to look up known streams.
Pull up state



==================================================
RecycledStream.java
index 582ab1e6f4..084de33d76 100644
--- a/java/org/apache/coyote/http2/AbstractNonZeroStream.java
+++ b/java/org/apache/coyote/http2/AbstractNonZeroStream.java
@@ -31,17 +31,22 @@ abstract class AbstractNonZeroStream extends AbstractStream {
     private static final Log log = LogFactory.getLog(AbstractNonZeroStream.class);
     private static final StringManager sm = StringManager.getManager(AbstractNonZeroStream.class);
 
+    protected final StreamStateMachine state;
+
     private volatile int weight;
 
 
-    AbstractNonZeroStream(Integer identifier) {
-        this(identifier, Constants.DEFAULT_WEIGHT);
+    AbstractNonZeroStream(String connectionId, Integer identifier) {
+        super(identifier);
+        this.weight = Constants.DEFAULT_WEIGHT;
+        this.state = new StreamStateMachine(connectionId, getIdAsString());
     }
 
 
-    AbstractNonZeroStream(Integer identifier, int weight) {
+    AbstractNonZeroStream(Integer identifier, int weight, StreamStateMachine state) {
         super(identifier);
         this.weight = weight;
+        this.state = state;
     }
 
 
@@ -97,7 +102,13 @@ abstract class AbstractNonZeroStream extends AbstractStream {
         this.weight = weight;
     }
 
-    abstract boolean isClosedFinal();
 
-    abstract void checkState(FrameType frameType) throws Http2Exception;
+    final boolean isClosedFinal() {
+        return state.isClosedFinal();
+    }
+
+
+    final void checkState(FrameType frameType) throws Http2Exception {
+        state.checkFrameType(frameType);
+    }
 }

==================================================
Stream.java
index 1915dff318..9d6177cd1f 100644
--- a/java/org/apache/coyote/http2/RecycledStream.java
+++ b/java/org/apache/coyote/http2/RecycledStream.java
@@ -23,12 +23,10 @@ package org.apache.coyote.http2;
 class RecycledStream extends AbstractNonZeroStream {
 
     private final String connectionId;
-    private final StreamStateMachine state;
 
     RecycledStream(String connectionId, Integer identifier, int weight, StreamStateMachine state) {
-        super(identifier, weight);
+        super(identifier, weight, state);
         this.connectionId = connectionId;
-        this.state = state;
     }
 
 
@@ -38,18 +36,6 @@ class RecycledStream extends AbstractNonZeroStream {
     }
 
 
-    @Override
-    boolean isClosedFinal() {
-        return state.isClosedFinal();
-    }
-
-
-    @Override
-    final void checkState(FrameType frameType) throws Http2Exception {
-        state.checkFrameType(frameType);
-    }
-
-
     @SuppressWarnings("sync-override")
     @Override
     void incrementWindowSize(int increment) throws Http2Exception {

==================================================
