48d0a6f8ee6b9e16f61487d0ab0a82eab650fbcf
==================================================
Restore correct class loader during processing of WebSocket messages post the 8.5.x/9.0.x connector refactoring
==================================================
Mark Thomas
==================================================
Wed Apr 6 16:45:47 2016 +0000
==================================================
WsFrameBase.java
Restore correct class loader during processing of WebSocket messages post the 8.5.x/9.0.x connector refactoring

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1738005 13f79535-47bb-0310-9956-ffa450edef68



==================================================
WsFrameServer.java
index 12b53f51f7..241a7f962d 100644
--- a/java/org/apache/tomcat/websocket/WsFrameBase.java
+++ b/java/org/apache/tomcat/websocket/WsFrameBase.java
@@ -377,7 +377,7 @@ public abstract class WsFrameBase {
 
 
     @SuppressWarnings("unchecked")
-    private void sendMessageText(boolean last) throws WsIOException {
+    protected void sendMessageText(boolean last) throws WsIOException {
         if (textMsgHandler instanceof WrappedMessageHandler) {
             long maxMessageSize =
                     ((WrappedMessageHandler) textMsgHandler).getMaxMessageSize();
@@ -572,7 +572,7 @@ public abstract class WsFrameBase {
 
 
     @SuppressWarnings("unchecked")
-    private void sendMessageBinary(ByteBuffer msg, boolean last)
+    protected void sendMessageBinary(ByteBuffer msg, boolean last)
             throws WsIOException {
         if (binaryMsgHandler instanceof WrappedMessageHandler) {
             long maxMessageSize =

==================================================
WsHttpUpgradeHandler.java
index 30ec9256ef..4183cbd793 100644
--- a/java/org/apache/tomcat/websocket/server/WsFrameServer.java
+++ b/java/org/apache/tomcat/websocket/server/WsFrameServer.java
@@ -17,6 +17,7 @@
 package org.apache.tomcat.websocket.server;
 
 import java.io.IOException;
+import java.nio.ByteBuffer;
 
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
@@ -24,6 +25,7 @@ import org.apache.tomcat.util.net.SocketWrapperBase;
 import org.apache.tomcat.util.res.StringManager;
 import org.apache.tomcat.websocket.Transformation;
 import org.apache.tomcat.websocket.WsFrameBase;
+import org.apache.tomcat.websocket.WsIOException;
 import org.apache.tomcat.websocket.WsSession;
 
 public class WsFrameServer extends WsFrameBase {
@@ -32,12 +34,14 @@ public class WsFrameServer extends WsFrameBase {
     private static final StringManager sm = StringManager.getManager(WsFrameServer.class);
 
     private final SocketWrapperBase<?> socketWrapper;
+    private final ClassLoader applicationClassLoader;
 
 
     public WsFrameServer(SocketWrapperBase<?> socketWrapper, WsSession wsSession,
-            Transformation transformation) {
+            Transformation transformation, ClassLoader applicationClassLoader) {
         super(wsSession, transformation);
         this.socketWrapper = socketWrapper;
+        this.applicationClassLoader = applicationClassLoader;
     }
 
 
@@ -92,4 +96,28 @@ public class WsFrameServer extends WsFrameBase {
     protected Log getLog() {
         return log;
     }
+
+
+    @Override
+    protected void sendMessageText(boolean last) throws WsIOException {
+        ClassLoader cl = Thread.currentThread().getContextClassLoader();
+        try {
+            Thread.currentThread().setContextClassLoader(applicationClassLoader);
+            super.sendMessageText(last);
+        } finally {
+            Thread.currentThread().setContextClassLoader(cl);
+        }
+    }
+
+
+    @Override
+    protected void sendMessageBinary(ByteBuffer msg, boolean last) throws WsIOException {
+        ClassLoader cl = Thread.currentThread().getContextClassLoader();
+        try {
+            Thread.currentThread().setContextClassLoader(applicationClassLoader);
+            super.sendMessageBinary(msg, last);
+        } finally {
+            Thread.currentThread().setContextClassLoader(cl);
+        }
+    }
 }

==================================================
TestClassLoader.java
index dee9cdbc31..c972d96d89 100644
--- a/java/org/apache/tomcat/websocket/server/WsHttpUpgradeHandler.java
+++ b/java/org/apache/tomcat/websocket/server/WsHttpUpgradeHandler.java
@@ -126,7 +126,8 @@ public class WsHttpUpgradeHandler implements InternalHttpUpgradeHandler {
                     handshakeRequest.getUserPrincipal(), httpSessionId,
                     negotiatedExtensions, subProtocol, pathParameters, secure,
                     endpointConfig);
-            wsFrame = new WsFrameServer(socketWrapper, wsSession, transformation);
+            wsFrame = new WsFrameServer(socketWrapper, wsSession, transformation,
+                    applicationClassLoader);
             // WsFrame adds the necessary final transformations. Copy the
             // completed transformation chain to the remote end point.
             wsRemoteEndpointServer.setTransformation(wsFrame.getTransformation());

==================================================
