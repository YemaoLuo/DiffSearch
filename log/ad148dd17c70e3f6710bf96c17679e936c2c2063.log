ad148dd17c70e3f6710bf96c17679e936c2c2063
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=54709
==================================================
Mark Emlyn
==================================================
Sun Mar 17 18:49:45 2013 +0000
==================================================
WsWebSocketContainer.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=54709
http  -> ws
https -> wss

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1457513 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestWsRemoteEndpoint.java
index a626b162f0..f265488520 100644
--- a/java/org/apache/tomcat/websocket/WsWebSocketContainer.java
+++ b/java/org/apache/tomcat/websocket/WsWebSocketContainer.java
@@ -156,8 +156,8 @@ public class WsWebSocketContainer
             throws DeploymentException {
 
         String scheme = path.getScheme();
-        if (!("http".equalsIgnoreCase(scheme) ||
-                "https".equalsIgnoreCase(scheme))) {
+        if (!("ws".equalsIgnoreCase(scheme) ||
+                "wss".equalsIgnoreCase(scheme))) {
             throw new DeploymentException(sm.getString(
                     "wsWebSocketContainer.pathWrongScheme", scheme));
         }
@@ -175,7 +175,7 @@ public class WsWebSocketContainer
 
         SocketAddress sa;
         if (port == -1) {
-            if ("http".equalsIgnoreCase(scheme)) {
+            if ("ws".equalsIgnoreCase(scheme)) {
                 sa = new InetSocketAddress(host, 80);
             } else {
                 // TODO HTTPS support

==================================================
TestWsWebSocketContainer.java
index 1eec424a55..80d68e3693 100644
--- a/test/org/apache/tomcat/websocket/TestWsRemoteEndpoint.java
+++ b/test/org/apache/tomcat/websocket/TestWsRemoteEndpoint.java
@@ -76,7 +76,7 @@ public class TestWsRemoteEndpoint extends TomcatBaseTest {
         tomcat.start();
 
         Session wsSession;
-        URI uri = new URI("http://localhost:" + getPort() +
+        URI uri = new URI("ws://localhost:" + getPort() +
                 TesterEchoServer.Config.PATH_ASYNC);
         if (Endpoint.class.isAssignableFrom(clazz)) {
             @SuppressWarnings("unchecked")

==================================================
TestEncodingDecoding.java
index 077d424ec6..4915a1c156 100644
--- a/test/org/apache/tomcat/websocket/TestWsWebSocketContainer.java
+++ b/test/org/apache/tomcat/websocket/TestWsWebSocketContainer.java
@@ -85,7 +85,7 @@ public class TestWsWebSocketContainer extends TomcatBaseTest {
                 ContainerProvider.getWebSocketContainer();
         Session wsSession = wsContainer.connectToServer(TesterProgrammaticEndpoint.class,
                 ClientEndpointConfig.Builder.create().build(),
-                new URI("http://localhost:" + getPort() +
+                new URI("ws://localhost:" + getPort() +
                         TesterEchoServer.Config.PATH_ASYNC));
         CountDownLatch latch = new CountDownLatch(1);
         BasicText handler = new BasicText(latch);
@@ -135,7 +135,7 @@ public class TestWsWebSocketContainer extends TomcatBaseTest {
                 ContainerProvider.getWebSocketContainer();
         wsContainer.connectToServer(TesterProgrammaticEndpoint.class,
                 ClientEndpointConfig.Builder.create().build(),
-                new URI("http://" + TesterEchoServer.Config.PATH_ASYNC));
+                new URI("ws://" + TesterEchoServer.Config.PATH_ASYNC));
     }
 
 
@@ -223,7 +223,7 @@ public class TestWsWebSocketContainer extends TomcatBaseTest {
 
         Session wsSession = wsContainer.connectToServer(TesterProgrammaticEndpoint.class,
                 ClientEndpointConfig.Builder.create().build(),
-                        new URI("http://localhost:" + getPort() +
+                        new URI("ws://localhost:" + getPort() +
                                 TesterEchoServer.Config.PATH_BASIC));
         BasicHandler<?> handler;
         CountDownLatch latch = new CountDownLatch(1);
@@ -294,7 +294,7 @@ public class TestWsWebSocketContainer extends TomcatBaseTest {
 
         Session wsSession = wsContainer.connectToServer(TesterProgrammaticEndpoint.class,
                 ClientEndpointConfig.Builder.create().build(),
-                new URI("http://localhost:" + getPort() + BlockingConfig.PATH));
+                new URI("ws://localhost:" + getPort() + BlockingConfig.PATH));
 
         if (!setTimeoutOnContainer) {
             wsSession.getAsyncRemote().setSendTimeout(TIMEOUT_MS);
@@ -375,7 +375,7 @@ public class TestWsWebSocketContainer extends TomcatBaseTest {
 
         Session wsSession = wsContainer.connectToServer(TesterProgrammaticEndpoint.class,
                 ClientEndpointConfig.Builder.create().build(),
-                new URI("http://localhost:" + getPort() +
+                new URI("ws://localhost:" + getPort() +
                         ConstantTxConfig.PATH));
 
         wsSession.addMessageHandler(new BlockingBinaryHandler());
@@ -669,7 +669,7 @@ public class TestWsWebSocketContainer extends TomcatBaseTest {
             Class<? extends Endpoint> clazz) throws Exception {
         return wsContainer.connectToServer(clazz,
                 ClientEndpointConfig.Builder.create().build(),
-                new URI("http://localhost:" + getPort() +
+                new URI("ws://localhost:" + getPort() +
                         TesterEchoServer.Config.PATH_BASIC));
     }
 

==================================================
TestPojoMethodMapping.java
index dd775634fc..00001f23f4 100644
--- a/test/org/apache/tomcat/websocket/pojo/TestEncodingDecoding.java
+++ b/test/org/apache/tomcat/websocket/pojo/TestEncodingDecoding.java
@@ -66,7 +66,7 @@ public class TestEncodingDecoding extends TomcatBaseTest {
         tomcat.start();
 
         Client client = new Client();
-        URI uri = new URI("http://localhost:" + getPort() + "/");
+        URI uri = new URI("ws://localhost:" + getPort() + "/");
         Session session = wsContainer.connectToServer(client, uri);
 
         MsgString msg1 = new MsgString();

==================================================
