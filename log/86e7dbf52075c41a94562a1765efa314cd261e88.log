86e7dbf52075c41a94562a1765efa314cd261e88
==================================================
Allow runtime updates to the current SSLHostConfigs.
==================================================
Mark Thomas
==================================================
Fri Sep 15 20:11:53 2017 +0000
==================================================
AbstractProtocol.java
Allow runtime updates to the current SSLHostConfigs.
Move JMX registration to the Endpoint to make it easirt to keep JMX registration in sync with runtime changes.
Protect against removing the default while running

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1808482 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AbstractEndpoint.java
index f2a8a673c0..9e2d61e92f 100644
--- a/java/org/apache/coyote/LocalStrings.properties
+++ b/java/org/apache/coyote/LocalStrings.properties
@@ -34,7 +34,6 @@ abstractProtocol.mbeanDeregistrationFailed=Failed to deregister MBean named [{0}
 abstractProtocolHandler.getAttribute=Get attribute [{0}] with value [{1}]
 abstractProtocolHandler.setAttribute=Set attribute [{0}] with value [{1}]
 abstractProtocolHandler.init=Initializing ProtocolHandler [{0}]
-abstractProtocolHandler.mbeanRegistrationFailed=Failed to register MBean [{0}] for ProtocolHandler [{1}]
 abstractProtocolHandler.start=Starting ProtocolHandler [{0}]
 abstractProtocolHandler.pause=Pausing ProtocolHandler [{0}]
 abstractProtocolHandler.resume=Resuming ProtocolHandler [{0}]

==================================================
SSLHostConfig.java
index d200a7e154..2831481d02 100644
--- a/java/org/apache/tomcat/util/net/LocalStrings.properties
+++ b/java/org/apache/tomcat/util/net/LocalStrings.properties
@@ -49,6 +49,9 @@ endpoint.getAttribute=[{0}] is [{1}]
 endpoint.init.bind=Socket bind failed: [{0}] [{1}]
 endpoint.init.listen=Socket listen failed: [{0}] [{1}]
 endpoint.init.notavail=APR not available
+endpoint.invalidJmxNameSslHost=Unable to generate a valid JMX object name for the SSLHostConfig associated with host [{0}]
+endpoint.invalidJmxNameSslHostCert=Unable to generate a valid JMX object name for the SSLHostConfigCertificate associated with host [{0}] and certificate type [{1}]
+endpoint.jmxRegistrationFailed=Failed to register the JMX object with name [{0}]
 endpoint.launch.fail=Failed to launch new runnable
 endpoint.noSslHostConfig=No SSLHostConfig element was found with the hostName [{0}] to match the defaultSSLHostConfigName for the connector [{1}]
 endpoint.noSslHostName=No host name was provided for the SSL host configuration
@@ -58,10 +61,12 @@ endpoint.poll.fail=Critical poller failure (restarting poller): [{0}] [{1}]
 endpoint.poll.error=Unexpected poller error
 endpoint.process.fail=Error allocating socket processor
 endpoint.processing.fail=Error running socket processor
+endpoint.removeDefaultSslHostConfig=The default SSLHostConfig (named [{0}]) may not be removed
 endpoint.sendfile.error=Unexpected sendfile error
 endpoint.sendfile.addfail=Sendfile failure: [{0}] [{1}]
 endpoint.setAttribute=Set [{0}] to [{1}]
 endpoint.timeout.err=Error processing socket timeout
+endpoint.unknownSslHostName=The SSL host name [{0}] is not recognised for this endpoint
 endpoint.apr.failSslContextMake=Unable to create SSLContext. Check that SSLEngine is enabled in the AprLifecycleListener, the AprLifecycleListener has initialised correctly and that a valid SSLProtocol has been specified
 endpoint.apr.invalidSslProtocol=An invalid value [{0}] was provided for the SSLProtocol attribute
 endpoint.apr.maxConnections.running=The APR endpoint does not support the setting of maxConnections while it is running. The existing value of [{0}] will continue to be used.

==================================================
SSLHostConfigCertificate.java
index 00936aeabc..5a7611fbb6 100644
--- a/java/org/apache/tomcat/util/net/SSLHostConfig.java
+++ b/java/org/apache/tomcat/util/net/SSLHostConfig.java
@@ -28,6 +28,7 @@ import java.util.List;
 import java.util.Map;
 import java.util.Set;
 
+import javax.management.ObjectName;
 import javax.net.ssl.KeyManagerFactory;
 import javax.net.ssl.TrustManagerFactory;
 
@@ -78,6 +79,7 @@ public class SSLHostConfig implements Serializable {
     // Internal
     private String[] enabledCiphers;
     private String[] enabledProtocols;
+    private ObjectName oname;
     // Nested
     private SSLHostConfigCertificate defaultCertificate = null;
     private Set<SSLHostConfigCertificate> certificates = new HashSet<>(4);
@@ -218,6 +220,16 @@ public class SSLHostConfig implements Serializable {
     }
 
 
+    public ObjectName getObjectName() {
+        return oname;
+    }
+
+
+    public void setObjectName(ObjectName oname) {
+        this.oname = oname;
+    }
+
+
     // ------------------------------------------- Nested configuration elements
 
     private void registerDefaultCertificate() {

==================================================
