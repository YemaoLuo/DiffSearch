af6632e8c164f1e26641ee46f6ebfb61a7fb977c
==================================================
Close streams
==================================================
Violeta Georgieva
==================================================
Tue Dec 22 07:23:03 2015 +0000
==================================================
AbstractCatalinaTask.java
Close streams

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1721311 13f79535-47bb-0310-9956-ffa450edef68



==================================================
DefaultServlet.java
index 362f2d6b2d..90683e19d3 100644
--- a/java/org/apache/catalina/ant/AbstractCatalinaTask.java
+++ b/java/org/apache/catalina/ant/AbstractCatalinaTask.java
@@ -231,19 +231,20 @@ public abstract class AbstractCatalinaTask extends BaseRedirectorHelperTask {
 
             // Send the request data (if any)
             if (istream != null) {
-                BufferedOutputStream ostream =
-                    new BufferedOutputStream(hconn.getOutputStream(), 1024);
-                byte buffer[] = new byte[1024];
-                while (true) {
-                    int n = istream.read(buffer);
-                    if (n < 0) {
-                        break;
+                try (BufferedOutputStream ostream =
+                        new BufferedOutputStream(hconn.getOutputStream(), 1024);) {
+                    byte buffer[] = new byte[1024];
+                    while (true) {
+                        int n = istream.read(buffer);
+                        if (n < 0) {
+                            break;
+                        }
+                        ostream.write(buffer, 0, n);
                     }
-                    ostream.write(buffer, 0, n);
+                    ostream.flush();
+                } finally {
+                    istream.close();
                 }
-                ostream.flush();
-                ostream.close();
-                istream.close();
             }
 
             // Process the response message

==================================================
JDTCompiler.java
index 4cd5b57897..d1e5ee6922 100644
--- a/java/org/apache/catalina/servlets/DefaultServlet.java
+++ b/java/org/apache/catalina/servlets/DefaultServlet.java
@@ -569,17 +569,17 @@ public class DefaultServlet extends HttpServlet {
 
         // Copy data in oldRevisionContent to contentFile
         if (oldResource.isFile()) {
-            BufferedInputStream bufOldRevStream =
+            try (BufferedInputStream bufOldRevStream =
                 new BufferedInputStream(oldResource.getInputStream(),
-                        BUFFER_SIZE);
+                        BUFFER_SIZE);) {
 
-            int numBytesRead;
-            byte[] copyBuffer = new byte[BUFFER_SIZE];
-            while ((numBytesRead = bufOldRevStream.read(copyBuffer)) != -1) {
-                randAccessContentFile.write(copyBuffer, 0, numBytesRead);
-            }
+                int numBytesRead;
+                byte[] copyBuffer = new byte[BUFFER_SIZE];
+                while ((numBytesRead = bufOldRevStream.read(copyBuffer)) != -1) {
+                    randAccessContentFile.write(copyBuffer, 0, numBytesRead);
+                }
 
-            bufOldRevStream.close();
+            }
         }
 
         randAccessContentFile.setLength(range.length);
@@ -588,13 +588,13 @@ public class DefaultServlet extends HttpServlet {
         randAccessContentFile.seek(range.start);
         int numBytesRead;
         byte[] transferBuffer = new byte[BUFFER_SIZE];
-        BufferedInputStream requestBufInStream =
-            new BufferedInputStream(req.getInputStream(), BUFFER_SIZE);
-        while ((numBytesRead = requestBufInStream.read(transferBuffer)) != -1) {
-            randAccessContentFile.write(transferBuffer, 0, numBytesRead);
+        try (BufferedInputStream requestBufInStream =
+            new BufferedInputStream(req.getInputStream(), BUFFER_SIZE);) {
+            while ((numBytesRead = requestBufInStream.read(transferBuffer)) != -1) {
+                randAccessContentFile.write(transferBuffer, 0, numBytesRead);
+            }
+            randAccessContentFile.close();
         }
-        randAccessContentFile.close();
-        requestBufInStream.close();
 
         return contentFile;
     }

==================================================
