c99fb52a443f22fff71c0bf839a6fca01320820d
==================================================
Move arbitrary frame payload sizes to the constants, with the same fixme.
==================================================
Remy Maucherat
==================================================
Thu Mar 22 12:04:55 2018 +0000
==================================================
Constants.java
Move arbitrary frame payload sizes to the constants, with the same fixme.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1827479 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http2UpgradeHandler.java
index 2da5d68221..739ae7eb12 100644
--- a/java/org/apache/coyote/http2/Constants.java
+++ b/java/org/apache/coyote/http2/Constants.java
@@ -24,6 +24,12 @@ public class Constants {
     // Parsing
     static final int DEFAULT_HEADER_READ_BUFFER_SIZE = 1024;
 
+    // Header frame size
+    // TODO: Is 1k the optimal value?
+    static final int DEFAULT_HEADERS_FRAME_SIZE = 1024;
+    // TODO: Is 64 too big? Just the status header with compression
+    static final int DEFAULT_HEADERS_ACK_FRAME_SIZE = 64;
+
     // Limits
     static final int DEFAULT_MAX_COOKIE_COUNT = 200;
     static final int DEFAULT_MAX_HEADER_COUNT = 100;

==================================================
Stream.java
index 45be053abc..4fdcd2b66d 100644
--- a/java/org/apache/coyote/http2/Http2UpgradeHandler.java
+++ b/java/org/apache/coyote/http2/Http2UpgradeHandler.java
@@ -1129,10 +1129,8 @@ class Http2UpgradeHandler extends AbstractStream implements InternalHttpUpgradeH
         // is sent before the next stream is created for a PUSH_PROMISE.
         synchronized (socketWrapper) {
             pushStream = createLocalStream(request);
-
-            // TODO: Is 1k the optimal value?
             writeHeaders(associatedStream, pushStream.getIdentifier().intValue(),
-                    request.getMimeHeaders(), false, 1024);
+                    request.getMimeHeaders(), false, Constants.DEFAULT_HEADERS_FRAME_SIZE);
         }
 
         pushStream.sentPushPromise();

==================================================
