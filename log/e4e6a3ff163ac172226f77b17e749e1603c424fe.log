e4e6a3ff163ac172226f77b17e749e1603c424fe
==================================================
Update BCEL. No functional change.
==================================================
Mark Thomas
==================================================
Thu Aug 1 20:42:50 2019 +0100
==================================================
ClassParser.java
index 7d24a98dfd..267c7a5454 100644
--- a/MERGE.txt
+++ b/MERGE.txt
@@ -36,7 +36,7 @@ BCEL
 Sub-tree:
 src/main/java/org/apache/bcel
 The SHA1 ID for the most recent commit to be merged to Tomcat is:
-33b9f8718ac00b2cbbcc3bf498e55872a3066f19 (2019-04-27)
+4b760bb53b57b704006a0a33f7ec187b7e7f5ebc (2019-08-01)
 
 Codec
 -----

==================================================
Constant.java
index a43080af61..4ff14270cf 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ClassParser.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ClassParser.java
@@ -52,7 +52,7 @@ public final class ClassParser {
     private static final String[] INTERFACES_EMPTY_ARRAY = new String[0];
 
     /**
-     * Parse class from the given stream.
+     * Parses class from the given stream.
      *
      * @param inputStream Input stream
      */
@@ -62,7 +62,7 @@ public final class ClassParser {
 
 
     /**
-     * Parse the given Java class file and return an object that represents
+     * Parses the given Java class file and return an object that represents
      * the contained data, i.e., constants, methods, fields and commands.
      * A <em>ClassFormatException</em> is raised, if the file is not a valid
      * .class file. (This does not include verification of the byte code as it
@@ -101,7 +101,7 @@ public final class ClassParser {
 
 
     /**
-     * Read information about the attributes of the class.
+     * Reads information about the attributes of the class.
      * @throws  IOException
      * @throws  ClassFormatException
      */
@@ -135,7 +135,7 @@ public final class ClassParser {
 
 
     /**
-     * Read information about the class and its super class.
+     * Reads information about the class and its super class.
      * @throws  IOException
      * @throws  ClassFormatException
      */
@@ -166,7 +166,7 @@ public final class ClassParser {
 
 
     /**
-     * Read constant pool entries.
+     * Reads constant pool entries.
      * @throws  IOException
      * @throws  ClassFormatException
      */
@@ -176,7 +176,7 @@ public final class ClassParser {
 
 
     /**
-     * Read information about the fields of the class, i.e., its variables.
+     * Reads information about the fields of the class, i.e., its variables.
      * @throws  IOException
      * @throws  ClassFormatException
      */
@@ -190,7 +190,7 @@ public final class ClassParser {
 
     /******************** Private utility methods **********************/
     /**
-     * Check whether the header of the file is ok.
+     * Checks whether the header of the file is ok.
      * Of course, this has to be the first action on successive file reads.
      * @throws  IOException
      * @throws  ClassFormatException
@@ -203,7 +203,7 @@ public final class ClassParser {
 
 
     /**
-     * Read information about the interfaces implemented by this class.
+     * Reads information about the interfaces implemented by this class.
      * @throws  IOException
      * @throws  ClassFormatException
      */
@@ -222,7 +222,7 @@ public final class ClassParser {
 
 
     /**
-     * Read information about the methods of the class.
+     * Reads information about the methods of the class.
      * @throws  IOException
      * @throws  ClassFormatException
      */
@@ -235,7 +235,7 @@ public final class ClassParser {
 
 
     /**
-     * Read major and minor version of compiler which created the file.
+     * Reads major and minor version of compiler which created the file.
      * @throws  IOException
      * @throws  ClassFormatException
      */

==================================================
ConstantPool.java
index c235f44cae..fd39e62e7a 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Constant.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Constant.java
@@ -41,12 +41,10 @@ public abstract class Constant {
      */
     protected final byte tag;
 
-
     Constant(final byte tag) {
         this.tag = tag;
     }
 
-
     /**
      * @return Tag of constant, i.e., its type. No setTag() method to avoid
      * confusion.
@@ -55,7 +53,6 @@ public abstract class Constant {
         return tag;
     }
 
-
     /**
      * Read one constant from the given input, the type depends on a tag byte.
      *

==================================================
ConstantUtf8.java
index e03378c64b..bf441f802c 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantPool.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ConstantPool.java
@@ -36,9 +36,8 @@ public class ConstantPool {
 
     private final Constant[] constant_pool;
 
-
     /**
-     * Read constants from given input stream.
+     * Reads constants from given input stream.
      *
      * @param input Input stream
      * @throws IOException
@@ -68,9 +67,8 @@ public class ConstantPool {
         }
     }
 
-
     /**
-     * Get constant from constant pool.
+     * Gets constant from constant pool.
      *
      * @param  index Index in constant pool
      * @return Constant value
@@ -84,9 +82,8 @@ public class ConstantPool {
         return constant_pool[index];
     }
 
-
     /**
-     * Get constant from constant pool and check whether it has the
+     * Gets constant from constant pool and check whether it has the
      * expected type.
      *
      * @param  index Index in constant pool

==================================================
