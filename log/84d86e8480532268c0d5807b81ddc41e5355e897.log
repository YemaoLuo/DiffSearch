84d86e8480532268c0d5807b81ddc41e5355e897
==================================================
Use constants
==================================================
Mark Thomas
==================================================
Wed Jun 24 07:53:55 2015 +0000
==================================================
Http2TestBase.java
Use constants

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1687184 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestHttp2Section_6_2.java
index 4184713c2a..873c4bdbe4 100644
--- a/test/org/apache/coyote/http2/Http2TestBase.java
+++ b/test/org/apache/coyote/http2/Http2TestBase.java
@@ -158,8 +158,7 @@ public abstract class Http2TestBase extends TomcatBaseTest {
         headersPayload.flip();
 
         ByteUtil.setThreeBytes(frameHeader, 0, headersPayload.limit());
-        // Header frame is type 0x01
-        frameHeader[3] = 0x01;
+        frameHeader[3] = FrameType.HEADERS.getIdByte();
         // Flags. end of headers (0x04). end of stream (0x01)
         frameHeader[4] = 0x05;
         if (padding != null) {
@@ -180,8 +179,7 @@ public abstract class Http2TestBase extends TomcatBaseTest {
         headersPayload.flip();
 
         ByteUtil.setThreeBytes(frameHeader, 0, headersPayload.limit());
-        // Header frame is type 0x01
-        frameHeader[3] = 0x01;
+        frameHeader[3] = FrameType.HEADERS.getIdByte();
         // Flags. end of stream (0x01)
         frameHeader[4] = 0x01;
         // Stream id
@@ -198,8 +196,7 @@ public abstract class Http2TestBase extends TomcatBaseTest {
         headersPayload.flip();
 
         ByteUtil.setThreeBytes(frameHeader, 0, headersPayload.limit());
-        // Continuation frame is type 0x09
-        frameHeader[3] = 0x09;
+        frameHeader[3] = FrameType.CONTINUATION.getIdByte();
         // Flags. end of headers (0x04)
         frameHeader[4] = 0x04;
         // Stream id
@@ -231,8 +228,7 @@ public abstract class Http2TestBase extends TomcatBaseTest {
         headersPayload.flip();
 
         ByteUtil.setThreeBytes(headersFrameHeader, 0, headersPayload.limit());
-        // Header frame is type 0x01
-        headersFrameHeader[3] = 0x01;
+        headersFrameHeader[3] = FrameType.HEADERS.getIdByte();
         // Flags. end of headers (0x04)
         headersFrameHeader[4] = 0x04;
         // Stream id
@@ -479,8 +475,7 @@ public abstract class Http2TestBase extends TomcatBaseTest {
         byte[] rstFrame = new byte[13];
         // length is always 4
         rstFrame[2] = 0x04;
-        // type is always 3
-        rstFrame[3] = 0x03;
+        rstFrame[3] = FrameType.RST.getIdByte();
         // no flags
         // Stream ID
         ByteUtil.set31Bits(rstFrame, 5, streamId);
@@ -502,8 +497,7 @@ public abstract class Http2TestBase extends TomcatBaseTest {
         byte[] updateFrame = new byte[13];
         // length is always 4
         updateFrame[2] = 0x04;
-        // type is always 8
-        updateFrame[3] = 0x08;
+        updateFrame[3] = FrameType.WINDOW_UPDATE.getIdByte();
         // no flags
         // Stream ID
         ByteUtil.set31Bits(updateFrame, 5, streamId);

==================================================
