8a438b7e0f8d38ac411b191c0e5159e98f24b22b
==================================================
Remove / clean-up pointless javadoc
==================================================
Mark Emlyn
==================================================
Fri Jan 24 14:18:14 2014 +0000
==================================================
ClusterMessageBase.java
Remove / clean-up pointless javadoc

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1561020 13f79535-47bb-0310-9956-ffa450edef68



==================================================
RpcCallback.java
index 0231f74753..a39f150eb4 100644
--- a/java/org/apache/catalina/ha/ClusterMessageBase.java
+++ b/java/org/apache/catalina/ha/ClusterMessageBase.java
@@ -18,18 +18,6 @@ package org.apache.catalina.ha;
 
 import org.apache.catalina.tribes.Member;
 
-
-/**
- * <p>Title: </p>
- *
- * <p>Description: </p>
- *
- *
- * <p>Company: </p>
- *
- * @author not attributable
- * @version 1.0
- */
 public abstract class ClusterMessageBase implements ClusterMessage {
 
     private static final long serialVersionUID = 1L;

==================================================
RpcChannel.java
index 8201b2ced8..c508374e79 100644
--- a/java/org/apache/catalina/tribes/group/RpcCallback.java
+++ b/java/org/apache/catalina/tribes/group/RpcCallback.java
@@ -23,7 +23,6 @@ import org.apache.catalina.tribes.Member;
 /**
  * The RpcCallback interface is an interface for the Tribes channel to request a
  * response object to a request that came in.
- * @author not attributable
  * @version 1.0
  */
 public interface RpcCallback {

==================================================
RpcMessage.java
index 6337a223f2..a15a1c0670 100644
--- a/java/org/apache/catalina/tribes/group/RpcChannel.java
+++ b/java/org/apache/catalina/tribes/group/RpcChannel.java
@@ -223,7 +223,6 @@ public class RpcChannel implements ChannelListener{
     /**
      *
      * Class that holds all response.
-     * @author not attributable
      * @version 1.0
      */
     public static class RpcCollector {

==================================================
TwoPhaseCommitInterceptor.java
index 7f9f38f9d3..05146dd723 100644
--- a/java/org/apache/catalina/tribes/group/RpcMessage.java
+++ b/java/org/apache/catalina/tribes/group/RpcMessage.java
@@ -25,16 +25,6 @@ import java.io.Serializable;
 
 import org.apache.catalina.tribes.util.Arrays;
 
-/**
- * <p>Title: </p>
- *
- * <p>Description: </p>
- *
- * <p>Company: </p>
- *
- * @author not attributable
- * @version 1.0
- */
 public class RpcMessage implements Externalizable {
 
     protected Serializable message;

==================================================
DirectByteArrayOutputStream.java
index b928958af7..9a7a9edffe 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/TwoPhaseCommitInterceptor.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/TwoPhaseCommitInterceptor.java
@@ -28,16 +28,6 @@ import org.apache.catalina.tribes.group.InterceptorPayload;
 import org.apache.catalina.tribes.util.Arrays;
 import org.apache.catalina.tribes.util.UUIDGenerator;
 
-/**
- * <p>Title: </p>
- *
- * <p>Description: </p>
- *
- * <p>Company: </p>
- *
- * @author not attributable
- * @version 1.0
- */
 public class TwoPhaseCommitInterceptor extends ChannelInterceptorBase {
 
     private static final byte[] START_DATA = new byte[] {113, 1, -58, 2, -34, -60, 75, -78, -101, -12, 32, -29, 32, 111, -40, 4};

==================================================
StaticMember.java
index adff091ddf..ef58fa2b41 100644
--- a/java/org/apache/catalina/tribes/io/DirectByteArrayOutputStream.java
+++ b/java/org/apache/catalina/tribes/io/DirectByteArrayOutputStream.java
@@ -23,7 +23,6 @@ import java.io.OutputStream;
 /**
  * Byte array output stream that exposes the byte array directly
  *
- * @author not attributable
  * @version 1.0
  */
 public class DirectByteArrayOutputStream extends OutputStream {

==================================================
AbstractSender.java
index cbe38c6251..bb719d7db1 100644
--- a/java/org/apache/catalina/tribes/membership/StaticMember.java
+++ b/java/org/apache/catalina/tribes/membership/StaticMember.java
@@ -14,23 +14,12 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-
 package org.apache.catalina.tribes.membership;
 
 import java.io.IOException;
 
 import org.apache.catalina.tribes.util.Arrays;
 
-/**
- * <p>Title: </p>
- *
- * <p>Description: </p>
- *
- * <p>Company: </p>
- *
- * @author not attributable
- * @version 1.0
- */
 public class StaticMember extends MemberImpl {
     public StaticMember() {
         super();

==================================================
DataSender.java
index af10bd7bae..8e2b76503e 100644
--- a/java/org/apache/catalina/tribes/transport/AbstractSender.java
+++ b/java/org/apache/catalina/tribes/transport/AbstractSender.java
@@ -14,7 +14,6 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-
 package org.apache.catalina.tribes.transport;
 
 import java.io.IOException;
@@ -23,16 +22,6 @@ import java.net.UnknownHostException;
 
 import org.apache.catalina.tribes.Member;
 
-/**
- * <p>Title: </p>
- *
- * <p>Description: </p>
- *
- * <p>Company: </p>
- *
- * @author not attributable
- * @version 1.0
- */
 public abstract class AbstractSender implements DataSender {
 
     private boolean connected = false;

==================================================
PooledSender.java
index 899917e878..4088686994 100644
--- a/java/org/apache/catalina/tribes/transport/DataSender.java
+++ b/java/org/apache/catalina/tribes/transport/DataSender.java
@@ -18,16 +18,6 @@ package org.apache.catalina.tribes.transport;
 
 import java.io.IOException;
 
-/**
- * <p>Title: </p>
- *
- * <p>Description: </p>
- *
- * <p>Company: </p>
- *
- * @author not attributable
- * @version 1.0
- */
 public interface DataSender {
     public void connect() throws IOException;
     public void disconnect();
@@ -40,6 +30,4 @@ public interface DataSender {
     public void setKeepAliveTime(long keepAliveTimeInMs);
     public int getRequestCount();
     public long getConnectTime();
-
-
 }
\ No newline at end of file

==================================================
ReceiverBase.java
index 5abeaf28ef..493ed2b2fe 100644
--- a/java/org/apache/catalina/tribes/transport/PooledSender.java
+++ b/java/org/apache/catalina/tribes/transport/PooledSender.java
@@ -24,16 +24,6 @@ import org.apache.catalina.tribes.util.StringManager;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 
-/**
- * <p>Title: </p>
- *
- * <p>Description: </p>
- *
- * <p>Company: </p>
- *
- * @author not attributable
- * @version 1.0
- */
 public abstract class PooledSender extends AbstractSender implements MultiPointSender {
 
     private static final Log log = LogFactory.getLog(PooledSender.class);

==================================================
RxTaskPool.java
index 8cf6990e02..42db38eea5 100644
--- a/java/org/apache/catalina/tribes/transport/ReceiverBase.java
+++ b/java/org/apache/catalina/tribes/transport/ReceiverBase.java
@@ -34,16 +34,6 @@ import org.apache.catalina.tribes.util.ExecutorFactory;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 
-/**
- * <p>Title: </p>
- *
- * <p>Description: </p>
- *
- * <p>Company: </p>
- *
- * @author not attributable
- * @version 1.0
- */
 public abstract class ReceiverBase implements ChannelReceiver, ListenCallback, RxTaskPool.TaskCreator {
 
     public static final int OPTION_DIRECT_BUFFER = 0x0004;

==================================================
PooledMultiSender.java
index dbc965f58a..7ae844bf3f 100644
--- a/java/org/apache/catalina/tribes/transport/RxTaskPool.java
+++ b/java/org/apache/catalina/tribes/transport/RxTaskPool.java
@@ -21,17 +21,12 @@ import java.util.LinkedList;
 import java.util.List;
 
 /**
- * @author not attributable
+ * A very simple thread pool class.  The pool size is set at
+ * construction time and remains fixed.  Threads are cycled
+ * through a FIFO idle queue.
  * @version 1.0
  */
-
-public class RxTaskPool
-{
-    /**
-     * A very simple thread pool class.  The pool size is set at
-     * construction time and remains fixed.  Threads are cycled
-     * through a FIFO idle queue.
-     */
+public class RxTaskPool {
 
     final List<AbstractRxTask> idle = new LinkedList<>();
     final List<AbstractRxTask> used = new LinkedList<>();

==================================================
ParallelNioSender.java
index eab0ae4d0f..86ed96d3d4 100644
--- a/java/org/apache/catalina/tribes/transport/bio/PooledMultiSender.java
+++ b/java/org/apache/catalina/tribes/transport/bio/PooledMultiSender.java
@@ -24,16 +24,6 @@ import org.apache.catalina.tribes.transport.DataSender;
 import org.apache.catalina.tribes.transport.MultiPointSender;
 import org.apache.catalina.tribes.transport.PooledSender;
 
-/**
- * <p>Title: </p>
- *
- * <p>Description: </p>
- *
- * <p>Company: </p>
- *
- * @author not attributable
- * @version 1.0
- */
 public class PooledMultiSender extends PooledSender {
 
 

==================================================
PooledParallelSender.java
index b588548786..6fb287fc8b 100644
--- a/java/org/apache/catalina/tribes/transport/nio/ParallelNioSender.java
+++ b/java/org/apache/catalina/tribes/transport/nio/ParallelNioSender.java
@@ -16,7 +16,6 @@
  */
 package org.apache.catalina.tribes.transport.nio;
 
-
 import java.io.IOException;
 import java.net.UnknownHostException;
 import java.nio.channels.SelectionKey;
@@ -40,16 +39,6 @@ import org.apache.catalina.tribes.util.Logs;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 
-/**
- * <p>Title: </p>
- *
- * <p>Description: </p>
- *
- * <p>Company: </p>
- *
- * @author not attributable
- * @version 1.0
- */
 public class ParallelNioSender extends AbstractSender implements MultiPointSender {
 
     private static final Log log = LogFactory.getLog(ParallelNioSender.class);

==================================================
EchoRpcTest.java
index 3a94bb7e95..7f9d409659 100644
--- a/java/org/apache/catalina/tribes/transport/nio/PooledParallelSender.java
+++ b/java/org/apache/catalina/tribes/transport/nio/PooledParallelSender.java
@@ -25,16 +25,6 @@ import org.apache.catalina.tribes.transport.AbstractSender;
 import org.apache.catalina.tribes.transport.DataSender;
 import org.apache.catalina.tribes.transport.PooledSender;
 
-/**
- * <p>Title: </p>
- *
- * <p>Description: </p>
- *
- * <p>Company: </p>
- *
- * @author not attributable
- * @version 1.0
- */
 public class PooledParallelSender extends PooledSender {
     protected boolean connected = true;
     public PooledParallelSender() {

==================================================
LoadTest.java
index 3c180332b4..5133bd21ed 100644
--- a/test/org/apache/catalina/tribes/demos/EchoRpcTest.java
+++ b/test/org/apache/catalina/tribes/demos/EchoRpcTest.java
@@ -25,17 +25,6 @@ import org.apache.catalina.tribes.group.Response;
 import org.apache.catalina.tribes.group.RpcCallback;
 import org.apache.catalina.tribes.group.RpcChannel;
 
-
-/**
- * <p>Title: </p>
- *
- * <p>Description: </p>
- *
- * <p>Company: </p>
- *
- * @author not attributable
- * @version 1.0
- */
 public class EchoRpcTest implements RpcCallback, Runnable {
 
     Channel channel;

==================================================
TestGroupChannelOptionFlag.java
index 2570fd2229..d4d21ef8fa 100644
--- a/test/org/apache/catalina/tribes/demos/LoadTest.java
+++ b/test/org/apache/catalina/tribes/demos/LoadTest.java
@@ -29,17 +29,6 @@ import org.apache.catalina.tribes.MembershipListener;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 
-
-/**
- * <p>Title: </p>
- *
- * <p>Description: </p>
- *
- * <p>Company: </p>
- *
- * @author not attributable
- * @version 1.0
- */
 public class LoadTest implements MembershipListener,ChannelListener, Runnable {
     private static final Log log = LogFactory.getLog(LoadTest.class);
     public static int size = 24000;

==================================================
TestTcpFailureDetector.java
index eec63c8c8c..8e88348976 100644
--- a/test/org/apache/catalina/tribes/group/TestGroupChannelOptionFlag.java
+++ b/test/org/apache/catalina/tribes/group/TestGroupChannelOptionFlag.java
@@ -27,16 +27,6 @@ import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.ChannelException;
 import org.apache.catalina.tribes.ChannelInterceptor;
 
-/**
- * <p>Title: </p>
- *
- * <p>Description: </p>
- *
- * <p>Company: </p>
- *
- * @author not attributable
- * @version 1.0
- */
 public class TestGroupChannelOptionFlag {
     private GroupChannel channel = null;
 

==================================================
TestMemberImplSerialization.java
index 13c855f975..76fc4e8cc9 100644
--- a/test/org/apache/catalina/tribes/group/interceptors/TestTcpFailureDetector.java
+++ b/test/org/apache/catalina/tribes/group/interceptors/TestTcpFailureDetector.java
@@ -34,16 +34,6 @@ import org.apache.catalina.tribes.MembershipListener;
 import org.apache.catalina.tribes.TesterUtil;
 import org.apache.catalina.tribes.group.GroupChannel;
 
-/**
- * <p>Title: </p>
- *
- * <p>Description: </p>
- *
- * <p>Company: </p>
- *
- * @author not attributable
- * @version 1.0
- */
 public class TestTcpFailureDetector {
     private TcpFailureDetector tcpFailureDetector1 = null;
     private TcpFailureDetector tcpFailureDetector2 = null;

==================================================
NioSenderTest.java
index e5c41e0b5c..52cbf22bd2 100644
--- a/test/org/apache/catalina/tribes/membership/TestMemberImplSerialization.java
+++ b/test/org/apache/catalina/tribes/membership/TestMemberImplSerialization.java
@@ -26,16 +26,6 @@ import org.junit.Test;
 
 import org.apache.catalina.tribes.Member;
 
-/**
- * <p>Title: </p>
- *
- * <p>Description: </p>
- *
- * <p>Company: </p>
- *
- * @author not attributable
- * @version 1.0
- */
 public class TestMemberImplSerialization {
     private MemberImpl m1, m2, p1,p2;
     private byte[] payload = null;

==================================================
TestDataIntegrity.java
index c44ebb34a2..01edaa0571 100644
--- a/test/org/apache/catalina/tribes/test/NioSenderTest.java
+++ b/test/org/apache/catalina/tribes/test/NioSenderTest.java
@@ -27,16 +27,6 @@ import org.apache.catalina.tribes.io.XByteBuffer;
 import org.apache.catalina.tribes.membership.MemberImpl;
 import org.apache.catalina.tribes.transport.nio.NioSender;
 
-/**
- * <p>Title: </p>
- *
- * <p>Description: </p>
- *
- * <p>Company: </p>
- *
- * @author not attributable
- * @version 1.0
- */
 public class NioSenderTest {
     private Selector selector = null;
     private int counter = 0;

==================================================
TestRemoteProcessException.java
index ff988f456b..e1a2c863c8 100644
--- a/test/org/apache/catalina/tribes/test/channel/TestDataIntegrity.java
+++ b/test/org/apache/catalina/tribes/test/channel/TestDataIntegrity.java
@@ -34,16 +34,6 @@ import org.apache.catalina.tribes.TesterUtil;
 import org.apache.catalina.tribes.group.GroupChannel;
 import org.apache.catalina.tribes.group.interceptors.MessageDispatch15Interceptor;
 
-/**
- * <p>Title: </p>
- *
- * <p>Description: </p>
- *
- * <p>Company: </p>
- *
- * @author not attributable
- * @version 1.0
- */
 public class TestDataIntegrity {
     private int msgCount = 500;
     private int threadCount = 20;

==================================================
