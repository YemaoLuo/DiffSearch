eb423f80807d9a57ba72bf8aa3a389f8ddc473df
==================================================
Remove deprecated code
==================================================
Mark Thomas
==================================================
Tue May 2 09:08:27 2017 +0000
==================================================
WebXml.java
index 49a6c784a7..7d0e30edb9 100644
--- a/java/org/apache/tomcat/util/descriptor/web/LocalStrings.properties
+++ b/java/org/apache/tomcat/util/descriptor/web/LocalStrings.properties
@@ -62,5 +62,3 @@ webXml.wrongFragmentName=Used a wrong fragment name [{0}] at web.xml absolute-or
 webXmlParser.applicationParse=Parse error in application web.xml file at [{0}]
 webXmlParser.applicationPosition=Occurred at line [{0}] column [{1}]
 webXmlParser.applicationStart=Parsing application web.xml file at [{0}]
-
-xmlEncodingBase.encodingInvalid=The encoding [{0}] is not recognised by this JRE. The existing value of [{1}] will be used
\ No newline at end of file

==================================================
XmlEncodingBase.java
index f97bea92e3..de16817459 100644
--- a/java/org/apache/tomcat/util/descriptor/web/WebXml.java
+++ b/java/org/apache/tomcat/util/descriptor/web/WebXml.java
@@ -55,9 +55,7 @@ import org.apache.tomcat.util.res.StringManager;
  * This class checks for invalid duplicates (eg filter/servlet names)
  * StandardContext will check validity of values (eg URL formats etc)
  */
-@SuppressWarnings("deprecation")
-public class WebXml extends XmlEncodingBase implements DocumentProperties.Encoding,
-        DocumentProperties.Charset {
+public class WebXml extends XmlEncodingBase implements DocumentProperties.Charset {
 
     protected static final String ORDER_OTHERS =
         "org.apache.catalina.order.others";

==================================================
Digester.java
index a835e09257..223197a70e 100644
--- a/java/org/apache/tomcat/util/descriptor/web/XmlEncodingBase.java
+++ b/java/org/apache/tomcat/util/descriptor/web/XmlEncodingBase.java
@@ -16,55 +16,18 @@
  */
 package org.apache.tomcat.util.descriptor.web;
 
-import java.io.UnsupportedEncodingException;
 import java.nio.charset.Charset;
 import java.nio.charset.StandardCharsets;
 
-import org.apache.juli.logging.Log;
-import org.apache.juli.logging.LogFactory;
-import org.apache.tomcat.util.buf.B2CConverter;
-import org.apache.tomcat.util.res.StringManager;
-
 /**
  * Base class for those elements that need to track the encoding used in the
  * source XML.
  */
 public abstract class XmlEncodingBase {
 
-    private static final Log log = LogFactory.getLog(XmlEncodingBase.class);
-    private static final StringManager sm = StringManager.getManager(XmlEncodingBase.class);
     private Charset charset = StandardCharsets.UTF_8;
 
 
-    /**
-     * @param encoding The encoding of the XML source that was used to
-     *                 populated this object.
-     * @deprecated This method will be removed in Tomcat 9
-     */
-    @Deprecated
-    public void setEncoding(String encoding) {
-        try {
-            charset = B2CConverter.getCharset(encoding);
-        } catch (UnsupportedEncodingException e) {
-            log.warn(sm.getString("xmlEncodingBase.encodingInvalid", encoding, charset.name()), e);
-        }
-    }
-
-
-    /**
-     * Obtain the encoding of the XML source that was used to populated this
-     * object.
-     *
-     * @return The encoding of the associated XML source or <code>UTF-8</code>
-     *         if the encoding could not be determined
-     * @deprecated This method will be removed in Tomcat 9
-     */
-    @Deprecated
-    public String getEncoding() {
-        return charset.name();
-    }
-
-
     public void setCharset(Charset charset) {
         this.charset = charset;
     }

==================================================
DocumentProperties.java
index 5aa0a553a6..941168a772 100644
--- a/java/org/apache/tomcat/util/digester/Digester.java
+++ b/java/org/apache/tomcat/util/digester/Digester.java
@@ -1114,7 +1114,6 @@ public class Digester extends DefaultHandler2 {
      *
      * @exception SAXException if a parsing error is to be reported
      */
-    @SuppressWarnings("deprecation")
     @Override
     public void startDocument() throws SAXException {
 
@@ -1130,8 +1129,6 @@ public class Digester extends DefaultHandler2 {
                 } catch (UnsupportedEncodingException e) {
                     log.warn(sm.getString("disgester.encodingInvalid", enc), e);
                 }
-            } else if (root instanceof DocumentProperties.Encoding) {
-                ((DocumentProperties.Encoding) root).setEncoding(((Locator2) locator).getEncoding());
             }
         }
 

==================================================
