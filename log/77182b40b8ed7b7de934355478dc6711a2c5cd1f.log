77182b40b8ed7b7de934355478dc6711a2c5cd1f
==================================================
Add MBean for Receiver component.
==================================================
Keiichi Fujino
==================================================
Wed Apr 12 04:17:56 2017 +0000
==================================================
ReceiverBase.java
Add MBean for Receiver component.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1791068 13f79535-47bb-0310-9956-ffa450edef68



==================================================
NioReceiver.java
index c87067647e..34bf345c68 100644
--- a/java/org/apache/catalina/tribes/transport/ReceiverBase.java
+++ b/java/org/apache/catalina/tribes/transport/ReceiverBase.java
@@ -26,11 +26,14 @@ import java.util.concurrent.ThreadFactory;
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicInteger;
 
+import javax.management.ObjectName;
+
 import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.ChannelMessage;
 import org.apache.catalina.tribes.ChannelReceiver;
 import org.apache.catalina.tribes.MessageListener;
 import org.apache.catalina.tribes.io.ListenCallback;
+import org.apache.catalina.tribes.jmx.JmxRegistry;
 import org.apache.catalina.tribes.util.ExecutorFactory;
 import org.apache.catalina.tribes.util.StringManager;
 import org.apache.juli.logging.Log;
@@ -82,6 +85,11 @@ public abstract class ReceiverBase implements ChannelReceiver, ListenCallback, R
     private ExecutorService executor;
     private Channel channel;
 
+    /**
+     * the ObjectName of this Receiver.
+     */
+    private ObjectName oname = null;
+
     public ReceiverBase() {
     }
 
@@ -94,12 +102,20 @@ public abstract class ReceiverBase implements ChannelReceiver, ListenCallback, R
             TaskThreadFactory tf = new TaskThreadFactory("Tribes-Task-Receiver" + channelName + "-");
             executor = ExecutorFactory.newThreadPool(minThreads, maxThreads, maxIdleTime, TimeUnit.MILLISECONDS, tf);
         }
+        // register jmx
+        JmxRegistry jmxRegistry = JmxRegistry.getRegistry(channel);
+        if (jmxRegistry != null) this.oname = jmxRegistry.registerJmx(",component=Receiver", this);
     }
 
     @Override
     public void stop() {
         if ( executor != null ) executor.shutdownNow();//ignore left overs
         executor = null;
+        if (oname != null) {
+            JmxRegistry jmxRegistry = JmxRegistry.getRegistry(channel);
+            if (jmxRegistry != null) jmxRegistry.unregisterJmx(oname);
+            oname = null;  
+        }
         channel = null;
     }
 

==================================================
NioReceiverMBean.java
index 6432b3fb6f..c1b1d4ea1f 100644
--- a/java/org/apache/catalina/tribes/transport/nio/NioReceiver.java
+++ b/java/org/apache/catalina/tribes/transport/nio/NioReceiver.java
@@ -42,7 +42,7 @@ import org.apache.catalina.tribes.util.StringManager;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 
-public class NioReceiver extends ReceiverBase implements Runnable {
+public class NioReceiver extends ReceiverBase implements Runnable, NioReceiverMBean {
 
     private static final Log log = LogFactory.getLog(NioReceiver.class);
 

==================================================
