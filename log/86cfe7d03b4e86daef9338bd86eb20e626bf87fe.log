86cfe7d03b4e86daef9338bd86eb20e626bf87fe
==================================================
Make use of the new case-insensitive map implementation.
==================================================
Mark Thomas
==================================================
Fri Nov 28 17:30:55 2014 +0000
==================================================
Constants.java
Make use of the new case-insensitive map implementation.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1642327 13f79535-47bb-0310-9956-ffa450edef68



==================================================
WsHandshakeResponse.java
index 93c2919ad8..6d74f5d07a 100644
--- a/java/org/apache/tomcat/websocket/Constants.java
+++ b/java/org/apache/tomcat/websocket/Constants.java
@@ -19,7 +19,6 @@ package org.apache.tomcat.websocket;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
-import java.util.Locale;
 
 import javax.websocket.Extension;
 
@@ -57,12 +56,8 @@ public class Constants {
     public static final String WS_KEY_HEADER_NAME = "Sec-WebSocket-Key";
     public static final String WS_PROTOCOL_HEADER_NAME =
             "Sec-WebSocket-Protocol";
-    public static final String WS_PROTOCOL_HEADER_NAME_LOWER =
-            WS_PROTOCOL_HEADER_NAME.toLowerCase(Locale.ENGLISH);
     public static final String WS_EXTENSIONS_HEADER_NAME =
             "Sec-WebSocket-Extensions";
-    public static final String WS_EXTENSIONS_HEADER_NAME_LOWER =
-            WS_EXTENSIONS_HEADER_NAME.toLowerCase(Locale.ENGLISH);
 
     public static final boolean STRICT_SPEC_COMPLIANCE =
             Boolean.getBoolean(

==================================================
WsWebSocketContainer.java
index df2e271999..13af6bbbaa 100644
--- a/java/org/apache/tomcat/websocket/WsHandshakeResponse.java
+++ b/java/org/apache/tomcat/websocket/WsHandshakeResponse.java
@@ -16,9 +16,10 @@
  */
 package org.apache.tomcat.websocket;
 
-import java.util.HashMap;
+import java.util.ArrayList;
 import java.util.List;
 import java.util.Map;
+import java.util.Map.Entry;
 
 import javax.websocket.HandshakeResponse;
 
@@ -27,16 +28,22 @@ import javax.websocket.HandshakeResponse;
  */
 public class WsHandshakeResponse implements HandshakeResponse {
 
-    private final Map<String,List<String>> headers;
+    private final Map<String,List<String>> headers = new CaseInsensitiveKeyMap<>();
 
 
     public WsHandshakeResponse() {
-        this(new HashMap<String,List<String>>());
     }
 
 
     public WsHandshakeResponse(Map<String,List<String>> headers) {
-        this.headers = headers;
+        for (Entry<String,List<String>> entry : headers.entrySet()) {
+            if (this.headers.containsKey(entry.getKey())) {
+                this.headers.get(entry.getKey()).addAll(entry.getValue());
+            } else {
+                List<String> values = new ArrayList<>(entry.getValue());
+                this.headers.put(entry.getKey(), values);
+            }
+        }
     }
 
 

==================================================
