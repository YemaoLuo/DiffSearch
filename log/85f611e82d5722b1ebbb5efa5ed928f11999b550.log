85f611e82d5722b1ebbb5efa5ed928f11999b550
==================================================
Fix for https://issues.apache.org/bugzilla/show_bug.cgi?id=55262
==================================================
Jeremy Boynes
==================================================
Sat Jul 20 20:46:58 2013 +0000
==================================================
JspPropertyGroup.java
Fix for https://issues.apache.org/bugzilla/show_bug.cgi?id=55262
Duplicate prelude and coda entries in same <jsp-property-group> are preserved.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1505204 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestCompiler.java
index f5453ba88e..2e2743865a 100644
--- a/java/org/apache/tomcat/util/descriptor/web/JspPropertyGroup.java
+++ b/java/org/apache/tomcat/util/descriptor/web/JspPropertyGroup.java
@@ -16,6 +16,8 @@
  */
 package org.apache.tomcat.util.descriptor.web;
 
+import java.util.ArrayList;
+import java.util.Collection;
 import java.util.LinkedHashSet;
 import java.util.Set;
 
@@ -35,17 +37,17 @@ public class JspPropertyGroup {
     }
     public Boolean getElIgnored() { return elIgnored; }
 
-    private final Set<String> includeCodas = new LinkedHashSet<>();
+    private final Collection<String> includeCodas = new ArrayList<>();
     public void addIncludeCoda(String includeCoda) {
         includeCodas.add(includeCoda);
     }
-    public Set<String> getIncludeCodas() { return includeCodas; }
+    public Collection<String> getIncludeCodas() { return includeCodas; }
 
-    private final Set<String> includePreludes = new LinkedHashSet<>();
+    private final Collection<String> includePreludes = new ArrayList<>();
     public void addIncludePrelude(String includePrelude) {
         includePreludes.add(includePrelude);
     }
-    public Set<String> getIncludePreludes() { return includePreludes; }
+    public Collection<String> getIncludePreludes() { return includePreludes; }
 
     private Boolean isXml = null;
     public void setIsXml(String isXml) {

==================================================
TestJspCServletContext.java
index d19ae34ca6..9cd1442fac 100644
--- a/test/org/apache/jasper/compiler/TestCompiler.java
+++ b/test/org/apache/jasper/compiler/TestCompiler.java
@@ -21,6 +21,7 @@ import java.io.File;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
+import java.util.regex.Pattern;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertTrue;
@@ -220,6 +221,27 @@ public class TestCompiler extends TomcatBaseTest {
         // it fails
     }
 
+    @Test
+    public void testBug55262() throws Exception {
+        Tomcat tomcat = getTomcatInstance();
+
+        File appDir = new File("test/webapp");
+        tomcat.addWebapp(null, "/test", appDir.getAbsolutePath());
+        tomcat.start();
+
+        ByteChunk res = getUrl("http://localhost:" + getPort() +
+                "/test/bug5nnnn/bug55262.jsp");
+        String result = res.toString();
+        Pattern prelude = Pattern.compile(
+                "(.*This is a prelude\\.){2}.*",
+                Pattern.MULTILINE | Pattern.DOTALL);
+        Pattern coda = Pattern.compile(
+                "(.*This is a coda\\.){2}.*",
+                Pattern.MULTILINE|Pattern.DOTALL);
+        assertTrue(prelude.matcher(result).matches());
+        assertTrue(coda.matcher(result).matches());
+    }
+
     /** Assertion for text printed by tags:echo */
     private static void assertEcho(String result, String expected) {
         assertTrue(result, result.indexOf("<p>" + expected + "</p>") > 0);

==================================================
TestJspPropertyGroup.java
index 1f47d31658..75e6acaade 100644
--- a/test/org/apache/jasper/servlet/TestJspCServletContext.java
+++ b/test/org/apache/jasper/servlet/TestJspCServletContext.java
@@ -40,9 +40,12 @@ public class TestJspCServletContext {
         Assert.assertTrue(jspConfigDescriptor.getTaglibs().isEmpty());
         Collection<JspPropertyGroupDescriptor> propertyGroups =
                 jspConfigDescriptor.getJspPropertyGroups();
-        Assert.assertEquals(1, propertyGroups.size());
-        JspPropertyGroupDescriptor groupDescriptor =
-                propertyGroups.iterator().next();
+        Assert.assertEquals(2, propertyGroups.size());
+        Iterator<JspPropertyGroupDescriptor> groupIterator =
+                propertyGroups.iterator();
+        JspPropertyGroupDescriptor groupDescriptor;
+
+        groupDescriptor = groupIterator.next();
         Assert.assertEquals("text/plain",
                 groupDescriptor.getDefaultContentType());
         Collection<String> urlPatterns =groupDescriptor.getUrlPatterns();
@@ -50,6 +53,10 @@ public class TestJspCServletContext {
         Iterator<String> iterator = urlPatterns.iterator();
         Assert.assertEquals("/bug49nnn/bug49726a.jsp", iterator.next());
         Assert.assertEquals("/bug49nnn/bug49726b.jsp", iterator.next());
+
+        groupDescriptor = groupIterator.next();
+        Assert.assertEquals(2, groupDescriptor.getIncludePreludes().size());
+        Assert.assertEquals(2, groupDescriptor.getIncludeCodas().size());
     }
 
     @Test

==================================================
