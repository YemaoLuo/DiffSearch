c73ec7fe5f35f9581d426b798b233ed3b0bc96aa
==================================================
BZ47852: Javadoc fixes.
==================================================
Rainer Jung
==================================================
Wed Sep 16 14:54:07 2009 +0000
==================================================
Local.java
BZ47852: Javadoc fixes.
Patch by Sebb.


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@815816 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Poll.java
index fb5a7a64c0..5d467dd078 100644
--- a/java/org/apache/tomcat/jni/Local.java
+++ b/java/org/apache/tomcat/jni/Local.java
@@ -56,7 +56,6 @@ public class Local {
     /**
      * Accept a new connection request
      * @param sock The socket we are listening on.
-     * @param pool The pool for the new socket.
      * @return  A copy of the socket that is connected to the socket that
      *          made the connection request.  This is the socket which should
      *          be used for all future communication.

==================================================
Registry.java
index 8eb0ee82c7..ad63c8fb7d 100644
--- a/java/org/apache/tomcat/jni/Poll.java
+++ b/java/org/apache/tomcat/jni/Poll.java
@@ -79,7 +79,6 @@ public class Poll {
      * descriptor is signalled in apr_pollset_poll().
      * @param pollset The pollset to which to add the descriptor
      * @param sock The sockets to add
-     * @param data Client data to add
      * @param reqevents requested events
      */
     public static native int add(long pollset, long sock,

==================================================
Socket.java
index eed9a59ce4..3eaeb636dd 100644
--- a/java/org/apache/tomcat/jni/Registry.java
+++ b/java/org/apache/tomcat/jni/Registry.java
@@ -56,7 +56,8 @@ public class Registry {
      * Create or open a Registry Key.
      * @param name Registry Subkey to open
      * @param root Root key, one of HKEY_*
-     * @param som Access mask that specifies the access rights for the key.
+     * @param sam Access mask that specifies the access rights for the key.
+     * @param pool Pool used for native memory allocation
      * @return Opened Registry key
      */
     public static native long create(int root, String name, int sam, long pool)
@@ -66,7 +67,8 @@ public class Registry {
      * Opens the specified Registry Key.
      * @param name Registry Subkey to open
      * @param root Root key, one of HKEY_*
-     * @param som Access mask that specifies the access rights for the key.
+     * @param sam Access mask that specifies the access rights for the key.
+     * @param pool Pool used for native memory allocation
      * @return Opened Registry key
      */
     public static native long open(int root, String name, int sam, long pool)
@@ -197,7 +199,6 @@ public class Registry {
     /**
      * Enumerate the Registry subkeys
      * @param key The Registry key descriptor to use.
-     * @param name The name of the value to query
      * @return Array of all subkey names
      */
     public static native String[] enumKeys(long key)
@@ -206,7 +207,6 @@ public class Registry {
     /**
      * Enumerate the Registry values
      * @param key The Registry key descriptor to use.
-     * @param name The name of the value to query
      * @return Array of all value names
      */
     public static native String[] enumValues(long key)

==================================================
