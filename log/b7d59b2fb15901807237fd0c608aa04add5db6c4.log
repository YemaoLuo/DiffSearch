b7d59b2fb15901807237fd0c608aa04add5db6c4
==================================================
Add empty ApplicationBufferHandler for completeness
==================================================
remm remm@apache.org
==================================================
Mon Dec 7 21:30:01 2020 +0100
==================================================
ApplicationBufferHandler.java
Add empty ApplicationBufferHandler for completeness


==================================================
Nio2Channel.java
index d9a22ed3bd..8362416fae 100644
--- a/java/org/apache/tomcat/util/net/ApplicationBufferHandler.java
+++ b/java/org/apache/tomcat/util/net/ApplicationBufferHandler.java
@@ -24,6 +24,21 @@ import java.nio.ByteBuffer;
  */
 public interface ApplicationBufferHandler {
 
+    static final ByteBuffer EMPTY_BUFFER = ByteBuffer.allocate(0);
+
+    static ApplicationBufferHandler EMPTY = new ApplicationBufferHandler() {
+        @Override
+        public void expand(int newSize) {
+        }
+        @Override
+        public void setByteBuffer(ByteBuffer buffer) {
+        }
+        @Override
+        public ByteBuffer getByteBuffer() {
+            return EMPTY_BUFFER;
+        }
+    };
+
     public void setByteBuffer(ByteBuffer buffer);
 
     public ByteBuffer getByteBuffer();

==================================================
NioChannel.java
index 9c57f02d12..a2612fd0c1 100644
--- a/java/org/apache/tomcat/util/net/Nio2Channel.java
+++ b/java/org/apache/tomcat/util/net/Nio2Channel.java
@@ -263,6 +263,10 @@ public class Nio2Channel implements AsynchronousByteChannel {
         public void free() {
         }
         @Override
+        protected ApplicationBufferHandler getAppReadBufHandler() {
+            return ApplicationBufferHandler.EMPTY;
+        }
+        @Override
         public void setAppReadBufHandler(ApplicationBufferHandler handler) {
         }
         @Override

==================================================
