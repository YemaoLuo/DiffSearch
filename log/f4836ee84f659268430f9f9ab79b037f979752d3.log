f4836ee84f659268430f9f9ab79b037f979752d3
==================================================
Fixed findbugs issues:
==================================================
Violeta Georgieva
==================================================
Fri Dec 18 12:36:35 2015 +0000
==================================================
CGIServlet.java
Fixed findbugs issues:
- Concatenates strings using + in a loop
- Useless condition

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1720769 13f79535-47bb-0310-9956-ffa450edef68



==================================================
CredentialHandlerRuleSet.java
index 822f5b3fa6..fa43ee27ad 100644
--- a/java/org/apache/catalina/servlets/CGIServlet.java
+++ b/java/org/apache/catalina/servlets/CGIServlet.java
@@ -870,7 +870,6 @@ public final class CGIServlet extends HttpServlet {
             String path = null;
             String name = null;
             String scriptname = null;
-            String cginame = "";
 
             if ((webAppRootDir != null)
                 && (webAppRootDir.lastIndexOf(File.separator) ==
@@ -895,14 +894,16 @@ public final class CGIServlet extends HttpServlet {
             if (debug >= 3) {
                 log("findCGI: currentLoc=" + currentLocation);
             }
+            StringBuilder cginameBuilder = new StringBuilder();
             while (!currentLocation.isFile() && dirWalker.hasMoreElements()) {
                 if (debug >= 3) {
                     log("findCGI: currentLoc=" + currentLocation);
                 }
                 String nextElement = (String) dirWalker.nextElement();
                 currentLocation = new File(currentLocation, nextElement);
-                cginame = cginame + "/" + nextElement;
+                cginameBuilder.append("/").append(nextElement);
             }
+            String cginame = cginameBuilder.toString();
             if (!currentLocation.isFile()) {
                 return new String[] { null, null, null, null };
             }

==================================================
RealmRuleSet.java
index 0c7faefaa7..8c8714a2a2 100644
--- a/java/org/apache/catalina/startup/CredentialHandlerRuleSet.java
+++ b/java/org/apache/catalina/startup/CredentialHandlerRuleSet.java
@@ -80,29 +80,21 @@ public class CredentialHandlerRuleSet extends RuleSetBase {
      */
     @Override
     public void addRuleInstances(Digester digester) {
-
-        String pattern = prefix;
-
+        StringBuilder pattern = new StringBuilder(prefix);
         for (int i = 0; i < MAX_NESTED_LEVELS; i++) {
-
             if (i > 0) {
-                pattern += "/";
-            }
-            pattern += "CredentialHandler";
-
-            digester.addObjectCreate(pattern,
-                                     null, // MUST be specified in the element,
-                                     "className");
-            digester.addSetProperties(pattern);
-            if (i == 0) {
-                digester.addSetNext(pattern,
-                                    "setCredentialHandler",
-                                    "org.apache.catalina.CredentialHandler");
-            } else {
-                digester.addSetNext(pattern,
-                                    "addCredentialHandler",
-                                    "org.apache.catalina.CredentialHandler");
+                pattern.append("/");
             }
+            pattern.append("CredentialHandler");
+            addRuleInstances(digester, pattern.toString(), i == 0 ? "setCredentialHandler"
+                    : "addCredentialHandler");
         }
     }
+
+    private void addRuleInstances(Digester digester, String pattern, String methodName) {
+        digester.addObjectCreate(pattern, null /* MUST be specified in the element */,
+                "className");
+        digester.addSetProperties(pattern);
+        digester.addSetNext(pattern, methodName, "org.apache.catalina.CredentialHandler");
+    }
 }

==================================================
JspRuntimeLibrary.java
index fda030257f..6c1147dbfb 100644
--- a/java/org/apache/catalina/startup/RealmRuleSet.java
+++ b/java/org/apache/catalina/startup/RealmRuleSet.java
@@ -83,30 +83,21 @@ public class RealmRuleSet extends RuleSetBase {
      */
     @Override
     public void addRuleInstances(Digester digester) {
-
-        String pattern = prefix;
-
+        StringBuilder pattern = new StringBuilder(prefix);
         for (int i = 0; i < MAX_NESTED_REALM_LEVELS; i++) {
-
             if (i > 0) {
-                pattern += "/";
+                pattern.append("/");
             }
-            pattern += "Realm";
-
-            digester.addObjectCreate(pattern,
-                                     null, // MUST be specified in the element,
-                                     "className");
-            digester.addSetProperties(pattern);
-            if (i == 0) {
-                digester.addSetNext(pattern,
-                                    "setRealm",
-                                    "org.apache.catalina.Realm");
-            } else {
-                digester.addSetNext(pattern,
-                                    "addRealm",
-                                    "org.apache.catalina.Realm");
-            }
-            digester.addRuleSet(new CredentialHandlerRuleSet(pattern + "/"));
+            pattern.append("Realm");
+            addRuleInstances(digester, pattern.toString(), i == 0 ? "setRealm" : "addRealm");
         }
     }
+
+    private void addRuleInstances(Digester digester, String pattern, String methodName) {
+        digester.addObjectCreate(pattern, null /* MUST be specified in the element */,
+                "className");
+        digester.addSetProperties(pattern);
+        digester.addSetNext(pattern, methodName, "org.apache.catalina.Realm");
+        digester.addRuleSet(new CredentialHandlerRuleSet(pattern + "/"));
+    }
 }

==================================================
XMLEncodingDetector.java
index 6e86a2d4c7..dc2687b086 100644
--- a/java/org/apache/jasper/runtime/JspRuntimeLibrary.java
+++ b/java/org/apache/jasper/runtime/JspRuntimeLibrary.java
@@ -544,21 +544,23 @@ public class JspRuntimeLibrary {
      */
 
     public static String escapeQueryString(String unescString) {
-    if ( unescString == null )
-        return null;
+        if (unescString == null) {
+            return null;
+        }
 
-    String escString    = "";
-    String shellSpChars = "&;`'\"|*?~<>^()[]{}$\\\n";
+        StringBuilder escStringBuilder = new StringBuilder();
+        String shellSpChars = "&;`'\"|*?~<>^()[]{}$\\\n";
 
-    for(int index=0; index<unescString.length(); index++) {
-        char nextChar = unescString.charAt(index);
+        for (int index = 0; index < unescString.length(); index++) {
+            char nextChar = unescString.charAt(index);
 
-        if( shellSpChars.indexOf(nextChar) != -1 )
-        escString += "\\";
+            if (shellSpChars.indexOf(nextChar) != -1) {
+                escStringBuilder.append("\\");
+            }
 
-        escString += nextChar;
-    }
-    return escString;
+            escStringBuilder.append(nextChar);
+        }
+        return escStringBuilder.toString();
     }
 
     // __begin lookupReadMethodMethod

==================================================
HttpParser.java
index 47a0d45996..3213d6b243 100644
--- a/java/org/apache/jasper/xmlparser/XMLEncodingDetector.java
+++ b/java/org/apache/jasper/xmlparser/XMLEncodingDetector.java
@@ -157,7 +157,7 @@ public class XMLEncodingDetector {
                 // Special case UTF-8 files with BOM created by Microsoft
                 // tools. It's more efficient to consume the BOM than make
                 // the reader perform extra checks. -Ac
-                if (count > 2 && encoding.equals("UTF-8")) {
+                if (encoding.equals("UTF-8")) {
                     int b0 = b4[0] & 0xFF;
                     int b1 = b4[1] & 0xFF;
                     int b2 = b4[2] & 0xFF;

==================================================
