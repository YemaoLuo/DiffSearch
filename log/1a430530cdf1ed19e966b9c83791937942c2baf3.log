1a430530cdf1ed19e966b9c83791937942c2baf3
==================================================
Refactor JNI out of bean classes
==================================================
remm remm@apache.org
==================================================
Wed Oct 6 16:59:59 2021 +0200
==================================================
OpenSSLConf.java
Refactor JNI out of bean classes

They are used in SSLHostConfig, so this ties everything to the JNI code.


==================================================
OpenSSLContext.java
index 8ab720ccba..f234e03600 100644
--- a/java/org/apache/tomcat/util/net/openssl/OpenSSLConf.java
+++ b/java/org/apache/tomcat/util/net/openssl/OpenSSLConf.java
@@ -20,18 +20,10 @@ import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.List;
 
-import org.apache.juli.logging.Log;
-import org.apache.juli.logging.LogFactory;
-import org.apache.tomcat.jni.SSLConf;
-import org.apache.tomcat.util.res.StringManager;
-
 public class OpenSSLConf implements Serializable {
 
     private static final long serialVersionUID = 1L;
 
-    private static final Log log = LogFactory.getLog(OpenSSLConf.class);
-    private static final StringManager sm = StringManager.getManager(OpenSSLConf.class);
-
     private final List<OpenSSLConfCmd> commands = new ArrayList<>();
 
     public void addCmd(OpenSSLConfCmd cmd) {
@@ -42,87 +34,4 @@ public class OpenSSLConf implements Serializable {
         return commands;
     }
 
-    public boolean check(long cctx) throws Exception {
-        boolean result = true;
-        OpenSSLConfCmd cmd;
-        String name;
-        String value;
-        int rc;
-        for (OpenSSLConfCmd command : commands) {
-            cmd = command;
-            name = cmd.getName();
-            value = cmd.getValue();
-            if (name == null) {
-                log.error(sm.getString("opensslconf.noCommandName", value));
-                result = false;
-                continue;
-            }
-            if (log.isDebugEnabled()) {
-                log.debug(sm.getString("opensslconf.checkCommand", name, value));
-            }
-            try {
-                rc = SSLConf.check(cctx, name, value);
-            } catch (Exception e) {
-                log.error(sm.getString("opensslconf.checkFailed"));
-                return false;
-            }
-            if (rc <= 0) {
-                log.error(sm.getString("opensslconf.failedCommand", name, value,
-                        Integer.toString(rc)));
-                result = false;
-            } else if (log.isDebugEnabled()) {
-                log.debug(sm.getString("opensslconf.resultCommand", name, value,
-                        Integer.toString(rc)));
-            }
-        }
-        if (!result) {
-            log.error(sm.getString("opensslconf.checkFailed"));
-        }
-        return result;
-    }
-
-    public boolean apply(long cctx, long ctx) throws Exception {
-        boolean result = true;
-        SSLConf.assign(cctx, ctx);
-        OpenSSLConfCmd cmd;
-        String name;
-        String value;
-        int rc;
-        for (OpenSSLConfCmd command : commands) {
-            cmd = command;
-            name = cmd.getName();
-            value = cmd.getValue();
-            if (name == null) {
-                log.error(sm.getString("opensslconf.noCommandName", value));
-                result = false;
-                continue;
-            }
-            if (log.isDebugEnabled()) {
-                log.debug(sm.getString("opensslconf.applyCommand", name, value));
-            }
-            try {
-                rc = SSLConf.apply(cctx, name, value);
-            } catch (Exception e) {
-                log.error(sm.getString("opensslconf.applyFailed"));
-                return false;
-            }
-            if (rc <= 0) {
-                log.error(sm.getString("opensslconf.failedCommand", name, value,
-                        Integer.toString(rc)));
-                result = false;
-            } else if (log.isDebugEnabled()) {
-                log.debug(sm.getString("opensslconf.resultCommand", name, value,
-                        Integer.toString(rc)));
-            }
-        }
-        rc = SSLConf.finish(cctx);
-        if (rc <= 0) {
-            log.error(sm.getString("opensslconf.finishFailed", Integer.toString(rc)));
-            result = false;
-        }
-        if (!result) {
-            log.error(sm.getString("opensslconf.applyFailed"));
-        }
-        return result;
-    }
 }

==================================================
