a0926ebcc44e38d74e29f4f3bf1993f823ef3b6d
==================================================
Add get/set method for the channel that is related to each Channel services.
==================================================
Keiichi Fujino
==================================================
Mon Apr 18 07:47:52 2016 +0000
==================================================
ChannelReceiver.java
Add get/set method for the channel that is related to each Channel services.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1739699 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ChannelSender.java
index b1dae2eb1c..0ae647922e 100644
--- a/java/org/apache/catalina/tribes/ChannelReceiver.java
+++ b/java/org/apache/catalina/tribes/ChannelReceiver.java
@@ -78,4 +78,16 @@ public interface ChannelReceiver extends Heartbeat {
      */
     public MessageListener getMessageListener();
 
+    /**
+     * Return the channel that is related to this ChannelReceiver
+     * @return Channel
+     */
+    public Channel getChannel();
+
+    /**
+     * Set the channel that is related to this ChannelReceiver
+     * @param channel The channel
+     */
+    public void setChannel(Channel channel);
+
 }

==================================================
MembershipService.java
index 5e14cf144e..2d33b50eac 100644
--- a/java/org/apache/catalina/tribes/ChannelSender.java
+++ b/java/org/apache/catalina/tribes/ChannelSender.java
@@ -68,4 +68,17 @@ public interface ChannelSender extends Heartbeat
      * @see ChannelException#addFaultyMember(Member,java.lang.Exception)
      */
     public void sendMessage(ChannelMessage message, Member[] destination) throws ChannelException;
+
+    /**
+     * Return the channel that is related to this ChannelSender
+     * @return Channel
+     */
+    public Channel getChannel();
+
+    /**
+     * Set the channel that is related to this ChannelSender
+     * @param channel The channel
+     */
+    public void setChannel(Channel channel);
+
 }

==================================================
ChannelCoordinator.java
index fb6f8db639..f93ed8fda3 100644
--- a/java/org/apache/catalina/tribes/MembershipService.java
+++ b/java/org/apache/catalina/tribes/MembershipService.java
@@ -144,4 +144,16 @@ public interface MembershipService {
      */
     public void broadcast(ChannelMessage message) throws ChannelException;
 
+    /**
+     * Return the channel that is related to this MembershipService
+     * @return Channel
+     */
+    public Channel getChannel();
+
+    /**
+     * Set the channel that is related to this MembershipService
+     * @param channel The channel
+     */
+    public void setChannel(Channel channel);
+
 }

==================================================
McastService.java
index 6b7652259b..cda693e0d1 100644
--- a/java/org/apache/catalina/tribes/group/ChannelCoordinator.java
+++ b/java/org/apache/catalina/tribes/group/ChannelCoordinator.java
@@ -167,10 +167,12 @@ public class ChannelCoordinator extends ChannelInterceptorBase implements Messag
                             getClusterReceiver().getSecurePort(),
                             getClusterReceiver().getUdpPort());
                 }
+                clusterReceiver.setChannel(getChannel());
                 valid = true;
             }
             if ( Channel.SND_TX_SEQ==(svc & Channel.SND_TX_SEQ) ) {
                 clusterSender.start();
+                clusterSender.setChannel(getChannel());
                 valid = true;
             }
 
@@ -180,10 +182,12 @@ public class ChannelCoordinator extends ChannelInterceptorBase implements Messag
                     ((McastService)membershipService).setMessageListener(this);
                 }
                 membershipService.start(MembershipService.MBR_RX);
+                membershipService.setChannel(getChannel());
                 valid = true;
             }
             if ( Channel.MBR_TX_SEQ==(svc & Channel.MBR_TX_SEQ) ) {
                 membershipService.start(MembershipService.MBR_TX);
+                membershipService.setChannel(getChannel());
                 valid = true;
             }
 

==================================================
McastServiceImpl.java
index 18bbac50aa..f83aa87ed2 100644
--- a/java/org/apache/catalina/tribes/membership/McastService.java
+++ b/java/org/apache/catalina/tribes/membership/McastService.java
@@ -78,6 +78,8 @@ public class McastService implements MembershipService,MembershipListener,Messag
 
     protected byte[] domain;
 
+    private Channel channel;
+
     /**
      * Create a membership service.
      */
@@ -358,7 +360,7 @@ public class McastService implements MembershipService,MembershipListener,Messag
         impl.setRecoveryCounter(recCnt);
         long recSlpTime = Long.parseLong(properties.getProperty("recoverySleepTime","5000"));
         impl.setRecoverySleepTime(recSlpTime);
-
+        impl.setChannel(channel);
 
         impl.start(level);
 
@@ -565,6 +567,16 @@ public class McastService implements MembershipService,MembershipListener,Messag
         else setDomain(Arrays.convert(domain));
     }
 
+    @Override
+    public Channel getChannel() {
+        return channel;
+    }
+
+    @Override
+    public void setChannel(Channel channel) {
+        this.channel = channel;
+    }
+
     /**
      * Simple test program
      * @param args Command-line arguments

==================================================
ReceiverBase.java
index e69393db34..ba4758c843 100644
--- a/java/org/apache/catalina/tribes/membership/McastServiceImpl.java
+++ b/java/org/apache/catalina/tribes/membership/McastServiceImpl.java
@@ -155,6 +155,8 @@ public class McastServiceImpl {
      */
     protected final boolean localLoopbackDisabled;
 
+    private Channel channel;
+
     /**
      * Create a new mcast service instance.
      * @param member - the local member
@@ -531,6 +533,14 @@ public class McastServiceImpl {
         return recoverySleepTime;
     }
 
+    public Channel getChannel() {
+        return channel;
+    }
+
+    public void setChannel(Channel channel) {
+        this.channel = channel;
+    }
+
     public class ReceiverThread extends Thread {
         int errorCounter = 0;
         public ReceiverThread() {

==================================================
ReplicationTransmitter.java
index a1566cff6b..e45dca2c16 100644
--- a/java/org/apache/catalina/tribes/transport/ReceiverBase.java
+++ b/java/org/apache/catalina/tribes/transport/ReceiverBase.java
@@ -26,6 +26,7 @@ import java.util.concurrent.ThreadFactory;
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicInteger;
 
+import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.ChannelMessage;
 import org.apache.catalina.tribes.ChannelReceiver;
 import org.apache.catalina.tribes.MessageListener;
@@ -79,7 +80,7 @@ public abstract class ReceiverBase implements ChannelReceiver, ListenCallback, R
     private long maxIdleTime = 60000;
 
     private ExecutorService executor;
-
+    private Channel channel;
 
     public ReceiverBase() {
     }
@@ -489,6 +490,16 @@ public abstract class ReceiverBase implements ChannelReceiver, ListenCallback, R
         this.udpTxBufSize = udpTxBufSize;
     }
 
+    @Override
+    public Channel getChannel() {
+        return channel;
+    }
+
+    @Override
+    public void setChannel(Channel channel) {
+        this.channel = channel;
+    }
+
     // ---------------------------------------------- ThreadFactory Inner Class
     class TaskThreadFactory implements ThreadFactory {
         final ThreadGroup group;

==================================================
