6911b45bf369df2a26a3a1e2106a1ee89af88de4
==================================================
Remove ActionCode.RESET
==================================================
Mark Thomas
==================================================
Fri Aug 12 07:46:12 2016 +0000
==================================================
ActionCode.java
Remove ActionCode.RESET
It was a NO-OP since:
- it could not be called after the response was committed
- until the response was committed there could be no data to reset

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1756089 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Response.java
index bf0c4a3891..b0e00ca311 100644
--- a/java/org/apache/coyote/ActionCode.java
+++ b/java/org/apache/coyote/ActionCode.java
@@ -47,8 +47,6 @@ public enum ActionCode {
      */
     CLIENT_FLUSH,
 
-    RESET,
-
     /**
      * Has the processor been placed into the error state? Note that the
      * response may not have an appropriate error code set.

==================================================
AjpProcessor.java
index 3cbc527755..3c5039c720 100644
--- a/java/org/apache/coyote/Response.java
+++ b/java/org/apache/coyote/Response.java
@@ -268,9 +268,6 @@ public final class Response {
         }
 
         recycle();
-
-        // Reset the stream
-        action(ActionCode.RESET, this);
     }
 
 

==================================================
Http11OutputBuffer.java
index e80ee97c4d..1e0c7a4002 100644
--- a/java/org/apache/coyote/ajp/AjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpProcessor.java
@@ -400,10 +400,6 @@ public class AjpProcessor extends AbstractProcessor {
             setRequestBody(body);
             break;
         }
-        case RESET: {
-            // NO-OP
-            break;
-        }
 
         // Error handling
         case IS_ERROR: {

==================================================
Http11Processor.java
index cb2fe22498..cc37b26dbf 100644
--- a/java/org/apache/coyote/http11/Http11OutputBuffer.java
+++ b/java/org/apache/coyote/http11/Http11OutputBuffer.java
@@ -244,24 +244,6 @@ public class Http11OutputBuffer implements OutputBuffer {
     }
 
 
-    /**
-     * Reset current response.
-     *
-     * @throws IllegalStateException if the response has already been committed
-     */
-    public void reset() {
-
-        if (response.isCommitted()) {
-            throw new IllegalStateException(sm.getString("iob.illegalreset"));
-        }
-
-        // These will need to be reset if the reset was triggered by the error
-        // handling if the headers were too large
-        pos = 0;
-        byteCount = 0;
-    }
-
-
     /**
      * Recycle the output buffer. This should be called when closing the
      * connection.

==================================================
Stream.java
index 36f7cf0384..09d129e7aa 100644
--- a/java/org/apache/coyote/http11/Http11Processor.java
+++ b/java/org/apache/coyote/http11/Http11Processor.java
@@ -693,11 +693,6 @@ public class Http11Processor extends AbstractProcessor {
             setRequestBody(body);
             break;
         }
-        case RESET: {
-            // Note: This must be called before the response is committed
-            outputBuffer.reset();
-            break;
-        }
 
         // Error handling
         case IS_ERROR: {

==================================================
StreamProcessor.java
index b0ed8ab451..7b4c187c3f 100644
--- a/java/org/apache/coyote/http2/Stream.java
+++ b/java/org/apache/coyote/http2/Stream.java
@@ -533,10 +533,6 @@ public class Stream extends AbstractStream implements HeaderEmitter {
             return false;
         }
 
-        synchronized void reset() {
-            buffer.clear();
-        }
-
         synchronized boolean isReady() {
             if (getWindowSize() > 0 && handler.getWindowSize() > 0) {
                 return true;

==================================================
