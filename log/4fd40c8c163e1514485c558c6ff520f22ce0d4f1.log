4fd40c8c163e1514485c558c6ff520f22ce0d4f1
==================================================
Handful of Javadoc fixes
==================================================
Mark Emlyn
==================================================
Mon Aug 2 17:05:03 2010 +0000
==================================================
ApplicationContext.java
Handful of Javadoc fixes

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@981602 13f79535-47bb-0310-9956-ffa450edef68



==================================================
StandardServer.java
index fde811e553..bf0f513fe3 100644
--- a/java/org/apache/catalina/core/ApplicationContext.java
+++ b/java/org/apache/catalina/core/ApplicationContext.java
@@ -864,8 +864,8 @@ public class ApplicationContext
      * @param   filterName  Name of filter to add
      * @param   filterClass Name of filter class
      * @return  <code>null</code> if the filter has already been fully defined,
-     *          else a {@link FilterRegistration.Dynamic} object that can be
-     *          used to further configure the filter
+     *          else a {@link javax.servlet.FilterRegistration.Dynamic} object
+     *          that can be used to further configure the filter
      * @throws IllegalStateException if the context has already been initialised
      * @throws UnsupportedOperationException - if this context was passed to the
      *         {@link ServletContextListener#contextInitialized(javax.servlet.ServletContextEvent)}
@@ -884,8 +884,8 @@ public class ApplicationContext
      * @param   filterName  Name of filter to add
      * @param   filter      Filter to add
      * @return  <code>null</code> if the filter has already been fully defined,
-     *          else a {@link FilterRegistration.Dynamic} object that can be
-     *          used to further configure the filter
+     *          else a {@link javax.servlet.FilterRegistration.Dynamic} object
+     *          that can be used to further configure the filter
      * @throws IllegalStateException if the context has already been initialised
      * @throws UnsupportedOperationException - if this context was passed to the
      *         {@link ServletContextListener#contextInitialized(javax.servlet.ServletContextEvent)}
@@ -904,8 +904,8 @@ public class ApplicationContext
      * @param   filterName  Name of filter to add
      * @param   filterClass Class of filter to add
      * @return  <code>null</code> if the filter has already been fully defined,
-     *          else a {@link FilterRegistration.Dynamic} object that can be
-     *          used to further configure the filter
+     *          else a {@link javax.servlet.FilterRegistration.Dynamic} object
+     *          that can be used to further configure the filter
      * @throws IllegalStateException if the context has already been initialised
      * @throws UnsupportedOperationException - if this context was passed to the
      *         {@link ServletContextListener#contextInitialized(javax.servlet.ServletContextEvent)}
@@ -993,8 +993,8 @@ public class ApplicationContext
      * @param   servletName  Name of servlet to add
      * @param   servletClass Name of servlet class
      * @return  <code>null</code> if the servlet has already been fully defined,
-     *          else a {@link ServletRegistration.Dynamic} object that can be
-     *          used to further configure the servlet
+     *          else a {@link javax.servlet.ServletRegistration.Dynamic} object
+     *          that can be used to further configure the servlet
      * @throws IllegalStateException if the context has already been initialised
      * @throws UnsupportedOperationException - if this context was passed to the
      *         {@link ServletContextListener#contextInitialized(javax.servlet.ServletContextEvent)}
@@ -1013,8 +1013,8 @@ public class ApplicationContext
      * @param   servletName Name of servlet to add
      * @param   servlet     Servlet instance to add
      * @return  <code>null</code> if the servlet has already been fully defined,
-     *          else a {@link ServletRegistration.Dynamic} object that can be
-     *          used to further configure the servlet
+     *          else a {@link javax.servlet.ServletRegistration.Dynamic} object
+     *          that can be used to further configure the servlet
      * @throws IllegalStateException if the context has already been initialised
      * @throws UnsupportedOperationException - if this context was passed to the
      *         {@link ServletContextListener#contextInitialized(javax.servlet.ServletContextEvent)}
@@ -1033,8 +1033,8 @@ public class ApplicationContext
      * @param   servletName  Name of servlet to add
      * @param   servletClass Class of servlet to add
      * @return  <code>null</code> if the servlet has already been fully defined,
-     *          else a {@link ServletRegistration.Dynamic} object that can be
-     *          used to further configure the servlet
+     *          else a {@link javax.servlet.ServletRegistration.Dynamic} object
+     *          that can be used to further configure the servlet
      * @throws IllegalStateException if the context has already been initialised
      * @throws UnsupportedOperationException - if this context was passed to the
      *         {@link ServletContextListener#contextInitialized(javax.servlet.ServletContextEvent)}

==================================================
ExpiresFilter.java
index d715b7f15d..e149bd7af9 100644
--- a/java/org/apache/catalina/core/StandardServer.java
+++ b/java/org/apache/catalina/core/StandardServer.java
@@ -34,6 +34,7 @@ import javax.management.ObjectName;
 import org.apache.catalina.Context;
 import org.apache.catalina.LifecycleException;
 import org.apache.catalina.LifecycleState;
+import org.apache.catalina.Engine;
 import org.apache.catalina.Server;
 import org.apache.catalina.Service;
 import org.apache.catalina.deploy.NamingResources;

==================================================
ClusterMessageBase.java
index d8e103883a..3ac8fd1896 100644
--- a/java/org/apache/catalina/filters/ExpiresFilter.java
+++ b/java/org/apache/catalina/filters/ExpiresFilter.java
@@ -354,7 +354,7 @@ import org.apache.juli.logging.LogFactory;
  * {@link #isEligibleToExpirationHeaderGeneration(HttpServletRequest, XHttpServletResponse)}
  * </li>
  * <li>
- * {@link #getExpirationDate(HttpServletRequest, XHttpServletResponse)}</li>
+ * {@link #getExpirationDate(XHttpServletResponse)}</li>
  * </ul>
  * </p>
  * <h1>Troubleshooting</h1>
@@ -1427,7 +1427,7 @@ public class ExpiresFilter extends FilterBase {
      * </p>
      * <p>
      * Invocations to <tt>Logger.debug(...)</tt> are guarded by
-     * {@link Logger#isDebugEnabled()} because
+     * {@link Log#isDebugEnabled()} because
      * {@link HttpServletRequest#getRequestURI()} and
      * {@link HttpServletResponse#getContentType()} costs <tt>String</tt>
      * objects instantiations (as of Tomcat 7).

==================================================
DeltaRequest.java
index 2dc0efa3ce..f5f5e44103 100644
--- a/java/org/apache/catalina/ha/ClusterMessageBase.java
+++ b/java/org/apache/catalina/ha/ClusterMessageBase.java
@@ -45,7 +45,7 @@ public class ClusterMessageBase implements ClusterMessage {
      * getAddress
      *
      * @return Member
-     * @todo Implement this org.apache.catalina.ha.ClusterMessage method
+     * TODO Implement this org.apache.catalina.ha.ClusterMessage method
      */
     public Member getAddress() {
         return address;
@@ -63,7 +63,7 @@ public class ClusterMessageBase implements ClusterMessage {
      * setAddress
      *
      * @param member Member
-     * @todo Implement this org.apache.catalina.ha.ClusterMessage method
+     * TODO Implement this org.apache.catalina.ha.ClusterMessage method
      */
     public void setAddress(Member member) {
         this.address = member;

==================================================
ReplicationValve.java
index 1b2c9e48b4..9a2ec5b39c 100644
--- a/java/org/apache/catalina/ha/session/DeltaRequest.java
+++ b/java/org/apache/catalina/ha/session/DeltaRequest.java
@@ -278,7 +278,6 @@ public class DeltaRequest implements Externalizable {
      * serialize DeltaRequest
      * @see DeltaRequest#writeExternal(java.io.ObjectOutput)
      * 
-     * @param deltaRequest
      * @return serialized delta request
      * @throws IOException
      */

==================================================
SimpleTcpCluster.java
index 4bbb34ad86..e3a8434388 100644
--- a/java/org/apache/catalina/ha/tcp/ReplicationValve.java
+++ b/java/org/apache/catalina/ha/tcp/ReplicationValve.java
@@ -516,7 +516,7 @@ public class ReplicationValve
 
    /**
     * Send message delta message from request session 
-    * @param request current request
+    * @param session current session
     * @param manager session manager
     * @param cluster replication cluster
     */

==================================================
