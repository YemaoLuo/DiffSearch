4b6d583443e212de1c5a2f0747b4237e6ae9e09a
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=52607
==================================================
Mark Emlyn
==================================================
Wed Feb 8 21:15:07 2012 +0000
==================================================
StandardServer.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=52607
The ExtensionValidator needs to be aware of the classes in the shared
and common loaders.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1242099 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ExtensionValidator.java
index ea855f9696..73a7cfde2b 100644
--- a/java/org/apache/catalina/core/StandardServer.java
+++ b/java/org/apache/catalina/core/StandardServer.java
@@ -24,6 +24,9 @@ import java.io.InputStream;
 import java.net.InetAddress;
 import java.net.ServerSocket;
 import java.net.Socket;
+import java.net.URISyntaxException;
+import java.net.URL;
+import java.net.URLClassLoader;
 import java.security.AccessControlException;
 import java.util.Random;
 
@@ -37,6 +40,7 @@ import org.apache.catalina.Service;
 import org.apache.catalina.deploy.NamingResources;
 import org.apache.catalina.mbeans.MBeanFactory;
 import org.apache.catalina.startup.Catalina;
+import org.apache.catalina.util.ExtensionValidator;
 import org.apache.catalina.util.LifecycleMBeanBase;
 import org.apache.catalina.util.ServerInfo;
 import org.apache.juli.logging.Log;
@@ -789,6 +793,35 @@ public final class StandardServer extends LifecycleMBeanBase implements Server {
         // Register the naming resources
         globalNamingResources.init();
 
+        // Populate the extension validator with JARs from common and shared
+        // class loaders
+        if (getCatalina() != null) {
+            ClassLoader cl =
+                    getCatalina().getParentClassLoader();
+            // Walk the class loader hierarchy. Stop at the system class loader.
+            // This will add the shared (if present) and common class loaders
+            while (cl != ClassLoader.getSystemClassLoader()) {
+                if (cl instanceof URLClassLoader) {
+                    URL[] urls = ((URLClassLoader) cl).getURLs();
+                    for (URL url : urls) {
+                        if (url.getProtocol().equals("file")) {
+                            try {
+                                File f = new File (url.toURI());
+                                if (f.isFile() &&
+                                        f.getName().endsWith(".jar")) {
+                                    ExtensionValidator.addSystemResource(f);
+                                }
+                            } catch (URISyntaxException e) {
+                                // Ignore
+                            } catch (IOException e) {
+                                // Ignore
+                            }
+                        }
+                    }
+                }
+                cl = cl.getParent();
+            }
+        }
         // Initialize our defined Services
         for (int i = 0; i < services.length; i++) {
             services[i].init();

==================================================
