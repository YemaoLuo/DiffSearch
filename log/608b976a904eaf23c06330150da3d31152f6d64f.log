608b976a904eaf23c06330150da3d31152f6d64f
==================================================
Don't duplicate storage of clientCertProvider in the Processor
==================================================
Mark Thomas
==================================================
Wed Dec 14 11:06:33 2016 +0000
==================================================
AbstractProtocol.java
Don't duplicate storage of clientCertProvider in the Processor

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1774188 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AbstractAjpProtocol.java
index e1e80c431d..075b97f240 100644
--- a/java/org/apache/coyote/AbstractProtocol.java
+++ b/java/org/apache/coyote/AbstractProtocol.java
@@ -170,6 +170,7 @@ public abstract class AbstractProtocol<S> implements ProtocolHandler,
     }
 
 
+    private String clientCertProvider = null;
     /**
      * When client certificate information is presented in a form other than
      * instances of {@link java.security.cert.X509Certificate} it needs to be
@@ -178,8 +179,9 @@ public abstract class AbstractProtocol<S> implements ProtocolHandler,
      * the AJP connectors, the HTTP APR connector and with the
      * {@link org.apache.catalina.valves.SSLValve}. If not specified, the
      * default provider will be used.
+     *
+     * @return The name of the JSSE provider to use
      */
-    protected String clientCertProvider = null;
     public String getClientCertProvider() { return clientCertProvider; }
     public void setClientCertProvider(String s) { this.clientCertProvider = s; }
 

==================================================
AjpProcessor.java
index 5ee92ff74f..b1fbc3b9bf 100644
--- a/java/org/apache/coyote/ajp/AbstractAjpProtocol.java
+++ b/java/org/apache/coyote/ajp/AbstractAjpProtocol.java
@@ -197,7 +197,6 @@ public abstract class AbstractAjpProtocol<S> extends AbstractProtocol<S> {
     protected Processor createProcessor() {
         AjpProcessor processor = new AjpProcessor(this);
         processor.setAdapter(getAdapter());
-        processor.setClientCertProvider(getClientCertProvider());
         return processor;
     }
 

==================================================
