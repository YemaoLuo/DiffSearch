d26699a22752ca1d84f87cf0792b940954ecb07b
==================================================
More Javadoc fixes that were missed earlier
==================================================
Mark Emlyn
==================================================
Tue Aug 3 11:14:02 2010 +0000
==================================================
AsyncContext.java
More Javadoc fixes that were missed earlier

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@981822 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AsyncEvent.java
index 66dec458d1..a2ac2a3e7c 100644
--- a/java/javax/servlet/AsyncContext.java
+++ b/java/javax/servlet/AsyncContext.java
@@ -17,9 +17,9 @@
 package javax.servlet;
 
 /**
- * @since Servlet 3.0
  * $Id$
  * TODO SERVLET3 - Add comments
+ * @since Servlet 3.0
  */
 public interface AsyncContext {
     public static final String ASYNC_REQUEST_URI =

==================================================
FilterConfig.java
index cde734747c..904685642f 100644
--- a/java/javax/servlet/AsyncEvent.java
+++ b/java/javax/servlet/AsyncEvent.java
@@ -17,8 +17,8 @@
 package javax.servlet;
 
 /**
- * @since Servlet 3.0
  * TODO SERVLET3 - Add comments
+ * @since Servlet 3.0
  */
 public class AsyncEvent {
     private AsyncContext context;

==================================================
GenericServlet.java
index 79fffd2203..30bba6480d 100644
--- a/java/javax/servlet/FilterConfig.java
+++ b/java/javax/servlet/FilterConfig.java
@@ -25,7 +25,7 @@ import java.util.Enumeration;
  * to a filter during initialization.
  * 
  * @see Filter
- * @sinceServlet 2.3
+ * @since Servlet 2.3
  */
 public interface FilterConfig {
 
@@ -42,7 +42,7 @@ public interface FilterConfig {
      * @return {@link ServletContext} object, used by the caller to interact
      *         with its servlet container
      * 
-     * @seeServletContext
+     * @see ServletContext
      */
     public ServletContext getServletContext();
 

==================================================
ServletContext.java
index 15eb0f5e49..4e5f54cc96 100644
--- a/java/javax/servlet/GenericServlet.java
+++ b/java/javax/servlet/GenericServlet.java
@@ -20,23 +20,19 @@ import java.io.IOException;
 import java.util.Enumeration;
 
 /**
- * 
  * Defines a generic, protocol-independent servlet. To write an HTTP servlet for
  * use on the Web, extend {@link javax.servlet.http.HttpServlet} instead.
- * 
  * <p>
  * <code>GenericServlet</code> implements the <code>Servlet</code> and
  * <code>ServletConfig</code> interfaces. <code>GenericServlet</code> may be
  * directly extended by a servlet, although it's more common to extend a
  * protocol-specific subclass such as <code>HttpServlet</code>.
- * 
  * <p>
  * <code>GenericServlet</code> makes writing servlets easier. It provides simple
  * versions of the lifecycle methods <code>init</code> and <code>destroy</code>
  * and of the methods in the <code>ServletConfig</code> interface.
  * <code>GenericServlet</code> also implements the <code>log</code> method,
  * declared in the <code>ServletContext</code> interface.
- * 
  * <p>
  * To write a generic servlet, you need only override the abstract
  * <code>service</code> method.
@@ -68,7 +64,6 @@ public abstract class GenericServlet implements Servlet, ServletConfig,
      * Returns a <code>String</code> containing the value of the named
      * initialization parameter, or <code>null</code> if the parameter does not
      * exist. See {@link ServletConfig#getInitParameter}.
-     * 
      * <p>
      * This method is supplied for convenience. It gets the value of the named
      * parameter from the servlet's <code>ServletConfig</code> object.
@@ -76,7 +71,6 @@ public abstract class GenericServlet implements Servlet, ServletConfig,
      * @param name
      *            a <code>String</code> specifying the name of the
      *            initialization parameter
-     * 
      * @return String a <code>String</code> containing the value of the
      *         initialization parameter
      */
@@ -89,7 +83,6 @@ public abstract class GenericServlet implements Servlet, ServletConfig,
      * <code>Enumeration</code> of <code>String</code> objects, or an empty
      * <code>Enumeration</code> if the servlet has no initialization parameters.
      * See {@link ServletConfig#getInitParameterNames}.
-     * 
      * <p>
      * This method is supplied for convenience. It gets the parameter names from
      * the servlet's <code>ServletConfig</code> object.
@@ -114,12 +107,10 @@ public abstract class GenericServlet implements Servlet, ServletConfig,
     /**
      * Returns a reference to the {@link ServletContext} in which this servlet
      * is running. See {@link ServletConfig#getServletContext}.
-     * 
      * <p>
      * This method is supplied for convenience. It gets the context from the
      * servlet's <code>ServletConfig</code> object.
      * 
-     * 
      * @return ServletContext the <code>ServletContext</code> object passed to
      *         this servlet by the <code>init</code> method
      */
@@ -142,7 +133,6 @@ public abstract class GenericServlet implements Servlet, ServletConfig,
     /**
      * Called by the servlet container to indicate to a servlet that the servlet
      * is being placed into service. See {@link Servlet#init}.
-     * 
      * <p>
      * This implementation stores the {@link ServletConfig} object it receives
      * from the servlet container for later use. When overriding this form of
@@ -151,11 +141,9 @@ public abstract class GenericServlet implements Servlet, ServletConfig,
      * @param config
      *            the <code>ServletConfig</code> object that contains
      *            configuration information for this servlet
-     * 
      * @exception ServletException
      *                if an exception occurs that interrupts the servlet's
      *                normal operation
-     * 
      * @see UnavailableException
      */
     public void init(ServletConfig config) throws ServletException {
@@ -166,7 +154,6 @@ public abstract class GenericServlet implements Servlet, ServletConfig,
     /**
      * A convenience method which can be overridden so that there's no need to
      * call <code>super.init(config)</code>.
-     * 
      * <p>
      * Instead of overriding {@link #init(ServletConfig)}, simply override this
      * method and it will be called by
@@ -201,9 +188,8 @@ public abstract class GenericServlet implements Servlet, ServletConfig,
      * 
      * @param message
      *            a <code>String</code> that describes the error or exception
-     * 
-     * @param tthe
-     *            <code>java.lang.Throwable</code> error or exception
+     * @param t
+     *            the <code>java.lang.Throwable</code> error or exception
      */
     public void log(String message, Throwable t) {
         getServletContext().log(getServletName() + ": " + message, t);
@@ -212,7 +198,6 @@ public abstract class GenericServlet implements Servlet, ServletConfig,
     /**
      * Called by the servlet container to allow the servlet to respond to a
      * request. See {@link Servlet#service}.
-     * 
      * <p>
      * This method is declared abstract so subclasses, such as
      * <code>HttpServlet</code>, must override it.
@@ -220,15 +205,12 @@ public abstract class GenericServlet implements Servlet, ServletConfig,
      * @param req
      *            the <code>ServletRequest</code> object that contains the
      *            client's request
-     * 
      * @param res
      *            the <code>ServletResponse</code> object that will contain the
      *            servlet's response
-     * 
      * @exception ServletException
      *                if an exception occurs that interferes with the servlet's
      *                normal operation occurred
-     * 
      * @exception IOException
      *                if an input or output exception occurs
      */

==================================================
ServletRequestWrapper.java
index feadfb944b..88d098d0ee 100644
--- a/java/javax/servlet/ServletContext.java
+++ b/java/javax/servlet/ServletContext.java
@@ -678,7 +678,6 @@ public interface ServletContext {
     /**
      * @param <T>
      * @param t
-     * @return TODO
      * @since Servlet 3.0 TODO SERVLET3 - Add comments
      */
     public <T extends EventListener> void addListener(T t);

==================================================
WebInitParam.java
index 3c468bd44f..b4610487c1 100644
--- a/java/javax/servlet/ServletRequestWrapper.java
+++ b/java/javax/servlet/ServletRequestWrapper.java
@@ -316,7 +316,6 @@ public class ServletRequestWrapper implements ServletRequest {
      * The default behavior of this method is to return getServletContext() on
      * the wrapped request object.
      * 
-     * @return
      * @since Servlet 3.0
      */
     public ServletContext getServletContext() {
@@ -327,7 +326,6 @@ public class ServletRequestWrapper implements ServletRequest {
      * The default behavior of this method is to return startAsync() on the
      * wrapped request object.
      * 
-     * @return
      * @throws java.lang.IllegalStateException
      * @since Servlet 3.0
      */
@@ -341,7 +339,6 @@ public class ServletRequestWrapper implements ServletRequest {
      * 
      * @param servletRequest
      * @param servletResponse
-     * @return
      * @throws java.lang.IllegalStateException
      * @since Servlet 3.0
      */
@@ -354,7 +351,6 @@ public class ServletRequestWrapper implements ServletRequest {
      * The default behavior of this method is to return isAsyncStarted() on the
      * wrapped request object.
      * 
-     * @return
      * @since Servlet 3.0
      */
     public boolean isAsyncStarted() {
@@ -365,7 +361,6 @@ public class ServletRequestWrapper implements ServletRequest {
      * The default behavior of this method is to return isAsyncSupported() on
      * the wrapped request object.
      * 
-     * @return
      * @since Servlet 3.0
      */
     public boolean isAsyncSupported() {
@@ -376,7 +371,6 @@ public class ServletRequestWrapper implements ServletRequest {
      * The default behavior of this method is to return getAsyncContext() on the
      * wrapped request object.
      * 
-     * @return
      * @since Servlet 3.0
      */
     public AsyncContext getAsyncContext() {

==================================================
Cookie.java
index b99fa1ccab..d4b7573365 100644
--- a/java/javax/servlet/annotation/WebInitParam.java
+++ b/java/javax/servlet/annotation/WebInitParam.java
@@ -30,7 +30,7 @@ import java.lang.annotation.Target;
  * <br />
  * 
  * E.g.
- * <code>@WebServlet(name="TestServlet", urlPatterns={"/test"},initParams={@WebInitParam(name="test", value="true")})
+ * <code>&amp;#064;WebServlet(name="TestServlet", urlPatterns={"/test"},initParams={&amp;#064;WebInitParam(name="test", value="true")})
  * public class TestServlet extends HttpServlet { ... </code><br />
  * 
  * @since Servlet 3.0

==================================================
