aa2c30b3f678622364f64124a365552488b80699
==================================================
Add support for the enabled attribute for servlets in web.xml
==================================================
Mark Emlyn
==================================================
Tue Dec 29 14:13:24 2009 +0000
==================================================
Wrapper.java
Add support for the enabled attribute for servlets in web.xml

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@894393 13f79535-47bb-0310-9956-ffa450edef68



==================================================
StandardWrapper.java
index fbefbd3c2e..6880c95e0a 100644
--- a/java/org/apache/catalina/Wrapper.java
+++ b/java/org/apache/catalina/Wrapper.java
@@ -360,4 +360,15 @@ public interface Wrapper extends Container {
      * Set the async support for the associated servlet.
      */
     public void setAsyncSupported(boolean asyncSupport);
+    
+    /**
+     * Is the associated Servlet enabled? Defaults to <code>true</code>.
+     */
+    public boolean isEnabled();
+    
+    /**
+     * Sets the enabled attribute for the associated servlet.
+     */
+    public void setEnabled(boolean enabled);
+
 }

==================================================
ServletDef.java
index 5b8843443c..b112c64c66 100644
--- a/java/org/apache/catalina/core/StandardWrapper.java
+++ b/java/org/apache/catalina/core/StandardWrapper.java
@@ -266,6 +266,11 @@ public class StandardWrapper
      */
     protected boolean asyncSupported = true;
 
+    /**
+     * Enabled
+     */
+    protected boolean enabled = true;
+
     /**
      * Static class array used when the SecurityManager is turned on and 
      * <code>Servlet.init</code> is invoked.
@@ -586,13 +591,15 @@ public class StandardWrapper
      */
     public boolean isUnavailable() {
 
-        if (available == 0L)
-            return (false);
+        if (!isEnabled())
+            return true;
+        else if (available == 0L)
+            return false;
         else if (available <= System.currentTimeMillis()) {
             available = 0L;
-            return (false);
+            return false;
         } else
-            return (true);
+            return true;
 
     }
 
@@ -1516,6 +1523,14 @@ public class StandardWrapper
         this.asyncSupported = asyncSupported;
     }
 
+    public boolean isEnabled() {
+        return enabled;
+    }
+    
+    public void setEnabled(boolean enabled) {
+        this.enabled = enabled;
+    }
+
     // -------------------------------------------------------- Package Methods
 
 

==================================================
WebRuleSet.java
index 94134d304f..881b4ef7ad 100644
--- a/java/org/apache/catalina/deploy/ServletDef.java
+++ b/java/org/apache/catalina/deploy/ServletDef.java
@@ -234,4 +234,18 @@ public class ServletDef implements Serializable {
     public void setAsyncSupported(String asyncSupported) {
         this.asyncSupported = Boolean.valueOf(asyncSupported);
     }
+
+    
+    /**
+     * Is this servlet enabled.
+     */
+    private Boolean enabled = null;
+    
+    public Boolean getEnabled() {
+        return this.enabled;
+    }
+    
+    public void setEnabled(String enabled) {
+        this.enabled = Boolean.valueOf(enabled);
+    }
 }

==================================================
WebXml.java
index ae44c48bd0..41c7129b47 100644
--- a/java/org/apache/catalina/startup/WebRuleSet.java
+++ b/java/org/apache/catalina/startup/WebRuleSet.java
@@ -390,7 +390,9 @@ public class WebRuleSet extends RuleSetBase {
                                "setFileSizeThreshold", 0);
 
         digester.addCallMethod(fullPrefix + "/servlet/async-supported",
-                "setAsyncSupported", 0);
+                               "setAsyncSupported", 0);
+        digester.addCallMethod(fullPrefix + "/servlet/enabled",
+                               "setEnabled", 0);
 
         
         digester.addRule(fullPrefix + "/servlet-mapping",

==================================================
