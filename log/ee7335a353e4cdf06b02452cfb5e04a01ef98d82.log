ee7335a353e4cdf06b02452cfb5e04a01ef98d82
==================================================
Add a new utility method to test if a path is an absolute URI
==================================================
Mark Thomas
==================================================
Thu Jan 28 17:07:22 2021 +0000
==================================================
UriUtil.java
Add a new utility method to test if a path is an absolute URI


==================================================
TestUriUtilIsAbsoluteURI.java
index f88bc9dba8..374814be81 100644
--- a/java/org/apache/tomcat/util/buf/UriUtil.java
+++ b/java/org/apache/tomcat/util/buf/UriUtil.java
@@ -193,4 +193,39 @@ public final class UriUtil {
     public static String getWarSeparator() {
         return WAR_SEPARATOR;
     }
+
+
+    /**
+     * Does the provided path start with <code>file:/</code> or
+     * <code>&lt;protocol&gt;://</code>.
+     *
+     * @param path The path to test
+     *
+     * @return {@code} if the supplied path starts with once of the recognised
+     *         sequences.
+     */
+    public static boolean isAbsoluteURI(String path) {
+        // Special case as only a single /
+        if (path.startsWith("file:/")) {
+            return true;
+        }
+
+        // Start at the beginning of the path and skip over any valid protocol
+        // characters
+        int i = 0;
+        while (i < path.length() && isSchemeChar(path.charAt(i))) {
+            i++;
+        }
+        // Need at least one protocol character. False positives with Windows
+        // drives such as C:/... will be caught by the later test for "://"
+        if (i == 0) {
+            return false;
+        }
+        // path starts with something that might be a protocol. Look for a
+        // following "://"
+        if (i + 2 < path.length() && path.charAt(i++) == ':' && path.charAt(i++) == '/' && path.charAt(i) == '/') {
+            return true;
+        }
+        return false;
+    }
 }

==================================================
