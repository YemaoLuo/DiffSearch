1f28c56b46e78829a39b884bcfe916402fb2777b
==================================================
Refactor setting of sessionCacheSize and sessionTimeout
==================================================
Mark Thomas
==================================================
Thu Feb 21 20:40:51 2019 +0000
==================================================
AbstractJsseEndpoint.java
Refactor setting of sessionCacheSize and sessionTimeout

It is a little more convoluted now for NIO[2]+OpenSSL but the end result should be the same and it brings the JSSE and OpenSSL code closer together which will (hopefully) make the work to get AprEndpoint working with JSSE config easier.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1854095 13f79535-47bb-0310-9956-ffa450edef68



==================================================
SSLUtilBase.java
index f3fc86a010..d3b5951106 100644
--- a/java/org/apache/tomcat/util/net/AbstractJsseEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AbstractJsseEndpoint.java
@@ -27,7 +27,6 @@ import java.util.Set;
 
 import javax.net.ssl.SSLEngine;
 import javax.net.ssl.SSLParameters;
-import javax.net.ssl.SSLSessionContext;
 
 import org.apache.tomcat.util.compat.JreCompat;
 import org.apache.tomcat.util.net.SSLHostConfig.Type;
@@ -113,10 +112,6 @@ public abstract class AbstractJsseEndpoint<S,U> extends AbstractEndpoint<S,U> {
                 throw new IllegalArgumentException(e.getMessage(), e);
             }
 
-            SSLSessionContext sessionContext = sslContext.getServerSessionContext();
-            if (sessionContext != null) {
-                sslUtil.configureSessionContext(sessionContext);
-            }
             certificate.setSslContext(sslContext);
         }
     }

==================================================
JSSEUtil.java
index bf5073718d..b93131a99c 100644
--- a/java/org/apache/tomcat/util/net/SSLUtilBase.java
+++ b/java/org/apache/tomcat/util/net/SSLUtilBase.java
@@ -46,6 +46,7 @@ import java.util.Set;
 
 import javax.net.ssl.CertPathTrustManagerParameters;
 import javax.net.ssl.ManagerFactoryParameters;
+import javax.net.ssl.SSLSessionContext;
 import javax.net.ssl.TrustManager;
 import javax.net.ssl.TrustManagerFactory;
 
@@ -228,10 +229,27 @@ public abstract class SSLUtilBase implements SSLUtil {
     public final SSLContext createSSLContext(List<String> negotiableProtocols) throws Exception {
         SSLContext sslContext = createSSLContextInternal(negotiableProtocols);
         sslContext.init(getKeyManagers(), getTrustManagers(), null);
+
+        SSLSessionContext sessionContext = sslContext.getServerSessionContext();
+        if (sessionContext != null) {
+            configureSessionContext(sessionContext);
+        }
+
         return sslContext;
     }
 
 
+    @Override
+    public void configureSessionContext(SSLSessionContext sslSessionContext) {
+        if (sslHostConfig.getSessionCacheSize() > 0) {
+            sslSessionContext.setSessionCacheSize(sslHostConfig.getSessionCacheSize());
+        }
+        if (sslHostConfig.getSessionTimeout() > 0) {
+            sslSessionContext.setSessionTimeout(sslHostConfig.getSessionTimeout());
+        }
+    }
+
+
     @Override
     public String[] getEnabledProtocols() {
         return enabledProtocols;

==================================================
OpenSSLContext.java
index ef15911fbb..f448487877 100644
--- a/java/org/apache/tomcat/util/net/jsse/JSSEUtil.java
+++ b/java/org/apache/tomcat/util/net/jsse/JSSEUtil.java
@@ -33,7 +33,6 @@ import java.util.Set;
 
 import javax.net.ssl.KeyManager;
 import javax.net.ssl.KeyManagerFactory;
-import javax.net.ssl.SSLSessionContext;
 import javax.net.ssl.X509KeyManager;
 
 import org.apache.juli.logging.Log;
@@ -277,11 +276,4 @@ public class JSSEUtil extends SSLUtilBase {
 
         return kms;
     }
-
-
-    @Override
-    public void configureSessionContext(SSLSessionContext sslSessionContext) {
-        sslSessionContext.setSessionCacheSize(sslHostConfig.getSessionCacheSize());
-        sslSessionContext.setSessionTimeout(sslHostConfig.getSessionTimeout());
-    }
 }

==================================================
OpenSSLUtil.java
index b251381709..2ba15bb324 100644
--- a/java/org/apache/tomcat/util/net/openssl/OpenSSLContext.java
+++ b/java/org/apache/tomcat/util/net/openssl/OpenSSLContext.java
@@ -242,16 +242,6 @@ public class OpenSSLContext implements org.apache.tomcat.util.net.SSLContext {
                 SSLContext.clearOptions(ctx, SSL.SSL_OP_NO_TICKET);
             }
 
-            // Set session cache size, if specified
-            if (sslHostConfig.getSessionCacheSize() > 0) {
-                SSLContext.setSessionCacheSize(ctx, sslHostConfig.getSessionCacheSize());
-            }
-
-            // Set session timeout, if specified
-            if (sslHostConfig.getSessionTimeout() > 0) {
-                SSLContext.setSessionCacheTimeout(ctx, sslHostConfig.getSessionTimeout());
-            }
-
             // List the ciphers that the client is permitted to negotiate
             SSLContext.setCipherSuite(ctx, sslHostConfig.getCiphers());
 

==================================================
