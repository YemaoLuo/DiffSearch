dfe814b0231fca204daf0a40482128cb6c7755b1
==================================================
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=57135
==================================================
Mark Thomas
==================================================
Thu Mar 5 13:55:19 2015 +0000
==================================================
ImportHandler.java
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=57135
When using the EL ImportHandler, import of a package should only import the public, concrete classes.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1664347 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestImportHandler.java
index f0ddd80dcc..6e5b95d9cd 100644
--- a/java/javax/el/ImportHandler.java
+++ b/java/javax/el/ImportHandler.java
@@ -51,7 +51,7 @@ public class ImportHandler {
         String className = name.substring(0, lastPeriod);
         String fieldOrMethodName = name.substring(lastPeriod + 1);
 
-        Class<?> clazz = findClass(className);
+        Class<?> clazz = findClass(className, true);
 
         if (clazz == null) {
             throw new ELException(Util.message(
@@ -150,7 +150,7 @@ public class ImportHandler {
         // Search the class imports
         String className = classNames.get(name);
         if (className != null) {
-            Class<?> clazz = findClass(className);
+            Class<?> clazz = findClass(className, true);
             if (clazz != null) {
                 clazzes.put(className, clazz);
                 return clazz;
@@ -161,7 +161,7 @@ public class ImportHandler {
         // (which correctly triggers an error)
         for (String p : packageNames) {
             className = p + '.' + name;
-            Class<?> clazz = findClass(className);
+            Class<?> clazz = findClass(className, false);
             if (clazz != null) {
                 if (result != null) {
                     throw new ELException(Util.message(null,
@@ -188,7 +188,7 @@ public class ImportHandler {
     }
 
 
-    private Class<?> findClass(String name) {
+    private Class<?> findClass(String name, boolean throwException) {
         Class<?> clazz;
         ClassLoader cl = Thread.currentThread().getContextClassLoader();
         try {
@@ -201,8 +201,12 @@ public class ImportHandler {
         int modifiers = clazz.getModifiers();
         if (!Modifier.isPublic(modifiers) || Modifier.isAbstract(modifiers) ||
                 Modifier.isInterface(modifiers)) {
-            throw new ELException(Util.message(
-                    null, "importHandler.invalidClass", name));
+            if (throwException) {
+                throw new ELException(Util.message(
+                        null, "importHandler.invalidClass", name));
+            } else {
+                return null;
+            }
         }
 
         return clazz;

==================================================
Foo.java
index 01ed3892df..b7efb58729 100644
--- a/test/javax/el/TestImportHandler.java
+++ b/test/javax/el/TestImportHandler.java
@@ -255,4 +255,19 @@ public class TestImportHandler {
             }
         }
     }
+
+
+    /**
+     * Package imports with conflicts due to non-public classes should not
+     * conflict.
+     */
+    @Test
+    public void testBug57135() {
+        ImportHandler importHandler = new ImportHandler();
+
+        importHandler.importPackage("util.a");
+        importHandler.importPackage("util.b");
+
+        importHandler.resolveClass("Foo");
+    }
 }

==================================================
Foo.java
new file mode 100644
index 0000000000..20f8409d0c
--- /dev/null
+++ b/test/util/a/Foo.java
@@ -0,0 +1,23 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package util.a;
+
+/**
+ * Tester class used for {@link javax.el.TestImportHandler}.
+ */
+class Foo {
+}

==================================================
