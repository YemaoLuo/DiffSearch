339b40bc07bdba9ded565929b9a3448c5a78f015
==================================================
The closed channels need to be immutable so override a few more methods
==================================================
remm remm@apache.org
==================================================
Wed May 29 16:23:03 2019 +0200
==================================================
Nio2Channel.java
The closed channels need to be immutable so override a few more methods

Avoiding a NPE in NioBlockignSelector is not possible however and
getting there is wasteful, so filter out read as well. In theory ==
CLOSED_NIO_CHANNEL would be enough but use instanceof for now.


==================================================
NioChannel.java
index 36c5b99657..f6b9f0c02c 100644
--- a/java/org/apache/tomcat/util/net/Nio2Channel.java
+++ b/java/org/apache/tomcat/util/net/Nio2Channel.java
@@ -251,7 +251,7 @@ public class Nio2Channel implements AsynchronousByteChannel {
     static final Nio2Channel CLOSED_NIO2_CHANNEL = new ClosedNio2Channel();
     public static class ClosedNio2Channel extends Nio2Channel {
         public ClosedNio2Channel() {
-            super(null);
+            super(SocketBufferHandler.EMPTY);
         }
         @Override
         public void close() throws IOException {
@@ -267,6 +267,9 @@ public class Nio2Channel implements AsynchronousByteChannel {
         public void free() {
         }
         @Override
+        public void setAppReadBufHandler(ApplicationBufferHandler handler) {
+        }
+        @Override
         public Future<Integer> read(ByteBuffer dst) {
             return DONE_INT;
         }

==================================================
NioEndpoint.java
index d3f27664f5..1de1e803e6 100644
--- a/java/org/apache/tomcat/util/net/NioChannel.java
+++ b/java/org/apache/tomcat/util/net/NioChannel.java
@@ -246,7 +246,6 @@ public class NioChannel implements ByteChannel, ScatteringByteChannel, Gathering
         }
     }
 
-
     private ApplicationBufferHandler appReadBufHandler;
     public void setAppReadBufHandler(ApplicationBufferHandler handler) {
         this.appReadBufHandler = handler;
@@ -258,7 +257,7 @@ public class NioChannel implements ByteChannel, ScatteringByteChannel, Gathering
     static final NioChannel CLOSED_NIO_CHANNEL = new ClosedNioChannel();
     public static class ClosedNioChannel extends NioChannel {
         public ClosedNioChannel() {
-            super(null, null);
+            super(null, SocketBufferHandler.EMPTY);
         }
         @Override
         public void close() throws IOException {
@@ -274,6 +273,15 @@ public class NioChannel implements ByteChannel, ScatteringByteChannel, Gathering
         public void free() {
         }
         @Override
+        void setSocketWrapper(NioSocketWrapper socketWrapper) {
+        }
+        @Override
+        public void setIOChannel(SocketChannel sc) {
+        }
+        @Override
+        public void setAppReadBufHandler(ApplicationBufferHandler handler) {
+        }
+        @Override
         public int read(ByteBuffer dst) throws IOException {
             return -1;
         }
@@ -297,4 +305,5 @@ public class NioChannel implements ByteChannel, ScatteringByteChannel, Gathering
             return "Closed NioChannel";
         }
     }
+
 }

==================================================
