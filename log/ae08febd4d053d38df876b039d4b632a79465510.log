ae08febd4d053d38df876b039d4b632a79465510
==================================================
Fix NPEs when looking for static methods
==================================================
Mark Thomas
==================================================
Fri Oct 4 21:23:42 2019 +0100
==================================================
StaticFieldELResolver.java
Fix NPEs when looking for static methods


==================================================
Util.java
index 5b3afaf1ae..d6a902770e 100644
--- a/java/javax/el/StaticFieldELResolver.java
+++ b/java/javax/el/StaticFieldELResolver.java
@@ -113,11 +113,13 @@ public class StaticFieldELResolver extends ELResolver {
                 return result;
 
             } else {
-                Method match =
-                        Util.findMethod(clazz, base, methodName, paramTypes, params);
+                // Static method so base should be null
+                Method match = Util.findMethod(clazz, null, methodName, paramTypes, params);
 
-                int modifiers = match.getModifiers();
-                if (!Modifier.isStatic(modifiers)) {
+                // Note: On Java 9 and above, the isStatic check becomes
+                // unnecessary because the canAccess() call in Util.findMethod()
+                // effectively performs the same check
+                if (match == null || !Modifier.isStatic(match.getModifiers())) {
                     throw new MethodNotFoundException(Util.message(context,
                             "staticFieldELResolver.methodNotFound", methodName,
                             clazz.getName()));

==================================================
ReflectionUtil.java
index e64e9a30be..2e06837233 100644
--- a/java/javax/el/Util.java
+++ b/java/javax/el/Util.java
@@ -541,7 +541,11 @@ class Util {
      */
     static Method getMethod(Class<?> type, Object base, Method m) {
         JreCompat jreCompat = JreCompat.getInstance();
-        if (m == null || (Modifier.isPublic(type.getModifiers()) && jreCompat.canAcccess(base, m))) {
+        // If base is null, method MUST be static
+        // If base is non-null, method may be static or non-static
+        if (m == null ||
+                (Modifier.isPublic(type.getModifiers()) &&
+                        (jreCompat.canAcccess(base, m) || base != null && jreCompat.canAcccess(null, m)))) {
             return m;
         }
         Class<?>[] inf = type.getInterfaces();

==================================================
