f78e058e67ceccfb591b5e5a8b2f95db4d58c0fe
==================================================
Make the polling fairness configurable
==================================================
Filip Hanik
==================================================
Tue Oct 28 15:00:22 2008 +0000
==================================================
ConnectionPool.java
Make the polling fairness configurable


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@708592 13f79535-47bb-0310-9956-ffa450edef68



==================================================
DataSourceFactory.java
index 24cab9765c..79503699d4 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/ConnectionPool.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/ConnectionPool.java
@@ -265,7 +265,7 @@ public class ConnectionPool {
         //make space for 10 extra in case we flow over a bit
         busy = new ArrayBlockingQueue<PooledConnection>(properties.getMaxActive(),false);
         //make space for 10 extra in case we flow over a bit
-        idle = new ArrayBlockingQueue<PooledConnection>(properties.getMaxActive(),false);
+        idle = new ArrayBlockingQueue<PooledConnection>(properties.getMaxActive(),properties.isFairQueue());
 
         //if the evictor thread is supposed to run, start it now
         if (properties.isPoolSweeperEnabled()) {

==================================================
DataSourceProxy.java
index 58265bf043..5f4cbb680b 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/DataSourceFactory.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/DataSourceFactory.java
@@ -99,6 +99,7 @@ public class DataSourceFactory implements ObjectFactory {
     protected final static String PROP_INTERCEPTORS = "jdbcInterceptors";
     protected final static String PROP_VALIDATIONINTERVAL = "validationInterval";
     protected final static String PROP_JMX_ENABLED = "jmxEnabled";
+    protected final static String PROP_FAIR_QUEUE = "fairQueue";
     
     public static final int UNKNOWN_TRANSACTIONISOLATION = -1;
 
@@ -135,7 +136,8 @@ public class DataSourceFactory implements ObjectFactory {
         PROP_CONNECTIONPROPERTIES,
         PROP_INITSQL,
         PROP_INTERCEPTORS,
-        PROP_JMX_ENABLED
+        PROP_JMX_ENABLED,
+        PROP_FAIR_QUEUE
     };
 
     // -------------------------------------------------- ObjectFactory Methods
@@ -380,6 +382,12 @@ public class DataSourceFactory implements ObjectFactory {
         if (value != null) {
             dataSource.getPoolProperties().setJmxEnabled(Boolean.parseBoolean(value));
         }
+        
+        value = properties.getProperty(PROP_FAIR_QUEUE);
+        if (value != null) {
+            dataSource.getPoolProperties().setFairQueue(Boolean.parseBoolean(value));
+        }
+        
 
         // Return the configured DataSource instance
         DataSource ds = getDataSource(dataSource);

==================================================
PoolProperties.java
index 878585c2f3..ba072301a1 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/DataSourceProxy.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/DataSourceProxy.java
@@ -284,6 +284,10 @@ public class DataSourceProxy  {
         this.getPoolProperties().setJmxEnabled(enabled);
     }
     
+    public void setFairQueue(boolean fairQueue) {
+        this.getPoolProperties().setFairQueue(fairQueue);
+    }
+    
     public void setConnectionProperties(String properties) {
         try {
             java.util.Properties prop = DataSourceFactory.getProperties(properties);

==================================================
