2358bb7e5b225b20232d788428ea6bf7ee8ad9c1
==================================================
Catch the cancelled key exceptions and act appropriately
==================================================
Filip Hanik
==================================================
Thu Jun 22 19:59:39 2006 +0000
==================================================
InternalNioInputBuffer.java
Catch the cancelled key exceptions and act appropriately


git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk@416456 13f79535-47bb-0310-9956-ffa450edef68



==================================================
NioEndpoint.java
index 486a99a4c1..3959f1ab65 100644
--- a/java/org/apache/coyote/http11/InternalNioInputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalNioInputBuffer.java
@@ -32,6 +32,7 @@ import java.nio.channels.Selector;
 import java.nio.channels.SelectionKey;
 import org.apache.tomcat.util.net.NioEndpoint.KeyAttachment;
 import org.apache.tomcat.util.net.NioEndpoint.Poller;
+import java.nio.channels.CancelledKeyException;
 
 /**
  * Implementation of InputBuffer which provides HTTP request header parsing as
@@ -564,13 +565,21 @@ public class InternalNioInputBuffer implements InputBuffer {
             if ( !timedOut && nRead == 0 ) 
                 try {
                     final SelectionKey key = socket.keyFor(poller.getSelector());
-                    KeyAttachment att = (KeyAttachment)key.attachment();
+                    final KeyAttachment att = (KeyAttachment)key.attachment();
                     att.setWakeUp(true);
                     
                     poller.addEvent(
                         new Runnable() {
                             public void run() {
-                                if ( key != null ) key.interestOps(SelectionKey.OP_READ);
+                                try {
+                                    if (key != null) key.interestOps(SelectionKey.OP_READ);
+                                } catch (CancelledKeyException ckx) {
+                                    try {
+                                        socket.socket().close();
+                                        socket.close();
+                                        att.setWakeUp(false);
+                                    } catch (Exception ignore) {}
+                                }
                             }
                     });
                     synchronized (att.getMutex()) { att.getMutex().wait(25);}

==================================================
