6eae969464d84cfeebceb034211d72b1b2c58f1a
==================================================
https://issues.apache.org/bugzilla/show_bug.cgi?id=50168
==================================================
Mark Emlyn
==================================================
Thu Nov 4 23:03:26 2010 +0000
==================================================
Lifecycle.java
https://issues.apache.org/bugzilla/show_bug.cgi?id=50168
Add a DESTROYING state and associated events and use them to ensure Contexts are only destroyed once.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1031335 13f79535-47bb-0310-9956-ffa450edef68



==================================================
LifecycleState.java
index fe432e09b5..5b540d30f9 100644
--- a/java/org/apache/catalina/Lifecycle.java
+++ b/java/org/apache/catalina/Lifecycle.java
@@ -50,10 +50,11 @@ package org.apache.catalina;
  * |  |          |                    |                         |  |
  * |  |          |                    |auto                     |  |
  * |  |          |    destroy()      \|/              destroy() |  |
- * |  |       FAILED ---->------ DESTROYED ----<-----------------  |
- * |  |                             ^                              |
- * |  |        destroy()            |                              |
- * |  -------------------------------                              |
+ * |  |       FAILED ---->------ DESTROYING ---<-----------------  |
+ * |  |                           ^     |                          |
+ * |  |        destroy()          |     |auto                      |
+ * |  -----------------------------    \|/                         |
+ * |                                 DESTROYED                     |
  * |                                                               |
  * |                            stop()                             |
  * --->------------------------------>------------------------------
@@ -149,9 +150,15 @@ public interface Lifecycle {
 
 
     /**
-     * The LifecycleEvent type for the "component destroy" event.
+     * The LifecycleEvent type for the "component after destroy" event.
      */
-    public static final String DESTROY_EVENT = "destroy";
+    public static final String AFTER_DESTROY_EVENT = "after_destroy";
+
+
+    /**
+     * The LifecycleEvent type for the "component before destroy" event.
+     */
+    public static final String BEFORE_DESTROY_EVENT = "before_destroy";
 
 
     /**

==================================================
AprLifecycleListener.java
index 5f2e3b7fdc..3ddd48dec7 100644
--- a/java/org/apache/catalina/LifecycleState.java
+++ b/java/org/apache/catalina/LifecycleState.java
@@ -31,7 +31,8 @@ public enum LifecycleState {
     STOPPING_PREP(true, Lifecycle.BEFORE_STOP_EVENT),
     STOPPING(false, Lifecycle.STOP_EVENT),
     STOPPED(false, Lifecycle.AFTER_STOP_EVENT),
-    DESTROYED(false, Lifecycle.DESTROY_EVENT),
+    DESTROYING(false, Lifecycle.BEFORE_DESTROY_EVENT),
+    DESTROYED(false, Lifecycle.AFTER_DESTROY_EVENT),
     FAILED(false, null),
     MUST_STOP(true, null),
     MUST_DESTROY(true, null);

==================================================
ContainerBase.java
index 5151ad3fcd..401b411143 100644
--- a/java/org/apache/catalina/core/AprLifecycleListener.java
+++ b/java/org/apache/catalina/core/AprLifecycleListener.java
@@ -110,7 +110,7 @@ public class AprLifecycleListener
                     }
                 }
             }
-        } else if (Lifecycle.DESTROY_EVENT.equals(event.getType())) {
+        } else if (Lifecycle.AFTER_DESTROY_EVENT.equals(event.getType())) {
             synchronized (lock) {
                 if (!aprAvailable) {
                     return;

==================================================
ContextConfig.java
index 04206b3e04..2b6c78bbb1 100644
--- a/java/org/apache/catalina/core/ContainerBase.java
+++ b/java/org/apache/catalina/core/ContainerBase.java
@@ -959,7 +959,12 @@ public abstract class ContainerBase extends LifecycleMBeanBase
         // Set child's parent to null to prevent a loop
         child.setParent(null);
         try {
-            child.destroy();
+            // child.destroy() may have already been called which would have
+            // triggered this call. If that is the case, no need to destroy the
+            // child again.
+            if (!LifecycleState.DESTROYING.equals(child.getState())) {
+                child.destroy();
+            }
         } catch (LifecycleException e) {
             log.error("ContainerBase.removeChild: destroy: ", e);
         }

==================================================
LifecycleBase.java
index 32d3751487..a8237eab6d 100644
--- a/java/org/apache/catalina/startup/ContextConfig.java
+++ b/java/org/apache/catalina/startup/ContextConfig.java
@@ -332,7 +332,7 @@ public class ContextConfig
             configureStop();
         } else if (event.getType().equals(Lifecycle.AFTER_INIT_EVENT)) {
             init();
-        } else if (event.getType().equals(Lifecycle.DESTROY_EVENT)) {
+        } else if (event.getType().equals(Lifecycle.AFTER_DESTROY_EVENT)) {
             destroy();
         }
 

==================================================
