6008f4cf329572706bd358d4898057a981eb8404
==================================================
Allow Checkstyle's unused imports test to be used with the o.a.catalina.loader package
==================================================
Mark Emlyn
==================================================
Sun Oct 24 13:12:18 2010 +0000
==================================================
VirtualWebappLoader.java
Allow Checkstyle's unused imports test to be used with the o.a.catalina.loader package


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1026789 13f79535-47bb-0310-9956-ffa450edef68



==================================================
WebappClassLoader.java
index 3f79a7beb3..2d8a6e78da 100644
--- a/java/org/apache/catalina/loader/VirtualWebappLoader.java
+++ b/java/org/apache/catalina/loader/VirtualWebappLoader.java
@@ -24,7 +24,6 @@ import java.util.Set;
 import java.util.StringTokenizer;
 
 import org.apache.catalina.LifecycleException;
-import org.apache.catalina.util.LifecycleBase;
 
 /**
  * A WebappLoader that allows a customized classpath to be added
@@ -103,7 +102,7 @@ public class VirtualWebappLoader extends WebappLoader {
 
     /**
      * Implement the requirements
-     * of {@link LifecycleBase#startInternal()}.
+     * of {@link org.apache.catalina.util.LifecycleBase#startInternal()}.
      *
      * @exception LifecycleException if this component detects a fatal error
      *  that prevents this component from being used

==================================================
WebappLoader.java
index 78b5e204f2..8fd663855c 100644
--- a/java/org/apache/catalina/loader/WebappClassLoader.java
+++ b/java/org/apache/catalina/loader/WebappClassLoader.java
@@ -69,7 +69,6 @@ import org.apache.catalina.Lifecycle;
 import org.apache.catalina.LifecycleException;
 import org.apache.catalina.LifecycleListener;
 import org.apache.catalina.LifecycleState;
-import org.apache.jasper.servlet.JasperLoader;
 import org.apache.naming.JndiPermission;
 import org.apache.naming.resources.ProxyDirContext;
 import org.apache.naming.resources.Resource;
@@ -2591,7 +2590,8 @@ public class WebappClassLoader
      * Clear the {@link ResourceBundle} cache of any bundles loaded by this
      * class loader or any class loader where this loader is a parent class
      * loader. Whilst {@link ResourceBundle#clearCache()} could be used there
-     * are complications around the {@link JasperLoader} that mean a reflection
+     * are complications around the
+     * {@link org.apache.jasper.servlet.JasperLoader} that mean a reflection
      * based approach is more likely to be complete.
      * 
      * The ResourceBundle is using WeakReferences so it shouldn't be pinning the

==================================================
