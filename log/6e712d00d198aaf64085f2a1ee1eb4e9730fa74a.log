6e712d00d198aaf64085f2a1ee1eb4e9730fa74a
==================================================
Already loaded via SecurityClassLoad
==================================================
Mark Emlyn
==================================================
Thu Jul 7 20:58:11 2011 +0000
==================================================
AjpAprProcessor.java
Already loaded via SecurityClassLoad

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1144032 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AjpNioProcessor.java
index 196f22d277..c4b4a07965 100644
--- a/java/org/apache/coyote/ajp/AjpAprProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpAprProcessor.java
@@ -30,7 +30,6 @@ import org.apache.tomcat.jni.Socket;
 import org.apache.tomcat.jni.Status;
 import org.apache.tomcat.util.ExceptionUtils;
 import org.apache.tomcat.util.buf.ByteChunk;
-import org.apache.tomcat.util.http.HttpMessages;
 import org.apache.tomcat.util.net.AbstractEndpoint.Handler.SocketState;
 import org.apache.tomcat.util.net.AprEndpoint;
 import org.apache.tomcat.util.net.SocketStatus;
@@ -74,9 +73,6 @@ public class AjpAprProcessor extends AbstractAjpProcessor {
         inputBuffer = ByteBuffer.allocateDirect(packetSize * 2);
         inputBuffer.limit(0);
         outputBuffer = ByteBuffer.allocateDirect(packetSize * 2);
-
-        // Cause loading of HttpMessages
-        HttpMessages.getMessage(200);
     }
 
 

==================================================
AjpProcessor.java
index 470ffba19a..ca8cb3f4cf 100644
--- a/java/org/apache/coyote/ajp/AjpNioProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpNioProcessor.java
@@ -30,7 +30,6 @@ import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.ExceptionUtils;
 import org.apache.tomcat.util.buf.ByteChunk;
-import org.apache.tomcat.util.http.HttpMessages;
 import org.apache.tomcat.util.net.AbstractEndpoint.Handler.SocketState;
 import org.apache.tomcat.util.net.NioChannel;
 import org.apache.tomcat.util.net.NioEndpoint;
@@ -65,9 +64,6 @@ public class AjpNioProcessor extends AbstractAjpProcessor {
         response.setOutputBuffer(new SocketOutputBuffer());
 
         pool = endpoint.getSelectorPool();
-
-        // Cause loading of HttpMessages
-        HttpMessages.getMessage(200);
     }
 
 

==================================================
