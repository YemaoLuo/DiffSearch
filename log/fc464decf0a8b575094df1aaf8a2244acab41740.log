fc464decf0a8b575094df1aaf8a2244acab41740
==================================================
r703017 broke SSL with the JIO connector on Windows (and possibly other platforms). The problem was that some settings don't make sense for an SSL socket so rather than ignoring them a SocketExcpetion is thrown. With this patch, only attributes set by the user are passed to the socket and if setting the attribute throws an exception it is logged as an error.
==================================================
Mark Emlyn
==================================================
Wed Oct 29 12:35:59 2008 +0000
==================================================
JIoEndpoint.java
r703017 broke SSL with the JIO connector on Windows (and possibly other platforms). The problem was that some settings don't make sense for an SSL socket so rather than ignoring them a SocketExcpetion is thrown. With this patch, only attributes set by the user are passed to the socket and if setting the attribute throws an exception it is logged as an error.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@708892 13f79535-47bb-0310-9956-ffa450edef68



==================================================
SocketProperties.java
index fc2ccd66d7..15986ee1be 100644
--- a/java/org/apache/tomcat/util/net/JIoEndpoint.java
+++ b/java/org/apache/tomcat/util/net/JIoEndpoint.java
@@ -640,22 +640,21 @@ public class JIoEndpoint {
      */
     protected boolean setSocketOptions(Socket socket) {
         // Process the connection
-        int step = 1;
+        
         try {
-
             // 1: Set socket options: timeout, linger, etc
             socketProperties.setProperties(socket);
+        } catch (Throwable t) {
+            log.error(sm.getString("endpoint.err.unexpected"), t);
+            // Close the socket
+            return false;
+        }
+        try {
             // 2: SSL handshake
-            step = 2;
             serverSocketFactory.handshake(socket);
-
         } catch (Throwable t) {
             if (log.isDebugEnabled()) {
-                if (step == 2) {
-                    log.debug(sm.getString("endpoint.err.handshake"), t);
-                } else {
-                    log.debug(sm.getString("endpoint.err.unexpected"), t);
-                }
+                log.debug(sm.getString("endpoint.err.handshake"), t);
             }
             // Tell to close the socket
             return false;

==================================================
