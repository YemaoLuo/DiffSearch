8806dcba9e0d857008d010d6024336973012fef2
==================================================
Fix the typos in the source code
==================================================
Emmanuel Bourg
==================================================
Wed Sep 28 13:46:55 2022 +0200
==================================================
JspPropertyGroupDescriptor.java
Fix the typos in the source code



==================================================
Context.java
index 19b28ed172..84555c0c8f 100644
--- a/java/jakarta/servlet/descriptor/JspPropertyGroupDescriptor.java
+++ b/java/jakarta/servlet/descriptor/JspPropertyGroupDescriptor.java
@@ -95,7 +95,7 @@ public interface JspPropertyGroupDescriptor {
     public String getDeferredSyntaxAllowedAsLiteral();
 
     /**
-     * Should the JSPs in this group have template text that onyl contains
+     * Should the JSPs in this group have template text that only contains
      * whitespace removed?
      *
      * @return {@code true} if the whitespace be removed, otherwise

==================================================
DefaultInstanceManager.java
index 030c13566a..a24e215773 100644
--- a/java/org/apache/catalina/Context.java
+++ b/java/org/apache/catalina/Context.java
@@ -1807,7 +1807,7 @@ public interface Context extends Container, ContextBind {
 
     /**
      * Are paths used in calls to obtain a request dispatcher expected to be
-     * encoded? This applys to both how Tomcat handles calls to obtain a request
+     * encoded? This applies to both how Tomcat handles calls to obtain a request
      * dispatcher as well as how Tomcat generates paths used to obtain request
      * dispatchers internally.
      *

==================================================
MapperListener.java
index 9a91775891..8ef9c3ea28 100644
--- a/java/org/apache/catalina/core/DefaultInstanceManager.java
+++ b/java/org/apache/catalina/core/DefaultInstanceManager.java
@@ -582,7 +582,7 @@ public class DefaultInstanceManager implements InstanceManager {
 
         // This will always be a new Field instance
         // Making this instance accessible does not affect other instances
-        // If this doens't work, just let set() fail
+        // If this doesn't work, just let set() fail
         field.trySetAccessible();
         field.set(instance, lookedupResource);
     }
@@ -622,7 +622,7 @@ public class DefaultInstanceManager implements InstanceManager {
 
         // This will always be a new Method instance
         // Making this instance accessible does not affect other instances
-        // If this doens't work, just let invoke() fail
+        // If this doesn't work, just let invoke() fail
         method.trySetAccessible();
         method.invoke(instance, lookedupResource);
     }

==================================================
SparseUserDatabaseMBean.java
index fa303c47fc..67be0a7537 100644
--- a/java/org/apache/catalina/mapper/MapperListener.java
+++ b/java/org/apache/catalina/mapper/MapperListener.java
@@ -508,7 +508,7 @@ public class MapperListener extends LifecycleMBeanBase
     /**
      * Add this mapper to the container and all child containers
      *
-     * @param container the container (and any associated childern) to which
+     * @param container the container (and any associated children) to which
      *        the mapper is to be added
      */
     private void addListeners(Container container) {
@@ -523,7 +523,7 @@ public class MapperListener extends LifecycleMBeanBase
     /**
      * Remove this mapper from the container and all child containers
      *
-     * @param container the container (and any associated childern) from which
+     * @param container the container (and any associated children) from which
      *        the mapper is to be removed
      */
     private void removeListeners(Container container) {

==================================================
CGIServlet.java
index 09710ddaf7..3c5fe93a77 100644
--- a/java/org/apache/catalina/mbeans/SparseUserDatabaseMBean.java
+++ b/java/org/apache/catalina/mbeans/SparseUserDatabaseMBean.java
@@ -36,7 +36,7 @@ import org.apache.tomcat.util.res.StringManager;
 /**
  * <p>A <strong>ModelMBean</strong> implementation for the
  * <code>org.apache.catalina.users.SparseUserDatabase</code> component.
- * The main difference is that the MBeans are created on demand (for exemple,
+ * The main difference is that the MBeans are created on demand (for example,
  * the findUser method would register the corresponding user and make it
  * available for management. All the MBeans created for users, groups and roles
  * are then discarded when save is invoked.</p>

==================================================
ByteMessage.java
index dbc941dce5..cb4a7421bb 100644
--- a/java/org/apache/catalina/servlets/CGIServlet.java
+++ b/java/org/apache/catalina/servlets/CGIServlet.java
@@ -1843,7 +1843,7 @@ public final class CGIServlet extends HttpServlet {
 
     /**
      * This is an input stream specifically for reading HTTP headers. It reads
-     * upto and including the two blank lines terminating the headers. It
+     * up to and including the two blank lines terminating the headers. It
      * allows the content to be read using bytes or characters as appropriate.
      */
     protected static class HTTPHeaderInputStream extends InputStream {

==================================================
TcpFailureDetector.java
index cd414aaec2..4560d87623 100644
--- a/java/org/apache/catalina/tribes/ByteMessage.java
+++ b/java/org/apache/catalina/tribes/ByteMessage.java
@@ -51,7 +51,7 @@ public class ByteMessage implements Externalizable {
     }
 
     /**
-     * Creates a byte message wit h
+     * Creates a byte message with
      * @param data byte[] - the message contents
      */
     public ByteMessage(byte[] data) {

==================================================
TcpPingInterceptor.java
index 53aa34e483..ad5ee897ef 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/TcpFailureDetector.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/TcpFailureDetector.java
@@ -113,7 +113,7 @@ public class TcpFailureDetector extends ChannelInterceptorBase implements TcpFai
                         (!Arrays.equals(TCP_FAIL_DETECT,msg.getMessage().getBytes()) ) );
         }//end if
 
-        //ignore the message, it doesnt have the flag set
+        //ignore the message, it doesn't have the flag set
         if ( process ) {
             super.messageReceived(msg);
         } else if ( log.isDebugEnabled() ) {

==================================================
TwoPhaseCommitInterceptor.java
index 0be78ed547..0cddef05d5 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/TcpPingInterceptor.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/TcpPingInterceptor.java
@@ -178,7 +178,7 @@ public class TcpPingInterceptor extends ChannelInterceptorBase implements TcpPin
                         (!Arrays.equals(TCP_PING_DATA,msg.getMessage().getBytes()) ) );
         }//end if
 
-        //ignore the message, it doesnt have the flag set
+        //ignore the message, it doesn't have the flag set
         if ( process ) {
             super.messageReceived(msg);
         } else if ( log.isDebugEnabled() ) {

==================================================
McastServiceImpl.java
index b7983395ff..0b463fe197 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/TwoPhaseCommitInterceptor.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/TwoPhaseCommitInterceptor.java
@@ -64,7 +64,7 @@ public class TwoPhaseCommitInterceptor extends ChannelInterceptorBase {
             super.sendMessage(destination,confirmation,payload);
         } else {
             //turn off two phase commit
-            //this wont work if the interceptor has 0 as a flag
+            //this won't work if the interceptor has 0 as a flag
             //since there is no flag to turn off
             //msg.setOptions(msg.getOptions() & (~getOptionFlag()));
             super.sendMessage(destination, msg, payload);

==================================================
DataSourceUserDatabase.java
index ac1571aa88..068a383440 100644
--- a/java/org/apache/catalina/tribes/membership/McastServiceImpl.java
+++ b/java/org/apache/catalina/tribes/membership/McastServiceImpl.java
@@ -84,11 +84,11 @@ public class McastServiceImpl extends MembershipProviderBase {
      */
     protected final long sendFrequency;
     /**
-     * Reuse the sendPacket, no need to create a new one everytime
+     * Reuse the sendPacket, no need to create a new one every time
      */
     protected DatagramPacket sendPacket;
     /**
-     * Reuse the receivePacket, no need to create a new one everytime
+     * Reuse the receivePacket, no need to create a new one every time
      */
     protected DatagramPacket receivePacket;
 

==================================================
AbstractFileResourceSet.java
index cd3c319c4f..3892131481 100644
--- a/java/org/apache/catalina/users/DataSourceUserDatabase.java
+++ b/java/org/apache/catalina/users/DataSourceUserDatabase.java
@@ -144,7 +144,7 @@ public class DataSourceUserDatabase extends SparseUserDatabase {
 
 
     /**
-     * The column in the role and group tables for the decription
+     * The column in the role and group tables for the description
      */
     protected String roleAndGroupDescriptionCol = null;
 

==================================================
ActionHook.java
index 3930a90c5b..153fae819b 100644
--- a/java/org/apache/catalina/webresources/AbstractFileResourceSet.java
+++ b/java/org/apache/catalina/webresources/AbstractFileResourceSet.java
@@ -123,7 +123,7 @@ public abstract class AbstractFileResourceSet extends AbstractResourceSet {
         // - case differences on case insensitive file systems
         // - Windows removing a trailing ' ' or '.' from the file name
         //
-        // In all cases, a mis-match here results in the resource not being
+        // In all cases, a mismatch here results in the resource not being
         // found
         //
         // absPath is normalized so canPath needs to be normalized as well

==================================================
RequestInfo.java
index 4b4e369b4c..8783048e66 100644
--- a/java/org/apache/coyote/ActionHook.java
+++ b/java/org/apache/coyote/ActionHook.java
@@ -23,7 +23,7 @@ package org.apache.coyote;
  * Some standard actions are defined in ActionCode, however custom
  * actions are permitted.
  *
- * The param object can be used to pass and return informations related with the
+ * The param object can be used to pass and return information related with the
  * action.
  *
  *

==================================================
Response.java
index 2d2daa1b48..0efb30ffb1 100644
--- a/java/org/apache/coyote/RequestInfo.java
+++ b/java/org/apache/coyote/RequestInfo.java
@@ -23,7 +23,7 @@ import javax.management.ObjectName;
 
 /**
  * Structure holding the Request and Response objects. It also holds statistical
- * informations about request processing and provide management informations
+ * information about request processing and provide management information
  * about the requests being processed.
  *
  * Each thread uses a Request/Response pair that is recycled on each request.

==================================================
Http11Processor.java
index 388ac647f0..b3bd46022c 100644
--- a/java/org/apache/coyote/Response.java
+++ b/java/org/apache/coyote/Response.java
@@ -121,7 +121,7 @@ public final class Response {
     long contentLength = -1;
     private Locale locale = DEFAULT_LOCALE;
 
-    // General informations
+    // General information
     private long contentWritten = 0;
     private long commitTimeNanos = -1;
 

==================================================
AbstractNonZeroStream.java
index 10e3d7098d..c27ff911f4 100644
--- a/java/org/apache/coyote/http11/Http11Processor.java
+++ b/java/org/apache/coyote/http11/Http11Processor.java
@@ -220,7 +220,7 @@ public class Http11Processor extends AbstractProcessor {
             setErrorState(ErrorState.CLOSE_CLEAN, null);
             if (log.isDebugEnabled()) {
                 log.debug(sm.getString("http11processor.request.prepare") +
-                          " Tranfer encoding lists chunked before [" + encodingName + "]");
+                          " Transfer encoding lists chunked before [" + encodingName + "]");
             }
             return;
         }

==================================================
Parser.java
index f67b17f7d9..0876fc88c6 100644
--- a/java/org/apache/coyote/http2/AbstractNonZeroStream.java
+++ b/java/org/apache/coyote/http2/AbstractNonZeroStream.java
@@ -61,7 +61,7 @@ abstract class AbstractNonZeroStream extends AbstractStream {
      * General method used when reprioritising a stream and care needs to be
      * taken not to create circular references.
      *
-     * Changes to the priority tree need to be sychronized at the connection
+     * Changes to the priority tree need to be synchronized at the connection
      * level. This is the caller's responsibility.
      */
     final void rePrioritise(AbstractStream parent, boolean exclusive, int weight) {
@@ -99,7 +99,7 @@ abstract class AbstractNonZeroStream extends AbstractStream {
      * Used when removing closed streams from the tree and we know there is no
      * need to check for circular references.
      *
-     * Changes to the priority tree need to be sychronized at the connection
+     * Changes to the priority tree need to be synchronized at the connection
      * level. This is the caller's responsibility.
      */
     final void rePrioritise(AbstractStream parent, int weight) {
@@ -121,7 +121,7 @@ abstract class AbstractNonZeroStream extends AbstractStream {
      * Replace this stream with the provided stream in the parent/child
      * hierarchy.
      *
-     * Changes to the priority tree need to be sychronized at the connection
+     * Changes to the priority tree need to be synchronized at the connection
      * level. This is the caller's responsibility.
      */
     void replaceStream(AbstractNonZeroStream replacement) {

==================================================
ServletWriter.java
index f37801698c..c05ce36979 100644
--- a/java/org/apache/jasper/compiler/Parser.java
+++ b/java/org/apache/jasper/compiler/Parser.java
@@ -479,7 +479,7 @@ class Parser implements TagConstants {
             parseIncludeDirective(parent);
         } else if (reader.matches("taglib")) {
             if (directivesOnly) {
-                // No need to get the tagLibInfo objects. This alos suppresses
+                // No need to get the tagLibInfo objects. This also suppresses
                 // parsing of any tag files used in this tag file.
                 return;
             }

==================================================
PageContextImpl.java
index f5d305757e..14d8cbf389 100644
--- a/java/org/apache/jasper/compiler/ServletWriter.java
+++ b/java/org/apache/jasper/compiler/ServletWriter.java
@@ -56,7 +56,7 @@ public class ServletWriter implements AutoCloseable {
     }
 
 
-    // -------------------- Access informations --------------------
+    // -------------------- Access information --------------------
 
     public int getJavaLine() {
         return javaLine;
@@ -97,14 +97,14 @@ public class ServletWriter implements AutoCloseable {
     }
 
     /**
-     * Prints the current indention
+     * Prints the current indentation
      */
     public void printin() {
         writer.print(SPACES.substring(0, indent));
     }
 
     /**
-     * Prints the current indention, followed by the given string
+     * Prints the current indentation, followed by the given string
      * @param s The string
      */
     public void printin(String s) {
@@ -113,7 +113,7 @@ public class ServletWriter implements AutoCloseable {
     }
 
     /**
-     * Prints the current indention, and then the string, and a '\n'.
+     * Prints the current indentation, and then the string, and a '\n'.
      * @param s The string
      */
     public void printil(String s) {

==================================================
ForEach.java
index 3000439ada..30476ab09a 100644
--- a/java/org/apache/jasper/runtime/PageContextImpl.java
+++ b/java/org/apache/jasper/runtime/PageContextImpl.java
@@ -595,7 +595,7 @@ public class PageContextImpl extends PageContext {
     }
 
     @Override
-    @SuppressWarnings("deprecation") // Still jave to support old JSP EL
+    @SuppressWarnings("deprecation") // Still have to support old JSP EL
     public void handlePageException(final Throwable t) throws IOException, ServletException {
         if (t == null) {
             throw new NullPointerException(Localizer.getMessage("jsp.error.page.nullThrowable"));

==================================================
ServiceRefFactory.java
index 03c0f79fdb..c62283abfe 100644
--- a/java/org/apache/jasper/tagplugins/jstl/core/ForEach.java
+++ b/java/org/apache/jasper/tagplugins/jstl/core/ForEach.java
@@ -59,7 +59,7 @@ public final class ForEach implements TagPlugin {
             ctxt.generateJavaSource("; " + index + "++) {");
         }
 
-        // If var is specified and the body contains an EL, then sycn
+        // If var is specified and the body contains an EL, then sync
         // the var attribute
         if (hasVar /* && ctxt.hasEL() */) {
             ctxt.generateJavaSource("_jspx_page_context.setAttribute(");

==================================================
DelegatingConnection.java
index 904893a94f..909f3d3c72 100644
--- a/java/org/apache/naming/factory/webservices/ServiceRefFactory.java
+++ b/java/org/apache/naming/factory/webservices/ServiceRefFactory.java
@@ -252,7 +252,7 @@ public class ServiceRefFactory implements ObjectFactory {
                         break;
                     }
 
-                    // Load all datas relative to the handler : SOAPHeaders, config init element,
+                    // Load all data relative to the handler : SOAPHeaders, config init element,
                     // portNames to be set on
                     List<QName> headers = new ArrayList<>();
                     Hashtable<String,String> config = new Hashtable<>();
@@ -288,7 +288,7 @@ public class ServiceRefFactory implements ObjectFactory {
                         }
                     }
 
-                    // Set the handlers informations
+                    // Set the handlers information
                     handlerInfo.setHandlerClass(handlerClass);
                     handlerInfo.setHeaders(headers.toArray(new QName[0]));
                     handlerInfo.setHandlerConfig(config);

==================================================
Rfc6265CookieProcessor.java
index 887fb66d38..ebac9834cd 100644
--- a/java/org/apache/tomcat/dbcp/dbcp2/DelegatingConnection.java
+++ b/java/org/apache/tomcat/dbcp/dbcp2/DelegatingConnection.java
@@ -170,7 +170,7 @@ public class DelegatingConnection<C extends Connection> extends AbandonedTrace i
                     connectionIsClosed = false;
                 }
                 try {
-                    // DBCP-512: Avoid exceptions when closing a connection in mutli-threaded use case.
+                    // DBCP-512: Avoid exceptions when closing a connection in multi-threaded use case.
                     // Avoid closing again, which should be a no-op, but some drivers like H2 throw an exception when
                     // closing from multiple threads.
                     if (!connectionIsClosed) {

==================================================
ParseException.java
index b7f85f5017..8f2da681b2 100644
--- a/java/org/apache/tomcat/util/http/Rfc6265CookieProcessor.java
+++ b/java/org/apache/tomcat/util/http/Rfc6265CookieProcessor.java
@@ -176,7 +176,7 @@ public class Rfc6265CookieProcessor extends CookieProcessorBase {
                 header.append(sameSiteCookiesValue.getValue());
             }
         } else {
-            // Use explict config
+            // Use explicit config
             header.append("; SameSite=");
             header.append(cookieSameSite);
         }

==================================================
NioEndpoint.java
index ea980a7a7e..d569eea154 100644
--- a/java/org/apache/tomcat/util/json/ParseException.java
+++ b/java/org/apache/tomcat/util/json/ParseException.java
@@ -82,7 +82,7 @@ public class ParseException extends Exception {
   /**
    * This is the last token that has been consumed successfully.  If
    * this object has been created due to a parse error, the token
-   * followng this token will (therefore) be the first error token.
+   * following this token will (therefore) be the first error token.
    */
   public Token currentToken;
 

==================================================
JSSEKeyManager.java
index 596feb4b9f..a228715123 100644
--- a/java/org/apache/tomcat/util/net/NioEndpoint.java
+++ b/java/org/apache/tomcat/util/net/NioEndpoint.java
@@ -398,7 +398,7 @@ public class NioEndpoint extends AbstractJsseEndpoint<NioChannel,SocketChannel>
                     // With a UDS, expect no delay connecting and no defer accept
                     socket.connect(sa);
                 }
-                // Wait for upto 1000ms acceptor threads to unlock
+                // Wait for up to 1000ms acceptor threads to unlock
                 long waitLeft = 1000;
                 while (waitLeft > 0 &&
                         acceptor.getState() == AcceptorState.RUNNING) {

==================================================
PEMFile.java
index 05a6010ed0..30777d6f78 100644
--- a/java/org/apache/tomcat/util/net/jsse/JSSEKeyManager.java
+++ b/java/org/apache/tomcat/util/net/jsse/JSSEKeyManager.java
@@ -26,7 +26,7 @@ import javax.net.ssl.X509ExtendedKeyManager;
 import javax.net.ssl.X509KeyManager;
 
 /**
- * X509KeyManager which allows selection of a specific keypair and certificate
+ * X509KeyManager which allows selection of a specific key pair and certificate
  * chain (identified by their keystore alias name) to be used by the server to
  * authenticate itself to SSL clients.
  *
@@ -42,7 +42,7 @@ public final class JSSEKeyManager extends X509ExtendedKeyManager {
      * Constructor.
      *
      * @param mgr The X509KeyManager used as a delegate
-     * @param serverKeyAlias The alias name of the server's keypair and
+     * @param serverKeyAlias The alias name of the server's key pair and
      * supporting certificate chain
      */
     public JSSEKeyManager(X509KeyManager mgr, String serverKeyAlias) {

==================================================
TaskQueue.java
index 03abf596d7..443a5a39d8 100644
--- a/java/org/apache/tomcat/util/net/jsse/PEMFile.java
+++ b/java/org/apache/tomcat/util/net/jsse/PEMFile.java
@@ -294,7 +294,7 @@ public class PEMFile {
                  * fragile but acceptable in this case since the JRE depends on
                  * the toString() implementation as well.
                  * In the future, if necessary, we can parse the value of
-                 * paremeters.getEncoded() but the associated complexity and
+                 * parameters.getEncoded() but the associated complexity and
                  * unlikeliness of the JRE implementation changing means that
                  * Tomcat will use to toString() approach for now.
                  */

==================================================
ConnectionPool.java
index 3ddd277ce4..7104280027 100644
--- a/java/org/apache/tomcat/util/threads/TaskQueue.java
+++ b/java/org/apache/tomcat/util/threads/TaskQueue.java
@@ -27,7 +27,7 @@ import org.apache.tomcat.util.res.StringManager;
  * As task queue specifically designed to run with a thread pool executor. The
  * task queue is optimised to properly utilize threads within a thread pool
  * executor. If you use a normal queue, the executor will spawn threads when
- * there are idle threads and you wont be able to force items onto the queue
+ * there are idle threads and you won't be able to force items onto the queue
  * itself.
  */
 public class TaskQueue extends LinkedBlockingQueue<Runnable> {

==================================================
AbstractQueryReport.java
index 7e0232dfe2..88ba9e9911 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/ConnectionPool.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/ConnectionPool.java
@@ -1397,7 +1397,7 @@ public class ConnectionPool {
     }
 
     /**
-     * Tread safe wrapper around a future for the regular queue
+     * Thread safe wrapper around a future for the regular queue
      * This one retrieves the pooled connection object
      * and performs the initialization according to
      * interceptors and validation rules.

==================================================
TestValidation.java
index 9ba2f991d5..04a263ace2 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/interceptor/AbstractQueryReport.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/interceptor/AbstractQueryReport.java
@@ -118,7 +118,7 @@ public abstract class AbstractQueryReport extends AbstractCreateStatementInterce
 
     /**
      * returns the query measure threshold.
-     * This value is in milliseconds. If the query is faster than this threshold than it wont be accounted for
+     * This value is in milliseconds. If the query is faster than this threshold than it won't be accounted for
      * @return the threshold in milliseconds
      */
     public long getThreshold() {

==================================================
TestWebappClassLoaderExecutorMemoryLeak.java
index 85b53b3f11..80a9ba883d 100644
--- a/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/TestValidation.java
+++ b/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/TestValidation.java
@@ -54,7 +54,7 @@ public class TestValidation extends DefaultTestCase {
         datasource.setMinIdle(1);
         datasource.setMaxIdle(1);
         datasource.setMaxActive(2);
-        // Validation interval is disabled by default to ensure validation occurs everytime
+        // Validation interval is disabled by default to ensure validation occurs every time
         datasource.setValidationInterval(-1);
         // No validation query by default
         datasource.setValidationQuery(null);

==================================================
TestNonBlockingAPI.java
index 0f861b7db0..7ffb6e80e2 100644
--- a/test/org/apache/catalina/loader/TestWebappClassLoaderExecutorMemoryLeak.java
+++ b/test/org/apache/catalina/loader/TestWebappClassLoaderExecutorMemoryLeak.java
@@ -64,7 +64,7 @@ public class TestWebappClassLoaderExecutorMemoryLeak extends TomcatBaseTest {
 
         // The time taken to shutdown the executor can vary between systems. Try
         // to avoid false test failures due to timing issues. Give the executor
-        // upto 10 seconds to close down.
+        // up to 10 seconds to close down.
         int count = 0;
         while (count < 100 && !executorServlet.tpe.isTerminated()) {
             count++;

==================================================
MapDemo.java
index 8023e8fb68..0db6faa900 100644
--- a/test/org/apache/catalina/nonblocking/TestNonBlockingAPI.java
+++ b/test/org/apache/catalina/nonblocking/TestNonBlockingAPI.java
@@ -307,9 +307,9 @@ public class TestNonBlockingAPI extends TomcatBaseTest {
                         if (resultEnd > resultString.length()) {
                             resultEnd = resultString.length();
                         }
-                        log.error("Mis-match tx: " + new String(
+                        log.error("Mismatch tx: " + new String(
                                 DATA, dataStart, dataEnd - dataStart));
-                        log.error("Mis-match rx: " +
+                        log.error("Mismatch rx: " +
                                 resultString.substring(resultStart, resultEnd));
                         found = true;
                         break;
@@ -795,9 +795,9 @@ public class TestNonBlockingAPI extends TomcatBaseTest {
         int written = 0;
         public volatile boolean onErrorInvoked = false;
 
-        public TestWriteListener(AsyncContext ctx, boolean unlimted) {
+        public TestWriteListener(AsyncContext ctx, boolean unlimited) {
             this.ctx = ctx;
-            this.unlimited = unlimted;
+            this.unlimited = unlimited;
         }
 
         @Override

==================================================
TestHttp11Processor.java
index f6c657b8d3..17ba0e829b 100644
--- a/test/org/apache/catalina/tribes/demos/MapDemo.java
+++ b/test/org/apache/catalina/tribes/demos/MapDemo.java
@@ -168,7 +168,7 @@ public class MapDemo implements ChannelListener, MembershipListener{
         @Override
         public void run() {
             System.out.println("Shutting down...");
-            //create an exit thread that forces a shutdown if the JVM wont exit cleanly
+            //create an exit thread that forces a shutdown if the JVM won't exit cleanly
             SystemExit exit = new SystemExit(5000);
             exit.setDaemon(true);
             exit.start();

==================================================
Http2TestBase.java
index 9fe42438a4..f967195bc2 100644
--- a/test/org/apache/coyote/http11/TestHttp11Processor.java
+++ b/test/org/apache/coyote/http11/TestHttp11Processor.java
@@ -1816,7 +1816,7 @@ public class TestHttp11Processor extends TomcatBaseTest {
             // Needs to be async to trigger the problematic code path
             AsyncContext ac = req.startAsync();
             ServletInputStream sis = req.getInputStream();
-            // This triggers a call to Http11InputBuffer.avalable(true) which
+            // This triggers a call to Http11InputBuffer.available(true) which
             // did not handle the pipelining case.
             sis.setReadListener(new Bug64974ReadListener());
             ac.complete();

==================================================
TestCancelledUpload.java
index 0c0d83f9b3..12c8fd7aeb 100644
--- a/test/org/apache/coyote/http2/Http2TestBase.java
+++ b/test/org/apache/coyote/http2/Http2TestBase.java
@@ -1430,7 +1430,7 @@ public abstract class Http2TestBase extends TomcatBaseTest {
         @Override
         protected void doGet(HttpServletRequest req, HttpServletResponse resp)
                 throws ServletException, IOException {
-            // Request bodies are unusal with GET but not illegal
+            // Request bodies are unusual with GET but not illegal
             doPost(req, resp);
         }
 

==================================================
TestWsSubprotocols.java
index 60c943b0df..e4738ccf6a 100644
--- a/test/org/apache/coyote/http2/TestCancelledUpload.java
+++ b/test/org/apache/coyote/http2/TestCancelledUpload.java
@@ -168,7 +168,7 @@ public class TestCancelledUpload extends Http2TestBase {
 
         @Override
         protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
-            // Read upto 128 bytes and then return a 403 response
+            // Read up to 128 bytes and then return a 403 response
 
             InputStream is = req.getInputStream();
             byte[] buf = new byte[128];

==================================================
