9a34fcc9a4cc20445aadcd62145b409f2311a456
==================================================
Fix socket properties usage so that we can decide if we want to accept the default value or if we want to use a preset value
==================================================
Filip Hanik
==================================================
Tue Nov 11 20:00:26 2008 +0000
==================================================
Http11NioProtocol.java
Fix socket properties usage so that we can decide if we want to accept the default value or if we want to use a preset value


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@713144 13f79535-47bb-0310-9956-ffa450edef68



==================================================
NioEndpoint.java
index 310346016f..e36a178e1d 100644
--- a/java/org/apache/coyote/http11/Http11NioProtocol.java
+++ b/java/org/apache/coyote/http11/Http11NioProtocol.java
@@ -132,10 +132,6 @@ public class Http11NioProtocol implements ProtocolHandler, MBeanRegistration
         ep.setName(getName());
         ep.setHandler(cHandler);
         
-        //todo, determine if we even need these
-        ep.getSocketProperties().setRxBufSize(Math.max(ep.getSocketProperties().getRxBufSize(),getMaxHttpHeaderSize()));
-        ep.getSocketProperties().setTxBufSize(Math.max(ep.getSocketProperties().getTxBufSize(),getMaxHttpHeaderSize()));
-        
         try {
             ep.init();
             sslImplementation = new JSSEImplementation();

==================================================
SocketProperties.java
index 57f61ddd7f..23e1ad88dc 100644
--- a/java/org/apache/tomcat/util/net/NioEndpoint.java
+++ b/java/org/apache/tomcat/util/net/NioEndpoint.java
@@ -735,14 +735,7 @@ public class NioEndpoint {
             return;
 
         serverSock = ServerSocketChannel.open();
-        int performanceConnectionTime = socketProperties.getPerformanceConnectionTime();
-        int performanceLatency= socketProperties.getPerformanceLatency();
-        int performanceBandwidth = socketProperties.getPerformanceBandwidth();
-        if (performanceConnectionTime != -1 && performanceLatency != -1 &&
-                performanceBandwidth != -1)
-            serverSock.socket().setPerformancePreferences(socketProperties.getPerformanceConnectionTime(),
-                                                      socketProperties.getPerformanceLatency(),
-                                                      socketProperties.getPerformanceBandwidth());
+        socketProperties.setProperties(serverSock.socket());
         InetSocketAddress addr = (address!=null?new InetSocketAddress(address,port):new InetSocketAddress(port));
         serverSock.socket().bind(addr,backlog); 
         serverSock.configureBlocking(true); //mimic APR behavior

==================================================
