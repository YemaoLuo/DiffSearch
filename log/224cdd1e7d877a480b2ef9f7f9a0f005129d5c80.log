224cdd1e7d877a480b2ef9f7f9a0f005129d5c80
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=57216
==================================================
Konstantin Kolinko
==================================================
Tue Nov 18 14:04:07 2014 +0000
==================================================
StandardContext.java
index 11851ed376..3cb69c4227 100644
--- a/java/org/apache/catalina/core/LocalStrings.properties
+++ b/java/org/apache/catalina/core/LocalStrings.properties
@@ -131,7 +131,7 @@ standardContext.notStarted=Context with name [{0}] has not yet been started
 standardContext.notWrapper=Child of a Context must be a Wrapper
 standardContext.parameter.duplicate=Duplicate context initialization parameter {0}
 standardContext.parameter.required=Both parameter name and parameter value are required
-standardContext.pathInvalid=A context path must either be an empty string or start with a ''/''. The path [{0}] does not meet these criteria and has been changed to [{1}]
+standardContext.pathInvalid=A context path must either be an empty string or start with a ''/'' and do not end with a ''/''. The path [{0}] does not meet these criteria and has been changed to [{1}]
 standardContext.postconstruct.duplicate=Duplicate post construct method definition for class {0}
 standardContext.postconstruct.required=Both fully qualified class name and method name are required
 standardContext.predestroy.duplicate=Duplicate pre destroy method definition for class {0}

==================================================
TestStandardContext.java
index a65626d47e..9ce1882570 100644
--- a/java/org/apache/catalina/core/StandardContext.java
+++ b/java/org/apache/catalina/core/StandardContext.java
@@ -2010,13 +2010,17 @@ public class StandardContext extends ContainerBase
     public void setPath(String path) {
         boolean invalid = false;
         if (path == null || path.equals("/")) {
+            invalid = true;
             this.path = "";
+        } else if ("".equals(path) || path.startsWith("/")) {
+            this.path = path;
+        } else {
             invalid = true;
-        } else if (!path.equals("") && !path.startsWith("/")) {
             this.path = "/" + path;
+        }
+        if (this.path.endsWith("/")) {
             invalid = true;
-        } else {
-            this.path = path;
+            this.path = this.path.substring(0, this.path.length() - 1);
         }
         if (invalid) {
             log.warn(sm.getString(

==================================================
