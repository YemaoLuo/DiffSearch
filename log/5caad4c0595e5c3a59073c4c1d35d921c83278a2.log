5caad4c0595e5c3a59073c4c1d35d921c83278a2
==================================================
- Update to use two action code.
==================================================
Remy Maucherat
==================================================
Thu Aug 17 11:41:43 2006 +0000
==================================================
CoyoteAdapter.java
- Update to use two action code.
- The attribute to advertise comet support remains for now.
- No update to the comet interface at this time.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk@432214 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ActionCode.java
index 26261a66e7..4b087cda07 100644
--- a/java/org/apache/catalina/connector/CoyoteAdapter.java
+++ b/java/org/apache/catalina/connector/CoyoteAdapter.java
@@ -128,7 +128,8 @@ public class CoyoteAdapter
                 servlet = (CometProcessor) request.getWrapper().allocate();
             } catch (Throwable t) {
                 log.error(sm.getString("coyoteAdapter.service"), t);
-                request.removeAttribute("org.apache.tomcat.comet");
+                request.recycle();
+                response.recycle();
                 // Restore the context classloader
                 Thread.currentThread().setContextClassLoader
                     (CoyoteAdapter.class.getClassLoader());
@@ -140,7 +141,6 @@ public class CoyoteAdapter
                 } else {
                     if (!servlet.read(request.getRequest(), response.getResponse())) {
                         error = true;
-                        request.removeAttribute("org.apache.tomcat.comet");
                         try {
                             servlet.error(request.getRequest(), response.getResponse());
                         } catch (Throwable th) {
@@ -148,12 +148,15 @@ public class CoyoteAdapter
                         }
                     }
                 }
+                if (response.isClosed()) {
+                    res.action(ActionCode.ACTION_COMET_END, null);
+                }
                 return (!error);
             } catch (Throwable t) {
                 if (!(t instanceof IOException)) {
                     log.error(sm.getString("coyoteAdapter.service"), t);
                 }
-                request.removeAttribute("org.apache.tomcat.comet");
+                error = true;
                 try {
                     servlet.error(request.getRequest(), response.getResponse());
                 } catch (Throwable th) {
@@ -161,14 +164,14 @@ public class CoyoteAdapter
                 }
                 return false;
             } finally {
+                // Restore the context classloader
+                Thread.currentThread().setContextClassLoader
+                    (CoyoteAdapter.class.getClassLoader());
                 // Recycle the wrapper request and response
-                if (request.getAttribute("org.apache.tomcat.comet") == null) {
+                if (error || response.isClosed()) {
                     request.recycle();
                     response.recycle();
                 }
-                // Restore the context classloader
-                Thread.currentThread().setContextClassLoader
-                    (CoyoteAdapter.class.getClassLoader());
             }
         }
         return true;
@@ -222,14 +225,15 @@ public class CoyoteAdapter
                 connector.getContainer().getPipeline().getFirst().invoke(request, response);
             }
 
-            if (request.getAttribute("org.apache.tomcat.comet") == Boolean.TRUE
-                    && request.getWrapper().allocate() instanceof CometProcessor) {
+            if (request.getWrapper().allocate() instanceof CometProcessor 
+                    && !response.isClosed()) {
                 comet = true;
+                res.action(ActionCode.ACTION_COMET_BEGIN, null);
             }
 
             if (!comet) {
                 response.finishResponse();
-                req.action( ActionCode.ACTION_POST_REQUEST , null);
+                req.action(ActionCode.ACTION_POST_REQUEST , null);
             }
 
         } catch (IOException e) {

==================================================
Http11AprProcessor.java
index b5edb19341..e9f51338ab 100644
--- a/java/org/apache/coyote/ActionCode.java
+++ b/java/org/apache/coyote/ActionCode.java
@@ -133,6 +133,18 @@ public final class ActionCode {
     public static final ActionCode ACTION_REQ_SET_BODY_REPLAY = new ActionCode(20);
 
 
+    /**
+     * Callback for begin Comet processing
+     */
+    public static final ActionCode ACTION_COMET_BEGIN = new ActionCode(21);
+
+
+    /**
+     * Callback for begin Comet processing
+     */
+    public static final ActionCode ACTION_COMET_END = new ActionCode(22);
+
+
     // ----------------------------------------------------------- Constructors
     int code;
 

==================================================
