a2bf1070b00e4e3ed7c0d82cd7b41d0f7f2ddcfb
==================================================
Whitespace removal from /java/org/apache/catalina/ant
==================================================
Mark Emlyn
==================================================
Sat Oct 22 21:07:41 2011 +0000
==================================================
AbstractCatalinaCommandTask.java
Whitespace removal from /java/org/apache/catalina/ant

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1187783 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AbstractCatalinaTask.java
index 2cc4e5be4e..bc02d47465 100644
--- a/java/org/apache/catalina/ant/AbstractCatalinaCommandTask.java
+++ b/java/org/apache/catalina/ant/AbstractCatalinaCommandTask.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -49,12 +49,12 @@ public abstract class AbstractCatalinaCommandTask extends
     public void setVersion(String version) {
         this.version = version;
     }
-    
+
     // --------------------------------------------------------- Public Methods
 
     /**
      * Create query string for the specified command.
-     * 
+     *
      * @param command Command to be executed
      *
      * @exception BuildException if an error occurs

==================================================
BaseRedirectorHelperTask.java
index d649468b42..1338925026 100644
--- a/java/org/apache/catalina/ant/AbstractCatalinaTask.java
+++ b/java/org/apache/catalina/ant/AbstractCatalinaTask.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -51,7 +51,7 @@ public abstract class AbstractCatalinaTask extends BaseRedirectorHelperTask {
 
     /**
      * manager webapp's encoding.
-     */ 
+     */
     private static String CHARSET = "utf-8";
 
 
@@ -189,7 +189,7 @@ public abstract class AbstractCatalinaTask extends BaseRedirectorHelperTask {
                 if (contentLength >= 0) {
                     hconn.setRequestProperty("Content-Length",
                                              "" + contentLength);
-                    
+
                     hconn.setFixedLengthStreamingMode(contentLength);
                 }
             } else {

==================================================
DeployTask.java
index 26685b317b..2bee24082d 100644
--- a/java/org/apache/catalina/ant/BaseRedirectorHelperTask.java
+++ b/java/org/apache/catalina/ant/BaseRedirectorHelperTask.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -35,16 +35,16 @@ import org.apache.tools.ant.types.RedirectorElement;
  * Abstract base class to add output redirection support for Catalina
  * Ant tasks. These tasks require Ant 1.5 or later.
  * <br>
- * <strong>WARNING:</strong> due to depends chain, Ant could call a Task 
+ * <strong>WARNING:</strong> due to depends chain, Ant could call a Task
  * more than once and this can affect the output redirection when configured.
  * If you are collecting the output in a property, it will collect the output
  * of only the first run, since Ant properties are immutable and once created
  * they cannot be changed.
  * <br>
  * If you are collecting output in a file the file will be overwritten with the
- * output of the last run, unless you set append="true", in which case each run 
+ * output of the last run, unless you set append="true", in which case each run
  * will append it's output to the file.
- * 
+ *
  *
  * @author Gabriele Garuglieri
  * @version $Id$
@@ -68,7 +68,7 @@ public abstract class BaseRedirectorHelperTask extends Task {
     PrintStream redirectOutPrintStream = null;
     /** The print stream for error output */
     PrintStream redirectErrPrintStream = null;
-        
+
    /**
      * Whether to fail (with a BuildException) if
      * ManagerServlet returns an error. The default behavior is
@@ -77,23 +77,23 @@ public abstract class BaseRedirectorHelperTask extends Task {
      * This flag does not control parameters checking. If the task is called
      * with wrong or invalid parameters, it will throw BuildException
      * independently from the setting of this flag.
-     */    
+     */
     protected boolean failOnError = true;
-    
-    /** 
+
+    /**
       * <code>true</code> true when output redirection is requested for this task .
       * Default is to log on Ant log.
-      */    
+      */
     protected boolean redirectOutput = false;
- 
-    /** 
+
+    /**
       * will be set to <code>true</code> when the configuration of the Redirector is
       * complete.
-      */    
+      */
     protected boolean redirectorConfigured = false;
 
-    /** 
-     * Flag which indicates that, if redirected, output should also be 
+    /**
+     * Flag which indicates that, if redirected, output should also be
      * always sent to the log. Default is that output is sent only to
      * redirected streams.
      */
@@ -115,7 +115,7 @@ public abstract class BaseRedirectorHelperTask extends Task {
     public boolean isFailOnError() {
       return failOnError;
     }
-        
+
 
     /**
      * File the output of the task is redirected to.
@@ -257,7 +257,7 @@ public abstract class BaseRedirectorHelperTask extends Task {
 
     /**
      * Ask redirector to close all the streams. It is necessary to call this method
-     * before leaving the Task to have the Streams flush their contents. If you are 
+     * before leaving the Task to have the Streams flush their contents. If you are
      * collecting output in a property, it will be created only if this method is
      * called, otherwise you'll find it unset.
      */
@@ -272,7 +272,7 @@ public abstract class BaseRedirectorHelperTask extends Task {
         }
         /*
          * Due to depends chain, Ant could call the Task more than once,
-         * this is to prevent that we attempt to reuse the previously 
+         * this is to prevent that we attempt to reuse the previously
          * closed Streams.
          */
         redirectOutStream = null;
@@ -280,7 +280,7 @@ public abstract class BaseRedirectorHelperTask extends Task {
         redirectErrStream = null;
         redirectErrPrintStream = null;
     }
-    
+
     /**
      * Handles output with the INFO priority.
      *
@@ -296,7 +296,7 @@ public abstract class BaseRedirectorHelperTask extends Task {
             if (alwaysLog) {
                 log(output, Project.MSG_INFO);
             }
-        } else { 
+        } else {
             log(output, Project.MSG_INFO);
         }
     }
@@ -328,7 +328,7 @@ public abstract class BaseRedirectorHelperTask extends Task {
             if (alwaysLog) {
                 log(output, Project.MSG_ERR);
             }
-        } else { 
+        } else {
             log(output, Project.MSG_ERR);
         }
     }
@@ -344,7 +344,7 @@ public abstract class BaseRedirectorHelperTask extends Task {
         handleErrorOutput(output);
         redirectErrPrintStream.flush();
     }
-  
+
     /**
      * Handles output with ERR priority to error stream and all other
      * priorities to output stream.

==================================================
FindLeaksTask.java
index 6c84edf103..d7e7046fce 100644
--- a/java/org/apache/catalina/ant/DeployTask.java
+++ b/java/org/apache/catalina/ant/DeployTask.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -59,7 +59,7 @@ public class DeployTask extends AbstractCatalinaTask {
 
 
     /**
-     * URL of the server local web application archive (WAR) file 
+     * URL of the server local web application archive (WAR) file
      * to be deployed.
      */
     protected String localWar = null;

==================================================
JKStatusUpdateTask.java
index 7eda625b9b..2db6aadf1b 100644
--- a/java/org/apache/catalina/ant/FindLeaksTask.java
+++ b/java/org/apache/catalina/ant/FindLeaksTask.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

==================================================
JMXGetTask.java
index cab3d8972e..98c9c03ca8 100644
--- a/java/org/apache/catalina/ant/JKStatusUpdateTask.java
+++ b/java/org/apache/catalina/ant/JKStatusUpdateTask.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -25,7 +25,7 @@ import org.apache.tools.ant.BuildException;
 /**
  * Ant task that implements the <code>/status</code> command, supported by the
  * mod_jk status (1.2.9) application.
- * 
+ *
  * @author Peter Rossbach
  * @version $Revision$
  * @since 5.5.9
@@ -55,13 +55,13 @@ public class JKStatusUpdateTask extends AbstractCatalinaTask {
     private Boolean workerDisabled = Boolean.FALSE;
 
     private Boolean workerStopped = Boolean.FALSE;
-    
+
     private boolean isLBMode = true;
 
     private String workerLb;
 
     /**
-     *  
+     *
      */
     public JKStatusUpdateTask() {
         super();
@@ -224,14 +224,14 @@ public class JKStatusUpdateTask extends AbstractCatalinaTask {
     public Boolean getWorkerStopped() {
         return workerStopped;
     }
-    
+
     /**
      * @param workerStopped The workerStopped to set.
      */
     public void setWorkerStopped(Boolean workerStopped) {
         this.workerStopped = workerStopped;
     }
-    
+
     /**
      * @return Returns the workerLoadFactor.
      */
@@ -264,7 +264,7 @@ public class JKStatusUpdateTask extends AbstractCatalinaTask {
 
     /**
      * Execute the requested operation.
-     * 
+     *
      * @exception BuildException
      *                if an error occurs
      */
@@ -287,7 +287,7 @@ public class JKStatusUpdateTask extends AbstractCatalinaTask {
      * </b>http://localhost/status?cmd=update&mime=txt&w=node1&l=lb&wf=1&wd=false&ws=false
      * </li>
      * </ul>
-     * 
+     *
      * @return create jkstatus link
      */
     private StringBuilder createLink() {

==================================================
JMXQueryTask.java
index c5899da04f..b772495e48 100644
--- a/java/org/apache/catalina/ant/JMXGetTask.java
+++ b/java/org/apache/catalina/ant/JMXGetTask.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -47,7 +47,7 @@ public class JMXGetTask extends AbstractCatalinaTask {
     protected String attribute = null;
 
     // Public Methods
-    
+
     /**
      * Get method for the bean name
      * @return Bean name
@@ -95,7 +95,7 @@ public class JMXGetTask extends AbstractCatalinaTask {
         log("Getting attribute " + attribute +
                 " in bean " + bean );
         try {
-            execute("/jmxproxy/?get=" + URLEncoder.encode(bean, getCharset()) 
+            execute("/jmxproxy/?get=" + URLEncoder.encode(bean, getCharset())
                     + "&att=" + URLEncoder.encode(attribute, getCharset()));
         } catch (UnsupportedEncodingException e) {
             throw new BuildException

==================================================
JMXSetTask.java
index e5f030d4ed..6fe3fd0501 100644
--- a/java/org/apache/catalina/ant/JMXQueryTask.java
+++ b/java/org/apache/catalina/ant/JMXQueryTask.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -26,7 +26,7 @@ import org.apache.tools.ant.BuildException;
 
 
 /**
- * Ant task that implements the JMX Query command 
+ * Ant task that implements the JMX Query command
  * (<code>/jmxproxy/?qry</code>) supported by the Tomcat manager application.
  *
  * @author Vivek Chopra
@@ -37,13 +37,13 @@ public class JMXQueryTask extends AbstractCatalinaTask {
     // Properties
 
     /**
-     * The JMX query string 
+     * The JMX query string
      * @see #setQuery(String)
      */
     protected String query      = null;
 
     // Public Methods
-    
+
     /**
      * Get method for the JMX query string
      * @return Query string
@@ -61,7 +61,7 @@ public class JMXQueryTask extends AbstractCatalinaTask {
      * <LI>*:j2eeType=Servlet,*</LI>
      * <LI>Catalina:type=Environment,resourcetype=Global,name=simpleValue</LI>
      * </UL>
-     * </P> 
+     * </P>
      * @param query JMX Query string
      */
     public void setQuery (String query) {
@@ -87,7 +87,7 @@ public class JMXQueryTask extends AbstractCatalinaTask {
                     ("Invalid 'charset' attribute: " + getCharset());
             }
         }
-        log("Query string is " + queryString); 
+        log("Query string is " + queryString);
         execute ("/jmxproxy/" + queryString);
     }
 }

==================================================
ListTask.java
index 292ce09a43..582fed8f68 100644
--- a/java/org/apache/catalina/ant/JMXSetTask.java
+++ b/java/org/apache/catalina/ant/JMXSetTask.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -52,7 +52,7 @@ public class JMXSetTask extends AbstractCatalinaTask {
     protected String value     = null;
 
     // Public Methods
-    
+
     /**
      * Get method for the bean name
      * @return Bean name
@@ -115,10 +115,10 @@ public class JMXSetTask extends AbstractCatalinaTask {
         }
         log("Setting attribute " + attribute +
                             " in bean " + bean +
-                            " to " + value); 
+                            " to " + value);
         try {
-            execute("/jmxproxy/?set=" + URLEncoder.encode(bean, getCharset()) 
-                    + "&att=" + URLEncoder.encode(attribute, getCharset()) 
+            execute("/jmxproxy/?set=" + URLEncoder.encode(bean, getCharset())
+                    + "&att=" + URLEncoder.encode(attribute, getCharset())
                     + "&val=" + URLEncoder.encode(value, getCharset()));
         } catch (UnsupportedEncodingException e) {
             throw new BuildException

==================================================
ReloadTask.java
index 6cf128d153..99236fe930 100644
--- a/java/org/apache/catalina/ant/ListTask.java
+++ b/java/org/apache/catalina/ant/ListTask.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

==================================================
ResourcesTask.java
index 316a858f5d..466bf73010 100644
--- a/java/org/apache/catalina/ant/ReloadTask.java
+++ b/java/org/apache/catalina/ant/ReloadTask.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

==================================================
ServerinfoTask.java
index a90febde05..1d1e26ae7a 100644
--- a/java/org/apache/catalina/ant/ResourcesTask.java
+++ b/java/org/apache/catalina/ant/ResourcesTask.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

==================================================
SessionsTask.java
index 0f137624de..8c6669787d 100644
--- a/java/org/apache/catalina/ant/ServerinfoTask.java
+++ b/java/org/apache/catalina/ant/ServerinfoTask.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

==================================================
StartTask.java
index 0aed7ad77b..15c61f6f57 100644
--- a/java/org/apache/catalina/ant/SessionsTask.java
+++ b/java/org/apache/catalina/ant/SessionsTask.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -33,15 +33,15 @@ public class SessionsTask extends AbstractCatalinaCommandTask {
 
 
     protected String idle = null;
-    
+
     public String getIdle() {
         return this.idle;
     }
-    
+
     public void setIdle(String idle) {
         this.idle = idle;
     }
-    
+
     @Override
     public StringBuilder createQueryString(String command) {
         StringBuilder buffer = super.createQueryString(command);
@@ -51,7 +51,7 @@ public class SessionsTask extends AbstractCatalinaCommandTask {
         }
         return buffer;
     }
-    
+
     /**
      * Execute the requested operation.
      *
@@ -62,7 +62,7 @@ public class SessionsTask extends AbstractCatalinaCommandTask {
 
         super.execute();
         execute(createQueryString("/sessions").toString());
-        
+
     }
 
 }

==================================================
StopTask.java
index a229a0517d..b84e9ad90d 100644
--- a/java/org/apache/catalina/ant/StartTask.java
+++ b/java/org/apache/catalina/ant/StartTask.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

==================================================
UndeployTask.java
index 36b843098f..a35cec1814 100644
--- a/java/org/apache/catalina/ant/StopTask.java
+++ b/java/org/apache/catalina/ant/StopTask.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -45,5 +45,5 @@ public class StopTask extends AbstractCatalinaCommandTask {
 
     }
 
-    
+
 }

==================================================
ValidatorTask.java
index 8773c061d7..cb3755e272 100644
--- a/java/org/apache/catalina/ant/UndeployTask.java
+++ b/java/org/apache/catalina/ant/UndeployTask.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

==================================================
Arg.java
index 5923ec0702..6489bf416e 100644
--- a/java/org/apache/catalina/ant/antlib.xml
+++ b/java/org/apache/catalina/ant/antlib.xml
@@ -30,7 +30,7 @@
         classname="org.apache.catalina.ant.ReloadTask" />
   <typedef
         name="stop"
-        classname="org.apache.catalina.ant.StopTask" />        
+        classname="org.apache.catalina.ant.StopTask" />
   <typedef
         name="undeploy"
         classname="org.apache.catalina.ant.UndeployTask" />

==================================================
JMXAccessorCondition.java
index b9af42983a..b12820a082 100644
--- a/java/org/apache/catalina/ant/jmx/Arg.java
+++ b/java/org/apache/catalina/ant/jmx/Arg.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

==================================================
JMXAccessorCreateTask.java
index 5096bc5663..ea17286861 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorCondition.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorCondition.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -30,7 +30,7 @@ import org.apache.tools.ant.taskdefs.condition.Condition;
 /**
  *
  * <b>Definition</b>:
- * <pre> 
+ * <pre>
  *   &lt;path id="catalina_ant">
  *       &lt;fileset dir="${catalina.home}/server/lib">
  *           &lt;include name="catalina-ant.jar"/>
@@ -46,7 +46,7 @@ import org.apache.tools.ant.taskdefs.condition.Condition;
  *       classname="org.apache.catalina.ant.jmx.JMXAccessorTask"
  *       classpathref="catalina_ant"/>
  * </pre>
- * 
+ *
  * <b>Usage</b>: Wait for start backup node
  * <pre>
  *     &lt;target name="wait"&gt;
@@ -58,7 +58,7 @@ import org.apache.tools.ant.taskdefs.condition.Condition;
  *               &lt;http url="${url}"/&gt;
  *               &lt;jmxCondition
  *                   name="Catalina:type=IDataSender,host=localhost,senderAddress=192.168.111.1,senderPort=9025"
- *                   operation="==" 
+ *                   operation="=="
  *                   attribute="connected" value="true"
  *               /&gt;
  *               &lt;jmxCondition
@@ -81,7 +81,7 @@ import org.apache.tools.ant.taskdefs.condition.Condition;
  * <li>&gt;= greater than or equals (&amp;gt;=)</li>
  * <li>&lt; lesser than (&amp;lt;)</li>
  * <li>&lt;= lesser than or equals (&amp;lt;=)</li>
- * </ul> 
+ * </ul>
  * <b>NOTE</b>:  For numeric expressions the type must be set and use xml entities as operations.<br/>
  * As type we currently support <em>long</em> and <em>double</em>.
  * @author Peter Rossbach
@@ -106,7 +106,7 @@ public class JMXAccessorCondition extends ProjectComponent implements Condition
     private String ref = "jmx.server";
     private String unlessCondition;
     private String ifCondition;
-     
+
     // ----------------------------------------------------- Properties
 
     /**
@@ -228,7 +228,7 @@ public class JMXAccessorCondition extends ProjectComponent implements Condition
     public void setValue(String value) {
         this.value = value;
     }
- 
+
     /**
      * @return Returns the ref.
      */
@@ -260,7 +260,7 @@ public class JMXAccessorCondition extends ProjectComponent implements Condition
     public String getUnless() {
         return unlessCondition;
     }
- 
+
     /**
      * Only execute if a property of the given name does not
      * exist in the current project.
@@ -285,7 +285,7 @@ public class JMXAccessorCondition extends ProjectComponent implements Condition
     }
 
     /**
-     * Get value from MBeans attribute 
+     * Get value from MBeans attribute
      * @return The value
      */
     protected String accessJMXValue() {

==================================================
JMXAccessorEqualsCondition.java
index 09bacac5e0..efa5a408d7 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorCreateTask.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorCreateTask.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -25,7 +25,7 @@ import javax.management.ObjectName;
 import org.apache.tools.ant.BuildException;
 
 /**
- * Create new MBean at <em>JMX</em> JSR 160 MBeans Server. 
+ * Create new MBean at <em>JMX</em> JSR 160 MBeans Server.
  * <ul>
  * <li>Create Mbeans</li>
  * <li>Create Mbeans with parameter</li>
@@ -34,7 +34,7 @@ import org.apache.tools.ant.BuildException;
  * <p>
  * Examples:
  * <br/>
- * create a new Mbean at jmx.server connection 
+ * create a new Mbean at jmx.server connection
  * <pre>
  *   &lt;jmx:create
  *           ref="jmx.server"
@@ -73,28 +73,28 @@ public class JMXAccessorCreateTask extends JMXAccessorTask {
     public String getClassLoader() {
         return classLoader;
     }
-    
+
     /**
      * @param classLoaderName The classLoader to set.
      */
     public void setClassLoader(String classLoaderName) {
         this.classLoader = classLoaderName;
     }
-    
+
     /**
      * @return Returns the className.
      */
     public String getClassName() {
         return className;
     }
-    
+
     /**
      * @param className The className to set.
      */
     public void setClassName(String className) {
         this.className = className;
     }
-    
+
     public void addArg(Arg arg ) {
         args.add(arg);
     }
@@ -113,12 +113,12 @@ public class JMXAccessorCreateTask extends JMXAccessorTask {
     }
 
     // ------------------------------------------------------ protected Methods
-    
+
     /**
      * Execute the specified command, based on the configured properties. The
      * input stream will be closed upon completion of this task, whether it was
      * executed successfully or not.
-     * 
+     *
      * @exception Exception
      *                if an error occurs
      */
@@ -135,7 +135,7 @@ public class JMXAccessorCreateTask extends JMXAccessorTask {
         }
         return jmxCreate(jmxServerConnection, getName());
      }
-    
+
     /**
      * create new Mbean and when set from ClassLoader Objectname
      * @param jmxServerConnection
@@ -160,7 +160,7 @@ public class JMXAccessorCreateTask extends JMXAccessorTask {
                } else {
                    sigA[i]=arg.getType();
                    argsA[i]=convertStringToType(arg.getValue(),arg.getType());
-               }                
+               }
            }
         }
         if (classLoader != null && !"".equals(classLoader)) {
@@ -172,7 +172,7 @@ public class JMXAccessorCreateTask extends JMXAccessorTask {
                 jmxServerConnection.createMBean(className, new ObjectName(name), new ObjectName(classLoader));
             else
                 jmxServerConnection.createMBean(className, new ObjectName(name), new ObjectName(classLoader),argsA,sigA);
-                
+
         } else {
             if (isEcho()) {
                 handleOutput("create MBean " + name + " from class "
@@ -185,5 +185,5 @@ public class JMXAccessorCreateTask extends JMXAccessorTask {
         }
         return error;
     }
-    
+
 }

==================================================
JMXAccessorGetTask.java
index aafc2a780d..874bcacc8f 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorEqualsCondition.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorEqualsCondition.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -30,7 +30,7 @@ import org.apache.tools.ant.taskdefs.condition.Condition;
 /**
  *
  * Definition
- * <pre> 
+ * <pre>
  *   &lt;path id="catalina_ant">
  *       &lt;fileset dir="${catalina.home}/server/lib">
  *           &lt;include name="catalina-ant.jar"/>
@@ -42,7 +42,7 @@ import org.apache.tools.ant.taskdefs.condition.Condition;
  *       classname="org.apache.catalina.ant.jmx.JMXAccessorEqualsCondition"
  *       classpathref="catalina_ant"/>
  * </pre>
- * 
+ *
  * usage: Wait for start backup node
  * <pre>
  *     &lt;target name="wait"&gt;
@@ -50,7 +50,7 @@ import org.apache.tools.ant.taskdefs.condition.Condition;
  *           &lt;and&gt;
  *               &lt;socket server="${server.name}" port="${server.port}"/&gt;
  *               &lt;http url="${url}"/&gt;
- *               &lt;jmxEquals 
+ *               &lt;jmxEquals
  *                   host="localhost" port="9014" username="controlRole" password="tomcat"
  *                   name="Catalina:type=IDataSender,host=localhost,senderAddress=192.168.111.1,senderPort=9025"
  *                   attribute="connected" value="true"
@@ -62,7 +62,7 @@ import org.apache.tools.ant.taskdefs.condition.Condition;
  *   &lt;/target&gt;
  *
  * </pre>
- * 
+ *
  * @author Peter Rossbach
  * @version $Id$
  * @since 5.5.10
@@ -191,7 +191,7 @@ public class JMXAccessorEqualsCondition  extends ProjectComponent  implements Co
     public void setRef(String refId) {
         this.ref = refId;
     }
-    
+
     protected MBeanServerConnection getJMXConnection()
             throws MalformedURLException, IOException {
         return JMXAccessorTask.accessJMXConnection(

==================================================
JMXAccessorInvokeTask.java
index 75783d7c1c..619f920b48 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorGetTask.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorGetTask.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -26,7 +26,7 @@ import org.apache.tools.ant.BuildException;
 
 
 /**
- * Access <em>JMX</em> JSR 160 MBeans Server. 
+ * Access <em>JMX</em> JSR 160 MBeans Server.
  * <ul>
  * <li>Get Mbeans attributes</li>
  * <li>Show Get result as Ant console log</li>
@@ -35,11 +35,11 @@ import org.apache.tools.ant.BuildException;
  * <p>
  * Examples:
  * <br/>
- * Get a Mbean IDataSender attribute nrOfRequests and create a new ant property <em>IDataSender.9025.nrOfRequests</em> 
+ * Get a Mbean IDataSender attribute nrOfRequests and create a new ant property <em>IDataSender.9025.nrOfRequests</em>
  * <pre>
  *   &lt;jmx:get
  *           ref="jmx.server"
- *           name="Catalina:type=IDataSender,host=localhost,senderAddress=192.168.1.2,senderPort=9025" 
+ *           name="Catalina:type=IDataSender,host=localhost,senderAddress=192.168.1.2,senderPort=9025"
  *           attribute="nrOfRequests"
  *           resultproperty="IDataSender.9025.nrOfRequests"
  *           echo="false"&gt;
@@ -64,29 +64,29 @@ public class JMXAccessorGetTask extends JMXAccessorTask {
     private String attribute;
 
     // ------------------------------------------------------------- Properties
-    
+
     /**
      * @return Returns the attribute.
      */
     public String getAttribute() {
         return attribute;
     }
-    
+
     /**
      * @param attribute The attribute to set.
      */
     public void setAttribute(String attribute) {
         this.attribute = attribute;
     }
-    
-  
+
+
     // ------------------------------------------------------ protected Methods
-    
+
     /**
      * Execute the specified command, based on the configured properties. The
      * input stream will be closed upon completion of this task, whether it was
      * executed successfully or not.
-     * 
+     *
      * @exception BuildException
      *                if an error occurs
      */

==================================================
JMXAccessorQueryTask.java
index 4da03b59e4..ee248ab403 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorInvokeTask.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorInvokeTask.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -29,7 +29,7 @@ import org.apache.tools.ant.BuildException;
 
 
 /**
- * Access <em>JMX</em> JSR 160 MBeans Server. 
+ * Access <em>JMX</em> JSR 160 MBeans Server.
  * <ul>
  * <li>open more then one JSR 160 rmi connection</li>
  * <li>Get/Set Mbeans attributes</li>
@@ -43,11 +43,11 @@ import org.apache.tools.ant.BuildException;
  * Examples:
  * <ul>
  * <li>
- * Get a session attribute hello from session with ref <em>${sessionid.0}</em> form 
- * app <em>Catalina:type=Manager,context=/ClusterTest,host=localhost</em> 
+ * Get a session attribute hello from session with ref <em>${sessionid.0}</em> form
+ * app <em>Catalina:type=Manager,context=/ClusterTest,host=localhost</em>
  * <pre>
  *   &lt;jmx:invoke
- *           name="Catalina:type=Manager,context=/ClusterTest,host=localhost" 
+ *           name="Catalina:type=Manager,context=/ClusterTest,host=localhost"
  *           operation="getSessionAttribute"
  *           resultproperty="hello"&gt;
  *         &lt;arg value="${sessionid.0}"/&gt;
@@ -56,10 +56,10 @@ import org.apache.tools.ant.BuildException;
  * </pre>
  * </li>
  * <li>
- * Create new AccessLogger at localhost 
+ * Create new AccessLogger at localhost
  * <code>
  *   &lt;jmx:invoke
- *           name="Catalina:type=MBeanFactory" 
+ *           name="Catalina:type=MBeanFactory"
  *           operation="createAccessLoggerValve"
  *           resultproperty="accessLoggerObjectName"
  *       &gt;
@@ -69,10 +69,10 @@ import org.apache.tools.ant.BuildException;
  * </code>
  * </li>
  * <li>
- * Remove existing AccessLogger at localhost 
+ * Remove existing AccessLogger at localhost
  * <code>
  *   &lt;jmx:invoke
- *           name="Catalina:type=MBeanFactory" 
+ *           name="Catalina:type=MBeanFactory"
  *           operation="removeValve"
  *       &gt;
  *         &lt;arg value="Catalina:type=Valve,name=AccessLogValve,host=localhost"/&gt;
@@ -100,7 +100,7 @@ public class JMXAccessorInvokeTask extends JMXAccessorTask {
     private List<Arg> args=new ArrayList<Arg>();
 
     // ------------------------------------------------------------- Properties
-    
+
     /**
      * @return Returns the operation.
      */
@@ -130,14 +130,14 @@ public class JMXAccessorInvokeTask extends JMXAccessorTask {
     public void setArgs(List<Arg> args) {
         this.args = args;
     }
-    
+
     // ------------------------------------------------------ protected Methods
-    
+
     /**
      * Execute the specified command, based on the configured properties. The
      * input stream will be closed upon completion of this task, whether it was
      * executed successfully or not.
-     * 
+     *
      * @exception BuildException
      *                if an error occurs
      */
@@ -176,7 +176,7 @@ public class JMXAccessorInvokeTask extends JMXAccessorTask {
                 } else {
                     sigA[i]=arg.getType();
                     argsA[i]=convertStringToType(arg.getValue(),arg.getType());
-                }                
+                }
             }
             result = jmxServerConnection.invoke(new ObjectName(name), operation, argsA, sigA);
         }

==================================================
JMXAccessorSetTask.java
index 4c6c4dba24..35696d32c9 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorQueryTask.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorQueryTask.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -31,7 +31,7 @@ import org.apache.tools.ant.BuildException;
 
 
 /**
- * Query for Mbeans. 
+ * Query for Mbeans.
  * <ul>
  * <li>open no existing JSR 160 rmi jmx connection</li>
  * <li>Get all Mbeans attributes</li>
@@ -45,14 +45,14 @@ import org.apache.tools.ant.BuildException;
  *   &lt;jmxQuery
  *           host="127.0.0.1"
  *           port="9014"
- *           name="Catalina:type=Manager,* 
+ *           name="Catalina:type=Manager,*
  *           resultproperty="manager" /&gt;
  * </pre>
- * with attribute <em>attributebinding="true"</em> you can get 
+ * with attribute <em>attributebinding="true"</em> you can get
  * all attributes also from result objects.<br/>
- * The property manager.lenght show the size of the result 
- * and with manager.[0..length].name the 
- * resulted ObjectNames are saved. 
+ * The property manager.lenght show the size of the result
+ * and with manager.[0..length].name the
+ * resulted ObjectNames are saved.
  * These tasks require Ant 1.6 or later interface.
  *
  * @author Peter Rossbach
@@ -67,7 +67,7 @@ public class JMXAccessorQueryTask extends JMXAccessorTask {
     private boolean attributebinding = false;
 
     // ------------------------------------------------------------- Properties
-    
+
     /**
      * @return Returns the attributebinding.
      */
@@ -80,15 +80,15 @@ public class JMXAccessorQueryTask extends JMXAccessorTask {
     public void setAttributebinding(boolean attributeBinding) {
         this.attributebinding = attributeBinding;
     }
-  
+
     // ------------------------------------------------------ protected Methods
 
-    
+
     /**
      * Execute the specified command, based on the configured properties. The
      * input stream will be closed upon completion of this task, whether it was
      * executed successfully or not.
-     * 
+     *
      * @exception Exception
      *                if an error occurs
      */
@@ -103,7 +103,7 @@ public class JMXAccessorQueryTask extends JMXAccessorTask {
 
     }
 
-       
+
     /**
      * Call Mbean server for some mbeans with same domain, attributes.
      *  with <em>attributebinding=true</em> you can save all attributes from all found objects
@@ -139,7 +139,7 @@ public class JMXAccessorQueryTask extends JMXAccessorTask {
                     setProperty(pname + "Name", oname.toString());
                     if (isAttributebinding()) {
                         bindAttributes(jmxServerConnection, resultproperty, pname, oname);
-                
+
                     }
                 }
         }
@@ -153,7 +153,7 @@ public class JMXAccessorQueryTask extends JMXAccessorTask {
      * @param oname
      */
     protected void bindAttributes(MBeanServerConnection jmxServerConnection, String resultproperty, String pname, ObjectName oname) {
-        if (jmxServerConnection != null  && resultproperty != null 
+        if (jmxServerConnection != null  && resultproperty != null
             && pname != null && oname != null ) {
             try {
                 MBeanInfo minfo = jmxServerConnection.getMBeanInfo(oname);

==================================================
JMXAccessorTask.java
index 7966d2abc3..ccb50bab89 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorSetTask.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorSetTask.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -29,7 +29,7 @@ import org.apache.tools.ant.BuildException;
 
 
 /**
- * Access <em>JMX</em> JSR 160 MBeans Server. 
+ * Access <em>JMX</em> JSR 160 MBeans Server.
  * <ul>
  * <li>Get Mbeans attributes</li>
  * <li>Show Get result as Ant console log</li>
@@ -38,13 +38,13 @@ import org.apache.tools.ant.BuildException;
  * <p>
  * Examples:
  * Set a Mbean Manager attribute maxActiveSessions.
- * Set this attribute with fresh jmx connection without save reference 
+ * Set this attribute with fresh jmx connection without save reference
  * <pre>
  *   &lt;jmx:set
  *           host="127.0.0.1"
  *           port="9014"
  *           ref=""
- *           name="Catalina:type=Manager,context="/ClusterTest",host=localhost" 
+ *           name="Catalina:type=Manager,context="/ClusterTest",host=localhost"
  *           attribute="maxActiveSessions"
  *           value="100"
  *           type="int"
@@ -70,23 +70,23 @@ public class JMXAccessorSetTask extends JMXAccessorTask {
     private String value;
     private String type;
     private boolean convert = false ;
-    
+
     // ------------------------------------------------------------- Properties
-    
+
     /**
      * @return Returns the attribute.
      */
     public String getAttribute() {
         return attribute;
     }
-    
+
     /**
      * @param attribute The attribute to set.
      */
     public void setAttribute(String attribute) {
         this.attribute = attribute;
     }
-    
+
     /**
      * @return Returns the value.
      */
@@ -99,23 +99,23 @@ public class JMXAccessorSetTask extends JMXAccessorTask {
     public void setValue(String value) {
         this.value = value;
     }
-    
-    
+
+
     /**
      * @return Returns the type.
      */
     public String getType() {
         return type;
     }
-    
+
     /**
      * @param valueType The type to set.
      */
     public void setType(String valueType) {
         this.type = valueType;
     }
- 
- 
+
+
     /**
      * @return Returns the convert.
      */
@@ -129,12 +129,12 @@ public class JMXAccessorSetTask extends JMXAccessorTask {
         this.convert = convert;
     }
     // ------------------------------------------------------ protected Methods
-    
+
     /**
      * Execute the specified command, based on the configured properties. The
      * input stream will be closed upon completion of this task, whether it was
      * executed successfully or not.
-     * 
+     *
      * @exception Exception
      *                if an error occurs
      */

==================================================
JMXAccessorUnregisterTask.java
index f2848530e6..21775ccbb8 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorTask.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorTask.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -59,21 +59,21 @@ import org.apache.tools.ant.Project;
  * <li>Show Get, Call, Query result at Ant console log</li>
  * <li>Bind Get, Call, Query result at Ant properties</li>
  * </ul>
- * 
+ *
  * Examples: open server with reference and autorisation
- * 
+ *
  * <pre>
- * 
+ *
  *    &lt;jmxOpen
  *            host=&quot;127.0.0.1&quot;
  *            port=&quot;9014&quot;
  *            username=&quot;monitorRole&quot;
  *            password=&quot;mysecret&quot;
- *            ref=&quot;jmx.myserver&quot; 
+ *            ref=&quot;jmx.myserver&quot;
  *        /&gt;
- *  
+ *
  * </pre>
- * 
+ *
  * All calls after opening with same refid reuse the connection.
  * <p>
  * First call to a remote MBeanserver save the JMXConnection a referenz
@@ -83,7 +83,7 @@ import org.apache.tools.ant.Project;
  * <em>unless</em>. With <em>if</em> the task is only execute when property
  * exist and with <em>unless</em> when property not exists. <br/><b>NOTE
  * </b>: These tasks require Ant 1.6 or later interface.
- * 
+ *
  * @author Peter Rossbach
  * @version $Id$
  * @since 5.5.10
@@ -286,7 +286,7 @@ public class JMXAccessorTask extends BaseRedirectorHelperTask {
     /**
      * Only execute if a property of the given name exists in the current
      * project.
-     * 
+     *
      * @param c property name
      */
     public void setIf(String c) {
@@ -303,7 +303,7 @@ public class JMXAccessorTask extends BaseRedirectorHelperTask {
     /**
      * Only execute if a property of the given name does not exist in the
      * current project.
-     * 
+     *
      * @param c property name
      */
     public void setUnless(String c) {
@@ -316,7 +316,7 @@ public class JMXAccessorTask extends BaseRedirectorHelperTask {
      * Execute the specified command. This logic only performs the common
      * attribute validation required by all subclasses; it does not perform any
      * functional logic directly.
-     * 
+     *
      * @exception BuildException
      *                if a validation error occurs
      */
@@ -372,7 +372,7 @@ public class JMXAccessorTask extends BaseRedirectorHelperTask {
 
     /**
      * test the if condition
-     * 
+     *
      * @return true if there is no if condition, or the named property exists
      */
     protected boolean testIfCondition() {
@@ -384,7 +384,7 @@ public class JMXAccessorTask extends BaseRedirectorHelperTask {
 
     /**
      * test the unless condition
-     * 
+     *
      * @return true if there is no unless condition, or there is a named
      *         property but it doesn't exist
      */
@@ -397,7 +397,7 @@ public class JMXAccessorTask extends BaseRedirectorHelperTask {
 
     /**
      * Get Current Connection from <em>ref</em> parameter or create a new one!
-     * 
+     *
      * @return The server connection
      * @throws MalformedURLException
      * @throws IOException
@@ -433,7 +433,7 @@ public class JMXAccessorTask extends BaseRedirectorHelperTask {
 
     /**
      * get JMXConnection
-     * 
+     *
      * @return The connection
      * @throws MalformedURLException
      * @throws IOException
@@ -473,7 +473,7 @@ public class JMXAccessorTask extends BaseRedirectorHelperTask {
      * Execute the specified command, based on the configured properties. The
      * input stream will be closed upon completion of this task, whether it was
      * executed successfully or not.
-     * 
+     *
      * @exception Exception
      *                if an error occurs
      */
@@ -491,7 +491,7 @@ public class JMXAccessorTask extends BaseRedirectorHelperTask {
     /**
      * Convert string to datatype FIXME How we can transfer values from ant
      * project reference store (ref)?
-     * 
+     *
      * @param value The value
      * @param valueType The type
      * @return The converted object
@@ -572,7 +572,7 @@ public class JMXAccessorTask extends BaseRedirectorHelperTask {
 
     /**
      * create result as property with name from attribute resultproperty
-     * 
+     *
      * @param result The result
      * @see #createProperty(String, Object)
      */
@@ -589,7 +589,7 @@ public class JMXAccessorTask extends BaseRedirectorHelperTask {
      * result array length at <code>resultproperty.length</code>. Other
      * option is that you delimit your result with a delimiter
      * (java.util.StringTokenizer is used).
-     * 
+     *
      * @param propertyPrefix
      * @param result
      */

==================================================
