369f72487e57035e3b6e8da11ccebf14615169d5
==================================================
Start to pull out the various custom methods to obtain CATALINA_BASE
==================================================
Mark Emlyn
==================================================
Thu Feb 2 10:29:44 2012 +0000
==================================================
Container.java
Start to pull out the various custom methods to obtain CATALINA_BASE
and replace them with a call to the Container.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1239518 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ContainerBase.java
index 0bd80297e8..615781269b 100644
--- a/java/org/apache/catalina/Container.java
+++ b/java/org/apache/catalina/Container.java
@@ -16,7 +16,6 @@
  */
 package org.apache.catalina;
 
-
 import java.beans.PropertyChangeListener;
 import java.io.File;
 

==================================================
StandardContext.java
index 0b813008f1..2849f63cbe 100644
--- a/java/org/apache/catalina/core/ContainerBase.java
+++ b/java/org/apache/catalina/core/ContainerBase.java
@@ -20,7 +20,6 @@ package org.apache.catalina.core;
 import java.beans.PropertyChangeListener;
 import java.beans.PropertyChangeSupport;
 import java.io.File;
-import java.io.IOException;
 import java.security.AccessController;
 import java.security.PrivilegedAction;
 import java.util.ArrayList;
@@ -1337,6 +1336,11 @@ public abstract class ContainerBase extends LifecycleMBeanBase
     }
 
 
+    public void setCatalinaBase(File catalinaBase) {
+        this.catalinaBase = catalinaBase;
+    }
+
+
     @Override
     public File getCatalinaBase() {
 
@@ -1350,17 +1354,16 @@ public abstract class ContainerBase extends LifecycleMBeanBase
 
         String base = System.getProperty(Globals.CATALINA_BASE_PROP);
 
+        if (base == null) {
+            base = System.getProperty(Globals.CATALINA_HOME_PROP);
+        }
+
         if (base == null) {
             return null;
-        } else {
-            File f;
-            try {
-                f = new File(base).getCanonicalFile();
-            } catch (IOException e) {
-                return null;
-            }
-            return f;
         }
+
+        catalinaBase =new File(base).getAbsoluteFile();
+        return catalinaBase;
     }
 
 

==================================================
StandardEngine.java
index 65f0efd203..223bce907a 100644
--- a/java/org/apache/catalina/core/StandardContext.java
+++ b/java/org/apache/catalina/core/StandardContext.java
@@ -2503,11 +2503,8 @@ public class StandardContext extends ContainerBase
         }
         File workDir = new File(getWorkDir());
         if (!workDir.isAbsolute()) {
-            File catalinaHome = engineBase();
-            String catalinaHomePath = null;
             try {
-                catalinaHomePath = catalinaHome.getCanonicalPath();
-                workDir = new File(catalinaHomePath,
+                workDir = new File(getCatalinaBase().getCanonicalFile(),
                         getWorkDir());
             } catch (IOException e) {
                 log.warn(sm.getString("standardContext.workPath", getName()),
@@ -5649,20 +5646,6 @@ public class StandardContext extends ContainerBase
     }
 
 
-    /**
-     * Return a File object representing the base directory for the
-     * entire servlet container (i.e. the Engine container if present).
-     */
-    protected File engineBase() {
-        String base=System.getProperty(Globals.CATALINA_BASE_PROP);
-        if( base == null ) {
-            StandardEngine eng=(StandardEngine)this.getParent().getParent();
-            base=eng.getBaseDir();
-        }
-        return (new File(base));
-    }
-
-
     /**
      * Bind current thread, both for CL purposes and for JNDI ENC support
      * during : startup, shutdown and realoading of the context.
@@ -5728,7 +5711,7 @@ public class StandardContext extends ContainerBase
         File file = new File(getDocBase());
         if (!file.isAbsolute()) {
             if (container == null) {
-                docBase = (new File(engineBase(), getDocBase())).getPath();
+                docBase = (new File(getCatalinaBase(), getDocBase())).getPath();
             } else {
                 // Use the "appBase" property of this container
                 file = ((Host) container).getAppBaseFile();
@@ -5921,10 +5904,9 @@ public class StandardContext extends ContainerBase
         // Create this directory if necessary
         File dir = new File(workDir);
         if (!dir.isAbsolute()) {
-            File catalinaHome = engineBase();
             String catalinaHomePath = null;
             try {
-                catalinaHomePath = catalinaHome.getCanonicalPath();
+                catalinaHomePath = getCatalinaBase().getCanonicalPath();
                 dir = new File(catalinaHomePath, workDir);
             } catch (IOException e) {
                 log.warn(sm.getString("standardContext.workCreateException",

==================================================
MBeanFactory.java
index e24577d2e5..c7a3d8bc3b 100644
--- a/java/org/apache/catalina/core/StandardEngine.java
+++ b/java/org/apache/catalina/core/StandardEngine.java
@@ -27,7 +27,6 @@ import org.apache.catalina.ContainerEvent;
 import org.apache.catalina.ContainerListener;
 import org.apache.catalina.Context;
 import org.apache.catalina.Engine;
-import org.apache.catalina.Globals;
 import org.apache.catalina.Host;
 import org.apache.catalina.Lifecycle;
 import org.apache.catalina.LifecycleEvent;
@@ -207,20 +206,6 @@ public class StandardEngine extends ContainerBase implements Engine {
         this.service = service;
     }
 
-    public String getBaseDir() {
-        if( baseDir==null ) {
-            baseDir=System.getProperty(Globals.CATALINA_BASE_PROP);
-        }
-        if( baseDir==null ) {
-            baseDir=System.getProperty(Globals.CATALINA_HOME_PROP);
-        }
-        return baseDir;
-    }
-
-    public void setBaseDir(String baseDir) {
-        this.baseDir = baseDir;
-    }
-
     // --------------------------------------------------------- Public Methods
 
 

==================================================
ContextConfig.java
index 39827e59c3..edef4325ba 100644
--- a/java/org/apache/catalina/mbeans/MBeanFactory.java
+++ b/java/org/apache/catalina/mbeans/MBeanFactory.java
@@ -683,7 +683,7 @@ public class MBeanFactory {
         engine.setDomain(domain);
         engine.setName(domain);
         engine.setDefaultHost(defaultHost);
-        engine.setBaseDir(baseDir);
+        engine.setCatalinaBase(new File(baseDir));
 
         Service service = new StandardService();
         service.setContainer(engine);

==================================================
