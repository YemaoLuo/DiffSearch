6105c97ab08f4ece7dbaf11778fad49bf68164fb
==================================================
Enhance fix for https://issues.apache.org/bugzilla/show_bug.cgi?id=50078
==================================================
Mark Emlyn
==================================================
Thu Oct 14 17:37:20 2010 +0000
==================================================
BeanELResolver.java
Enhance fix for https://issues.apache.org/bugzilla/show_bug.cgi?id=50078
Make cache sizes configurable

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1022623 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ExpressionBuilder.java
index f93f4a6d2d..3476dc1ee5 100644
--- a/java/javax/el/BeanELResolver.java
+++ b/java/javax/el/BeanELResolver.java
@@ -26,6 +26,8 @@ import java.lang.reflect.Array;
 import java.lang.reflect.InvocationTargetException;
 import java.lang.reflect.Method;
 import java.lang.reflect.Modifier;
+import java.security.AccessController;
+import java.security.PrivilegedAction;
 import java.util.Arrays;
 import java.util.HashMap;
 import java.util.Iterator;
@@ -35,10 +37,31 @@ import java.util.concurrent.ConcurrentHashMap;
 
 public class BeanELResolver extends ELResolver {
 
+    private static final int CACHE_SIZE;
+    private static final String CACHE_SIZE_PROP =
+        "org.apache.el.BeanELResolver.CACHE_SIZE";
+
+    static {
+        if (System.getSecurityManager() == null) {
+            CACHE_SIZE = Integer.parseInt(
+                    System.getProperty(CACHE_SIZE_PROP, "1000"));
+        } else {
+            CACHE_SIZE = AccessController.doPrivileged(
+                    new PrivilegedAction<Integer>() {
+
+                    @Override
+                    public Integer run() {
+                        return Integer.valueOf(
+                                System.getProperty(CACHE_SIZE_PROP, "1000"));
+                    }
+                }).intValue();
+        }
+    }
+
     private final boolean readOnly;
 
     private final ConcurrentCache<String, BeanProperties> cache =
-        new ConcurrentCache<String, BeanProperties>(1000);
+        new ConcurrentCache<String, BeanProperties>(CACHE_SIZE);
 
     public BeanELResolver() {
         this.readOnly = false;

==================================================
