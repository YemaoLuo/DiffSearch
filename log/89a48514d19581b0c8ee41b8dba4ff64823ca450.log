89a48514d19581b0c8ee41b8dba4ff64823ca450
==================================================
Better fix for https://issues.apache.org/bugzilla/show_bug.cgi?id=47963
==================================================
Mark Emlyn
==================================================
Sun Dec 20 17:21:06 2009 +0000
==================================================
AjpAprProcessor.java
Better fix for https://issues.apache.org/bugzilla/show_bug.cgi?id=47963

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@892612 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AjpProcessor.java
index 0a66f23994..5910ea936e 100644
--- a/java/org/apache/coyote/ajp/AjpAprProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpAprProcessor.java
@@ -954,13 +954,12 @@ public class AjpAprProcessor implements ActionHook {
         // HTTP header contents
         responseHeaderMessage.appendInt(response.getStatus());
         String message = null;
-        if (org.apache.coyote.Constants.USE_CUSTOM_STATUS_MSG_IN_HEADER) {
+        if (org.apache.coyote.Constants.USE_CUSTOM_STATUS_MSG_IN_HEADER &&
+                HttpMessages.isSafeInHttpHeader(response.getMessage())) {
             message = response.getMessage();
         } 
         if (message == null){
             message = HttpMessages.getMessage(response.getStatus());
-        } else {
-            message = message.replace('\n', ' ').replace('\r', ' ');
         }
         if (message == null) {
             // mod_jk + httpd 2.x fails with a null status message - bug 45026

==================================================
AbstractOutputBuffer.java
index 05ee1b8f97..5b485469a0 100644
--- a/java/org/apache/coyote/ajp/AjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpProcessor.java
@@ -959,13 +959,12 @@ public class AjpProcessor implements ActionHook {
         // HTTP header contents
         responseHeaderMessage.appendInt(response.getStatus());
         String message = null;
-        if (org.apache.coyote.Constants.USE_CUSTOM_STATUS_MSG_IN_HEADER) {
+        if (org.apache.coyote.Constants.USE_CUSTOM_STATUS_MSG_IN_HEADER &&
+                HttpMessages.isSafeInHttpHeader(response.getMessage())) {
             message = response.getMessage();
         }
         if (message == null){
             message = HttpMessages.getMessage(response.getStatus());
-        } else {
-            message = message.replace('\n', ' ').replace('\r', ' ');
         }
         if (message == null) {
             // mod_jk + httpd 2.x fails with a null status message - bug 45026

==================================================
InternalAprOutputBuffer.java
index 4a4716f72d..34c2a1b7a1 100644
--- a/java/org/apache/coyote/http11/AbstractOutputBuffer.java
+++ b/java/org/apache/coyote/http11/AbstractOutputBuffer.java
@@ -339,13 +339,14 @@ public abstract class AbstractOutputBuffer implements OutputBuffer{
 
         // Write message
         String message = null;
-        if (org.apache.coyote.Constants.USE_CUSTOM_STATUS_MSG_IN_HEADER) {
+        if (org.apache.coyote.Constants.USE_CUSTOM_STATUS_MSG_IN_HEADER &&
+                HttpMessages.isSafeInHttpHeader(response.getMessage())) {
             message = response.getMessage();
         }
         if (message == null) {
             write(HttpMessages.getMessage(status)); 
         } else {
-            write(message.replace('\n', ' ').replace('\r', ' '));
+            write(message);
         }
 
         // End the response status line

==================================================
HttpMessages.java
index 4d2c9b0b10..e34506f76b 100644
--- a/java/org/apache/coyote/http11/InternalAprOutputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalAprOutputBuffer.java
@@ -414,13 +414,14 @@ public class InternalAprOutputBuffer
 
         // Write message
         String message = null;
-        if (org.apache.coyote.Constants.USE_CUSTOM_STATUS_MSG_IN_HEADER) {
+        if (org.apache.coyote.Constants.USE_CUSTOM_STATUS_MSG_IN_HEADER &&
+                HttpMessages.isSafeInHttpHeader(response.getMessage())) {
             message = response.getMessage();
         }
         if (message == null) {
             write(HttpMessages.getMessage(status));
         } else {
-            write(message.replace('\n', ' ').replace('\r', ' '));
+            write(message);
         }
 
         // End the response status line

==================================================
