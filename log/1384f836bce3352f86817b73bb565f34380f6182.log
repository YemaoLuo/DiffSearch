1384f836bce3352f86817b73bb565f34380f6182
==================================================
Use new interface where appropriate
==================================================
Mark Emlyn
==================================================
Fri Feb 3 20:11:19 2012 +0000
==================================================
StandardService.java
Use new interface where appropriate

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1240333 13f79535-47bb-0310-9956-ffa450edef68



==================================================
NamingResources.java
index ef20aa17ec..c243c30eb4 100644
--- a/java/org/apache/catalina/core/StandardService.java
+++ b/java/org/apache/catalina/core/StandardService.java
@@ -26,6 +26,7 @@ import javax.management.ObjectName;
 import org.apache.catalina.Container;
 import org.apache.catalina.Engine;
 import org.apache.catalina.Executor;
+import org.apache.catalina.JmxEnabled;
 import org.apache.catalina.LifecycleException;
 import org.apache.catalina.LifecycleState;
 import org.apache.catalina.Server;
@@ -520,8 +521,8 @@ public class StandardService extends LifecycleMBeanBase implements Service {
 
         // Initialize any Executors
         for (Executor executor : findExecutors()) {
-            if (executor instanceof LifecycleMBeanBase) {
-                ((LifecycleMBeanBase) executor).setDomain(getDomain());
+            if (executor instanceof JmxEnabled) {
+                ((JmxEnabled) executor).setDomain(getDomain());
             }
             executor.init();
         }

==================================================
ContainerMBean.java
index a729488918..3efb5aebfe 100644
--- a/java/org/apache/catalina/deploy/NamingResources.java
+++ b/java/org/apache/catalina/deploy/NamingResources.java
@@ -32,6 +32,7 @@ import javax.naming.NamingException;
 import org.apache.catalina.Container;
 import org.apache.catalina.Context;
 import org.apache.catalina.Engine;
+import org.apache.catalina.JmxEnabled;
 import org.apache.catalina.LifecycleException;
 import org.apache.catalina.LifecycleState;
 import org.apache.catalina.Server;
@@ -1075,8 +1076,8 @@ public class NamingResources extends LifecycleMBeanBase implements Serializable
         // Use the same domain as our associated container if we have one
         Object c = getContainer();
 
-        if (c instanceof LifecycleMBeanBase) {
-            return ((LifecycleMBeanBase) c).getDomain();
+        if (c instanceof JmxEnabled) {
+            return ((JmxEnabled) c).getDomain();
         }
 
         return null;

==================================================
MBeanFactory.java
index 92ba8d4211..10a3b4d259 100644
--- a/java/org/apache/catalina/mbeans/ContainerMBean.java
+++ b/java/org/apache/catalina/mbeans/ContainerMBean.java
@@ -29,6 +29,7 @@ import javax.management.modelmbean.InvalidTargetObjectTypeException;
 
 import org.apache.catalina.Container;
 import org.apache.catalina.ContainerListener;
+import org.apache.catalina.JmxEnabled;
 import org.apache.catalina.LifecycleException;
 import org.apache.catalina.LifecycleListener;
 import org.apache.catalina.Valve;
@@ -37,7 +38,6 @@ import org.apache.catalina.core.StandardContext;
 import org.apache.catalina.core.StandardHost;
 import org.apache.catalina.startup.ContextConfig;
 import org.apache.catalina.startup.HostConfig;
-import org.apache.catalina.util.LifecycleMBeanBase;
 import org.apache.catalina.valves.ValveBase;
 import org.apache.tomcat.util.modeler.BaseModelMBean;
 
@@ -170,7 +170,11 @@ public class ContainerMBean extends BaseModelMBean {
             throw new MBeanException(e);
         }
 
-        return ((LifecycleMBeanBase)valve).getObjectName().toString();
+        if (valve instanceof JmxEnabled) {
+            return ((JmxEnabled)valve).getObjectName().toString();
+        } else {
+            return null;
+        }
     }
 
     /**

==================================================
