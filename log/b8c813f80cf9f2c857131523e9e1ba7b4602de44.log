b8c813f80cf9f2c857131523e9e1ba7b4602de44
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56190
==================================================
Mark Emlyn
==================================================
Thu Mar 6 15:36:29 2014 +0000
==================================================
AsyncContextImpl.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56190
AsyncContext.complete() should close the response. dispatch() should be used if further output to the response is required.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1574923 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AsyncContextCallback.java
index 9441f273b7..c9da812378 100644
--- a/java/org/apache/catalina/core/AsyncContextImpl.java
+++ b/java/org/apache/catalina/core/AsyncContextImpl.java
@@ -83,13 +83,14 @@ public class AsyncContextImpl implements AsyncContext, AsyncContextCallback {
             logDebug("complete   ");
         }
         check();
-        request.getCoyoteRequest().action(ActionCode.COMMIT, null);
         request.getCoyoteRequest().action(ActionCode.ASYNC_COMPLETE, null);
         clearServletRequestResponse();
     }
 
     @Override
-    public void fireOnComplete() {
+    public void fireOnComplete() throws IOException {
+        // Before firing the event, close the response
+        request.getResponse().finishResponse();
         List<AsyncListenerWrapper> listenersCopy = new ArrayList<>();
         listenersCopy.addAll(listeners);
 

==================================================
AsyncStateMachine.java
index 2278414a52..4c34bdfa90 100644
--- a/java/org/apache/coyote/AsyncContextCallback.java
+++ b/java/org/apache/coyote/AsyncContextCallback.java
@@ -16,6 +16,8 @@
  */
 package org.apache.coyote;
 
+import java.io.IOException;
+
 /**
  * Provides a mechanism for the Coyote connectors to signal to a
  * {@link javax.servlet.AsyncContext} implementation that an action, such as
@@ -24,5 +26,5 @@ package org.apache.coyote;
  * org.apache.coyote package.
  */
 public interface AsyncContextCallback {
-    public void fireOnComplete();
+    public void fireOnComplete() throws IOException;
 }

==================================================
TestAsyncContextImpl.java
index 1986bebbe0..af0effcb8c 100644
--- a/java/org/apache/coyote/AsyncStateMachine.java
+++ b/java/org/apache/coyote/AsyncStateMachine.java
@@ -16,6 +16,7 @@
  */
 package org.apache.coyote;
 
+import java.io.IOException;
 import java.security.AccessController;
 import java.security.PrivilegedAction;
 
@@ -203,11 +204,21 @@ public class AsyncStateMachine<S> {
             state = AsyncState.STARTED;
             return SocketState.LONG;
         } else if (state == AsyncState.MUST_COMPLETE) {
-            asyncCtxt.fireOnComplete();
+            try {
+                asyncCtxt.fireOnComplete();
+            } catch (IOException e) {
+                // Socket is in unknown state. Close it.
+                return SocketState.CLOSED;
+            }
             state = AsyncState.DISPATCHED;
             return SocketState.ASYNC_END;
         } else if (state == AsyncState.COMPLETING) {
-            asyncCtxt.fireOnComplete();
+            try {
+                asyncCtxt.fireOnComplete();
+            } catch (IOException e) {
+                // Socket is in unknown state. Close it.
+                return SocketState.CLOSED;
+            }
             state = AsyncState.DISPATCHED;
             return SocketState.ASYNC_END;
         } else if (state == AsyncState.MUST_DISPATCH) {

==================================================
