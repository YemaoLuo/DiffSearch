4c10b673662bea08a8311c9273b4e48eec87ac85
==================================================
Javadoc fixes.
==================================================
Mark Emlyn
==================================================
Thu Oct 10 20:16:06 2013 +0000
==================================================
TomcatURLStreamHandlerFactory.java
Javadoc fixes.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1531099 13f79535-47bb-0310-9956-ffa450edef68



==================================================
InstrumentableClassLoader.java
index a160f96173..754639287f 100644
--- a/java/org/apache/catalina/webresources/TomcatURLStreamHandlerFactory.java
+++ b/java/org/apache/catalina/webresources/TomcatURLStreamHandlerFactory.java
@@ -64,10 +64,10 @@ public class TomcatURLStreamHandlerFactory implements URLStreamHandlerFactory {
      * Register this factory with the JVM. May be called more than once. The
      * implementation ensures that registration only occurs once.
      *
-     * @returns <code>true</code> if the factory is already registered with the
-     *          JVM or was successfully registered as a result of this call.
-     *          <code>false</code> if the factory was disabled prior to this
-     *          call.
+     * @return <code>true</code> if the factory is already registered with the
+     *         JVM or was successfully registered as a result of this call.
+     *         <code>false</code> if the factory was disabled prior to this
+     *         call.
      */
     public static boolean register() {
         return getInstanceInternal(true).isRegistered();
@@ -78,10 +78,10 @@ public class TomcatURLStreamHandlerFactory implements URLStreamHandlerFactory {
      * Prevent this this factory from registering with the JVM. May be called
      * more than once.
      *
-     * @returns <code>true</code> if the factory is already disabled or was
-     *          successfully disabled as a result of this call.
-     *          <code>false</code> if the factory was already registered prior
-     *          to this call.
+     * @return <code>true</code> if the factory is already disabled or was
+     *         successfully disabled as a result of this call.
+     *         <code>false</code> if the factory was already registered prior
+     *         to this call.
 
      */
     public static boolean disable() {

==================================================
AprEndpoint.java
index 30286f3c24..be17fa781a 100644
--- a/java/org/apache/tomcat/InstrumentableClassLoader.java
+++ b/java/org/apache/tomcat/InstrumentableClassLoader.java
@@ -43,7 +43,7 @@ public interface InstrumentableClassLoader {
      * classes loaded by this class loader after the invocation of this
      * method.
      *
-     * @param classFileTransformer The transformer to add to the class loader
+     * @param transformer The transformer to add to the class loader
      * @throws IllegalArgumentException if the {@literal transformer} is null.
      */
     void addTransformer(ClassFileTransformer transformer);
@@ -55,7 +55,7 @@ public interface InstrumentableClassLoader {
      * However, any classes already instrumented by this transformer before
      * this method call will remain in their instramented state.
      *
-     * @param classFileTransformer The transformer to remove
+     * @param transformer The transformer to remove
      */
     void removeTransformer(ClassFileTransformer transformer);
 

==================================================
