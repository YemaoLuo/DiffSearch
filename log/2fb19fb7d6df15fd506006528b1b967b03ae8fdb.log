2fb19fb7d6df15fd506006528b1b967b03ae8fdb
==================================================
Align ActionCode.CloseNow
==================================================
Mark Thomas
==================================================
Fri Aug 12 07:46:17 2016 +0000
==================================================
AjpProcessor.java
Align ActionCode.CloseNow

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1756090 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http11Processor.java
index 1e0c7a4002..3e775335c5 100644
--- a/java/org/apache/coyote/ajp/AjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpProcessor.java
@@ -408,7 +408,7 @@ public class AjpProcessor extends AbstractProcessor {
         }
         case CLOSE_NOW: {
             // Prevent further writes to the response
-            swallowResponse = true;
+            setSwallowResponse();
             setErrorState(ErrorState.CLOSE_NOW, null);
             break;
         }
@@ -1468,6 +1468,11 @@ public class AjpProcessor extends AbstractProcessor {
     }
     
     
+    private void setSwallowResponse() {
+        swallowResponse = true;
+    }
+    
+    
     /**
      * Read at least the specified amount of bytes, and place them
      * in the input buffer. Note that if any data is available to read then this

==================================================
StreamProcessor.java
index 09d129e7aa..10ae136711 100644
--- a/java/org/apache/coyote/http11/Http11Processor.java
+++ b/java/org/apache/coyote/http11/Http11Processor.java
@@ -700,8 +700,8 @@ public class Http11Processor extends AbstractProcessor {
             break;
         }
         case CLOSE_NOW: {
-            // Block further output
-            outputBuffer.responseFinished = true;
+            // Prevent further writes to the response
+            setSwallowResponse();
             setErrorState(ErrorState.CLOSE_NOW, null);
             break;
         }
@@ -1816,6 +1816,11 @@ public class Http11Processor extends AbstractProcessor {
     }
     
     
+    private void setSwallowResponse() {
+        outputBuffer.responseFinished = true;
+    }
+    
+    
     /**
      * Checks to see if the keep-alive loop should be broken, performing any
      * processing (e.g. sendfile handling) that may have an impact on whether

==================================================
