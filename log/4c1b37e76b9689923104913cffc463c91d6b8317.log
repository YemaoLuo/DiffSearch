4c1b37e76b9689923104913cffc463c91d6b8317
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56693
==================================================
Mark Emlyn
==================================================
Thu Jul 3 14:30:21 2014 +0000
==================================================
Cache.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56693
Fix various issues in the static resource cache implementation where the cache retained a stale entry after the successful completion of an operation that always invalidates the cache entry such as a delete operation.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1607660 13f79535-47bb-0310-9956-ffa450edef68



==================================================
CachedResource.java
index b0ab1596ae..ae43edee32 100644
--- a/java/org/apache/catalina/webresources/Cache.java
+++ b/java/org/apache/catalina/webresources/Cache.java
@@ -76,7 +76,7 @@ public class Cache {
             // Local copy to ensure consistency
             int objectMaxSizeBytes = getObjectMaxSizeBytes();
             CachedResource newCacheEntry =
-                    new CachedResource(root, path, getTtl(), objectMaxSizeBytes);
+                    new CachedResource(this, root, path, getTtl(), objectMaxSizeBytes);
 
             // Concurrent callers will end up with the same CachedResource
             // instance
@@ -175,7 +175,7 @@ public class Cache {
         return newSize;
     }
 
-    private void removeCacheEntry(String path) {
+    void removeCacheEntry(String path) {
         // With concurrent calls for the same path, the entry is only removed
         // once and the cache size is only updated (if required) once.
         CachedResource cachedResource = resourceCache.remove(path);

==================================================
StandardRoot.java
index 48de7d9853..025d008447 100644
--- a/java/org/apache/catalina/webresources/CachedResource.java
+++ b/java/org/apache/catalina/webresources/CachedResource.java
@@ -36,6 +36,7 @@ public class CachedResource implements WebResource {
     // based on profiler data.
     private static final long CACHE_ENTRY_SIZE = 500;
 
+    private final Cache cache;
     private final StandardRoot root;
     private final String webAppPath;
     private final long ttl;
@@ -54,8 +55,9 @@ public class CachedResource implements WebResource {
     private volatile Long cachedContentLength = null;
 
 
-    public CachedResource(StandardRoot root, String path, long ttl,
+    public CachedResource(Cache cache, StandardRoot root, String path, long ttl,
             int objectMaxSizeBytes) {
+        this.cache = cache;
         this.root = root;
         this.webAppPath = path;
         this.ttl = ttl;
@@ -180,7 +182,11 @@ public class CachedResource implements WebResource {
 
     @Override
     public boolean delete() {
-        return webResource.delete();
+        boolean deleteResult = webResource.delete();
+        if (deleteResult) {
+            cache.removeCacheEntry(webAppPath);
+        }
+        return deleteResult;
     }
 
     @Override

==================================================
