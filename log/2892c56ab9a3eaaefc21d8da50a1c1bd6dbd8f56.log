2892c56ab9a3eaaefc21d8da50a1c1bd6dbd8f56
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=54391
==================================================
Mark Emlyn
==================================================
Wed Jan 9 11:56:22 2013 +0000
==================================================
WebXml.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=54391
Provide a value for the javax.servlet.context.orderedLibs attribute 

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1430806 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ContextConfig.java
index 2cd9e9e10f..be53efb937 100644
--- a/java/org/apache/catalina/deploy/WebXml.java
+++ b/java/org/apache/catalina/deploy/WebXml.java
@@ -32,6 +32,7 @@ import java.util.Map.Entry;
 import java.util.Set;
 
 import javax.servlet.MultipartConfigElement;
+import javax.servlet.ServletContext;
 import javax.servlet.SessionCookieConfig;
 import javax.servlet.SessionTrackingMode;
 import javax.servlet.descriptor.JspPropertyGroupDescriptor;
@@ -566,6 +567,10 @@ public class WebXml {
     public void setURL(URL url) { this.uRL = url; }
     public URL getURL() { return uRL; }
 
+    // Name of jar file
+    private String jarName = null;
+    public void setJarName(String jarName) { this.jarName = jarName; }
+    public String getJarName() { return jarName; }
 
     @Override
     public String toString() {
@@ -2084,19 +2089,23 @@ public class WebXml {
      * the order that the fragments must be processed as per the rules in the
      * Servlet spec.
      *
-     * @param application   The application web.xml file
-     * @param fragments     The map of fragment names to web fragments
+     * @param application    The application web.xml file
+     * @param fragments      The map of fragment names to web fragments
+     * @param servletContext The servlet context the fragments are associated
+     *                       with
      * @return Ordered list of web-fragment.xml files to process
      */
     public static Set<WebXml> orderWebFragments(WebXml application,
-            Map<String,WebXml> fragments) {
+            Map<String,WebXml> fragments, ServletContext servletContext) {
 
         Set<WebXml> orderedFragments = new LinkedHashSet<>();
 
         boolean absoluteOrdering =
             (application.getAbsoluteOrdering() != null);
+        boolean orderingPresent = false;
 
         if (absoluteOrdering) {
+            orderingPresent = true;
             // Only those fragments listed should be processed
             Set<String> requestedOrder = application.getAbsoluteOrdering();
 
@@ -2127,6 +2136,7 @@ public class WebXml {
                 Iterator<String> before =
                         fragment.getBeforeOrdering().iterator();
                 while (before.hasNext()) {
+                    orderingPresent = true;
                     String beforeEntry = before.next();
                     if (!beforeEntry.equals(ORDER_OTHERS)) {
                         WebXml beforeFragment = fragments.get(beforeEntry);
@@ -2139,6 +2149,7 @@ public class WebXml {
                 }
                 Iterator<String> after = fragment.getAfterOrdering().iterator();
                 while (after.hasNext()) {
+                    orderingPresent = true;
                     String afterEntry = after.next();
                     if (!afterEntry.equals(ORDER_OTHERS)) {
                         WebXml afterFragment = fragments.get(afterEntry);
@@ -2198,6 +2209,20 @@ public class WebXml {
             orderFragments(orderedFragments, afterSet);
         }
 
+        // Avoid NPE when unit testing
+        if (servletContext != null) {
+            // Publish the ordered fragments
+            List<String> orderedJarFileNames = null;
+            if (orderingPresent) {
+                orderedJarFileNames = new ArrayList<>();
+                for (WebXml fragment: orderedFragments) {
+                    orderedJarFileNames.add(fragment.getJarName());
+                }
+            }
+            servletContext.setAttribute(ServletContext.ORDERED_LIBS,
+                    orderedJarFileNames);
+        }
+
         return orderedFragments;
     }
 

==================================================
TestWebXmlOrdering.java
index 3ac56aee1d..94afb00f48 100644
--- a/java/org/apache/catalina/startup/ContextConfig.java
+++ b/java/org/apache/catalina/startup/ContextConfig.java
@@ -1166,7 +1166,8 @@ public class ContextConfig implements LifecycleListener {
 
         // Step 2. Order the fragments.
         Set<WebXml> orderedFragments = null;
-        orderedFragments = WebXml.orderWebFragments(webXml, fragments);
+        orderedFragments =
+                WebXml.orderWebFragments(webXml, fragments, sContext);
 
         // Step 3. Look for ServletContainerInitializer implementations
         if (ok) {
@@ -2505,10 +2506,22 @@ public class ContextConfig implements LifecycleListener {
                 if (fragment.getName() == null) {
                     fragment.setName(fragment.getURL().toString());
                 }
+                fragment.setJarName(extractJarFileName(url));
                 fragments.put(fragment.getName(), fragment);
             }
         }
 
+        private String extractJarFileName(URL input) {
+            String url = input.toString();
+            if (url.endsWith("!/")) {
+                // Remove it
+                url = url.substring(0, url.length() - 2);
+            }
+
+            // File name will now be whatever is after the final /
+            return url.substring(url.lastIndexOf('/') + 1);
+        }
+
         @Override
         public void scan(File file) throws IOException {
 
@@ -2536,6 +2549,7 @@ public class ContextConfig implements LifecycleListener {
                 if (fragment.getName() == null) {
                     fragment.setName(fragment.getURL().toString());
                 }
+                fragment.setJarName(file.getName());
                 fragments.put(fragment.getName(), fragment);
             }
         }

==================================================
