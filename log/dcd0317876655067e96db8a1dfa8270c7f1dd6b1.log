dcd0317876655067e96db8a1dfa8270c7f1dd6b1
==================================================
Fix some checkstyle GenericWhitespace issues.
==================================================
Mark Emlyn
==================================================
Sun Sep 7 22:23:01 2014 +0000
==================================================
Stream.java
Fix some checkstyle GenericWhitespace issues.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1623236 13f79535-47bb-0310-9956-ffa450edef68



==================================================
WsWebSocketContainer.java
index a4050b520b..fb33e40b60 100644
--- a/java/org/apache/el/stream/Stream.java
+++ b/java/org/apache/el/stream/Stream.java
@@ -37,7 +37,7 @@ public class Stream {
     private final Iterator<Object> iterator;
 
 
-    public Stream(Iterator<Object > iterator) {
+    public Stream(Iterator<Object> iterator) {
         this.iterator = iterator;
     }
 
@@ -468,7 +468,7 @@ public class Stream {
 
 
     private static class LambdaExpressionComparator
-            implements Comparator<Object>{
+            implements Comparator<Object> {
 
         private final LambdaExpression le;
 

==================================================
PojoEndpointClient.java
index 88db3ada19..4717bf9ab5 100644
--- a/java/org/apache/tomcat/websocket/WsWebSocketContainer.java
+++ b/java/org/apache/tomcat/websocket/WsWebSocketContainer.java
@@ -327,7 +327,7 @@ public class WsWebSocketContainer
 
         WsSession wsSession = new WsSession(endpoint, wsRemoteEndpointClient,
                 this, null, null, null, null, null, subProtocol,
-                Collections.<String, String> emptyMap(), secure,
+                Collections.<String,String>emptyMap(), secure,
                 clientEndpointConfiguration);
 
         WsFrameClient wsFrameClient = new WsFrameClient(response, channel,

==================================================
PojoMessageHandlerPartialBinary.java
index 4fb9918fa1..3d8f6da936 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoEndpointClient.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoEndpointClient.java
@@ -36,7 +36,7 @@ public class PojoEndpointClient extends PojoEndpointBase {
         setPojo(pojo);
         setMethodMapping(
                 new PojoMethodMapping(pojo.getClass(), decoders, null));
-        setPathParameters(Collections.<String, String> emptyMap());
+        setPathParameters(Collections.<String,String>emptyMap());
     }
 
     @Override

==================================================
PojoMessageHandlerPartialText.java
index 97f7660fce..6446efba33 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerPartialBinary.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerPartialBinary.java
@@ -25,7 +25,7 @@ import javax.websocket.Session;
  * ByteBuffer specific concrete implementation for handling partial messages.
  */
 public class PojoMessageHandlerPartialBinary
-        extends PojoMessageHandlerPartialBase<ByteBuffer>{
+        extends PojoMessageHandlerPartialBase<ByteBuffer> {
 
     public PojoMessageHandlerPartialBinary(Object pojo, Method method,
             Session session, Object[] params, int indexPayload, boolean convert,

==================================================
WsServerContainer.java
index dc35eb7a76..683634b8f4 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerPartialText.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerPartialText.java
@@ -24,7 +24,7 @@ import javax.websocket.Session;
  * Text specific concrete implementation for handling partial messages.
  */
 public class PojoMessageHandlerPartialText
-        extends PojoMessageHandlerPartialBase<String>{
+        extends PojoMessageHandlerPartialBase<String> {
 
     public PojoMessageHandlerPartialText(Object pojo, Method method,
             Session session, Object[] params, int indexPayload, boolean convert,

==================================================
TestUtil.java
index 74609171be..95e07925a9 100644
--- a/java/org/apache/tomcat/websocket/server/WsServerContainer.java
+++ b/java/org/apache/tomcat/websocket/server/WsServerContainer.java
@@ -336,8 +336,7 @@ public class WsServerContainer extends WsWebSocketContainer
         // Check an exact match. Simple case as there are no templates.
         ServerEndpointConfig sec = configExactMatchMap.get(path);
         if (sec != null) {
-            return new WsMappingResult(sec,
-                    Collections.<String, String> emptyMap());
+            return new WsMappingResult(sec, Collections.<String, String>emptyMap());
         }
 
         // No exact match. Need to look for template matches.

==================================================
TestEncodingDecoding.java
index ec0a8ab44b..9c64417722 100644
--- a/test/org/apache/tomcat/websocket/TestUtil.java
+++ b/test/org/apache/tomcat/websocket/TestUtil.java
@@ -140,14 +140,11 @@ public class TestUtil {
     }
 
 
-    private abstract static class GenericMessageHandler<T>
-            implements MessageHandler.Whole<T> {
+    private abstract static class GenericMessageHandler<T> implements MessageHandler.Whole<T> {
     }
 
 
-    private static class GenericSubMessageHandler
-            extends GenericMessageHandler<String>{
-
+    private static class GenericSubMessageHandler extends GenericMessageHandler<String> {
         @Override
         public void onMessage(String message) {
             // NO-OP
@@ -242,8 +239,7 @@ public class TestUtil {
     }
 
 
-    private static class GenericSubEncoder
-            extends GenericEncoder<String>{
+    private static class GenericSubEncoder extends GenericEncoder<String> {
 
         @Override
         public String encode(String object) throws EncodeException {

==================================================
