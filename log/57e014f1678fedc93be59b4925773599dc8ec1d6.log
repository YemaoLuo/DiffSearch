57e014f1678fedc93be59b4925773599dc8ec1d6
==================================================
Ensure an access log entry is made if an error occurs during asynchronous request processing and the socket is immediately closed.
==================================================
Mark Emlyn
==================================================
Wed Jun 29 12:12:48 2011 +0000
==================================================
AbstractAjpProcessor.java
Ensure an access log entry is made if an error occurs during asynchronous request processing and the socket is immediately closed.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1141066 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http11AprProcessor.java
index eacfc4d614..0202290c57 100644
--- a/java/org/apache/coyote/ajp/AbstractAjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AbstractAjpProcessor.java
@@ -465,10 +465,13 @@ public abstract class AbstractAjpProcessor extends AbstractProcessor {
        } catch (Throwable t) {
            ExceptionUtils.handleThrowable(t);
            getLog().error(sm.getString("http11processor.request.process"), t);
-           // 500 - Internal Server Error
-           response.setStatus(500);
-           adapter.log(request, response, 0);
            error = true;
+       } finally {
+           if (error) {
+               // 500 - Internal Server Error
+               response.setStatus(500);
+               adapter.log(request, response, 0);
+           }
        }
 
        rp.setStage(org.apache.coyote.Constants.STAGE_ENDED);

==================================================
Http11NioProcessor.java
index 12b1551054..0d4cb6b778 100644
--- a/java/org/apache/coyote/http11/Http11AprProcessor.java
+++ b/java/org/apache/coyote/http11/Http11AprProcessor.java
@@ -355,10 +355,13 @@ public class Http11AprProcessor extends AbstractHttp11Processor {
         } catch (Throwable t) {
             ExceptionUtils.handleThrowable(t);
             log.error(sm.getString("http11processor.request.process"), t);
-            // 500 - Internal Server Error
-            response.setStatus(500);
-            adapter.log(request, response, 0);
             error = true;
+        } finally {
+            if (error) {
+                // 500 - Internal Server Error
+                response.setStatus(500);
+                adapter.log(request, response, 0);
+            }
         }
 
         rp.setStage(org.apache.coyote.Constants.STAGE_ENDED);

==================================================
Http11Processor.java
index 07cf61e033..c277eab4ef 100644
--- a/java/org/apache/coyote/http11/Http11NioProcessor.java
+++ b/java/org/apache/coyote/http11/Http11NioProcessor.java
@@ -219,10 +219,13 @@ public class Http11NioProcessor extends AbstractHttp11Processor {
         } catch (Throwable t) {
             ExceptionUtils.handleThrowable(t);
             log.error(sm.getString("http11processor.request.process"), t);
-            // 500 - Internal Server Error
-            response.setStatus(500);
-            adapter.log(request, response, 0);
             error = true;
+        } finally {
+            if (error) {
+                // 500 - Internal Server Error
+                response.setStatus(500);
+                adapter.log(request, response, 0);
+            }
         }
 
         rp.setStage(org.apache.coyote.Constants.STAGE_ENDED);

==================================================
