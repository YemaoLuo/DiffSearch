6bb8ad5bd3347465de28fbb0225c728a0a623754
==================================================
Update to Graal 19
==================================================
remm remm@apache.org
==================================================
Fri May 10 11:55:16 2019 +0200
==================================================
Tomcat.java
Update to Graal 19

The previous version was 1.0 RC 16, that's progress. Thankfully, there's
still as many issues as before. Start working around the ones that will
"never" be fixed using JreCompat (JMX and URL stream handlers). Document
the new process.


==================================================
StandardRoot.java
index 2309109b2e..71d923a39c 100644
--- a/java/org/apache/catalina/startup/Tomcat.java
+++ b/java/org/apache/catalina/startup/Tomcat.java
@@ -1391,6 +1391,12 @@ public class Tomcat {
      * @throws Exception if an error occurs
      */
     public static void main(String[] args) throws Exception {
+        // Process some command line parameters
+        for (int i = 0; i < args.length; i++) {
+            if (args[i].equals("--no-jmx")) {
+                Registry.disableRegistry();
+            }
+        }
         org.apache.catalina.startup.Tomcat tomcat = new org.apache.catalina.startup.Tomcat();
         // Create a Catalina instance and let it parse the configuration files
         // It will also set a shutdown hook to stop the Server when needed
@@ -1439,7 +1445,7 @@ public class Tomcat {
             } else if (args[i].equals("--await")) {
                 await = true;
             } else if (args[i].equals("--no-jmx")) {
-                Registry.disableRegistry();
+                // This was already processed before
             } else {
                 throw new IllegalArgumentException(sm.getString("tomcat.invalidCommandLine", args[i]));
             }

==================================================
GraalCompat.java
index ba2bf39798..0f5058ee1e 100644
--- a/java/org/apache/catalina/webresources/StandardRoot.java
+++ b/java/org/apache/catalina/webresources/StandardRoot.java
@@ -45,6 +45,7 @@ import org.apache.catalina.util.LifecycleMBeanBase;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.buf.UriUtil;
+import org.apache.tomcat.util.compat.JreCompat;
 import org.apache.tomcat.util.http.RequestUtil;
 import org.apache.tomcat.util.res.StringManager;
 
@@ -694,9 +695,11 @@ public class StandardRoot extends LifecycleMBeanBase implements WebResourceRoot
     }
 
     protected void registerURLStreamHandlerFactory() {
-        // Ensure support for jar:war:file:/ URLs will be available (required
-        // for resource JARs in packed WAR files).
-        TomcatURLStreamHandlerFactory.register();
+        if (!JreCompat.isGraalAvailable()) {
+            // Ensure support for jar:war:file:/ URLs will be available (required
+            // for resource JARs in packed WAR files).
+            TomcatURLStreamHandlerFactory.register();
+        }
     }
 
     @Override

==================================================
JreCompat.java
index f6636c744a..bfa7b02c5d 100644
--- a/java/org/apache/tomcat/util/compat/GraalCompat.java
+++ b/java/org/apache/tomcat/util/compat/GraalCompat.java
@@ -25,10 +25,10 @@ class GraalCompat extends JreCompat {
     static {
         boolean result = false;
         try {
-            Class<?> nativeImageClazz = Class.forName("org.graalvm.nativeimage");
+            Class<?> nativeImageClazz = Class.forName("org.graalvm.nativeimage.ImageInfo");
             result = (nativeImageClazz.getMethod("inImageCode").invoke(null) == Boolean.TRUE);
         } catch (ClassNotFoundException e) {
-            // Must be Java 8
+            // Must be Graal
         } catch (ReflectiveOperationException | IllegalArgumentException e) {
             // Should never happen
         }

==================================================
Registry.java
index f507b11165..ffe22233cc 100644
--- a/java/org/apache/tomcat/util/compat/JreCompat.java
+++ b/java/org/apache/tomcat/util/compat/JreCompat.java
@@ -38,20 +38,25 @@ public class JreCompat {
     private static final int RUNTIME_MAJOR_VERSION = 8;
 
     private static final JreCompat instance;
+    private static final boolean graalAvailable;
     private static final boolean jre9Available;
     private static final StringManager sm = StringManager.getManager(JreCompat.class);
 
     static {
         // This is Tomcat 9 with a minimum Java version of Java 8.
         // Look for the highest supported JVM first
+        System.out.println("GraalCompat : " + GraalCompat.isSupported());
         if (GraalCompat.isSupported()) {
             instance = new GraalCompat();
+            graalAvailable = true;
             jre9Available = false;
         } else if (Jre9Compat.isSupported()) {
             instance = new Jre9Compat();
+            graalAvailable = false;
             jre9Available = true;
         } else {
             instance = new JreCompat();
+            graalAvailable = false;
             jre9Available = false;
         }
     }
@@ -62,6 +67,11 @@ public class JreCompat {
     }
 
 
+    public static boolean isGraalAvailable() {
+        return graalAvailable;
+    }
+
+
     public static boolean isJre9Available() {
         return jre9Available;
     }

==================================================
