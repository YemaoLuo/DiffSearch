8898e185bef3ef43ce7c8822878fab8169a72521
==================================================
URLs may be added directly to the web application's class path. ensure that they are scanned if a StandardJarScanner is configured to scan the class path.
==================================================
Mark Emlyn
==================================================
Wed Oct 29 14:42:01 2014 +0000
==================================================
StandardJarScanner.java
URLs may be added directly to the web application's class path. ensure that they are scanned if a StandardJarScanner is configured to scan the class path.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1635154 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TesterServletContext.java
index 1740ce06e6..8f75ad239f 100644
--- a/java/org/apache/tomcat/util/scan/StandardJarScanner.java
+++ b/java/org/apache/tomcat/util/scan/StandardJarScanner.java
@@ -195,11 +195,7 @@ public class StandardJarScanner implements JarScanner {
                 stopLoader = ClassLoader.getSystemClassLoader().getParent();
             }
 
-
             ClassLoader classLoader = context.getClassLoader();
-            // No need to scan the web application class loader - we have
-            // already scanned WEB-INF/lib and WEB-INF/classes
-            classLoader = classLoader.getParent();
 
             // JARs are treated as application provided until the common class
             // loader is reached.

==================================================
TestStandardJarScanner.java
index 61b59e2aa9..148d085179 100644
--- a/test/org/apache/catalina/filters/TesterServletContext.java
+++ b/test/org/apache/catalina/filters/TesterServletContext.java
@@ -19,6 +19,7 @@ package org.apache.catalina.filters;
 import java.io.InputStream;
 import java.net.MalformedURLException;
 import java.net.URL;
+import java.util.Collections;
 import java.util.Enumeration;
 import java.util.EventListener;
 import java.util.Map;
@@ -52,6 +53,27 @@ public class TesterServletContext implements ServletContext {
         return "";
     }
 
+    /**
+     * {@inheritDoc}
+     * <p>
+     * This test implementation is hard coded to return an empty Set.
+     */
+    @Override
+    public Set<String> getResourcePaths(String path) {
+        return Collections.emptySet();
+    }
+
+    /**
+     * {@inheritDoc}
+     * <p>
+     * This test implementation is hard coded to return the class loader that
+     * loaded this class.
+     */
+    @Override
+    public ClassLoader getClassLoader() {
+        return getClass().getClassLoader();
+    }
+
     @Override
     public ServletContext getContext(String uripath) {
         throw new RuntimeException("Not implemented");
@@ -72,11 +94,6 @@ public class TesterServletContext implements ServletContext {
         throw new RuntimeException("Not implemented");
     }
 
-    @Override
-    public Set<String> getResourcePaths(String path) {
-        throw new RuntimeException("Not implemented");
-    }
-
     @Override
     public URL getResource(String path) throws MalformedURLException {
         throw new RuntimeException("Not implemented");
@@ -307,11 +324,6 @@ public class TesterServletContext implements ServletContext {
         throw new RuntimeException("Not implemented");
     }
 
-    @Override
-    public ClassLoader getClassLoader() {
-        throw new RuntimeException("Not implemented");
-    }
-
     @Override
     public void declareRoles(String... roleNames) {
         throw new RuntimeException("Not implemented");

==================================================
