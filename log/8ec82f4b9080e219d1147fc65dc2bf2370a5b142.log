8ec82f4b9080e219d1147fc65dc2bf2370a5b142
==================================================
Use String.contains() instead of indexOf()
==================================================
Emmanuel Bourg
==================================================
Thu May 11 07:23:21 2017 +0000
==================================================
StandardContext.java
Use String.contains() instead of indexOf()

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1794791 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AddDefaultCharsetFilter.java
index 05429879a6..19fe994e1d 100644
--- a/java/org/apache/catalina/core/StandardContext.java
+++ b/java/org/apache/catalina/core/StandardContext.java
@@ -6045,8 +6045,7 @@ public class StandardContext extends ContainerBase
             } else
                 return false;
         }
-        if ( (urlPattern.startsWith("/")) &&
-                (urlPattern.indexOf("*.") < 0)) {
+        if (urlPattern.startsWith("/") && !urlPattern.contains("*.")) {
             checkUnusualURLPattern(urlPattern);
             return true;
         } else

==================================================
ExpiresFilter.java
index 930093c44a..0f6c830e57 100644
--- a/java/org/apache/catalina/filters/AddDefaultCharsetFilter.java
+++ b/java/org/apache/catalina/filters/AddDefaultCharsetFilter.java
@@ -108,7 +108,7 @@ public class AddDefaultCharsetFilter extends FilterBase {
         public void setContentType(String ct) {
 
             if (ct != null && ct.startsWith("text/")) {
-                if (ct.indexOf("charset=") < 0) {
+                if (!ct.contains("charset=")) {
                     super.setContentType(ct + ";charset=" + encoding);
                 } else {
                     super.setContentType(ct);

==================================================
SessionUtils.java
index f20649a7b4..eb4f6b59b6 100644
--- a/java/org/apache/catalina/filters/ExpiresFilter.java
+++ b/java/org/apache/catalina/filters/ExpiresFilter.java
@@ -1104,7 +1104,7 @@ public class ExpiresFilter extends FilterBase {
         if (str == null || searchStr == null) {
             return false;
         }
-        return str.indexOf(searchStr) >= 0;
+        return str.contains(searchStr);
     }
 
     /**

==================================================
CGIServlet.java
index a28c06e237..fda10f94bb 100644
--- a/java/org/apache/catalina/manager/util/SessionUtils.java
+++ b/java/org/apache/catalina/manager/util/SessionUtils.java
@@ -112,7 +112,7 @@ public class SessionUtils {
             final List<Object> tapestryArray = new ArrayList<>();
             for (Enumeration<String> enumeration = in_session.getAttributeNames(); enumeration.hasMoreElements();) {
                 String name = enumeration.nextElement();
-                if (name.indexOf("tapestry") > -1 && name.indexOf("engine") > -1 && null != in_session.getAttribute(name)) {//$NON-NLS-1$ //$NON-NLS-2$
+                if (name.contains("tapestry") && name.contains("engine") && null != in_session.getAttribute(name)) {//$NON-NLS-1$ //$NON-NLS-2$
                     tapestryArray.add(in_session.getAttribute(name));
                 }
             }

==================================================
WebdavServlet.java
index aea980ba1a..677aada1e8 100644
--- a/java/org/apache/catalina/servlets/CGIServlet.java
+++ b/java/org/apache/catalina/servlets/CGIServlet.java
@@ -1467,9 +1467,9 @@ public final class CGIServlet extends HttpServlet {
                 log.debug("envp: [" + env + "], command: [" + command + "]");
             }
 
-            if ((command.indexOf(File.separator + "." + File.separator) >= 0)
-                || (command.indexOf(File.separator + "..") >= 0)
-                || (command.indexOf(".." + File.separator) >= 0)) {
+            if ((command.contains(File.separator + "." + File.separator))
+                || (command.contains(File.separator + ".."))
+                || (command.contains(".." + File.separator))) {
                 throw new IOException(this.getClass().getName()
                                       + "Illegal Character in CGI command "
                                       + "path ('.' or '..') detected.  Not "

==================================================
SSIServletExternalResolver.java
index 849c53b191..653cdf3094 100644
--- a/java/org/apache/catalina/servlets/WebdavServlet.java
+++ b/java/org/apache/catalina/servlets/WebdavServlet.java
@@ -1287,7 +1287,7 @@ public class WebdavServlet
                 tokenList = toRenew.tokens.elements();
                 while (tokenList.hasMoreElements()) {
                     String token = tokenList.nextElement();
-                    if (ifHeader.indexOf(token) != -1) {
+                    if (ifHeader.contains(token)) {
                         toRenew.expiresAt = lock.expiresAt;
                         lock = toRenew;
                     }
@@ -1305,7 +1305,7 @@ public class WebdavServlet
                     tokenList = toRenew.tokens.elements();
                     while (tokenList.hasMoreElements()) {
                         String token = tokenList.nextElement();
-                        if (ifHeader.indexOf(token) != -1) {
+                        if (ifHeader.contains(token)) {
                             toRenew.expiresAt = lock.expiresAt;
                             lock = toRenew;
                         }
@@ -1376,7 +1376,7 @@ public class WebdavServlet
             tokenList = lock.tokens.elements();
             while (tokenList.hasMoreElements()) {
                 String token = tokenList.nextElement();
-                if (lockTokenHeader.indexOf(token) != -1) {
+                if (lockTokenHeader.contains(token)) {
                     lock.tokens.removeElement(token);
                 }
             }
@@ -1399,7 +1399,7 @@ public class WebdavServlet
                 tokenList = lock.tokens.elements();
                 while (tokenList.hasMoreElements()) {
                     String token = tokenList.nextElement();
-                    if (lockTokenHeader.indexOf(token) != -1) {
+                    if (lockTokenHeader.contains(token)) {
                         lock.tokens.removeElement(token);
                         break;
                     }
@@ -1472,7 +1472,7 @@ public class WebdavServlet
             boolean tokenMatch = false;
             while (tokenList.hasMoreElements()) {
                 String token = tokenList.nextElement();
-                if (ifHeader.indexOf(token) != -1) {
+                if (ifHeader.contains(token)) {
                     tokenMatch = true;
                     break;
                 }
@@ -1495,7 +1495,7 @@ public class WebdavServlet
                 boolean tokenMatch = false;
                 while (tokenList.hasMoreElements()) {
                     String token = tokenList.nextElement();
-                    if (ifHeader.indexOf(token) != -1) {
+                    if (ifHeader.contains(token)) {
                         tokenMatch = true;
                         break;
                     }

==================================================
FileResource.java
index 3e9d0683a4..381e0d2647 100644
--- a/java/org/apache/catalina/ssi/SSIServletExternalResolver.java
+++ b/java/org/apache/catalina/ssi/SSIServletExternalResolver.java
@@ -388,7 +388,7 @@ public class SSIServletExternalResolver implements SSIExternalResolver {
             throw new IOException("A non-virtual path can't be absolute: "
                     + nonVirtualPath);
         }
-        if (nonVirtualPath.indexOf("../") >= 0) {
+        if (nonVirtualPath.contains("../")) {
             throw new IOException("A non-virtual path can't contain '../' : "
                     + nonVirtualPath);
         }

==================================================
JavacErrorDetail.java
index 03697d2eed..f3f89e035a 100644
--- a/java/org/apache/catalina/webresources/FileResource.java
+++ b/java/org/apache/catalina/webresources/FileResource.java
@@ -47,7 +47,7 @@ public class FileResource extends AbstractResource {
         boolean isEBCDIC = false;
         try {
             String encoding = System.getProperty("file.encoding");
-            if (encoding.indexOf("EBCDIC") != -1) {
+            if (encoding.contains("EBCDIC")) {
                 isEBCDIC = true;
             }
         } catch (SecurityException e) {

==================================================
Validator.java
index 4386fccd18..3200d24f79 100644
--- a/java/org/apache/jasper/compiler/JavacErrorDetail.java
+++ b/java/org/apache/jasper/compiler/JavacErrorDetail.java
@@ -118,7 +118,7 @@ public class JavacErrorDetail {
                         String javaLine = javaLines[javaLineNum-1].trim();
 
                         for (int i=jspBeginLineNum-1; i<jspLines.length; i++) {
-                            if (jspLines[i].indexOf(javaLine) != -1) {
+                            if (jspLines[i].contains(javaLine)) {
                                 // Update jsp line number
                                 jspBeginLineNum = i+1;
                                 break;

==================================================
MimeUtility.java
index cb8a7752bc..dbe29557c2 100644
--- a/java/org/apache/jasper/compiler/Validator.java
+++ b/java/org/apache/jasper/compiler/Validator.java
@@ -1821,7 +1821,7 @@ class Validator {
         PageInfo pageInfo = compiler.getPageInfo();
         String contentType = pageInfo.getContentType();
 
-        if (contentType == null || contentType.indexOf("charset=") < 0) {
+        if (contentType == null || !contentType.contains("charset=")) {
             boolean isXml = page.getRoot().isXmlSyntax();
             String defaultType;
             if (contentType == null) {

==================================================
Registry.java
index 7e45525265..b5b4cddf0b 100644
--- a/java/org/apache/tomcat/util/http/fileupload/util/mime/MimeUtility.java
+++ b/java/org/apache/tomcat/util/http/fileupload/util/mime/MimeUtility.java
@@ -101,7 +101,7 @@ public final class MimeUtility {
     public static String decodeText(String text) throws UnsupportedEncodingException {
         // if the text contains any encoded tokens, those tokens will be marked with "=?".  If the
         // source string doesn't contain that sequent, no decoding is required.
-        if (text.indexOf(ENCODED_TOKEN_MARKER) < 0) {
+        if (!text.contains(ENCODED_TOKEN_MARKER)) {
             return text;
         }
 

==================================================
TestNonLoginAndBasicAuthenticator.java
index 5f3e066776..6545396591 100644
--- a/java/org/apache/tomcat/util/modeler/Registry.java
+++ b/java/org/apache/tomcat/util/modeler/Registry.java
@@ -706,7 +706,7 @@ public class Registry implements RegistryMBean, MBeanRegistration  {
             throws Exception
     {
         if( type==null ) type="MbeansDescriptorsDigesterSource";
-        if( type.indexOf( ".") < 0 ) {
+        if(!type.contains(".")) {
             type="org.apache.tomcat.util.modeler.modules." + type;
         }
 

==================================================
TestSSOnonLoginAndBasicAuthenticator.java
index bb23f37532..2798003f8a 100644
--- a/test/org/apache/catalina/authenticator/TestNonLoginAndBasicAuthenticator.java
+++ b/test/org/apache/catalina/authenticator/TestNonLoginAndBasicAuthenticator.java
@@ -406,7 +406,7 @@ public class TestNonLoginAndBasicAuthenticator extends TomcatBaseTest {
                 boolean methodFound = false;
                 List<String> authHeaders = respHeaders.get(SERVER_AUTH_HEADER);
                 for (String authHeader : authHeaders) {
-                    if (authHeader.indexOf(NICE_METHOD) > -1) {
+                    if (authHeader.contains(NICE_METHOD)) {
                         methodFound = true;
                         break;
                     }

==================================================
TestStandardContextAliases.java
index 8adb21328a..baba2f09bb 100644
--- a/test/org/apache/catalina/authenticator/TestSSOnonLoginAndBasicAuthenticator.java
+++ b/test/org/apache/catalina/authenticator/TestSSOnonLoginAndBasicAuthenticator.java
@@ -401,7 +401,7 @@ public class TestSSOnonLoginAndBasicAuthenticator extends TomcatBaseTest {
                 boolean methodFound = false;
                 List<String> authHeaders = respHeaders.get(SERVER_AUTH_HEADER);
                 for (String authHeader : authHeaders) {
-                    if (authHeader.indexOf(NICE_METHOD) > -1) {
+                    if (authHeader.contains(NICE_METHOD)) {
                         methodFound = true;
                         break;
                     }

==================================================
TestVirtualContext.java
index 15bb020339..2d19254d64 100644
--- a/test/org/apache/catalina/core/TestStandardContextAliases.java
+++ b/test/org/apache/catalina/core/TestStandardContextAliases.java
@@ -67,9 +67,9 @@ public class TestStandardContextAliases extends TomcatBaseTest {
             result = "";
         }
 
-        assertTrue(result.indexOf("00-PASS") > -1);
-        assertTrue(result.indexOf("01-PASS") > -1);
-        assertTrue(result.indexOf("02-PASS") > -1);
+        assertTrue(result.contains("00-PASS"));
+        assertTrue(result.contains("01-PASS"));
+        assertTrue(result.contains("02-PASS"));
     }
 
 

==================================================
TestContextConfig.java
index 1a1e982be5..e9938ed4ba 100644
--- a/test/org/apache/catalina/loader/TestVirtualContext.java
+++ b/test/org/apache/catalina/loader/TestVirtualContext.java
@@ -333,7 +333,7 @@ public class TestVirtualContext extends TomcatBaseTest {
 
         if (expectedStatus == 200) {
             String result = res.toString();
-            assertTrue(result, result.indexOf(expectedBody) >= 0);
+            assertTrue(result, result.contains(expectedBody));
         }
     }
 }

==================================================
TestGroupChannelOptionFlag.java
index e3dae05b24..6b2dba1f72 100644
--- a/test/org/apache/catalina/startup/TestContextConfig.java
+++ b/test/org/apache/catalina/startup/TestContextConfig.java
@@ -199,7 +199,7 @@ public class TestContextConfig extends TomcatBaseTest {
 
         if (expectedStatus == HttpServletResponse.SC_OK) {
             String result = res.toString();
-            Assert.assertTrue(result, result.indexOf(expectedBody) > -1);
+            Assert.assertTrue(result, result.contains(expectedBody));
         }
     }
 

==================================================
TesterSupport.java
index 8e88348976..8416cd16d4 100644
--- a/test/org/apache/catalina/tribes/group/TestGroupChannelOptionFlag.java
+++ b/test/org/apache/catalina/tribes/group/TestGroupChannelOptionFlag.java
@@ -60,7 +60,7 @@ public class TestGroupChannelOptionFlag {
         try {
             channel.start(Channel.DEFAULT);
         }catch ( ChannelException x ) {
-            if ( x.getMessage().indexOf("option flag conflict") >= 0 ) error = true;
+            if (x.getMessage().contains("option flag conflict")) error = true;
         }
         assertTrue(error);
     }
@@ -81,7 +81,7 @@ public class TestGroupChannelOptionFlag {
         try {
             channel.start(Channel.DEFAULT);
         }catch ( ChannelException x ) {
-            if ( x.getMessage().indexOf("option flag conflict") >= 0 ) error = true;
+            if (x.getMessage().contains("option flag conflict")) error = true;
         }
         assertFalse(error);
     }

==================================================
