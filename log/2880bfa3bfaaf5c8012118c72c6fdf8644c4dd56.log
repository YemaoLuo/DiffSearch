2880bfa3bfaaf5c8012118c72c6fdf8644c4dd56
==================================================
Make writing the settings frame unit tests easier.
==================================================
Mark Thomas
==================================================
Wed Jun 24 13:55:44 2015 +0000
==================================================
Http2TestBase.java
Make writing the settings frame unit tests easier.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1687278 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestHttp2Section_5_2.java
index 873c4bdbe4..635dc51b79 100644
--- a/test/org/apache/coyote/http2/Http2TestBase.java
+++ b/test/org/apache/coyote/http2/Http2TestBase.java
@@ -543,18 +543,35 @@ public abstract class Http2TestBase extends TomcatBaseTest {
     }
 
 
-    void sendSetting(int settingId, long value) throws IOException {
+    void sendSettings(int streamId, boolean ack, Setting... settings) throws IOException {
         byte[] settingFrame = new byte[15];
         // length
-        ByteUtil.setThreeBytes(settingFrame, 0, 6);
+
+        int settingsCount;
+        if (settings == null) {
+            settingsCount = 0;
+        } else {
+            settingsCount = settings.length;
+        }
+
+        ByteUtil.setThreeBytes(settingFrame, 0, 6 * settingsCount);
         // type
         settingFrame[3] = FrameType.SETTINGS.getIdByte();
-        // No flags
-        // Stream 0
+
+        if (ack) {
+            settingFrame[4] = 0x01;
+        }
+
+        // Stream
+        ByteUtil.set31Bits(settingFrame, 5, streamId);
 
         // Payload
-        ByteUtil.setTwoBytes(settingFrame, 9, settingId);
-        ByteUtil.setFourBytes(settingFrame, 11, value);
+        for (int i = 0; i < settingsCount; i++) {
+            // Stops IDE complaining about possible NPE
+            Assert.assertNotNull(settings);
+            ByteUtil.setTwoBytes(settingFrame, (i * 6) + 9, settings[i].getSetting());
+            ByteUtil.setFourBytes(settingFrame, (i * 6) + 11, settings[i].getValue());
+        }
 
         os.write(settingFrame);
         os.flush();
@@ -798,4 +815,23 @@ public abstract class Http2TestBase extends TomcatBaseTest {
             }
         }
     }
+
+
+    static class Setting {
+        private final int setting;
+        private final long value;
+
+        public Setting(int setting, long value) {
+            this.setting = setting;
+            this.value = value;
+        }
+
+        public int getSetting() {
+            return setting;
+        }
+
+        public long getValue() {
+            return value;
+        }
+    }
 }

==================================================
TestHttp2Section_5_3.java
index 0a0fda7da0..db863ca558 100644
--- a/test/org/apache/coyote/http2/TestHttp2Section_5_2.java
+++ b/test/org/apache/coyote/http2/TestHttp2Section_5_2.java
@@ -41,7 +41,7 @@ public class TestHttp2Section_5_2 extends Http2TestBase {
         http2Connect();
 
         // Set the default window size to 1024 bytes
-        sendSetting(4, 1024);
+        sendSettings(0, false, new Setting(4, 1024));
         // Wait for the ack
         parser.readFrame(true);
         output.clearTrace();

==================================================
TestHttp2Section_5_5.java
index 971a750c2d..ece7635db9 100644
--- a/test/org/apache/coyote/http2/TestHttp2Section_5_3.java
+++ b/test/org/apache/coyote/http2/TestHttp2Section_5_3.java
@@ -62,7 +62,7 @@ public class TestHttp2Section_5_3 extends Http2TestBase {
         }
 
         // Set the default window size to 1024 bytes
-        sendSetting(4, 1024);
+        sendSettings(0, false, new Setting(4, 1024));
         // Wait for the ack
         parser.readFrame(true);
         output.clearTrace();

==================================================
