ab81a017d7b8be31310b53dc8448799223375565
==================================================
Some more concurrency testing
==================================================
Filip Hanik
==================================================
Fri Jul 10 21:38:16 2009 +0000
==================================================
ConnectionPool.java
Some more concurrency testing


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@793116 13f79535-47bb-0310-9956-ffa450edef68



==================================================
DataSourceFactory.java
index b02b06c85a..53a765cfc1 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/ConnectionPool.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/ConnectionPool.java
@@ -847,7 +847,7 @@ public class ConnectionPool {
                     if (busy.contains(con))
                         continue;
                     long time = con.getTimestamp();
-                    if (((now - time) > con.getReleaseTime()) && (getSize()>getPoolProperties().getMinIdle())) {
+                    if ((con.getReleaseTime()>0) && ((now - time) > con.getReleaseTime()) && (getSize()>getPoolProperties().getMinIdle())) {
                         release(con);
                         idle.remove(con);
                         setToNull = true;

==================================================
DataSourceProxy.java
index 6883bd8f9a..30f4fc4d75 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/DataSourceFactory.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/DataSourceFactory.java
@@ -108,6 +108,7 @@ public class DataSourceFactory implements ObjectFactory {
     protected final static String PROP_FAIR_QUEUE = "fairQueue";
     
     protected static final String PROP_USE_EQUALS = "useEquals";
+    protected static final String PROP_USE_CON_LOCK = "useLock";
     
     public static final int UNKNOWN_TRANSACTIONISOLATION = -1;
     
@@ -151,7 +152,8 @@ public class DataSourceFactory implements ObjectFactory {
         PROP_USE_EQUALS,
         OBJECT_NAME,
         PROP_ABANDONWHENPERCENTAGEFULL,
-        PROP_MAXAGE
+        PROP_MAXAGE,
+        PROP_USE_CON_LOCK
     };
 
     // -------------------------------------------------- ObjectFactory Methods
@@ -424,6 +426,11 @@ public class DataSourceFactory implements ObjectFactory {
             poolProperties.setMaxAge(Long.parseLong(value));
         }
         
+        value = properties.getProperty(PROP_USE_CON_LOCK);
+        if (value != null) {
+            poolProperties.setUseLock(Boolean.parseBoolean(value));
+        }
+        
         return poolProperties;
     }
 

==================================================
PoolProperties.java
index 17d5ee9110..e8d761595d 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/DataSourceProxy.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/DataSourceProxy.java
@@ -287,6 +287,10 @@ public class DataSourceProxy  {
         this.getPoolProperties().setFairQueue(fairQueue);
     }
     
+    public void setUseLock(boolean useLock) {
+        this.getPoolProperties().setUseLock(useLock);
+    }
+    
     public void setDefaultCatalog(String catalog) {
         this.getPoolProperties().setDefaultCatalog(catalog);
     }

==================================================
PooledConnection.java
index 9c7d29b5dd..cd01c5c10a 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/PoolProperties.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/PoolProperties.java
@@ -72,7 +72,7 @@ public class PoolProperties {
     protected boolean useEquals = false;
     protected int abandonWhenPercentageFull = 0;
     protected long maxAge = 0;
-    protected boolean useLock = true;
+    protected boolean useLock = false;
     private InterceptorDefinition[] interceptors = null;
     
     public void setAbandonWhenPercentageFull(int percentage) {

==================================================
TestConcurrency.java
index f01b2a03ae..111c97495e 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/PooledConnection.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/PooledConnection.java
@@ -77,7 +77,7 @@ public class PooledConnection {
     /**
      * Timestamp the connection was last 'touched' by the pool
      */
-    private long timestamp;
+    private volatile long timestamp;
     /**
      * Lock for this connection only
      */

==================================================
