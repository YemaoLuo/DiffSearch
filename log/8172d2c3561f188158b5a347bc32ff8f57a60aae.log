8172d2c3561f188158b5a347bc32ff8f57a60aae
==================================================
Allow Checkstyle's unused imports test to be used with the o.a.catalina.core package (remainder)
==================================================
Mark Emlyn
==================================================
Sun Oct 24 14:09:37 2010 +0000
==================================================
StandardContextValve.java
Allow Checkstyle's unused imports test to be used with the o.a.catalina.core package (remainder)
Fix some Eclipse warnings

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1026802 13f79535-47bb-0310-9956-ffa450edef68



==================================================
StandardServer.java
index e3444a0ee8..1a29ee0149 100644
--- a/java/org/apache/catalina/core/StandardContextValve.java
+++ b/java/org/apache/catalina/core/StandardContextValve.java
@@ -31,7 +31,6 @@ import org.apache.catalina.connector.Request;
 import org.apache.catalina.connector.Response;
 import org.apache.catalina.valves.ValveBase;
 import org.apache.tomcat.util.buf.MessageBytes;
-import org.apache.tomcat.util.res.StringManager;
 
 /**
  * Valve that implements the default basic behavior for the
@@ -62,13 +61,6 @@ final class StandardContextValve
         "org.apache.catalina.core.StandardContextValve/1.0";
 
 
-    /**
-     * The string manager for this package.
-     */
-    private static final StringManager sm =
-        StringManager.getManager(Constants.Package);
-
-
     private StandardContext context = null;
     
 

==================================================
StandardService.java
index 7a538e65c4..28a21d6eca 100644
--- a/java/org/apache/catalina/core/StandardServer.java
+++ b/java/org/apache/catalina/core/StandardServer.java
@@ -32,7 +32,6 @@ import java.util.Random;
 import javax.management.ObjectName;
 
 import org.apache.catalina.Context;
-import org.apache.catalina.Engine;
 import org.apache.catalina.LifecycleException;
 import org.apache.catalina.LifecycleState;
 import org.apache.catalina.Server;
@@ -41,7 +40,6 @@ import org.apache.catalina.deploy.NamingResources;
 import org.apache.catalina.mbeans.MBeanFactory;
 import org.apache.catalina.mbeans.MBeanUtils;
 import org.apache.catalina.startup.Catalina;
-import org.apache.catalina.util.LifecycleBase;
 import org.apache.catalina.util.LifecycleMBeanBase;
 import org.apache.catalina.util.ServerInfo;
 import org.apache.juli.logging.Log;
@@ -190,6 +188,7 @@ public final class StandardServer extends LifecycleMBeanBase
     /**
      * Return the global naming resources.
      */
+    @Override
     public NamingResources getGlobalNamingResources() {
 
         return (this.globalNamingResources);
@@ -202,6 +201,7 @@ public final class StandardServer extends LifecycleMBeanBase
      *
      * @param globalNamingResources The new global naming resources
      */
+    @Override
     public void setGlobalNamingResources
         (NamingResources globalNamingResources) {
 
@@ -221,6 +221,7 @@ public final class StandardServer extends LifecycleMBeanBase
      * the corresponding version number, in the format
      * <code>&lt;description&gt;/&lt;version&gt;</code>.
      */
+    @Override
     public String getInfo() {
 
         return (info);
@@ -239,6 +240,7 @@ public final class StandardServer extends LifecycleMBeanBase
     /**
      * Return the port number we listen to for shutdown commands.
      */
+    @Override
     public int getPort() {
 
         return (this.port);
@@ -251,6 +253,7 @@ public final class StandardServer extends LifecycleMBeanBase
      *
      * @param port The new port number
      */
+    @Override
     public void setPort(int port) {
 
         this.port = port;
@@ -261,6 +264,7 @@ public final class StandardServer extends LifecycleMBeanBase
     /**
      * Return the address on which we listen to for shutdown commands.
      */
+    @Override
     public String getAddress() {
 
         return (this.address);
@@ -273,6 +277,7 @@ public final class StandardServer extends LifecycleMBeanBase
      *
      * @param address The new address
      */
+    @Override
     public void setAddress(String address) {
 
         this.address = address;
@@ -282,6 +287,7 @@ public final class StandardServer extends LifecycleMBeanBase
     /**
      * Return the shutdown command string we are waiting for.
      */
+    @Override
     public String getShutdown() {
 
         return (this.shutdown);
@@ -294,6 +300,7 @@ public final class StandardServer extends LifecycleMBeanBase
      *
      * @param shutdown The new shutdown command
      */
+    @Override
     public void setShutdown(String shutdown) {
 
         this.shutdown = shutdown;
@@ -326,6 +333,7 @@ public final class StandardServer extends LifecycleMBeanBase
      *
      * @param service The Service to be added
      */
+    @Override
     public void addService(Service service) {
 
         service.setServer(this);
@@ -359,6 +367,7 @@ public final class StandardServer extends LifecycleMBeanBase
      * This keeps the main thread alive - the thread pool listening for http 
      * connections is daemon threads.
      */
+    @Override
     public void await() {
         // Negative values - don't wait on port - tomcat is embedded or we just don't like ports
         if( port == -2 ) {
@@ -463,6 +472,7 @@ public final class StandardServer extends LifecycleMBeanBase
      *
      * @param name Name of the Service to be returned
      */
+    @Override
     public Service findService(String name) {
 
         if (name == null) {
@@ -483,6 +493,7 @@ public final class StandardServer extends LifecycleMBeanBase
     /**
      * Return the set of Services defined within this Server.
      */
+    @Override
     public Service[] findServices() {
 
         return (services);
@@ -507,6 +518,7 @@ public final class StandardServer extends LifecycleMBeanBase
      *
      * @param service The Service to be removed
      */
+    @Override
     public void removeService(Service service) {
 
         synchronized (services) {
@@ -645,7 +657,7 @@ public final class StandardServer extends LifecycleMBeanBase
 
     /**
      * Start nested components ({@link Service}s) and implement the requirements
-     * of {@link LifecycleBase#startInternal()}.
+     * of {@link org.apache.catalina.util.LifecycleBase#startInternal()}.
      *
      * @exception LifecycleException if this component detects a fatal error
      *  that prevents this component from being used
@@ -667,7 +679,7 @@ public final class StandardServer extends LifecycleMBeanBase
 
     /**
      * Stop nested components ({@link Service}s) and implement the requirements
-     * of {@link LifecycleBase#stopInternal()}.
+     * of {@link org.apache.catalina.util.LifecycleBase#stopInternal()}.
      *
      * @exception LifecycleException if this component detects a fatal error
      *  that needs to be reported
@@ -753,7 +765,7 @@ public final class StandardServer extends LifecycleMBeanBase
      * Obtain the MBean domain for this server. The domain is obtained using
      * the following search order:
      * <ol>
-     * <li>Name of first {@link Engine}.</li>
+     * <li>Name of first {@link org.apache.catalina.Engine}.</li>
      * <li>Name of first {@link Service}.</li>
      * </ol>
      */

==================================================
StandardThreadExecutor.java
index e31d83a46c..cbada8120e 100644
--- a/java/org/apache/catalina/core/StandardService.java
+++ b/java/org/apache/catalina/core/StandardService.java
@@ -34,7 +34,6 @@ import org.apache.catalina.Server;
 import org.apache.catalina.Service;
 import org.apache.catalina.connector.Connector;
 import org.apache.catalina.mbeans.MBeanUtils;
-import org.apache.catalina.util.LifecycleBase;
 import org.apache.catalina.util.LifecycleMBeanBase;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
@@ -112,6 +111,7 @@ public class StandardService extends LifecycleMBeanBase implements Service {
      * Return the <code>Container</code> that handles requests for all
      * <code>Connectors</code> associated with this Service.
      */
+    @Override
     public Container getContainer() {
 
         return (this.container);
@@ -125,6 +125,7 @@ public class StandardService extends LifecycleMBeanBase implements Service {
      *
      * @param container The new Container
      */
+    @Override
     public void setContainer(Container container) {
 
         Container oldContainer = this.container;
@@ -159,6 +160,7 @@ public class StandardService extends LifecycleMBeanBase implements Service {
      * the corresponding version number, in the format
      * <code>&lt;description&gt;/&lt;version&gt;</code>.
      */
+    @Override
     public String getInfo() {
 
         return (info);
@@ -169,6 +171,7 @@ public class StandardService extends LifecycleMBeanBase implements Service {
     /**
      * Return the name of this Service.
      */
+    @Override
     public String getName() {
 
         return (this.name);
@@ -181,6 +184,7 @@ public class StandardService extends LifecycleMBeanBase implements Service {
      *
      * @param name The new service name
      */
+    @Override
     public void setName(String name) {
 
         this.name = name;
@@ -191,6 +195,7 @@ public class StandardService extends LifecycleMBeanBase implements Service {
     /**
      * Return the <code>Server</code> with which we are associated (if any).
      */
+    @Override
     public Server getServer() {
 
         return (this.server);
@@ -203,6 +208,7 @@ public class StandardService extends LifecycleMBeanBase implements Service {
      *
      * @param server The server that owns this Service
      */
+    @Override
     public void setServer(Server server) {
 
         this.server = server;
@@ -219,6 +225,7 @@ public class StandardService extends LifecycleMBeanBase implements Service {
      *
      * @param connector The Connector to be added
      */
+    @Override
     public void addConnector(Connector connector) {
 
         synchronized (connectors) {
@@ -268,6 +275,7 @@ public class StandardService extends LifecycleMBeanBase implements Service {
     /**
      * Find and return the set of Connectors associated with this Service.
      */
+    @Override
     public Connector[] findConnectors() {
 
         return (connectors);
@@ -282,6 +290,7 @@ public class StandardService extends LifecycleMBeanBase implements Service {
      *
      * @param connector The Connector to be removed
      */
+    @Override
     public void removeConnector(Connector connector) {
 
         synchronized (connectors) {
@@ -349,6 +358,7 @@ public class StandardService extends LifecycleMBeanBase implements Service {
      * Adds a named executor to the service
      * @param ex Executor
      */
+    @Override
     public void addExecutor(Executor ex) {
         synchronized (executors) {
             if (!executors.contains(ex)) {
@@ -367,6 +377,7 @@ public class StandardService extends LifecycleMBeanBase implements Service {
      * Retrieves all executors
      * @return Executor[]
      */
+    @Override
     public Executor[] findExecutors() {
         synchronized (executors) {
             Executor[] arr = new Executor[executors.size()];
@@ -380,6 +391,7 @@ public class StandardService extends LifecycleMBeanBase implements Service {
      * @param executorName String
      * @return Executor
      */
+    @Override
     public Executor getExecutor(String executorName) {
         synchronized (executors) {
             for (Executor executor: executors) {
@@ -394,6 +406,7 @@ public class StandardService extends LifecycleMBeanBase implements Service {
      * Removes an executor from the service
      * @param ex Executor
      */
+    @Override
     public void removeExecutor(Executor ex) {
         synchronized (executors) {
             if ( executors.remove(ex) && getState().isAvailable() ) {
@@ -411,7 +424,7 @@ public class StandardService extends LifecycleMBeanBase implements Service {
     /**
      * Start nested components ({@link Executor}s, {@link Connector}s and
      * {@link Container}s) and implement the requirements of
-     * {@link LifecycleBase#startInternal()}.
+     * {@link org.apache.catalina.util.LifecycleBase#startInternal()}.
      *
      * @exception LifecycleException if this component detects a fatal error
      *  that prevents this component from being used
@@ -454,7 +467,7 @@ public class StandardService extends LifecycleMBeanBase implements Service {
     /**
      * Stop nested components ({@link Executor}s, {@link Connector}s and
      * {@link Container}s) and implement the requirements of
-     * {@link LifecycleBase#stopInternal()}.
+     * {@link org.apache.catalina.util.LifecycleBase#stopInternal()}.
      *
      * @exception LifecycleException if this component detects a fatal error
      *  that needs to be reported

==================================================
StandardWrapper.java
index 44e6e0ce1f..27e267f873 100644
--- a/java/org/apache/catalina/core/StandardThreadExecutor.java
+++ b/java/org/apache/catalina/core/StandardThreadExecutor.java
@@ -23,7 +23,6 @@ import java.util.concurrent.TimeUnit;
 import org.apache.catalina.Executor;
 import org.apache.catalina.LifecycleException;
 import org.apache.catalina.LifecycleState;
-import org.apache.catalina.util.LifecycleBase;
 import org.apache.catalina.util.LifecycleMBeanBase;
 import org.apache.tomcat.util.threads.ResizableExecutor;
 import org.apache.tomcat.util.threads.TaskQueue;
@@ -101,7 +100,7 @@ public class StandardThreadExecutor extends LifecycleMBeanBase
     
     /**
      * Start the component and implement the requirements
-     * of {@link LifecycleBase#startInternal()}.
+     * of {@link org.apache.catalina.util.LifecycleBase#startInternal()}.
      *
      * @exception LifecycleException if this component detects a fatal error
      *  that prevents this component from being used
@@ -123,7 +122,7 @@ public class StandardThreadExecutor extends LifecycleMBeanBase
 
     /**
      * Stop the component and implement the requirements
-     * of {@link LifecycleBase#stopInternal()}.
+     * of {@link org.apache.catalina.util.LifecycleBase#stopInternal()}.
      *
      * @exception LifecycleException if this component detects a fatal error
      *  that needs to be reported

==================================================
