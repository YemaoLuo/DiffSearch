ecbe8cf136935b19a6519dbe66fcbcc8dba0c8c3
==================================================
Enable HTTP/2 by default temporarily (it makes my testing easier and HTTP/2 is working for basic usage).
==================================================
Mark Thomas
==================================================
Fri May 29 11:04:09 2015 +0000
==================================================
AbstractProtocol.java
Enable HTTP/2 by default temporarily (it makes my testing easier and HTTP/2 is working for basic usage).
Add an info log for enabled upgrades over ALPN and HTTP upgrade.
Extend UpgradeProtocol so HTTP/2 can opt not to support HTTP upgrade over TLS.
Only log an error if an UpgradeProtocol is ALPN only but is configured on a non-TLS connector.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1682417 13f79535-47bb-0310-9956-ffa450edef68



==================================================
UpgradeProtocol.java
index 4fac8c8a0c..ed0c7e39e4 100644
--- a/java/org/apache/coyote/AbstractProtocol.java
+++ b/java/org/apache/coyote/AbstractProtocol.java
@@ -51,8 +51,7 @@ public abstract class AbstractProtocol<S> implements ProtocolHandler,
     /**
      * The string manager for this package.
      */
-    protected static final StringManager sm =
-        StringManager.getManager(Constants.Package);
+    private static final StringManager sm = StringManager.getManager(AbstractProtocol.class);
 
 
     /**

==================================================
AbstractHttp11Protocol.java
index c270c1b55e..07f456b223 100644
--- a/java/org/apache/coyote/UpgradeProtocol.java
+++ b/java/org/apache/coyote/UpgradeProtocol.java
@@ -21,11 +21,14 @@ import org.apache.tomcat.util.net.SocketWrapperBase;
 public interface UpgradeProtocol {
 
     /**
+     * @param isSecure Is this for a connector that is configured to support
+     *                 TLS. Some protocols (e.g. HTTP/2) only support HTTP
+     *                 upgrade over non-secure connections.
      * @return The name that clients will use to request an upgrade to this
      *         protocol via an HTTP/1.1 upgrade request or <code>null</code> if
      *         upgrade via an HTTP/1.1 upgrade request is not supported.
      */
-    public String getHttpUpgradeName();
+    public String getHttpUpgradeName(boolean isSecure);
 
     /**
      * @return The byte sequence as listed in the IANA registry for this

==================================================
Http2Protocol.java
index 4b611664e9..3a4e630f37 100644
--- a/java/org/apache/coyote/http11/LocalStrings.properties
+++ b/java/org/apache/coyote/http11/LocalStrings.properties
@@ -13,6 +13,10 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
+abstractHttp11Protocol.alpnConfigured=The [{0}] connector has been configured to support negotiation to [{1}] via ALPN
+abstractHttp11Protocol.alpnWithNoTls=The upgrade handler [{0}] for [{1}] only supports upgrade via ALPN but has been configured for the [{2}] connector that is not enabled for TLS.
+abstractHttp11Protocol.httpUpgradeConfigured=The [{0}] connector has been configured to support HTTP upgrade to [{1}]
+
 http11processor.fallToDebug=\n Note: further occurrences of HTTP header parsing errors will be logged at DEBUG level.
 http11processor.header.parse=Error parsing HTTP request header
 http11processor.neverused=This method should never be used

==================================================
AprEndpoint.java
index 7c01391f1a..8bf5b000bb 100644
--- a/java/org/apache/coyote/http2/Http2Protocol.java
+++ b/java/org/apache/coyote/http2/Http2Protocol.java
@@ -31,8 +31,12 @@ public class Http2Protocol implements UpgradeProtocol {
     private static final byte[] ALPN_IDENTIFIER = ALPN_NAME.getBytes(StandardCharsets.UTF_8);
 
     @Override
-    public String getHttpUpgradeName() {
-        return HTTP_UPGRADE_NAME;
+    public String getHttpUpgradeName(boolean isSecure) {
+        if (isSecure) {
+            return null;
+        } else {
+            return HTTP_UPGRADE_NAME;
+        }
     }
 
     @Override

==================================================
