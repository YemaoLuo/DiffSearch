4f6cc8f037fdaa97719968b8d26f41ae5c19e826
==================================================
Correctly handle the case when AuthConfigFactoryImpl.registerConfigProvider() is called with a provider name of <code>null</code>.
==================================================
Mark Thomas
==================================================
Wed Nov 22 20:17:53 2017 +0000
==================================================
AuthConfigFactoryImpl.java
index 2f8cc98552..1004a11914 100644
--- a/conf/jaspic-providers.xsd
+++ b/conf/jaspic-providers.xsd
@@ -35,7 +35,7 @@
                 </xs:complexType>
               </xs:element>
             </xs:sequence>
-            <xs:attribute name="className" use="required" type="xs:string" />
+            <xs:attribute name="className" type="xs:string" />
             <xs:attribute name="layer" type="xs:string" />
             <xs:attribute name="appContext" type="xs:string" />
             <xs:attribute name="description" type="xs:string" />

==================================================
PersistentProviderRegistrations.java
index 153acad25b..b32f108347 100644
--- a/java/org/apache/catalina/authenticator/jaspic/AuthConfigFactoryImpl.java
+++ b/java/org/apache/catalina/authenticator/jaspic/AuthConfigFactoryImpl.java
@@ -105,6 +105,22 @@ public class AuthConfigFactoryImpl extends AuthConfigFactory {
             log.debug(sm.getString("authConfigFactoryImpl.registerClass",
                     className, layer, appContext));
         }
+
+        AuthConfigProvider provider = null;
+        if (className != null) {
+            provider = createAuthConfigProvider(className, properties);
+        }
+
+        String registrationID = getRegistrationID(layer, appContext);
+        RegistrationContextImpl registrationContextImpl = new RegistrationContextImpl(
+                layer, appContext, description, true, provider, properties);
+        addRegistrationContextImpl(layer, appContext, registrationID, registrationContextImpl);
+        return registrationID;
+    }
+
+
+    private AuthConfigProvider createAuthConfigProvider(String className,
+            @SuppressWarnings("rawtypes") Map properties) throws SecurityException {
         Class<?> clazz = null;
         AuthConfigProvider provider = null;
         try {
@@ -121,12 +137,7 @@ public class AuthConfigFactoryImpl extends AuthConfigFactory {
         } catch (ReflectiveOperationException | IllegalArgumentException e) {
             throw new SecurityException(e);
         }
-
-        String registrationID = getRegistrationID(layer, appContext);
-        RegistrationContextImpl registrationContextImpl = new RegistrationContextImpl(
-                layer, appContext, description, true, provider, properties);
-        addRegistrationContextImpl(layer, appContext, registrationID, registrationContextImpl);
-        return registrationID;
+        return provider;
     }
 
 
@@ -365,7 +376,9 @@ public class AuthConfigFactoryImpl extends AuthConfigFactory {
         if (registrationContextImpl != null && registrationContextImpl.isPersistent()) {
             Provider provider = new Provider();
             provider.setAppContext(registrationContextImpl.getAppContext());
-            provider.setClassName(registrationContextImpl.getProvider().getClass().getName());
+            if (registrationContextImpl.getProvider() != null) {
+                provider.setClassName(registrationContextImpl.getProvider().getClass().getName());
+            }
             provider.setDescription(registrationContextImpl.getDescription());
             provider.setLayer(registrationContextImpl.getMessageLayer());
             for (Entry<String,String> property : registrationContextImpl.getProperties().entrySet()) {

==================================================
TestAuthConfigFactoryImpl.java
index aac640063e..96578ff1e0 100644
--- a/java/org/apache/catalina/authenticator/jaspic/PersistentProviderRegistrations.java
+++ b/java/org/apache/catalina/authenticator/jaspic/PersistentProviderRegistrations.java
@@ -121,12 +121,12 @@ final class PersistentProviderRegistrations {
                     "    xsi:schemaLocation=\"http://tomcat.apache.org/xml jaspic-providers.xsd\"\n" +
                     "    version=\"1.0\">\n");
             for (Provider provider : providers.providers) {
-                writer.write("  <provider className=\"");
-                writer.write(provider.getClassName());
+                writer.write("  <provider");
+                writeOptional("className", provider.getClassName(), writer);
                 writeOptional("layer", provider.getLayer(), writer);
                 writeOptional("appContext", provider.getAppContext(), writer);
                 writeOptional("description", provider.getDescription(), writer);
-                writer.write("\">\n");
+                writer.write(">\n");
                 for (Entry<String,String> entry : provider.getProperties().entrySet()) {
                     writer.write("    <property name=\"");
                     writer.write(entry.getKey());
@@ -169,8 +169,9 @@ final class PersistentProviderRegistrations {
 
     private static void writeOptional(String name, String value, Writer writer) throws IOException {
         if (value != null) {
-            writer.write("\" " + name + "=\"");
+            writer.write(" " + name + "=\"");
             writer.write(value);
+            writer.write("\"");
         }
     }
 

==================================================
