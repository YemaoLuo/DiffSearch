a327c9283bee39060245a5e786f5290ae03e4c02
==================================================
Add the first pass at the Java side plumbing for SNI support with APR/native.
==================================================
Mark Thomas
==================================================
Wed Apr 29 16:59:08 2015 +0000
==================================================
SSLContext.java
Add the first pass at the Java side plumbing for SNI support with APR/native.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1676791 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AprEndpoint.java
index c4dad4043d..e0c7ddde3d 100644
--- a/java/org/apache/tomcat/jni/SSLContext.java
+++ b/java/org/apache/tomcat/jni/SSLContext.java
@@ -17,6 +17,9 @@
 
 package org.apache.tomcat.jni;
 
+import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
+
 /** SSL Context
  *
  * @author Mladen Turk
@@ -289,4 +292,25 @@ public final class SSLContext {
     public static native void setVerify(long ctx, int level, int depth);
 
     public static native int setALPN(long ctx, byte[] proto, int len);
+
+    public static long sniCallback(long defaultCtx, String sniHostName) {
+        SNICallBack sniCallBack = sniCallBacks.get(Long.valueOf(defaultCtx));
+        if (sniCallBack == null) {
+            return 0;
+        }
+        return sniCallBack.getSslContext(sniHostName);
+    }
+
+    private static Map<Long,SNICallBack> sniCallBacks = new ConcurrentHashMap<>();
+    public static void registerDefault(Long defaultSSLContext,
+            SNICallBack sniCallBack) {
+        sniCallBacks.put(defaultSSLContext, sniCallBack);
+    }
+    public static void unregisterDefault(Long ctx) {
+        sniCallBacks.remove(ctx);
+    }
+
+    public static interface SNICallBack {
+        public long getSslContext(String sniHostName);
+    }
 }

==================================================
