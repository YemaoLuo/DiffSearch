b582dc93c5e43e0ab063f7a5bbc625f22d426170
==================================================
Don't duplicate storage of tomcatAuthorization in the Processor
==================================================
Mark Thomas
==================================================
Wed Dec 14 11:06:09 2016 +0000
==================================================
AbstractAjpProtocol.java
Don't duplicate storage of tomcatAuthorization in the Processor

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1774185 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AjpProcessor.java
index a1a6aed4a2..2ef554deb2 100644
--- a/java/org/apache/coyote/ajp/AbstractAjpProtocol.java
+++ b/java/org/apache/coyote/ajp/AbstractAjpProtocol.java
@@ -125,11 +125,14 @@ public abstract class AbstractAjpProtocol<S> extends AbstractProtocol<S> {
     }
 
 
+    private boolean tomcatAuthorization = false;
     /**
      * Should authentication be done in the native web server layer and
      * authorization in the Servlet container?
+     *
+     * @return {@code true} if authorization should be performed by Tomcat,
+     *         otherwise {@code false}
      */
-    private boolean tomcatAuthorization = false;
     public boolean getTomcatAuthorization() { return tomcatAuthorization; }
     public void setTomcatAuthorization(boolean tomcatAuthorization) {
         this.tomcatAuthorization = tomcatAuthorization;
@@ -189,7 +192,6 @@ public abstract class AbstractAjpProtocol<S> extends AbstractProtocol<S> {
     protected Processor createProcessor() {
         AjpProcessor processor = new AjpProcessor(this);
         processor.setAdapter(getAdapter());
-        processor.setTomcatAuthorization(getTomcatAuthorization());
         processor.setRequiredSecret(requiredSecret);
         processor.setKeepAliveTimeout(getKeepAliveTimeout());
         processor.setClientCertProvider(getClientCertProvider());

==================================================
