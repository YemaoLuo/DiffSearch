d7b958c1b68a48b83ec61441d95fd25e3e458e8a
==================================================
Pull up release() to base Protocol class
==================================================
Mark Thomas
==================================================
Thu May 28 09:45:03 2015 +0000
==================================================
AbstractProtocol.java
Pull up release() to base Protocol class

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1682190 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AbstractAjpProtocol.java
index 8f21f92301..fea86ac8b0 100644
--- a/java/org/apache/coyote/AbstractProtocol.java
+++ b/java/org/apache/coyote/AbstractProtocol.java
@@ -859,12 +859,20 @@ public abstract class AbstractProtocol<S> implements ProtocolHandler,
          * @param addToPoller Should the socket be added to the poller for
          *                    reading
          */
-        protected abstract void release(SocketWrapperBase<S> socket,
-                Processor processor, boolean addToPoller);
+        public void release(SocketWrapperBase<S> socket, Processor processor, boolean addToPoller) {
+            processor.recycle();
+            recycledProcessors.push(processor);
+            if (addToPoller) {
+                socket.registerReadInterest();
+            }
+        }
+
+
         protected abstract Processor createUpgradeProcessor(
                 SocketWrapperBase<?> socket, ByteBuffer leftoverInput,
                 HttpUpgradeHandler httpUpgradeHandler) throws IOException;
 
+
         protected void register(AbstractProcessor processor) {
             if (getProtocol().getDomain() != null) {
                 synchronized (this) {

==================================================
AbstractHttp11Protocol.java
index 20ecf117a6..7758502158 100644
--- a/java/org/apache/coyote/ajp/AbstractAjpProtocol.java
+++ b/java/org/apache/coyote/ajp/AbstractAjpProtocol.java
@@ -21,7 +21,6 @@ import java.nio.ByteBuffer;
 import javax.servlet.http.HttpUpgradeHandler;
 
 import org.apache.coyote.AbstractProtocol;
-import org.apache.coyote.Processor;
 import org.apache.coyote.UpgradeProtocol;
 import org.apache.tomcat.util.net.AbstractEndpoint;
 import org.apache.tomcat.util.net.SSLHostConfig;
@@ -175,17 +174,5 @@ public abstract class AbstractAjpProtocol<S> extends AbstractProtocol<S> {
             // TODO should fail - throw IOE
             return null;
         }
-
-
-
-        @Override
-        public void release(SocketWrapperBase<S> socket,
-                Processor processor, boolean addToPoller) {
-            processor.recycle();
-            recycledProcessors.push(processor);
-            if (addToPoller) {
-                socket.registerReadInterest();
-            }
-        }
     }
 }

==================================================
