82a3428af05a71eb88575c7d9d1a9ef7ddd44089
==================================================
Remove the distinction between internal and external write registration to avoid multiple write registrations.
==================================================
Mark Thomas
==================================================
Tue Feb 3 09:14:50 2015 +0000
==================================================
OutputBuffer.java
Remove the distinction between internal and external write registration to avoid multiple write registrations.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1656650 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Response.java
index 69fd7bee64..765e81652f 100644
--- a/java/org/apache/catalina/connector/OutputBuffer.java
+++ b/java/org/apache/catalina/connector/OutputBuffer.java
@@ -673,6 +673,6 @@ public class OutputBuffer extends Writer
     }
 
     public void checkRegisterForWrite() {
-        coyoteResponse.checkRegisterForWrite(true);
+        coyoteResponse.checkRegisterForWrite();
     }
 }

==================================================
AjpProcessor.java
index 8d1a1b38a9..0056ede289 100644
--- a/java/org/apache/coyote/Response.java
+++ b/java/org/apache/coyote/Response.java
@@ -607,16 +607,16 @@ public final class Response {
                 fireListener = true;
                 return false;
             }
-            ready = checkRegisterForWrite(false);
+            ready = checkRegisterForWrite();
             fireListener = !ready;
         }
         return ready;
     }
 
-    public boolean checkRegisterForWrite(boolean internal) {
+    public boolean checkRegisterForWrite() {
         AtomicBoolean ready = new AtomicBoolean(false);
         synchronized (nonBlockingStateLock) {
-            if (!registeredForWrite || internal) {
+            if (!registeredForWrite) {
                 action(ActionCode.NB_WRITE_INTEREST, ready);
                 registeredForWrite = !ready.get();
             }

==================================================
Http11Processor.java
index 5dc8a617fb..54ac56720b 100644
--- a/java/org/apache/coyote/ajp/AjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpProcessor.java
@@ -617,7 +617,7 @@ public class AjpProcessor extends AbstractProcessor {
                         if (hasDataToWrite()) {
                             // There is data to write but go via Response to
                             // maintain a consistent view of non-blocking state
-                            response.checkRegisterForWrite(true);
+                            response.checkRegisterForWrite();
                             return SocketState.LONG;
                         }
                     }

==================================================
