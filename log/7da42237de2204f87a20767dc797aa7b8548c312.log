7da42237de2204f87a20767dc797aa7b8548c312
==================================================
kkolinko review on i1642564 and 1642595:
==================================================
Rainer Jung
==================================================
Sun Nov 30 21:37:27 2014 +0000
==================================================
RemoteAddrValve.java
kkolinko review on i1642564 and 1642595:

- addLocalPort => addConnectorPort
- separator "," => ";"
- expose addConnectorPort and invalidAuthenticationWhenDeny
  via JMX
- add complete example to docs

Bonus: replace deprecated request.setContext() in unit test.


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1642606 13f79535-47bb-0310-9956-ffa450edef68



==================================================
RemoteHostValve.java
index 10befe58fc..a919bdb38b 100644
--- a/java/org/apache/catalina/valves/RemoteAddrValve.java
+++ b/java/org/apache/catalina/valves/RemoteAddrValve.java
@@ -28,7 +28,7 @@ import org.apache.catalina.connector.Response;
 /**
  * Concrete implementation of <code>RequestFilterValve</code> that filters
  * based on the string representation of the remote client's IP address
- * optionally combined with the server port number.
+ * optionally combined with the server connector port number.
  *
  * @author Craig R. McClanahan
  */
@@ -37,34 +37,34 @@ public final class RemoteAddrValve extends RequestFilterValve {
     // ----------------------------------------------------- Instance Variables
 
     /**
-     * Flag deciding whether we add the server port to the property
+     * Flag deciding whether we add the server connector port to the property
      * compared in the filtering method. The port will be appended
-     * using a "," as a separator.
+     * using a ";" as a separator.
      */
-    protected volatile boolean addLocalPort = false;
+    protected volatile boolean addConnectorPort = false;
 
     // ------------------------------------------------------------- Properties
 
 
     /**
-     * Get the flag deciding whether we add the server port to the
+     * Get the flag deciding whether we add the server connector port to the
      * property compared in the filtering method. The port will be appended
-     * using a "," as a separator.
+     * using a ";" as a separator.
      */
-    public boolean getAddLocalPort() {
-        return addLocalPort;
+    public boolean getAddConnectorPort() {
+        return addConnectorPort;
     }
 
 
     /**
-     * Set the flag deciding whether we add the server port to the
+     * Set the flag deciding whether we add the server connector port to the
      * property compared in the filtering method. The port will be appended
-     * using a "," as a separator.
+     * using a ";" as a separator.
      *
-     * @param addLocalPort The new flag
+     * @param addConnectorPort The new flag
      */
-    public void setAddLocalPort(boolean addLocalPort) {
-        this.addLocalPort = addLocalPort;
+    public void setAddConnectorPort(boolean addConnectorPort) {
+        this.addConnectorPort = addConnectorPort;
     }
 
 
@@ -87,8 +87,8 @@ public final class RemoteAddrValve extends RequestFilterValve {
         throws IOException, ServletException {
 
         String property;
-        if (addLocalPort) {
-            property = request.getRequest().getRemoteAddr() + "," + request.getConnector().getPort();
+        if (addConnectorPort) {
+            property = request.getRequest().getRemoteAddr() + ";" + request.getConnector().getPort();
         } else {
             property = request.getRequest().getRemoteAddr();
         }

==================================================
TestRequestFilterValve.java
index c914eb2566..975e1c1da4 100644
--- a/java/org/apache/catalina/valves/mbeans-descriptors.xml
+++ b/java/org/apache/catalina/valves/mbeans-descriptors.xml
@@ -329,11 +329,16 @@
   </mbean>
 
   <mbean name="RemoteAddrValve"
-         description="Concrete implementation of RequestFilterValve that  filters based on the string representation of the remote client's IP address"
+         description="Concrete implementation of RequestFilterValve that filters based on the string representation of the remote client's IP address"
          domain="Catalina"
          group="Valve"
          type="org.apache.catalina.valves.RemoteAddrValve">
 
+    <attribute name="addConnectorPort"
+               description="Append the server connector port to the client IP separated by a semicolon"
+               is="true"
+               type="boolean"/>
+
     <attribute name="allow"
                description="The allow expression"
                type="java.lang.String"/>
@@ -349,12 +354,12 @@
                is="true"
                type="boolean"/>
 
-    <attribute   name="className"
+    <attribute name="className"
                description="Fully qualified class name of the managed object"
                type="java.lang.String"
                writeable="false"/>
 
-    <attribute   name="deny"
+    <attribute name="deny"
                description="The deny expression"
                type="java.lang.String"/>
 
@@ -368,6 +373,11 @@
                type="boolean"
                writeable="false"/>
 
+    <attribute name="invalidAuthenticationWhenDeny"
+               description="Send an invalid authentication header instead of deny"
+               is="true"
+               type="boolean"/>
+
     <attribute name="stateName"
                description="The name of the LifecycleState that this component is currently in"
                type="java.lang.String"
@@ -389,6 +399,11 @@
          group="Valve"
          type="org.apache.catalina.valves.RemoteHostValve">
 
+    <attribute name="addConnectorPort"
+               description="Append the server connector port to the client IP separated by a semicolon"
+               is="true"
+               type="boolean"/>
+
     <attribute name="allow"
                description="The allow expression"
                type="java.lang.String"/>
@@ -404,12 +419,12 @@
                is="true"
                type="boolean"/>
 
-    <attribute   name="className"
+    <attribute name="className"
                description="Fully qualified class name of the managed object"
                type="java.lang.String"
                writeable="false"/>
 
-    <attribute   name="deny"
+    <attribute name="deny"
                description="The deny expression"
                type="java.lang.String"/>
 
@@ -423,6 +438,11 @@
                type="boolean"
                writeable="false"/>
 
+    <attribute name="invalidAuthenticationWhenDeny"
+               description="Send an invalid authentication header instead of deny"
+               is="true"
+               type="boolean"/>
+
     <attribute name="stateName"
                description="The name of the LifecycleState that this component is currently in"
                type="java.lang.String"

==================================================
