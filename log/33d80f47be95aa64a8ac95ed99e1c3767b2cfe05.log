33d80f47be95aa64a8ac95ed99e1c3767b2cfe05
==================================================
Remove use of JreCompat as it is not required with Java 11+
==================================================
Mark Thomas
==================================================
Wed Jul 28 13:56:10 2021 +0100
==================================================
AbstractInputStreamJar.java
Remove use of JreCompat as it is not required with Java 11+


==================================================
JarFileUrlJar.java
index dde02dbb30..148f57ab58 100644
--- a/java/org/apache/tomcat/util/scan/AbstractInputStreamJar.java
+++ b/java/org/apache/tomcat/util/scan/AbstractInputStreamJar.java
@@ -26,7 +26,6 @@ import java.util.jar.JarEntry;
 import java.util.jar.Manifest;
 
 import org.apache.tomcat.Jar;
-import org.apache.tomcat.util.compat.JreCompat;
 
 /**
  * Base implementation of Jar for implementations that use a JarInputStream to
@@ -161,20 +160,16 @@ public abstract class AbstractInputStreamJar implements Jar {
         jarInputStream = createJarInputStream();
         // Only perform multi-release processing on first access
         if (multiRelease == null) {
-            if (JreCompat.isJre9Available()) {
-                Manifest manifest = jarInputStream.getManifest();
-                if (manifest == null) {
+            Manifest manifest = jarInputStream.getManifest();
+            if (manifest == null) {
+                multiRelease = Boolean.FALSE;
+            } else {
+                String mrValue = manifest.getMainAttributes().getValue("Multi-Release");
+                if (mrValue == null) {
                     multiRelease = Boolean.FALSE;
                 } else {
-                    String mrValue = manifest.getMainAttributes().getValue("Multi-Release");
-                    if (mrValue == null) {
-                        multiRelease = Boolean.FALSE;
-                    } else {
-                        multiRelease = Boolean.valueOf(mrValue);
-                    }
+                    multiRelease = Boolean.valueOf(mrValue);
                 }
-            } else {
-                multiRelease = Boolean.FALSE;
             }
             if (multiRelease.booleanValue()) {
                 if (mrMap == null) {
@@ -236,7 +231,7 @@ public abstract class AbstractInputStreamJar implements Jar {
 
 
     private void populateMrMap() throws IOException {
-        int targetVersion = JreCompat.getInstance().jarFileRuntimeMajorVersion();
+        int targetVersion = Runtime.version().feature();
 
         Map<String,Integer> mrVersions = new HashMap<>();
 

==================================================
