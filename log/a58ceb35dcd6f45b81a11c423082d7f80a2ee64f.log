a58ceb35dcd6f45b81a11c423082d7f80a2ee64f
==================================================
Pull up the utility transfer methods
==================================================
Mark Thomas
==================================================
Thu Jan 1 17:13:59 2015 +0000
==================================================
AbstractOutputBuffer.java
Pull up the utility transfer methods

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1648899 13f79535-47bb-0310-9956-ffa450edef68



==================================================
InternalAprOutputBuffer.java
index 65335fd6bd..36fd6e4964 100644
--- a/java/org/apache/coyote/http11/AbstractOutputBuffer.java
+++ b/java/org/apache/coyote/http11/AbstractOutputBuffer.java
@@ -640,4 +640,22 @@ public abstract class AbstractOutputBuffer<S> implements OutputBuffer {
         }
         return result;
     }
+
+
+    // --------------------------------------------------------- Utility methods
+
+    protected static int transfer(byte[] from, int offset, int length, ByteBuffer to) {
+        int max = Math.min(length, to.remaining());
+        to.put(from, offset, max);
+        return max;
+    }
+
+
+    protected static void transfer(ByteBuffer from, ByteBuffer to) {
+        int max = Math.min(from.remaining(), to.remaining());
+        int fromLimit = from.limit();
+        from.limit(from.position() + max);
+        to.put(from);
+        from.limit(fromLimit);
+    }
 }

==================================================
InternalNio2OutputBuffer.java
index 8ea6d59b47..2e85e46201 100644
--- a/java/org/apache/coyote/http11/InternalAprOutputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalAprOutputBuffer.java
@@ -284,15 +284,6 @@ public class InternalAprOutputBuffer extends AbstractOutputBuffer<Long> {
     }
 
 
-    private void transfer(ByteBuffer from, ByteBuffer to) {
-        int max = Math.min(from.remaining(), to.remaining());
-        int fromLimit = from.limit();
-        from.limit(from.position() + max);
-        to.put(from);
-        from.limit(fromLimit);
-    }
-
-
     //-------------------------------------------------- Non-blocking IO methods
 
     @Override

==================================================
InternalNioOutputBuffer.java
index b706841577..0fd2abeaa1 100644
--- a/java/org/apache/coyote/http11/InternalNio2OutputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalNio2OutputBuffer.java
@@ -334,13 +334,6 @@ public class InternalNio2OutputBuffer extends AbstractOutputBuffer<Nio2Channel>
     }
 
 
-    private int transfer(byte[] from, int offset, int length, ByteBuffer to) {
-        int max = Math.min(length, to.remaining());
-        to.put(from, offset, max);
-        return max;
-    }
-
-
     /**
      * Callback to write data from the buffer.
      */

==================================================
