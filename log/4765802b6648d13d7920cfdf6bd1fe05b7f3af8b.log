4765802b6648d13d7920cfdf6bd1fe05b7f3af8b
==================================================
Remove unnecessary "x != null" tests before "x instanceof ..." tests
==================================================
Mark Thomas
==================================================
Sun Dec 14 12:32:22 2014 +0000
==================================================
ContainerBase.java
Remove unnecessary "x != null" tests before "x instanceof ..." tests

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1645449 13f79535-47bb-0310-9956-ffa450edef68



==================================================
StandardContext.java
index b808dde4f6..917fcdd5cf 100644
--- a/java/org/apache/catalina/core/ContainerBase.java
+++ b/java/org/apache/catalina/core/ContainerBase.java
@@ -893,11 +893,13 @@ public abstract class ContainerBase extends LifecycleMBeanBase
         logger = null;
         getLogger();
         Cluster cluster = getClusterInternal();
-        if ((cluster != null) && (cluster instanceof Lifecycle))
+        if (cluster instanceof Lifecycle) {
             ((Lifecycle) cluster).start();
+        }
         Realm realm = getRealmInternal();
-        if ((realm != null) && (realm instanceof Lifecycle))
+        if (realm instanceof Lifecycle) {
             ((Lifecycle) realm).start();
+        }
 
         // Start our child containers, if any
         Container children[] = findChildren();
@@ -978,11 +980,11 @@ public abstract class ContainerBase extends LifecycleMBeanBase
 
         // Stop our subordinate components, if any
         Realm realm = getRealmInternal();
-        if ((realm != null) && (realm instanceof Lifecycle)) {
+        if (realm instanceof Lifecycle) {
             ((Lifecycle) realm).stop();
         }
         Cluster cluster = getClusterInternal();
-        if ((cluster != null) && (cluster instanceof Lifecycle)) {
+        if (cluster instanceof Lifecycle) {
             ((Lifecycle) cluster).stop();
         }
     }
@@ -991,11 +993,11 @@ public abstract class ContainerBase extends LifecycleMBeanBase
     protected void destroyInternal() throws LifecycleException {
 
         Realm realm = getRealmInternal();
-        if ((realm != null) && (realm instanceof Lifecycle)) {
+        if (realm instanceof Lifecycle) {
             ((Lifecycle) realm).destroy();
         }
         Cluster cluster = getClusterInternal();
-        if ((cluster != null) && (cluster instanceof Lifecycle)) {
+        if (cluster instanceof Lifecycle) {
             ((Lifecycle) cluster).destroy();
         }
 

==================================================
StandardService.java
index a5c37ae99f..5404987b1d 100644
--- a/java/org/apache/catalina/core/StandardContext.java
+++ b/java/org/apache/catalina/core/StandardContext.java
@@ -4996,8 +4996,9 @@ public class StandardContext extends ContainerBase
             if (ok) {
                 // Start our subordinate components, if any
                 Loader loader = getLoader();
-                if ((loader != null) && (loader instanceof Lifecycle))
+                if (loader instanceof Lifecycle) {
                     ((Lifecycle) loader).start();
+                }
 
                 // since the loader just started, the webapp classloader is now
                 // created.
@@ -5021,11 +5022,13 @@ public class StandardContext extends ContainerBase
                 getLogger();
 
                 Cluster cluster = getClusterInternal();
-                if ((cluster != null) && (cluster instanceof Lifecycle))
+                if (cluster instanceof Lifecycle) {
                     ((Lifecycle) cluster).start();
+                }
                 Realm realm = getRealmInternal();
-                if ((realm != null) && (realm instanceof Lifecycle))
+                if (realm instanceof Lifecycle) {
                     ((Lifecycle) realm).start();
+                }
 
                 // Notify our interested LifecycleListeners
                 fireLifecycleEvent(Lifecycle.CONFIGURE_START_EVENT, null);
@@ -5145,7 +5148,7 @@ public class StandardContext extends ContainerBase
             try {
                 // Start manager
                 Manager manager = getManager();
-                if ((manager != null) && (manager instanceof Lifecycle)) {
+                if (manager instanceof Lifecycle) {
                     ((Lifecycle) manager).start();
                 }
             } catch(Exception e) {
@@ -5340,8 +5343,7 @@ public class StandardContext extends ContainerBase
             filterStop();
 
             Manager manager = getManager();
-            if (manager != null && manager instanceof Lifecycle &&
-                    ((Lifecycle) manager).getState().isAvailable()) {
+            if (manager instanceof Lifecycle && ((Lifecycle) manager).getState().isAvailable()) {
                 ((Lifecycle) manager).stop();
             }
 
@@ -5376,15 +5378,15 @@ public class StandardContext extends ContainerBase
                 context.clearAttributes();
 
             Realm realm = getRealmInternal();
-            if ((realm != null) && (realm instanceof Lifecycle)) {
+            if (realm instanceof Lifecycle) {
                 ((Lifecycle) realm).stop();
             }
             Cluster cluster = getClusterInternal();
-            if ((cluster != null) && (cluster instanceof Lifecycle)) {
+            if (cluster instanceof Lifecycle) {
                 ((Lifecycle) cluster).stop();
             }
             Loader loader = getLoader();
-            if ((loader != null) && (loader instanceof Lifecycle)) {
+            if (loader instanceof Lifecycle) {
                 ((Lifecycle) loader).stop();
             }
 
@@ -5458,12 +5460,12 @@ public class StandardContext extends ContainerBase
         }
 
         Loader loader = getLoader();
-        if ((loader != null) && (loader instanceof Lifecycle)) {
+        if (loader instanceof Lifecycle) {
             ((Lifecycle) loader).destroy();
         }
 
         Manager manager = getManager();
-        if ((manager != null) && (manager instanceof Lifecycle)) {
+        if (manager instanceof Lifecycle) {
             ((Lifecycle) manager).destroy();
         }
 

==================================================
StandardWrapper.java
index 1926ebbb41..734e976eab 100644
--- a/java/org/apache/catalina/core/StandardService.java
+++ b/java/org/apache/catalina/core/StandardService.java
@@ -139,11 +139,13 @@ public class StandardService extends LifecycleMBeanBase implements Service {
     public void setContainer(Container container) {
 
         Container oldContainer = this.container;
-        if ((oldContainer != null) && (oldContainer instanceof Engine))
+        if (oldContainer instanceof Engine) {
             ((Engine) oldContainer).setService(null);
+        }
         this.container = container;
-        if ((this.container != null) && (this.container instanceof Engine))
+        if (this.container instanceof Engine) {
             ((Engine) this.container).setService(this);
+        }
         if (getState().isAvailable() && (this.container != null)) {
             try {
                 this.container.start();

==================================================
StandardWrapperFacade.java
index e26febcd74..784cd79b41 100644
--- a/java/org/apache/catalina/core/StandardWrapper.java
+++ b/java/org/apache/catalina/core/StandardWrapper.java
@@ -665,7 +665,7 @@ public class StandardWrapper extends ContainerBase
         if (!getState().isAvailable())
             return;
 
-        if (getServlet() != null && (getServlet() instanceof PeriodicEventListener)) {
+        if (getServlet() instanceof PeriodicEventListener) {
             ((PeriodicEventListener) getServlet()).periodicEvent();
         }
     }

==================================================
ClusterSingleSignOn.java
index 4ef64c0a3e..fc0691a197 100644
--- a/java/org/apache/catalina/core/StandardWrapperFacade.java
+++ b/java/org/apache/catalina/core/StandardWrapperFacade.java
@@ -76,8 +76,9 @@ public final class StandardWrapperFacade
     public ServletContext getServletContext() {
         if (context == null) {
             context = config.getServletContext();
-            if ((context != null) && (context instanceof ApplicationContext))
+            if (context instanceof ApplicationContext) {
                 context = ((ApplicationContext) context).getFacade();
+            }
         }
         return (context);
     }

==================================================
ClusterSingleSignOnListener.java
index b2781c4182..68d92b8125 100644
--- a/java/org/apache/catalina/ha/authenticator/ClusterSingleSignOn.java
+++ b/java/org/apache/catalina/ha/authenticator/ClusterSingleSignOn.java
@@ -96,16 +96,16 @@ public class ClusterSingleSignOn extends SingleSignOn {
             // stop remove cluster binding
             if(cluster == null) {
                 Container host = getContainer();
-                if(host != null && host instanceof Host) {
+                if(host instanceof Host) {
                     cluster = host.getCluster();
-                    if(cluster != null && cluster instanceof CatalinaCluster) {
+                    if(cluster instanceof CatalinaCluster) {
                         setCluster((CatalinaCluster) cluster);
                         getCluster().addClusterListener(clusterSSOListener);
                     } else {
                         Container engine = host.getParent();
-                        if(engine != null && engine instanceof Engine) {
+                        if(engine instanceof Engine) {
                             cluster = engine.getCluster();
-                            if(cluster != null && cluster instanceof CatalinaCluster) {
+                            if(cluster instanceof CatalinaCluster) {
                                 setCluster((CatalinaCluster) cluster);
                                 getCluster().addClusterListener(clusterSSOListener);
                             }
@@ -168,7 +168,7 @@ public class ClusterSingleSignOn extends SingleSignOn {
                 new SingleSignOnMessage(cluster.getLocalMember(),
                                         ssoId, session.getId());
             Manager mgr = session.getManager();
-            if ((mgr != null) && (mgr instanceof ClusterManager)) {
+            if (mgr instanceof ClusterManager) {
                 msg.setContextName(((ClusterManager) mgr).getName());
             }
 
@@ -210,7 +210,7 @@ public class ClusterSingleSignOn extends SingleSignOn {
                 new SingleSignOnMessage(cluster.getLocalMember(),
                                         ssoId, session.getId());
             Manager mgr = session.getManager();
-            if ((mgr != null) && (mgr instanceof ClusterManager)) {
+            if (mgr instanceof ClusterManager) {
                 msg.setContextName(((ClusterManager) mgr).getName());
             }
 
@@ -401,7 +401,7 @@ public class ClusterSingleSignOn extends SingleSignOn {
                                         ssoId, session.getId());
 
             Manager mgr = session.getManager();
-            if ((mgr != null) && (mgr instanceof ClusterManager)) {
+            if (mgr instanceof ClusterManager) {
                 msg.setContextName(((ClusterManager) mgr).getName());
             }
 

==================================================
ReplicatedContext.java
index fb597a2aea..a87f196a10 100644
--- a/java/org/apache/catalina/ha/authenticator/ClusterSingleSignOnListener.java
+++ b/java/org/apache/catalina/ha/authenticator/ClusterSingleSignOnListener.java
@@ -58,7 +58,7 @@ public class ClusterSingleSignOnListener extends ClusterListener {
      */
     @Override
     public void messageReceived(ClusterMessage myobj) {
-        if (myobj != null && myobj instanceof SingleSignOnMessage) {
+        if (myobj instanceof SingleSignOnMessage) {
             SingleSignOnMessage msg = (SingleSignOnMessage) myobj;
             int action = msg.getAction();
             Session session = null;

==================================================
BackupManager.java
index fb1b9b6447..39627d85c5 100644
--- a/java/org/apache/catalina/ha/context/ReplicatedContext.java
+++ b/java/org/apache/catalina/ha/context/ReplicatedContext.java
@@ -87,7 +87,7 @@ public class ReplicatedContext extends StandardContext implements MapOwner {
 
         Map<String,Object> map =
                 ((ReplApplContext)this.context).getAttributeMap();
-        if ( map!=null && map instanceof ReplicatedMap) {
+        if (map instanceof ReplicatedMap) {
             ((ReplicatedMap<?,?>)map).breakdown();
         }
     }

==================================================
ClusterSessionListener.java
index 5c543beb81..cb4b772bff 100644
--- a/java/org/apache/catalina/ha/session/BackupManager.java
+++ b/java/org/apache/catalina/ha/session/BackupManager.java
@@ -100,7 +100,7 @@ public class BackupManager extends ClusterManagerBase
 //=========================================================================
     @Override
     public void objectMadePrimary(Object key, Object value) {
-        if (value!=null && value instanceof DeltaSession) {
+        if (value instanceof DeltaSession) {
             DeltaSession session = (DeltaSession)value;
             synchronized (session) {
                 session.access();

==================================================
DeltaManager.java
index 65b3eeae41..c3cfccf0b4 100644
--- a/java/org/apache/catalina/ha/session/ClusterSessionListener.java
+++ b/java/org/apache/catalina/ha/session/ClusterSessionListener.java
@@ -51,7 +51,7 @@ public class ClusterSessionListener extends ClusterListener {
      */
     @Override
     public void messageReceived(ClusterMessage myobj) {
-        if (myobj != null && myobj instanceof SessionMessage) {
+        if (myobj instanceof SessionMessage) {
             SessionMessage msg = (SessionMessage) myobj;
             String ctxname = msg.getContextName();
             //check if the message is a EVT_GET_ALL_SESSIONS,

==================================================
SimpleTcpCluster.java
index 9aba9f7a8f..95c9e2adba 100644
--- a/java/org/apache/catalina/ha/session/DeltaManager.java
+++ b/java/org/apache/catalina/ha/session/DeltaManager.java
@@ -924,7 +924,7 @@ public class DeltaManager extends ClusterManagerBase{
      */
     @Override
     public void messageDataReceived(ClusterMessage cmsg) {
-        if (cmsg != null && cmsg instanceof SessionMessage) {
+        if (cmsg instanceof SessionMessage) {
             SessionMessage msg = (SessionMessage) cmsg;
             switch (msg.getEventType()) {
                 case SessionMessage.EVT_GET_ALL_SESSIONS:

==================================================
SessionUtils.java
index 1299de8ccc..b48ff60913 100644
--- a/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java
+++ b/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java
@@ -441,7 +441,7 @@ public class SimpleTcpCluster extends LifecycleMBeanBase
      */
     @Override
     public void removeManager(Manager manager) {
-        if (manager != null && manager instanceof ClusterManager ) {
+        if (manager instanceof ClusterManager) {
             ClusterManager cmgr = (ClusterManager) manager;
             // Notify our interested LifecycleListeners
             fireLifecycleEvent(BEFORE_MANAGERUNREGISTER_EVENT,manager);
@@ -465,7 +465,7 @@ public class SimpleTcpCluster extends LifecycleMBeanBase
             Context context = manager.getContext() ;
             if(context != null) {
                 Container host = context.getParent();
-                if(host != null && host instanceof Host && clusterName!=null &&
+                if(host instanceof Host && clusterName!=null &&
                         !(clusterName.startsWith(host.getName() +"#"))) {
                     clusterName = host.getName() +"#" + clusterName ;
                 }

==================================================
PersistentManagerBase.java
index aee4af3e97..121c4df69a 100644
--- a/java/org/apache/catalina/manager/util/SessionUtils.java
+++ b/java/org/apache/catalina/manager/util/SessionUtils.java
@@ -87,17 +87,17 @@ public class SessionUtils {
             // First search "known locations"
             for (int i = 0; i < LOCALE_TEST_ATTRIBUTES.length; ++i) {
                 Object obj = in_session.getAttribute(LOCALE_TEST_ATTRIBUTES[i]);
-                if (null != obj && obj instanceof Locale) {
+                if (obj instanceof Locale) {
                     locale = (Locale) obj;
                     break;
                 }
                 obj = in_session.getAttribute(LOCALE_TEST_ATTRIBUTES[i].toLowerCase(Locale.ENGLISH));
-                if (null != obj && obj instanceof Locale) {
+                if (obj instanceof Locale) {
                     locale = (Locale) obj;
                     break;
                 }
                 obj = in_session.getAttribute(LOCALE_TEST_ATTRIBUTES[i].toUpperCase(Locale.ENGLISH));
-                if (null != obj && obj instanceof Locale) {
+                if (obj instanceof Locale) {
                     locale = (Locale) obj;
                     break;
                 }
@@ -125,7 +125,7 @@ public class SessionUtils {
                         if (null != readMethod) {
                             // Call the property getter and return the value
                             Object possibleLocale = readMethod.invoke(probableEngine, (Object[]) null);
-                            if (null != possibleLocale && possibleLocale instanceof Locale) {
+                            if (possibleLocale instanceof Locale) {
                                 locale = (Locale) possibleLocale;
                             }
                         }
@@ -148,7 +148,7 @@ public class SessionUtils {
             for (Enumeration<String> enumeration = in_session.getAttributeNames(); enumeration.hasMoreElements();) {
                 String name = enumeration.nextElement();
                 Object obj = in_session.getAttribute(name);
-                if (null != obj && obj instanceof Locale) {
+                if (obj instanceof Locale) {
                     localeArray.add(obj);
                 }
             }
@@ -210,7 +210,7 @@ public class SessionUtils {
             for (Enumeration<String> enumeration = httpSession.getAttributeNames(); enumeration.hasMoreElements();) {
                 String name = enumeration.nextElement();
                 Object obj = httpSession.getAttribute(name);
-                if (null != obj && (obj instanceof Principal || obj instanceof Subject)) {
+                if (obj instanceof Principal || obj instanceof Subject) {
                     principalArray.add(obj);
                 }
             }

==================================================
StandardContextSF.java
index 10cc8028e7..ed48c3c5a4 100644
--- a/java/org/apache/catalina/session/PersistentManagerBase.java
+++ b/java/org/apache/catalina/session/PersistentManagerBase.java
@@ -424,7 +424,7 @@ public abstract class PersistentManagerBase extends ManagerBase
             }
         }
         processPersistenceChecks();
-        if ((getStore() != null) && (getStore() instanceof StoreBase)) {
+        if (getStore() instanceof StoreBase) {
             ((StoreBase) getStore()).processExpires();
         }
 
@@ -875,8 +875,9 @@ public abstract class PersistentManagerBase extends ManagerBase
             }
         }
 
-        if (getStore() != null && getStore() instanceof Lifecycle)
+        if (getStore() instanceof Lifecycle) {
             ((Lifecycle)getStore()).stop();
+        }
 
         // Require a new random number generator if we are restarted
         super.stopInternal();

==================================================
AbstractReplicatedMap.java
index 5926286df9..fb73930b1a 100644
--- a/java/org/apache/catalina/storeconfig/StandardContextSF.java
+++ b/java/org/apache/catalina/storeconfig/StandardContextSF.java
@@ -315,9 +315,9 @@ public class StandardContextSF extends StoreFactoryBase {
         File file = new File(System.getProperty("catalina.base"), "conf");
         Container host = context.getParent();
 
-        if ((host != null) && (host instanceof Host)) {
+        if (host instanceof Host) {
             Container engine = host.getParent();
-            if ((engine != null) && (engine instanceof Engine)) {
+            if (engine instanceof Engine) {
                 file = new File(file, engine.getName());
             }
             file = new File(file, host.getName());

==================================================
JspServletWrapper.java
index 8f2503aeac..8467f41d8c 100644
--- a/java/org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java
+++ b/java/org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java
@@ -648,7 +648,7 @@ public abstract class AbstractReplicatedMap<K,V>
                 entry.setProxy(false);
                 entry.setBackupNodes(mapmsg.getBackupNodes());
                 entry.setPrimary(mapmsg.getPrimary());
-                if (mapmsg.getValue()!=null && mapmsg.getValue() instanceof ReplicatedMapEntry ) {
+                if (mapmsg.getValue() instanceof ReplicatedMapEntry ) {
                     ((ReplicatedMapEntry)mapmsg.getValue()).setOwner(getMapOwner());
                 }
             } else {
@@ -925,7 +925,7 @@ public abstract class AbstractReplicatedMap<K,V>
                     if ( dest!=null && dest.length >0) {
                         getChannel().send(dest, msg, getChannelSendOptions());
                     }
-                    if ( entry.getValue() != null && entry.getValue() instanceof ReplicatedMapEntry ) {
+                    if (entry.getValue() instanceof ReplicatedMapEntry) {
                         ReplicatedMapEntry val = (ReplicatedMapEntry)entry.getValue();
                         val.setOwner(getMapOwner());
                     }
@@ -1164,7 +1164,7 @@ public abstract class AbstractReplicatedMap<K,V>
         }
 
         public boolean isValueSerializable() {
-            return (value==null) || (value instanceof Serializable);
+            return (value == null) || (value instanceof Serializable);
         }
 
         public boolean isSerializable() {

==================================================
Nio2Endpoint.java
index 2e4176ed30..551d320123 100644
--- a/java/org/apache/jasper/servlet/JspServletWrapper.java
+++ b/java/org/apache/jasper/servlet/JspServletWrapper.java
@@ -286,7 +286,7 @@ public class JspServletWrapper {
             } else {
                 target = getServlet();
             }
-            if (target != null && target instanceof JspSourceDependent) {
+            if (target instanceof JspSourceDependent) {
                 return ((JspSourceDependent) target).getDependants();
             }
         } catch (AbstractMethodError ame) {

==================================================
TestSwallowAbortedUploads.java
index 5d46b122fd..5918257499 100644
--- a/java/org/apache/tomcat/util/net/Nio2Endpoint.java
+++ b/java/org/apache/tomcat/util/net/Nio2Endpoint.java
@@ -182,7 +182,7 @@ public class Nio2Endpoint extends AbstractEndpoint<Nio2Channel> {
         } else {
             try {
                 SocketAddress sa = ssc.getLocalAddress();
-                if (sa != null && sa instanceof InetSocketAddress) {
+                if (sa instanceof InetSocketAddress) {
                     return ((InetSocketAddress) sa).getPort();
                 } else {
                     return -1;

==================================================
