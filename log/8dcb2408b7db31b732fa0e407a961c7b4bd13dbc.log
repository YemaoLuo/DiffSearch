8dcb2408b7db31b732fa0e407a961c7b4bd13dbc
==================================================
Correct close down, now the close can be limited to 2 files if it needs to change
==================================================
Filip Hanik
==================================================
Fri Aug 4 21:52:51 2006 +0000
==================================================
InternalNioInputBuffer.java
Correct close down, now the close can be limited to 2 files if it needs to change


git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk@428896 13f79535-47bb-0310-9956-ffa450edef68



==================================================
NioChannel.java
index 247b128dba..d11cb5d2c1 100644
--- a/java/org/apache/coyote/http11/InternalNioInputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalNioInputBuffer.java
@@ -588,13 +588,12 @@ public class InternalNioInputBuffer implements InputBuffer {
                     if (key != null) key.interestOps(SelectionKey.OP_READ);
                 } catch (CancelledKeyException ckx) {
                     try {
-                        if ( key != null && key.attachment() != null ) {
-                            KeyAttachment ka = (KeyAttachment)key.attachment();
-                            ka.setError(true); //set to collect this socket immediately
+                        if ( att != null ) {
+                            att.setError(true); //set to collect this socket immediately
+                            att.setWakeUp(false);
                         }
-                        socket.getIOChannel().socket().close();
-                        socket.close();
-                        att.setWakeUp(false);
+                        try {socket.close();}catch (Exception ignore){}
+                        if ( socket.isOpen() ) socket.close(true);
                     } catch (Exception ignore) {}
                 }
             }

==================================================
NioEndpoint.java
index 5360ffe7f7..2036c87564 100644
--- a/java/org/apache/tomcat/util/net/NioChannel.java
+++ b/java/org/apache/tomcat/util/net/NioChannel.java
@@ -51,11 +51,12 @@ public class NioChannel implements ByteChannel{
      * @todo Implement this java.nio.channels.Channel method
      */
     public void close() throws IOException {
+        getIOChannel().socket().close();
         sc.close();
     }
 
     public void close(boolean force) throws IOException {
-        close();
+        if (isOpen() || force ) close();
     }
     /**
      * Tells whether or not this channel is open.

==================================================
SecureNioChannel.java
index 38894abd18..f3eaaa5700 100644
--- a/java/org/apache/tomcat/util/net/NioEndpoint.java
+++ b/java/org/apache/tomcat/util/net/NioEndpoint.java
@@ -937,8 +937,8 @@ public class NioEndpoint {
                                 KeyAttachment ka = (KeyAttachment)key.attachment();
                                 ka.setError(true); //set to collect this socket immediately
                             }
-                            socket.getIOChannel().socket().close();
-                            socket.close();
+                            try {socket.close();}catch (Exception ignore){}
+                            if ( socket.isOpen() ) socket.close(true);
                         } catch ( Exception ignore ) {}
                     }
                 }
@@ -1259,16 +1259,16 @@ public class NioEndpoint {
                     if ((event) && (handler.event(socket, error) == Handler.SocketState.CLOSED)) {
                         // Close socket and pool
                         try {
-                            socket.getIOChannel().socket().close();
-                            socket.close();
+                            try {socket.close();}catch (Exception ignore){}
+                            if ( socket.isOpen() ) socket.close(true);
                         }catch ( Exception x ) {
                             log.error("",x);
                         }
                     } else if ((!event) && (handler.process(socket) == Handler.SocketState.CLOSED)) {
                         // Close socket and pool
                         try {
-                            socket.getIOChannel().socket().close();
-                            socket.close();
+                            try {socket.close();}catch (Exception ignore){}
+                            if ( socket.isOpen() ) socket.close(true);
                         }catch ( Exception x ) {
                             log.error("",x);
                         }
@@ -1431,8 +1431,8 @@ public class NioEndpoint {
             if (handler.process(socket) == Handler.SocketState.CLOSED) {
                 // Close socket and pool
                 try {
-                    socket.getIOChannel().socket().close();
-                    socket.close();
+                    try {socket.close();}catch (Exception ignore){}
+                    if ( socket.isOpen() ) socket.close(true);
                 } catch ( Exception x ) {
                     log.error("",x);
                 }
@@ -1467,8 +1467,8 @@ public class NioEndpoint {
             if (handler.event(socket, error) == Handler.SocketState.CLOSED) {
                 // Close socket and pool
                 try {
-                    socket.getIOChannel().socket().close();
-                    socket.close();
+                    try {socket.close();}catch (Exception ignore){}
+                    if ( socket.isOpen() ) socket.close(true);
                 } catch ( Exception x ) {
                     log.error("",x);
                 }

==================================================
