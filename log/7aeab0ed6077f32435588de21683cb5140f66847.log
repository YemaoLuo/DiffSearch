7aeab0ed6077f32435588de21683cb5140f66847
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=54703
==================================================
Mark Emlyn
==================================================
Tue May 7 15:51:22 2013 +0000
==================================================
HttpParser.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=54703
Be tolerant of applications that pass CR or LF in setHeader() values.
Fix some whitespace parsing issues idnetifed by the extended test cases in readTokenOrQuotedString()

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1479951 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestMediaType.java
index 36a8686d6b..54ef5c2dba 100644
--- a/java/org/apache/tomcat/util/http/parser/HttpParser.java
+++ b/java/org/apache/tomcat/util/http/parser/HttpParser.java
@@ -260,17 +260,34 @@ public class HttpParser {
         }
     }
 
-    private static SkipConstantResult skipConstant(StringReader input,
-            String constant) throws IOException {
-        int len = constant.length();
+    // Skip any LWS and return the next char
+    private static int skipLws(StringReader input, boolean withReset)
+            throws IOException {
 
+        if (withReset) {
+            input.mark(1);
+        }
         int c = input.read();
 
-        // Skip lws
-        while (c == 32 || c == 9) {
+        while (c == 32 || c == 9 || c == 10 || c == 13) {
+            if (withReset) {
+                input.mark(1);
+            }
             c = input.read();
         }
 
+        if (withReset) {
+            input.reset();
+        }
+        return c;
+    }
+
+    private static SkipConstantResult skipConstant(StringReader input,
+            String constant) throws IOException {
+        int len = constant.length();
+
+        int c = skipLws(input, false);
+
         for (int i = 0; i < len; i++) {
             if (i == 0 && c == -1) {
                 return SkipConstantResult.EOF;
@@ -294,12 +311,7 @@ public class HttpParser {
     private static String readToken(StringReader input) throws IOException {
         StringBuilder result = new StringBuilder();
 
-        int c = input.read();
-
-        // Skip lws
-        while (c == 32 || c == 9) {
-            c = input.read();
-        }
+        int c = skipLws(input, false);
 
         while (c != -1 && isToken(c)) {
             result.append((char) c);
@@ -323,12 +335,7 @@ public class HttpParser {
     private static String readQuotedString(StringReader input,
             boolean returnQuoted) throws IOException {
 
-        int c = input.read();
-
-        // Skip lws
-        while (c == 32 || c == 9) {
-            c = input.read();
-        }
+        int c = skipLws(input, false);
 
         if (c != '"') {
             return null;
@@ -364,12 +371,8 @@ public class HttpParser {
     private static String readTokenOrQuotedString(StringReader input,
             boolean returnQuoted) throws IOException {
 
-        // Use mark/reset as skip(-1) fails when reading the last character of
-        // the input
-        input.mark(1);
-        int c = input.read();
-        // Go back so first character is available to be read again
-        input.reset();
+        // Go back so first non-LWS character is available to be read again
+        int c = skipLws(input, true);
 
         if (c == '"') {
             return readQuotedString(input, returnQuoted);
@@ -396,12 +399,7 @@ public class HttpParser {
         StringBuilder result = new StringBuilder();
         boolean quoted = false;
 
-        int c = input.read();
-
-        // Skip lws
-        while (c == 32 || c == 9) {
-            c = input.read();
-        }
+        int c = skipLws(input, false);
 
         if (c == '"') {
             quoted = true;
@@ -453,12 +451,7 @@ public class HttpParser {
         StringBuilder result = new StringBuilder();
         boolean quoted = false;
 
-        int c = input.read();
-
-        // Skip lws
-        while (c == 32 || c == 9) {
-            c = input.read();
-        }
+        int c = skipLws(input, false);
 
         if (c == '"') {
             quoted = true;

==================================================
