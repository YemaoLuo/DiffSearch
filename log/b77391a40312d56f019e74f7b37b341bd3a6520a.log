b77391a40312d56f019e74f7b37b341bd3a6520a
==================================================
Remove unused code
==================================================
Mark Emlyn
==================================================
Thu Nov 14 16:28:14 2013 +0000
==================================================
JspCompilationContext.java
Remove unused code

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1541960 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Parser.java
index 733cf0c1ce..2c942914ea 100644
--- a/java/org/apache/jasper/JspCompilationContext.java
+++ b/java/org/apache/jasper/JspCompilationContext.java
@@ -24,8 +24,6 @@ import java.net.MalformedURLException;
 import java.net.URL;
 import java.net.URLClassLoader;
 import java.net.URLConnection;
-import java.util.HashMap;
-import java.util.Map;
 import java.util.Set;
 
 import javax.servlet.ServletContext;
@@ -61,8 +59,6 @@ public class JspCompilationContext {
 
     private final Log log = LogFactory.getLog(JspCompilationContext.class); // must not be static
 
-    private final Map<String, Jar> tagFileJars;
-
     private String className;
     private final String jspUri;
     private String basePackageName;
@@ -131,7 +127,6 @@ public class JspCompilationContext {
         this.baseURI = baseURI;
 
         this.rctxt = rctxt;
-        this.tagFileJars = new HashMap<>();
         this.basePackageName = Constants.JSP_PACKAGE_NAME;
 
         this.tagInfo = tagInfo;
@@ -285,24 +280,7 @@ public class JspCompilationContext {
 
 
     public URL getResource(String res) throws MalformedURLException {
-        URL result = null;
-
-        if (res.startsWith("/META-INF/")) {
-            // This is a tag file packaged in a jar that is being compiled
-            Jar jar = tagFileJars.get(res);
-            if (jar == null) {
-                jar = tagJar;
-            }
-            if (jar != null) {
-                result = new URL(jar.getURL(res.substring(1)));
-            } else {
-                // May not be in a JAR in some IDE environments
-                result = context.getResource(canonicalURI(res));
-            }
-        } else {
-            result = context.getResource(canonicalURI(res));
-        }
-        return result;
+        return context.getResource(canonicalURI(res));
     }
 
 
@@ -321,22 +299,6 @@ public class JspCompilationContext {
         return path;
     }
 
-    /**
-     * Returns the tag-file-name-to-JAR-file map of this compilation unit,
-     * which maps tag file names to the JAR files in which the tag files are
-     * packaged.
-     *
-     * The map is populated when parsing the tag-file elements of the TLDs
-     * of any imported taglibs.
-     */
-    public Jar getTagFileJar(String tagFile) {
-        return this.tagFileJars.get(tagFile);
-    }
-
-    public void setTagFileJarResource(String tagFile, Jar jar) {
-        this.tagFileJars.put(tagFile, jar);
-    }
-
     /**
      * Returns the JAR file in which the tag file for which this
      * JspCompilationContext was created is packaged, or null if this

==================================================
TagLibraryInfoImpl.java
index 5203ed72e8..3072e1365f 100644
--- a/java/org/apache/jasper/compiler/Parser.java
+++ b/java/org/apache/jasper/compiler/Parser.java
@@ -413,13 +413,6 @@ class Parser implements TagConstants {
                         if (ctxt.getOptions().isCaching()) {
                             ctxt.getOptions().getCache().put(uri, impl);
                         }
-                    } else {
-                        // Current compilation context needs location of cached
-                        // tag files
-                        for (TagFileInfo info : impl.getTagFiles()) {
-                            ctxt.setTagFileJarResource(info.getPath(),
-                                    ctxt.getTagFileJar());
-                        }
                     }
                     pageInfo.addTaglib(uri, impl);
                 }

==================================================
