244f95a8fc6a35c61112d52e315dd8877775fe52
==================================================
More javadoc and cleanup
==================================================
Mark Emlyn
==================================================
Thu Feb 23 11:35:24 2012 +0000
==================================================
WsFrame.java
More javadoc and cleanup

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1292749 13f79535-47bb-0310-9956-ffa450edef68



==================================================
WsInputStream.java
index 1444ba1a89..0a6cd74c22 100644
--- a/java/org/apache/catalina/websocket/WsFrame.java
+++ b/java/org/apache/catalina/websocket/WsFrame.java
@@ -23,7 +23,7 @@ import org.apache.catalina.util.Conversions;
 import org.apache.coyote.http11.upgrade.UpgradeProcessor;
 
 /**
- * Represents a WebSocket frame with the exception of the payload for
+ * Represents a complete WebSocket frame with the exception of the payload for
  * non-control frames.
  */
 public class WsFrame {
@@ -35,6 +35,17 @@ public class WsFrame {
     private long payloadLength;
     private ByteBuffer payload;
 
+    /**
+     * Create the new WebSocket frame, reading data from the processor as
+     * necessary.
+     *
+     * @param processor Processor associated with the WebSocket connection on
+     *                  which the frame has been sent
+     *
+     * @throws IOException  If a problem occurs processing the frame. Any
+     *                      exception will trigger the closing of the WebSocket
+     *                      connection.
+     */
     public WsFrame(UpgradeProcessor<?> processor) throws IOException {
 
         int b = processorRead(processor);

==================================================
WsOutbound.java
index b74ff66ff8..d7003f4092 100644
--- a/java/org/apache/catalina/websocket/WsInputStream.java
+++ b/java/org/apache/catalina/websocket/WsInputStream.java
@@ -37,6 +37,7 @@ public class WsInputStream extends java.io.InputStream {
 
     private String error = null;
 
+
     public WsInputStream(UpgradeProcessor<?> processor, WsOutbound outbound)
             throws IOException {
         this.processor = processor;
@@ -44,10 +45,12 @@ public class WsInputStream extends java.io.InputStream {
         processFrame();
     }
 
+
     public WsFrame getFrame() {
         return frame;
     }
 
+
     private void processFrame() throws IOException {
         frame = new WsFrame(processor);
         readThisFragment = 0;
@@ -73,8 +76,8 @@ public class WsInputStream extends java.io.InputStream {
                 } else if (getFrame().getOpCode() == Constants.OPCODE_CLOSE) {
                     outbound.close(frame);
                 } else{
-                    // TODO
-                    throw new IOException("TODO");
+                    // TODO i18n
+                    throw new IOException("Unknown control frame");
                 }
                 processFrame();
             }

==================================================
