2f892bdd3f05378d94e996ce143e73367a26028f
==================================================
Javadoc fixes.
==================================================
Remy Maucherat
==================================================
Thu Jan 7 12:25:44 2016 +0000
==================================================
Context.java
Javadoc fixes.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1723528 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Host.java
index 77a6bc90a4..3e168373fe 100644
--- a/java/org/apache/catalina/Context.java
+++ b/java/org/apache/catalina/Context.java
@@ -439,7 +439,7 @@ public interface Context extends Container, ContextBind {
 
 
     /**
-     * Return the login configuration descriptor for this web application.
+     * @return the login configuration descriptor for this web application.
      */
     public LoginConfig getLoginConfig();
 
@@ -453,7 +453,7 @@ public interface Context extends Container, ContextBind {
 
 
     /**
-     * Return the naming resources associated with this web application.
+     * @return the naming resources associated with this web application.
      */
     public NamingResourcesImpl getNamingResources();
 
@@ -467,7 +467,7 @@ public interface Context extends Container, ContextBind {
 
 
     /**
-     * Return the context path for this web application.
+     * @return the context path for this web application.
      */
     public String getPath();
 
@@ -481,7 +481,7 @@ public interface Context extends Container, ContextBind {
 
 
     /**
-     * Return the public identifier of the deployment descriptor DTD that is
+     * @return the public identifier of the deployment descriptor DTD that is
      * currently being parsed.
      */
     public String getPublicId();
@@ -497,7 +497,7 @@ public interface Context extends Container, ContextBind {
 
 
     /**
-     * Return the reloadable flag for this web application.
+     * @return the reloadable flag for this web application.
      */
     public boolean getReloadable();
 
@@ -511,7 +511,7 @@ public interface Context extends Container, ContextBind {
 
 
     /**
-     * Return the override flag for this web application.
+     * @return the override flag for this web application.
      */
     public boolean getOverride();
 
@@ -525,7 +525,7 @@ public interface Context extends Container, ContextBind {
 
 
     /**
-     * Return the privileged flag for this web application.
+     * @return the privileged flag for this web application.
      */
     public boolean getPrivileged();
 
@@ -539,13 +539,13 @@ public interface Context extends Container, ContextBind {
 
 
     /**
-     * Return the servlet context for which this Context is a facade.
+     * @return the Servlet context for which this Context is a facade.
      */
     public ServletContext getServletContext();
 
 
     /**
-     * Return the default session timeout (in minutes) for this
+     * @return the default session timeout (in minutes) for this
      * web application.
      */
     public int getSessionTimeout();
@@ -580,7 +580,7 @@ public interface Context extends Container, ContextBind {
     public void setSwallowAbortedUploads(boolean swallowAbortedUploads);
 
     /**
-     * Return the value of the swallowOutput flag.
+     * @return the value of the swallowOutput flag.
      */
     public boolean getSwallowOutput();
 
@@ -596,7 +596,7 @@ public interface Context extends Container, ContextBind {
 
 
     /**
-     * Return the Java class name of the Wrapper implementation used
+     * @return the Java class name of the Wrapper implementation used
      * for servlets registered in this Context.
      */
     public String getWrapperClass();
@@ -699,7 +699,7 @@ public interface Context extends Container, ContextBind {
     public void setJarScanner(JarScanner jarScanner);
 
     /**
-     * Obtain the {@link Authenticator} that is used by this context or
+     * @return the {@link Authenticator} that is used by this context or
      * <code>null</code> if none is used.
      */
     public Authenticator getAuthenticator();
@@ -707,21 +707,29 @@ public interface Context extends Container, ContextBind {
     /**
      * Set whether or not the effective web.xml for this context should be
      * logged on context start.
+     *
+     * @param logEffectiveWebXml set to <code>true</code> to log the complete
+     *        web.xml that will be used for the webapp
      */
     public void setLogEffectiveWebXml(boolean logEffectiveWebXml);
 
     /**
      * Should the effective web.xml for this context be logged on context start?
+     *
+     * @return true if the reconstructed web.xml that will be used for the
+     *   webapp should be logged
      */
     public boolean getLogEffectiveWebXml();
 
     /**
-     * Get the instance manager associated with this context.
+     * @return the instance manager associated with this context.
      */
     public InstanceManager getInstanceManager();
 
     /**
      * Set the instance manager associated with this context.
+     *
+     * @param instanceManager the new instance manager instance
      */
     public void setInstanceManager(InstanceManager instanceManager);
 
@@ -772,6 +780,8 @@ public interface Context extends Container, ContextBind {
 
     /**
      * Add a security constraint to the set for this web application.
+     *
+     * @param constraint The security constraint that should be added
      */
     public void addConstraint(SecurityConstraint constraint);
 
@@ -921,32 +931,34 @@ public interface Context extends Container, ContextBind {
      * the Java implementation class appropriate for this Context
      * implementation.  The constructor of the instantiated Wrapper
      * will have been called, but no properties will have been set.
+     *
+     * @return a newly created wrapper instance that is used to wrap a Servlet
      */
     public Wrapper createWrapper();
 
 
     /**
-     * Return the set of application listener class names configured
+     * @return the set of application listener class names configured
      * for this application.
      */
     public String[] findApplicationListeners();
 
 
     /**
-     * Return the set of application parameters for this application.
+     * @return the set of application parameters for this application.
      */
     public ApplicationParameter[] findApplicationParameters();
 
 
     /**
-     * Return the set of security constraints for this web application.
+     * @return the set of security constraints for this web application.
      * If there are none, a zero-length array is returned.
      */
     public SecurityConstraint[] findConstraints();
 
 
     /**
-     * Return the error page entry for the specified HTTP error code,
+     * @return the error page entry for the specified HTTP error code,
      * if any; otherwise return <code>null</code>.
      *
      * @param errorCode Error code to look up
@@ -955,7 +967,7 @@ public interface Context extends Container, ContextBind {
 
 
     /**
-     * Return the error page entry for the specified Java exception type,
+     * @return the error page entry for the specified Java exception type,
      * if any; otherwise return <code>null</code>.
      *
      * @param exceptionType Exception type to look up
@@ -965,14 +977,14 @@ public interface Context extends Container, ContextBind {
 
 
     /**
-     * Return the set of defined error pages for all specified error codes
+     * @return the set of defined error pages for all specified error codes
      * and exception types.
      */
     public ErrorPage[] findErrorPages();
 
 
     /**
-     * Return the filter definition for the specified filter name, if any;
+     * @return the filter definition for the specified filter name, if any;
      * otherwise return <code>null</code>.
      *
      * @param filterName Filter name to look up
@@ -981,19 +993,19 @@ public interface Context extends Container, ContextBind {
 
 
     /**
-     * Return the set of defined filters for this Context.
+     * @return the set of defined filters for this Context.
      */
     public FilterDef[] findFilterDefs();
 
 
     /**
-     * Return the set of filter mappings for this Context.
+     * @return the set of filter mappings for this Context.
      */
     public FilterMap[] findFilterMaps();
 
 
     /**
-     * Return the MIME type to which the specified extension is mapped,
+     * @return the MIME type to which the specified extension is mapped,
      * if any; otherwise return <code>null</code>.
      *
      * @param extension Extension to map to a MIME type
@@ -1002,14 +1014,14 @@ public interface Context extends Container, ContextBind {
 
 
     /**
-     * Return the extensions for which MIME mappings are defined.  If there
+     * @return the extensions for which MIME mappings are defined.  If there
      * are none, a zero-length array is returned.
      */
     public String[] findMimeMappings();
 
 
     /**
-     * Return the value for the specified context initialization
+     * @return the value for the specified context initialization
      * parameter name, if any; otherwise return <code>null</code>.
      *
      * @param name Name of the parameter to return
@@ -1018,7 +1030,7 @@ public interface Context extends Container, ContextBind {
 
 
     /**
-     * Return the names of all defined context initialization parameters
+     * @return the names of all defined context initialization parameters
      * for this Context.  If no parameters are defined, a zero-length
      * array is returned.
      */
@@ -1031,12 +1043,13 @@ public interface Context extends Container, ContextBind {
      * is one.  Otherwise, return the specified role unchanged.
      *
      * @param role Security role to map
+     * @return The role name that was mapped to the specified role
      */
     public String findRoleMapping(String role);
 
 
     /**
-     * Return <code>true</code> if the specified security role is defined
+     * @return <code>true</code> if the specified security role is defined
      * for this application; otherwise return <code>false</code>.
      *
      * @param role Security role to verify
@@ -1045,14 +1058,14 @@ public interface Context extends Container, ContextBind {
 
 
     /**
-     * Return the security roles defined for this application.  If none
+     * @return the security roles defined for this application.  If none
      * have been defined, a zero-length array is returned.
      */
     public String[] findSecurityRoles();
 
 
     /**
-     * Return the servlet name mapped by the specified pattern (if any);
+     * @return the servlet name mapped by the specified pattern (if any);
      * otherwise return <code>null</code>.
      *
      * @param pattern Pattern for which a mapping is requested
@@ -1061,14 +1074,14 @@ public interface Context extends Container, ContextBind {
 
 
     /**
-     * Return the patterns of all defined servlet mappings for this
+     * @return the patterns of all defined servlet mappings for this
      * Context.  If no mappings are defined, a zero-length array is returned.
      */
     public String[] findServletMappings();
 
 
     /**
-     * Return the context-relative URI of the error page for the specified
+     * @return the context-relative URI of the error page for the specified
      * HTTP status code, if any; otherwise return <code>null</code>.
      *
      * @param status HTTP status code to look up
@@ -1077,7 +1090,7 @@ public interface Context extends Container, ContextBind {
 
 
     /**
-     * Return the set of HTTP status codes for which error pages have
+     * @return the set of HTTP status codes for which error pages have
      * been specified.  If none are specified, a zero-length array
      * is returned.
      */
@@ -1085,26 +1098,29 @@ public interface Context extends Container, ContextBind {
 
 
     /**
-     * Get the associated ThreadBindingListener.
+     * @return the associated ThreadBindingListener.
      */
     public ThreadBindingListener getThreadBindingListener();
 
 
     /**
      * Get the associated ThreadBindingListener.
+     *
+     * @param threadBindingListener Set the listener that will receive
+     *       notifications when entering and exiting the application scope
      */
     public void setThreadBindingListener(ThreadBindingListener threadBindingListener);
 
 
     /**
-     * Return the set of watched resources for this Context. If none are
+     * @return the set of watched resources for this Context. If none are
      * defined, a zero length array will be returned.
      */
     public String[] findWatchedResources();
 
 
     /**
-     * Return <code>true</code> if the specified welcome file is defined
+     * @return <code>true</code> if the specified welcome file is defined
      * for this Context; otherwise return <code>false</code>.
      *
      * @param name Welcome file to verify
@@ -1113,21 +1129,21 @@ public interface Context extends Container, ContextBind {
 
 
     /**
-     * Return the set of welcome files defined for this Context.  If none are
+     * @return the set of welcome files defined for this Context.  If none are
      * defined, a zero-length array is returned.
      */
     public String[] findWelcomeFiles();
 
 
     /**
-     * Return the set of LifecycleListener classes that will be added to
+     * @return the set of LifecycleListener classes that will be added to
      * newly created Wrappers automatically.
      */
     public String[] findWrapperLifecycles();
 
 
     /**
-     * Return the set of ContainerListener classes that will be added to
+     * @return the set of ContainerListener classes that will be added to
      * newly created Wrappers automatically.
      */
     public String[] findWrapperListeners();
@@ -1136,6 +1152,8 @@ public interface Context extends Container, ContextBind {
     /**
      * Notify all {@link javax.servlet.ServletRequestListener}s that a request
      * has started.
+     *
+     * @param request The request object that will be passed to the listener
      * @return <code>true</code> if the listeners fire successfully, else
      *         <code>false</code>
      */
@@ -1144,6 +1162,8 @@ public interface Context extends Container, ContextBind {
     /**
      * Notify all {@link javax.servlet.ServletRequestListener}s that a request
      * has ended.
+     *
+     * @param request The request object that will be passed to the listener
      * @return <code>true</code> if the listeners fire successfully, else
      *         <code>false</code>
      */
@@ -1290,7 +1310,7 @@ public interface Context extends Container, ContextBind {
 
 
     /**
-     * Return the real path for a given virtual path, if possible; otherwise
+     * @return the real path for a given virtual path, if possible; otherwise
      * return <code>null</code>.
      *
      * @param path The path to the desired resource
@@ -1299,7 +1319,7 @@ public interface Context extends Container, ContextBind {
 
 
     /**
-     * Return the effective major version of the Servlet spec used by this
+     * @return the effective major version of the Servlet spec used by this
      * context.
      */
     public int getEffectiveMajorVersion();
@@ -1308,12 +1328,14 @@ public interface Context extends Container, ContextBind {
     /**
      * Set the effective major version of the Servlet spec used by this
      * context.
+     *
+     * @param major Set the version number
      */
     public void setEffectiveMajorVersion(int major);
 
 
     /**
-     * Return the effective minor version of the Servlet spec used by this
+     * @return the effective minor version of the Servlet spec used by this
      * context.
      */
     public int getEffectiveMinorVersion();
@@ -1322,12 +1344,14 @@ public interface Context extends Container, ContextBind {
     /**
      * Set the effective minor version of the Servlet spec used by this
      * context.
+     *
+     * @param minor Set the version number
      */
     public void setEffectiveMinorVersion(int minor);
 
 
     /**
-     * Obtain the JSP configuration for this context.
+     * @return the JSP configuration for this context.
      * Will be null if there is no JSP configuration.
      */
     public JspConfigDescriptor getJspConfigDescriptor();
@@ -1335,6 +1359,8 @@ public interface Context extends Container, ContextBind {
     /**
      * Set the JspConfigDescriptor for this context.
      * A null value indicates there is not JSP configuration.
+     *
+     * @param descriptor the new JSP configuration
      */
     public void setJspConfigDescriptor(JspConfigDescriptor descriptor);
 
@@ -1350,20 +1376,24 @@ public interface Context extends Container, ContextBind {
 
     /**
      * Is this Context paused whilst it is reloaded?
+     *
+     * @return <code>true</code> if the context has been paused
      */
     public boolean getPaused();
 
 
     /**
      * Is this context using version 2.2 of the Servlet spec?
+     *
+     * @return <code>true</code> for a legacy Servlet 2.2 webapp
      */
     boolean isServlet22();
 
     /**
-     * Notification that servlet security has been dynamically set in a
+     * Notification that Servlet security has been dynamically set in a
      * {@link javax.servlet.ServletRegistration.Dynamic}
-     * @param registration servlet security was modified for
-     * @param servletSecurityElement new security constraints for this servlet
+     * @param registration Servlet security was modified for
+     * @param servletSecurityElement new security constraints for this Servlet
      * @return urls currently mapped to this registration that are already
      *         present in web.xml
      */
@@ -1374,6 +1404,8 @@ public interface Context extends Container, ContextBind {
      * Sets the (comma separated) list of Servlets that expect a resource to be
      * present. Used to ensure that welcome files associated with Servlets that
      * expect a resource to be present are not mapped when there is no resource.
+     *
+     * @param resourceOnlyServlets The Servlet names comma separated list
      */
     public void setResourceOnlyServlets(String resourceOnlyServlets);
 
@@ -1394,7 +1426,7 @@ public interface Context extends Container, ContextBind {
     public boolean isResourceOnlyServlet(String servletName);
 
     /**
-     * Return the base name to use for WARs, directories or context.xml files
+     * @return the base name to use for WARs, directories or context.xml files
      * for this context.
      */
     public String getBaseName();
@@ -1403,24 +1435,29 @@ public interface Context extends Container, ContextBind {
      * Set the version of this web application - used to differentiate
      * different versions of the same web application when using parallel
      * deployment.
+     *
+     * @param webappVersion The webapp version associated with the context,
+     *    which should be unique
      */
     public void setWebappVersion(String webappVersion);
 
     /**
-     * Set the version of this web application - used to differentiate
+     * @return The version of this web application, used to differentiate
      * different versions of the same web application when using parallel
-     * deployment. If not specified, defaults to the empty string.
+     * deployment.
      */
     public String getWebappVersion();
 
     /**
      * Configure whether or not requests listeners will be fired on forwards for
      * this Context.
+     *
+     * @param enable <code>true</code> to fire request listeners when forwarding
      */
     public void setFireRequestListenersOnForwards(boolean enable);
 
     /**
-     * Determine whether or not requests listeners will be fired on forwards for
+     * @return whether or not requests listeners will be fired on forwards for
      * this Context.
      */
     public boolean getFireRequestListenersOnForwards();
@@ -1429,11 +1466,14 @@ public interface Context extends Container, ContextBind {
      * Configures if a user presents authentication credentials, whether the
      * context will process them when the request is for a non-protected
      * resource.
+     *
+     * @param enable <code>true</code> to perform authentication even outside
+     *    security constraints
      */
     public void setPreemptiveAuthentication(boolean enable);
 
     /**
-     * Determines if a user presents authentication credentials, will the
+     * @return if a user presents authentication credentials, will the
      * context will process them when the request is for a non-protected
      * resource.
      */
@@ -1442,17 +1482,19 @@ public interface Context extends Container, ContextBind {
     /**
      * Configures if a response body is included when a redirect response is
      * sent to the client.
+     *
+     * @param enable <code>true</code> to send a response body for redirects
      */
     public void setSendRedirectBody(boolean enable);
 
     /**
-     * Determines if the context is configured to include a response body as
+     * @return if the context is configured to include a response body as
      * part of a redirect response.
      */
     public boolean getSendRedirectBody();
 
     /**
-     * Return the Loader with which this Context is associated.
+     * @return the Loader with which this Context is associated.
      */
     public Loader getLoader();
 
@@ -1464,7 +1506,7 @@ public interface Context extends Container, ContextBind {
     public void setLoader(Loader loader);
 
     /**
-     * Return the Resources with which this Context is associated.
+     * @return the Resources with which this Context is associated.
      */
     public WebResourceRoot getResources();
 
@@ -1476,7 +1518,7 @@ public interface Context extends Container, ContextBind {
     public void setResources(WebResourceRoot resources);
 
     /**
-     * Return the Manager with which this Context is associated.  If there is
+     * @return the Manager with which this Context is associated.  If there is
      * no associated Manager, return <code>null</code>.
      */
     public Manager getManager();
@@ -1499,7 +1541,7 @@ public interface Context extends Container, ContextBind {
     public void setAddWebinfClassesResources(boolean addWebinfClassesResources);
 
     /**
-     * Gets the flag that indicates if /WEB-INF/classes should be treated like
+     * @return the flag that indicates if /WEB-INF/classes should be treated like
      * an exploded JAR and JAR resources made available as if they were in a
      * JAR.
      */
@@ -1603,7 +1645,7 @@ public interface Context extends Container, ContextBind {
     public Map<String, String> findPreDestroyMethods();
 
     /**
-     * Obtain the token necessary for operations on the associated JNDI naming
+     * @return  the token necessary for operations on the associated JNDI naming
      * context.
      */
     public Object getNamingToken();
@@ -1620,7 +1662,7 @@ public interface Context extends Container, ContextBind {
     public void setCookieProcessor(CookieProcessor cookieProcessor);
 
     /**
-     * Obtains the {@link CookieProcessor} that will be used to process cookies
+     * @return the {@link CookieProcessor} that will be used to process cookies
      * for this Context.
      */
     public CookieProcessor getCookieProcessor();

==================================================
Session.java
index 329baccb56..e0f53bb7b0 100644
--- a/java/org/apache/catalina/Host.java
+++ b/java/org/apache/catalina/Host.java
@@ -67,7 +67,7 @@ public interface Host extends Container {
 
 
     /**
-     * Return the XML root for this Host.  This can be an absolute
+     * @return the XML root for this Host.  This can be an absolute
      * pathname, a relative pathname, or a URL.
      * If null, defaults to
      * ${catalina.base}/conf/&lt;engine name&gt;/&lt;host name&gt; directory
@@ -84,20 +84,20 @@ public interface Host extends Container {
     public void setXmlBase(String xmlBase);
 
     /**
-     * Return a default configuration path of this Host. The file will be
+     * @return a default configuration path of this Host. The file will be
      * canonical if possible.
      */
     public File getConfigBaseFile();
 
     /**
-     * Return the application root for this Host.  This can be an absolute
+     * @return the application root for this Host.  This can be an absolute
      * pathname, a relative pathname, or a URL.
      */
     public String getAppBase();
 
 
     /**
-     * Return an absolute {@link File} for the appBase of this Host. The file
+     * @return an absolute {@link File} for the appBase of this Host. The file
      * will be canonical if possible. There is no guarantee that that the
      * appBase exists.
      */
@@ -114,7 +114,7 @@ public interface Host extends Container {
 
 
     /**
-     * Return the value of the auto deploy flag.  If true, it indicates that
+     * @return the value of the auto deploy flag.  If true, it indicates that
      * this host's child webapps should be discovered and automatically
      * deployed dynamically.
      */
@@ -130,7 +130,7 @@ public interface Host extends Container {
 
 
     /**
-     * Return the Java class name of the context configuration class
+     * @return the Java class name of the context configuration class
      * for new web applications.
      */
     public String getConfigClass();
@@ -146,7 +146,7 @@ public interface Host extends Container {
 
 
     /**
-     * Return the value of the deploy on startup flag.  If true, it indicates
+     * @return the value of the deploy on startup flag.  If true, it indicates
      * that this host's child webapps should be discovered and automatically
      * deployed.
      */
@@ -162,7 +162,7 @@ public interface Host extends Container {
 
 
     /**
-     * Return the regular expression that defines the files and directories in
+     * @return the regular expression that defines the files and directories in
      * the host's appBase that will be ignored by the automatic deployment
      * process.
      */
@@ -170,7 +170,7 @@ public interface Host extends Container {
 
 
     /**
-     * Return the compiled regular expression that defines the files and
+     * @return the compiled regular expression that defines the files and
      * directories in the host's appBase that will be ignored by the automatic
      * deployment process.
      */
@@ -181,12 +181,14 @@ public interface Host extends Container {
      * Set the regular expression that defines the files and directories in
      * the host's appBase that will be ignored by the automatic deployment
      * process.
+     *
+     * @param deployIgnore A regular expression matching file names
      */
     public void setDeployIgnore(String deployIgnore);
 
 
     /**
-     * Return the executor that is used for starting and stopping contexts. This
+     * @return the executor that is used for starting and stopping contexts. This
      * is primarily for use by components deploying contexts that want to do
      * this in a multi-threaded manner.
      */
@@ -194,7 +196,7 @@ public interface Host extends Container {
 
 
     /**
-     * Returns true if the Host will attempt to create directories for appBase and xmlBase
+     * Returns <code>true</code> if the Host will attempt to create directories for appBase and xmlBase
      * unless they already exist.
      * @return true if the Host will attempt to create directories
      */
@@ -211,17 +213,19 @@ public interface Host extends Container {
 
 
     /**
-     * Returns true of the Host is configured to automatically undeploy old
+     * @return <code>true</code> of the Host is configured to automatically undeploy old
      * versions of applications deployed using parallel deployment. This only
-     * takes effect is {@link #getAutoDeploy()} also returns true.
+     * takes effect is {@link #getAutoDeploy()} also returns <code>true</code>.
      */
     public boolean getUndeployOldVersions();
 
 
     /**
-     * Set to true if the Host should automatically undeploy old versions of
+     * Set to <code>true</code> if the Host should automatically undeploy old versions of
      * applications deployed using parallel deployment. This only takes effect
-     * if {@link #getAutoDeploy()} returns true.
+     * if {@link #getAutoDeploy()} returns <code>true</code>.
+     *
+     * @param undeployOldVersions The new value for this flag
      */
     public void setUndeployOldVersions(boolean undeployOldVersions);
 
@@ -237,7 +241,7 @@ public interface Host extends Container {
 
 
     /**
-     * Return the set of alias names for this Host.  If none are defined,
+     * @return the set of alias names for this Host.  If none are defined,
      * a zero length array is returned.
      */
     public String[] findAliases();

==================================================
SessionEvent.java
index 98ef804879..cb576f6a73 100644
--- a/java/org/apache/catalina/Session.java
+++ b/java/org/apache/catalina/Session.java
@@ -66,7 +66,7 @@ public interface Session {
 
 
     /**
-     * Return the authentication type used to authenticate our cached
+     * @return the authentication type used to authenticate our cached
      * Principal, if any.
      */
     public String getAuthType();
@@ -82,13 +82,13 @@ public interface Session {
 
 
     /**
-     * Return the creation time for this session.
+     * @return the creation time for this session.
      */
     public long getCreationTime();
 
 
     /**
-     * Return the creation time for this session, bypassing the session validity
+     * @return the creation time for this session, bypassing the session validity
      * checks.
      */
     public long getCreationTimeInternal();
@@ -104,13 +104,13 @@ public interface Session {
 
 
     /**
-     * Return the session identifier for this session.
+     * @return the session identifier for this session.
      */
     public String getId();
 
 
     /**
-     * Return the session identifier for this session.
+     * @return the session identifier for this session.
      */
     public String getIdInternal();
 
@@ -136,7 +136,7 @@ public interface Session {
 
 
     /**
-     * Return the last time the client sent a request associated with this
+     * @return the last time the client sent a request associated with this
      * session, as the number of milliseconds since midnight, January 1, 1970
      * GMT.  Actions that your application takes, such as getting or setting
      * a value associated with the session, do not affect the access time.
@@ -145,13 +145,13 @@ public interface Session {
     public long getThisAccessedTime();
 
     /**
-     * Return the last client access time without invalidation check
+     * @return the last client access time without invalidation check
      * @see #getThisAccessedTime()
      */
     public long getThisAccessedTimeInternal();
 
     /**
-     * Return the last time the client sent a request associated with this
+     * @return the last time the client sent a request associated with this
      * session, as the number of milliseconds since midnight, January 1, 1970
      * GMT.  Actions that your application takes, such as getting or setting
      * a value associated with the session, do not affect the access time.
@@ -160,24 +160,24 @@ public interface Session {
     public long getLastAccessedTime();
 
     /**
-     * Return the last client access time without invalidation check
+     * @return the last client access time without invalidation check
      * @see #getLastAccessedTime()
      */
     public long getLastAccessedTimeInternal();
 
     /**
-     * Return the idle time (in milliseconds) from last client access time.
+     * @return the idle time (in milliseconds) from last client access time.
      */
     public long getIdleTime();
 
     /**
-     * Return the idle time from last client access time without invalidation check
+     * @return the idle time from last client access time without invalidation check
      * @see #getIdleTime()
      */
     public long getIdleTimeInternal();
 
     /**
-     * Return the Manager within which this Session is valid.
+     * @return the Manager within which this Session is valid.
      */
     public Manager getManager();
 
@@ -191,7 +191,7 @@ public interface Session {
 
 
     /**
-     * Return the maximum time interval, in seconds, between client requests
+     * @return the maximum time interval, in seconds, between client requests
      * before the servlet container will invalidate the session.  A negative
      * time indicates that the session should never time out.
      */
@@ -217,7 +217,7 @@ public interface Session {
 
 
     /**
-     * Return the authenticated Principal that is associated with this Session.
+     * @return the authenticated Principal that is associated with this Session.
      * This provides an <code>Authenticator</code> with a means to cache a
      * previously authenticated Principal, and avoid potentially expensive
      * <code>Realm.authenticate()</code> calls on every request.  If there
@@ -238,7 +238,7 @@ public interface Session {
 
 
     /**
-     * Return the <code>HttpSession</code> for which this object
+     * @return the <code>HttpSession</code> for which this object
      * is the facade.
      */
     public HttpSession getSession();
@@ -253,7 +253,7 @@ public interface Session {
 
 
     /**
-     * Return the <code>isValid</code> flag for this session.
+     * @return <code>true</code> if the session is still valid
      */
     public boolean isValid();
 
@@ -271,6 +271,9 @@ public interface Session {
 
     /**
      * Add a session event listener to this component.
+     *
+     * @param listener the SessionListener instance that should be notified
+     *   for session events
      */
     public void addSessionListener(SessionListener listener);
 
@@ -289,7 +292,7 @@ public interface Session {
 
 
     /**
-     * Return the object bound with the specified name to the internal notes
+     * @return the object bound with the specified name to the internal notes
      * for this session, or <code>null</code> if no such binding exists.
      *
      * @param name Name of the note to be returned
@@ -298,7 +301,7 @@ public interface Session {
 
 
     /**
-     * Return an Iterator containing the String names of all notes bindings
+     * @return an Iterator containing the String names of all notes bindings
      * that exist for this session.
      */
     public Iterator<String> getNoteNames();
@@ -322,6 +325,9 @@ public interface Session {
 
     /**
      * Remove a session event listener from this component.
+     *
+     * @param listener remove the sesion listener, which will no longer be
+     *     notified
      */
     public void removeSessionListener(SessionListener listener);
 

==================================================
SessionIdGenerator.java
index 432a761bc7..7f77a867db 100644
--- a/java/org/apache/catalina/SessionEvent.java
+++ b/java/org/apache/catalina/SessionEvent.java
@@ -68,7 +68,7 @@ public final class SessionEvent extends EventObject {
 
 
     /**
-     * Return the event data of this event.
+     * @return the event data of this event.
      */
     public Object getData() {
 
@@ -78,7 +78,7 @@ public final class SessionEvent extends EventObject {
 
 
     /**
-     * Return the Session on which this event occurred.
+     * @return the Session on which this event occurred.
      */
     public Session getSession() {
 
@@ -88,7 +88,7 @@ public final class SessionEvent extends EventObject {
 
 
     /**
-     * Return the event type of this event.
+     * @return the event type of this event.
      */
     public String getType() {
 
@@ -97,9 +97,6 @@ public final class SessionEvent extends EventObject {
     }
 
 
-    /**
-     * Return a string representation of this event.
-     */
     @Override
     public String toString() {
 

==================================================
Store.java
index b980d76e82..b11a4c3256 100644
--- a/java/org/apache/catalina/SessionIdGenerator.java
+++ b/java/org/apache/catalina/SessionIdGenerator.java
@@ -19,7 +19,7 @@ package org.apache.catalina;
 public interface SessionIdGenerator {
 
     /**
-     * Return the node identifier associated with this node which will be
+     * @return the node identifier associated with this node which will be
      * included in the generated session ID.
      */
     public String getJvmRoute();
@@ -33,7 +33,7 @@ public interface SessionIdGenerator {
     public void setJvmRoute(String jvmRoute);
 
     /**
-     * Return the number of bytes for a session ID
+     * @return the number of bytes for a session ID
      */
     public int getSessionIdLength();
 
@@ -46,6 +46,8 @@ public interface SessionIdGenerator {
 
     /**
      * Generate and return a new session identifier.
+     *
+     * @return the newly generated session id
      */
     public String generateSessionId();
 
@@ -53,6 +55,7 @@ public interface SessionIdGenerator {
      * Generate and return a new session identifier.
      *
      * @param route   node identifier to include in generated id
+     * @return the newly generated session id
      */
     public String generateSessionId(String route);
 }

==================================================
StoreManager.java
index e9f7f03476..63d57b6cba 100644
--- a/java/org/apache/catalina/Store.java
+++ b/java/org/apache/catalina/Store.java
@@ -37,7 +37,7 @@ public interface Store {
     // ------------------------------------------------------------- Properties
 
     /**
-     * Return the Manager instance associated with this Store.
+     * @return the Manager instance associated with this Store.
      */
     public Manager getManager();
 
@@ -51,7 +51,7 @@ public interface Store {
 
 
     /**
-     * Return the number of Sessions present in this Store.
+     * @return the number of Sessions present in this Store.
      *
      * @exception IOException if an input/output error occurs
      */
@@ -70,7 +70,7 @@ public interface Store {
 
 
     /**
-     * Return an array containing the session identifiers of all Sessions
+     * @return an array containing the session identifiers of all Sessions
      * currently saved in this Store.  If there are no such Sessions, a
      * zero-length array is returned.
      *
@@ -88,6 +88,7 @@ public interface Store {
      *
      * @exception ClassNotFoundException if a deserialization error occurs
      * @exception IOException if an input/output error occurs
+     * @return the loaded Session instance
      */
     public Session load(String id)
         throws ClassNotFoundException, IOException;
@@ -107,6 +108,8 @@ public interface Store {
 
     /**
      * Remove all Sessions from this Store.
+     *
+     * @exception IOException if an input/output error occurs
      */
     public void clear() throws IOException;
 

==================================================
TomcatPrincipal.java
index 83ceb691a8..fbc05b85ba 100644
--- a/java/org/apache/catalina/StoreManager.java
+++ b/java/org/apache/catalina/StoreManager.java
@@ -23,7 +23,7 @@ package org.apache.catalina;
 public interface StoreManager extends DistributedManager {
 
     /**
-     * Return the Store object which manages persistent Session
+     * @return the Store object which manages persistent Session
      * storage for this Manager.
      */
     Store getStore();

==================================================
User.java
index 8d0c07c71f..4d5dad6cf1 100644
--- a/java/org/apache/catalina/TomcatPrincipal.java
+++ b/java/org/apache/catalina/TomcatPrincipal.java
@@ -27,12 +27,12 @@ import org.ietf.jgss.GSSCredential;
 public interface TomcatPrincipal extends Principal {
 
     /**
-     * The authenticated Principal to be exposed to applications.
+     * @return The authenticated Principal to be exposed to applications.
      */
     Principal getUserPrincipal();
 
     /**
-     * The user's delegated credentials.
+     * @return The user's delegated credentials.
      */
     GSSCredential getGssCredential();
 

==================================================
UserDatabase.java
index 67868e88da..e50fd8f8d2 100644
--- a/java/org/apache/catalina/User.java
+++ b/java/org/apache/catalina/User.java
@@ -39,7 +39,7 @@ public interface User extends Principal {
 
 
     /**
-     * Return the full name of this user.
+     * @return the full name of this user.
      */
     public String getFullName();
 
@@ -53,13 +53,13 @@ public interface User extends Principal {
 
 
     /**
-     * Return the set of {@link Group}s to which this user belongs.
+     * @return the set of {@link Group}s to which this user belongs.
      */
     public Iterator<Group> getGroups();
 
 
     /**
-     * Return the logon password of this user, optionally prefixed with the
+     * @return the logon password of this user, optionally prefixed with the
      * identifier of an encoding scheme surrounded by curly braces, such as
      * <code>{md5}xxxxx</code>.
      */
@@ -77,19 +77,19 @@ public interface User extends Principal {
 
 
     /**
-     * Return the set of {@link Role}s assigned specifically to this user.
+     * @return the set of {@link Role}s assigned specifically to this user.
      */
     public Iterator<Role> getRoles();
 
 
     /**
-     * Return the {@link UserDatabase} within which this User is defined.
+     * @return the {@link UserDatabase} within which this User is defined.
      */
     public UserDatabase getUserDatabase();
 
 
     /**
-     * Return the logon username of this user, which must be unique
+     * @return the logon username of this user, which must be unique
      * within the scope of a {@link UserDatabase}.
      */
     public String getUsername();
@@ -127,6 +127,7 @@ public interface User extends Principal {
      * Is this user in the specified {@link Group}?
      *
      * @param group The group to check
+     * @return <code>true</code> if the user is in the specified group
      */
     public boolean isInGroup(Group group);
 
@@ -137,6 +138,7 @@ public interface User extends Principal {
      * {@link Group} membership.
      *
      * @param role The role to check
+     * @return <code>true</code> if the user has the specified role
      */
     public boolean isInRole(Role role);
 

==================================================
Valve.java
index 33f1b77e37..9a1a932959 100644
--- a/java/org/apache/catalina/UserDatabase.java
+++ b/java/org/apache/catalina/UserDatabase.java
@@ -38,25 +38,25 @@ public interface UserDatabase {
 
 
     /**
-     * Return the set of {@link Group}s defined in this user database.
+     * @return the set of {@link Group}s defined in this user database.
      */
     public Iterator<Group> getGroups();
 
 
     /**
-     * Return the unique global identifier of this user database.
+     * @return the unique global identifier of this user database.
      */
     public String getId();
 
 
     /**
-     * Return the set of {@link Role}s defined in this user database.
+     * @return the set of {@link Role}s defined in this user database.
      */
     public Iterator<Role> getRoles();
 
 
     /**
-     * Return the set of {@link User}s defined in this user database.
+     * @return the set of {@link User}s defined in this user database.
      */
     public Iterator<User> getUsers();
 
@@ -77,6 +77,7 @@ public interface UserDatabase {
      *
      * @param groupname The group name of the new group (must be unique)
      * @param description The description of this group
+     * @return The new group
      */
     public Group createGroup(String groupname, String description);
 
@@ -86,6 +87,7 @@ public interface UserDatabase {
      *
      * @param rolename The role name of the new role (must be unique)
      * @param description The description of this role
+     * @return The new role
      */
     public Role createRole(String rolename, String description);
 
@@ -96,13 +98,14 @@ public interface UserDatabase {
      * @param username The logon username of the new user (must be unique)
      * @param password The logon password of the new user
      * @param fullName The full name of the new user
+     * @return The new user
      */
     public User createUser(String username, String password,
                            String fullName);
 
 
     /**
-     * Return the {@link Group} with the specified group name, if any;
+     * @return the {@link Group} with the specified group name, if any;
      * otherwise return <code>null</code>.
      *
      * @param groupname Name of the group to return
@@ -111,7 +114,7 @@ public interface UserDatabase {
 
 
     /**
-     * Return the {@link Role} with the specified role name, if any;
+     * @return the {@link Role} with the specified role name, if any;
      * otherwise return <code>null</code>.
      *
      * @param rolename Name of the role to return
@@ -120,7 +123,7 @@ public interface UserDatabase {
 
 
     /**
-     * Return the {@link User} with the specified user name, if any;
+     * @return the {@link User} with the specified user name, if any;
      * otherwise return <code>null</code>.
      *
      * @param username Name of the user to return

==================================================
WebResource.java
index fd05a7d9aa..32ccade8bd 100644
--- a/java/org/apache/catalina/Valve.java
+++ b/java/org/apache/catalina/Valve.java
@@ -43,7 +43,7 @@ public interface Valve {
     //-------------------------------------------------------------- Properties
 
     /**
-     * Return the next Valve in the pipeline containing this Valve, if any.
+     * @return the next Valve in the pipeline containing this Valve, if any.
      */
     public Valve getNext();
 

==================================================
WebResourceRoot.java
index 7f5465cae2..2852a1bc93 100644
--- a/java/org/apache/catalina/WebResource.java
+++ b/java/org/apache/catalina/WebResource.java
@@ -27,18 +27,18 @@ import java.util.jar.Manifest;
  */
 public interface WebResource {
     /**
-     * See {@link java.io.File#lastModified()}.
+     * @return {@link java.io.File#lastModified()}.
      */
     long getLastModified();
 
     /**
-     * Return the last modified time of this resource in the correct format for
+     * @return the last modified time of this resource in the correct format for
      * the HTTP Last-Modified header as specified by RFC 2616.
      */
     String getLastModifiedHttp();
 
     /**
-     * See {@link java.io.File#exists()}.
+     * @return {@link java.io.File#exists()}.
      */
     boolean exists();
 
@@ -48,46 +48,48 @@ public interface WebResource {
      * additional {@link WebResourceSet}. For example, if an external
      * directory is mapped to /WEB-INF/lib in an otherwise empty web
      * application, /WEB-INF will be represented as a virtual resource.
+     *
+     * @return <code>true</code> for a virtual resource
      */
     boolean isVirtual();
 
     /**
-     * See {@link java.io.File#isDirectory()}.
+     * @return {@link java.io.File#isDirectory()}.
      */
     boolean isDirectory();
 
     /**
-     * See {@link java.io.File#isFile()}.
+     * @return {@link java.io.File#isFile()}.
      */
     boolean isFile();
 
     /**
-     * See {@link java.io.File#delete()}.
+     * @return {@link java.io.File#delete()}.
      */
     boolean delete();
 
     /**
-     * See {@link java.io.File#getName()}.
+     * @return {@link java.io.File#getName()}.
      */
     String getName();
 
     /**
-     * See {@link java.io.File#length()}.
+     * @return {@link java.io.File#length()}.
      */
     long getContentLength();
 
     /**
-     * See {@link java.io.File#getCanonicalPath()}.
+     * @return {@link java.io.File#getCanonicalPath()}.
      */
     String getCanonicalPath();
 
     /**
-     * See {@link java.io.File#canRead()}.
+     * @return {@link java.io.File#canRead()}.
      */
     boolean canRead();
 
     /**
-     * The path of this resource relative to the web application root. If the
+     * @return The path of this resource relative to the web application root. If the
      * resource is a directory, the return value will end in '/'.
      */
     String getWebappPath();
@@ -102,11 +104,13 @@ public interface WebResource {
 
     /**
      * Set the MIME type for this Resource.
+     *
+     * @param mimeType The mime type that will be associated with the resource
      */
     void setMimeType(String mimeType);
 
     /**
-     * Get the MIME type for this Resource.
+     * @return the MIME type for this Resource.
      */
     String getMimeType();
 
@@ -120,37 +124,37 @@ public interface WebResource {
     InputStream getInputStream();
 
     /**
-     * Obtain the cached binary content of this resource.
+     * @return the cached binary content of this resource.
      */
     byte[] getContent();
 
     /**
-     * The time the file was created. If not available, the result of
+     * @return The time the file was created. If not available, the result of
      * {@link #getLastModified()} will be returned.
      */
     long getCreation();
 
     /**
-     * Obtain a URL to access the resource or <code>null</code> if no such URL
+     * @return a URL to access the resource or <code>null</code> if no such URL
      * is available or if the resource does not exist.
      */
     URL getURL();
 
     /**
-     * Get code base for this resource that will be used when looking up the
+     * @return the code base for this resource that will be used when looking up the
      * assigned permissions for the code base in the security policy file when
      * running under a security manager.
      */
     URL getCodeBase();
 
     /**
-     * Obtain a reference to the WebResourceRoot of which this WebResource is a
+     * @return a reference to the WebResourceRoot of which this WebResource is a
      * part.
      */
     WebResourceRoot getWebResourceRoot();
 
     /**
-     * Obtain the certificates that were used to sign this resource to verify
+     * @return the certificates that were used to sign this resource to verify
      * it or @null if none.
      *
      * @see java.util.jar.JarEntry#getCertificates()
@@ -158,7 +162,7 @@ public interface WebResource {
     Certificate[] getCertificates();
 
     /**
-     * Obtain the manifest associated with this resource or @null if none.
+     * @return the manifest associated with this resource or @null if none.
      *
      * @see java.util.jar.JarFile#getManifest()
      */

==================================================
Wrapper.java
index 25e6cd2cd3..b4d850719d 100644
--- a/java/org/apache/catalina/WebResourceRoot.java
+++ b/java/org/apache/catalina/WebResourceRoot.java
@@ -247,11 +247,13 @@ public interface WebResourceRoot extends Lifecycle {
     /**
      * Adds the provided WebResourceSet to this web application as a 'Pre'
      * resource.
+     *
+     * @param webResourceSet the resource set to use
      */
     void addPreResources(WebResourceSet webResourceSet);
 
     /**
-     * Get the list of WebResourceSet configured to this web application
+     * @return the list of WebResourceSet configured to this web application
      * as a 'Pre' resource.
      */
     WebResourceSet[] getPreResources();
@@ -259,11 +261,13 @@ public interface WebResourceRoot extends Lifecycle {
     /**
      * Adds the provided WebResourceSet to this web application as a 'Jar'
      * resource.
+     *
+     * @param webResourceSet the resource set to use
      */
     void addJarResources(WebResourceSet webResourceSet);
 
     /**
-     * Get the list of WebResourceSet configured to this web application
+     * @return the list of WebResourceSet configured to this web application
      * as a 'Jar' resource.
      */
     WebResourceSet[] getJarResources();
@@ -271,22 +275,26 @@ public interface WebResourceRoot extends Lifecycle {
     /**
      * Adds the provided WebResourceSet to this web application as a 'Post'
      * resource.
+     *
+     * @param webResourceSet the resource set to use
      */
     void addPostResources(WebResourceSet webResourceSet);
 
     /**
-     * Get the list of WebResourceSet configured to this web application
+     * @return the list of WebResourceSet configured to this web application
      * as a 'Post' resource.
      */
     WebResourceSet[] getPostResources();
 
     /**
-     * Obtain the web application this WebResourceRoot is associated with.
+     * @return the web application this WebResourceRoot is associated with.
      */
     Context getContext();
 
     /**
      * Set the web application this WebResourceRoot is associated with.
+     *
+     * @param context the associated context
      */
     void setContext(Context context);
 
@@ -313,7 +321,7 @@ public interface WebResourceRoot extends Lifecycle {
     void setCachingAllowed(boolean cachingAllowed);
 
     /**
-     * Get whether or not caching is permitted for this web application.
+     * @return <code>true</code> if caching is permitted for this web application.
      */
     boolean isCachingAllowed();
 
@@ -397,12 +405,21 @@ public interface WebResourceRoot extends Lifecycle {
      */
     void backgroundProcess();
 
+    /**
+     * Add a specified resource to track to be able to later release
+     * resources on stop.
+     * @param trackedResource the resource that will be tracked
+     */
     void registerTrackedResource(TrackedWebResource trackedResource);
 
+    /**
+     * Stop tracking specified resource, once it no longer needs to free resources.
+     * @param trackedResource the resource that was tracked
+     */
     void deregisterTrackedResource(TrackedWebResource trackedResource);
 
     /**
-     * Obtain the set of {@link WebResourceSet#getBaseUrl()} for all
+     * @return the set of {@link WebResourceSet#getBaseUrl()} for all
      * {@link WebResourceSet}s used by this root.
      */
     List<URL> getBaseUrls();

==================================================
BaseRedirectorHelperTask.java
index 28295a91cf..4f366dd734 100644
--- a/java/org/apache/catalina/Wrapper.java
+++ b/java/org/apache/catalina/Wrapper.java
@@ -62,7 +62,7 @@ public interface Wrapper extends Container {
 
 
     /**
-     * Return the available date/time for this servlet, in milliseconds since
+     * @return the available date/time for this servlet, in milliseconds since
      * the epoch.  If this date/time is in the future, any request for this
      * servlet will return an SC_SERVICE_UNAVAILABLE error.  If it is zero,
      * the servlet is currently available.  A value equal to Long.MAX_VALUE
@@ -83,7 +83,7 @@ public interface Wrapper extends Container {
 
 
     /**
-     * Return the load-on-startup order value (negative value means
+     * @return the load-on-startup order value (negative value means
      * load on first call).
      */
     public int getLoadOnStartup();
@@ -99,7 +99,7 @@ public interface Wrapper extends Container {
 
 
     /**
-     * Return the run-as identity for this servlet.
+     * @return the run-as identity for this servlet.
      */
     public String getRunAs();
 
@@ -113,7 +113,7 @@ public interface Wrapper extends Container {
 
 
     /**
-     * Return the fully qualified servlet class name for this servlet.
+     * @return the fully qualified servlet class name for this servlet.
      */
     public String getServletClass();
 
@@ -142,19 +142,21 @@ public interface Wrapper extends Container {
 
 
     /**
-     * Is this servlet currently unavailable?
+     * @return <code>true</code> if this Servlet is currently unavailable.
      */
     public boolean isUnavailable();
 
 
     /**
-     * Return the associated servlet instance.
+     * @return the associated Servlet instance.
      */
     public Servlet getServlet();
 
 
     /**
-     * Set the associated servlet instance
+     * Set the associated Servlet instance
+     *
+     * @param servlet The associated Servlet
      */
     public void setServlet(Servlet servlet);
 
@@ -190,16 +192,17 @@ public interface Wrapper extends Container {
 
     /**
      * Allocate an initialized instance of this Servlet that is ready to have
-     * its <code>service()</code> method called.  If the servlet class does
+     * its <code>service()</code> method called.  If the Servlet class does
      * not implement <code>SingleThreadModel</code>, the (only) initialized
-     * instance may be returned immediately.  If the servlet class implements
+     * instance may be returned immediately.  If the Servlet class implements
      * <code>SingleThreadModel</code>, the Wrapper implementation must ensure
      * that this instance is not allocated again until it is deallocated by a
      * call to <code>deallocate()</code>.
      *
-     * @exception ServletException if the servlet init() method threw
+     * @exception ServletException if the Servlet init() method threw
      *  an exception
      * @exception ServletException if a loading error occurs
+     * @return a new Servlet instance
      */
     public Servlet allocate() throws ServletException;
 
@@ -217,7 +220,7 @@ public interface Wrapper extends Container {
 
 
     /**
-     * Return the value for the specified initialization parameter name,
+     * @return the value for the specified initialization parameter name,
      * if any; otherwise return <code>null</code>.
      *
      * @param name Name of the requested initialization parameter
@@ -226,20 +229,20 @@ public interface Wrapper extends Container {
 
 
     /**
-     * Return the names of all defined initialization parameters for this
+     * @return the names of all defined initialization parameters for this
      * servlet.
      */
     public String[] findInitParameters();
 
 
     /**
-     * Return the mappings associated with this wrapper.
+     * @return the mappings associated with this wrapper.
      */
     public String[] findMappings();
 
 
     /**
-     * Return the security role link for the specified security role
+     * @return the security role link for the specified security role
      * reference name, if any; otherwise return <code>null</code>.
      *
      * @param name Security role reference used within this servlet
@@ -248,7 +251,7 @@ public interface Wrapper extends Container {
 
 
     /**
-     * Return the set of security role reference names associated with
+     * @return the set of security role reference names associated with
      * this servlet, if any; otherwise return a zero-length array.
      */
     public String[] findSecurityReferences();
@@ -261,20 +264,19 @@ public interface Wrapper extends Container {
 
 
     /**
-     * Load and initialize an instance of this servlet, if there is not already
+     * Load and initialize an instance of this Servlet, if there is not already
      * at least one initialized instance.  This can be used, for example, to
-     * load servlets that are marked in the deployment descriptor to be loaded
+     * load Servlets that are marked in the deployment descriptor to be loaded
      * at server startup time.
      *
-     * @exception ServletException if the servlet init() method threw
-     *  an exception
-     * @exception ServletException if some other loading problem occurs
+     * @exception ServletException if the Servlet init() method threw
+     *  an exception or if some other loading problem occurs
      */
     public void load() throws ServletException;
 
 
     /**
-     * Remove the specified initialization parameter from this servlet.
+     * Remove the specified initialization parameter from this Servlet.
      *
      * @param name Name of the initialization parameter to remove
      */
@@ -298,11 +300,11 @@ public interface Wrapper extends Container {
 
 
     /**
-     * Process an UnavailableException, marking this servlet as unavailable
+     * Process an UnavailableException, marking this Servlet as unavailable
      * for the specified amount of time.
      *
      * @param unavailable The exception that occurred, or <code>null</code>
-     *  to mark this servlet as permanently unavailable
+     *  to mark this Servlet as permanently unavailable
      */
     public void unavailable(UnavailableException unavailable);
 
@@ -320,7 +322,7 @@ public interface Wrapper extends Container {
 
 
     /**
-     * Get the multi-part configuration for the associated servlet. If no
+     * @return the multi-part configuration for the associated Servlet. If no
      * multi-part configuration has been defined, then <code>null</code> will be
      * returned.
      */
@@ -328,8 +330,10 @@ public interface Wrapper extends Container {
 
 
     /**
-     * Set the multi-part configuration for the associated servlet. To clear the
+     * Set the multi-part configuration for the associated Servlet. To clear the
      * multi-part configuration specify <code>null</code> as the new value.
+     *
+     * @param multipartConfig The configuration associated with the Servlet
      */
     public void setMultipartConfigElement(
             MultipartConfigElement multipartConfig);
@@ -337,21 +341,29 @@ public interface Wrapper extends Container {
     /**
      * Does the associated Servlet support async processing? Defaults to
      * <code>false</code>.
+     *
+     * @return <code>true</code> if the Servlet supports async
      */
     public boolean isAsyncSupported();
 
     /**
-     * Set the async support for the associated servlet.
+     * Set the async support for the associated Servlet.
+     *
+     * @param asyncSupport the new value
      */
     public void setAsyncSupported(boolean asyncSupport);
 
     /**
      * Is the associated Servlet enabled? Defaults to <code>true</code>.
+     *
+     * @return <code>true</code> if the Servlet is enabled
      */
     public boolean isEnabled();
 
     /**
      * Sets the enabled attribute for the associated servlet.
+     *
+     * @param enabled the new value
      */
     public void setEnabled(boolean enabled);
 
@@ -368,16 +380,22 @@ public interface Wrapper extends Container {
      * Scan for (if necessary) and process (if found) the
      * {@link javax.servlet.annotation.ServletSecurity} annotations for the
      * Servlet associated with this wrapper.
+     *
+     * @throws ServletException if an annotation scanning error occurs
      */
     public void servletSecurityAnnotationScan() throws ServletException;
 
     /**
      * Is the Servlet overridable by a ServletContainerInitializer?
+     *
+     * @return <code>true</code> if the Servlet can be overridden in a ServletContainerInitializer
      */
     public boolean isOverridable();
 
     /**
      * Sets the overridable attribute for this Servlet.
+     *
+     * @param overridable the new value
      */
     public void setOverridable(boolean overridable);
 }

==================================================
