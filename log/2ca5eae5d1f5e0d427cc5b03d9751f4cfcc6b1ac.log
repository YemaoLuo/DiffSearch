2ca5eae5d1f5e0d427cc5b03d9751f4cfcc6b1ac
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56522
==================================================
Mark Emlyn
==================================================
Wed May 14 21:20:40 2014 +0000
==================================================
AstValue.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56522
When setting a value for a ValueExpression, ensure that the expected coercions take place such as a null string being coerced to an empty string.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1594723 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestValueExpressionImpl.java
index c883c9c801..a9040025ba 100644
--- a/java/org/apache/el/parser/AstValue.java
+++ b/java/org/apache/el/parser/AstValue.java
@@ -197,30 +197,14 @@ public final class AstValue extends SimpleNode {
 
         // coerce to the expected type
         Class<?> targetClass = resolver.getType(ctx, t.base, t.property);
-        if (!isAssignable(value, targetClass)) {
-            resolver.setValue(ctx, t.base, t.property,
-                    ELSupport.coerceToType(value, targetClass));
-        } else {
-            resolver.setValue(ctx, t.base, t.property, value);
-        }
+        resolver.setValue(ctx, t.base, t.property,
+                ELSupport.coerceToType(value, targetClass));
         if (!ctx.isPropertyResolved()) {
             throw new PropertyNotFoundException(MessageFactory.get(
                     "error.resolver.unhandled", t.base, t.property));
         }
     }
 
-    private boolean isAssignable(Object value, Class<?> targetClass) {
-        if (targetClass == null) {
-            return false;
-        } else if (value != null && targetClass.isPrimitive()) {
-            return false;
-        } else if (value != null && !targetClass.isInstance(value)) {
-            return false;
-        }
-        return true;
-    }
-
-
     @Override
     // Interface el.parser.Node uses raw types (and is auto-generated)
     public MethodInfo getMethodInfo(EvaluationContext ctx,

==================================================
