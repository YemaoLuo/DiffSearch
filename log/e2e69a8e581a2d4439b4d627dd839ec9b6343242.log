e2e69a8e581a2d4439b4d627dd839ec9b6343242
==================================================
Based on EG discussion, add a boolean return value to push() so the application can tell if the push was sent or not.
==================================================
Mark Thomas
==================================================
Tue Mar 8 10:11:12 2016 +0000
==================================================
PushBuilder.java
Based on EG discussion, add a boolean return value to push() so the application can tell if the push was sent or not.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1734044 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ApplicationPushBuilder.java
index b7434870fe..aff92d8657 100644
--- a/java/javax/servlet/http/PushBuilder.java
+++ b/java/javax/servlet/http/PushBuilder.java
@@ -159,7 +159,8 @@ public interface PushBuilder {
     PushBuilder lastModified(String lastModified);
 
     /**
-     * Generates the push request. After calling this method the following
+     * Generates the push request and sends it to the client unless pushes are
+     * not available for some reason. After calling this method the following
      * fields are set to {@code null}:
      * <ul>
      * <li>{@code path}</li>
@@ -167,11 +168,14 @@ public interface PushBuilder {
      * <li>{@code lastModified}</li>
      * </ul>
      *
+     * @return {@code true} if the push request was sent to the client,
+     *         otherwise {@code false}
+     *
      * @throws IllegalStateException If this method is called when {@code path}
      *         is {@code null}
      * @throws IllegalArgumentException If the request to push requires a body
      */
-    void push();
+    boolean push();
 
     /**
      * Obtain the name of the HTTP method that will be used for push requests

==================================================
Stream.java
index df4cf3fa84..76b0ee6822 100644
--- a/java/org/apache/catalina/core/ApplicationPushBuilder.java
+++ b/java/org/apache/catalina/core/ApplicationPushBuilder.java
@@ -38,6 +38,7 @@ import org.apache.catalina.Context;
 import org.apache.catalina.connector.Request;
 import org.apache.catalina.util.SessionConfig;
 import org.apache.coyote.ActionCode;
+import org.apache.coyote.PushToken;
 import org.apache.tomcat.util.buf.B2CConverter;
 import org.apache.tomcat.util.buf.HexUtils;
 import org.apache.tomcat.util.collections.CaseInsensitiveKeyMap;
@@ -322,7 +323,7 @@ public class ApplicationPushBuilder implements PushBuilder {
 
 
     @Override
-    public void push() {
+    public boolean push() {
         if (path == null) {
             throw new IllegalStateException(sm.getString("pushBuilder.noPath"));
         }
@@ -392,7 +393,8 @@ public class ApplicationPushBuilder implements PushBuilder {
         setHeader("cookie", generateCookieHeader(cookies,
                 catalinaRequest.getContext().getCookieProcessor()));
 
-        coyoteRequest.action(ActionCode.PUSH_REQUEST, pushTarget);
+        PushToken pushToken = new PushToken(pushTarget);
+        coyoteRequest.action(ActionCode.PUSH_REQUEST, pushToken);
 
         // Reset for next call to this method
         pushTarget = null;
@@ -401,6 +403,8 @@ public class ApplicationPushBuilder implements PushBuilder {
         lastModified = null;
         headers.remove("if-none-match");
         headers.remove("if-modified-since");
+
+        return pushToken.getResult();
     }
 
 

==================================================
StreamProcessor.java
index eba8c3f9af..6666482e66 100644
--- a/java/org/apache/coyote/http2/Stream.java
+++ b/java/org/apache/coyote/http2/Stream.java
@@ -382,7 +382,10 @@ public class Stream extends AbstractStream implements HeaderEmitter {
     }
 
 
-    void push(Request request) throws IOException {
+    boolean push(Request request) throws IOException {
+        if (!handler.getRemoteSettings().getEnablePush()) {
+            return false;
+        }
         // Set the special HTTP/2 headers
         request.getMimeHeaders().addValue(":method").duplicate(request.method());
         request.getMimeHeaders().addValue(":scheme").duplicate(request.scheme());
@@ -404,6 +407,8 @@ public class Stream extends AbstractStream implements HeaderEmitter {
         }
 
         push(handler, request, this);
+
+        return true;
     }
 
 

==================================================
