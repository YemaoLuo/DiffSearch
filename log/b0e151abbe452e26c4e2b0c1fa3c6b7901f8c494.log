b0e151abbe452e26c4e2b0c1fa3c6b7901f8c494
==================================================
If dispatch is called on a worker thread, simply execute it, instead of throwing exception. No need to hand off to container
==================================================
Filip Hanik
==================================================
Thu Aug 6 16:25:04 2009 +0000
==================================================
AsyncContextImpl.java
If dispatch is called on a worker thread, simply execute it, instead of throwing exception. No need to hand off to container



git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@801705 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http11NioProcessor.java
index eabb9249d7..c7f31ad622 100644
--- a/java/org/apache/catalina/connector/AsyncContextImpl.java
+++ b/java/org/apache/catalina/connector/AsyncContextImpl.java
@@ -122,7 +122,17 @@ public class AsyncContextImpl implements AsyncContext {
                 }
             };
             this.dispatch = run;
-            request.coyoteRequest.action(ActionCode.ACTION_ASYNC_DISPATCH, null );
+            AtomicBoolean dispatched = new AtomicBoolean(false);
+            request.coyoteRequest.action(ActionCode.ACTION_ASYNC_DISPATCH, dispatched );
+            if (!dispatched.get()) {
+                try {
+                    doInternalDispatch();
+                }catch (ServletException sx) {
+                    throw new RuntimeException(sx);
+                }catch (IOException ix) {
+                    throw new RuntimeException(ix);
+                }
+            }
 
         } else {
             throw new IllegalStateException("Dispatch not allowed. Invalid state:"+state.get());
@@ -154,7 +164,17 @@ public class AsyncContextImpl implements AsyncContext {
                 }
             };
             this.dispatch = r;
-            request.coyoteRequest.action(ActionCode.ACTION_ASYNC_DISPATCH, null );
+            AtomicBoolean dispatched = new AtomicBoolean(false);
+            request.coyoteRequest.action(ActionCode.ACTION_ASYNC_DISPATCH, dispatched );
+            if (!dispatched.get()) {
+                try {
+                    doInternalDispatch();
+                }catch (ServletException sx) {
+                    throw new RuntimeException(sx);
+                }catch (IOException ix) {
+                    throw new RuntimeException(ix);
+                }
+            }
         } else {
             throw new IllegalStateException("Dispatch not allowed. Invalid state:"+state.get());
         }

==================================================
