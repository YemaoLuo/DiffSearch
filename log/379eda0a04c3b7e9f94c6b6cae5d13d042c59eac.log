379eda0a04c3b7e9f94c6b6cae5d13d042c59eac
==================================================
Spelling fixes. Patch provided by Josh Soref.
==================================================
Violeta Georgieva
==================================================
Tue Jan 10 15:22:47 2017 +0000
==================================================
InputBuffer.java
Spelling fixes. Patch provided by Josh Soref.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1778141 13f79535-47bb-0310-9956-ffa450edef68



==================================================
HPackHuffman.java
index 6e5e9d51b7..e30a51e2de 100644
--- a/java/org/apache/coyote/InputBuffer.java
+++ b/java/org/apache/coyote/InputBuffer.java
@@ -28,11 +28,11 @@ public interface InputBuffer {
 
     /**
      * Read from the input stream into the ByteBuffer provided by the
-     * ApplicaitonBufferHandler.
+     * ApplicationBufferHandler.
      * IMPORTANT: the current model assumes that the protocol will 'own' the
      * ByteBuffer and return a pointer to it.
      *
-     * @param handler ApplicaitonBufferHandler that provides the buffer to read
+     * @param handler ApplicationBufferHandler that provides the buffer to read
      *                data into.
      *
      * @return The number of bytes that have been added to the buffer or -1 for

==================================================
Hpack.java
index 8f79ef84e7..54c6a3106e 100644
--- a/java/org/apache/coyote/http2/HPackHuffman.java
+++ b/java/org/apache/coyote/http2/HPackHuffman.java
@@ -517,7 +517,7 @@ public class HPackHuffman {
 
     protected static class HuffmanCode {
         /**
-         * The value of the least significan't bits of the code
+         * The value of the least significant bits of the code
          */
         int value;
         /**

==================================================
Stream.java
index 1e71f47c9a..82b7ff5715 100644
--- a/java/org/apache/coyote/http2/LocalStrings.properties
+++ b/java/org/apache/coyote/http2/LocalStrings.properties
@@ -72,14 +72,14 @@ pingManager.roundTripTime=Connection [{0}] Round trip time measured as [{1}]ns
 
 stream.closed=Connection [{0}], Stream [{1}], Unable to write to stream once it has been closed
 stream.header.debug=Connection [{0}], Stream [{1}], HTTP header [{2}], Value [{3}]
-stream.header.unexpectedPseudoHeader=Connection [{0}], Stream [{1}], Pseduo header [{2}] received after a regular header
-stream.header.unknownPseudoHeader=Connection [{0}], Stream [{1}], Unknown pseduo header [{2}] received
+stream.header.unexpectedPseudoHeader=Connection [{0}], Stream [{1}], Pseudo header [{2}] received after a regular header
+stream.header.unknownPseudoHeader=Connection [{0}], Stream [{1}], Unknown pseudo header [{2}] received
 stream.notWritable=Connection [{0}], Stream [{1}], This stream is not writable
 stream.reprioritisation.debug=Connection [{0}], Stream [{1}], Exclusive [{2}], Parent [{3}], Weight [{4}]
 stream.reset.fail=Connection [{0}], Stream [{1}], Failed to reset stream
 stream.reset.receive=Connection [{0}], Stream [{1}], Reset received due to [{2}]
 stream.reset.send=Connection [{0}], Stream [{1}], Reset sent due to [{2}]
-stream.trialerHeader.noEndOfStream=Connection [{0}], Stream [{1}], The trailer headers did not include the end of stream flag
+stream.trailerHeader.noEndOfStream=Connection [{0}], Stream [{1}], The trailer headers did not include the end of stream flag
 stream.write=Connection [{0}], Stream [{1}]
 
 stream.inputBuffer.copy=Copying [{0}] bytes from inBuffer to outBuffer

==================================================
StreamStateMachine.java
index d95d73667b..242b48a8ff 100644
--- a/java/org/apache/coyote/http2/Stream.java
+++ b/java/org/apache/coyote/http2/Stream.java
@@ -90,7 +90,7 @@ class Stream extends AbstractStream implements HeaderEmitter {
             // Headers have been populated by this point
             state.receivedStartOfHeaders();
             // TODO Assuming the body has been read at this point is not valid
-            state.recievedEndOfStream();
+            state.receivedEndOfStream();
         }
         // No sendfile for HTTP/2 (it is enabled by default in the request)
         this.coyoteRequest.setSendfile(false);
@@ -387,7 +387,7 @@ class Stream extends AbstractStream implements HeaderEmitter {
                 handler.getHpackDecoder().setMaxHeaderCount(handler.getMaxTrailerCount());
                 handler.getHpackDecoder().setMaxHeaderSize(handler.getMaxTrailerSize());
             } else {
-                throw new ConnectionException(sm.getString("stream.trialerHeader.noEndOfStream",
+                throw new ConnectionException(sm.getString("stream.trailerHeader.noEndOfStream",
                         getConnectionId(), getIdentifier()), Http2Error.PROTOCOL_ERROR);
             }
         }
@@ -401,7 +401,7 @@ class Stream extends AbstractStream implements HeaderEmitter {
         synchronized (inputBuffer) {
             inputBuffer.notifyAll();
         }
-        state.recievedEndOfStream();
+        state.receivedEndOfStream();
     }
 
 

==================================================
Generator.java
index 9f61d13318..313ad2cba9 100644
--- a/java/org/apache/coyote/http2/StreamStateMachine.java
+++ b/java/org/apache/coyote/http2/StreamStateMachine.java
@@ -65,7 +65,7 @@ class StreamStateMachine {
     }
 
 
-    final synchronized void recievedEndOfStream() {
+    final synchronized void receivedEndOfStream() {
         stateChange(State.OPEN, State.HALF_CLOSED_REMOTE);
         stateChange(State.HALF_CLOSED_LOCAL, State.CLOSED_RX);
     }

==================================================
JspConfig.java
index e4c3db4b7d..58069706c9 100644
--- a/java/org/apache/jasper/compiler/Generator.java
+++ b/java/org/apache/jasper/compiler/Generator.java
@@ -1390,7 +1390,7 @@ class Generator {
                 }
             }
 
-            // JSP.5.1, Sematics, para 1 - lock not required for request or
+            // JSP.5.1, Semantics, para 1 - lock not required for request or
             // page scope
             String scopename = "javax.servlet.jsp.PageContext.PAGE_SCOPE"; // Default to page
             String lock = null;

==================================================
JspUtil.java
index 457d232b60..e4092d4efb 100644
--- a/java/org/apache/jasper/compiler/JspConfig.java
+++ b/java/org/apache/jasper/compiler/JspConfig.java
@@ -339,7 +339,7 @@ public class JspConfig {
         String isTrimDirectiveWhitespaces = defaultTrimDirectiveWhitespaces;
         String defaultContentType = defaultDefaultContentType;
         String buffer = defaultBuffer;
-        String errorOnUndelcaredNamespace = defaultErrorOnUndeclaredNamespace;
+        String errorOnUndeclaredNamespace = defaultErrorOnUndeclaredNamespace;
 
         if (isXmlMatch != null) {
             isXml = isXmlMatch.getJspProperty().isXml();
@@ -370,14 +370,14 @@ public class JspConfig {
             buffer = bufferMatch.getJspProperty().getBuffer();
         }
         if (errorOnUndeclaredNamespaceMatch != null) {
-            errorOnUndelcaredNamespace =
+            errorOnUndeclaredNamespace =
                 errorOnUndeclaredNamespaceMatch.getJspProperty().isErrorOnUndeclaredNamespace();
         }
 
         return new JspProperty(isXml, isELIgnored, isScriptingInvalid,
                 pageEncoding, includePreludes, includeCodas,
                 isDeferedSyntaxAllowedAsLiteral, isTrimDirectiveWhitespaces,
-                defaultContentType, buffer, errorOnUndelcaredNamespace);
+                defaultContentType, buffer, errorOnUndeclaredNamespace);
     }
 
     /**

==================================================
Node.java
index 1be65308bd..7fc1047774 100644
--- a/java/org/apache/jasper/compiler/JspUtil.java
+++ b/java/org/apache/jasper/compiler/JspUtil.java
@@ -868,7 +868,7 @@ public class JspUtil {
     /**
      * Mangle the specified character to create a legal Java class name.
      * @param ch The character
-     * @return the replacement charater as a string
+     * @return the replacement character as a string
      */
     public static final String mangleChar(char ch) {
         char[] result = new char[5];

==================================================
PageInfo.java
index 324c4b56af..01b6f50e00 100644
--- a/java/org/apache/jasper/compiler/Node.java
+++ b/java/org/apache/jasper/compiler/Node.java
@@ -229,7 +229,7 @@ abstract class Node implements TagConstants {
 
     /**
      * Get the attribute that is non request time expression, either from the
-     * attribute of the node, or from a jsp:attrbute
+     * attribute of the node, or from a jsp:attribute
      *
      * @param name The name of the attribute
      *

==================================================
ParserController.java
index 0a9993cbb6..9aed5ba592 100644
--- a/java/org/apache/jasper/compiler/PageInfo.java
+++ b/java/org/apache/jasper/compiler/PageInfo.java
@@ -97,7 +97,7 @@ class PageInfo {
     private final Vector<String> pluginDcls;  // Id's for tagplugin declarations
 
     // JSP 2.2
-    private boolean errorOnUndeclaredNamepsace = false;
+    private boolean errorOnUndeclaredNamespace = false;
 
     private final boolean isTagFile;
 
@@ -721,11 +721,11 @@ class PageInfo {
     }
 
     public boolean isErrorOnUndeclaredNamespace() {
-        return errorOnUndeclaredNamepsace;
+        return errorOnUndeclaredNamespace;
     }
 
     public void setErrorOnUndeclaredNamespace(
             boolean errorOnUndeclaredNamespace) {
-        this.errorOnUndeclaredNamepsace = errorOnUndeclaredNamespace;
+        this.errorOnUndeclaredNamespace = errorOnUndeclaredNamespace;
     }
 }

==================================================
SmapUtil.java
index 26b89dd27f..54cf490882 100644
--- a/java/org/apache/jasper/compiler/ParserController.java
+++ b/java/org/apache/jasper/compiler/ParserController.java
@@ -157,7 +157,7 @@ class ParserController implements TagConstants {
      * @param inFileName    The name of the tag file to be parsed.
      * @param jar The location of the tag file.
      *
-     * @return The parsed tage file nodes
+     * @return The parsed tag file nodes
      *
      * @throws JasperException If an error occurs during parsing
      * @throws IOException If an I/O error occurs such as the file not being

==================================================
Validator.java
index 0a0fe8f582..d4f11dabf1 100644
--- a/java/org/apache/jasper/compiler/SmapUtil.java
+++ b/java/org/apache/jasper/compiler/SmapUtil.java
@@ -255,7 +255,7 @@ public class SmapUtil {
                 // if "SourceDebugExtension" symbol not there add it
                 writeUtf8ForSDE();
 
-                // increment the countantPoolCount
+                // increment the constantPoolCount
                 sdeIndex = constantPoolCount;
                 ++constantPoolCount;
                 randomAccessWriteU2(constantPoolCountPos, constantPoolCount);

==================================================
TagPluginContext.java
index aaab5545e7..f0d80d142d 100644
--- a/java/org/apache/jasper/compiler/Validator.java
+++ b/java/org/apache/jasper/compiler/Validator.java
@@ -997,7 +997,7 @@ class Validator {
             }
 
             if (doctypePublic != null && doctypeSystem == null) {
-                err.jspError(n, "jsp.error.jspoutput.doctypepulicsystem");
+                err.jspError(n, "jsp.error.jspoutput.doctypepublicsystem");
             }
 
             if (omitXmlDecl != null) {
@@ -1718,7 +1718,7 @@ class Validator {
                 @Override
                 public void visit(ELNode.Function n) throws JasperException {
 
-                    // Lambda / ImportHandler defined fucntion
+                    // Lambda / ImportHandler defined function
                     if (n.getFunctionInfo() == null) {
                         return;
                     }

==================================================
JspApplicationContextImpl.java
index c41e8507e6..9c01830a38 100644
--- a/java/org/apache/jasper/resources/LocalStrings.properties
+++ b/java/org/apache/jasper/resources/LocalStrings.properties
@@ -325,7 +325,7 @@ jsp.error.xml.closeQuoteMissingInXMLDecl = closing quote in the value following
 jsp.error.multiple.jsp = Cannot have multiple specifications of
 jsp.error.jspoutput.conflict=&lt;jsp:output&gt;: illegal to have multiple occurrences of \"{0}\" with different values (old: {1}, new: {2})
 jsp.error.jspoutput.doctypenamesystem=&lt;jsp:output&gt;: 'doctype-root-element' and 'doctype-system' attributes must appear together
-jsp.error.jspoutput.doctypepulicsystem=&lt;jsp:output&gt;: 'doctype-system' attribute must appear if 'doctype-public' attribute appears
+jsp.error.jspoutput.doctypepublicsystem=&lt;jsp:output&gt;: 'doctype-system' attribute must appear if 'doctype-public' attribute appears
 jsp.error.jspoutput.nonemptybody=&lt;jsp:output&gt; must not have a body
 jsp.error.jspoutput.invalidUse=&lt;jsp:output&gt; must not be used in standard syntax
 jsp.error.attributes.not.allowed = {0} must not have any attributes
@@ -409,7 +409,7 @@ jsp.error.el_interpreter_class.instantiation=Failed to load or instantiate ELInt
 org.apache.jasper.compiler.ELParser.invalidQuotesForStringLiteral=The String literal [{0}] is not valid. It must be contained within single or double quotes.
 org.apache.jasper.compiler.ELParser.invalidQuoting=The expression [{0}] is not valid. Within a quoted String only [\\], [''] and ["] may be escaped with [\\].
 
-org.apache.jasper.compiler.TldCache.servletContextNull=The provided SevletContext was null
+org.apache.jasper.compiler.TldCache.servletContextNull=The provided ServletContext was null
 
 org.apache.jasper.servlet.JasperInitializer.onStartup=Initializing Jasper for context [{0}]
 org.apache.jasper.servlet.TldScanner.webxmlSkip=Skipping load of TLD for URI {1} from resource path {0} as it has already been defined in <jsp-config>

==================================================
Otherwise.java
index 4b82f0308e..10842d3c30 100644
--- a/java/org/apache/jasper/runtime/JspApplicationContextImpl.java
+++ b/java/org/apache/jasper/runtime/JspApplicationContextImpl.java
@@ -61,7 +61,7 @@ public class JspApplicationContextImpl implements JspApplicationContext {
     @Override
     public void addELContextListener(ELContextListener listener) {
         if (listener == null) {
-            throw new IllegalArgumentException("ELConextListener was null");
+            throw new IllegalArgumentException("ELContextListener was null");
         }
         this.contextListeners.add(listener);
     }

==================================================
Param.java
index 4608c33ac8..732772b8ec 100644
--- a/java/org/apache/jasper/tagplugins/jstl/core/Otherwise.java
+++ b/java/org/apache/jasper/tagplugins/jstl/core/Otherwise.java
@@ -26,7 +26,7 @@ public final class Otherwise implements TagPlugin {
     @Override
     public void doTag(TagPluginContext ctxt) {
 
-        // See When.java for the reason whey "}" is need at the beginng and
+        // See When.java for the reason whey "}" is need at the beginning and
         // not at the end.
         ctxt.generateJavaSource("} else {");
         ctxt.generateBody();

==================================================
FastRemovalDequeue.java
index e94e023ac0..43ae86b2fe 100644
--- a/java/org/apache/jasper/tagplugins/jstl/core/Param.java
+++ b/java/org/apache/jasper/tagplugins/jstl/core/Param.java
@@ -38,7 +38,7 @@ public class Param implements TagPlugin {
         //if the param tag has no parents, throw a exception
         TagPluginContext parent = ctxt.getParentContext();
         if(parent == null){
-            ctxt.generateJavaSource(" throw new JspTagExcption" +
+            ctxt.generateJavaSource(" throw new JspTagException" +
             "(\"&lt;param&gt; outside &lt;import&gt; or &lt;urlEncode&gt;\");");
             return;
         }

==================================================
ClassLoaderLogManager.java
index 680d7303ae..88d5bcd32c 100644
--- a/java/org/apache/jasper/util/FastRemovalDequeue.java
+++ b/java/org/apache/jasper/util/FastRemovalDequeue.java
@@ -75,7 +75,7 @@ public class FastRemovalDequeue<T> {
 
     /**
      * Retrieve the size of the list.
-     * This method also needs to be externaly synchronized to
+     * This method also needs to be externally synchronized to
      * ensure correct publication of changes.
      *
      * @return the size of the list.
@@ -205,7 +205,7 @@ public class FastRemovalDequeue<T> {
      * Moves the element in front.
      *
      * Could also be implemented as remove() and
-     * push(), but explicitely coding might be a bit faster.
+     * push(), but explicitly coding might be a bit faster.
      *
      * @param element the entry to move in front.
      * */

==================================================
OneLineFormatter.java
index 313a6523f5..d31b865846 100644
--- a/java/org/apache/juli/ClassLoaderLogManager.java
+++ b/java/org/apache/juli/ClassLoaderLogManager.java
@@ -550,7 +550,7 @@ public class ClassLoaderLogManager extends LogManager {
                     continue;
                 }
                 // Parse and remove a prefix (prefix start with a digit, such as
-                // "10WebappFooHanlder.")
+                // "10WebappFooHandler.")
                 if (Character.isDigit(handlerClassName.charAt(0))) {
                     int pos = handlerClassName.indexOf('.');
                     if (pos >= 0) {

==================================================
FactoryBase.java
index c51659f1d2..f598495b01 100644
--- a/java/org/apache/juli/OneLineFormatter.java
+++ b/java/org/apache/juli/OneLineFormatter.java
@@ -39,7 +39,7 @@ import java.util.logging.LogRecord;
 public class OneLineFormatter extends Formatter {
 
     private static final String ST_SEP = System.lineSeparator() + " ";
-    private static final String UNKONWN_THREAD_NAME = "Unknown thread with ID ";
+    private static final String UNKNOWN_THREAD_NAME = "Unknown thread with ID ";
     private static final Object threadMxBeanLock = new Object();
     private static volatile ThreadMXBean threadMxBean = null;
     private static final int THREAD_NAME_CACHE_SIZE = 10000;
@@ -204,7 +204,7 @@ public class OneLineFormatter extends Formatter {
         }
 
         if (logRecordThreadId > Integer.MAX_VALUE / 2) {
-            result = UNKONWN_THREAD_NAME + logRecordThreadId;
+            result = UNKNOWN_THREAD_NAME + logRecordThreadId;
         } else {
             // Double checked locking OK as threadMxBean is volatile
             if (threadMxBean == null) {

==================================================
SignCode.java
index 4147e40f3b..bd16b3dc99 100644
--- a/java/org/apache/naming/factory/FactoryBase.java
+++ b/java/org/apache/naming/factory/FactoryBase.java
@@ -121,7 +121,7 @@ public abstract class FactoryBase implements ObjectFactory {
      * @return  The default factory for the given reference object or
      *          <code>null</code> if no default factory exists.
      *
-     * @throws NamingException  If the default factory cannot be craeted
+     * @throws NamingException  If the default factory cannot be created
      */
     protected abstract ObjectFactory getDefaultFactory(Reference ref)
             throws NamingException;

==================================================
Registry.java
index eb8474d560..e072ecbc35 100644
--- a/java/org/apache/tomcat/buildutil/SignCode.java
+++ b/java/org/apache/tomcat/buildutil/SignCode.java
@@ -182,7 +182,7 @@ public class SignCode extends Task {
         SOAPConnectionFactory soapConnectionFactory = SOAPConnectionFactory.newInstance();
         SOAPConnection connection = soapConnectionFactory.createConnection();
 
-        log("Sending siging request to server and waiting for response");
+        log("Sending singing request to server and waiting for response");
         SOAPMessage response = connection.call(message, SIGNING_SERVICE_URL);
 
         log("Processing response");

==================================================
Status.java
index e1f814c461..209e02fec6 100644
--- a/java/org/apache/tomcat/jni/Registry.java
+++ b/java/org/apache/tomcat/jni/Registry.java
@@ -17,7 +17,7 @@
 
 package org.apache.tomcat.jni;
 
-/** Windows Registy support
+/** Windows Registry support
  *
  * @author Mladen Turk
  */

==================================================
ByteChunk.java
index 53b5dd4097..56d94454e5 100644
--- a/java/org/apache/tomcat/jni/Status.java
+++ b/java/org/apache/tomcat/jni/Status.java
@@ -144,7 +144,7 @@ public class Status {
      * APR_ANONYMOUS      APR is using anonymous shared memory
      * APR_FILEBASED      APR is using a file name as the key to the shared memory
      * APR_KEYBASED       APR is using a shared key as the key to the shared memory
-     * APR_EINIT          Ininitalizer value.  If no option has been found, but
+     * APR_EINIT          Initializer value.  If no option has been found, but
      *                    the status variable requires a value, this should be used
      * APR_ENOTIMPL       The APR function has not been implemented on this
      *                    platform, either because nobody has gotten to it yet,

==================================================
ContextHandler.java
index 5d55efc3fe..389cd8629b 100644
--- a/java/org/apache/tomcat/util/buf/package.html
+++ b/java/org/apache/tomcat/util/buf/package.html
@@ -26,7 +26,7 @@ B2C converters are caching a ISReader/OSWriter and keep everything allocated to
 in any VM without any garbage.
 
 <p>
-This package must accomodate future extensions and additional converters ( most imporant: the nio.charset,
+This package must accomodate future extensions and additional converters ( most important: the nio.charset,
 which should be detected and used if available ). Also, we do have one hand-written UTF8Decoder, and
 other tuned encoders could be added.
 

==================================================
SecurityConstraint.java
index 8c303f8470..4b35fa32e8 100644
--- a/java/org/apache/tomcat/util/descriptor/web/ContextHandler.java
+++ b/java/org/apache/tomcat/util/descriptor/web/ContextHandler.java
@@ -50,7 +50,7 @@ public class ContextHandler extends ResourceBase {
 
     /**
      * A list of QName specifying the SOAP Headers the handler will work on.
-     * -namespace and locapart values must be found inside the WSDL.
+     * -namespace and localpart values must be found inside the WSDL.
      *
      * A service-qname is composed by a namespaceURI and a localpart.
      *

==================================================
WebXml.java
index e0b7f4d09a..c7ded6db57 100644
--- a/java/org/apache/tomcat/util/descriptor/web/SecurityConstraint.java
+++ b/java/org/apache/tomcat/util/descriptor/web/SecurityConstraint.java
@@ -361,7 +361,7 @@ public class SecurityConstraint extends XmlEncodingBase implements Serializable
 
 
     /**
-     * Check if the contraint applies to a URI and method.
+     * Check if the constraint applies to a URI and method.
      * @param uri Context-relative URI to check
      * @param method Request method being used
      * @return <code>true</code> if the specified context-relative URI (and

==================================================
BaseModelMBean.java
index bce32164fb..dd864db5f3 100644
--- a/java/org/apache/tomcat/util/digester/package.html
+++ b/java/org/apache/tomcat/util/digester/package.html
@@ -224,7 +224,7 @@ and pushes it on the stack when the beginning of a particular XML element is
 encountered. The object will remain there while the nested content of this
 element is processed, and it will be popped off when the end of the element
 is encountered.  As we will see, the standard "object create" processing rule
-supports exactly this functionalility in a very convenient way.</p>
+supports exactly this functionality in a very convenient way.</p>
 
 <p>Several potential issues with this design pattern are addressed by other
 features of the Digester functionality:</p>
@@ -724,7 +724,7 @@ is done by following these steps:</p>
 
 <ol>
 <li>Tell <code>Digester</code> that you will be doing namespace
-    aware parsing, by adding this statement in your initalization
+    aware parsing, by adding this statement in your initialization
     of the Digester's properties:
     <pre>
     digester.setNamespaceAware(true);
@@ -815,7 +815,7 @@ Your implementation of the <code>match()</code> method will be called when the
 processing for a particular element is started or ended, and you must return
 a <code>List</code> of the rules that are relevant for the current nesting
 pattern.  The order of the rules you return <strong>is</strong> significant,
-and should match the order in which rules were initally added.</p>
+and should match the order in which rules were initially added.</p>
 
 <p>Your policy for rule selection should generally be sensitive to whether
 <a href="#doc.Namespace">Namespace Aware Parsing</a> is taking place.  In
@@ -962,7 +962,7 @@ public class MyRuleSet extends RuleSetBase {
 <h3>Using Named Stacks For Inter-Rule Communication</h3>
 <p>
 <code>Digester</code> is based on <code>Rule</code> instances working together
-to process xml. For anything other than the most trival processing,
+to process xml. For anything other than the most trivial processing,
 communication between <code>Rule</code> instances is necessary. Since <code>Rule</code>
 instances are processed in sequence, this usually means storing an Object
 somewhere where later instances can retrieve it.
@@ -1018,7 +1018,7 @@ The <code><em>public-identifier</em></code> is an additional free identifier whi
 </p>
 <p>
 In practice, the weakness with a <code><em>system-identifier</em></code> is that most parsers
-will attempt to interprete this URI as an URL, try to download the resource directly
+will attempt to interpret this URI as an URL, try to download the resource directly
 from the URL and stop the parsing if this download fails. So, this means that
 almost always the URI will have to be an URL from which the declaration
 can be downloaded.
@@ -1041,7 +1041,7 @@ The <code><em>public-identifier</em></code> is a freely defined name but (in pra
 strongly recommended that a unique, readable and open format is used (for reasons
 that should become clear later). A Formal Public Identifier (FPI) is a very
 common choice. This public identifier is often used to provide a unique and location
-independent key which can be used to subsistute local resources for remote ones
+independent key which can be used to substitute local resources for remote ones
 (hint: this is why ;).
 </p>
 <p>
@@ -1086,7 +1086,7 @@ Digestion throws two kinds of <code>Exception</code>:
     <li><code>org.xml.sax.SAXException</code></li>
 </ul>
 <p>
-The first is rarely thrown and indicates the kind of fundemental IO exception
+The first is rarely thrown and indicates the kind of fundamental IO exception
 that developers know all about. The second is thrown by SAX parsers when the processing
 of the XML cannot be completed. So, to diagnose the cause a certain familiarity with
 the way that SAX error handling works is very useful.
@@ -1191,7 +1191,7 @@ However, an <code>IllegalAccessException</code> is thrown if the method is invok
 <p><code>MethodUtils</code> contains a workaround for this situation.
 It will attempt to call <code>setAccessible</code> on this method.
 If this call succeeds, then the method can be invoked as normal.
-This call will only succeed when the application has sufficient security privilages.
+This call will only succeed when the application has sufficient security privileges.
 If this call fails then a warning will be logged and the method may fail.</p>
 
 <p><code>Digester</code> uses <code>MethodUtils</code> and so there may be an issue accessing methods

==================================================
Registry.java
index 2efcf545e7..5a031508f0 100644
--- a/java/org/apache/tomcat/util/modeler/BaseModelMBean.java
+++ b/java/org/apache/tomcat/util/modeler/BaseModelMBean.java
@@ -62,7 +62,7 @@ import org.apache.juli.logging.LogFactory;
  *    like Object and Class.
  *  - setModelMBean is no longer called on resources ( not used in tomcat )
  *  - no caching of Methods for now - operations and setters are not called repeatedly in most
- *  management use cases. Getters should't be called very frequently either - and even if they
+ *  management use cases. Getters shouldn't be called very frequently either - and even if they
  *  are, the overhead of getting the method should be small compared with other JMX costs ( RMI, etc ).
  *  We can add getter cache if needed.
  *  - removed unused constructor, fields

==================================================
NioEndpoint.java
index 5ced01b533..d31a72118e 100644
--- a/java/org/apache/tomcat/util/net/LocalStrings.properties
+++ b/java/org/apache/tomcat/util/net/LocalStrings.properties
@@ -79,7 +79,7 @@ endpoint.nio2.exclusiveExecutor=The NIO2 connector requires an exclusive executo
 
 channel.nio.interrupted=The current thread was interrupted
 channel.nio.ssl.notHandshaking=NOT_HANDSHAKING during handshake
-channel.nio.ssl.handhakeError=Handshake error
+channel.nio.ssl.handshakeError=Handshake error
 channel.nio.ssl.unexpectedStatusDuringWrap=Unexpected status [{0}] during handshake WRAP.
 channel.nio.ssl.unexpectedStatusDuringUnwrap=Unexpected status [{0}] during handshake UNWRAP.
 channel.nio.ssl.invalidStatus=Unexpected status [{0}].

==================================================
SecureNio2Channel.java
index 4e703c60be..c65b8f17ba 100644
--- a/java/org/apache/tomcat/util/net/NioEndpoint.java
+++ b/java/org/apache/tomcat/util/net/NioEndpoint.java
@@ -504,7 +504,7 @@ public class NioEndpoint extends AbstractJsseEndpoint<NioChannel,SocketChannel>
         @Override
         public String toString() {
             return "Poller event: socket [" + socket + "], socketWrapper [" + socketWrapper +
-                    "], interstOps [" + interestOps + "]";
+                    "], interestOps [" + interestOps + "]";
         }
     }
 

==================================================
OpenSSLContext.java
index 04ca1ba909..d82e95e949 100644
--- a/java/org/apache/tomcat/util/net/openssl/LocalStrings.properties
+++ b/java/org/apache/tomcat/util/net/openssl/LocalStrings.properties
@@ -21,7 +21,7 @@ openssl.keyManagerMissing=No key manager found
 openssl.trustManagerMissing=No trust manager found
 
 engine.engineClosed=Engine is closed
-engine.renegociationUnsupported=Renegociation is not supported
+engine.renegotiationUnsupported=Renegotiation is not supported
 engine.oversizedPacket=Encrypted packet is oversized
 engine.ciphersFailure=Failed getting cipher list
 engine.noSSLContext=No SSL context

==================================================
OpenSSLImplementation.java
index e33464527c..a6716d1b41 100644
--- a/java/org/apache/tomcat/util/net/openssl/OpenSSLContext.java
+++ b/java/org/apache/tomcat/util/net/openssl/OpenSSLContext.java
@@ -349,17 +349,17 @@ public class OpenSSLContext implements org.apache.tomcat.util.net.SSLContext {
         Type type = certificate.getType();
         String result = null;
 
-        List<Type> candidiateTypes = new ArrayList<>();
+        List<Type> candidateTypes = new ArrayList<>();
         if (Type.UNDEFINED.equals(type)) {
             // Try all types to find an suitable alias
-            candidiateTypes.addAll(Arrays.asList(Type.values()));
-            candidiateTypes.remove(Type.UNDEFINED);
+            candidateTypes.addAll(Arrays.asList(Type.values()));
+            candidateTypes.remove(Type.UNDEFINED);
         } else {
             // Look for the specific type to find a suitable alias
-            candidiateTypes.add(type);
+            candidateTypes.add(type);
         }
 
-        Iterator<Type> iter = candidiateTypes.iterator();
+        Iterator<Type> iter = candidateTypes.iterator();
         while (result == null && iter.hasNext()) {
             result = keyManager.chooseServerAlias(iter.next().toString(),  null,  null);
         }

==================================================
WsRemoteEndpointImplBase.java
index e3bebe40db..7be9a5ad54 100644
--- a/java/org/apache/tomcat/websocket/LocalStrings.properties
+++ b/java/org/apache/tomcat/websocket/LocalStrings.properties
@@ -85,7 +85,7 @@ wsRemoteEndpoint.invalidEncoder=The specified encoder of type [{0}] could not be
 wsRemoteEndpoint.noEncoder=No encoder specified for object of class [{0}]
 wsRemoteEndpoint.nullData=Invalid null data argument
 wsRemoteEndpoint.nullHandler=Invalid null handler argument
-wsRemoteEndpoint.sendInterupt=The current thread was interrupted while waiting for a blocking send to complete
+wsRemoteEndpoint.sendInterrupt=The current thread was interrupted while waiting for a blocking send to complete
 wsRemoteEndpoint.tooMuchData=Ping or pong may not send more than 125 bytes
 wsRemoteEndpoint.wrongState=The remote endpoint was in state [{0}] which is an invalid state for called method
 

==================================================
