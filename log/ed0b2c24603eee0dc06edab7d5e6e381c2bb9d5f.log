ed0b2c24603eee0dc06edab7d5e6e381c2bb9d5f
==================================================
Reduce duplication in HttpProcessor implementation constructors
==================================================
Mark Thomas
==================================================
Thu Jan 15 11:12:34 2015 +0000
==================================================
AbstractHttp11Processor.java
Reduce duplication in HttpProcessor implementation constructors

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1652055 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http11AprProcessor.java
index 87be174767..60648e4847 100644
--- a/java/org/apache/coyote/http11/AbstractHttp11Processor.java
+++ b/java/org/apache/coyote/http11/AbstractHttp11Processor.java
@@ -227,9 +227,19 @@ public abstract class AbstractHttp11Processor<S> extends AbstractProcessor<S> {
     protected HttpUpgradeHandler httpUpgradeHandler = null;
 
 
-    public AbstractHttp11Processor(AbstractEndpoint<S> endpoint) {
+    public AbstractHttp11Processor(int maxHttpHeaderSize, AbstractEndpoint<S> endpoint,
+            int maxTrailerSize, int maxExtensionSize, int maxSwallowSize) {
+
         super(endpoint);
         userDataHelper = new UserDataHelper(getLog());
+
+        inputBuffer = new Http11InputBuffer(request, maxHttpHeaderSize);
+        request.setInputBuffer(getInputBuffer());
+
+        outputBuffer = new Http11OutputBuffer(response, maxHttpHeaderSize);
+        response.setOutputBuffer(getOutputBuffer());
+
+        initializeFilters(maxTrailerSize, maxExtensionSize, maxSwallowSize);
     }
 
 

==================================================
Http11Nio2Processor.java
index b6602cbccc..341d3def0e 100644
--- a/java/org/apache/coyote/http11/Http11AprProcessor.java
+++ b/java/org/apache/coyote/http11/Http11AprProcessor.java
@@ -50,21 +50,13 @@ public class Http11AprProcessor extends AbstractHttp11Processor<Long> {
         return log;
     }
 
-    // ----------------------------------------------------------- Constructors
 
+    // ----------------------------------------------------------- Constructors
 
-    public Http11AprProcessor(int headerBufferSize, AbstractEndpoint<Long> endpoint,
+    public Http11AprProcessor(int maxHttpHeaderSize, AbstractEndpoint<Long> endpoint,
             int maxTrailerSize, int maxExtensionSize, int maxSwallowSize) {
 
-        super(endpoint);
-
-        inputBuffer = new Http11InputBuffer(request, headerBufferSize);
-        request.setInputBuffer(getInputBuffer());
-
-        outputBuffer = new Http11OutputBuffer(response, headerBufferSize);
-        response.setOutputBuffer(getOutputBuffer());
-
-        initializeFilters(maxTrailerSize, maxExtensionSize, maxSwallowSize);
+        super(maxHttpHeaderSize, endpoint, maxTrailerSize, maxExtensionSize, maxSwallowSize);
     }
 
 

==================================================
Http11NioProcessor.java
index ea3b74b5b4..14448d8358 100644
--- a/java/org/apache/coyote/http11/Http11Nio2Processor.java
+++ b/java/org/apache/coyote/http11/Http11Nio2Processor.java
@@ -54,21 +54,13 @@ public class Http11Nio2Processor extends AbstractHttp11Processor<Nio2Channel> {
      */
     protected SSLSupport sslSupport;
 
-    // ----------------------------------------------------------- Constructors
 
+    // ----------------------------------------------------------- Constructors
 
     public Http11Nio2Processor(int maxHttpHeaderSize, AbstractEndpoint<Nio2Channel> endpoint,
             int maxTrailerSize, int maxExtensionSize, int maxSwallowSize) {
 
-        super(endpoint);
-
-        inputBuffer = new Http11InputBuffer(request, maxHttpHeaderSize);
-        request.setInputBuffer(getInputBuffer());
-
-        outputBuffer = new Http11OutputBuffer(response, maxHttpHeaderSize);
-        response.setOutputBuffer(getOutputBuffer());
-
-        initializeFilters(maxTrailerSize, maxExtensionSize, maxSwallowSize);
+        super(maxHttpHeaderSize, endpoint, maxTrailerSize, maxExtensionSize, maxSwallowSize);
     }
 
 

==================================================
