fa64c162a505bf36c0335d713dea5606f9185dc2
==================================================
Clarify @since tags. Add missins @since tags.
==================================================
Mark Thomas
==================================================
Tue Oct 12 08:02:30 2021 +0100
==================================================
MethodReference.java
Clarify @since tags. Add missins @since tags.


==================================================
FilterChain.java
index c2ae33852e..ed59a842d4 100644
--- a/java/jakarta/el/MethodReference.java
+++ b/java/jakarta/el/MethodReference.java
@@ -21,6 +21,8 @@ import java.util.Arrays;
 
 /**
  * Provides information about the method to which a method expression resolves.
+ *
+ * @since EL 5.0
  */
 public class MethodReference {
 

==================================================
ServletContext.java
index 86d3f30dc6..535853f442 100644
--- a/java/jakarta/servlet/FilterChain.java
+++ b/java/jakarta/servlet/FilterChain.java
@@ -44,8 +44,6 @@ public interface FilterChain {
      * @throws IOException if an I/O error occurs during the processing of the
      *                     request
      * @throws ServletException if the processing fails for any other reason
-
-     * @since 2.3
      */
     public void doFilter(ServletRequest request, ServletResponse response)
             throws IOException, ServletException;

==================================================
ServletContextAttributeEvent.java
index fcac8be93c..c4ff7dbaf5 100644
--- a/java/jakarta/servlet/ServletContext.java
+++ b/java/jakarta/servlet/ServletContext.java
@@ -696,7 +696,7 @@ public interface ServletContext {
      *    {@link ServletContextListener} defined in a TLD would not be able to
      *    use this method.
      * @throws ServletException TODO
-     * @since Servlet 3.
+     * @since Servlet 3.0
      */
     public <T extends Filter> T createFilter(Class<T> c) throws ServletException;
 

==================================================
ServletContextAttributeListener.java
index 5141352448..0149da5781 100644
--- a/java/jakarta/servlet/ServletContextAttributeEvent.java
+++ b/java/jakarta/servlet/ServletContextAttributeEvent.java
@@ -21,7 +21,7 @@ package jakarta.servlet;
  * the servlet context of a web application.
  *
  * @see ServletContextAttributeListener
- * @since v 2.3
+ * @since Servlet 2.3
  */
 public class ServletContextAttributeEvent extends ServletContextEvent {
     private static final long serialVersionUID = 1L;

==================================================
ServletContextEvent.java
index ced5a7b73c..25e42bad9e 100644
--- a/java/jakarta/servlet/ServletContextAttributeListener.java
+++ b/java/jakarta/servlet/ServletContextAttributeListener.java
@@ -25,7 +25,7 @@ import java.util.EventListener;
  * deployment descriptor for the web application.
  *
  * @see ServletContextAttributeEvent
- * @since v 2.3
+ * @since Servlet 2.3
  */
 
 public interface ServletContextAttributeListener extends EventListener {

==================================================
ServletContextListener.java
index fe53f166b9..7cf5408c25 100644
--- a/java/jakarta/servlet/ServletContextEvent.java
+++ b/java/jakarta/servlet/ServletContextEvent.java
@@ -21,7 +21,7 @@ package jakarta.servlet;
  * context of a web application.
  *
  * @see ServletContextListener
- * @since v 2.3
+ * @since Servlet 2.3
  */
 public class ServletContextEvent extends java.util.EventObject {
 

==================================================
ServletResponse.java
index 3468e8eb6b..c5e33d441f 100644
--- a/java/jakarta/servlet/ServletContextListener.java
+++ b/java/jakarta/servlet/ServletContextListener.java
@@ -25,7 +25,7 @@ import java.util.EventListener;
  * deployment descriptor for the web application.
  *
  * @see ServletContextEvent
- * @since v 2.3
+ * @since Servlet 2.3
  */
 
 public interface ServletContextListener extends EventListener {

==================================================
ServletResponseWrapper.java
index e1cdd26229..ad19476f89 100644
--- a/java/jakarta/servlet/ServletResponse.java
+++ b/java/jakarta/servlet/ServletResponse.java
@@ -95,7 +95,7 @@ public interface ServletResponse {
      *
      * @return a <code>String</code> specifying the content type, for example,
      *         <code>text/html; charset=UTF-8</code>, or null
-     * @since 2.4
+     * @since Servlet 2.4
      */
     public String getContentType();
 
@@ -174,7 +174,7 @@ public interface ServletResponse {
      *            Character Sets
      *            (http://www.iana.org/assignments/character-sets)
      * @see #setContentType #setLocale
-     * @since 2.4
+     * @since Servlet 2.4
      */
     public void setCharacterEncoding(String charset);
 
@@ -288,7 +288,7 @@ public interface ServletResponse {
      * @see #getBufferSize
      * @see #isCommitted
      * @see #reset
-     * @since 2.3
+     * @since Servlet 2.3
      */
     public void resetBuffer();
 

==================================================
JspPropertyGroupDescriptor.java
index 449dea9a41..eb5119497c 100644
--- a/java/jakarta/servlet/ServletResponseWrapper.java
+++ b/java/jakarta/servlet/ServletResponseWrapper.java
@@ -27,7 +27,7 @@ import java.util.ResourceBundle;
  * This class implements the Wrapper or Decorator pattern. Methods default to
  * calling through to the wrapped response object.
  *
- * @since v 2.3
+ * @since Servlet 2.3
  * @see jakarta.servlet.ServletResponse
  */
 public class ServletResponseWrapper implements ServletResponse {
@@ -80,7 +80,7 @@ public class ServletResponseWrapper implements ServletResponse {
      * The default behavior of this method is to call
      * setCharacterEncoding(String charset) on the wrapped response object.
      *
-     * @since 2.4
+     * @since Servlet 2.4
      */
     @Override
     public void setCharacterEncoding(String charset) {
@@ -147,7 +147,7 @@ public class ServletResponseWrapper implements ServletResponse {
      * The default behavior of this method is to return getContentType() on the
      * wrapped response object.
      *
-     * @since 2.4
+     * @since Servlet 2.4
      */
     @Override
     public String getContentType() {

==================================================
HttpServlet.java
index afa6e8c62e..19b28ed172 100644
--- a/java/jakarta/servlet/descriptor/JspPropertyGroupDescriptor.java
+++ b/java/jakarta/servlet/descriptor/JspPropertyGroupDescriptor.java
@@ -44,6 +44,8 @@ public interface JspPropertyGroupDescriptor {
      * error for this group?
      *
      * @return {@code true} if an error will be triggered, otherwise {@code false}
+     *
+     * @since Servlet 6.0
      */
     public String getErrorOnELNotFound();
 

==================================================
HttpServletMapping.java
index f5373213cc..31e4a9a6fd 100644
--- a/java/jakarta/servlet/http/HttpServlet.java
+++ b/java/jakarta/servlet/http/HttpServlet.java
@@ -98,7 +98,7 @@ public abstract class HttpServlet extends GenericServlet {
     /**
      * @deprecated May be removed in a future release
      *
-     * @since 6.0
+     * @since Servlet 6.0
      */
     @Deprecated
     public static final String LEGACY_DO_HEAD = "jakarta.servlet.http.legacyDoHead";

==================================================
HttpServletRequestWrapper.java
index 1b1e54dffc..7c31a89640 100644
--- a/java/jakarta/servlet/http/HttpServletMapping.java
+++ b/java/jakarta/servlet/http/HttpServletMapping.java
@@ -22,7 +22,7 @@ import jakarta.servlet.annotation.WebServlet;
  * Represents how the request from which this object was obtained was mapped to
  * the associated servlet.
  *
- * @since 4.0
+ * @since Servlet 4.0
  */
 public interface HttpServletMapping {
 

==================================================
HttpServletResponseWrapper.java
index 1125561bc0..d9de9ad6db 100644
--- a/java/jakarta/servlet/http/HttpServletRequestWrapper.java
+++ b/java/jakarta/servlet/http/HttpServletRequestWrapper.java
@@ -31,7 +31,7 @@ import jakarta.servlet.ServletRequestWrapper;
  * calling through to the wrapped request object.
  *
  * @see jakarta.servlet.http.HttpServletRequest
- * @since v 2.3
+ * @since Servlet 2.3
  */
 public class HttpServletRequestWrapper extends ServletRequestWrapper implements
         HttpServletRequest {

==================================================
HttpSession.java
index bc64609835..edbdc4b577 100644
--- a/java/jakarta/servlet/http/HttpServletResponseWrapper.java
+++ b/java/jakarta/servlet/http/HttpServletResponseWrapper.java
@@ -29,7 +29,7 @@ import jakarta.servlet.ServletResponseWrapper;
  * Servlet. This class implements the Wrapper or Decorator pattern. Methods
  * default to calling through to the wrapped response object.
  *
- * @since v 2.3
+ * @since Servlet 2.3
  * @see jakarta.servlet.http.HttpServletResponse
  */
 public class HttpServletResponseWrapper extends ServletResponseWrapper

==================================================
HttpSessionActivationListener.java
index e712347184..2883cdc503 100644
--- a/java/jakarta/servlet/http/HttpSession.java
+++ b/java/jakarta/servlet/http/HttpSession.java
@@ -107,7 +107,7 @@ public interface HttpSession {
      * Returns the ServletContext to which this session belongs.
      *
      * @return The ServletContext object for the web application
-     * @since 2.3
+     * @since Servlet 2.3
      */
     public ServletContext getServletContext();
 

==================================================
HttpSessionAttributeListener.java
index 61cf84026d..97ed0f3ea1 100644
--- a/java/jakarta/servlet/http/HttpSessionActivationListener.java
+++ b/java/jakarta/servlet/http/HttpSessionActivationListener.java
@@ -25,7 +25,7 @@ import java.util.EventListener;
  * to notify all attributes bound to sessions implementing
  * HttpSessionActivationListener.
  *
- * @since 2.3
+ * @since Servlet 2.3
  */
 public interface HttpSessionActivationListener extends EventListener {
 

==================================================
HttpSessionBindingEvent.java
index d386c66b8a..ec93d8ae27 100644
--- a/java/jakarta/servlet/http/HttpSessionAttributeListener.java
+++ b/java/jakarta/servlet/http/HttpSessionAttributeListener.java
@@ -22,7 +22,7 @@ import java.util.EventListener;
  * This listener interface can be implemented in order to get notifications of
  * changes to the attribute lists of sessions within this web application.
  *
- * @since v 2.3
+ * @since Servlet 2.3
  */
 public interface HttpSessionAttributeListener extends EventListener {
 

==================================================
HttpSessionEvent.java
index ed70b05c78..5b6b612c50 100644
--- a/java/jakarta/servlet/http/HttpSessionBindingEvent.java
+++ b/java/jakarta/servlet/http/HttpSessionBindingEvent.java
@@ -114,7 +114,7 @@ public class HttpSessionBindingEvent extends HttpSessionEvent {
      *         value of the removed attribute. If the attribute was replaced,
      *         this is the old value of the attribute.
      *
-     * @since 2.3
+     * @since Servlet 2.3
      */
     public Object getValue() {
         return this.value;

==================================================
HttpSessionListener.java
index 1ee7c8dfd8..0d536e500c 100644
--- a/java/jakarta/servlet/http/HttpSessionEvent.java
+++ b/java/jakarta/servlet/http/HttpSessionEvent.java
@@ -20,7 +20,7 @@ package jakarta.servlet.http;
  * This is the class representing event notifications for changes to sessions
  * within a web application.
  *
- * @since v 2.3
+ * @since Servlet 2.3
  */
 public class HttpSessionEvent extends java.util.EventObject {
     private static final long serialVersionUID = 1L;

==================================================
MappingMatch.java
index 181d328a33..1f434d631c 100644
--- a/java/jakarta/servlet/http/HttpSessionListener.java
+++ b/java/jakarta/servlet/http/HttpSessionListener.java
@@ -25,7 +25,7 @@ import java.util.EventListener;
  * web application.
  *
  * @see HttpSessionEvent
- * @since v 2.3
+ * @since Servlet 2.3
  */
 public interface HttpSessionListener extends EventListener {
 

==================================================
ErrorData.java
index 4a7fc77128..239ee6a5c7 100644
--- a/java/jakarta/servlet/http/MappingMatch.java
+++ b/java/jakarta/servlet/http/MappingMatch.java
@@ -19,7 +19,7 @@ package jakarta.servlet.http;
 /**
  * Represents the ways that a request can be mapped to a servlet
  *
- * @since 4.0
+ * @since Servlet 4.0
  */
 public enum MappingMatch {
 

==================================================
JspApplicationContext.java
index 44f73cb32a..7ab0f12b67 100644
--- a/java/jakarta/servlet/jsp/ErrorData.java
+++ b/java/jakarta/servlet/jsp/ErrorData.java
@@ -23,7 +23,7 @@ package jakarta.servlet.jsp;
  * isErrorPage attribute of the page directive to "true".
  *
  * @see PageContext#getErrorData
- * @since 2.0
+ * @since JSP 2.0
  */
 public final class ErrorData {
 

==================================================
JspContext.java
index 11886fea7b..5d05934559 100644
--- a/java/jakarta/servlet/jsp/JspApplicationContext.java
+++ b/java/jakarta/servlet/jsp/JspApplicationContext.java
@@ -25,7 +25,7 @@ import jakarta.el.ExpressionFactory;
  * Stores <i>application</i>-scoped information for the JSP container.
  * </p>
  *
- * @since 2.1
+ * @since JSP 2.1
  */
 public interface JspApplicationContext {
 

==================================================
JspFactory.java
index 8c1ebc41b2..1959e5778a 100644
--- a/java/jakarta/servlet/jsp/JspContext.java
+++ b/java/jakarta/servlet/jsp/JspContext.java
@@ -64,7 +64,7 @@ import jakarta.el.ELContext;
  * Expression Language evaluator:
  * <code>getExpressionEvaluator()</code>, <code>getVariableResolver()</code>
  *
- * @since 2.0
+ * @since JSP 2.0
  */
 
 public abstract class JspContext {
@@ -220,7 +220,7 @@ public abstract class JspContext {
      * ExpressionEvaluator that can parse EL expressions.
      *
      * @return A valid instance of an ExpressionEvaluator.
-     * @since 2.0
+     * @since JSP 2.0
      * @deprecated As of JSP 2.1, replaced by
      *             JspApplicationContext.getExpressionFactory()
      */
@@ -241,7 +241,7 @@ public abstract class JspContext {
      * as the context object.
      *
      * @return A valid instance of a VariableResolver.
-     * @since 2.0
+     * @since JSP 2.0
      * @deprecated As of JSP 2.1,
      *             replaced by jakarta.el.ELContext.getELResolver()
      *             which can be obtained by
@@ -268,7 +268,7 @@ public abstract class JspContext {
      * @param writer The Writer for the returned JspWriter to send
      *     output to.
      * @return a new JspWriter that writes to the given Writer.
-     * @since 2.0
+     * @since JSP 2.0
      */
     public JspWriter pushBody( java.io.Writer writer ) {
         return null; // XXX to implement

==================================================
JspTagException.java
index 11ec45f38b..1a91a16fa8 100644
--- a/java/jakarta/servlet/jsp/JspFactory.java
+++ b/java/jakarta/servlet/jsp/JspFactory.java
@@ -150,7 +150,7 @@ public abstract class JspFactory {
      *
      * @param context the current web application's <code>ServletContext</code>
      * @return <code>JspApplicationContext</code> instance
-     * @since 2.1
+     * @since JSP 2.1
      */
     public abstract JspApplicationContext getJspApplicationContext(
             ServletContext context);

==================================================
PageContext.java
index 1e6f642f3a..e1064db3a9 100644
--- a/java/jakarta/servlet/jsp/JspTagException.java
+++ b/java/jakarta/servlet/jsp/JspTagException.java
@@ -56,7 +56,7 @@ public class JspTagException extends JspException {
      *            the <code>Throwable</code> exception that interfered with the
      *            JSP Tag's normal operation, making this JSP Tag exception
      *            necessary
-     * @since 2.0
+     * @since JSP 2.0
      */
     public JspTagException(String message, Throwable rootCause) {
         super(message, rootCause);
@@ -77,7 +77,7 @@ public class JspTagException extends JspException {
      *            the <code>Throwable</code> exception that interfered with the
      *            JSP Tag's normal operation, making the JSP Tag exception
      *            necessary
-     * @since 2.0
+     * @since JSP 2.0
      */
     public JspTagException(Throwable rootCause) {
         super(rootCause);

==================================================
SkipPageException.java
index 619b64e4d6..391aa3372f 100644
--- a/java/jakarta/servlet/jsp/PageContext.java
+++ b/java/jakarta/servlet/jsp/PageContext.java
@@ -405,7 +405,7 @@ public abstract class PageContext
      * @throws ServletException if the page that was forwarded to throws
      *     a ServletException
      * @throws IOException if an I/O error occurred while forwarding
-     * @since 2.0
+     * @since JSP 2.0
      */
     public abstract void include(String relativeUrlPath, boolean flush)
         throws ServletException, IOException;
@@ -508,7 +508,7 @@ public abstract class PageContext
      * if the isErrorPage attribute of the page directive is not set
      * to "true"), the information is meaningless.
      *
-     * @since 2.0
+     * @since JSP 2.0
      */
     public ErrorData getErrorData() {
         int status = 0;

==================================================
ELException.java
index d3b89cb05c..971bad91c6 100644
--- a/java/jakarta/servlet/jsp/SkipPageException.java
+++ b/java/jakarta/servlet/jsp/SkipPageException.java
@@ -30,7 +30,7 @@ package jakarta.servlet.jsp;
  * @see jakarta.servlet.jsp.tagext.SimpleTag#doTag
  * @see jakarta.servlet.jsp.tagext.JspFragment#invoke
  * @see jakarta.servlet.jsp.tagext.Tag#doEndTag
- * @since 2.0
+ * @since JSP 2.0
  */
 public class SkipPageException extends JspException {
 

==================================================
ELParseException.java
index dc56f5ebfc..455f9ba9e1 100644
--- a/java/jakarta/servlet/jsp/el/ELException.java
+++ b/java/jakarta/servlet/jsp/el/ELException.java
@@ -20,7 +20,7 @@ package jakarta.servlet.jsp.el;
  * Represents any of the exception conditions that arise during the operation
  * evaluation of the evaluator.
  *
- * @since 2.0
+ * @since JSP 2.0
  * @deprecated As of JSP 2.1, replaced by jakarta.el.ELException
  */
 @Deprecated

==================================================
Expression.java
index 75498b0c63..72a7ef1700 100644
--- a/java/jakarta/servlet/jsp/el/ELParseException.java
+++ b/java/jakarta/servlet/jsp/el/ELParseException.java
@@ -20,7 +20,7 @@ package jakarta.servlet.jsp.el;
 /**
  * Represents a parsing error encountered while parsing an EL expression.
  *
- * @since 2.0
+ * @since JSP 2.0
  * @deprecated As of JSP 2.1, replaced by jakarta.el.ELException
  */
 @Deprecated

==================================================
ExpressionEvaluator.java
index e97cc4c5a9..57d8811b31 100644
--- a/java/jakarta/servlet/jsp/el/Expression.java
+++ b/java/jakarta/servlet/jsp/el/Expression.java
@@ -27,7 +27,7 @@ package jakarta.servlet.jsp.el;
  * A client invoking the evaluate() method should be ready for the case
  * where ELParseException exceptions are raised. </p>
  *
- * @since 2.0
+ * @since JSP 2.0
  * @deprecated As of JSP 2.1, replaced by jakarta.el.ValueExpression
  */
 @Deprecated

==================================================
FunctionMapper.java
index 0dfcc37a03..db59b26bb6 100644
--- a/java/jakarta/servlet/jsp/el/ExpressionEvaluator.java
+++ b/java/jakarta/servlet/jsp/el/ExpressionEvaluator.java
@@ -50,7 +50,7 @@ package jakarta.servlet.jsp.el;
  * <li><code>${my:reverse('hello')}</code></li>
  * </ul>
  *
- * @since 2.0
+ * @since JSP 2.0
  * @deprecated As of JSP 2.1, replaced by jakarta.el.ExpressionFactory
  */
 @Deprecated

==================================================
ImplicitObjectELResolver.java
index 9ad8f0d5d4..c97332ab5d 100644
--- a/java/jakarta/servlet/jsp/el/FunctionMapper.java
+++ b/java/jakarta/servlet/jsp/el/FunctionMapper.java
@@ -22,7 +22,7 @@ package jakarta.servlet.jsp.el;
  * <p>Classes implementing this interface may, for instance, consult tag library
  * information to resolve the map. </p>
  *
- * @since 2.0
+ * @since JSP 2.0
  * @deprecated As of JSP 2.1, replaced by jakarta.el.FunctionMapper
  */
 @Deprecated

==================================================
ScopedAttributeELResolver.java
index 29a29c7c9f..4ee707c9f0 100644
--- a/java/jakarta/servlet/jsp/el/ImplicitObjectELResolver.java
+++ b/java/jakarta/servlet/jsp/el/ImplicitObjectELResolver.java
@@ -41,7 +41,7 @@ import jakarta.servlet.jsp.PageContext;
 /**
  * Provides resolution in EL for the implicit variables of a JSP page.
  *
- * @since 2.1
+ * @since JSP 2.1
  */
 public class ImplicitObjectELResolver extends ELResolver {
 

==================================================
VariableResolver.java
index 4e3b14589b..0246f49421 100644
--- a/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java
+++ b/java/jakarta/servlet/jsp/el/ScopedAttributeELResolver.java
@@ -29,9 +29,9 @@ import jakarta.servlet.jsp.JspContext;
 import jakarta.servlet.jsp.PageContext;
 
 /**
-*
-* @since 2.1
-*/
+ *
+ * @since JSP 2.1
+ */
 public class ScopedAttributeELResolver extends ELResolver {
 
     @Override

==================================================
DynamicAttributes.java
index 752a11c9d1..7f3c3b7a24 100644
--- a/java/jakarta/servlet/jsp/el/VariableResolver.java
+++ b/java/jakarta/servlet/jsp/el/VariableResolver.java
@@ -29,7 +29,7 @@ package jakarta.servlet.jsp.el;
  * happen
  * </p>
  *
- * @since 2.0
+ * @since JSP 2.0
  * @deprecated As of JSP 2.1, replaced by jakarta.el.ELResolver
  */
 @Deprecated

==================================================
FunctionInfo.java
index b5d797669d..b5a24441ff 100644
--- a/java/jakarta/servlet/jsp/tagext/DynamicAttributes.java
+++ b/java/jakarta/servlet/jsp/tagext/DynamicAttributes.java
@@ -29,7 +29,7 @@ import jakarta.servlet.jsp.JspException;
  * value of the attribute.  It is the responsibility of the tag to
  * remember the names and values of the dynamic attributes.
  *
- * @since 2.0
+ * @since JSP 2.0
  */
 public interface DynamicAttributes {
 

==================================================
JspFragment.java
index 8945125279..c2e2d206d4 100644
--- a/java/jakarta/servlet/jsp/tagext/FunctionInfo.java
+++ b/java/jakarta/servlet/jsp/tagext/FunctionInfo.java
@@ -21,7 +21,7 @@ package jakarta.servlet.jsp.tagext;
  * This class is instantiated from the Tag Library Descriptor file (TLD)
  * and is available only at translation time.
  *
- * @since 2.0
+ * @since JSP 2.0
  */
 public class FunctionInfo {
 

==================================================
JspTag.java
index 76b6403d9d..ab9fb7d0a2 100644
--- a/java/jakarta/servlet/jsp/tagext/JspFragment.java
+++ b/java/jakarta/servlet/jsp/tagext/JspFragment.java
@@ -50,7 +50,7 @@ import jakarta.servlet.jsp.JspException;
  * JspFragment. Upon construction, a discriminator can be passed to
  * select which fragment that instance will execute.
  *
- * @since 2.0
+ * @since JSP 2.0
  */
 public abstract class JspFragment {
 

==================================================
SimpleTag.java
index 6ecb05e0f7..4224e66266 100644
--- a/java/jakarta/servlet/jsp/tagext/JspTag.java
+++ b/java/jakarta/servlet/jsp/tagext/JspTag.java
@@ -20,7 +20,7 @@ package jakarta.servlet.jsp.tagext;
  * Serves as a base class for Tag and SimpleTag.
  * This is mostly for organizational and type-safety purposes.
  *
- * @since 2.0
+ * @since JSP 2.0
  */
 public interface JspTag {
     // No methods even through there are some common methods

==================================================
SimpleTagSupport.java
index 72ca095c40..aac877cc4d 100644
--- a/java/jakarta/servlet/jsp/tagext/SimpleTag.java
+++ b/java/jakarta/servlet/jsp/tagext/SimpleTag.java
@@ -68,7 +68,7 @@ import jakarta.servlet.jsp.JspContext;
  * </ol>
  *
  * @see SimpleTagSupport
- * @since 2.0
+ * @since JSP 2.0
  */
 public interface SimpleTag extends JspTag {
 

==================================================
TagAdapter.java
index a9b6f3550d..80a9144988 100644
--- a/java/jakarta/servlet/jsp/tagext/SimpleTagSupport.java
+++ b/java/jakarta/servlet/jsp/tagext/SimpleTagSupport.java
@@ -30,7 +30,7 @@ import jakarta.servlet.jsp.JspException;
  * convenience methods including getter methods for the properties in
  * SimpleTag.
  *
- * @since 2.0
+ * @since JSP 2.0
  */
 public class SimpleTagSupport implements SimpleTag {
     /** Reference to the enclosing tag. */

==================================================
TagAttributeInfo.java
index eeaf78f951..094aaa4274 100644
--- a/java/jakarta/servlet/jsp/tagext/TagAdapter.java
+++ b/java/jakarta/servlet/jsp/tagext/TagAdapter.java
@@ -30,7 +30,7 @@ import jakarta.servlet.jsp.PageContext;
  * setParent() instead. A classic Tag Handler can call getAdaptee() to retrieve
  * the encapsulated SimpleTag instance.
  *
- * @since 2.0
+ * @since JSP 2.0
  */
 public class TagAdapter implements Tag {
     /** The simple tag that's being adapted. */

==================================================
TagExtraInfo.java
index e901736d63..6943a26b08 100644
--- a/java/jakarta/servlet/jsp/tagext/TagAttributeInfo.java
+++ b/java/jakarta/servlet/jsp/tagext/TagAttributeInfo.java
@@ -68,7 +68,7 @@ public class TagAttributeInfo {
      * @param fragment
      *            Whether this attribute is of type JspFragment
      *
-     * @since 2.0
+     * @since JSP 2.0
      */
     public TagAttributeInfo(String name, boolean required, String type,
             boolean reqTime, boolean fragment) {
@@ -181,7 +181,7 @@ public class TagAttributeInfo {
      *
      * @return if the attribute is of type JspFragment
      *
-     * @since 2.0
+     * @since JSP 2.0
      */
     public boolean isFragment() {
         return fragment;

==================================================
TagFileInfo.java
index e214b0dad9..4dec536f9b 100644
--- a/java/jakarta/servlet/jsp/tagext/TagExtraInfo.java
+++ b/java/jakarta/servlet/jsp/tagext/TagExtraInfo.java
@@ -103,7 +103,7 @@ public abstract class TagExtraInfo {
      * @param data The TagData instance.
      * @return A null object, or zero length array if no errors, an
      *     array of ValidationMessages otherwise.
-     * @since 2.0
+     * @since JSP 2.0
      */
     public ValidationMessage[] validate( TagData data ) {
         ValidationMessage[] result = null;

==================================================
TagInfo.java
index c024ee9e70..e65f15945c 100644
--- a/java/jakarta/servlet/jsp/tagext/TagFileInfo.java
+++ b/java/jakarta/servlet/jsp/tagext/TagFileInfo.java
@@ -21,7 +21,7 @@ package jakarta.servlet.jsp.tagext;
  * This class is instantiated from the Tag Library Descriptor file (TLD)
  * and is available only at translation time.
  *
- * @since 2.0
+ * @since JSP 2.0
  */
 public class TagFileInfo {
 

==================================================
TagLibraryInfo.java
index c89f59e1fe..a74ccb4d92 100644
--- a/java/jakarta/servlet/jsp/tagext/TagInfo.java
+++ b/java/jakarta/servlet/jsp/tagext/TagInfo.java
@@ -48,7 +48,7 @@ public class TagInfo {
     /**
      * Static constant for getBodyContent() when it is scriptless.
      *
-     * @since 2.0
+     * @since JSP 2.0
      */
     public static final String BODY_CONTENT_SCRIPTLESS = "scriptless";
 
@@ -180,7 +180,7 @@ public class TagInfo {
      * @param tvi An array of a TagVariableInfo (or null)
      * @param dynamicAttributes True if supports dynamic attributes
      *
-     * @since 2.0
+     * @since JSP 2.0
      */
     public TagInfo(String tagName,
             String tagClassName,
@@ -275,7 +275,7 @@ public class TagInfo {
      * @param data The translation-time TagData instance.
      * @return A null object, or zero length array if no errors, an
      *     array of ValidationMessages otherwise.
-     * @since 2.0
+     * @since JSP 2.0
      */
     public ValidationMessage[] validate( TagData data ) {
         TagExtraInfo tei = getTagExtraInfo();
@@ -426,7 +426,7 @@ public class TagInfo {
      * Get dynamicAttributes associated with this TagInfo.
      *
      * @return True if tag handler supports dynamic attributes
-     * @since 2.0
+     * @since JSP 2.0
      */
     public boolean hasDynamicAttributes() {
         return dynamicAttributes;

==================================================
ServerContainer.java
index 393dcb5cc4..a52760edfa 100644
--- a/java/jakarta/servlet/jsp/tagext/TagLibraryInfo.java
+++ b/java/jakarta/servlet/jsp/tagext/TagLibraryInfo.java
@@ -119,7 +119,7 @@ public abstract class TagLibraryInfo {
      * @return the TagFileInfo objects corresponding to the tag files defined by
      *         this tag library, or a zero length array if this tag library
      *         defines no tags files
-     * @since 2.0
+     * @since JSP 2.0
      */
     public TagFileInfo[] getTagFiles() {
         return tagFiles;
@@ -157,7 +157,7 @@ public abstract class TagLibraryInfo {
      *            The short name (no prefix) of the tag
      * @return the TagFileInfo for the specified Tag file, or null if no Tag
      *         file is found
-     * @since 2.0
+     * @since JSP 2.0
      */
     public TagFileInfo getTagFile(String shortname) {
         TagFileInfo tagFiles[] = getTagFiles();
@@ -179,7 +179,7 @@ public abstract class TagLibraryInfo {
      *
      * @return the functions defined in this tag library, or a zero length array
      *         if the tag library defines no functions.
-     * @since 2.0
+     * @since JSP 2.0
      */
     public FunctionInfo[] getFunctions() {
         return functions;
@@ -193,7 +193,7 @@ public abstract class TagLibraryInfo {
      *            The name (no prefix) of the function
      * @return the FunctionInfo for the function with the given name, or null if
      *         no such function exists
-     * @since 2.0
+     * @since JSP 2.0
      */
     public FunctionInfo getFunction(String name) {
 
@@ -221,7 +221,7 @@ public abstract class TagLibraryInfo {
      *         tag libraries (including this TagLibraryInfo) imported by taglib
      *         directives in the translation unit that references this
      *         TagLibraryInfo.
-     * @since 2.1
+     * @since JSP 2.1
      */
     public abstract jakarta.servlet.jsp.tagext.TagLibraryInfo[] getTagLibraryInfos();
 
@@ -246,14 +246,14 @@ public abstract class TagLibraryInfo {
     /**
      * An array describing the tag files that are defined in this tag library.
      *
-     * @since 2.0
+     * @since JSP 2.0
      */
     protected TagFileInfo[] tagFiles;
 
     /**
      * An array describing the functions that are defined in this tag library.
      *
-     * @since 2.0
+     * @since JSP 2.0
      */
     protected FunctionInfo[] functions;
 

==================================================
ServerEndpointConfig.java
index 4820cb6d04..dbeaaea876 100644
--- a/java/jakarta/websocket/server/ServerContainer.java
+++ b/java/jakarta/websocket/server/ServerContainer.java
@@ -54,6 +54,8 @@ public interface ServerContainer extends WebSocketContainer {
      *                                       Servlet container
      * @throws IOException if an I/O error occurs during the establishment of a WebSocket connection
      * @throws DeploymentException if a configuration error prevents the establishment of a WebSocket connection
+     *
+     * @since WebSocket 2.0
      */
     public void upgradeHttpToWebSocket(Object httpServletRequest, Object httpServletResponse, ServerEndpointConfig sec,
             Map<String,String> pathParameters) throws IOException, DeploymentException;

==================================================
