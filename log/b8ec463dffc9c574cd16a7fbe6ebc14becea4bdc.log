b8ec463dffc9c574cd16a7fbe6ebc14becea4bdc
==================================================
Javadoc fixes.
==================================================
Remy Maucherat
==================================================
Fri Jan 8 10:50:42 2016 +0000
==================================================
ApplicationContext.java
Javadoc fixes.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1723681 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ApplicationSessionCookieConfig.java
index d58444556a..8cb70fee06 100644
--- a/java/org/apache/catalina/core/ApplicationContext.java
+++ b/java/org/apache/catalina/core/ApplicationContext.java
@@ -1259,7 +1259,7 @@ public class ApplicationContext
 
 
     /**
-     * Return the facade associated with this ApplicationContext.
+     * @return the facade associated with this ApplicationContext.
      */
     protected ServletContext getFacade() {
 

==================================================
ContainerBase.java
index fc827bb54b..5b99b47ac1 100644
--- a/java/org/apache/catalina/core/ApplicationSessionCookieConfig.java
+++ b/java/org/apache/catalina/core/ApplicationSessionCookieConfig.java
@@ -158,6 +158,7 @@ public class ApplicationSessionCookieConfig implements SessionCookieConfig {
      * @param sessionId   The ID of the session for which the cookie will be
      *                    created
      * @param secure      Should session cookie be configured as secure
+     * @return the cookie for the session
      */
     public static Cookie createSessionCookie(Context context,
             String sessionId, boolean secure) {

==================================================
DefaultInstanceManager.java
index d98be6be95..7422d17757 100644
--- a/java/org/apache/catalina/core/ContainerBase.java
+++ b/java/org/apache/catalina/core/ContainerBase.java
@@ -487,6 +487,8 @@ public abstract class ContainerBase extends LifecycleMBeanBase
     /**
      * Return if children of this container will be started automatically when
      * they are added to this container.
+     *
+     * @return <code>true</code> if the children will be started
      */
     public boolean getStartChildren() {
 
@@ -1185,7 +1187,7 @@ public abstract class ContainerBase extends LifecycleMBeanBase
 
 
     /**
-     * Return the abbreviated name of this container for logging messages
+     * @return the abbreviated name of this container for logging messages
      */
     protected String logName() {
 

==================================================
NamingContextListener.java
index 47b3567dca..7b324d1b5e 100644
--- a/java/org/apache/catalina/core/DefaultInstanceManager.java
+++ b/java/org/apache/catalina/core/DefaultInstanceManager.java
@@ -468,6 +468,8 @@ public class DefaultInstanceManager implements InstanceManager {
 
     /**
      * Makes cache size available to unit tests.
+     *
+     * @return the cache size
      */
     protected int getAnnotationCacheSize() {
         synchronized (annotationCache) {

==================================================
StandardContext.java
index 9e6c506932..351240a9be 100644
--- a/java/org/apache/catalina/core/NamingContextListener.java
+++ b/java/org/apache/catalina/core/NamingContextListener.java
@@ -158,7 +158,7 @@ public class NamingContextListener
     // ------------------------------------------------------------- Properties
 
     /**
-     * Returns whether or not an attempt to modify the JNDI context will trigger
+     * @return whether or not an attempt to modify the JNDI context will trigger
      * an exception or if the request will be ignored.
      */
     public boolean getExceptionOnFailedWrite() {
@@ -178,7 +178,7 @@ public class NamingContextListener
 
 
     /**
-     * Return the "name" property.
+     * @return the "name" property.
      */
     public String getName() {
         return (this.name);
@@ -196,7 +196,7 @@ public class NamingContextListener
 
 
     /**
-     * Return the env context.
+     * @return the naming environment context.
      */
     public javax.naming.Context getEnvContext() {
         return this.envCtx;
@@ -766,6 +766,8 @@ public class NamingContextListener
 
     /**
      * Set the specified EJBs in the naming context.
+     *
+     * @param ejb the EJB descriptor
      */
     public void addEjb(ContextEjb ejb) {
 
@@ -792,6 +794,8 @@ public class NamingContextListener
 
     /**
      * Set the specified environment entries in the naming context.
+     *
+     * @param env the environment entry
      */
     public void addEnvironment(ContextEnvironment env) {
 
@@ -907,6 +911,8 @@ public class NamingContextListener
 
     /**
      * Set the specified local EJBs in the naming context.
+     *
+     * @param localEjb the EJB descriptor
      */
     public void addLocalEjb(
             @SuppressWarnings("unused") ContextLocalEjb localEjb) {
@@ -916,6 +922,8 @@ public class NamingContextListener
 
     /**
      * Set the specified web service in the naming context.
+     *
+     * @param service the web service descriptor
      */
     public void addService(ContextService service) {
 
@@ -1046,6 +1054,8 @@ public class NamingContextListener
 
     /**
      * Set the specified resources in the naming context.
+     *
+     * @param resource the resource descriptor
      */
     public void addResource(ContextResource resource) {
 
@@ -1090,6 +1100,8 @@ public class NamingContextListener
 
     /**
      * Set the specified resources in the naming context.
+     *
+     * @param resourceEnvRef the resource reference
      */
     public void addResourceEnvRef(ContextResourceEnvRef resourceEnvRef) {
 
@@ -1117,6 +1129,8 @@ public class NamingContextListener
 
     /**
      * Set the specified resource link in the naming context.
+     *
+     * @param resourceLink the resource link
      */
     public void addResourceLink(ContextResourceLink resourceLink) {
 
@@ -1149,6 +1163,8 @@ public class NamingContextListener
 
     /**
      * Set the specified EJBs in the naming context.
+     *
+     * @param name the name of the EJB which should be removed
      */
     public void removeEjb(String name) {
 
@@ -1163,6 +1179,8 @@ public class NamingContextListener
 
     /**
      * Set the specified environment entries in the naming context.
+     *
+     * @param name the name of the environment entry which should be removed
      */
     public void removeEnvironment(String name) {
 
@@ -1177,6 +1195,8 @@ public class NamingContextListener
 
     /**
      * Set the specified local EJBs in the naming context.
+     *
+     * @param name the name of the EJB which should be removed
      */
     public void removeLocalEjb(String name) {
 
@@ -1191,6 +1211,8 @@ public class NamingContextListener
 
     /**
      * Set the specified web services in the naming context.
+     *
+     * @param name the name of the web service which should be removed
      */
     public void removeService(String name) {
 
@@ -1205,6 +1227,8 @@ public class NamingContextListener
 
     /**
      * Set the specified resources in the naming context.
+     *
+     * @param name the name of the resource which should be removed
      */
     public void removeResource(String name) {
 
@@ -1224,6 +1248,8 @@ public class NamingContextListener
 
     /**
      * Set the specified resources in the naming context.
+     *
+     * @param name the name of the resource reference which should be removed
      */
     public void removeResourceEnvRef(String name) {
 
@@ -1238,6 +1264,8 @@ public class NamingContextListener
 
     /**
      * Set the specified resources in the naming context.
+     *
+     * @param name the name of the resource link which should be removed
      */
     public void removeResourceLink(String name) {
 

==================================================
StandardHost.java
index a6eb1b06c8..041e8e778d 100644
--- a/java/org/apache/catalina/core/StandardContext.java
+++ b/java/org/apache/catalina/core/StandardContext.java
@@ -1174,6 +1174,8 @@ public class StandardContext extends ContainerBase
     /**
      * Return the "follow standard delegation model" flag used to configure
      * our ClassLoader.
+     *
+     * @return <code>true</code> if classloading delegates to the parent classloader first
      */
     public boolean getDelegate() {
 
@@ -1199,7 +1201,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Returns true if the internal naming support is used.
+     * @return true if the internal naming support is used.
      */
     public boolean isUseNaming() {
 
@@ -1210,6 +1212,8 @@ public class StandardContext extends ContainerBase
 
     /**
      * Enables or disables naming.
+     *
+     * @param useNaming <code>true</code> to enable the naming environment
      */
     public void setUseNaming(boolean useNaming) {
         this.useNaming = useNaming;
@@ -1271,6 +1275,8 @@ public class StandardContext extends ContainerBase
     /**
      * Add a listener to the end of the list of initialized application
      * lifecycle listeners.
+     *
+     * @param listener The listener to add
      */
     public void addApplicationLifecycleListener(Object listener) {
         int len = applicationLifecycleListenersObjects.length;
@@ -1282,7 +1288,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the antiResourceLocking flag for this Context.
+     * @return the antiResourceLocking flag for this Context.
      */
     public boolean getAntiResourceLocking() {
 
@@ -1308,7 +1314,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the Locale to character set mapper for this Context.
+     * @return the Locale to character set mapper for this Context.
      */
     public CharsetMapper getCharsetMapper() {
 
@@ -1624,7 +1630,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the display name of this web application.
+     * @return the display name of this web application.
      */
     @Override
     public String getDisplayName() {
@@ -1635,7 +1641,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the alternate Deployment Descriptor name.
+     * @return the alternate Deployment Descriptor name.
      */
     @Override
     public String getAltDDName(){
@@ -1645,6 +1651,8 @@ public class StandardContext extends ContainerBase
 
     /**
      * Set an alternate Deployment Descriptor name.
+     *
+     * @param altDDName The new name
      */
     @Override
     public void setAltDDName(String altDDName) {
@@ -1671,7 +1679,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the distributable flag for this web application.
+     * @return the distributable flag for this web application.
      */
     @Override
     public boolean getDistributable() {
@@ -1706,7 +1714,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the document root for this Context.  This can be an absolute
+     * @return the document root for this Context.  This can be an absolute
      * pathname, a relative pathname, or a URL.
      */
     @Override
@@ -1857,7 +1865,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the boolean on the annotations parsing.
+     * @return the boolean on the annotations parsing.
      */
     @Override
     public boolean getIgnoreAnnotations() {
@@ -1881,7 +1889,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the login configuration descriptor for this web application.
+     * @return the login configuration descriptor for this web application.
      */
     @Override
     public LoginConfig getLoginConfig() {
@@ -1940,7 +1948,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the naming resources associated with this web application.
+     * @return the naming resources associated with this web application.
      */
     @Override
     public NamingResourcesImpl getNamingResources() {
@@ -2006,7 +2014,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the context path for this Context.
+     * @return the context path for this Context.
      */
     @Override
     public String getPath() {
@@ -2047,7 +2055,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the public identifier of the deployment descriptor DTD that is
+     * @return the public identifier of the deployment descriptor DTD that is
      * currently being parsed.
      */
     @Override
@@ -2079,7 +2087,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the reloadable flag for this web application.
+     * @return the reloadable flag for this web application.
      */
     @Override
     public boolean getReloadable() {
@@ -2090,7 +2098,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the default context override flag for this web application.
+     * @return the default context override flag for this web application.
      */
     @Override
     public boolean getOverride() {
@@ -2101,7 +2109,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the original document root for this Context.  This can be an absolute
+     * @return the original document root for this Context.  This can be an absolute
      * pathname, a relative pathname, or a URL.
      * Is only set as deployment has change docRoot!
      */
@@ -2124,7 +2132,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the parent class loader (if any) for this web application.
+     * @return the parent class loader (if any) for this web application.
      * This call is meaningful only <strong>after</strong> a Loader has
      * been configured.
      */
@@ -2142,7 +2150,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the privileged flag for this web application.
+     * @return the privileged flag for this web application.
      */
     @Override
     public boolean getPrivileged() {
@@ -2220,7 +2228,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the servlet context for which this Context is a facade.
+     * @return the servlet context for which this Context is a facade.
      */
     @Override
     public ServletContext getServletContext() {
@@ -2236,7 +2244,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the default session timeout (in minutes) for this
+     * @return the default session timeout (in minutes) for this
      * web application.
      */
     @Override
@@ -2271,7 +2279,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the value of the swallowOutput flag.
+     * @return the value of the swallowOutput flag.
      */
     @Override
     public boolean getSwallowOutput() {
@@ -2301,7 +2309,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the value of the unloadDelay flag.
+     * @return the value of the unloadDelay flag.
      */
     public long getUnloadDelay() {
 
@@ -2330,7 +2338,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Unpack WAR flag accessor.
+     * @return unpack WAR flag.
      */
     public boolean getUnpackWAR() {
 
@@ -2341,6 +2349,8 @@ public class StandardContext extends ContainerBase
 
     /**
      * Unpack WAR flag mutator.
+     *
+     * @param unpackWAR <code>true</code> to unpack WARs on deployment
      */
     public void setUnpackWAR(boolean unpackWAR) {
 
@@ -2349,18 +2359,31 @@ public class StandardContext extends ContainerBase
     }
 
 
+    /**
+     * Flag which indicates if bundled context.xml files should be copied to the
+     * config folder. The doesn't occur by default.
+     *
+     * @return <code>true</code> if the <code>META-INF/context.xml</code> file included
+     *     in a WAR will be copied to the host configuration base folder on deployment
+     */
     public boolean getCopyXML() {
         return copyXML;
     }
 
 
+    /**
+     * Allows copying a bundled context.xml file to the host configuration base
+     * folder on deployment.
+     *
+     * @param copyXML the new flag value
+     */
     public void setCopyXML(boolean copyXML) {
         this.copyXML = copyXML;
     }
 
 
     /**
-     * Return the Java class name of the Wrapper implementation used
+     * @return the Java class name of the Wrapper implementation used
      * for servlets registered in this Context.
      */
     @Override
@@ -2466,7 +2489,7 @@ public class StandardContext extends ContainerBase
     // ------------------------------------------------------ Public Properties
 
     /**
-     * Returns whether or not an attempt to modify the JNDI context will trigger
+     * @return whether or not an attempt to modify the JNDI context will trigger
      * an exception or if the request will be ignored.
      */
     public boolean getJndiExceptionOnFailedWrite() {
@@ -2478,7 +2501,7 @@ public class StandardContext extends ContainerBase
      * Controls whether or not an attempt to modify the JNDI context will
      * trigger an exception or if the request will be ignored.
      *
-     * @param jndiExceptionOnFailedWrite
+     * @param jndiExceptionOnFailedWrite <code>false</code> to avoid an exception
      */
     public void setJndiExceptionOnFailedWrite(
             boolean jndiExceptionOnFailedWrite) {
@@ -2487,7 +2510,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the Locale to character set mapper class for this Context.
+     * @return the Locale to character set mapper class for this Context.
      */
     public String getCharsetMapperClass() {
 
@@ -2535,7 +2558,7 @@ public class StandardContext extends ContainerBase
     }
 
     /**
-     * Return the work directory for this Context.
+     * @return the work directory for this Context.
      */
     public String getWorkDir() {
 
@@ -2560,7 +2583,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the clearReferencesStatic flag for this Context.
+     * @return the clearReferencesStatic flag for this Context.
      */
     public boolean getClearReferencesStatic() {
 
@@ -2586,7 +2609,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the clearReferencesStopThreads flag for this Context.
+     * @return the clearReferencesStopThreads flag for this Context.
      */
     public boolean getClearReferencesStopThreads() {
 
@@ -2613,7 +2636,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the clearReferencesStopTimerThreads flag for this Context.
+     * @return the clearReferencesStopTimerThreads flag for this Context.
      */
     public boolean getClearReferencesStopTimerThreads() {
         return (this.clearReferencesStopTimerThreads);
@@ -2638,7 +2661,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the clearReferencesHttpClientKeepAliveThread flag for this
+     * @return the clearReferencesHttpClientKeepAliveThread flag for this
      * Context.
      */
     public boolean getClearReferencesHttpClientKeepAliveThread() {
@@ -2798,6 +2821,8 @@ public class StandardContext extends ContainerBase
 
     /**
      * Add a security constraint to the set for this web application.
+     *
+     * @param constraint the new security constraint
      */
     @Override
     public void addConstraint(SecurityConstraint constraint) {
@@ -2933,6 +2958,8 @@ public class StandardContext extends ContainerBase
 
     /**
      * Validate the supplied FilterMap.
+     *
+     * @param filterMap the filter mapping
      */
     private void validateFilterMap(FilterMap filterMap) {
         // Validate the proposed filter mapping
@@ -3398,7 +3425,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the set of defined filters for this Context.
+     * @return the set of defined filters for this Context.
      */
     @Override
     public FilterDef[] findFilterDefs() {
@@ -3412,7 +3439,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the set of filter mappings for this Context.
+     * @return the set of filter mappings for this Context.
      */
     @Override
     public FilterMap[] findFilterMaps() {
@@ -3421,7 +3448,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the message destination with the specified name, if any;
+     * @return the message destination with the specified name, if any;
      * otherwise, return <code>null</code>.
      *
      * @param name Name of the desired message destination
@@ -3436,7 +3463,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the set of defined message destinations for this web
+     * @return the set of defined message destinations for this web
      * application.  If none have been defined, a zero-length array
      * is returned.
      */
@@ -3452,7 +3479,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the message destination ref with the specified name, if any;
+     * @return the message destination ref with the specified name, if any;
      * otherwise, return <code>null</code>.
      *
      * @param name Name of the desired message destination ref
@@ -3465,7 +3492,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the set of defined message destination refs for this web
+     * @return the set of defined message destination refs for this web
      * application.  If none have been defined, a zero-length array
      * is returned.
      */
@@ -3477,7 +3504,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the MIME type to which the specified extension is mapped,
+     * @return the MIME type to which the specified extension is mapped,
      * if any; otherwise return <code>null</code>.
      *
      * @param extension Extension to map to a MIME type
@@ -3491,7 +3518,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the extensions for which MIME mappings are defined.  If there
+     * @return the extensions for which MIME mappings are defined.  If there
      * are none, a zero-length array is returned.
      */
     @Override
@@ -3507,7 +3534,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the value for the specified context initialization
+     * @return the value for the specified context initialization
      * parameter name, if any; otherwise return <code>null</code>.
      *
      * @param name Name of the parameter to return
@@ -3519,7 +3546,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the names of all defined context initialization parameters
+     * @return the names of all defined context initialization parameters
      * for this Context.  If no parameters are defined, a zero-length
      * array is returned.
      */
@@ -3537,6 +3564,7 @@ public class StandardContext extends ContainerBase
      * is one.  Otherwise, return the specified role unchanged.
      *
      * @param role Security role to map
+     * @return the role name
      */
     @Override
     public String findRoleMapping(String role) {
@@ -3554,7 +3582,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return <code>true</code> if the specified security role is defined
+     * @return <code>true</code> if the specified security role is defined
      * for this application; otherwise return <code>false</code>.
      *
      * @param role Security role to verify
@@ -3574,7 +3602,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the security roles defined for this application.  If none
+     * @return the security roles defined for this application.  If none
      * have been defined, a zero-length array is returned.
      */
     @Override
@@ -3588,7 +3616,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the servlet name mapped by the specified pattern (if any);
+     * @return the servlet name mapped by the specified pattern (if any);
      * otherwise return <code>null</code>.
      *
      * @param pattern Pattern for which a mapping is requested
@@ -3604,7 +3632,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the patterns of all defined servlet mappings for this
+     * @return the patterns of all defined servlet mappings for this
      * Context.  If no mappings are defined, a zero-length array is returned.
      */
     @Override
@@ -3620,7 +3648,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the context-relative URI of the error page for the specified
+     * @return the context-relative URI of the error page for the specified
      * HTTP status code, if any; otherwise return <code>null</code>.
      *
      * @param status HTTP status code to look up
@@ -3638,7 +3666,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the set of HTTP status codes for which error pages have
+     * @return the set of HTTP status codes for which error pages have
      * been specified.  If none are specified, a zero-length array
      * is returned.
      */
@@ -3658,7 +3686,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return <code>true</code> if the specified welcome file is defined
+     * @return <code>true</code> if the specified welcome file is defined
      * for this Context; otherwise return <code>false</code>.
      *
      * @param name Welcome file to verify
@@ -3678,7 +3706,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the set of watched resources for this Context. If none are
+     * @return the set of watched resources for this Context. If none are
      * defined, a zero length array will be returned.
      */
     @Override
@@ -3690,7 +3718,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the set of welcome files defined for this Context.  If none are
+     * @return the set of welcome files defined for this Context.  If none are
      * defined, a zero-length array is returned.
      */
     @Override
@@ -3704,7 +3732,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the set of LifecycleListener classes that will be added to
+     * @return the set of LifecycleListener classes that will be added to
      * newly created Wrappers automatically.
      */
     @Override
@@ -3718,7 +3746,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the set of ContainerListener classes that will be added to
+     * @return the set of ContainerListener classes that will be added to
      * newly created Wrappers automatically.
      */
     @Override
@@ -4415,8 +4443,9 @@ public class StandardContext extends ContainerBase
     }
 
     /**
-     * hook to register that we need to scan for security annotations.
+     * Hook to register that we need to scan for security annotations.
      * @param wrapper   The wrapper for the Servlet that was added
+     * @return the associated registration
      */
     public ServletRegistration.Dynamic dynamicServletAdded(Wrapper wrapper) {
         Servlet s = wrapper.getServlet();
@@ -4428,8 +4457,8 @@ public class StandardContext extends ContainerBase
     }
 
     /**
-     * hook to track which registrations need annotation scanning
-     * @param servlet
+     * Hook to track which registrations need annotation scanning
+     * @param servlet the Servlet to add
      */
     public void dynamicServletCreated(Servlet servlet) {
         createdServlets.add(servlet);
@@ -4540,7 +4569,7 @@ public class StandardContext extends ContainerBase
 
     /**
      * Configure and initialize the set of filters for this Context.
-     * Return <code>true</code> if all filter initialization completed
+     * @return <code>true</code> if all filter initialization completed
      * successfully, or <code>false</code> otherwise.
      */
     public boolean filterStart() {
@@ -4577,7 +4606,7 @@ public class StandardContext extends ContainerBase
 
     /**
      * Finalize and release the set of filters for this Context.
-     * Return <code>true</code> if all filter finalization completed
+     * @return <code>true</code> if all filter finalization completed
      * successfully, or <code>false</code> otherwise.
      */
     public boolean filterStop() {
@@ -4605,6 +4634,7 @@ public class StandardContext extends ContainerBase
      * specified filter name, if any; otherwise return <code>null</code>.
      *
      * @param name Name of the desired filter
+     * @return the filter config object
      */
     public FilterConfig findFilterConfig(String name) {
 
@@ -4615,7 +4645,8 @@ public class StandardContext extends ContainerBase
 
     /**
      * Configure the set of instantiated application event listeners
-     * for this Context.  Return <code>true</code> if all listeners wre
+     * for this Context.
+     * @return <code>true</code> if all listeners wre
      * initialized successfully, or <code>false</code> otherwise.
      */
     public boolean listenerStart() {
@@ -4730,7 +4761,7 @@ public class StandardContext extends ContainerBase
 
     /**
      * Send an application stop event to all interested listeners.
-     * Return <code>true</code> if all events were sent successfully,
+     * @return <code>true</code> if all events were sent successfully,
      * or <code>false</code> otherwise.
      */
     public boolean listenerStop() {
@@ -4819,8 +4850,7 @@ public class StandardContext extends ContainerBase
 
     /**
      * Allocate resources, including proxy.
-     * Return <code>true</code> if initialization was successfull,
-     * or <code>false</code> otherwise.
+     * @throws LifecycleException if a start error occurs
      */
     public void resourcesStart() throws LifecycleException {
 
@@ -4844,6 +4874,7 @@ public class StandardContext extends ContainerBase
 
     /**
      * Deallocate resources and destroy proxy.
+     * @return <code>true</code> if no error occurred
      */
     public boolean resourcesStop() {
 
@@ -4873,6 +4904,7 @@ public class StandardContext extends ContainerBase
      *
      * @param children Array of wrappers for all currently defined
      *  servlets (including those not declared load on startup)
+     * @return <code>true</code> if load on startup was considered successful
      */
     public boolean loadOnStartup(Container children[]) {
 
@@ -5628,6 +5660,7 @@ public class StandardContext extends ContainerBase
      *
      * @param urlPattern The URL pattern to be adjusted (if needed)
      *  and returned
+     * @return the URL pattern with a leading slash if needed
      */
     protected String adjustURLPattern(String urlPattern) {
 
@@ -5647,6 +5680,8 @@ public class StandardContext extends ContainerBase
 
     /**
      * Are we processing a version 2.2 deployment descriptor?
+     *
+     * @return <code>true</code> if running a legacy Servlet 2.2 application
      */
     @Override
     public boolean isServlet22() {
@@ -5734,7 +5769,7 @@ public class StandardContext extends ContainerBase
 
     /**
      * Bind current thread, both for CL purposes and for JNDI ENC support
-     * during : startup, shutdown and realoading of the context.
+     * during : startup, shutdown and reloading of the context.
      *
      * @return the previous context class loader
      */
@@ -5756,7 +5791,9 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Unbind thread.
+     * Unbind thread and restore the specified context classloader.
+     *
+     * @param oldContextClassLoader the previous classloader
      */
     protected void unbindThread(ClassLoader oldContextClassLoader) {
 
@@ -5841,6 +5878,8 @@ public class StandardContext extends ContainerBase
 
     /**
      * Get naming context full name.
+     *
+     * @return the context name
      */
     private String getNamingContextName() {
         if (namingContextName == null) {
@@ -5867,6 +5906,8 @@ public class StandardContext extends ContainerBase
 
     /**
      * Naming context listener accessor.
+     *
+     * @return the naming context listener associated with the webapp
      */
     public NamingContextListener getNamingContextListener() {
         return namingContextListener;
@@ -5875,6 +5916,8 @@ public class StandardContext extends ContainerBase
 
     /**
      * Naming context listener setter.
+     *
+     * @param namingContextListener the new naming context listener
      */
     public void setNamingContextListener(NamingContextListener namingContextListener) {
         this.namingContextListener = namingContextListener;
@@ -5882,7 +5925,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Return the request processing paused flag for this Context.
+     * @return the request processing paused flag for this Context.
      */
     @Override
     public boolean getPaused() {
@@ -6114,6 +6157,7 @@ public class StandardContext extends ContainerBase
      * for conformance with specification requirements.
      *
      * @param urlPattern URL pattern to be validated
+     * @return <code>true</code> if the URL pattern is conformant
      */
     private boolean validateURLPattern(String urlPattern) {
 
@@ -6330,7 +6374,8 @@ public class StandardContext extends ContainerBase
     }
 
 
-    /* Add a JMX-NotificationListener
+    /**
+     * Add a JMX NotificationListener
      * @see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
      */
     @Override
@@ -6354,7 +6399,7 @@ public class StandardContext extends ContainerBase
     // ------------------------------------------------------------- Attributes
 
     /**
-     * Return the naming resources associated with this web application.
+     * @return the naming resources associated with this web application.
      */
     public String[] getWelcomeFiles() {
 
@@ -6412,7 +6457,7 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Support for "stateManageable" JSR77
+     * @return support for "stateManageable" JSR77
      */
     public boolean isStateManageable() {
         return true;

==================================================
StandardServer.java
index b5d40bb1ec..588b144209 100644
--- a/java/org/apache/catalina/core/StandardHost.java
+++ b/java/org/apache/catalina/core/StandardHost.java
@@ -331,7 +331,7 @@ public class StandardHost extends ContainerBase implements Host {
 
 
     /**
-     * Returns true if the Host will attempt to create directories for appBase and xmlBase
+     * @return <code>true</code> if the Host will attempt to create directories for appBase and xmlBase
      * unless they already exist.
      */
     @Override
@@ -340,8 +340,8 @@ public class StandardHost extends ContainerBase implements Host {
     }
 
     /**
-     * Set to true if the Host should attempt to create directories for xmlBase and appBase upon startup
-     * @param createDirs
+     * Set to <code>true</code> if the Host should attempt to create directories for xmlBase and appBase upon startup
+     * @param createDirs the new flag value
      */
     @Override
     public void setCreateDirs(boolean createDirs) {
@@ -349,7 +349,7 @@ public class StandardHost extends ContainerBase implements Host {
     }
 
     /**
-     * Return the value of the auto deploy flag.  If true, it indicates that
+     * @return the value of the auto deploy flag.  If true, it indicates that
      * this host's child webapps will be dynamically deployed.
      */
     @Override
@@ -377,7 +377,7 @@ public class StandardHost extends ContainerBase implements Host {
 
 
     /**
-     * Return the Java class name of the context configuration class
+     * @return the Java class name of the context configuration class
      * for new web applications.
      */
     @Override
@@ -406,7 +406,7 @@ public class StandardHost extends ContainerBase implements Host {
 
 
     /**
-     * Return the Java class name of the Context implementation class
+     * @return the Java class name of the Context implementation class
      * for new web applications.
      */
     public String getContextClass() {
@@ -433,7 +433,7 @@ public class StandardHost extends ContainerBase implements Host {
 
 
     /**
-     * Return the value of the deploy on startup flag.  If true, it indicates
+     * @return the value of the deploy on startup flag.  If <code>true</code>, it indicates
      * that this host's child webapps should be discovered and automatically
      * deployed at startup time.
      */
@@ -462,7 +462,7 @@ public class StandardHost extends ContainerBase implements Host {
 
 
     /**
-     * Deploy XML Context config files flag accessor.
+     * @return <code>true</code> if XML context descriptors should be deployed.
      */
     public boolean isDeployXML() {
 
@@ -473,6 +473,8 @@ public class StandardHost extends ContainerBase implements Host {
 
     /**
      * Deploy XML Context config files flag mutator.
+     *
+     * @param deployXML <code>true</code> if context descirptors should be deployed
      */
     public void setDeployXML(boolean deployXML) {
 
@@ -482,7 +484,7 @@ public class StandardHost extends ContainerBase implements Host {
 
 
     /**
-     * Return the copy XML config file flag for this component.
+     * @return the copy XML config file flag for this component.
      */
     public boolean isCopyXML() {
 
@@ -504,7 +506,7 @@ public class StandardHost extends ContainerBase implements Host {
 
 
     /**
-     * Return the Java class name of the error report valve class
+     * @return the Java class name of the error report valve class
      * for new web applications.
      */
     public String getErrorReportValveClass() {
@@ -532,7 +534,7 @@ public class StandardHost extends ContainerBase implements Host {
 
 
     /**
-     * Return the canonical, fully qualified, name of the virtual host
+     * @return the canonical, fully qualified, name of the virtual host
      * this Container represents.
      */
     @Override
@@ -568,7 +570,7 @@ public class StandardHost extends ContainerBase implements Host {
 
 
     /**
-     * Unpack WARs flag accessor.
+     * @return <code>true</code> if WARs should be unpacked on deployment.
      */
     public boolean isUnpackWARs() {
 
@@ -579,6 +581,8 @@ public class StandardHost extends ContainerBase implements Host {
 
     /**
      * Unpack WARs flag mutator.
+     *
+     * @param unpackWARs <code>true</code> to unpack WARs on deployement
      */
     public void setUnpackWARs(boolean unpackWARs) {
 
@@ -588,7 +592,7 @@ public class StandardHost extends ContainerBase implements Host {
 
 
     /**
-     * Host work directory base.
+     * @return host work directory base.
      */
     public String getWorkDir() {
 
@@ -597,7 +601,9 @@ public class StandardHost extends ContainerBase implements Host {
 
 
     /**
-     * Host work directory base.
+     * Set host work directory base.
+     *
+     * @param workDir the new base work folder for this host
      */
     public void setWorkDir(String workDir) {
 
@@ -606,7 +612,7 @@ public class StandardHost extends ContainerBase implements Host {
 
 
     /**
-     * Return the regular expression that defines the files and directories in
+     * @return the regular expression that defines the files and directories in
      * the host's {@link #getAppBase} that will be ignored by the automatic
      * deployment process.
      */
@@ -620,7 +626,7 @@ public class StandardHost extends ContainerBase implements Host {
 
 
     /**
-     * Return the compiled regular expression that defines the files and
+     * @return the compiled regular expression that defines the files and
      * directories in the host's {@link #getAppBase} that will be ignored by the
      * automatic deployment process.
      */
@@ -634,6 +640,8 @@ public class StandardHost extends ContainerBase implements Host {
      * Set the regular expression that defines the files and directories in
      * the host's {@link #getAppBase} that will be ignored by the automatic
      * deployment process.
+     *
+     * @param deployIgnore the regexp
      */
     @Override
     public void setDeployIgnore(String deployIgnore) {
@@ -654,11 +662,19 @@ public class StandardHost extends ContainerBase implements Host {
     }
 
 
+    /**
+     * @return <code>true</code> if a webapp start should fail if a Servlet startup fails
+     */
     public boolean isFailCtxIfServletStartFails() {
         return failCtxIfServletStartFails;
     }
 
 
+    /**
+     * Change the behavior of Servlet startup errors on web application starts.
+     * @param failCtxIfServletStartFails <code>false</code> to ignore errors on Servlets which
+     *    are stated when the web application starts
+     */
     public void setFailCtxIfServletStartFails(
             boolean failCtxIfServletStartFails) {
         boolean oldFailCtxIfServletStartFails = this.failCtxIfServletStartFails;
@@ -743,6 +759,8 @@ public class StandardHost extends ContainerBase implements Host {
      * This is usually triggered on context reload. Note: This method attempts
      * to force a full garbage collection. This should be used with extreme
      * caution on a production system.
+     *
+     * @return a list of possibly leaking contexts
      */
     public String[] findReloadedContextMemoryLeaks() {
 
@@ -764,7 +782,7 @@ public class StandardHost extends ContainerBase implements Host {
     }
 
     /**
-     * Return the set of alias names for this Host.  If none are defined,
+     * @return the set of alias names for this Host.  If none are defined,
      * a zero length array is returned.
      */
     @Override
@@ -818,7 +836,7 @@ public class StandardHost extends ContainerBase implements Host {
 
 
     /**
-     * Return a String representation of this component.
+     * @return a String representation of this component.
      */
     @Override
     public String toString() {
@@ -875,11 +893,11 @@ public class StandardHost extends ContainerBase implements Host {
 
     // -------------------- JMX  --------------------
     /**
-      * Return the MBean Names of the Valves associated with this Host
+      * @return the MBean Names of the Valves associated with this Host
       *
       * @exception Exception if an MBean cannot be created or registered
       */
-     public String [] getValveNames() throws Exception {
+     public String[] getValveNames() throws Exception {
          Valve [] valves = this.getPipeline().getValves();
          String [] mbeanNames = new String[valves.length];
          for (int i = 0; i < valves.length; i++) {

==================================================
StandardWrapper.java
index 1e617dd646..064011ecf3 100644
--- a/java/org/apache/catalina/core/StandardServer.java
+++ b/java/org/apache/catalina/core/StandardServer.java
@@ -523,7 +523,7 @@ public final class StandardServer extends LifecycleMBeanBase implements Server {
 
 
     /**
-     * Return the specified Service (if it exists); otherwise return
+     * @return the specified Service (if it exists); otherwise return
      * <code>null</code>.
      *
      * @param name Name of the Service to be returned
@@ -547,7 +547,7 @@ public final class StandardServer extends LifecycleMBeanBase implements Server {
 
 
     /**
-     * Return the set of Services defined within this Server.
+     * @return the set of Services defined within this Server.
      */
     @Override
     public Service[] findServices() {
@@ -557,7 +557,7 @@ public final class StandardServer extends LifecycleMBeanBase implements Server {
     }
 
     /**
-     * Return the JMX service names.
+     * @return the JMX service names.
      */
     public ObjectName[] getServiceNames() {
         ObjectName onames[]=new ObjectName[ services.length ];
@@ -708,6 +708,7 @@ public final class StandardServer extends LifecycleMBeanBase implements Server {
      * Write the configuration information for <code>Context</code>
      * out to the specified configuration file.
      *
+     * @param context the context which should save its configuration
      * @exception javax.management.InstanceNotFoundException if the managed resource object
      *  cannot be found
      * @exception javax.management.MBeanException if the initializer of the object throws
@@ -734,7 +735,7 @@ public final class StandardServer extends LifecycleMBeanBase implements Server {
 
 
     /**
-     * Return true if naming should be used.
+     * @return <code>true</code> if naming should be used.
      */
     private boolean isUseNaming() {
         boolean useNaming = true;

==================================================
StandardWrapperFacade.java
index ec2c4c0e9a..78a1a136b5 100644
--- a/java/org/apache/catalina/core/StandardWrapper.java
+++ b/java/org/apache/catalina/core/StandardWrapper.java
@@ -328,7 +328,7 @@ public class StandardWrapper extends ContainerBase
 
 
     /**
-     * Return the number of active allocations of this servlet, even if they
+     * @return the number of active allocations of this servlet, even if they
      * are all for the same instance (as will be true for servlets that do
      * not implement <code>SingleThreadModel</code>.
      */
@@ -338,7 +338,7 @@ public class StandardWrapper extends ContainerBase
 
 
     /**
-     * Return the load-on-startup order value (negative value means
+     * @return the load-on-startup order value (negative value means
      * load on first call).
      */
     @Override
@@ -393,13 +393,16 @@ public class StandardWrapper extends ContainerBase
         }
     }
 
+    /**
+     * @return the load-on-startup value that was parsed
+     */
     public String getLoadOnStartupString() {
         return Integer.toString( getLoadOnStartup());
     }
 
 
     /**
-     * Return maximum number of instances that will be allocated when a single
+     * @return maximum number of instances that will be allocated when a single
      * thread model servlet is used.
      */
     public int getMaxInstances() {
@@ -447,7 +450,7 @@ public class StandardWrapper extends ContainerBase
 
 
     /**
-     * Return the run-as identity for this servlet.
+     * @return the run-as identity for this servlet.
      */
     @Override
     public String getRunAs() {
@@ -473,7 +476,7 @@ public class StandardWrapper extends ContainerBase
 
 
     /**
-     * Return the fully qualified servlet class name for this servlet.
+     * @return the fully qualified servlet class name for this servlet.
      */
     @Override
     public String getServletClass() {
@@ -518,7 +521,7 @@ public class StandardWrapper extends ContainerBase
 
 
     /**
-     * Return <code>true</code> if the servlet class represented by this
+     * @return <code>true</code> if the servlet class represented by this
      * component implements the <code>SingleThreadModel</code> interface.
      */
     public boolean isSingleThreadModel() {
@@ -549,7 +552,7 @@ public class StandardWrapper extends ContainerBase
 
 
     /**
-     * Is this servlet currently unavailable?
+     * @return <code>true</code> if the Servlet has been marked unavailable.
      */
     @Override
     public boolean isUnavailable() {
@@ -605,7 +608,7 @@ public class StandardWrapper extends ContainerBase
 
 
     /**
-     * Return the associated servlet instance.
+     * @return the associated servlet instance.
      */
     @Override
     public Servlet getServlet() {
@@ -655,6 +658,7 @@ public class StandardWrapper extends ContainerBase
      * Extract the root cause from a servlet exception.
      *
      * @param e The servlet exception
+     * @return the root cause of the Servlet exception
      */
     public static Throwable getRootCause(ServletException e) {
         Throwable rootCause = e;
@@ -1028,6 +1032,8 @@ public class StandardWrapper extends ContainerBase
      * at least one initialized instance.  This can be used, for example, to
      * load servlets that are marked in the deployment descriptor to be loaded
      * at server startup time.
+     * @return the loaded Servlet instance
+     * @throws ServletException for a Servlet load error
      */
     public synchronized Servlet loadServlet() throws ServletException {
 
@@ -1265,7 +1271,7 @@ public class StandardWrapper extends ContainerBase
 
 
     /**
-     * Return a String representation of this component.
+     * @return a String representation of this component.
      */
     @Override
     public String toString() {
@@ -1447,7 +1453,7 @@ public class StandardWrapper extends ContainerBase
 
 
     /**
-     * Return the initialization parameter value for the specified name,
+     * @return the initialization parameter value for the specified name,
      * if any; otherwise return <code>null</code>.
      *
      * @param name Name of the initialization parameter to retrieve
@@ -1461,7 +1467,7 @@ public class StandardWrapper extends ContainerBase
 
 
     /**
-     * Return the set of initialization parameter names defined for this
+     * @return the set of initialization parameter names defined for this
      * servlet.  If none are defined, an empty Enumeration is returned.
      */
     @Override
@@ -1478,7 +1484,7 @@ public class StandardWrapper extends ContainerBase
 
 
     /**
-     * Return the servlet context with which this servlet is associated.
+     * @return the servlet context with which this servlet is associated.
      */
     @Override
     public ServletContext getServletContext() {
@@ -1494,7 +1500,7 @@ public class StandardWrapper extends ContainerBase
 
 
     /**
-     * Return the name of this servlet.
+     * @return the name of this servlet.
      */
     @Override
     public String getServletName() {
@@ -1577,7 +1583,7 @@ public class StandardWrapper extends ContainerBase
 
 
     /**
-     * Return <code>true</code> if the specified class name represents a
+     * @return <code>true</code> if the specified class name represents a
      * container provided servlet class that should be loaded by the
      * server class loader.
      *
@@ -1780,14 +1786,15 @@ public class StandardWrapper extends ContainerBase
 
 
     /**
-     * JSR 77. Always return false.
+     * @return JSR 77. Always return <code>false</code>.
      */
     public boolean isStateManageable() {
         return false;
     }
 
 
-    /* Remove a JMX notficationListener
+    /**
+     * Remove a JMX notficationListener
      * @see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
      */
     @Override
@@ -1798,9 +1805,9 @@ public class StandardWrapper extends ContainerBase
 
     protected MBeanNotificationInfo[] notificationInfo;
 
-    /* Get JMX Broadcaster Info
-     * @TODO use StringManager for international support!
-     * @TODO This two events we not send j2ee.state.failed and j2ee.attribute.changed!
+    /**
+     * Get JMX Broadcaster Info
+     * FIXME: This two events we not send j2ee.state.failed and j2ee.attribute.changed!
      * @see javax.management.NotificationBroadcaster#getNotificationInfo()
      */
     @Override
@@ -1845,7 +1852,8 @@ public class StandardWrapper extends ContainerBase
     }
 
 
-    /* Add a JMX-NotificationListener
+    /**
+     * Add a JMX-NotificationListener
      * @see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
      */
     @Override

==================================================
NamingResourcesImpl.java
index fc0691a197..7ebed586af 100644
--- a/java/org/apache/catalina/core/StandardWrapperFacade.java
+++ b/java/org/apache/catalina/core/StandardWrapperFacade.java
@@ -39,6 +39,7 @@ public final class StandardWrapperFacade
 
     /**
      * Create a new facade around a StandardWrapper.
+     * @param config the associated wrapper
      */
     public StandardWrapperFacade(StandardWrapper config) {
 

==================================================
