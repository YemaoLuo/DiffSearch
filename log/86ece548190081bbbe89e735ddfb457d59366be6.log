86ece548190081bbbe89e735ddfb457d59366be6
==================================================
Fix Eclipse warnings
==================================================
Mark Emlyn
==================================================
Thu Oct 21 22:14:58 2010 +0000
==================================================
RecyclableNamingEnumeration.java
Fix Eclipse warnings

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1026163 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Resource.java
index 83a184c589..70a80ec29e 100644
--- a/java/org/apache/naming/resources/RecyclableNamingEnumeration.java
+++ b/java/org/apache/naming/resources/RecyclableNamingEnumeration.java
@@ -65,6 +65,7 @@ public class RecyclableNamingEnumeration<E>
     /**
      * Retrieves the next element in the enumeration.
      */
+    @Override
     public E next()
         throws NamingException {
         return nextElement();
@@ -74,6 +75,7 @@ public class RecyclableNamingEnumeration<E>
     /**
      * Determines whether there are any more elements in the enumeration.
      */
+    @Override
     public boolean hasMore()
         throws NamingException {
         return enumeration.hasMoreElements();
@@ -83,16 +85,19 @@ public class RecyclableNamingEnumeration<E>
     /**
      * Closes this enumeration.
      */
-    public void close()
-        throws NamingException {
+    @Override
+    public void close() throws NamingException {
+        // NO-OP
     }
 
 
+    @Override
     public boolean hasMoreElements() {
         return enumeration.hasMoreElements();
     }
 
 
+    @Override
     public E nextElement() {
         return enumeration.nextElement();
     }

==================================================
ResourceAttributes.java
index bdf321eddd..2afb9d8da2 100644
--- a/java/org/apache/naming/resources/Resource.java
+++ b/java/org/apache/naming/resources/Resource.java
@@ -34,6 +34,7 @@ public class Resource {
     
     
     public Resource() {
+        // NO-OP
     }
     
     
@@ -69,9 +70,9 @@ public class Resource {
      * Content accessor.
      * 
      * @return InputStream
+     * @throws IOException
      */
-    public InputStream streamContent()
-        throws IOException {
+    public InputStream streamContent() throws IOException {
         if (binaryContent != null) {
             return new ByteArrayInputStream(binaryContent);
         }

==================================================
ResourceCache.java
index 7f679b0416..d41b438eb4 100644
--- a/java/org/apache/naming/resources/ResourceAttributes.java
+++ b/java/org/apache/naming/resources/ResourceAttributes.java
@@ -41,6 +41,7 @@ public class ResourceAttributes implements Attributes {
     
     // -------------------------------------------------------------- Constants
     
+    private static final long serialVersionUID = 1L;
     
     // Default attribute names
     
@@ -175,6 +176,7 @@ public class ResourceAttributes implements Attributes {
      * Default constructor.
      */
     public ResourceAttributes() {
+        // NO-OP
     }
     
     
@@ -772,6 +774,7 @@ public class ResourceAttributes implements Attributes {
     /**
      * Get attribute.
      */
+    @Override
     public Attribute get(String attrID) {
         if (attributes == null) {
             if (attrID.equals(CREATION_DATE)) {
@@ -829,6 +832,7 @@ public class ResourceAttributes implements Attributes {
     /**
      * Put attribute.
      */
+    @Override
     public Attribute put(Attribute attribute) {
         if (attributes == null) {
             try {
@@ -845,6 +849,7 @@ public class ResourceAttributes implements Attributes {
     /**
      * Put attribute.
      */
+    @Override
     public Attribute put(String attrID, Object val) {
         if (attributes == null) {
             return null; // No reason to implement this
@@ -857,6 +862,7 @@ public class ResourceAttributes implements Attributes {
     /**
      * Remove attribute.
      */
+    @Override
     public Attribute remove(String attrID) {
         if (attributes == null) {
             return null; // No reason to implement this
@@ -869,6 +875,7 @@ public class ResourceAttributes implements Attributes {
     /**
      * Get all attributes.
      */
+    @Override
     public NamingEnumeration<? extends Attribute> getAll() {
         if (attributes == null) {
             Vector<BasicAttribute> attributes = new Vector<BasicAttribute>();
@@ -916,6 +923,7 @@ public class ResourceAttributes implements Attributes {
     /**
      * Get all attribute IDs.
      */
+    @Override
     public NamingEnumeration<String> getIDs() {
         if (attributes == null) {
             Vector<String> attributeIDs = new Vector<String>();
@@ -957,6 +965,7 @@ public class ResourceAttributes implements Attributes {
     /**
      * Retrieves the number of attributes in the attribute set.
      */
+    @Override
     public int size() {
         if (attributes == null) {
             int size = 0;
@@ -985,6 +994,7 @@ public class ResourceAttributes implements Attributes {
     /**
      * Case sensitivity.
      */
+    @Override
     public boolean isCaseIgnored() {
         return false;
     }

==================================================
