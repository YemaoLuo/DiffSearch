d2e42bba86208eafcfa7c9c8498f9aebd6315155
==================================================
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=57675
==================================================
Mark Thomas
==================================================
Sun Mar 8 21:58:32 2015 +0000
==================================================
ExtendedAccessLogValve.java
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=57675
Correctly quote strings.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1665085 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestExtendedAccessLogValve.java
index 1825f30a33..d22f52c40a 100644
--- a/java/org/apache/catalina/valves/ExtendedAccessLogValve.java
+++ b/java/org/apache/catalina/valves/ExtendedAccessLogValve.java
@@ -141,16 +141,16 @@ public class ExtendedAccessLogValve extends AccessLogValve {
     // -------------------------------------------------------- Private Methods
 
     /**
-     *  Wrap the incoming value into quotes and escape any inner
-     *  quotes with double quotes.
+     * Wrap the incoming value with double quotes (") and escape any double
+     * quotes appearing in the value using two double quotes ("").
      *
-     *  @param value - The value to wrap quotes around
-     *  @return '-' if empty of null. Otherwise, toString() will
+     *  @param value - The value to wrap
+     *  @return '-' if null. Otherwise, toString() will
      *     be called on the object and the value will be wrapped
      *     in quotes and any quotes will be escaped with 2
      *     sets of quotes.
      */
-    private String wrap(Object value) {
+    static String wrap(Object value) {
         String svalue;
         // Does the value contain a " ? If so must encode it
         if (value == null || "-".equals(value)) {
@@ -159,32 +159,29 @@ public class ExtendedAccessLogValve extends AccessLogValve {
 
         try {
             svalue = value.toString();
-            if ("".equals(svalue)) {
-                return "-";
-            }
         } catch (Throwable e) {
             ExceptionUtils.handleThrowable(e);
             /* Log error */
             return "-";
         }
 
-        /* Wrap all quotes in double quotes. */
+        /* Wrap all values in double quotes. */
         StringBuilder buffer = new StringBuilder(svalue.length() + 2);
-        buffer.append('\'');
+        buffer.append('\"');
         int i = 0;
         while (i < svalue.length()) {
-            int j = svalue.indexOf('\'', i);
+            int j = svalue.indexOf('\"', i);
             if (j == -1) {
                 buffer.append(svalue.substring(i));
                 i = svalue.length();
             } else {
                 buffer.append(svalue.substring(i, j + 1));
                 buffer.append('"');
-                i = j + 2;
+                i = j + 1;
             }
         }
 
-        buffer.append('\'');
+        buffer.append('\"');
         return buffer.toString();
     }
 

==================================================
