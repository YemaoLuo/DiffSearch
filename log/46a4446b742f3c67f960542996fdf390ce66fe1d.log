46a4446b742f3c67f960542996fdf390ce66fe1d
==================================================
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61197
==================================================
Mark Thomas
==================================================
Mon Jun 19 18:34:02 2017 +0000
==================================================
Response.java
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61197
Ensure that the charset name used in the Content-Type header has exactly the same form as that provided by the application. This reverts a behavioural change in 9.0.0.M21 that caused problems for some clients.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1799253 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Response.java
index a26ae098cc..046e0b1616 100644
--- a/java/org/apache/catalina/connector/Response.java
+++ b/java/org/apache/catalina/connector/Response.java
@@ -56,7 +56,6 @@ import org.apache.catalina.util.SessionConfig;
 import org.apache.coyote.ActionCode;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
-import org.apache.tomcat.util.buf.B2CConverter;
 import org.apache.tomcat.util.buf.CharChunk;
 import org.apache.tomcat.util.buf.UEncoder;
 import org.apache.tomcat.util.buf.UEncoder.SafeCharsSet;
@@ -553,9 +552,9 @@ public class Response implements HttpServletResponse {
      */
     @Override
     public String getCharacterEncoding() {
-        Charset charset = getCoyoteResponse().getCharset();
+        String charset = getCoyoteResponse().getCharsetName();
         if (charset != null) {
-            return charset.name();
+            return charset;
         }
 
         Context context = getContext();
@@ -804,7 +803,7 @@ public class Response implements HttpServletResponse {
             // Ignore charset if getWriter() has already been called
             if (!usingWriter) {
                 try {
-                    getCoyoteResponse().setCharset(B2CConverter.getCharset(m[1]));
+                    getCoyoteResponse().setCharset(m[1]);
                 } catch (UnsupportedEncodingException e) {
                     log.warn(sm.getString("coyoteResponse.encoding.invalid", m[1]), e);
                 }
@@ -841,7 +840,7 @@ public class Response implements HttpServletResponse {
         }
 
         try {
-            getCoyoteResponse().setCharset(B2CConverter.getCharset(charset));
+            getCoyoteResponse().setCharset(charset);
         } catch (UnsupportedEncodingException e) {
             log.warn(sm.getString("coyoteResponse.encoding.invalid", charset), e);
             return;
@@ -883,7 +882,7 @@ public class Response implements HttpServletResponse {
         String charset = getContext().getCharset(locale);
         if (charset != null) {
             try {
-                getCoyoteResponse().setCharset(B2CConverter.getCharset(charset));
+                getCoyoteResponse().setCharset(charset);
             } catch (UnsupportedEncodingException e) {
                 log.warn(sm.getString("coyoteResponse.encoding.invalid", charset), e);
             }

==================================================
TestResponse.java
index f9459d69af..fbd1aa8dd6 100644
--- a/java/org/apache/coyote/Response.java
+++ b/java/org/apache/coyote/Response.java
@@ -112,6 +112,10 @@ public final class Response {
     String contentType = null;
     String contentLanguage = null;
     Charset charset = null;
+    // Retain the original name used to set the charset so exactly that name is
+    // used in the ContentType header. Some (arguably non-specification
+    // compliant) user agents are very particular
+    String charsetName = null;
     long contentLength = -1;
     private Locale locale = DEFAULT_LOCALE;
 
@@ -415,17 +419,21 @@ public final class Response {
      * Overrides the character encoding used in the body of the response. This
      * method must be called prior to writing output using getWriter().
      *
-     * @param charset The character encoding.
+     * @param charsetName The name of character encoding.
+     *
+     * @throws UnsupportedEncodingException If the specified name is not
+     *         recognised
      */
-    public void setCharset(Charset charset) {
+    public void setCharset(String charsetName) throws UnsupportedEncodingException {
         if (isCommitted()) {
             return;
         }
-        if (charset == null) {
+        if (charsetName == null) {
             return;
         }
 
-        this.charset = charset;
+        this.charset = B2CConverter.getCharset(charsetName);
+        this.charsetName = charsetName;
     }
 
 
@@ -434,6 +442,11 @@ public final class Response {
     }
 
 
+    public String getCharsetName() {
+        return charsetName;
+    }
+
+
     /**
      * Sets the content type.
      *
@@ -489,7 +502,7 @@ public final class Response {
 
         if (ret != null
             && charset != null) {
-            ret = ret + ";charset=" + charset.name();
+            ret = ret + ";charset=" + charsetName;
         }
 
         return ret;
@@ -534,6 +547,7 @@ public final class Response {
         contentLanguage = null;
         locale = DEFAULT_LOCALE;
         charset = null;
+        charsetName = null;
         contentLength = -1;
         status = 200;
         message = null;

==================================================
