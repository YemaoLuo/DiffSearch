accee40bb52c7841a4314c8303674a0f4ea2dac5
==================================================
Refactor the calculation of session manager statistics to the session manager as suggested by kkolinko
==================================================
Mark Emlyn
==================================================
Wed Nov 17 23:24:25 2010 +0000
==================================================
ManagerBase.java
Refactor the calculation of session manager statistics to the session manager as suggested by kkolinko

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1036281 13f79535-47bb-0310-9956-ffa450edef68



==================================================
StandardSession.java
index 88bca26963..f92d2e4ba4 100644
--- a/java/org/apache/catalina/session/ManagerBase.java
+++ b/java/org/apache/catalina/session/ManagerBase.java
@@ -1003,6 +1003,25 @@ public abstract class ManagerBase extends LifecycleMBeanBase
      */
     @Override
     public void remove(Session session) {
+        
+        // If the session has expired - as opposed to just being removed from
+        // the manager because it is being persisted - update the expired stats
+        if (!session.isValid()) {
+            long timeNow = System.currentTimeMillis();
+            int timeAlive = (int) ((timeNow - session.getCreationTime())/1000);
+            synchronized (this) {
+                if (timeAlive > getSessionMaxAliveTime()) {
+                    setSessionMaxAliveTime(timeAlive);
+                }
+                long numExpired = getExpiredSessions();
+                numExpired++;
+                setExpiredSessions(numExpired);
+                int average = getSessionAverageAliveTime();
+                average = (int) (((average * (numExpired-1)) + timeAlive)/numExpired);
+                setSessionAverageAliveTime(average);
+            }
+        }
+
         if (session.getIdInternal() != null) {
             sessions.remove(session.getIdInternal());
         }

==================================================
