cc9db74a8d096e79108b58c74c3337d989ceffa9
==================================================
Allow variable size of AJP message via packetSize=n in <Connector/>.
==================================================
Jean-Frederic Clere
==================================================
Wed Oct 25 10:18:02 2006 +0000
==================================================
ChannelSocket.java
Allow variable size of AJP message via packetSize=n in <Connector/>.


git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk@467599 13f79535-47bb-0310-9956-ffa450edef68



==================================================
JkInputStream.java
index 8bca7b2d11..592757df92 100644
--- a/java/org/apache/jk/common/ChannelSocket.java
+++ b/java/org/apache/jk/common/ChannelSocket.java
@@ -654,7 +654,7 @@ public class ChannelSocket extends JkHandler
             log.debug("Accepting ajp connections on " + port);
         while( running ) {
 	    try{
-                MsgContext ep=createMsgContext();
+                MsgContext ep=createMsgContext(packetSize);
                 ep.setSource(this);
                 ep.setWorkerEnv( wEnv );
                 this.accept(ep);

==================================================
JkHandler.java
index f56e26c170..72026052b8 100644
--- a/java/org/apache/jk/common/JkInputStream.java
+++ b/java/org/apache/jk/common/JkInputStream.java
@@ -39,8 +39,8 @@ public class JkInputStream implements InputBuffer, OutputBuffer {
     private static org.apache.juli.logging.Log log=
         org.apache.juli.logging.LogFactory.getLog( JkInputStream.class );
 
-    private Msg bodyMsg = new MsgAjp();
-    private Msg outputMsg = new MsgAjp();
+    private Msg bodyMsg;
+    private Msg outputMsg;
     private MsgContext mc;
 
     
@@ -62,8 +62,16 @@ public class JkInputStream implements InputBuffer, OutputBuffer {
         }
     }
 
-    public JkInputStream(MsgContext context) {
+    public JkInputStream(MsgContext context, int bsize) {
         mc = context;
+        bodyMsg = new MsgAjp(bsize);
+        outputMsg = new MsgAjp(bsize);
+    }
+    /**
+     * @deprecated
+     */
+    public JkInputStream(MsgContext context) {
+        this(context, 8*1024);
     }
 
     // -------------------- Jk specific methods --------------------

==================================================
MsgContext.java
index 1cadbc64d5..cdbe7e91cb 100644
--- a/java/org/apache/jk/core/JkHandler.java
+++ b/java/org/apache/jk/core/JkHandler.java
@@ -111,9 +111,13 @@ public class JkHandler implements MBeanRegistration, NotificationListener {
     }
 
     public MsgContext createMsgContext() {
-        return new MsgContext();
+        return new MsgContext(8*1024);
     }
     
+    public MsgContext createMsgContext(int bsize) {
+        return new MsgContext(bsize);
+    }
+
     public int invoke(Msg msg, MsgContext mc )  throws IOException {
         return OK;
     }

==================================================
