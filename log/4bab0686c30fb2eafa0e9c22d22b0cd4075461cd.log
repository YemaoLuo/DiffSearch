4bab0686c30fb2eafa0e9c22d22b0cd4075461cd
==================================================
Refactoring
==================================================
Mark Emlyn
==================================================
Thu Jul 29 12:22:27 2010 +0000
==================================================
BackupManager.java
Refactoring
Change BackupManager to extend ClusterManagerBase rather than StandardManager
- The functionality being inherited from StandardManager (persistence over restart) was being bypassed
- Further reduces code duplication, mainly in BackupManager

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@980421 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ClusterManagerBase.java
index 4b5d78e8e1..5228b959bf 100644
--- a/java/org/apache/catalina/ha/session/BackupManager.java
+++ b/java/org/apache/catalina/ha/session/BackupManager.java
@@ -16,8 +16,6 @@
  */
 package org.apache.catalina.ha.session;
 
-import java.io.ByteArrayInputStream;
-import java.io.IOException;
 import java.util.Iterator;
 
 import org.apache.catalina.LifecycleException;
@@ -26,9 +24,7 @@ import org.apache.catalina.Session;
 import org.apache.catalina.ha.CatalinaCluster;
 import org.apache.catalina.ha.ClusterManager;
 import org.apache.catalina.ha.ClusterMessage;
-import org.apache.catalina.session.StandardManager;
 import org.apache.catalina.tribes.Channel;
-import org.apache.catalina.tribes.io.ReplicationStream;
 import org.apache.catalina.tribes.tipis.LazyReplicatedMap;
 import org.apache.catalina.tribes.tipis.AbstractReplicatedMap.MapOwner;
 import org.apache.catalina.util.LifecycleBase;
@@ -40,9 +36,9 @@ import org.apache.juli.logging.LogFactory;
  *@author Filip Hanik
  *@version 1.0
  */
-public class BackupManager extends StandardManager implements ClusterManager, MapOwner
-{
-    private static final Log log = LogFactory.getLog( BackupManager.class );
+public class BackupManager extends ClusterManagerBase implements MapOwner {
+
+    private static final Log log = LogFactory.getLog(BackupManager.class);
 
     protected static long DEFAULT_REPL_TIMEOUT = 15000;//15 seconds
 
@@ -111,13 +107,6 @@ public class BackupManager extends StandardManager implements ClusterManager, Ma
     }
 
 
-    /**
-     * Override persistence since they don't go hand in hand with replication for now.
-     */
-    @Override
-    public void unload() throws IOException {
-    }
-    
     public ClusterMessage requestCompleted(String sessionId) {
         if (!getState().isAvailable()) return null;
         LazyReplicatedMap map = (LazyReplicatedMap)sessions;
@@ -144,29 +133,6 @@ public class BackupManager extends StandardManager implements ClusterManager, Ma
         return new DeltaSession(this);
     }
     
-    public ClassLoader[] getClassLoaders() {
-        return ClusterManagerBase.getClassLoaders(this.container);
-    }
-
-    /**
-     * Open Stream and use correct ClassLoader (Container) Switch
-     * ThreadClassLoader
-     * 
-     * @param data
-     * @return The object input stream
-     * @throws IOException
-     */
-    public ReplicationStream getReplicationStream(byte[] data) throws IOException {
-        return getReplicationStream(data,0,data.length);
-    }
-
-    public ReplicationStream getReplicationStream(byte[] data, int offset, int length) throws IOException {
-        ByteArrayInputStream fis = new ByteArrayInputStream(data, offset, length);
-        return new ReplicationStream(fis, getClassLoaders());
-    }    
-
-
-
 
     @Override
     public String getName() {

==================================================
DeltaManager.java
index b7d3dc15e2..901a090ac6 100644
--- a/java/org/apache/catalina/ha/session/ClusterManagerBase.java
+++ b/java/org/apache/catalina/ha/session/ClusterManagerBase.java
@@ -20,6 +20,8 @@ package org.apache.catalina.ha.session;
 import org.apache.catalina.ha.ClusterManager;
 import org.apache.catalina.session.ManagerBase;
 import org.apache.catalina.Loader;
+import org.apache.catalina.Manager;
+
 import java.io.ByteArrayInputStream;
 import java.io.IOException;
 import org.apache.catalina.tribes.io.ReplicationStream;
@@ -32,7 +34,7 @@ import org.apache.catalina.Container;
  */
 
 public abstract class ClusterManagerBase extends ManagerBase
-        implements ClusterManager{
+        implements ClusterManager {
 
     public static ClassLoader[] getClassLoaders(Container container) {
         Loader loader = null;
@@ -70,4 +72,17 @@ public abstract class ClusterManagerBase extends ManagerBase
     }    
 
 
+    //  ---------------------------------------------------- persistence handler
+
+    /**
+     * {@link Manager} implementations that also implement
+     * {@link ClusterManager} do not support local session persistence.
+     */
+    public void load() {
+        // NOOP 
+    }
+
+    public void unload() {
+        // NOOP
+    }
 }
\ No newline at end of file

==================================================
