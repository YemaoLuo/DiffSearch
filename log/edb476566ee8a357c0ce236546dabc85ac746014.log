edb476566ee8a357c0ce236546dabc85ac746014
==================================================
Follow up to r1594198
==================================================
Mark Thomas
==================================================
Wed Feb 11 14:22:00 2015 +0000
==================================================
AsyncStateMachine.java
Follow up to r1594198
Limit cases where a dispatch is not performed because processing is already on a poller thread.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1658966 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestAsyncContextImpl.java
index 8be962cf01..47b3c2a023 100644
--- a/java/org/apache/coyote/AsyncStateMachine.java
+++ b/java/org/apache/coyote/AsyncStateMachine.java
@@ -299,10 +299,22 @@ public class AsyncStateMachine {
         if (state == AsyncState.STARTING) {
             state = AsyncState.MUST_DISPATCH;
         } else if (state == AsyncState.STARTED ||
-                state == AsyncState.READ_WRITE_OP ||
                 state == AsyncState.TIMING_OUT ||
                 state == AsyncState.ERROR) {
             state = AsyncState.DISPATCHING;
+            // A dispatch is always required.
+            // If on a non-container thread, need to get back onto a container
+            // thread to complete the processing.
+            // If on a container thread the current request/response are not the
+            // request/response associated with the AsyncContext so need a new
+            // container thread to process the different request/response.
+            doDispatch = true;
+        } else if (state == AsyncState.READ_WRITE_OP) {
+            state = AsyncState.DISPATCHING;
+            // If on a container thread then the socket will be added to the
+            // poller poller when the thread exits the
+            // AbstractConnectionHandler.process() method so don't do a dispatch
+            // here which would add it to the poller a second time.
             if (!ContainerThreadMarker.isContainerThread()) {
                 doDispatch = true;
             }

==================================================
