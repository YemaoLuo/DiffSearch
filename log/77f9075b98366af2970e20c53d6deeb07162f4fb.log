77f9075b98366af2970e20c53d6deeb07162f4fb
==================================================
Take advantage of GenericFilter
==================================================
Mark Thomas
==================================================
Fri Oct 9 19:34:08 2015 +0000
==================================================
TestStandardContext.java
Take advantage of GenericFilter

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1707801 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ParamFilter.java
index 4f9b96bcd6..5dce60a136 100644
--- a/test/org/apache/catalina/core/TestStandardContext.java
+++ b/test/org/apache/catalina/core/TestStandardContext.java
@@ -23,9 +23,8 @@ import java.util.Arrays;
 import java.util.HashSet;
 import java.util.Set;
 
-import javax.servlet.Filter;
 import javax.servlet.FilterChain;
-import javax.servlet.FilterConfig;
+import javax.servlet.GenericFilter;
 import javax.servlet.HttpConstraintElement;
 import javax.servlet.HttpMethodConstraintElement;
 import javax.servlet.MultipartConfigElement;
@@ -161,12 +160,9 @@ public class TestStandardContext extends TomcatBaseTest {
         }
     }
 
-    public static final class Bug46243Filter implements Filter {
+    public static final class Bug46243Filter extends GenericFilter {
 
-        @Override
-        public void destroy() {
-            // NOOP
-        }
+        private static final long serialVersionUID = 1L;
 
         @Override
         public void doFilter(ServletRequest request, ServletResponse response,
@@ -177,14 +173,12 @@ public class TestStandardContext extends TomcatBaseTest {
         }
 
         @Override
-        public void init(FilterConfig filterConfig) throws ServletException {
-            boolean fail = filterConfig.getInitParameter("fail").equals("true");
+        public void init() throws ServletException {
+            boolean fail = getInitParameter("fail").equals("true");
             if (fail) {
-                throw new ServletException("Init fail (test)",
-                        new ClassNotFoundException());
+                throw new ServletException("Init fail (test)", new ClassNotFoundException());
             }
         }
-
     }
 
     @Test
@@ -336,12 +330,9 @@ public class TestStandardContext extends TomcatBaseTest {
     }
 
 
-    public static final class Bug49922Filter implements Filter {
+    public static final class Bug49922Filter extends GenericFilter {
 
-        @Override
-        public void destroy() {
-            // NOOP
-        }
+        private static final long serialVersionUID = 1L;
 
         @Override
         public void doFilter(ServletRequest request, ServletResponse response,
@@ -350,11 +341,6 @@ public class TestStandardContext extends TomcatBaseTest {
             response.getWriter().print("Filter");
             chain.doFilter(request, response);
         }
-
-        @Override
-        public void init(FilterConfig filterConfig) throws ServletException {
-            // NOOP
-        }
     }
 
     public static final class Bug49922ForwardServlet extends HttpServlet {

==================================================
CompressionFilter.java
index c9f18213b9..b4aae00ba7 100644
--- a/test/org/apache/catalina/startup/ParamFilter.java
+++ b/test/org/apache/catalina/startup/ParamFilter.java
@@ -20,9 +20,8 @@ import java.io.IOException;
 import java.io.PrintWriter;
 
 import javax.servlet.DispatcherType;
-import javax.servlet.Filter;
 import javax.servlet.FilterChain;
-import javax.servlet.FilterConfig;
+import javax.servlet.GenericFilter;
 import javax.servlet.ServletException;
 import javax.servlet.ServletRequest;
 import javax.servlet.ServletResponse;
@@ -33,27 +32,18 @@ import javax.servlet.annotation.WebInitParam;
  * Test Mock to check Filter Annotations
  * @author Peter Rossbach
  */
-@WebFilter(value = "/param", filterName = "paramFilter", dispatcherTypes = {
-        DispatcherType.ERROR, DispatcherType.ASYNC }, initParams = { @WebInitParam(name = "message", value = "Servlet says: ") })
-public class ParamFilter implements Filter {
+@WebFilter(value = "/param", filterName = "paramFilter",
+        dispatcherTypes = { DispatcherType.ERROR, DispatcherType.ASYNC },
+        initParams = { @WebInitParam(name = "message", value = "Servlet says: ") })
+public class ParamFilter extends GenericFilter {
 
-    private FilterConfig _filterConfig;
-
-    @Override
-    public void init(FilterConfig filterConfig) throws ServletException {
-        _filterConfig = filterConfig;
-    }
+    private static final long serialVersionUID = 1L;
 
     @Override
     public void doFilter(ServletRequest req, ServletResponse res,
             FilterChain chain) throws ServletException, IOException {
         PrintWriter out = res.getWriter();
-        out.print(_filterConfig.getInitParameter("message"));
+        out.print(getInitParameter("message"));
         chain.doFilter(req, res);
     }
-
-    @Override
-    public void destroy() {
-        // destroy
-    }
 }

==================================================
