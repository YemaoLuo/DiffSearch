32a1ed6ea9368fe8f9c3e2e2128197dda0756d67
==================================================
Expand CheckStyle validation of Javadoc
==================================================
Mark Thomas
==================================================
Thu Jan 12 14:48:54 2023 +0000
==================================================
ExpressionFactory.java
Expand CheckStyle validation of Javadoc


==================================================
Servlet.java
index 2eca6205df..a23625d0dc 100644
--- a/java/jakarta/el/ExpressionFactory.java
+++ b/java/jakarta/el/ExpressionFactory.java
@@ -35,7 +35,6 @@ import java.util.concurrent.locks.ReadWriteLock;
 import java.util.concurrent.locks.ReentrantReadWriteLock;
 
 /**
- *
  * @since 2.1
  */
 public abstract class ExpressionFactory {

==================================================
ServletContext.java
index 6aa29dc86d..2ee76a1b71 100644
--- a/java/jakarta/servlet/Servlet.java
+++ b/java/jakarta/servlet/Servlet.java
@@ -87,7 +87,6 @@ public interface Servlet {
     public void init(ServletConfig config) throws ServletException;
 
     /**
-     *
      * Returns a {@link ServletConfig} object, which contains initialization and
      * startup parameters for this servlet. The <code>ServletConfig</code>
      * object returned is the one passed to the <code>init</code> method.

==================================================
HttpJspPage.java
index d860319d40..97a99d6872 100644
--- a/java/jakarta/servlet/ServletContext.java
+++ b/java/jakarta/servlet/ServletContext.java
@@ -529,7 +529,7 @@ public interface ServletContext {
     public ServletRegistration.Dynamic addServlet(String servletName, Servlet servlet);
 
     /**
-     * Add servlet to context.
+     * Add servlet to the context.
      * @param   servletName  Name of servlet to add
      * @param   servletClass Class of servlet to add
      * @return  <code>null</code> if the servlet has already been fully defined,
@@ -550,6 +550,7 @@ public interface ServletContext {
             Class<? extends Servlet> servletClass);
 
     /**
+     * Add a JSP to the context.
      *
      * @param jspName   The servlet name under which this JSP file should be
      *                  registered

==================================================
Arg.java
index b50a5e1cb5..c247e7b83c 100644
--- a/java/jakarta/servlet/jsp/HttpJspPage.java
+++ b/java/jakarta/servlet/jsp/HttpJspPage.java
@@ -36,7 +36,8 @@ import jakarta.servlet.http.HttpServletResponse;
 
 public interface HttpJspPage extends JspPage {
 
-    /** The _jspService()method corresponds to the body of the JSP page. This
+    /**
+     * The _jspService()method corresponds to the body of the JSP page. This
      * method is defined automatically by the JSP container and should never
      * be defined by the JSP page author.
      * <p>

==================================================
JMXAccessorEqualsCondition.java
index 656aba1a7d..dc47302f3a 100644
--- a/java/org/apache/catalina/ant/jmx/Arg.java
+++ b/java/org/apache/catalina/ant/jmx/Arg.java
@@ -16,11 +16,6 @@
  */
 package org.apache.catalina.ant.jmx;
 
-/**
- *
- * @author Peter Rossbach
- * @since 5.5.10
- */
 public class Arg {
 
     private String type;

==================================================
Connector.java
index e7e0932d9f..7fcccc6743 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorEqualsCondition.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorEqualsCondition.java
@@ -19,7 +19,6 @@ package org.apache.catalina.ant.jmx;
 import org.apache.tools.ant.BuildException;
 
 /**
- *
  * Definition
  * <pre>
  *   &lt;path id="catalina_ant"&gt;

==================================================
ApplicationContextFacade.java
index 26e432ef5d..3b6d94a788 100644
--- a/java/org/apache/catalina/connector/Connector.java
+++ b/java/org/apache/catalina/connector/Connector.java
@@ -782,7 +782,6 @@ public class Connector extends LifecycleMBeanBase  {
 
 
     /**
-     *
      * @return The Charset to use to convert raw URI bytes (after %nn decoding)
      *         to characters. This will never be null
      */

==================================================
StandardContext.java
index 9f26890677..ff89aa0b9e 100644
--- a/java/org/apache/catalina/core/ApplicationContextFacade.java
+++ b/java/org/apache/catalina/core/ApplicationContextFacade.java
@@ -847,8 +847,8 @@ public class ApplicationContextFacade implements ServletContext {
 
 
     /**
-     *
      * Throw the real exception.
+     *
      * @param ex The current exception
      */
     private void handleException(Exception ex)

==================================================
DeltaManager.java
index ef4ec81e39..eb51979e16 100644
--- a/java/org/apache/catalina/core/StandardContext.java
+++ b/java/org/apache/catalina/core/StandardContext.java
@@ -2661,8 +2661,8 @@ public class StandardContext extends ContainerBase
     }
 
 
-    /** Get the absolute path to the work dir.
-     *  To avoid duplication.
+    /**
+     * Get the absolute path to the work dir. To avoid duplication.
      *
      * @return The work path
      */

==================================================
DeltaSession.java
index 2d6f8f0069..05b35782e5 100644
--- a/java/org/apache/catalina/ha/session/DeltaManager.java
+++ b/java/org/apache/catalina/ha/session/DeltaManager.java
@@ -339,7 +339,6 @@ public class DeltaManager extends ClusterManagerBase{
     }
 
     /**
-     *
      * @return the sendAllSessions.
      */
     public boolean isSendAllSessions() {

==================================================
SessionMessage.java
index 1b0e9a72d2..d3188c56a4 100644
--- a/java/org/apache/catalina/ha/session/DeltaSession.java
+++ b/java/org/apache/catalina/ha/session/DeltaSession.java
@@ -49,7 +49,6 @@ import org.apache.tomcat.util.collections.SynchronizedStack;
 import org.apache.tomcat.util.res.StringManager;
 
 /**
- *
  * Similar to the StandardSession except that this session will keep
  * track of deltas during a request.
  */

==================================================
HTMLManagerServlet.java
index 65173768b3..83384a4ed5 100644
--- a/java/org/apache/catalina/ha/session/SessionMessage.java
+++ b/java/org/apache/catalina/ha/session/SessionMessage.java
@@ -18,11 +18,9 @@ package org.apache.catalina.ha.session;
 import org.apache.catalina.ha.ClusterMessage;
 
 /**
- *
- * <B>Class Description:</B><BR>
- * The SessionMessage class is a class that is used when a session has been
- * created, modified, expired in a Tomcat cluster node.<BR>
- *
+ * The SessionMessage interface is used when a session has been created,
+ * modified, expired in a Tomcat cluster node.
+ * <p>
  * The following events are currently available:
  * <ul>
  *   <li><pre>public static final int EVT_SESSION_CREATED</pre><li>
@@ -35,9 +33,7 @@ import org.apache.catalina.ha.ClusterMessage;
  *   <li><pre>public static final int EVT_CHANGE_SESSION_ID</pre><li>
  *   <li><pre>public static final int EVT_ALL_SESSION_NOCONTEXTMANAGER</pre><li>
  * </ul>
- *
  */
-
 public interface SessionMessage extends ClusterMessage {
 
     /**

==================================================
DataSourceRealm.java
index f50acb6bb6..b6375ca22a 100644
--- a/java/org/apache/catalina/manager/HTMLManagerServlet.java
+++ b/java/org/apache/catalina/manager/HTMLManagerServlet.java
@@ -815,7 +815,6 @@ public final class HTMLManagerServlet extends ManagerServlet {
     // ------------------------------------------------ Sessions administration
 
     /**
-     *
      * Extract the expiration request parameter
      *
      * @param cn Name of the application from which to expire sessions

==================================================
RealmBase.java
index 07908dde0e..b1eed69a44 100644
--- a/java/org/apache/catalina/realm/DataSourceRealm.java
+++ b/java/org/apache/catalina/realm/DataSourceRealm.java
@@ -31,7 +31,6 @@ import org.apache.catalina.LifecycleException;
 import org.apache.naming.ContextBindings;
 
 /**
- *
  * Implementation of <b>Realm</b> that works with any JDBC JNDI DataSource.
  * See the Realm How-To for more details on how to set up the database and
  * for configuration options.

==================================================
ChannelException.java
index 4e8e661504..db4226f9e6 100644
--- a/java/org/apache/catalina/realm/RealmBase.java
+++ b/java/org/apache/catalina/realm/RealmBase.java
@@ -1485,14 +1485,16 @@ public abstract class RealmBase extends LifecycleMBeanBase implements Realm {
     protected static class AllRolesMode {
 
         private final String name;
-        /** Use the strict servlet spec interpretation which requires that the user
+        /**
+         * Use the strict servlet spec interpretation which requires that the user
          * have one of the web-app/security-role/role-name
          */
         public static final AllRolesMode STRICT_MODE = new AllRolesMode("strict");
-        /** Allow any authenticated user
-         */
+        /** Allow any authenticated user */
         public static final AllRolesMode AUTH_ONLY_MODE = new AllRolesMode("authOnly");
-        /** Allow any authenticated user only if there are no web-app/security-roles
+        /**
+         * Allow any authenticated user only if there are no
+         * web-app/security-roles
          */
         public static final AllRolesMode STRICT_AUTH_ONLY_MODE = new AllRolesMode("strictAuthOnly");
 

==================================================
ChannelListener.java
index 9eb12fc159..5279c35b40 100644
--- a/java/org/apache/catalina/tribes/ChannelException.java
+++ b/java/org/apache/catalina/tribes/ChannelException.java
@@ -147,11 +147,8 @@ public class ChannelException extends Exception {
     }
 
     /**
-     *
-     * <p>Title: FaultyMember class</p>
-     *
-     * <p>Description: Represent a failure to a specific member when a message was sent
-     * to more than one member</p>
+     * Represent a failure to a specific member when a message was sent to more
+     * than one member
      */
     public static class FaultyMember {
         protected final Exception cause;

==================================================
ChannelMessage.java
index 6a18a4ea10..c99478006c 100644
--- a/java/org/apache/catalina/tribes/ChannelListener.java
+++ b/java/org/apache/catalina/tribes/ChannelListener.java
@@ -46,7 +46,6 @@ public interface ChannelListener {
     public boolean accept(Serializable msg, Member sender);
 
     /**
-     *
      * @param listener Object
      * @return boolean
      * @see Object#equals(Object)
@@ -55,7 +54,6 @@ public interface ChannelListener {
     public boolean equals(Object listener);
 
     /**
-     *
      * @return int
      * @see Object#hashCode()
      */

==================================================
Member.java
index ab7200f8a1..70de5dd55f 100644
--- a/java/org/apache/catalina/tribes/ChannelMessage.java
+++ b/java/org/apache/catalina/tribes/ChannelMessage.java
@@ -52,8 +52,8 @@ public interface ChannelMessage extends Serializable, Cloneable {
     public long getTimestamp();
 
     /**
+     * Sets the timestamp of this message.
      *
-     * Sets the timestamp of this message
      * @param timestamp The timestamp
      */
     public void setTimestamp(long timestamp);

==================================================
ChannelCoordinator.java
index bf5755b0e7..f8ce61f1d1 100644
--- a/java/org/apache/catalina/tribes/Member.java
+++ b/java/org/apache/catalina/tribes/Member.java
@@ -92,7 +92,6 @@ public interface Member extends Serializable {
     public boolean isSuspect();
 
     /**
-     *
      * @return boolean - true if the member has been confirmed to malfunction
      */
     public boolean isFailing();

==================================================
ChannelInterceptorBase.java
index 4f5826114a..89690d8b17 100644
--- a/java/org/apache/catalina/tribes/group/ChannelCoordinator.java
+++ b/java/org/apache/catalina/tribes/group/ChannelCoordinator.java
@@ -352,7 +352,6 @@ public class ChannelCoordinator extends ChannelInterceptorBase implements Messag
     }
 
     /**
-     *
      * @param mbr Member
      * @return Member
      */

==================================================
GroupChannel.java
index 9e0519cab6..b883412cdf 100644
--- a/java/org/apache/catalina/tribes/group/ChannelInterceptorBase.java
+++ b/java/org/apache/catalina/tribes/group/ChannelInterceptorBase.java
@@ -146,7 +146,6 @@ public abstract class ChannelInterceptorBase implements ChannelInterceptor {
     }
 
     /**
-     *
      * @param mbr Member
      * @return Member
      */

==================================================
FragmentationInterceptor.java
index 4a810937c6..78ffda6a45 100644
--- a/java/org/apache/catalina/tribes/group/GroupChannel.java
+++ b/java/org/apache/catalina/tribes/group/GroupChannel.java
@@ -232,7 +232,6 @@ public class GroupChannel extends ChannelInterceptorBase
     }
 
     /**
-     *
      * @param destination Member[] - destination.length &gt; 0
      * @param msg Serializable - the message to send
      * @param options sender options, options can trigger guarantee levels and different
@@ -663,7 +662,6 @@ public class GroupChannel extends ChannelInterceptorBase
     }
 
     /**
-     *
      * Removes a channel listener from the channel.<br>
      * Channel listeners are uniquely identified using the equals(Object) method
      * @param channelListener ChannelListener

==================================================
NonBlockingCoordinator.java
index 2a1eeecf7a..98c8353f6f 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/FragmentationInterceptor.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/FragmentationInterceptor.java
@@ -31,7 +31,6 @@ import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 
 /**
- *
  * The fragmentation interceptor splits up large messages into smaller messages and assembles them on the other end.
  * This is very useful when you don't want large messages hogging the sending sockets
  * and smaller messages can make it through.

==================================================
OrderInterceptor.java
index bbe9462b0a..4ad6cce9c5 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/NonBlockingCoordinator.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/NonBlockingCoordinator.java
@@ -628,7 +628,6 @@ public class NonBlockingCoordinator extends ChannelInterceptorBase {
     }
 
     /**
-     *
      * @param mbr Member
      * @return Member
      */

==================================================
StaticMembershipInterceptor.java
index 5607e2cae5..1fbf67b8a0 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/OrderInterceptor.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/OrderInterceptor.java
@@ -31,7 +31,6 @@ import org.apache.catalina.tribes.util.StringManager;
 
 
 /**
- *
  * The order interceptor guarantees that messages are received in the same order they were
  * sent.
  * This interceptor works best with the ack=true setting. <br>
@@ -126,7 +125,6 @@ public class OrderInterceptor extends ChannelInterceptorBase {
         }
     }
     /**
-     *
      * @param order MessageOrder
      * @return boolean - true if a message expired and was processed
      */

==================================================
TcpPingInterceptor.java
index 4c4477db67..be1a68f0e4 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/StaticMembershipInterceptor.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/StaticMembershipInterceptor.java
@@ -135,7 +135,6 @@ public class StaticMembershipInterceptor extends ChannelInterceptorBase
     }
 
     /**
-     *
      * @param mbr Member
      * @return Member
      */

==================================================
ReplicatedMapEntry.java
index f0e488bd3f..e1a9302ba0 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/TcpPingInterceptor.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/TcpPingInterceptor.java
@@ -32,7 +32,6 @@ import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 
 /**
- *
  * Sends a ping to all members.
  * Configure this interceptor with the TcpFailureDetector below it,
  * and the TcpFailureDetector will act as the membership guide.

==================================================
ReceiverBase.java
index afa1e26aad..8bc5b5fbdf 100644
--- a/java/org/apache/catalina/tribes/tipis/ReplicatedMapEntry.java
+++ b/java/org/apache/catalina/tribes/tipis/ReplicatedMapEntry.java
@@ -20,7 +20,6 @@ import java.io.IOException;
 import java.io.Serializable;
 
 /**
- *
  * For smarter replication, an object can implement this interface to replicate diffs<br>
  * The replication logic will call the methods in the following order:<br>
  * <code>

==================================================
SenderState.java
index ee4efd56ba..31d84d48b3 100644
--- a/java/org/apache/catalina/tribes/transport/ReceiverBase.java
+++ b/java/org/apache/catalina/tribes/transport/ReceiverBase.java
@@ -140,7 +140,6 @@ public abstract class ReceiverBase implements ChannelReceiver, ListenCallback, R
     }
 
     /**
-     *
      * @return The port
      */
     @Override

==================================================
URLEncoder.java
index 6fed5934e2..fedac53917 100644
--- a/java/org/apache/catalina/tribes/transport/SenderState.java
+++ b/java/org/apache/catalina/tribes/transport/SenderState.java
@@ -65,10 +65,6 @@ public class SenderState {
         this.state = state;
     }
 
-    /**
-     *
-     * @return boolean
-     */
     public boolean isSuspect() {
         return (state == SUSPECT) || (state == FAILING);
     }

==================================================
RequestGroupInfo.java
index d686377167..2ac1d66a66 100644
--- a/java/org/apache/catalina/util/URLEncoder.java
+++ b/java/org/apache/catalina/util/URLEncoder.java
@@ -23,7 +23,6 @@ import java.nio.charset.Charset;
 import java.util.BitSet;
 
 /**
- *
  * This class is very similar to the java.net.URLEncoder class.
  *
  * Unfortunately, with java.net.URLEncoder there is no way to specify to the

==================================================
Response.java
index e2ca05bd35..7c6abb4eb8 100644
--- a/java/org/apache/coyote/RequestGroupInfo.java
+++ b/java/org/apache/coyote/RequestGroupInfo.java
@@ -21,9 +21,9 @@ import java.util.List;
 
 import org.apache.tomcat.util.modeler.BaseModelMBean;
 
-/** This can be moved to top level ( eventually with a better name ).
- *  It is currently used only as a JMX artifact, to aggregate the data
- *  collected from each RequestProcessor thread.
+/**
+ * Only as a JMX artifact, to aggregate the data collected from each
+ * RequestProcessor thread.
  */
 public class RequestGroupInfo extends BaseModelMBean {
     private final List<RequestInfo> processors = new ArrayList<>();

==================================================
Node.java
index fadc3fc1c1..b2a32387d7 100644
--- a/java/org/apache/coyote/Response.java
+++ b/java/org/apache/coyote/Response.java
@@ -442,9 +442,10 @@ public final class Response {
     }
 
 
-    /** Signal that we're done with the headers, and body will follow.
-     *  Any implementation needs to notify ContextManager, to allow
-     *  interceptors to fix headers.
+    /**
+     * Signal that we're done with the headers, and body will follow. Any
+     * implementation needs to notify ContextManager, to allow interceptors to
+     * fix headers.
      */
     public void sendHeaders() {
         action(ActionCode.COMMIT, this);

==================================================
Util.java
index 03855c2939..ad4bf76ba9 100644
--- a/java/org/apache/jasper/compiler/Node.java
+++ b/java/org/apache/jasper/compiler/Node.java
@@ -2117,7 +2117,6 @@ abstract class Node implements TagConstants {
         }
 
         /**
-         *
          * @return return true if there's TagAttributeInfo meaning we need to
          *         assign a ValueExpression
          */
@@ -2126,7 +2125,6 @@ abstract class Node implements TagConstants {
         }
 
         /**
-         *
          * @return return true if there's TagAttributeInfo meaning we need to
          *         assign a MethodExpression
          */

==================================================
FastRemovalDequeue.java
index cca374c54f..da56911613 100644
--- a/java/org/apache/jasper/tagplugins/jstl/Util.java
+++ b/java/org/apache/jasper/tagplugins/jstl/Util.java
@@ -257,8 +257,9 @@ public class Util {
         }
     }
 
-    /** Wraps responses to allow us to retrieve results as Strings.
-     * mainly taken from org.apache.taglibs.standard.tag.common.core.importSupport
+    /**
+     * Wraps responses to allow us to retrieve results as Strings. Mainly taken
+     * from org.apache.taglibs.standard.tag.common.core.importSupport.
      */
     public static class ImportResponseWrapper extends HttpServletResponseWrapper{
 

==================================================
JarScanFilter.java
index 88d5bcd32c..e2c3ef497a 100644
--- a/java/org/apache/jasper/util/FastRemovalDequeue.java
+++ b/java/org/apache/jasper/util/FastRemovalDequeue.java
@@ -17,7 +17,6 @@
 package org.apache.jasper.util;
 
 /**
- *
  * The FastRemovalDequeue is a Dequeue that supports constant time removal of
  * entries. This is achieved by using a doubly linked list and wrapping any object
  * added to the collection with an Entry type, that is returned to the consumer.

==================================================
DelegatingStatement.java
index d3aeb45beb..f616fe46fc 100644
--- a/java/org/apache/tomcat/JarScanFilter.java
+++ b/java/org/apache/tomcat/JarScanFilter.java
@@ -19,7 +19,6 @@ package org.apache.tomcat;
 public interface JarScanFilter {
 
     /**
-     *
      * @param jarScanType   The type of JAR scan currently being performed
      * @param jarName       The name of the JAR file (without any path
      *                          information) to be checked to see if it should
@@ -30,7 +29,6 @@ public interface JarScanFilter {
     boolean check(JarScanType jarScanType, String jarName);
 
     /**
-     *
      * @return <code>true</code> if all of the scans should be skipped which
      * can improve startup performance. The default is <code>false</code>.
      */

==================================================
PoolableConnection.java
index 642d633b2c..ff5d937fc4 100644
--- a/java/org/apache/tomcat/dbcp/dbcp2/DelegatingStatement.java
+++ b/java/org/apache/tomcat/dbcp/dbcp2/DelegatingStatement.java
@@ -61,7 +61,6 @@ public class DelegatingStatement extends AbandonedTrace implements Statement {
     }
 
     /**
-     *
      * @throws SQLException
      *             thrown by the delegating statement.
      * @since 2.4.0 made public, was protected in 2.3.0.
@@ -666,7 +665,6 @@ public class DelegatingStatement extends AbandonedTrace implements Statement {
     }
 
     /**
-     *
      * @throws SQLException
      *             thrown by the delegating statement.
      * @since 2.4.0 made public, was protected in 2.3.0.

==================================================
CPDSConnectionFactory.java
index ee277db250..3ad15ada77 100644
--- a/java/org/apache/tomcat/dbcp/dbcp2/PoolableConnection.java
+++ b/java/org/apache/tomcat/dbcp/dbcp2/PoolableConnection.java
@@ -77,7 +77,6 @@ public class PoolableConnection extends DelegatingConnection<Connection> impleme
     private final boolean fastFailValidation;
 
     /**
-     *
      * @param conn
      *            my underlying connection
      * @param pool
@@ -91,7 +90,6 @@ public class PoolableConnection extends DelegatingConnection<Connection> impleme
     }
 
     /**
-     *
      * @param conn
      *            my underlying connection
      * @param pool

==================================================
Library.java
index ec67369a94..eb90bc0a15 100644
--- a/java/org/apache/tomcat/dbcp/dbcp2/datasources/CPDSConnectionFactory.java
+++ b/java/org/apache/tomcat/dbcp/dbcp2/datasources/CPDSConnectionFactory.java
@@ -392,7 +392,6 @@ final class CPDSConnectionFactory
     }
 
     /**
-     *
      * @param pool
      *            the {@link ObjectPool} in which to pool those {@link Connection}s
      */

==================================================
LibraryNotFoundError.java
index 4461724a54..f22c32cb86 100644
--- a/java/org/apache/tomcat/jni/Library.java
+++ b/java/org/apache/tomcat/jni/Library.java
@@ -18,10 +18,6 @@ package org.apache.tomcat.jni;
 
 import java.io.File;
 
-/** Library
- *
- * @author Mladen Turk
- */
 public final class Library {
 
     /* Default library names */

==================================================
SSL.java
index ab8a030e85..ede1ee1083 100644
--- a/java/org/apache/tomcat/jni/LibraryNotFoundError.java
+++ b/java/org/apache/tomcat/jni/LibraryNotFoundError.java
@@ -23,7 +23,6 @@ public class LibraryNotFoundError extends UnsatisfiedLinkError {
     private final String libraryNames;
 
     /**
-     *
      * @param libraryNames A list of the file names of the native libraries that
      *                     failed to load
      * @param errors A list of the error messages received when trying to load

==================================================
SSLConf.java
index 64a601e1fb..a276107460 100644
--- a/java/org/apache/tomcat/jni/SSL.java
+++ b/java/org/apache/tomcat/jni/SSL.java
@@ -16,10 +16,6 @@
  */
 package org.apache.tomcat.jni;
 
-/** SSL
- *
- * @author Mladen Turk
- */
 public final class SSL {
 
     /*

==================================================
SSLContext.java
index db855fc053..2e429a5cdc 100644
--- a/java/org/apache/tomcat/jni/SSLConf.java
+++ b/java/org/apache/tomcat/jni/SSLConf.java
@@ -16,8 +16,6 @@
  */
 package org.apache.tomcat.jni;
 
-/** SSL Conf
- */
 public final class SSLConf {
 
     /**

==================================================
MessageBytes.java
index 4d64bd3f98..b26324f321 100644
--- a/java/org/apache/tomcat/jni/SSLContext.java
+++ b/java/org/apache/tomcat/jni/SSLContext.java
@@ -20,10 +20,6 @@ import java.util.Locale;
 import java.util.Map;
 import java.util.concurrent.ConcurrentHashMap;
 
-/** SSL Context
- *
- * @author Mladen Turk
- */
 public final class SSLContext {
 
     public static final byte[] DEFAULT_SESSION_ID_CONTEXT =

==================================================
DocumentProperties.java
index 7d34b0f790..be693b399f 100644
--- a/java/org/apache/tomcat/util/buf/MessageBytes.java
+++ b/java/org/apache/tomcat/util/buf/MessageBytes.java
@@ -51,14 +51,20 @@ public final class MessageBytes implements Cloneable, Serializable {
     private int type = T_NULL;
 
     public static final int T_NULL = 0;
-    /** getType() is T_STR if the the object used to create the MessageBytes
-        was a String */
+    /**
+     * getType() is T_STR if the the object used to create the MessageBytes
+     * was a String.
+     */
     public static final int T_STR  = 1;
-    /** getType() is T_BYTES if the the object used to create the MessageBytes
-        was a byte[] */
+    /**
+     * getType() is T_BYTES if the the object used to create the MessageBytes
+     * was a byte[].
+     */
     public static final int T_BYTES = 2;
-    /** getType() is T_CHARS if the the object used to create the MessageBytes
-        was a char[] */
+    /**
+     * getType() is T_CHARS if the the object used to create the MessageBytes
+     * was a char[].
+     */
     public static final int T_CHARS = 3;
 
     public static final char[] EMPTY_CHAR_ARRAY = new char[0];

==================================================
MimeHeaders.java
index fd7f8ebf40..1e8029b448 100644
--- a/java/org/apache/tomcat/util/digester/DocumentProperties.java
+++ b/java/org/apache/tomcat/util/digester/DocumentProperties.java
@@ -17,7 +17,6 @@
 package org.apache.tomcat.util.digester;
 
 /**
- *
  * A collection of interfaces, one per property, that enables the object being
  * populated by the digester to signal to the digester that it supports the
  * given property and that the digester should populate that property if

==================================================
Parameters.java
index ae94960489..375cb5071e 100644
--- a/java/org/apache/tomcat/util/http/MimeHeaders.java
+++ b/java/org/apache/tomcat/util/http/MimeHeaders.java
@@ -89,8 +89,9 @@ import org.apache.tomcat.util.res.StringManager;
  * @author kevin seguin
  */
 public class MimeHeaders {
-    /** Initial size - should be == average number of headers per request
-     *  XXX  make it configurable ( fine-tuning of web-apps )
+    /**
+     * Initial size - should be == average number of headers per request
+     * XXX  make it configurable ( fine-tuning of web-apps )
      */
     public static final int DEFAULT_HEADER_SIZE=8;
 
@@ -418,12 +419,10 @@ public class MimeHeaders {
 
 }
 
-/** Enumerate the distinct header names.
-    Each nextElement() is O(n) ( a comparison is
-    done with all previous elements ).
-
-    This is less frequent than add() -
-    we want to keep add O(1).
+/**
+ * Enumerate the distinct header names. Each nextElement() is O(n) ( a
+ * comparison is done with all previous elements ). This is less frequent than
+ * add() - we want to keep add O(1).
  */
 class NamesEnumerator implements Enumeration<String> {
     private int pos;
@@ -472,8 +471,8 @@ class NamesEnumerator implements Enumeration<String> {
     }
 }
 
-/** Enumerate the values for a (possibly ) multiple
-    value element.
+/**
+ * Enumerate the values for a (possibly ) multiple value element.
  */
 class ValuesEnumerator implements Enumeration<String> {
     private int pos;

==================================================
FileItemIterator.java
index d233190ddb..a3a5046ae8 100644
--- a/java/org/apache/tomcat/util/http/Parameters.java
+++ b/java/org/apache/tomcat/util/http/Parameters.java
@@ -34,10 +34,6 @@ import org.apache.tomcat.util.buf.UDecoder;
 import org.apache.tomcat.util.log.UserDataHelper;
 import org.apache.tomcat.util.res.StringManager;
 
-/**
- *
- * @author Costin Manolache
- */
 public final class Parameters {
 
     private static final Log log = LogFactory.getLog(Parameters.class);
@@ -172,7 +168,8 @@ public final class Parameters {
         }
     }
     // -------------------- Processing --------------------
-    /** Process the query string into parameters
+    /**
+     * Process the query string into parameters
      */
     public void handleQueryParameters() {
         if (didQueryParameters) {

==================================================
BaseModelMBean.java
index 53ec2d4861..2191c16754 100644
--- a/java/org/apache/tomcat/util/http/fileupload/FileItemIterator.java
+++ b/java/org/apache/tomcat/util/http/fileupload/FileItemIterator.java
@@ -27,7 +27,8 @@ import org.apache.tomcat.util.http.fileupload.impl.SizeLimitExceededException;
  * {@link FileUploadBase#getItemIterator(RequestContext)}.
  */
 public interface FileItemIterator {
-    /** Returns the maximum size of a single file. An {@link FileSizeLimitExceededException}
+    /**
+     * Returns the maximum size of a single file. An {@link FileSizeLimitExceededException}
      * will be thrown, if there is an uploaded file, which is exceeding this value.
      * By default, this value will be copied from the {@link FileUploadBase#getFileSizeMax()
      * FileUploadBase} object, however, the user may replace the default value with a
@@ -36,7 +37,8 @@ public interface FileItemIterator {
      */
     long getFileSizeMax();
 
-    /** Sets the maximum size of a single file. An {@link FileSizeLimitExceededException}
+    /**
+     * Sets the maximum size of a single file. An {@link FileSizeLimitExceededException}
      * will be thrown, if there is an uploaded file, which is exceeding this value.
      * By default, this value will be copied from the {@link FileUploadBase#getFileSizeMax()
      * FileUploadBase} object, however, the user may replace the default value with a
@@ -47,7 +49,8 @@ public interface FileItemIterator {
      */
     void setFileSizeMax(long pFileSizeMax);
 
-    /** Returns the maximum size of the complete HTTP request. A {@link SizeLimitExceededException}
+    /**
+     * Returns the maximum size of the complete HTTP request. A {@link SizeLimitExceededException}
      * will be thrown, if the HTTP request will exceed this value.
      * By default, this value will be copied from the {@link FileUploadBase#getSizeMax()
      * FileUploadBase} object, however, the user may replace the default value with a
@@ -56,7 +59,8 @@ public interface FileItemIterator {
      */
     long getSizeMax();
 
-    /** Returns the maximum size of the complete HTTP request. A {@link SizeLimitExceededException}
+    /**
+     * Returns the maximum size of the complete HTTP request. A {@link SizeLimitExceededException}
      * will be thrown, if the HTTP request will exceed this value.
      * By default, this value will be copied from the {@link FileUploadBase#getSizeMax()
      * FileUploadBase} object, however, the user may replace the default value with a

==================================================
ManagedBean.java
index 6a4b4966c5..174c443772 100644
--- a/java/org/apache/tomcat/util/modeler/BaseModelMBean.java
+++ b/java/org/apache/tomcat/util/modeler/BaseModelMBean.java
@@ -118,7 +118,8 @@ public class BaseModelMBean implements DynamicMBean, MBeanRegistration,
      */
     protected BaseNotificationBroadcaster generalBroadcaster = null;
 
-    /** Metadata for the mbean instance.
+    /**
+     * Metadata for the mbean instance.
      */
     protected ManagedBean managedBean = null;
 

==================================================
SSLSupport.java
index 4ca7e58b44..807281fffa 100644
--- a/java/org/apache/tomcat/util/modeler/ManagedBean.java
+++ b/java/org/apache/tomcat/util/modeler/ManagedBean.java
@@ -76,8 +76,8 @@ public class ManagedBean implements java.io.Serializable {
     private NotificationInfo notifications[] = new NotificationInfo[0];
     protected String type = null;
 
-    /** Constructor. Will add default attributes.
-     *
+    /**
+     * Constructor. Will add default attributes.
      */
     public ManagedBean() {
         AttributeInfo ai=new AttributeInfo();

==================================================
JSSESupport.java
index 8043e77f4c..1e59b3a63c 100644
--- a/java/org/apache/tomcat/util/net/SSLSupport.java
+++ b/java/org/apache/tomcat/util/net/SSLSupport.java
@@ -147,7 +147,6 @@ public interface SSLSupport {
     public String getProtocol() throws IOException;
 
     /**
-     *
      * @return the list of SSL/TLS protocol versions requested by the client
      *
      * @throws IOException If an error occurs trying to obtain the client
@@ -156,7 +155,6 @@ public interface SSLSupport {
     public String getRequestedProtocols() throws IOException;
 
     /**
-    *
     * @return the list of SSL/TLS ciphers requested by the client
     *
      * @throws IOException If an error occurs trying to obtain the client

==================================================
WsRemoteEndpointImplServer.java
index ecf6d966f9..7f133c8d7c 100644
--- a/java/org/apache/tomcat/util/net/jsse/JSSESupport.java
+++ b/java/org/apache/tomcat/util/net/jsse/JSSESupport.java
@@ -35,18 +35,15 @@ import org.apache.tomcat.util.net.SSLSupport;
 import org.apache.tomcat.util.net.openssl.ciphers.Cipher;
 import org.apache.tomcat.util.res.StringManager;
 
-/** JSSESupport
-
-   Concrete implementation class for JSSE
-   Support classes.
-
-   This will only work with JDK 1.2 and up since it
-   depends on JDK 1.2's certificate support
-
-   @author EKR
-   @author Craig R. McClanahan
-   Parts cribbed from JSSECertCompat
-   Parts cribbed from CertificatesValve
+/**
+ * JSSESupport.
+ *
+ * Concrete implementation class for JSSE Support classes.
+ *
+ * @author EKR
+ * @author Craig R. McClanahan
+ * Parts cribbed from JSSECertCompat
+ * Parts cribbed from CertificatesValve
  */
 public class JSSESupport implements SSLSupport, SSLSessionManager {
 

==================================================
DataSourceProxy.java
index fd8e6f4b3c..735eb40104 100644
--- a/java/org/apache/tomcat/websocket/server/WsRemoteEndpointImplServer.java
+++ b/java/org/apache/tomcat/websocket/server/WsRemoteEndpointImplServer.java
@@ -261,7 +261,6 @@ public class WsRemoteEndpointImplServer extends WsRemoteEndpointImplBase {
 
 
     /**
-     *
      * @param t             The throwable associated with any error that
      *                      occurred
      * @param useDispatch   Should {@link SendHandler#onResult(SendResult)} be

==================================================
FairBlockingQueue.java
index e48147eaa9..d63fa4b635 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/DataSourceProxy.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/DataSourceProxy.java
@@ -32,7 +32,6 @@ import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.jdbc.pool.PoolProperties.InterceptorDefinition;
 
 /**
- *
  * The DataSource proxy lets us implements methods that don't exist in the current
  * compiler JDK but might be methods that are part of a future JDK DataSource interface.
  * <br>

==================================================
PooledConnection.java
index 27dd8128ed..c4addeb7b5 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/FairBlockingQueue.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/FairBlockingQueue.java
@@ -29,7 +29,6 @@ import java.util.concurrent.TimeoutException;
 import java.util.concurrent.locks.ReentrantLock;
 
 /**
- *
  * A simple implementation of a blocking queue with fairness waiting.
  * invocations to method poll(...) will get handed out in the order they were received.
  * Locking is fine grained, a shared lock is only used during the first level of contention, waiting is done in a

==================================================
SlowQueryReport.java
index d691258ace..d6ac12e11b 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/PooledConnection.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/PooledConnection.java
@@ -367,7 +367,6 @@ public class PooledConnection implements PooledConnectionMBean {
     }
 
     /**
-     *
      * @return true if connect() was called successfully and disconnect has not yet been called
      */
     @Override

==================================================
TesterHttpServletResponse.java
index f3583386bd..26e38c4141 100644
--- a/res/checkstyle/checkstyle.xml
+++ b/res/checkstyle/checkstyle.xml
@@ -80,6 +80,7 @@
     <!-- Javadoc Comments -->
     <module name="InvalidJavadocPosition"/>
     <module name="JavadocBlockTagLocation"/>
+    <module name="JavadocContentLocationCheck"/>
 
     <!-- Miscellaneous -->
     <!-- ~5500 errors

==================================================
BytesStreamer.java
index 10ef3aaac0..90c0155181 100644
--- a/test/org/apache/catalina/filters/TesterHttpServletResponse.java
+++ b/test/org/apache/catalina/filters/TesterHttpServletResponse.java
@@ -220,7 +220,6 @@ public class TesterHttpServletResponse implements HttpServletResponse {
     @Override
     public String encodeURL(String url) { return null; }
     /**
-     *
      * @throws IOException Never happens
      */
     public void sendAcknowledgement() throws IOException {/* NOOP */}

==================================================
NoMappingParamServlet.java
index 05fac0d491..7e063afe2c 100644
--- a/test/org/apache/catalina/startup/BytesStreamer.java
+++ b/test/org/apache/catalina/startup/BytesStreamer.java
@@ -17,10 +17,7 @@
 package org.apache.catalina.startup;
 
 /**
- *
  * Used by {@link TomcatBaseTest}
- *
- *
  */
 public interface BytesStreamer {
     /**

==================================================
ParamServlet.java
index e597e18344..64008b3a16 100644
--- a/test/org/apache/catalina/startup/NoMappingParamServlet.java
+++ b/test/org/apache/catalina/startup/NoMappingParamServlet.java
@@ -26,10 +26,6 @@ import jakarta.servlet.http.HttpServlet;
 import jakarta.servlet.http.HttpServletRequest;
 import jakarta.servlet.http.HttpServletResponse;
 
-/**
- *
- * @author Peter Rossbach
- */
 @WebServlet(name = "param1", initParams = {
         @WebInitParam(name = "foo", value = "Hello"),
         @WebInitParam(name = "bar", value = "World!") })

==================================================
EchoRpcTest.java
index bcf300fa58..3af16c77fb 100644
--- a/test/org/apache/catalina/startup/ParamServlet.java
+++ b/test/org/apache/catalina/startup/ParamServlet.java
@@ -26,10 +26,6 @@ import jakarta.servlet.http.HttpServlet;
 import jakarta.servlet.http.HttpServletRequest;
 import jakarta.servlet.http.HttpServletResponse;
 
-/**
- *
- * @author Peter Rossbach
- */
 @WebServlet(value = "/annotation/overwrite", name = "param", initParams = {
         @WebInitParam(name = "foo", value = "Hello"),
         @WebInitParam(name = "bar", value = "World!") }, displayName = "param", description = "param", largeIcon = "paramLarge.png", smallIcon = "paramSmall.png", loadOnStartup = 0, asyncSupported = false)

==================================================
