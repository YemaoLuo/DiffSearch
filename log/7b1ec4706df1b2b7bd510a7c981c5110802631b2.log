7b1ec4706df1b2b7bd510a7c981c5110802631b2
==================================================
fix typo
==================================================
KangZhiDong worldkzd@gmail.com
==================================================
Sun Sep 1 04:21:45 2019 +0800
==================================================
PushBuilder.java
fix typo



==================================================
CorsFilter.java
index 0905460aca..72dfb41d0f 100644
--- a/java/javax/servlet/resources/web-common_4_0.xsd
+++ b/java/javax/servlet/resources/web-common_4_0.xsd
@@ -566,7 +566,7 @@
     <xsd:annotation>
       <xsd:documentation>
 
-        A HTTP method type as defined in HTTP 1.1 section 2.2.
+        An HTTP method type as defined in HTTP 1.1 section 2.2.
 
       </xsd:documentation>
     </xsd:annotation>

==================================================
ResponseIncludeWrapper.java
index 3f2b136f60..649fde6f5e 100644
--- a/java/org/apache/catalina/filters/LocalStrings.properties
+++ b/java/org/apache/catalina/filters/LocalStrings.properties
@@ -20,8 +20,8 @@ corsFilter.invalidSupportsCredentials=It is not allowed to configure supportsCre
 corsFilter.nullRequest=HttpServletRequest object is null
 corsFilter.nullRequestType=CORSRequestType object is null
 corsFilter.onlyHttp=CORS doesn't support non-HTTP request or response
-corsFilter.wrongType1=Expects a HttpServletRequest object of type [{0}]
-corsFilter.wrongType2=Expects a HttpServletRequest object of type [{0}] or [{1}]
+corsFilter.wrongType1=Expects an HttpServletRequest object of type [{0}]
+corsFilter.wrongType2=Expects an HttpServletRequest object of type [{0}] or [{1}]
 
 csrfPrevention.invalidRandomClass=Unable to create Random source using class [{0}]
 

==================================================
RewriteRule.java
index d1595a0567..fb09e77a47 100644
--- a/java/org/apache/catalina/ssi/ResponseIncludeWrapper.java
+++ b/java/org/apache/catalina/ssi/ResponseIncludeWrapper.java
@@ -29,7 +29,7 @@ import javax.servlet.http.HttpServletResponseWrapper;
 import org.apache.tomcat.util.http.FastHttpDateFormat;
 
 /**
- * A HttpServletResponseWrapper, used from
+ * An HttpServletResponseWrapper, used from
  * <code>SSIServletExternalResolver</code>
  *
  * @author Bip Thelin

==================================================
FastHttpDateFormat.java
index 450877db73..29f23d907b 100644
--- a/java/org/apache/catalina/valves/rewrite/RewriteRule.java
+++ b/java/org/apache/catalina/valves/rewrite/RewriteRule.java
@@ -201,14 +201,14 @@ public class RewriteRule {
 
     /**
      *  This forces the current URL to be forbidden, i.e., it immediately sends
-     *  back a HTTP response of 403 (FORBIDDEN). Use this flag in conjunction
+     *  back an HTTP response of 403 (FORBIDDEN). Use this flag in conjunction
      *  with appropriate RewriteConds to conditionally block some URLs.
      */
     protected boolean forbidden = false;
 
     /**
      *  This forces the current URL to be gone, i.e., it immediately sends
-     *  back a HTTP response of 410 (GONE). Use this flag to mark pages which
+     *  back an HTTP response of 410 (GONE). Use this flag to mark pages which
      *  no longer exist as gone.
      */
     protected boolean gone = false;

==================================================
Host.java
index 1fdb9f6c95..a546ee6ea4 100644
--- a/java/org/apache/tomcat/util/http/FastHttpDateFormat.java
+++ b/java/org/apache/tomcat/util/http/FastHttpDateFormat.java
@@ -145,7 +145,7 @@ public final class FastHttpDateFormat {
 
 
     /**
-     * Try to parse the given date as a HTTP date.
+     * Try to parse the given date as an HTTP date.
      * @param value The HTTP date
      * @param threadLocalformats Ignored. The local array of
      *                           ConcurrentDateFormat will always be used.
@@ -161,7 +161,7 @@ public final class FastHttpDateFormat {
 
 
     /**
-     * Try to parse the given date as a HTTP date.
+     * Try to parse the given date as an HTTP date.
      * @param value The HTTP date
      * @return the date as a long or <code>-1</code> if the value cannot be
      *         parsed

==================================================
MediaType.java
index c3c3465d52..f1fc6a33c3 100644
--- a/java/org/apache/tomcat/util/http/parser/Host.java
+++ b/java/org/apache/tomcat/util/http/parser/Host.java
@@ -31,7 +31,7 @@ public class Host {
 
 
     /**
-     * Parse the given input as a HTTP Host header value.
+     * Parse the given input as an HTTP Host header value.
      *
      * @param mb The host header value
      *
@@ -47,7 +47,7 @@ public class Host {
 
 
     /**
-     * Parse the given input as a HTTP Host header value.
+     * Parse the given input as an HTTP Host header value.
      *
      * @param string The host header value
      *

==================================================
UpgradeUtil.java
index 9bacef2d19..b4b84ae9f5 100644
--- a/java/org/apache/tomcat/util/http/parser/MediaType.java
+++ b/java/org/apache/tomcat/util/http/parser/MediaType.java
@@ -124,7 +124,7 @@ public class MediaType {
     }
 
     /**
-     * Parses a MediaType value, either from a HTTP header or from an application.
+     * Parses a MediaType value, either from an HTTP header or from an application.
      *
      * @param input a reader over the header text
      * @return a MediaType parsed from the input, or null if not valid

==================================================
TestRewriteValve.java
index b1cf6974d3..d522283fff 100644
--- a/java/org/apache/tomcat/websocket/server/UpgradeUtil.java
+++ b/java/org/apache/tomcat/websocket/server/UpgradeUtil.java
@@ -68,7 +68,7 @@ public class UpgradeUtil {
      * @param request  The request to check if it is an HTTP upgrade request for
      *                 a WebSocket connection
      * @param response The response associated with the request
-     * @return <code>true</code> if the request includes a HTTP Upgrade request
+     * @return <code>true</code> if the request includes an HTTP Upgrade request
      *         for the WebSocket protocol, otherwise <code>false</code>
      */
     public static boolean isWebSocketUpgradeRequest(ServletRequest request,

==================================================
TestWsWebSocketContainerWithProxy.java
index 8e2e3f227b..29c296158f 100644
--- a/test/org/apache/catalina/valves/rewrite/TestRewriteValve.java
+++ b/test/org/apache/catalina/valves/rewrite/TestRewriteValve.java
@@ -35,7 +35,7 @@ import org.apache.tomcat.util.buf.ByteChunk;
 /*
  * Implementation note:
  *
- * A number of these tests involve the rewrite valve returning a HTTP Location
+ * A number of these tests involve the rewrite valve returning an HTTP Location
  * header that include un-encoded UTF-8 bytes. How the HTTP client handles these
  * depends on the default character encoding configured for the JVM running the
  * test. The tests expect the client to be configured with UTF-8 as the default

==================================================
