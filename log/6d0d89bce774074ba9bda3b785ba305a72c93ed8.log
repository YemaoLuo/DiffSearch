6d0d89bce774074ba9bda3b785ba305a72c93ed8
==================================================
Forward port from 5.5, expose what thread is currently executing a request to JMX 
==================================================
Filip Hanik
==================================================
Sun Apr 8 17:02:12 2007 +0000
==================================================
CoyoteAdapter.java
Forward port from 5.5, expose what thread is currently executing a request to JMX 


git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk@526576 13f79535-47bb-0310-9956-ffa450edef68



==================================================
RequestInfo.java
index 9a7dd7005d..a07a087fcb 100644
--- a/java/org/apache/catalina/connector/CoyoteAdapter.java
+++ b/java/org/apache/catalina/connector/CoyoteAdapter.java
@@ -151,6 +151,8 @@ public class CoyoteAdapter
                         request.getEvent().setEventSubType(CometEvent.EventSubType.TIMEOUT);
                     }
                 }
+
+                req.getRequestProcessor().setWorkerThreadName(Thread.currentThread().getName());
                 
                 // Calling the container
                 connector.getContainer().getPipeline().getFirst().event(request, response, request.getEvent());
@@ -176,6 +178,7 @@ public class CoyoteAdapter
                 // a cleanup event of some sort could be needed ?
                 return false;
             } finally {
+                req.getRequestProcessor().setWorkerThreadName(null);
                 // Recycle the wrapper request and response
                 if (error || response.isClosed() || !request.isComet()) {
                     request.recycle();
@@ -232,8 +235,8 @@ public class CoyoteAdapter
 
             // Parse and set Catalina and configuration specific 
             // request parameters
+            req.getRequestProcessor().setWorkerThreadName(Thread.currentThread().getName());
             if (postParseRequest(req, request, res, response)) {
-
                 // Calling the container
                 connector.getContainer().getPipeline().getFirst().invoke(request, response);
 
@@ -260,6 +263,7 @@ public class CoyoteAdapter
         } catch (Throwable t) {
             log.error(sm.getString("coyoteAdapter.service"), t);
         } finally {
+            req.getRequestProcessor().setWorkerThreadName(null);
             // Recycle the wrapper request and response
             if (!comet) {
                 request.recycle();

==================================================
