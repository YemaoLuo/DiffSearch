4cded3b4e84b1eeb9ea06528343a1752a6307079
==================================================
Remove unused code that has been deprecated in 8.5.x
==================================================
Mark Thomas
==================================================
Sat Apr 1 20:23:44 2017 +0000
==================================================
BinaryDecoder.java
Remove unused code that has been deprecated in 8.5.x

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1789839 13f79535-47bb-0310-9956-ffa450edef68



==================================================
BinaryEncoder.java
deleted file mode 100644
index a25e97c86c..0000000000
--- a/java/org/apache/tomcat/util/codec/BinaryDecoder.java
+++ /dev/null
@@ -1,35 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.tomcat.util.codec;
-
-/**
- * Defines common decoding methods for byte array decoders.
- */
-public interface BinaryDecoder extends Decoder {
-
-    /**
-     * Decodes a byte array and returns the results as a byte array.
-     *
-     * @param source
-     *            A byte array which has been encoded with the appropriate encoder
-     * @return a byte array that contains decoded content
-     * @throws DecoderException
-     *             A decoder exception is thrown if a Decoder encounters a failure condition during the decode process.
-     */
-    byte[] decode(byte[] source) throws DecoderException;
-}
-

==================================================
Decoder.java
deleted file mode 100644
index 69940f8c33..0000000000
--- a/java/org/apache/tomcat/util/codec/BinaryEncoder.java
+++ /dev/null
@@ -1,35 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.tomcat.util.codec;
-
-/**
- * Defines common encoding methods for byte array encoders.
- */
-public interface BinaryEncoder extends Encoder {
-
-    /**
-     * Encodes a byte array and return the encoded data as a byte array.
-     *
-     * @param source
-     *            Data to be encoded
-     * @return A byte array containing the encoded data
-     * @throws EncoderException
-     *             thrown if the Encoder encounters a failure condition during the encoding process.
-     */
-    byte[] encode(byte[] source) throws EncoderException;
-}
-

==================================================
DecoderException.java
deleted file mode 100644
index a31b01794e..0000000000
--- a/java/org/apache/tomcat/util/codec/Decoder.java
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.tomcat.util.codec;
-
-/**
- * Provides the highest level of abstraction for Decoders.
- * <p>
- * This is the sister interface of {@link Encoder}. All Decoders implement this common generic interface.
- * Allows a user to pass a generic Object to any Decoder implementation in the codec package.
- * <p>
- * One of the two interfaces at the center of the codec package.
- */
-public interface Decoder {
-
-    /**
-     * Decodes an "encoded" Object and returns a "decoded" Object. Note that the implementation of this interface will
-     * try to cast the Object parameter to the specific type expected by a particular Decoder implementation. If a
-     * {@link ClassCastException} occurs this decode method will throw a DecoderException.
-     *
-     * @param source
-     *            the object to decode
-     * @return a 'decoded" object
-     * @throws DecoderException
-     *             a decoder exception can be thrown for any number of reasons. Some good candidates are that the
-     *             parameter passed to this method is null, a param cannot be cast to the appropriate type for a
-     *             specific encoder.
-     */
-    Object decode(Object source) throws DecoderException;
-}
-

==================================================
Encoder.java
deleted file mode 100644
index fa4996788b..0000000000
--- a/java/org/apache/tomcat/util/codec/DecoderException.java
+++ /dev/null
@@ -1,83 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.tomcat.util.codec;
-
-/**
- * Thrown when there is a failure condition during the decoding process. This exception is thrown when a {@link Decoder}
- * encounters a decoding specific exception such as invalid data, or characters outside of the expected range.
- */
-public class DecoderException extends Exception {
-
-    /**
-     * Declares the Serial Version Uid.
-     *
-     * @see <a href="http://c2.com/cgi/wiki?AlwaysDeclareSerialVersionUid">Always Declare Serial Version Uid</a>
-     */
-    private static final long serialVersionUID = 1L;
-
-    /**
-     * Constructs a new exception with <code>null</code> as its detail message. The cause is not initialized, and may
-     * subsequently be initialized by a call to {@link #initCause}.
-     *
-     * @since 1.4
-     */
-    public DecoderException() {
-        super();
-    }
-
-    /**
-     * Constructs a new exception with the specified detail message. The cause is not initialized, and may subsequently
-     * be initialized by a call to {@link #initCause}.
-     *
-     * @param message
-     *            The detail message which is saved for later retrieval by the {@link #getMessage()} method.
-     */
-    public DecoderException(final String message) {
-        super(message);
-    }
-
-    /**
-     * Constructs a new exception with the specified detail message and cause.
-     * <p>
-     * Note that the detail message associated with <code>cause</code> is not automatically incorporated into this
-     * exception's detail message.
-     *
-     * @param message
-     *            The detail message which is saved for later retrieval by the {@link #getMessage()} method.
-     * @param cause
-     *            The cause which is saved for later retrieval by the {@link #getCause()} method. A <code>null</code>
-     *            value is permitted, and indicates that the cause is nonexistent or unknown.
-     * @since 1.4
-     */
-    public DecoderException(final String message, final Throwable cause) {
-        super(message, cause);
-    }
-
-    /**
-     * Constructs a new exception with the specified cause and a detail message of <code>(cause==null ?
-     * null : cause.toString())</code> (which typically contains the class and detail message of <code>cause</code>).
-     * This constructor is useful for exceptions that are little more than wrappers for other throwables.
-     *
-     * @param cause
-     *            The cause which is saved for later retrieval by the {@link #getCause()} method. A <code>null</code>
-     *            value is permitted, and indicates that the cause is nonexistent or unknown.
-     * @since 1.4
-     */
-    public DecoderException(final Throwable cause) {
-        super(cause);
-    }
-}

==================================================
EncoderException.java
deleted file mode 100644
index 15ace67aa3..0000000000
--- a/java/org/apache/tomcat/util/codec/Encoder.java
+++ /dev/null
@@ -1,41 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.tomcat.util.codec;
-
-/**
- * Provides the highest level of abstraction for Encoders.
- * <p>
- * This is the sister interface of {@link Decoder}.  Every implementation of Encoder provides this
- * common generic interface which allows a user to pass a generic Object to any Encoder implementation
- * in the codec package.
- */
-public interface Encoder {
-
-    /**
-     * Encodes an "Object" and returns the encoded content as an Object. The Objects here may just be
-     * <code>byte[]</code> or <code>String</code>s depending on the implementation used.
-     *
-     * @param source
-     *            An object to encode
-     * @return An "encoded" Object
-     * @throws EncoderException
-     *             An encoder exception is thrown if the encoder experiences a failure condition during the encoding
-     *             process.
-     */
-    Object encode(Object source) throws EncoderException;
-}
-

==================================================
BaseNCodec.java
deleted file mode 100644
index 2a83843bd3..0000000000
--- a/java/org/apache/tomcat/util/codec/EncoderException.java
+++ /dev/null
@@ -1,86 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.tomcat.util.codec;
-
-/**
- * Thrown when there is a failure condition during the encoding process. This exception is thrown when an
- * {@link Encoder} encounters a encoding specific exception such as invalid data, inability to calculate a checksum,
- * characters outside of the expected range.
- */
-public class EncoderException extends Exception {
-
-    /**
-     * Declares the Serial Version Uid.
-     *
-     * @see <a href="http://c2.com/cgi/wiki?AlwaysDeclareSerialVersionUid">Always Declare Serial Version Uid</a>
-     */
-    private static final long serialVersionUID = 1L;
-
-    /**
-     * Constructs a new exception with <code>null</code> as its detail message. The cause is not initialized, and may
-     * subsequently be initialized by a call to {@link #initCause}.
-     *
-     * @since 1.4
-     */
-    public EncoderException() {
-        super();
-    }
-
-    /**
-     * Constructs a new exception with the specified detail message. The cause is not initialized, and may subsequently
-     * be initialized by a call to {@link #initCause}.
-     *
-     * @param message
-     *            a useful message relating to the encoder specific error.
-     */
-    public EncoderException(final String message) {
-        super(message);
-    }
-
-    /**
-     * Constructs a new exception with the specified detail message and cause.
-     *
-     * <p>
-     * Note that the detail message associated with <code>cause</code> is not automatically incorporated into this
-     * exception's detail message.
-     * </p>
-     *
-     * @param message
-     *            The detail message which is saved for later retrieval by the {@link #getMessage()} method.
-     * @param cause
-     *            The cause which is saved for later retrieval by the {@link #getCause()} method. A <code>null</code>
-     *            value is permitted, and indicates that the cause is nonexistent or unknown.
-     * @since 1.4
-     */
-    public EncoderException(final String message, final Throwable cause) {
-        super(message, cause);
-    }
-
-    /**
-     * Constructs a new exception with the specified cause and a detail message of <code>(cause==null ?
-     * null : cause.toString())</code> (which typically contains the class and detail message of <code>cause</code>).
-     * This constructor is useful for exceptions that are little more than wrappers for other throwables.
-     *
-     * @param cause
-     *            The cause which is saved for later retrieval by the {@link #getCause()} method. A <code>null</code>
-     *            value is permitted, and indicates that the cause is nonexistent or unknown.
-     * @since 1.4
-     */
-    public EncoderException(final Throwable cause) {
-        super(cause);
-    }
-}

==================================================
