43e71306ed5a674f41c42552daaf8ff7a4ce358e
==================================================
StringBuffer -> StringBuilder for o.a.tomcat
==================================================
Mark Emlyn
==================================================
Mon Nov 2 18:56:52 2009 +0000
==================================================
Txt2Html.java
StringBuffer -> StringBuilder for o.a.tomcat

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@832050 13f79535-47bb-0310-9956-ffa450edef68



==================================================
IntrospectionUtils.java
index b8b974be71..18fc4de86e 100644
--- a/java/org/apache/tomcat/buildutil/Txt2Html.java
+++ b/java/org/apache/tomcat/buildutil/Txt2Html.java
@@ -133,7 +133,7 @@ public class Txt2Html
         // Convert, line-by-line:
         String line;
         while( (line = in.readLine()) != null ) {
-            StringBuffer result = new StringBuffer();
+            StringBuilder result = new StringBuilder();
             int len = line.length();
             for( int i = 0; i < len; i++ ) {
                 char c = line.charAt( i );

==================================================
CharChunk.java
index ed4f51905e..56c46a393f 100644
--- a/java/org/apache/tomcat/util/IntrospectionUtils.java
+++ b/java/org/apache/tomcat/util/IntrospectionUtils.java
@@ -466,7 +466,7 @@ public final class IntrospectionUtils {
         if (value.indexOf("$") < 0) {
             return value;
         }
-        StringBuffer sb = new StringBuffer();
+        StringBuilder sb = new StringBuilder();
         int prev = 0;
         // assert value!=nil
         int pos;
@@ -835,7 +835,7 @@ public final class IntrospectionUtils {
 
         if (log.isDebugEnabled()) {
             // debug
-            StringBuffer sb = new StringBuffer();
+            StringBuilder sb = new StringBuilder();
             sb.append("" + target.getClass().getName() + "." + methodN + "( ");
             for (int i = 0; i < params.length; i++) {
                 if (i > 0)

==================================================
UDecoder.java
index a2e8ca60b1..91ece8b981 100644
--- a/java/org/apache/tomcat/util/buf/CharChunk.java
+++ b/java/org/apache/tomcat/util/buf/CharChunk.java
@@ -305,7 +305,7 @@ public final class CharChunk implements Cloneable, Serializable, CharSequence {
 
     /** Add data to the buffer
      */
-    public void append( StringBuffer sb )
+    public void append( StringBuilder sb )
 	throws IOException
     {
 	int len=sb.length();

==================================================
CallMethodRule.java
index e15976397c..937d055d91 100644
--- a/java/org/apache/tomcat/util/buf/UDecoder.java
+++ b/java/org/apache/tomcat/util/buf/UDecoder.java
@@ -201,7 +201,7 @@ public final class UDecoder {
 	if( (!query || str.indexOf( '+' ) < 0) && str.indexOf( '%' ) < 0 )
 	    return str;
 	
-        StringBuffer dec = new StringBuffer();    // decoded string output
+        StringBuilder dec = new StringBuilder();    // decoded string output
         int strPos = 0;
         int strLen = str.length();
 

==================================================
CallParamRule.java
index f98e253a2a..85ada3844f 100644
--- a/java/org/apache/tomcat/util/digester/CallMethodRule.java
+++ b/java/org/apache/tomcat/util/digester/CallMethodRule.java
@@ -486,7 +486,7 @@ public class CallMethodRule extends Rule {
         }
         
         if (target == null) {
-            StringBuffer sb = new StringBuffer();
+            StringBuilder sb = new StringBuilder();
             sb.append("[CallMethodRule]{");
             sb.append(digester.match);
             sb.append("} Call target is null (");
@@ -500,7 +500,7 @@ public class CallMethodRule extends Rule {
         
         // Invoke the required method on the top object
         if (digester.log.isDebugEnabled()) {
-            StringBuffer sb = new StringBuffer("[CallMethodRule]{");
+            StringBuilder sb = new StringBuilder("[CallMethodRule]{");
             sb.append(digester.match);
             sb.append("} Call ");
             sb.append(target.getClass().getName());
@@ -556,7 +556,7 @@ public class CallMethodRule extends Rule {
      */
     public String toString() {
 
-        StringBuffer sb = new StringBuffer("CallMethodRule[");
+        StringBuilder sb = new StringBuilder("CallMethodRule[");
         sb.append("methodName=");
         sb.append(methodName);
         sb.append(", paramCount=");

==================================================
Digester.java
index 6d10e394f9..89365c5169 100644
--- a/java/org/apache/tomcat/util/digester/CallParamRule.java
+++ b/java/org/apache/tomcat/util/digester/CallParamRule.java
@@ -161,7 +161,7 @@ public class CallParamRule extends Rule {
             
             if (digester.log.isDebugEnabled()) {
             
-                StringBuffer sb = new StringBuffer("[CallParamRule]{");
+                StringBuilder sb = new StringBuilder("[CallParamRule]{");
                 sb.append(digester.match);
                 sb.append("} Save from stack; from stack?").append(fromStack);
                 sb.append("; object=").append(param);
@@ -223,7 +223,7 @@ public class CallParamRule extends Rule {
      */
     public String toString() {
 
-        StringBuffer sb = new StringBuffer("CallParamRule[");
+        StringBuilder sb = new StringBuilder("CallParamRule[");
         sb.append("paramIndex=");
         sb.append(paramIndex);
         sb.append(", attributeName=");

==================================================
FactoryCreateRule.java
index 5a55ff401d..56b18d25c5 100644
--- a/java/org/apache/tomcat/util/digester/Digester.java
+++ b/java/org/apache/tomcat/util/digester/Digester.java
@@ -162,14 +162,14 @@ public class Digester extends DefaultHandler {
     /**
      * The body text of the current element.
      */
-    protected StringBuffer bodyText = new StringBuffer();
+    protected StringBuilder bodyText = new StringBuilder();
 
 
     /**
      * The stack of body text string buffers for surrounding elements.
      */
-    protected ArrayStack<StringBuffer> bodyTexts =
-        new ArrayStack<StringBuffer>();
+    protected ArrayStack<StringBuilder> bodyTexts =
+        new ArrayStack<StringBuilder>();
 
 
     /**
@@ -1240,7 +1240,7 @@ public class Digester extends DefaultHandler {
         if (debug) {
             log.debug("  Pushing body text '" + bodyText.toString() + "'");
         }
-        bodyText = new StringBuffer();
+        bodyText = new StringBuilder();
 
         // the actual element name is either in localName or qName, depending 
         // on whether the parser is namespace aware
@@ -1250,7 +1250,7 @@ public class Digester extends DefaultHandler {
         }
 
         // Compute the current matching rule
-        StringBuffer sb = new StringBuffer(match);
+        StringBuilder sb = new StringBuilder(match);
         if (match.length() > 0) {
             sb.append('/');
         }
@@ -2744,11 +2744,11 @@ public class Digester extends DefaultHandler {
 
 
     /**
-     * Return a new StringBuffer containing the same contents as the
+     * Return a new StringBuilder containing the same contents as the
      * input buffer, except that data of form ${varname} have been
      * replaced by the value of that var as defined in the system property.
      */
-    private StringBuffer updateBodyText(StringBuffer bodyText) {
+    private StringBuilder updateBodyText(StringBuilder bodyText) {
         String in = bodyText.toString();
         String out;
         try {
@@ -2762,7 +2762,7 @@ public class Digester extends DefaultHandler {
             // a new buffer
             return bodyText;
         } else {
-            return new StringBuffer(out);
+            return new StringBuilder(out);
         }
     }
 

==================================================
ObjectCreateRule.java
index c71ef79896..bf7e2dc38a 100644
--- a/java/org/apache/tomcat/util/digester/FactoryCreateRule.java
+++ b/java/org/apache/tomcat/util/digester/FactoryCreateRule.java
@@ -347,7 +347,7 @@ public class FactoryCreateRule extends Rule {
      */
     public String toString() {
 
-        StringBuffer sb = new StringBuffer("FactoryCreateRule[");
+        StringBuilder sb = new StringBuilder("FactoryCreateRule[");
         sb.append("className=");
         sb.append(className);
         sb.append(", attributeName=");

==================================================
ObjectParamRule.java
index 2cf0120a4f..e746584f19 100644
--- a/java/org/apache/tomcat/util/digester/ObjectCreateRule.java
+++ b/java/org/apache/tomcat/util/digester/ObjectCreateRule.java
@@ -168,7 +168,7 @@ public class ObjectCreateRule extends Rule {
      */
     public String toString() {
 
-        StringBuffer sb = new StringBuffer("ObjectCreateRule[");
+        StringBuilder sb = new StringBuilder("ObjectCreateRule[");
         sb.append("className=");
         sb.append(className);
         sb.append(", attributeName=");

==================================================
PathCallParamRule.java
index 927200b894..7b1d6a41f7 100644
--- a/java/org/apache/tomcat/util/digester/ObjectParamRule.java
+++ b/java/org/apache/tomcat/util/digester/ObjectParamRule.java
@@ -112,7 +112,7 @@ public class ObjectParamRule extends Rule {
      * Render a printable version of this Rule.
      */
     public String toString() {
-        StringBuffer sb = new StringBuffer("ObjectParamRule[");
+        StringBuilder sb = new StringBuilder("ObjectParamRule[");
         sb.append("paramIndex=");
         sb.append(paramIndex);
         sb.append(", attributeName=");

==================================================
SetNextRule.java
index d3f854948a..673f37dc99 100644
--- a/java/org/apache/tomcat/util/digester/PathCallParamRule.java
+++ b/java/org/apache/tomcat/util/digester/PathCallParamRule.java
@@ -84,7 +84,7 @@ public class PathCallParamRule extends Rule {
      */
     public String toString() {
 
-        StringBuffer sb = new StringBuffer("PathCallParamRule[");
+        StringBuilder sb = new StringBuilder("PathCallParamRule[");
         sb.append("paramIndex=");
         sb.append(paramIndex);
         sb.append("]");

==================================================
SetPropertiesRule.java
index 6eae24b089..434bef8c28 100644
--- a/java/org/apache/tomcat/util/digester/SetNextRule.java
+++ b/java/org/apache/tomcat/util/digester/SetNextRule.java
@@ -207,7 +207,7 @@ public class SetNextRule extends Rule {
      */
     public String toString() {
 
-        StringBuffer sb = new StringBuffer("SetNextRule[");
+        StringBuilder sb = new StringBuilder("SetNextRule[");
         sb.append("methodName=");
         sb.append(methodName);
         sb.append(", paramType=");

==================================================
SetPropertyRule.java
index 63d35cf85f..b1aa18a830 100644
--- a/java/org/apache/tomcat/util/digester/SetPropertiesRule.java
+++ b/java/org/apache/tomcat/util/digester/SetPropertiesRule.java
@@ -264,7 +264,7 @@ public class SetPropertiesRule extends Rule {
      */
     public String toString() {
 
-        StringBuffer sb = new StringBuffer("SetPropertiesRule[");
+        StringBuilder sb = new StringBuilder("SetPropertiesRule[");
         sb.append("]");
         return (sb.toString());
 

==================================================
SetRootRule.java
index a5c7d40741..8d018dac72 100644
--- a/java/org/apache/tomcat/util/digester/SetPropertyRule.java
+++ b/java/org/apache/tomcat/util/digester/SetPropertyRule.java
@@ -147,7 +147,7 @@ public class SetPropertyRule extends Rule {
      */
     public String toString() {
 
-        StringBuffer sb = new StringBuffer("SetPropertyRule[");
+        StringBuilder sb = new StringBuilder("SetPropertyRule[");
         sb.append("name=");
         sb.append(name);
         sb.append(", value=");

==================================================
SetTopRule.java
index ee25f235b0..9a22721004 100644
--- a/java/org/apache/tomcat/util/digester/SetRootRule.java
+++ b/java/org/apache/tomcat/util/digester/SetRootRule.java
@@ -208,7 +208,7 @@ public class SetRootRule extends Rule {
      */
     public String toString() {
 
-        StringBuffer sb = new StringBuffer("SetRootRule[");
+        StringBuilder sb = new StringBuilder("SetRootRule[");
         sb.append("methodName=");
         sb.append(methodName);
         sb.append(", paramType=");

==================================================
HttpMessages.java
index 1fc09d50c9..1f55c3d946 100644
--- a/java/org/apache/tomcat/util/digester/SetTopRule.java
+++ b/java/org/apache/tomcat/util/digester/SetTopRule.java
@@ -208,7 +208,7 @@ public class SetTopRule extends Rule {
      */
     public String toString() {
 
-        StringBuffer sb = new StringBuffer("SetTopRule[");
+        StringBuilder sb = new StringBuilder("SetTopRule[");
         sb.append("methodName=");
         sb.append(methodName);
         sb.append(", paramType=");

==================================================
Parameters.java
index fc519a9ab1..195d30f3a9 100644
--- a/java/org/apache/tomcat/util/http/HttpMessages.java
+++ b/java/org/apache/tomcat/util/http/HttpMessages.java
@@ -82,7 +82,7 @@ public class HttpMessages {
 
 	char content[] = new char[message.length()];
 	message.getChars(0, message.length(), content, 0);
-	StringBuffer result = new StringBuffer(content.length + 50);
+	StringBuilder result = new StringBuilder(content.length + 50);
 	for (int i = 0; i < content.length; i++) {
 	    switch (content[i]) {
 	    case '<':

==================================================
MultipartStream.java
index 5f1a152f95..d67ac893fd 100644
--- a/java/org/apache/tomcat/util/http/Parameters.java
+++ b/java/org/apache/tomcat/util/http/Parameters.java
@@ -362,7 +362,7 @@ public final class Parameters extends MultiMap {
     /** Debug purpose
      */
     public String paramsAsString() {
-        StringBuffer sb=new StringBuffer();
+        StringBuilder sb=new StringBuilder();
         Enumeration<String> en= paramHashStringArray.keys();
         while( en.hasMoreElements() ) {
             String k = en.nextElement();

==================================================
Mapper.java
index 1ce4ec3fbb..40c6c5d2c2 100644
--- a/java/org/apache/tomcat/util/http/fileupload/MultipartStream.java
+++ b/java/org/apache/tomcat/util/http/fileupload/MultipartStream.java
@@ -759,7 +759,7 @@ public class MultipartStream
      */
     public String toString()
     {
-        StringBuffer sbTemp = new StringBuffer();
+        StringBuilder sbTemp = new StringBuilder();
         sbTemp.append("boundary='");
         sbTemp.append(String.valueOf(boundary));
         sbTemp.append("'\nbufSize=");

==================================================
AttributeInfo.java
index 4ef10eb398..d4a54ed86a 100644
--- a/java/org/apache/tomcat/util/http/mapper/Mapper.java
+++ b/java/org/apache/tomcat/util/http/mapper/Mapper.java
@@ -500,7 +500,7 @@ public final class Mapper {
 
     public String getWrappersString( String host, String context ) {
         String names[]=getWrapperNames(host, context);
-        StringBuffer sb=new StringBuffer();
+        StringBuilder sb=new StringBuilder();
         for( int i=0; i<names.length; i++ ) {
             sb.append(names[i]).append(":");
         }

==================================================
ManagedBean.java
index 5819b53ea1..6560dba03a 100644
--- a/java/org/apache/tomcat/util/modeler/AttributeInfo.java
+++ b/java/org/apache/tomcat/util/modeler/AttributeInfo.java
@@ -146,7 +146,7 @@ public class AttributeInfo extends FeatureInfo implements Serializable {
      */
     private String getMethodName(String name, boolean getter, boolean is) {
 
-        StringBuffer sb = new StringBuffer();
+        StringBuilder sb = new StringBuilder();
         if (getter) {
             if (is)
                 sb.append("is");

==================================================
NotificationInfo.java
index 9ea285cde0..cf71c4ac2e 100644
--- a/java/org/apache/tomcat/util/modeler/ManagedBean.java
+++ b/java/org/apache/tomcat/util/modeler/ManagedBean.java
@@ -462,7 +462,7 @@ public class ManagedBean implements java.io.Serializable
      */
     public String toString() {
 
-        StringBuffer sb = new StringBuffer("ManagedBean[");
+        StringBuilder sb = new StringBuilder("ManagedBean[");
         sb.append("name=");
         sb.append(name);
         sb.append(", className=");

==================================================
URL.java
index f924d7e14a..e6cd0c86ce 100644
--- a/java/org/apache/tomcat/util/modeler/NotificationInfo.java
+++ b/java/org/apache/tomcat/util/modeler/NotificationInfo.java
@@ -125,7 +125,7 @@ public class NotificationInfo extends FeatureInfo implements Serializable {
      */
     public String toString() {
 
-        StringBuffer sb = new StringBuffer("NotificationInfo[");
+        StringBuilder sb = new StringBuilder("NotificationInfo[");
         sb.append("name=");
         sb.append(name);
         sb.append(", description=");

==================================================
JSSESupport.java
index 3521f6eb75..bde9420f62 100644
--- a/java/org/apache/tomcat/util/net/URL.java
+++ b/java/org/apache/tomcat/util/net/URL.java
@@ -534,7 +534,7 @@ public final class URL implements Serializable {
      */
     public String toExternalForm() {
 
-        StringBuffer sb = new StringBuffer();
+        StringBuilder sb = new StringBuilder();
         if (protocol != null) {
             sb.append(protocol);
             sb.append(":");
@@ -563,7 +563,7 @@ public final class URL implements Serializable {
      */
     public String toString() {
 
-        StringBuffer sb = new StringBuffer("URL[");
+        StringBuilder sb = new StringBuilder("URL[");
         sb.append("authority=");
         sb.append(authority);
         sb.append(", file=");

==================================================
