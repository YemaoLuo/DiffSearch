80f02e7f1162343721f257e4d62780cd94616aa1
==================================================
Delay checking that the configured attributes for an SSLHostConfig instance are consistent with the configured SSL implementation until Connector start to avoid incorrect warnings when the SSL implementation changes during initialisation.
==================================================
Mark Thomas
==================================================
Tue Aug 22 20:38:04 2017 +0000
==================================================
AbstractEndpoint.java
Delay checking that the configured attributes for an SSLHostConfig instance are consistent with the configured SSL implementation until Connector start to avoid incorrect warnings when the SSL implementation changes during initialisation.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1805826 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AbstractJsseEndpoint.java
index d739a2bc91..26f7e979af 100644
--- a/java/org/apache/tomcat/util/net/AbstractEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AbstractEndpoint.java
@@ -187,8 +187,8 @@ public abstract class AbstractEndpoint<S,U> {
         if (key == null || key.length() == 0) {
             throw new IllegalArgumentException(sm.getString("endpoint.noSslHostName"));
         }
-        sslHostConfig.setConfigType(getSslConfigType());
         if (bindState != BindState.UNBOUND && isSSLEnabled()) {
+            sslHostConfig.setConfigType(getSslConfigType());
             try {
                 createSSLContext(sslHostConfig);
             } catch (Exception e) {

==================================================
AprEndpoint.java
index e8f6c4ac05..2720e45e41 100644
--- a/java/org/apache/tomcat/util/net/AbstractJsseEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AbstractJsseEndpoint.java
@@ -81,6 +81,7 @@ public abstract class AbstractJsseEndpoint<S,U> extends AbstractEndpoint<S,U> {
             sslImplementation = SSLImplementation.getInstance(getSslImplementationName());
 
             for (SSLHostConfig sslHostConfig : sslHostConfigs.values()) {
+                sslHostConfig.setConfigType(getSslConfigType());
                 createSSLContext(sslHostConfig);
             }
 

==================================================
