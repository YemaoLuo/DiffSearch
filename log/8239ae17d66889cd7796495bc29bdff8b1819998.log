8239ae17d66889cd7796495bc29bdff8b1819998
==================================================
Reduce code duplication.
==================================================
Remy Maucherat
==================================================
Mon Nov 5 15:38:53 2018 +0000
==================================================
AbstractStreamProvider.java
Reduce code duplication.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1845813 13f79535-47bb-0310-9956-ffa450edef68



==================================================
CertificateStreamProvider.java
index 440b983a5d..db1b03a458 100644
--- a/java/org/apache/catalina/tribes/membership/cloud/AbstractStreamProvider.java
+++ b/java/org/apache/catalina/tribes/membership/cloud/AbstractStreamProvider.java
@@ -17,17 +17,23 @@
 
 package org.apache.catalina.tribes.membership.cloud;
 
+import java.io.BufferedInputStream;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.io.InputStream;
 import java.net.URL;
 import java.net.URLConnection;
+import java.security.KeyStore;
 import java.security.cert.CertificateException;
+import java.security.cert.CertificateFactory;
 import java.security.cert.X509Certificate;
 import java.util.Map;
 
 import javax.net.ssl.HttpsURLConnection;
 import javax.net.ssl.SSLSocketFactory;
 import javax.net.ssl.TrustManager;
+import javax.net.ssl.TrustManagerFactory;
 import javax.net.ssl.X509TrustManager;
 
 import org.apache.catalina.tribes.membership.Constants;
@@ -104,4 +110,32 @@ public abstract class AbstractStreamProvider implements StreamProvider {
         return connection.getInputStream();
     }
 
+    protected static TrustManager[] configureCaCert(String caCertFile) throws Exception {
+        if (caCertFile != null) {
+            try (InputStream pemInputStream = new BufferedInputStream(new FileInputStream(caCertFile))) {
+                CertificateFactory certFactory = CertificateFactory.getInstance("X509");
+                X509Certificate cert = (X509Certificate)certFactory.generateCertificate(pemInputStream);
+
+                KeyStore trustStore = KeyStore.getInstance("JKS");
+                trustStore.load(null);
+
+                String alias = cert.getSubjectX500Principal().getName();
+                trustStore.setCertificateEntry(alias, cert);
+
+                TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());
+                trustManagerFactory.init(trustStore);
+
+                return trustManagerFactory.getTrustManagers();
+            } catch (FileNotFoundException fnfe) {
+                log.error(sm.getString("abstractStream.fileNotFound", caCertFile));
+                throw fnfe;
+            } catch (Exception e) {
+                log.error(sm.getString("abstractStream.trustManagerError", caCertFile));
+                throw e;
+            }
+        } else {
+            log.warn(sm.getString("abstractStream.CACertUndefined"));
+            return InsecureStreamProvider.INSECURE_TRUST_MANAGERS;
+        }
+    }
 }

==================================================
TokenStreamProvider.java
index 0cd2683a3c..bcafce1fca 100644
--- a/java/org/apache/catalina/tribes/membership/cloud/LocalStrings.properties
+++ b/java/org/apache/catalina/tribes/membership/cloud/LocalStrings.properties
@@ -13,14 +13,13 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
+abstractStream.fileNotFound=CA cert file {0} not found
+abstractStream.trustManagerError=Could not create trust manager for {0}
+abstractStream.CACertUndefined=CA cert file undefined
+
 certificateStream.clientCertError=Could not create key manager for {0} ({1})
-certificateStream.CACertError=Could not create trust store for {0}
-certificateStream.CACertUndefined=CA cert undefined
 
-tokenStream.failedConnection=Failed connection to {0} with token {1} and CA {2}
-tokenStream.fileNotFound=CA cert file {0} not found
-tokenStream.trustManagerError=Could not create trust manager for {0}
-tokenStream.CACertUndefined=CA cert file undefined
+tokenStream.failedConnection=Failed connection to {0} with token {1}
 
 cloudMembershipService.stopFail=Unable to stop the static membership service, level: [{0}]
 

==================================================
