ff060430a6cd3dc3ceec6bcf504d4461013138e7
==================================================
Clean-up
==================================================
Mark Emlyn
==================================================
Fri Oct 12 08:21:27 2012 +0000
==================================================
Cookie.java
Clean-up
 - Servlet 3.0 Javadoc
 - line-length

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1397464 13f79535-47bb-0310-9956-ffa450edef68



==================================================
HttpServlet.java
index 8e753fceed..6daf0cea44 100644
--- a/java/javax/servlet/http/Cookie.java
+++ b/java/javax/servlet/http/Cookie.java
@@ -50,9 +50,6 @@ import java.util.ResourceBundle;
  * This class supports both the Version 0 (by Netscape) and Version 1 (by RFC
  * 2109) cookie specifications. By default, cookies are created using Version 0
  * to ensure the best interoperability.
- *
- * @author Various
- * @version $Version$
  */
 public class Cookie implements Cloneable, Serializable {
 
@@ -395,11 +392,13 @@ public class Cookie implements Cloneable, Serializable {
                         "org.apache.catalina.STRICT_SERVLET_COMPLIANCE",
                         "false")).booleanValue();
 
-        String fwdSlashIsSeparator = System.getProperty("org.apache.tomcat.util.http.ServerCookie.FWD_SLASH_IS_SEPARATOR");
+        String fwdSlashIsSeparator = System.getProperty(
+                "org.apache.tomcat.util.http.ServerCookie.FWD_SLASH_IS_SEPARATOR");
         if (fwdSlashIsSeparator == null) {
             FWD_SLASH_IS_SEPARATOR = STRICT_SERVLET_COMPLIANCE;
         } else {
-            FWD_SLASH_IS_SEPARATOR = Boolean.valueOf(fwdSlashIsSeparator).booleanValue();
+            FWD_SLASH_IS_SEPARATOR =
+                    Boolean.valueOf(fwdSlashIsSeparator).booleanValue();
         }
 
         if (FWD_SLASH_IS_SEPARATOR) {
@@ -408,7 +407,8 @@ public class Cookie implements Cloneable, Serializable {
             tspecials2 = tspecials2NoSlash;
         }
 
-        String strictNaming = System.getProperty("org.apache.tomcat.util.http.ServerCookie.STRICT_NAMING");
+        String strictNaming = System.getProperty(
+                "org.apache.tomcat.util.http.ServerCookie.STRICT_NAMING");
         if (strictNaming == null) {
             STRICT_NAMING = STRICT_SERVLET_COMPLIANCE;
         } else {
@@ -452,16 +452,24 @@ public class Cookie implements Cloneable, Serializable {
     }
 
     /**
-     * @param httpOnly
-     * @since Servlet 3.0 TODO SERVLET3 - Add comments
+     * Sets the flag that controls if this cookie will be hidden from scripts on
+     * the client side.
+     *
+     * @param httpOnly  The new value of the flag
+     *
+     * @since Servlet 3.0
      */
     public void setHttpOnly(boolean httpOnly) {
         this.httpOnly = httpOnly;
     }
 
     /**
-     * @return TODO
-     * @since Servlet 3.0 TODO SERVLET3 - Add comments
+     * Gets the flag that controls if this cookie will be hidden from scripts on
+     * the client side.
+     *
+     * @return  <code>true</code> if the cookie is hidden from scripts, else
+     *          <code>false</code>
+     * @since Servlet 3.0
      */
     public boolean isHttpOnly() {
         return httpOnly;

==================================================
