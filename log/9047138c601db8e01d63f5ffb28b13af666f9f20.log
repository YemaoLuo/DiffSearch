9047138c601db8e01d63f5ffb28b13af666f9f20
==================================================
Javadoc updates
==================================================
Mark Emlyn
==================================================
Thu Mar 7 13:03:58 2013 +0000
==================================================
HandshakeRequest.java
Javadoc updates

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1453842 13f79535-47bb-0310-9956-ffa450edef68



==================================================
PathParam.java
index a782b074dc..23f7e48aa0 100644
--- a/java/javax/websocket/server/HandshakeRequest.java
+++ b/java/javax/websocket/server/HandshakeRequest.java
@@ -21,6 +21,9 @@ import java.security.Principal;
 import java.util.List;
 import java.util.Map;
 
+/**
+ * Represents the HTTP request that asked to be upgraded to WebSocket.
+ */
 public interface HandshakeRequest {
 
     static final String SEC_WEBSOCKET_KEY = "Sec-WebSocket-Key";

==================================================
ServerApplicationConfig.java
index 776ddff2a1..ff1d085ed1 100644
--- a/java/javax/websocket/server/PathParam.java
+++ b/java/javax/websocket/server/PathParam.java
@@ -21,6 +21,11 @@ import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
+/**
+ * Used to annotate method parameters on POJO endpoints the the {@link
+ * ServerEndpoint} has been defined with a {@link ServerEndpoint#value()} that
+ * uses a URI template.
+ */
 @Retention(RetentionPolicy.RUNTIME)
 @Target(ElementType.PARAMETER)
 public @interface PathParam {

==================================================
ServerContainer.java
index 35db7019f7..b91f1c4397 100644
--- a/java/javax/websocket/server/ServerApplicationConfig.java
+++ b/java/javax/websocket/server/ServerApplicationConfig.java
@@ -20,10 +20,32 @@ import java.util.Set;
 
 import javax.websocket.Endpoint;
 
+/**
+ * Applications may provide an implementation of this interface to filter the
+ * discovered WebSocket endpoints that are deployed. Implementations of this
+ * class will be discovered via an ServletContainerInitializer scan.
+ */
 public interface ServerApplicationConfig {
 
+    /**
+     * Enables applications to filter the discovered implementations of
+     * {@link ServerEndpointConfig}.
+     *
+     * @param scanned   The {@link Endpoint} implementations found in the
+     *                  application
+     * @return  The set of configurations for the endpoint the application
+     *              wishes to deploy
+     */
     Set<ServerEndpointConfig> getEndpointConfigs(
             Set<Class<? extends Endpoint>> scanned);
 
+    /**
+     * Enables applications to filter the discovered classes annotated with
+     * {@link ServerEndpoint}.
+     *
+     * @param scanned   The POJOs annotated with {@link ServerEndpoint} found in
+     *                  the application
+     * @return  The set of POJOs the application wishes to deploy
+     */
     Set<Class<?>> getAnnotatedEndpointClasses(Set<Class<?>> scanned);
 }

==================================================
ServerContainerProvider.java
index 13a427fbf5..3243a07c0f 100644
--- a/java/javax/websocket/server/ServerContainer.java
+++ b/java/javax/websocket/server/ServerContainer.java
@@ -19,6 +19,9 @@ package javax.websocket.server;
 import javax.websocket.DeploymentException;
 import javax.websocket.WebSocketContainer;
 
+/**
+ * Provides the ability to deploy endpoints programmatically.
+ */
 public interface ServerContainer extends WebSocketContainer {
     public abstract void addEndpoint(Class<?> clazz) throws DeploymentException;
 

==================================================
