ca0555e433067ba7acf863e8e90ebade4b06d144
==================================================
upgradeDispatch() needs socket status to differentiate between read and
==================================================
Mark Emlyn
==================================================
Sat Nov 24 17:40:52 2012 +0000
==================================================
AbstractProcessor.java
upgradeDispatch() needs socket status to differentiate between read and
write

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1413217 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AbstractProtocol.java
index f7c677abe2..6db7f4028e 100644
--- a/java/org/apache/coyote/AbstractProcessor.java
+++ b/java/org/apache/coyote/AbstractProcessor.java
@@ -130,7 +130,7 @@ public abstract class AbstractProcessor<S> implements ActionHook, Processor<S> {
      */
     @Override
     public abstract SocketState process(SocketWrapper<S> socket)
-        throws IOException;
+            throws IOException;
 
     /**
      * Process in-progress Comet requests. These will start as HTTP requests.
@@ -150,7 +150,8 @@ public abstract class AbstractProcessor<S> implements ActionHook, Processor<S> {
      * upgrade.
      */
     @Override
-    public abstract SocketState upgradeDispatch() throws IOException;
+    public abstract SocketState upgradeDispatch(SocketStatus status)
+            throws IOException;
 
     @Override
     public abstract javax.servlet.http.ProtocolHandler getHttpUpgradeHandler();

==================================================
Processor.java
index 05d6d6632a..cbf543d351 100644
--- a/java/org/apache/coyote/AbstractProtocol.java
+++ b/java/org/apache/coyote/AbstractProtocol.java
@@ -614,7 +614,7 @@ public abstract class AbstractProtocol implements ProtocolHandler,
                     } else if (processor.isComet()) {
                         state = processor.event(status);
                     } else if (processor.isUpgrade()) {
-                        state = processor.upgradeDispatch();
+                        state = processor.upgradeDispatch(status);
                     } else {
                         state = processor.process(socket);
                     }

==================================================
AbstractAjpProcessor.java
index 6b6c430c81..ffeb32d871 100644
--- a/java/org/apache/coyote/Processor.java
+++ b/java/org/apache/coyote/Processor.java
@@ -39,7 +39,7 @@ public interface Processor<S> {
     SocketState asyncPostProcess();
 
     javax.servlet.http.ProtocolHandler getHttpUpgradeHandler();
-    SocketState upgradeDispatch() throws IOException;
+    SocketState upgradeDispatch(SocketStatus status) throws IOException;
 
     boolean isComet();
     boolean isAsync();

==================================================
AbstractHttp11Processor.java
index 70172b15b3..1b58d4cab1 100644
--- a/java/org/apache/coyote/ajp/AbstractAjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AbstractAjpProcessor.java
@@ -529,7 +529,7 @@ public abstract class AbstractAjpProcessor<S> extends AbstractProcessor<S> {
 
 
     @Override
-    public SocketState upgradeDispatch() throws IOException {
+    public SocketState upgradeDispatch(SocketStatus status) throws IOException {
         // Should never reach this code but in case we do...
         throw new IOException(
                 sm.getString("ajpprocessor.httpupgrade.notsupported"));

==================================================
UpgradeProcessor.java
index 91132f4257..55dd434e33 100644
--- a/java/org/apache/coyote/http11/AbstractHttp11Processor.java
+++ b/java/org/apache/coyote/http11/AbstractHttp11Processor.java
@@ -1549,7 +1549,7 @@ public abstract class AbstractHttp11Processor<S> extends AbstractProcessor<S> {
 
 
     @Override
-    public SocketState upgradeDispatch() throws IOException {
+    public SocketState upgradeDispatch(SocketStatus status) throws IOException {
         // Should never reach this code but in case we do...
         // TODO
         throw new IOException(

==================================================
SpdyProcessor.java
index 0af9f8656d..a88d48c56e 100644
--- a/java/org/apache/coyote/http11/upgrade/UpgradeProcessor.java
+++ b/java/org/apache/coyote/http11/upgrade/UpgradeProcessor.java
@@ -80,7 +80,8 @@ public abstract class UpgradeProcessor<S>
     }
 
     @Override
-    public final SocketState upgradeDispatch() throws IOException {
+    public final SocketState upgradeDispatch(SocketStatus status)
+            throws IOException {
 
         // TODO Handle read/write ready for non-blocking IO
         return SocketState.UPGRADED;

==================================================
