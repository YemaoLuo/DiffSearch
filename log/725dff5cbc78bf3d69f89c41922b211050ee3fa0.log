725dff5cbc78bf3d69f89c41922b211050ee3fa0
==================================================
Reduce code duplication
==================================================
Mark Thomas
==================================================
Tue Aug 30 16:59:06 2016 +0000
==================================================
FilterMap.java
Reduce code duplication

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1758430 13f79535-47bb-0310-9956-ffa450edef68



==================================================
JspPropertyGroup.java
index 104c48ddec..4e9b6177fd 100644
--- a/java/org/apache/tomcat/util/descriptor/web/FilterMap.java
+++ b/java/org/apache/tomcat/util/descriptor/web/FilterMap.java
@@ -32,7 +32,7 @@ import org.apache.tomcat.util.buf.UDecoder;
  *
  * @author Craig R. McClanahan
  */
-public class FilterMap implements Serializable {
+public class FilterMap extends XmlEncodingBase implements Serializable {
 
 
     // ------------------------------------------------------------- Properties
@@ -57,24 +57,6 @@ public class FilterMap implements Serializable {
 
     private int dispatcherMapping = NOT_SET;
 
-    private String encoding = null;
-    public void setEncoding(String encoding) {
-        this.encoding = encoding;
-    }
-    /**
-     * Obtain the encoding of the XML source that was used to populated this
-     * object.
-     *
-     * @return The encoding of the associated XML source or <code>UTF-8</code>
-     *         if the encoding could not be determined
-     */
-    public String getEncoding() {
-        if (encoding == null || encoding.length() == 0) {
-            return "UTF-8";
-        }
-        return encoding;
-    }
-
     private String filterName = null;
 
     public String getFilterName() {

==================================================
SecurityConstraint.java
index 913a136909..67e9e25c79 100644
--- a/java/org/apache/tomcat/util/descriptor/web/JspPropertyGroup.java
+++ b/java/org/apache/tomcat/util/descriptor/web/JspPropertyGroup.java
@@ -26,25 +26,7 @@ import org.apache.tomcat.util.buf.UDecoder;
 /**
  * Representation of a jsp-property-group element in web.xml.
  */
-public class JspPropertyGroup {
-
-    private String encoding = null;
-    public void setEncoding(String encoding) {
-        this.encoding = encoding;
-    }
-    /**
-     * Obtain the encoding of the XML source that was used to populated this
-     * object.
-     *
-     * @return The encoding of the associated XML source or <code>UTF-8</code>
-     *         if the encoding could not be determined
-     */
-    public String getEncoding() {
-        if (encoding == null || encoding.length() == 0) {
-            return "UTF-8";
-        }
-        return encoding;
-    }
+public class JspPropertyGroup extends XmlEncodingBase {
 
     private Boolean deferredSyntax = null;
     public void setDeferredSyntax(String deferredSyntax) {

==================================================
WebXml.java
index 384f78f16d..e0b7f4d09a 100644
--- a/java/org/apache/tomcat/util/descriptor/web/SecurityConstraint.java
+++ b/java/org/apache/tomcat/util/descriptor/web/SecurityConstraint.java
@@ -50,7 +50,7 @@ import org.apache.tomcat.util.res.StringManager;
  *
  * @author Craig R. McClanahan
  */
-public class SecurityConstraint implements Serializable {
+public class SecurityConstraint extends XmlEncodingBase implements Serializable {
 
     private static final long serialVersionUID = 1L;
 
@@ -61,25 +61,6 @@ public class SecurityConstraint implements Serializable {
             StringManager.getManager(Constants.PACKAGE_NAME);
 
 
-    private String encoding = null;
-    public void setEncoding(String encoding) {
-        this.encoding = encoding;
-    }
-    /**
-     * Obtain the encoding of the XML source that was used to populated this
-     * object.
-     *
-     * @return The encoding of the associated XML source or <code>UTF-8</code>
-     *         if the encoding could not be determined
-     */
-    public String getEncoding() {
-        if (encoding == null || encoding.length() == 0) {
-            return "UTF-8";
-        }
-        return encoding;
-    }
-
-
     // ----------------------------------------------------------- Constructors
 
     /**

==================================================
XmlEncodingBase.java
index d22de179df..3e623f548e 100644
--- a/java/org/apache/tomcat/util/descriptor/web/WebXml.java
+++ b/java/org/apache/tomcat/util/descriptor/web/WebXml.java
@@ -54,7 +54,7 @@ import org.apache.tomcat.util.res.StringManager;
  * This class checks for invalid duplicates (eg filter/servlet names)
  * StandardContext will check validity of values (eg URL formats etc)
  */
-public class WebXml implements DocumentProperties.Encoding {
+public class WebXml extends XmlEncodingBase implements DocumentProperties.Encoding {
 
     protected static final String ORDER_OTHERS =
         "org.apache.catalina.order.others";
@@ -130,25 +130,6 @@ public class WebXml implements DocumentProperties.Encoding {
     public Set<String> getBeforeOrdering() { return before; }
 
     // Common elements and attributes
-    private String encoding = null;
-    @Override
-    public void setEncoding(String encoding) {
-        this.encoding = encoding;
-    }
-    /**
-     * Obtain the encoding of the XML source that was used to populated this
-     * object.
-     *
-     * @return The encoding of the associated XML source or <code>UTF-8</code>
-     *         if the encoding could not be determined
-     */
-    public String getEncoding() {
-        if (encoding == null || encoding.length() == 0) {
-            return "UTF-8";
-        }
-        return encoding;
-    }
-
     // Required attribute of web-app element
     public String getVersion() {
         StringBuilder sb = new StringBuilder(3);

==================================================
