18b4511ef574b844543eebb6fe14975530d6a4c5
==================================================
Review JASPIC unit tests
==================================================
Mark Thomas
==================================================
Wed Jun 17 09:17:49 2015 +0000
==================================================
TestJaspicAuthenticator.java
Review JASPIC unit tests
- Line spacing
- Renaming to avoid failures when running via the build script

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1685968 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestJaspicCallbackHandler.java
index 8b4c91d62d..3795a62012 100644
--- a/test/org/apache/catalina/authenticator/jaspic/TestJaspicAuthenticator.java
+++ b/test/org/apache/catalina/authenticator/jaspic/TestJaspicAuthenticator.java
@@ -29,7 +29,7 @@ import static org.junit.Assert.assertEquals;
 import org.junit.Test;
 
 import org.apache.catalina.Context;
-import org.apache.catalina.authenticator.jaspic.sam.TestAuthConfigProvider;
+import org.apache.catalina.authenticator.jaspic.sam.TesterAuthConfigProvider;
 import org.apache.catalina.startup.TesterServlet;
 import org.apache.catalina.startup.Tomcat;
 import org.apache.catalina.startup.TomcatBaseTest;
@@ -45,6 +45,7 @@ public class TestJaspicAuthenticator extends TomcatBaseTest {
     private static final String ROLE = "group";
     private Context context;
 
+
     @Override
     public void setUp() throws Exception {
         super.setUp();
@@ -53,8 +54,8 @@ public class TestJaspicAuthenticator extends TomcatBaseTest {
         this.context = tomcat.addContext(CONTEXT_PATH, null);
 
         // Add protected servlet
-        Tomcat.addServlet(context, "TesterServlet3", new TesterServlet());
-        context.addServletMapping(URI_PROTECTED, "TesterServlet3");
+        Tomcat.addServlet(context, "TesterServlet", new TesterServlet());
+        context.addServletMapping(URI_PROTECTED, "TesterServlet");
         SecurityCollection collection = new SecurityCollection();
         collection.addPattern(URI_PROTECTED);
 
@@ -70,11 +71,12 @@ public class TestJaspicAuthenticator extends TomcatBaseTest {
         context.getPipeline().addValve(new JaspicAuthenticator());
 
         AuthConfigFactory factory = AuthConfigFactory.getFactory();
-        factory.registerConfigProvider(new TestAuthConfigProvider(), "HttpServlet", null,
+        factory.registerConfigProvider(new TesterAuthConfigProvider(), "HttpServlet", null,
                 "Description");
         getTomcatInstance().start();
     }
 
+
     @Test
     public void shouldAuthenticateUsingRegistredJaspicProvider() throws Exception {
         // given
@@ -89,6 +91,7 @@ public class TestJaspicAuthenticator extends TomcatBaseTest {
         assertEquals("OK", byteChunk.toString());
     }
 
+
     @Test
     public void shouldFailAuthenticationUsingRegistredJaspicProvider() throws Exception {
         // given
@@ -102,8 +105,8 @@ public class TestJaspicAuthenticator extends TomcatBaseTest {
         assertEquals(HttpServletResponse.SC_FORBIDDEN, result);
     }
 
+
     private String getUrl() throws MalformedURLException {
         return new URL("http", "localhost", getPort(), CONTEXT_PATH).toString();
     }
-
 }

==================================================
TestPrincipalGroupCallback.java
index 7bfa8ad7e2..9e2dc63bfe 100644
--- a/test/org/apache/catalina/authenticator/jaspic/TestJaspicCallbackHandler.java
+++ b/test/org/apache/catalina/authenticator/jaspic/TestJaspicCallbackHandler.java
@@ -30,10 +30,12 @@ import org.junit.Test;
 import org.apache.catalina.realm.GenericPrincipal;
 
 public class TestJaspicCallbackHandler {
+
     private static final String USER = "user";
 
     private JaspicCallbackHandler jaspicCallbackHandler = new JaspicCallbackHandler(null);
 
+
     @Test
     public void shouldConvertCallbackToTomcatPrincipal() throws Exception {
         // given
@@ -52,6 +54,7 @@ public class TestJaspicCallbackHandler {
         assertArrayEquals(groups, principal.getRoles());
     }
 
+
     @Test(expected = IllegalStateException.class)
     public void shouldHandleUnknowCallback() throws Exception {
         // given
@@ -64,5 +67,4 @@ public class TestJaspicCallbackHandler {
         // then
         fail("Should throw exception");
     }
-
 }
\ No newline at end of file

==================================================
TesterAuthConfig.java
index 84363014d6..11fa6ee7fd 100644
--- a/test/org/apache/catalina/authenticator/jaspic/TestPrincipalGroupCallback.java
+++ b/test/org/apache/catalina/authenticator/jaspic/TestPrincipalGroupCallback.java
@@ -34,6 +34,7 @@ public class TestPrincipalGroupCallback {
 
     private static final String USER_NAME = "user";
 
+
     @Test
     public void shouldAddUserPrincipal() throws Exception {
         // given
@@ -50,6 +51,7 @@ public class TestPrincipalGroupCallback {
         assertEquals(userPrincipal, principal.getUserPrincipal());
     }
 
+
     @Test
     public void shouldCreatePrincipalWithUsername() throws Exception {
         // given
@@ -64,6 +66,7 @@ public class TestPrincipalGroupCallback {
         assertEquals(USER_NAME, principal.getName());
     }
 
+
     @Test
     public void shouldAddGroupsToPrincipal() throws Exception {
         // given
@@ -84,6 +87,7 @@ public class TestPrincipalGroupCallback {
         assertArrayEquals(principal.getRoles(), groups);
     }
 
+
     @Test
     public void shouldReturnNullIfNoCallbackDefined() throws Exception {
         // given
@@ -96,6 +100,7 @@ public class TestPrincipalGroupCallback {
         assertNull(principal);
     }
 
+
     private static class UserPrincipal implements Principal {
         private String name;
 

==================================================
TesterAuthConfigProvider.java
similarity index 89%
rename from test/org/apache/catalina/authenticator/jaspic/sam/TestAuthConfig.java
rename to test/org/apache/catalina/authenticator/jaspic/sam/TesterAuthConfig.java
index dcd38980ad..21cd18a855 100644
--- a/test/org/apache/catalina/authenticator/jaspic/sam/TestAuthConfig.java
+++ b/test/org/apache/catalina/authenticator/jaspic/sam/TesterAuthConfig.java
@@ -26,45 +26,52 @@ import javax.security.auth.message.config.ServerAuthConfig;
 import javax.security.auth.message.config.ServerAuthContext;
 import javax.security.auth.message.module.ServerAuthModule;
 
-public class TestAuthConfig implements ServerAuthConfig {
+public class TesterAuthConfig implements ServerAuthConfig {
+
     private CallbackHandler callbackHandler;
     private ServerAuthModule authModule;
 
-    public TestAuthConfig(CallbackHandler callbackHandler, ServerAuthModule authModule) {
+
+    public TesterAuthConfig(CallbackHandler callbackHandler, ServerAuthModule authModule) {
         this.callbackHandler = callbackHandler;
         this.authModule = authModule;
     }
 
+
     @Override
     public String getMessageLayer() {
         return "HttpServlet";
     }
 
+
     @Override
     public String getAppContext() {
         return null;
     }
 
+
     @Override
     public String getAuthContextID(MessageInfo messageInfo) {
         return null;
     }
 
+
     @Override
     public void refresh() {
 
     }
 
+
     @Override
     public boolean isProtected() {
         return false;
     }
 
+
     @Override
     @SuppressWarnings("rawtypes")
     public ServerAuthContext getAuthContext(String authContextID, Subject serviceSubject,
             Map properties) throws AuthException {
-        return new TestServerAuthContext(callbackHandler, authModule);
+        return new TesterServerAuthContext(callbackHandler, authModule);
     }
-
 }
\ No newline at end of file

==================================================
TesterAuthModule.java
similarity index 91%
rename from test/org/apache/catalina/authenticator/jaspic/sam/TestAuthConfigProvider.java
rename to test/org/apache/catalina/authenticator/jaspic/sam/TesterAuthConfigProvider.java
index 4c7768cb37..92faeae8f0 100644
--- a/test/org/apache/catalina/authenticator/jaspic/sam/TestAuthConfigProvider.java
+++ b/test/org/apache/catalina/authenticator/jaspic/sam/TesterAuthConfigProvider.java
@@ -22,7 +22,7 @@ import javax.security.auth.message.config.AuthConfigProvider;
 import javax.security.auth.message.config.ClientAuthConfig;
 import javax.security.auth.message.config.ServerAuthConfig;
 
-public class TestAuthConfigProvider implements AuthConfigProvider {
+public class TesterAuthConfigProvider implements AuthConfigProvider {
 
     @Override
     public ClientAuthConfig getClientAuthConfig(String layer, String appContext,
@@ -30,12 +30,14 @@ public class TestAuthConfigProvider implements AuthConfigProvider {
         return null;
     }
 
+
     @Override
     public ServerAuthConfig getServerAuthConfig(String layer, String appContext,
             CallbackHandler handler) throws AuthException {
-        return new TestAuthConfig(handler, new TestAuthModule());
+        return new TesterAuthConfig(handler, new TesterAuthModule());
     }
 
+
     @Override
     public void refresh() {
     }

==================================================
TesterServerAuthContext.java
similarity index 98%
rename from test/org/apache/catalina/authenticator/jaspic/sam/TestAuthModule.java
rename to test/org/apache/catalina/authenticator/jaspic/sam/TesterAuthModule.java
index a0f080b096..f97234e5d7 100644
--- a/test/org/apache/catalina/authenticator/jaspic/sam/TestAuthModule.java
+++ b/test/org/apache/catalina/authenticator/jaspic/sam/TesterAuthModule.java
@@ -34,12 +34,13 @@ import javax.security.auth.message.module.ServerAuthModule;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
 
-public class TestAuthModule implements ServerAuthModule {
+public class TesterAuthModule implements ServerAuthModule {
 
     private CallbackHandler handler;
     private Class<?>[] supportedMessageTypes = new Class[] { HttpServletRequest.class,
             HttpServletResponse.class };
 
+
     @Override
     @SuppressWarnings("rawtypes")
     public void initialize(MessagePolicy requestPolicy, MessagePolicy responsePolicy,
@@ -47,6 +48,7 @@ public class TestAuthModule implements ServerAuthModule {
         this.handler = handler;
     }
 
+
     @Override
     public AuthStatus validateRequest(MessageInfo messageInfo, Subject clientSubject,
             Subject serviceSubject) throws AuthException {
@@ -63,6 +65,7 @@ public class TestAuthModule implements ServerAuthModule {
         return AuthStatus.SUCCESS;
     }
 
+
     private Callback[] getAuthenticationCallbacks(Subject clientSubject, HttpServletRequest request) {
         Callback[] callbacks;
 
@@ -76,20 +79,22 @@ public class TestAuthModule implements ServerAuthModule {
         return callbacks;
     }
 
+
     @Override
     public AuthStatus secureResponse(MessageInfo messageInfo, Subject serviceSubject)
             throws AuthException {
         return AuthStatus.SEND_SUCCESS;
     }
 
+
     @Override
     public void cleanSubject(MessageInfo messageInfo, Subject subject) throws AuthException {
 
     }
 
+
     @Override
     public Class<?>[] getSupportedMessageTypes() {
         return supportedMessageTypes;
     }
-
 }

==================================================
