2a27bcde42e2978250f20d475d98803fb1f3bf8e
==================================================
Clean-up in preparation for a fix for bug 52184
==================================================
Mark Emlyn
==================================================
Thu Dec 8 20:32:55 2011 +0000
==================================================
DirectJDKLog.java
Clean-up in preparation for a fix for bug 52184

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1212091 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Cookies.java
index 770d278004..596159750b 100644
--- a/java/org/apache/juli/logging/DirectJDKLog.java
+++ b/java/org/apache/juli/logging/DirectJDKLog.java
@@ -166,23 +166,23 @@ class DirectJDKLog implements Log {
     // using java.util.logging - and the ugliness if you need to wrap it - is far
     // worse than the unfriendly and uncommon default format for logs.
 
-    private void log( Level level, String msg, Throwable ex ) {
+    private void log(Level level, String msg, Throwable ex) {
         if (logger.isLoggable(level)) {
             // Hack (?) to get the stack trace.
             Throwable dummyException=new Throwable();
             StackTraceElement locations[]=dummyException.getStackTrace();
-            // Caller will be the third element
-            String cname="unknown";
-            String method="unknown";
-            if( locations!=null && locations.length >2 ) {
+            // Caller will be the third element (or later if logger is wrapped)
+            String cname = "unknown";
+            String method = "unknown";
+            if (locations != null && locations.length >2) {
                 StackTraceElement caller=locations[2];
                 cname=caller.getClassName();
                 method=caller.getMethodName();
             }
-            if( ex==null ) {
-                logger.logp( level, cname, method, msg );
+            if (ex==null) {
+                logger.logp(level, cname, method, msg);
             } else {
-                logger.logp( level, cname, method, msg, ex );
+                logger.logp(level, cname, method, msg, ex);
             }
         }
     }

==================================================
