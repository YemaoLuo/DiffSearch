f52a52c4c62d3585d0d5dad6b3aacfbc855f1c46
==================================================
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61668
==================================================
Mark Thomas
==================================================
Wed Nov 8 11:06:39 2017 +0000
==================================================
StringUtils.java
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61668
Refactor StringUtils to better handle null inputs.
Add test cases for bug and all StringUtils methods.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1814567 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestAbstractHttp11Protocol.java
index 292d7f4c49..2a9eeb0622 100644
--- a/java/org/apache/tomcat/util/buf/StringUtils.java
+++ b/java/org/apache/tomcat/util/buf/StringUtils.java
@@ -23,7 +23,8 @@ import java.util.function.Function;
 /**
  * Utility methods to build a separated list from a given set (not
  * java.util.Set) of inputs and return that list as a string or append it to an
- * existing StringBuilder.
+ * existing StringBuilder. If the given set is null or empty, an empty string
+ * will be returned.
  */
 public final class StringUtils {
 
@@ -35,11 +36,17 @@ public final class StringUtils {
 
 
     public static String join(String[] array) {
+        if (array == null) {
+            return EMPTY_STRING;
+        }
         return join(Arrays.asList(array));
     }
 
 
     public static void join(String[] array, char separator, StringBuilder sb) {
+        if (array == null) {
+            return;
+        }
         join(Arrays.asList(array), separator, sb);
     }
 
@@ -51,7 +58,7 @@ public final class StringUtils {
 
     public static String join(Collection<String> collection, char separator) {
         // Shortcut
-        if (collection.isEmpty()) {
+        if (collection == null || collection.isEmpty()) {
             return EMPTY_STRING;
         }
 
@@ -68,12 +75,18 @@ public final class StringUtils {
 
     public static <T> void join(T[] array, char separator, Function<T,String> function,
             StringBuilder sb) {
+        if (array == null) {
+            return;
+        }
         join(Arrays.asList(array), separator, function, sb);
     }
 
 
     public static <T> void join(Iterable<T> iterable, char separator, Function<T,String> function,
             StringBuilder sb) {
+        if (iterable == null) {
+            return;
+        }
         boolean first = true;
         for (T value : iterable) {
             if (first) {

==================================================
TestStringUtils.java
new file mode 100644
index 0000000000..80023d99cb
--- /dev/null
+++ b/test/org/apache/coyote/http11/TestAbstractHttp11Protocol.java
@@ -0,0 +1,28 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one or more
+ *  contributor license agreements.  See the NOTICE file distributed with
+ *  this work for additional information regarding copyright ownership.
+ *  The ASF licenses this file to You under the Apache License, Version 2.0
+ *  (the "License"); you may not use this file except in compliance with
+ *  the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing, software
+ *  distributed under the License is distributed on an "AS IS" BASIS,
+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *  See the License for the specific language governing permissions and
+ *  limitations under the License.
+ */
+package org.apache.coyote.http11;
+
+import org.junit.Test;
+
+public class TestAbstractHttp11Protocol {
+
+    @Test
+    public void testGetSslProtocol() {
+        Http11Nio2Protocol protocol = new Http11Nio2Protocol();
+        protocol.getSSLProtocol();
+    }
+}

==================================================
