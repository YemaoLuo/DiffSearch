6a998843e6debdbf03a5c61b64eff364b83cda36
==================================================
Avoid ArrayIndexOutOfBoundsException in HttpParser on incorrect input.
==================================================
Konstantin Kolinko
==================================================
Wed Jan 9 11:41:18 2013 +0000
==================================================
HttpParser.java
Avoid ArrayIndexOutOfBoundsException in HttpParser on incorrect input.
Inspired by o.a.t.util.buf.HexUtils.getDec()

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1430799 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestAuthorizationDigest.java
index 648fb40e0c..d394ae1f2f 100644
--- a/java/org/apache/tomcat/util/http/parser/HttpParser.java
+++ b/java/org/apache/tomcat/util/http/parser/HttpParser.java
@@ -52,6 +52,7 @@ public class HttpParser {
 
     private static final Map<String,Integer> fieldTypes = new HashMap<>();
 
+    // Arrays used by isToken(), isHex() 
     private static final boolean isToken[] = new boolean[128];
     private static final boolean isHex[] = new boolean[128];
 
@@ -238,6 +239,24 @@ public class HttpParser {
         return result.toString();
     }
 
+    private static boolean isToken(int c) {
+        // Fast for correct values, slower for incorrect ones
+        try {
+            return isToken[c];
+        } catch (ArrayIndexOutOfBoundsException ex) {
+            return false;
+        }
+    }
+
+    private static boolean isHex(int c) {
+        // Fast for correct values, slower for incorrect ones
+        try {
+            return isHex[c];
+        } catch (ArrayIndexOutOfBoundsException ex) {
+            return false;
+        }
+    }
+
     private static SkipConstantResult skipConstant(StringReader input,
             String constant) throws IOException {
         int len = constant.length();
@@ -277,7 +296,7 @@ public class HttpParser {
             c = input.read();
         }
 
-        while (c != -1 && isToken[c]) {
+        while (c != -1 && isToken(c)) {
             result.append((char) c);
             c = input.read();
         }
@@ -381,7 +400,7 @@ public class HttpParser {
         }
         c = input.read();
 
-        while (c != -1 && isToken[c]) {
+        while (c != -1 && isToken(c)) {
             result.append((char) c);
             c = input.read();
         }
@@ -419,7 +438,7 @@ public class HttpParser {
             c = input.read();
         }
 
-        while (c != -1 && isHex[c]) {
+        while (c != -1 && isHex(c)) {
             result.append((char) c);
             c = input.read();
         }

==================================================
