9ddbf1c5cd104197ad2013a8a01bf69bbcd87e8c
==================================================
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=57926
==================================================
Mark Thomas
==================================================
Mon May 18 13:55:12 2015 +0000
==================================================
RemoteIpValve.java
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=57926
Restore the original X-Forwarded-By and X-Forwarded-For headers after processing along with the other original values.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1680034 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestRemoteIpValve.java
index 41bbf34646..67f737df52 100644
--- a/java/org/apache/catalina/valves/RemoteIpValve.java
+++ b/java/org/apache/catalina/valves/RemoteIpValve.java
@@ -31,6 +31,7 @@ import org.apache.catalina.connector.Request;
 import org.apache.catalina.connector.Response;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
+import org.apache.tomcat.util.http.MimeHeaders;
 
 /**
  * <p>
@@ -566,6 +567,8 @@ public class RemoteIpValve extends ValveBase {
         final String originalScheme = request.getScheme();
         final boolean originalSecure = request.isSecure();
         final int originalServerPort = request.getServerPort();
+        final String originalProxiesHeader = request.getHeader(proxiesHeader);
+        final String originalRemoteIpHeader = request.getHeader(remoteIpHeader);
 
         if (internalProxies !=null &&
                 internalProxies.matcher(originalRemoteAddr).matches()) {
@@ -677,10 +680,23 @@ public class RemoteIpValve extends ValveBase {
 
             request.setSecure(originalSecure);
 
+            MimeHeaders headers = request.getCoyoteRequest().getMimeHeaders();
             // use request.coyoteRequest.scheme instead of request.setScheme() because request.setScheme() is no-op in Tomcat 6.0
             request.getCoyoteRequest().scheme().setString(originalScheme);
 
             request.setServerPort(originalServerPort);
+
+            if (originalProxiesHeader == null || originalProxiesHeader.length() == 0) {
+                headers.removeHeader(proxiesHeader);
+            } else {
+                headers.setValue(proxiesHeader).setString(originalProxiesHeader);
+            }
+
+            if (originalRemoteIpHeader == null || originalRemoteIpHeader.length() == 0) {
+                headers.removeHeader(remoteIpHeader);
+            } else {
+                headers.setValue(remoteIpHeader).setString(originalRemoteIpHeader);
+            }
         }
     }
 

==================================================
