d1298d5c7ca788501d20c592c63d10758f86c75a
==================================================
EntityTag.parseEntityTag(): optimize comparison
==================================================
Sergey Ponomarev
==================================================
Wed Aug 12 17:13:44 2020 +0300
==================================================
DefaultServlet.java
EntityTag.parseEntityTag(): optimize comparison

Instead of creating a HashSet we can make in-place matching.
Note that even if first ETag matched we still checking the whole header for correctness



==================================================
EntityTag.java
index fac8907ff5..86d77d036a 100644
--- a/java/org/apache/catalina/servlets/DefaultServlet.java
+++ b/java/org/apache/catalina/servlets/DefaultServlet.java
@@ -43,7 +43,6 @@ import java.util.Comparator;
 import java.util.Enumeration;
 import java.util.List;
 import java.util.Locale;
-import java.util.Set;
 
 import javax.xml.parsers.DocumentBuilder;
 import javax.xml.parsers.DocumentBuilderFactory;
@@ -2170,21 +2169,24 @@ public class DefaultServlet extends HttpServlet {
         String headerValue = request.getHeader("If-Match");
         if (headerValue != null) {
 
-            boolean conditionSatisfied = false;
+            boolean conditionSatisfied;
 
             if (!headerValue.equals("*")) {
                 String resourceETag = generateETag(resource);
-
-                // RFC 7232 requires strong comparison for If-Match headers
-                Set<String> headerETags = EntityTag.parseEntityTag(new StringReader(headerValue), false);
-                if (headerETags == null) {
-                    if (debug > 10) {
-                        log("DefaultServlet.checkIfMatch:  Invalid header value [" + headerValue + "]");
+                if (resourceETag == null) {
+                    conditionSatisfied = false;
+                } else {
+                    // RFC 7232 requires strong comparison for If-Match headers
+                    Boolean matched = EntityTag.compareEntityTag(new StringReader(headerValue), false, resourceETag);
+                    if (matched == null) {
+                        if (debug > 10) {
+                            log("DefaultServlet.checkIfMatch:  Invalid header value [" + headerValue + "]");
+                        }
+                        response.sendError(HttpServletResponse.SC_BAD_REQUEST);
+                        return false;
                     }
-                    response.sendError(HttpServletResponse.SC_BAD_REQUEST);
-                    return false;
+                    conditionSatisfied = matched.booleanValue();
                 }
-                conditionSatisfied = headerETags.contains(resourceETag);
             } else {
                 conditionSatisfied = true;
             }
@@ -2251,29 +2253,24 @@ public class DefaultServlet extends HttpServlet {
         String headerValue = request.getHeader("If-None-Match");
         if (headerValue != null) {
 
-            boolean conditionSatisfied = false;
+            boolean conditionSatisfied;
 
             String resourceETag = generateETag(resource);
             if (!headerValue.equals("*")) {
-
-                // RFC 7232 requires weak comparison for If-None-Match headers
-                // This is done by removing any weak markers before comparison
-                String comparisonETag;
-                if (resourceETag.startsWith("W/")) {
-                    comparisonETag = resourceETag.substring(2);
+                if (resourceETag == null) {
+                    conditionSatisfied = false;
                 } else {
-                    comparisonETag = resourceETag;
-                }
-
-                Set<String> headerETags = EntityTag.parseEntityTag(new StringReader(headerValue), true);
-                if (headerETags == null) {
-                    if (debug > 10) {
-                        log("DefaultServlet.checkIfNoneMatch:  Invalid header value [" + headerValue + "]");
+                    // RFC 7232 requires weak comparison for If-None-Match headers
+                    Boolean matched = EntityTag.compareEntityTag(new StringReader(headerValue), true, resourceETag);
+                    if (matched == null) {
+                        if (debug > 10) {
+                            log("DefaultServlet.checkIfNoneMatch:  Invalid header value [" + headerValue + "]");
+                        }
+                        response.sendError(HttpServletResponse.SC_BAD_REQUEST);
+                        return false;
                     }
-                    response.sendError(HttpServletResponse.SC_BAD_REQUEST);
-                    return false;
+                    conditionSatisfied = matched.booleanValue();
                 }
-                conditionSatisfied = headerETags.contains(comparisonETag);
             } else {
                 conditionSatisfied = true;
             }

==================================================
