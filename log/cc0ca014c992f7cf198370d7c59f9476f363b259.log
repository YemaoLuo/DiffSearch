cc0ca014c992f7cf198370d7c59f9476f363b259
==================================================
Refactor code that adds an additional header name to the Vary HTTP response header to use a common utility method that addresses several additional edge cases.
==================================================
Mark Thomas
==================================================
Fri Jul 6 16:25:40 2018 +0000
==================================================
CorsFilter.java
Refactor code that adds an additional header name to the Vary HTTP response header to use a common utility method that addresses several additional edge cases.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1835264 13f79535-47bb-0310-9956-ffa450edef68



==================================================
DefaultServlet.java
index 9b7fa1409c..70332efb91 100644
--- a/java/org/apache/catalina/filters/CorsFilter.java
+++ b/java/org/apache/catalina/filters/CorsFilter.java
@@ -39,6 +39,7 @@ import javax.servlet.http.HttpServletResponse;
 
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
+import org.apache.tomcat.util.http.ResponseUtil;
 import org.apache.tomcat.util.res.StringManager;
 
 /**
@@ -290,8 +291,7 @@ public class CorsFilter extends GenericFilter {
         }
 
         // Indicate the response depends on the origin
-        response.addHeader(CorsFilter.REQUEST_HEADER_VARY,
-                CorsFilter.REQUEST_HEADER_ORIGIN);
+        ResponseUtil.addVaryFieldName(response, CorsFilter.REQUEST_HEADER_ORIGIN);
 
         // Forward the request down the filter chain.
         filterChain.doFilter(request, response);
@@ -976,7 +976,10 @@ public class CorsFilter extends GenericFilter {
     /**
      * The Vary header indicates allows disabling proxy caching by indicating
      * the the response depends on the origin.
+     *
+     * @deprecated Unused. Will be removed in Tomcat 10
      */
+    @Deprecated
     public static final String REQUEST_HEADER_VARY = "Vary";
 
     /**

==================================================
CompressionConfig.java
index a5da7abd57..c603b7f0cf 100644
--- a/java/org/apache/catalina/servlets/DefaultServlet.java
+++ b/java/org/apache/catalina/servlets/DefaultServlet.java
@@ -37,7 +37,6 @@ import java.nio.charset.Charset;
 import java.nio.charset.StandardCharsets;
 import java.security.AccessController;
 import java.util.ArrayList;
-import java.util.Collection;
 import java.util.Enumeration;
 import java.util.Iterator;
 import java.util.List;
@@ -75,6 +74,7 @@ import org.apache.catalina.connector.ResponseFacade;
 import org.apache.catalina.util.ServerInfo;
 import org.apache.catalina.util.URLEncoder;
 import org.apache.tomcat.util.buf.B2CConverter;
+import org.apache.tomcat.util.http.ResponseUtil;
 import org.apache.tomcat.util.res.StringManager;
 import org.apache.tomcat.util.security.Escape;
 import org.apache.tomcat.util.security.PrivilegedGetTccl;
@@ -868,18 +868,7 @@ public class DefaultServlet extends HttpServlet {
             List<PrecompressedResource> precompressedResources =
                     getAvailablePrecompressedResources(path);
             if (!precompressedResources.isEmpty()) {
-                Collection<String> varyHeaders = response.getHeaders("Vary");
-                boolean addRequired = true;
-                for (String varyHeader : varyHeaders) {
-                    if ("*".equals(varyHeader) ||
-                            "accept-encoding".equalsIgnoreCase(varyHeader)) {
-                        addRequired = false;
-                        break;
-                    }
-                }
-                if (addRequired) {
-                    response.addHeader("Vary", "accept-encoding");
-                }
+                ResponseUtil.addVaryFieldName(response, "accept-encoding");
                 PrecompressedResource bestResource =
                         getBestPrecompressedResource(request, precompressedResources);
                 if (bestResource != null) {

==================================================
