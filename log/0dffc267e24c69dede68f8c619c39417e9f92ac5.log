0dffc267e24c69dede68f8c619c39417e9f92ac5
==================================================
Add a flag to the SocketWrapper to indicate if the socket is using a secure connection. Initially this is intended for use with the APR connector to better determine what various error codes may mean.
==================================================
Mark Emlyn
==================================================
Wed Oct 16 11:10:58 2013 +0000
==================================================
AprEndpoint.java
Add a flag to the SocketWrapper to indicate if the socket is using a secure connection. Initially this is intended for use with the APR connector to better determine what various error codes may mean.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1532718 13f79535-47bb-0310-9956-ffa450edef68



==================================================
JIoEndpoint.java
index 74f79b8308..5396de0412 100644
--- a/java/org/apache/tomcat/util/net/AprEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AprEndpoint.java
@@ -821,6 +821,7 @@ public class AprEndpoint extends AbstractEndpoint<Long> {
                 AprSocketWrapper wrapper =
                         new AprSocketWrapper(Long.valueOf(socket));
                 wrapper.setKeepAliveLeft(getMaxKeepAliveRequests());
+                wrapper.setSecure(isSSLEnabled());
                 connections.put(Long.valueOf(socket), wrapper);
                 getExecutor().execute(new SocketWithOptionsProcessor(wrapper));
             }

==================================================
NioEndpoint.java
index 49a8e797d0..2446020faa 100644
--- a/java/org/apache/tomcat/util/net/JIoEndpoint.java
+++ b/java/org/apache/tomcat/util/net/JIoEndpoint.java
@@ -531,6 +531,7 @@ public class JIoEndpoint extends AbstractEndpoint<Socket> {
         try {
             SocketWrapper<Socket> wrapper = new SocketWrapper<>(socket);
             wrapper.setKeepAliveLeft(getMaxKeepAliveRequests());
+            wrapper.setSecure(isSSLEnabled());
             // During shutdown, executor may be null - avoid NPE
             if (!running) {
                 return false;

==================================================
SocketWrapper.java
index 6e2f0a06ea..d34069e84a 100644
--- a/java/org/apache/tomcat/util/net/NioEndpoint.java
+++ b/java/org/apache/tomcat/util/net/NioEndpoint.java
@@ -967,6 +967,7 @@ public class NioEndpoint extends AbstractEndpoint<NioChannel> {
             final KeyAttachment ka = key!=null?key:new KeyAttachment(socket);
             ka.reset(this,socket,getSocketProperties().getSoTimeout());
             ka.setKeepAliveLeft(NioEndpoint.this.getMaxKeepAliveRequests());
+            ka.setSecure(isSSLEnabled());
             PollerEvent r = eventCache.pop();
             ka.interestOps(SelectionKey.OP_READ);//this is what OP_REGISTER turns into.
             if ( r==null) r = new PollerEvent(socket,ka,OP_REGISTER);

==================================================
