5f126cb2b227206e907b4e5a578ecf9c097a60e4
==================================================
Classes are final but declare protected fields. Reported by Findbugs.
==================================================
Violeta Georgieva
==================================================
Tue Dec 8 07:57:33 2015 +0000
==================================================
ApplicationDispatcher.java
Classes are final but declare protected fields. Reported by Findbugs.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1718523 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ApplicationFilterConfig.java
index 3e013260d2..7e8a1fb3fb 100644
--- a/java/org/apache/catalina/core/ApplicationDispatcher.java
+++ b/java/org/apache/catalina/core/ApplicationDispatcher.java
@@ -63,9 +63,9 @@ import org.apache.tomcat.util.res.StringManager;
  */
 final class ApplicationDispatcher implements AsyncDispatcher, RequestDispatcher {
 
-    protected static final boolean STRICT_SERVLET_COMPLIANCE;
+    static final boolean STRICT_SERVLET_COMPLIANCE;
 
-    protected static final boolean WRAP_SAME_OBJECT;
+    static final boolean WRAP_SAME_OBJECT;
 
 
     static {

==================================================
StandardHostValve.java
index db48281017..488c5e70f0 100644
--- a/java/org/apache/catalina/core/ApplicationFilterConfig.java
+++ b/java/org/apache/catalina/core/ApplicationFilterConfig.java
@@ -59,7 +59,7 @@ public final class ApplicationFilterConfig implements FilterConfig, Serializable
 
     private static final long serialVersionUID = 1L;
 
-    protected static final StringManager sm =
+    static final StringManager sm =
         StringManager.getManager(Constants.Package);
 
     private static final Log log = LogFactory.getLog(ApplicationFilterConfig.class);

==================================================
StandardServer.java
index d9384df51b..1a69af0b49 100644
--- a/java/org/apache/catalina/core/StandardHostValve.java
+++ b/java/org/apache/catalina/core/StandardHostValve.java
@@ -57,9 +57,9 @@ final class StandardHostValve extends ValveBase {
     private static final ClassLoader MY_CLASSLOADER =
             StandardHostValve.class.getClassLoader();
 
-    protected static final boolean STRICT_SERVLET_COMPLIANCE;
+    static final boolean STRICT_SERVLET_COMPLIANCE;
 
-    protected static final boolean ACCESS_SESSION;
+    static final boolean ACCESS_SESSION;
 
     static {
         STRICT_SERVLET_COMPLIANCE = Globals.STRICT_SERVLET_COMPLIANCE;

==================================================
HTMLManagerServlet.java
index 9b0a8c928f..1e617dd646 100644
--- a/java/org/apache/catalina/core/StandardServer.java
+++ b/java/org/apache/catalina/core/StandardServer.java
@@ -147,7 +147,7 @@ public final class StandardServer extends LifecycleMBeanBase implements Server {
     /**
      * The property change support for this component.
      */
-    protected final PropertyChangeSupport support = new PropertyChangeSupport(this);
+    final PropertyChangeSupport support = new PropertyChangeSupport(this);
 
     private volatile boolean stopAwait = false;
 

==================================================
Mapper.java
index 99eea63ba9..ed3f28e4d5 100644
--- a/java/org/apache/catalina/manager/HTMLManagerServlet.java
+++ b/java/org/apache/catalina/manager/HTMLManagerServlet.java
@@ -78,16 +78,13 @@ public final class HTMLManagerServlet extends ManagerServlet {
 
     private static final long serialVersionUID = 1L;
 
-    protected static final URLEncoder URL_ENCODER;
-    protected static final String APPLICATION_MESSAGE = "message";
-    protected static final String APPLICATION_ERROR = "error";
-
-    protected static final String sessionsListJspPath  =
-            "/WEB-INF/jsp/sessionsList.jsp";
-    protected static final String sessionDetailJspPath =
-            "/WEB-INF/jsp/sessionDetail.jsp";
-    protected static final String connectorCiphersJspPath =
-            "/WEB-INF/jsp/connectorCiphers.jsp";
+    static final URLEncoder URL_ENCODER;
+    static final String APPLICATION_MESSAGE = "message";
+    static final String APPLICATION_ERROR = "error";
+
+    static final String sessionsListJspPath = "/WEB-INF/jsp/sessionsList.jsp";
+    static final String sessionDetailJspPath = "/WEB-INF/jsp/sessionDetail.jsp";
+    static final String connectorCiphersJspPath = "/WEB-INF/jsp/connectorCiphers.jsp";
 
     static {
         URL_ENCODER = new URLEncoder();

==================================================
PersistentManager.java
index 0f078d8861..0d2efa833c 100644
--- a/java/org/apache/catalina/mapper/Mapper.java
+++ b/java/org/apache/catalina/mapper/Mapper.java
@@ -48,7 +48,7 @@ public final class Mapper {
 
     private static final Log log = LogFactory.getLog(Mapper.class);
 
-    protected static final StringManager sm = StringManager.getManager(Mapper.class);
+    static final StringManager sm = StringManager.getManager(Mapper.class);
 
     // ----------------------------------------------------- Instance Variables
 
@@ -56,20 +56,20 @@ public final class Mapper {
     /**
      * Array containing the virtual hosts definitions.
      */
-    protected volatile MappedHost[] hosts = new MappedHost[0];
+    volatile MappedHost[] hosts = new MappedHost[0];
 
 
     /**
      * Default host name.
      */
-    protected String defaultHostName = null;
+    String defaultHostName = null;
 
 
     /**
      * Mapping from Context object to Context version to support
      * RequestDispatcher mappings.
      */
-    protected Map<Context, ContextVersion> contextObjectToContextVersionMap =
+    Map<Context, ContextVersion> contextObjectToContextVersionMap =
             new ConcurrentHashMap<>();
 
 

==================================================
SSIFsize.java
index c314a864cd..47b35d173e 100644
--- a/java/org/apache/catalina/session/PersistentManager.java
+++ b/java/org/apache/catalina/session/PersistentManager.java
@@ -40,7 +40,7 @@ public final class PersistentManager extends PersistentManagerBase {
     /**
      * The descriptive name of this Manager implementation (for logging).
      */
-    protected static final String name = "PersistentManager";
+    static final String name = "PersistentManager";
 
 
     // ------------------------------------------------------------- Properties

==================================================
Bootstrap.java
index a972091f58..5448f21015 100644
--- a/java/org/apache/catalina/ssi/SSIFsize.java
+++ b/java/org/apache/catalina/ssi/SSIFsize.java
@@ -29,8 +29,8 @@ import java.text.DecimalFormat;
  * @author David Becker
  */
 public final class SSIFsize implements SSICommand {
-    protected static final int ONE_KILOBYTE = 1024;
-    protected static final int ONE_MEGABYTE = 1024 * 1024;
+    static final int ONE_KILOBYTE = 1024;
+    static final int ONE_MEGABYTE = 1024 * 1024;
 
 
     /**

==================================================
UserConfig.java
index c2973fac98..8337a8affa 100644
--- a/java/org/apache/catalina/startup/Bootstrap.java
+++ b/java/org/apache/catalina/startup/Bootstrap.java
@@ -133,9 +133,9 @@ public final class Bootstrap {
     private Object catalinaDaemon = null;
 
 
-    protected ClassLoader commonLoader = null;
-    protected ClassLoader catalinaLoader = null;
-    protected ClassLoader sharedLoader = null;
+    ClassLoader commonLoader = null;
+    ClassLoader catalinaLoader = null;
+    ClassLoader sharedLoader = null;
 
 
     // -------------------------------------------------------- Private Methods

==================================================
UniqueId.java
index 8c591e26e4..8de9ed813d 100644
--- a/java/org/apache/catalina/startup/UserConfig.java
+++ b/java/org/apache/catalina/startup/UserConfig.java
@@ -102,12 +102,12 @@ public final class UserConfig
     /**
      * A regular expression defining user who deployment is allowed.
      */
-    protected Pattern allow = null;
+    Pattern allow = null;
 
     /**
      * A regular expression defining user who deployment is denied.
      */
-    protected Pattern deny = null;
+    Pattern deny = null;
 
     // ------------------------------------------------------------- Properties
 

==================================================
ReplicationStream.java
index c34ddf8a34..fe77ec2710 100644
--- a/java/org/apache/catalina/tribes/UniqueId.java
+++ b/java/org/apache/catalina/tribes/UniqueId.java
@@ -30,7 +30,7 @@ import org.apache.catalina.tribes.util.Arrays;
 public final class UniqueId implements Serializable{
     private static final long serialVersionUID = 1L;
 
-    protected final byte[] id;
+    final byte[] id;
 
     public UniqueId() {
         this(null);

==================================================
JDBCAccessLogValve.java
index e1261c1d86..acf80ff7e2 100644
--- a/java/org/apache/catalina/tribes/io/ReplicationStream.java
+++ b/java/org/apache/catalina/tribes/io/ReplicationStream.java
@@ -37,7 +37,7 @@ import org.apache.catalina.tribes.util.StringManager;
  */
 public final class ReplicationStream extends ObjectInputStream {
 
-    protected static final StringManager sm = StringManager.getManager(ReplicationStream.class);
+    static final StringManager sm = StringManager.getManager(ReplicationStream.class);
 
     /**
      * The class loader we will use to resolve classes.

==================================================
RemoteAddrValve.java
index f6042ccf37..4e53d6e0c0 100644
--- a/java/org/apache/catalina/valves/JDBCAccessLogValve.java
+++ b/java/org/apache/catalina/valves/JDBCAccessLogValve.java
@@ -165,23 +165,23 @@ public final class JDBCAccessLogValve extends ValveBase implements AccessLog {
     * Use long contentLength as you have more 4 GB output.
     * @since 6.0.15
     */
-    protected boolean useLongContentLength = false ;
+    boolean useLongContentLength = false ;
 
    /**
      * The connection username to use when trying to connect to the database.
      */
-    protected String connectionName = null;
+    String connectionName = null;
 
 
     /**
      * The connection URL to use when trying to connect to the database.
      */
-    protected String connectionPassword = null;
+    String connectionPassword = null;
 
    /**
      * Instance of the JDBC Driver class we use as a connection factory.
      */
-    protected Driver driver = null;
+    Driver driver = null;
 
 
     private String driverName;
@@ -210,7 +210,7 @@ public final class JDBCAccessLogValve extends ValveBase implements AccessLog {
     /**
      * @see #setRequestAttributesEnabled(boolean)
      */
-    protected boolean requestAttributesEnabled = true;
+    boolean requestAttributesEnabled = true;
 
 
     // ------------------------------------------------------------- Properties

==================================================
RemoteHostValve.java
index a919bdb38b..b33d5305d9 100644
--- a/java/org/apache/catalina/valves/RemoteAddrValve.java
+++ b/java/org/apache/catalina/valves/RemoteAddrValve.java
@@ -41,7 +41,7 @@ public final class RemoteAddrValve extends RequestFilterValve {
      * compared in the filtering method. The port will be appended
      * using a ";" as a separator.
      */
-    protected volatile boolean addConnectorPort = false;
+    volatile boolean addConnectorPort = false;
 
     // ------------------------------------------------------------- Properties
 

==================================================
Request.java
index 5bb1d5b9c6..e98c95fd27 100644
--- a/java/org/apache/catalina/valves/RemoteHostValve.java
+++ b/java/org/apache/catalina/valves/RemoteHostValve.java
@@ -41,7 +41,7 @@ public final class RemoteHostValve extends RequestFilterValve {
      * compared in the filtering method. The port will be appended
      * using a ";" as a separator.
      */
-    protected volatile boolean addConnectorPort = false;
+    volatile boolean addConnectorPort = false;
 
     // ------------------------------------------------------------- Properties
 

==================================================
Response.java
index 979a3dc4d2..eed576761f 100644
--- a/java/org/apache/coyote/Request.java
+++ b/java/org/apache/coyote/Request.java
@@ -152,7 +152,7 @@ public final class Request {
 
     private boolean sendfile = true;
 
-    protected volatile ReadListener listener;
+    volatile ReadListener listener;
 
     public ReadListener getReadListener() {
         return listener;

==================================================
Hpack.java
index 61c333c0c2..b1cac698e7 100644
--- a/java/org/apache/coyote/Response.java
+++ b/java/org/apache/coyote/Response.java
@@ -57,52 +57,52 @@ public final class Response {
     /**
      * Status code.
      */
-    protected int status = 200;
+    int status = 200;
 
 
     /**
      * Status message.
      */
-    protected String message = null;
+    String message = null;
 
 
     /**
      * Response headers.
      */
-    protected final MimeHeaders headers = new MimeHeaders();
+    final MimeHeaders headers = new MimeHeaders();
 
 
     /**
      * Associated output buffer.
      */
-    protected OutputBuffer outputBuffer;
+    OutputBuffer outputBuffer;
 
 
     /**
      * Notes.
      */
-    protected final Object notes[] = new Object[Constants.MAX_NOTES];
+    final Object notes[] = new Object[Constants.MAX_NOTES];
 
 
     /**
      * Committed flag.
      */
-    protected volatile boolean commited = false;
+    volatile boolean commited = false;
 
 
     /**
      * Action hook.
      */
-    protected volatile ActionHook hook;
+    volatile ActionHook hook;
 
 
     /**
      * HTTP specific fields.
      */
-    protected String contentType = null;
-    protected String contentLanguage = null;
-    protected String characterEncoding = Constants.DEFAULT_CHARACTER_ENCODING;
-    protected long contentLength = -1;
+    String contentType = null;
+    String contentLanguage = null;
+    String characterEncoding = Constants.DEFAULT_CHARACTER_ENCODING;
+    long contentLength = -1;
     private Locale locale = DEFAULT_LOCALE;
 
     // General informations
@@ -112,14 +112,14 @@ public final class Response {
     /**
      * Holds request error exception.
      */
-    protected Exception errorException = null;
+    Exception errorException = null;
 
     /**
      * Has the charset been explicitly set.
      */
-    protected boolean charsetSet = false;
+    boolean charsetSet = false;
 
-    protected Request req;
+    Request req;
 
     // ------------------------------------------------------------- Properties
 
@@ -570,7 +570,7 @@ public final class Response {
      * easily reachable from the CoyoteOutputStream and the Processor which both
      * need access to state.
      */
-    protected volatile WriteListener listener;
+    volatile WriteListener listener;
     private boolean fireListener = false;
     private boolean registeredForWrite = false;
     private final Object nonBlockingStateLock = new Object();

==================================================
MessageFactory.java
index ca4ce2896f..a7dd378153 100644
--- a/java/org/apache/coyote/http2/Hpack.java
+++ b/java/org/apache/coyote/http2/Hpack.java
@@ -22,7 +22,7 @@ import org.apache.tomcat.util.res.StringManager;
 
 final class Hpack {
 
-    protected static final StringManager sm = StringManager.getManager(Hpack.class);
+    static final StringManager sm = StringManager.getManager(Hpack.class);
 
     private static final byte LOWER_DIFF = 'a' - 'A';
     static final int DEFAULT_TABLE_SIZE = 4096;

==================================================
ClassLoaderLogManager.java
index 6989d2e626..bbdaff35dc 100644
--- a/java/org/apache/el/util/MessageFactory.java
+++ b/java/org/apache/el/util/MessageFactory.java
@@ -24,7 +24,7 @@ import java.util.ResourceBundle;
  */
 public final class MessageFactory {
 
-    protected static final ResourceBundle bundle =
+    static final ResourceBundle bundle =
             ResourceBundle.getBundle("org.apache.el.Messages");
 
     public MessageFactory() {

==================================================
WebRuleSet.java
index eca3fef26d..a91910986a 100644
--- a/java/org/apache/juli/ClassLoaderLogManager.java
+++ b/java/org/apache/juli/ClassLoaderLogManager.java
@@ -663,9 +663,9 @@ public class ClassLoaderLogManager extends LogManager {
     protected static final class LogNode {
         Logger logger;
 
-        protected final Map<String, LogNode> children = new HashMap<>();
+        final Map<String, LogNode> children = new HashMap<>();
 
-        protected final LogNode parent;
+        final LogNode parent;
 
         LogNode(final LogNode parent, final Logger logger) {
             this.parent = parent;

==================================================
OpenSSLEngine.java
index e864ac7aba..a21db87417 100644
--- a/java/org/apache/tomcat/util/descriptor/web/WebRuleSet.java
+++ b/java/org/apache/tomcat/util/descriptor/web/WebRuleSet.java
@@ -703,7 +703,7 @@ public class WebRuleSet extends RuleSetBase {
  * only 1 time within the web.xml
  */
 final class SetLoginConfig extends Rule {
-    protected boolean isLoginConfigSet = false;
+    boolean isLoginConfigSet = false;
     public SetLoginConfig() {
         // NO-OP
     }
@@ -726,7 +726,7 @@ final class SetLoginConfig extends Rule {
  * only 1 time within the web.xml
  */
 final class SetJspConfig extends Rule {
-    protected boolean isJspConfigSet = false;
+    boolean isJspConfigSet = false;
     public SetJspConfig() {
         // NO-OP
     }
@@ -749,7 +749,7 @@ final class SetJspConfig extends Rule {
  * only 1 time within the web.xml
  */
 final class SetSessionConfig extends Rule {
-    protected boolean isSessionConfigSet = false;
+    boolean isSessionConfigSet = false;
     public SetSessionConfig() {
         // NO-OP
     }
@@ -946,7 +946,7 @@ final class CallParamMultiRule extends CallParamRule {
  */
 final class CallMethodMultiRule extends CallMethodRule {
 
-    protected final int multiParamIndex;
+    final int multiParamIndex;
 
     public CallMethodMultiRule(String methodName, int paramCount, int multiParamIndex) {
         super(methodName, paramCount);
@@ -1103,7 +1103,7 @@ final class VersionRule extends Rule {
  */
 final class NameRule extends Rule {
 
-    protected boolean isNameSet = false;
+    boolean isNameSet = false;
 
     public NameRule() {
         // NO-OP
@@ -1134,7 +1134,7 @@ final class NameRule extends Rule {
  */
 final class AbsoluteOrderingRule extends Rule {
 
-    protected boolean isAbsoluteOrderingSet = false;
+    boolean isAbsoluteOrderingSet = false;
     private final boolean fragment;
 
     public AbsoluteOrderingRule(boolean fragment) {
@@ -1168,7 +1168,7 @@ final class AbsoluteOrderingRule extends Rule {
  */
 final class RelativeOrderingRule extends Rule {
 
-    protected boolean isRelativeOrderingSet = false;
+    boolean isRelativeOrderingSet = false;
     private final boolean fragment;
 
     public RelativeOrderingRule(boolean fragment) {

==================================================
