4eee220a29ad9cc41b5e92a806a18400e57d57c7
==================================================
Reduce boilerplate code.
==================================================
Mark Emlyn
==================================================
Mon Nov 3 11:42:22 2014 +0000
==================================================
TestStandardContext.java
Reduce boilerplate code.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1636325 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestStandardWrapper.java
index 88dbff3ae3..a6eb5e9095 100644
--- a/test/org/apache/catalina/core/TestStandardContext.java
+++ b/test/org/apache/catalina/core/TestStandardContext.java
@@ -292,50 +292,45 @@ public class TestStandardContext extends TomcatBaseTest {
         // called only once, even if is selected by several mapping
         // url-patterns or by both a url-pattern and a servlet-name.
 
-        // Set up a container
-        Tomcat tomcat = getTomcatInstance();
-
-        File root = new File("test/webapp");
-        tomcat.addWebapp("", root.getAbsolutePath());
+        getTomcatInstanceTestWebapp(false, true);
 
-        tomcat.start();
         ByteChunk result = new ByteChunk();
 
         // Check filter and servlet aren't called
         int rc = getUrl("http://localhost:" + getPort() +
-                "/bug49922/foo", result, null);
+                "/test/bug49922/foo", result, null);
         assertEquals(HttpServletResponse.SC_NOT_FOUND, rc);
         assertTrue(result.getLength() > 0);
 
         // Check extension mapping works
-        result = getUrl("http://localhost:" + getPort() + "/foo.do");
+        result = getUrl("http://localhost:" + getPort() + "/test/foo.do");
         assertEquals("FilterServlet", result.toString());
 
         // Check path mapping works
-        result = getUrl("http://localhost:" + getPort() + "/bug49922/servlet");
+        result = getUrl("http://localhost:" + getPort() + "/test/bug49922/servlet");
         assertEquals("FilterServlet", result.toString());
 
         // Check servlet name mapping works
-        result = getUrl("http://localhost:" + getPort() + "/foo.od");
+        result = getUrl("http://localhost:" + getPort() + "/test/foo.od");
         assertEquals("FilterServlet", result.toString());
 
         // Check filter is only called once
         result = getUrl("http://localhost:" + getPort() +
-                "/bug49922/servlet/foo.do");
+                "/test/bug49922/servlet/foo.do");
         assertEquals("FilterServlet", result.toString());
         result = getUrl("http://localhost:" + getPort() +
-                "/bug49922/servlet/foo.od");
+                "/test/bug49922/servlet/foo.od");
         assertEquals("FilterServlet", result.toString());
 
         // Check dispatcher mapping
         result = getUrl("http://localhost:" + getPort() +
-                "/bug49922/target");
+                "/test/bug49922/target");
         assertEquals("Target", result.toString());
         result = getUrl("http://localhost:" + getPort() +
-                "/bug49922/forward");
+                "/test/bug49922/forward");
         assertEquals("FilterTarget", result.toString());
         result = getUrl("http://localhost:" + getPort() +
-                "/bug49922/include");
+                "/test/bug49922/include");
         assertEquals("IncludeFilterTarget", result.toString());
     }
 
@@ -934,16 +929,9 @@ public class TestStandardContext extends TomcatBaseTest {
 
     @Test
     public void testBug56085() throws Exception {
-        // Set up a container
-        Tomcat tomcat = getTomcatInstance();
-
-        File docBase = new File("test/webapp");
-        Context ctx = tomcat.addContext("", docBase.getAbsolutePath());
-
-        // Start the context
-        tomcat.start();
+        Tomcat tomcat = getTomcatInstanceTestWebapp(false, true);
 
-        String realPath = ctx.getRealPath("\\");
+        String realPath = ((Context) tomcat.getHost().findChildren()[0]).getRealPath("\\");
 
         Assert.assertNull(realPath);
     }

==================================================
