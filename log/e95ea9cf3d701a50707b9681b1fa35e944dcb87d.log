e95ea9cf3d701a50707b9681b1fa35e944dcb87d
==================================================
Remove override annotations to compile with JDK 1.5
==================================================
Filip Hanik
==================================================
Mon Jan 10 16:33:52 2011 +0000
==================================================
GenericNamingResourcesFactory.java
Remove override annotations to compile with JDK 1.5


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1057266 13f79535-47bb-0310-9956-ffa450edef68



==================================================
DataSourceProxy.java
index 7c6e49c8b4..5fd7007c55 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/naming/GenericNamingResourcesFactory.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/naming/GenericNamingResourcesFactory.java
@@ -47,7 +47,7 @@ import org.apache.juli.logging.LogFactory;
  */
 public class GenericNamingResourcesFactory implements ObjectFactory {
     private static final Log log = LogFactory.getLog(GenericNamingResourcesFactory.class);
-    @Override
+    
     public Object getObjectInstance(Object obj, Name name, Context nameCtx, Hashtable<?, ?> environment) throws Exception {
         if ((obj == null) || !(obj instanceof Reference)) {
             return null;

==================================================
JdbcInterceptor.java
index 27c4d27f44..e8399913eb 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/DataSourceProxy.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/DataSourceProxy.java
@@ -192,7 +192,7 @@ public class DataSourceProxy implements PoolConfiguration {
         else return p.getSize();
     }
 
-    @Override
+    
     public String toString() {
         return super.toString()+"{"+getPoolProperties()+"}";
     }
@@ -205,7 +205,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public String getPoolName() {
         return pool.getName();
     }
@@ -218,7 +218,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setDriverClassName(String driverClassName) {
         this.poolProperties.setDriverClassName(driverClassName);
     }
@@ -226,7 +226,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setInitialSize(int initialSize) {
         this.poolProperties.setInitialSize(initialSize);
     }
@@ -234,7 +234,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setInitSQL(String initSQL) {
         this.poolProperties.setInitSQL(initSQL);
     }
@@ -242,7 +242,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setLogAbandoned(boolean logAbandoned) {
         this.poolProperties.setLogAbandoned(logAbandoned);
     }
@@ -250,7 +250,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setMaxActive(int maxActive) {
         this.poolProperties.setMaxActive(maxActive);
     }
@@ -258,7 +258,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setMaxIdle(int maxIdle) {
         this.poolProperties.setMaxIdle(maxIdle);
     }
@@ -266,7 +266,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setMaxWait(int maxWait) {
         this.poolProperties.setMaxWait(maxWait);
     }
@@ -274,7 +274,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setMinEvictableIdleTimeMillis(int minEvictableIdleTimeMillis) {
         this.poolProperties.setMinEvictableIdleTimeMillis(minEvictableIdleTimeMillis);
     }
@@ -282,7 +282,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setMinIdle(int minIdle) {
         this.poolProperties.setMinIdle(minIdle);
     }
@@ -290,7 +290,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setNumTestsPerEvictionRun(int numTestsPerEvictionRun) {
         this.poolProperties.setNumTestsPerEvictionRun(numTestsPerEvictionRun);
     }
@@ -298,7 +298,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setPassword(String password) {
         this.poolProperties.setPassword(password);
         this.poolProperties.getDbProperties().setProperty("password",this.poolProperties.getPassword());
@@ -307,7 +307,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setRemoveAbandoned(boolean removeAbandoned) {
         this.poolProperties.setRemoveAbandoned(removeAbandoned);
     }
@@ -315,7 +315,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setRemoveAbandonedTimeout(int removeAbandonedTimeout) {
         this.poolProperties.setRemoveAbandonedTimeout(removeAbandonedTimeout);
     }
@@ -323,7 +323,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setTestOnBorrow(boolean testOnBorrow) {
         this.poolProperties.setTestOnBorrow(testOnBorrow);
     }
@@ -331,7 +331,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setTestOnConnect(boolean testOnConnect) {
         this.poolProperties.setTestOnConnect(testOnConnect);
     }
@@ -339,7 +339,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setTestOnReturn(boolean testOnReturn) {
         this.poolProperties.setTestOnReturn(testOnReturn);
     }
@@ -347,7 +347,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setTestWhileIdle(boolean testWhileIdle) {
         this.poolProperties.setTestWhileIdle(testWhileIdle);
     }
@@ -355,7 +355,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setTimeBetweenEvictionRunsMillis(int timeBetweenEvictionRunsMillis) {
         this.poolProperties.setTimeBetweenEvictionRunsMillis(timeBetweenEvictionRunsMillis);
     }
@@ -363,7 +363,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setUrl(String url) {
         this.poolProperties.setUrl(url);
     }
@@ -371,7 +371,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setUsername(String username) {
         this.poolProperties.setUsername(username);
         this.poolProperties.getDbProperties().setProperty("user",getPoolProperties().getUsername());
@@ -380,7 +380,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setValidationInterval(long validationInterval) {
         this.poolProperties.setValidationInterval(validationInterval);
     }
@@ -388,7 +388,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setValidationQuery(String validationQuery) {
         this.poolProperties.setValidationQuery(validationQuery);
     }
@@ -396,7 +396,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /**
      * {@inheritDoc}
      */
-    @Override
+    
     public void setValidatorClassName(String className) {
         this.poolProperties.setValidatorClassName(className);
     }
@@ -404,7 +404,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setJdbcInterceptors(String interceptors) {
         this.getPoolProperties().setJdbcInterceptors(interceptors);
     }
@@ -412,7 +412,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setJmxEnabled(boolean enabled) {
         this.getPoolProperties().setJmxEnabled(enabled);
     }
@@ -420,7 +420,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setFairQueue(boolean fairQueue) {
         this.getPoolProperties().setFairQueue(fairQueue);
     }
@@ -428,7 +428,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setUseLock(boolean useLock) {
         this.getPoolProperties().setUseLock(useLock);
     }
@@ -436,7 +436,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setDefaultCatalog(String catalog) {
         this.getPoolProperties().setDefaultCatalog(catalog);
     }
@@ -444,7 +444,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setDefaultAutoCommit(Boolean autocommit) {
         this.getPoolProperties().setDefaultAutoCommit(autocommit);
     }
@@ -452,7 +452,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setDefaultTransactionIsolation(int defaultTransactionIsolation) {
         this.getPoolProperties().setDefaultTransactionIsolation(defaultTransactionIsolation);
     }
@@ -460,7 +460,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setConnectionProperties(String properties) {
         try {
             java.util.Properties prop = DataSourceFactory
@@ -481,7 +481,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setUseEquals(boolean useEquals) {
         this.getPoolProperties().setUseEquals(useEquals);
     }
@@ -531,7 +531,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /**
      * {@inheritDoc}
      */
-    @Override
+    
     public int getSuspectTimeout() {
         return getPoolProperties().getSuspectTimeout(); 
     }
@@ -539,7 +539,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /**
      * {@inheritDoc}
      */
-    @Override
+    
     public void setSuspectTimeout(int seconds) {
         getPoolProperties().setSuspectTimeout(seconds);
     }
@@ -647,7 +647,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public String getConnectionProperties() {
         return getPoolProperties().getConnectionProperties();
     }
@@ -655,7 +655,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public Properties getDbProperties() {
         return getPoolProperties().getDbProperties();
     }
@@ -663,7 +663,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public String getDefaultCatalog() {
         return getPoolProperties().getDefaultCatalog();
     }
@@ -671,7 +671,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public int getDefaultTransactionIsolation() {
         return getPoolProperties().getDefaultTransactionIsolation();
     }
@@ -679,7 +679,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public String getDriverClassName() {
         return getPoolProperties().getDriverClassName();
     }
@@ -688,7 +688,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public int getInitialSize() {
         return getPoolProperties().getInitialSize();
     }
@@ -696,7 +696,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public String getInitSQL() {
         return getPoolProperties().getInitSQL();
     }
@@ -704,7 +704,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public String getJdbcInterceptors() {
         return getPoolProperties().getJdbcInterceptors();
     }
@@ -712,7 +712,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public int getMaxActive() {
         return getPoolProperties().getMaxActive();
     }
@@ -720,7 +720,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public int getMaxIdle() {
         return getPoolProperties().getMaxIdle();
     }
@@ -728,7 +728,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public int getMaxWait() {
         return getPoolProperties().getMaxWait();
     }
@@ -736,7 +736,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public int getMinEvictableIdleTimeMillis() {
         return getPoolProperties().getMinEvictableIdleTimeMillis();
     }
@@ -744,7 +744,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public int getMinIdle() {
         return getPoolProperties().getMinIdle();
     }
@@ -752,7 +752,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public long getMaxAge() {
         return getPoolProperties().getMaxAge();
     }    
@@ -760,7 +760,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public String getName() {
         return getPoolProperties().getName();
     }
@@ -768,7 +768,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public int getNumTestsPerEvictionRun() {
         return getPoolProperties().getNumTestsPerEvictionRun();
     }
@@ -783,7 +783,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public int getRemoveAbandonedTimeout() {
         return getPoolProperties().getRemoveAbandonedTimeout();
     }
@@ -792,7 +792,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public int getTimeBetweenEvictionRunsMillis() {
         return getPoolProperties().getTimeBetweenEvictionRunsMillis();
     }
@@ -800,7 +800,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public String getUrl() {
         return getPoolProperties().getUrl();
     }
@@ -808,7 +808,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public String getUsername() {
         return getPoolProperties().getUsername();
     }
@@ -816,7 +816,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public long getValidationInterval() {
         return getPoolProperties().getValidationInterval();
     }
@@ -824,7 +824,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public String getValidationQuery() {
         return getPoolProperties().getValidationQuery();
     }
@@ -832,7 +832,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /**
      * {@inheritDoc}
      */
-    @Override
+    
     public String getValidatorClassName() {
         return getPoolProperties().getValidatorClassName();
     }
@@ -840,7 +840,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /**
      * {@inheritDoc}
      */
-    @Override
+    
     public Validator getValidator() {
         return getPoolProperties().getValidator();
     }
@@ -848,7 +848,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public boolean isAccessToUnderlyingConnectionAllowed() {
         return getPoolProperties().isAccessToUnderlyingConnectionAllowed();
     }
@@ -856,7 +856,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public Boolean isDefaultAutoCommit() {
         return getPoolProperties().isDefaultAutoCommit();
     }
@@ -864,7 +864,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public Boolean isDefaultReadOnly() {
         return getPoolProperties().isDefaultReadOnly();
     }
@@ -872,7 +872,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public boolean isLogAbandoned() {
         return getPoolProperties().isLogAbandoned();
     }
@@ -880,7 +880,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public boolean isPoolSweeperEnabled() {
         return getPoolProperties().isPoolSweeperEnabled();
     }
@@ -888,7 +888,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public boolean isRemoveAbandoned() {
         return getPoolProperties().isRemoveAbandoned();
     }
@@ -896,7 +896,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public int getAbandonWhenPercentageFull() {
         return getPoolProperties().getAbandonWhenPercentageFull();
     }
@@ -904,7 +904,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public boolean isTestOnBorrow() {
         return getPoolProperties().isTestOnBorrow();
     }
@@ -912,7 +912,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public boolean isTestOnConnect() {
         return getPoolProperties().isTestOnConnect();
     }
@@ -920,7 +920,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public boolean isTestOnReturn() {
         return getPoolProperties().isTestOnReturn();
     }
@@ -928,7 +928,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public boolean isTestWhileIdle() {
         return getPoolProperties().isTestWhileIdle();
     }
@@ -937,7 +937,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public Boolean getDefaultAutoCommit() {
         return getPoolProperties().getDefaultAutoCommit();
     }
@@ -945,7 +945,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public Boolean getDefaultReadOnly() {
         return getPoolProperties().getDefaultReadOnly();
     }
@@ -953,7 +953,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public InterceptorDefinition[] getJdbcInterceptorsAsArray() {
         return getPoolProperties().getJdbcInterceptorsAsArray();
     }
@@ -961,7 +961,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public boolean getUseLock() {
         return getPoolProperties().getUseLock();
     }
@@ -969,7 +969,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public boolean isFairQueue() {
         return getPoolProperties().isFairQueue();
     }
@@ -977,7 +977,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public boolean isJmxEnabled() {
         return getPoolProperties().isJmxEnabled();
     }
@@ -985,7 +985,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public boolean isUseEquals() {
         return getPoolProperties().isUseEquals();
     }
@@ -993,7 +993,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setAbandonWhenPercentageFull(int percentage) {
         getPoolProperties().setAbandonWhenPercentageFull(percentage);
     }
@@ -1001,7 +1001,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setAccessToUnderlyingConnectionAllowed(boolean accessToUnderlyingConnectionAllowed) {
         getPoolProperties().setAccessToUnderlyingConnectionAllowed(accessToUnderlyingConnectionAllowed);
     }
@@ -1009,7 +1009,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setDbProperties(Properties dbProperties) {
         getPoolProperties().setDbProperties(dbProperties);
     }
@@ -1017,7 +1017,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setDefaultReadOnly(Boolean defaultReadOnly) {
         getPoolProperties().setDefaultReadOnly(defaultReadOnly);
     }
@@ -1025,7 +1025,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setMaxAge(long maxAge) {
         getPoolProperties().setMaxAge(maxAge);
     }
@@ -1033,7 +1033,7 @@ public class DataSourceProxy implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setName(String name) {
         getPoolProperties().setName(name);
     }

==================================================
PoolProperties.java
index a87a463682..8d8096c5e6 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/JdbcInterceptor.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/JdbcInterceptor.java
@@ -89,7 +89,7 @@ public abstract class JdbcInterceptor implements InvocationHandler {
      * Gets invoked each time an operation on {@link java.sql.Connection} is invoked.
      * {@inheritDoc}
      */
-    @Override
+    
     public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
         if (getNext()!=null) return getNext().invoke(this,method,args);
         else throw new NullPointerException();

==================================================
SlowQueryReport.java
index 2caf50bba9..70b7125d31 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/PoolProperties.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/PoolProperties.java
@@ -86,7 +86,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setAbandonWhenPercentageFull(int percentage) {
         if (percentage<0) abandonWhenPercentageFull = 0;
         else if (percentage>100) abandonWhenPercentageFull = 100;
@@ -96,7 +96,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public int getAbandonWhenPercentageFull() {
         return abandonWhenPercentageFull;
     }
@@ -104,7 +104,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public boolean isFairQueue() {
         return fairQueue;
     }
@@ -112,7 +112,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setFairQueue(boolean fairQueue) {
         this.fairQueue = fairQueue;
     }
@@ -120,7 +120,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public boolean isAccessToUnderlyingConnectionAllowed() {
         return accessToUnderlyingConnectionAllowed;
     }
@@ -128,7 +128,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public String getConnectionProperties() {
         return connectionProperties;
     }
@@ -136,7 +136,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public Properties getDbProperties() {
         return dbProperties;
     }
@@ -144,7 +144,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public Boolean isDefaultAutoCommit() {
         return defaultAutoCommit;
     }
@@ -152,7 +152,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public String getDefaultCatalog() {
         return defaultCatalog;
     }
@@ -160,7 +160,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public Boolean isDefaultReadOnly() {
         return defaultReadOnly;
     }
@@ -168,7 +168,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public int getDefaultTransactionIsolation() {
         return defaultTransactionIsolation;
     }
@@ -176,7 +176,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public String getDriverClassName() {
         return driverClassName;
     }
@@ -184,7 +184,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public int getInitialSize() {
         return initialSize;
     }
@@ -192,7 +192,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public boolean isLogAbandoned() {
         return logAbandoned;
     }
@@ -200,7 +200,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public int getMaxActive() {
         return maxActive;
     }
@@ -208,7 +208,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public int getMaxIdle() {
         return maxIdle;
     }
@@ -216,7 +216,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public int getMaxWait() {
         return maxWait;
     }
@@ -224,7 +224,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public int getMinEvictableIdleTimeMillis() {
         return minEvictableIdleTimeMillis;
     }
@@ -232,7 +232,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public int getMinIdle() {
         return minIdle;
     }
@@ -240,7 +240,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public String getName() {
         return name;
     }
@@ -248,7 +248,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public int getNumTestsPerEvictionRun() {
         return numTestsPerEvictionRun;
     }
@@ -256,7 +256,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public String getPassword() {
         return password;
     }
@@ -264,7 +264,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public String getPoolName() {
         return getName();
     }
@@ -272,7 +272,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public boolean isRemoveAbandoned() {
         return removeAbandoned;
     }
@@ -280,7 +280,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public int getRemoveAbandonedTimeout() {
         return removeAbandonedTimeout;
     }
@@ -288,7 +288,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public boolean isTestOnBorrow() {
         return testOnBorrow;
     }
@@ -296,7 +296,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public boolean isTestOnReturn() {
         return testOnReturn;
     }
@@ -304,7 +304,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public boolean isTestWhileIdle() {
         return testWhileIdle;
     }
@@ -312,7 +312,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public int getTimeBetweenEvictionRunsMillis() {
         return timeBetweenEvictionRunsMillis;
     }
@@ -320,7 +320,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public String getUrl() {
         return url;
     }
@@ -328,7 +328,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public String getUsername() {
         return username;
     }
@@ -336,7 +336,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public String getValidationQuery() {
         return validationQuery;
     }
@@ -344,7 +344,7 @@ public class PoolProperties implements PoolConfiguration {
     /**
      * {@inheritDoc}
      */
-    @Override
+    
     public String getValidatorClassName() {
         return validatorClassName;
     }
@@ -352,7 +352,7 @@ public class PoolProperties implements PoolConfiguration {
     /**
      * {@inheritDoc}
      */
-    @Override
+    
     public Validator getValidator() {
         return validator;
     }
@@ -360,7 +360,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public long getValidationInterval() {
         return validationInterval;
     }
@@ -368,7 +368,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public String getInitSQL() {
         return initSQL;
     }
@@ -376,7 +376,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public boolean isTestOnConnect() {
         return testOnConnect;
     }
@@ -384,7 +384,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public String getJdbcInterceptors() {
         return jdbcInterceptors;
     }
@@ -392,7 +392,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public InterceptorDefinition[] getJdbcInterceptorsAsArray() {
         if (interceptors == null) {
             if (jdbcInterceptors==null) {
@@ -427,7 +427,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setAccessToUnderlyingConnectionAllowed(boolean accessToUnderlyingConnectionAllowed) {
         // NOOP
     }
@@ -435,7 +435,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setConnectionProperties(String connectionProperties) {
         this.connectionProperties = connectionProperties;
         getProperties(connectionProperties, getDbProperties());
@@ -444,7 +444,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setDbProperties(Properties dbProperties) {
         this.dbProperties = dbProperties;
     }
@@ -452,7 +452,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setDefaultAutoCommit(Boolean defaultAutoCommit) {
         this.defaultAutoCommit = defaultAutoCommit;
     }
@@ -460,7 +460,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setDefaultCatalog(String defaultCatalog) {
         this.defaultCatalog = defaultCatalog;
     }
@@ -468,7 +468,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setDefaultReadOnly(Boolean defaultReadOnly) {
         this.defaultReadOnly = defaultReadOnly;
     }
@@ -476,7 +476,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setDefaultTransactionIsolation(int defaultTransactionIsolation) {
         this.defaultTransactionIsolation = defaultTransactionIsolation;
     }
@@ -484,7 +484,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setDriverClassName(String driverClassName) {
         this.driverClassName = driverClassName;
     }
@@ -492,7 +492,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setInitialSize(int initialSize) {
         this.initialSize = initialSize;
     }
@@ -500,7 +500,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setLogAbandoned(boolean logAbandoned) {
         this.logAbandoned = logAbandoned;
     }
@@ -508,7 +508,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setMaxActive(int maxActive) {
         this.maxActive = maxActive;
     }
@@ -516,7 +516,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setMaxIdle(int maxIdle) {
         this.maxIdle = maxIdle;
     }
@@ -524,7 +524,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setMaxWait(int maxWait) {
         this.maxWait = maxWait;
     }
@@ -532,7 +532,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setMinEvictableIdleTimeMillis(int minEvictableIdleTimeMillis) {
         this.minEvictableIdleTimeMillis = minEvictableIdleTimeMillis;
     }
@@ -540,7 +540,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setMinIdle(int minIdle) {
         this.minIdle = minIdle;
     }
@@ -548,7 +548,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setName(String name) {
         this.name = name;
     }
@@ -556,7 +556,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setNumTestsPerEvictionRun(int numTestsPerEvictionRun) {
         this.numTestsPerEvictionRun = numTestsPerEvictionRun;
     }
@@ -564,7 +564,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setPassword(String password) {
         this.password = password;
     }
@@ -572,7 +572,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setRemoveAbandoned(boolean removeAbandoned) {
         this.removeAbandoned = removeAbandoned;
     }
@@ -580,7 +580,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setRemoveAbandonedTimeout(int removeAbandonedTimeout) {
         this.removeAbandonedTimeout = removeAbandonedTimeout;
     }
@@ -588,7 +588,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setTestOnBorrow(boolean testOnBorrow) {
         this.testOnBorrow = testOnBorrow;
     }
@@ -596,7 +596,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setTestWhileIdle(boolean testWhileIdle) {
         this.testWhileIdle = testWhileIdle;
     }
@@ -604,7 +604,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setTestOnReturn(boolean testOnReturn) {
         this.testOnReturn = testOnReturn;
     }
@@ -612,7 +612,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setTimeBetweenEvictionRunsMillis(int
                                                  timeBetweenEvictionRunsMillis) {
         this.timeBetweenEvictionRunsMillis = timeBetweenEvictionRunsMillis;
@@ -621,7 +621,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setUrl(String url) {
         this.url = url;
     }
@@ -629,7 +629,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setUsername(String username) {
         this.username = username;
     }
@@ -637,7 +637,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setValidationInterval(long validationInterval) {
         this.validationInterval = validationInterval;
     }
@@ -645,7 +645,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setValidationQuery(String validationQuery) {
         this.validationQuery = validationQuery;
     }
@@ -653,7 +653,7 @@ public class PoolProperties implements PoolConfiguration {
     /**
      * {@inheritDoc}
      */
-    @Override
+    
     public void setValidatorClassName(String className) {
         this.validatorClassName = className;
         
@@ -681,7 +681,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setInitSQL(String initSQL) {
         this.initSQL = initSQL;
     }
@@ -689,7 +689,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setTestOnConnect(boolean testOnConnect) {
         this.testOnConnect = testOnConnect;
     }
@@ -697,13 +697,13 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setJdbcInterceptors(String jdbcInterceptors) {
         this.jdbcInterceptors = jdbcInterceptors;
         this.interceptors = null;
     }
 
-    @Override
+    
     public String toString() {
         StringBuilder buf = new StringBuilder("ConnectionPool[");
         try {
@@ -741,7 +741,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public boolean isJmxEnabled() {
         return jmxEnabled;
     }
@@ -749,7 +749,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setJmxEnabled(boolean jmxEnabled) {
         this.jmxEnabled = jmxEnabled;
     }
@@ -757,7 +757,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public Boolean getDefaultAutoCommit() {
         return defaultAutoCommit;
     }
@@ -765,7 +765,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public Boolean getDefaultReadOnly() {
         return defaultReadOnly;
     }
@@ -774,7 +774,7 @@ public class PoolProperties implements PoolConfiguration {
     /**
      * {@inheritDoc}
      */
-    @Override
+    
     public int getSuspectTimeout() {
         return this.suspectTimeout;
     }
@@ -782,7 +782,7 @@ public class PoolProperties implements PoolConfiguration {
     /**
      * {@inheritDoc}
      */
-    @Override
+    
     public void setSuspectTimeout(int seconds) {
         this.suspectTimeout = seconds;
     }
@@ -790,7 +790,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public boolean isPoolSweeperEnabled() {
         boolean timer = getTimeBetweenEvictionRunsMillis()>0;
         boolean result = timer && (isRemoveAbandoned() && getRemoveAbandonedTimeout()>0);
@@ -928,11 +928,11 @@ public class PoolProperties implements PoolConfiguration {
                 return def;
             }
         }
-        @Override
+        
         public int hashCode() {
             return name.hashCode();
         }
-        @Override
+        
         public boolean equals(Object o) {
             if (o==this) return true;
             if (o instanceof InterceptorProperty) {
@@ -946,7 +946,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public boolean isUseEquals() {
         return useEquals;
     }
@@ -954,7 +954,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setUseEquals(boolean useEquals) {
         this.useEquals = useEquals;
     }
@@ -962,7 +962,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public long getMaxAge() {
         return maxAge;
     }
@@ -970,7 +970,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setMaxAge(long maxAge) {
         this.maxAge = maxAge;
     }
@@ -978,7 +978,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public boolean getUseLock() {
         return useLock;
     }
@@ -986,7 +986,7 @@ public class PoolProperties implements PoolConfiguration {
     /** 
      * {@inheritDoc}
      */
-    @Override
+    
     public void setUseLock(boolean useLock) {
         this.useLock = useLock;
     }

==================================================
ConnectionPool.java
index 274d8562ae..85b07791b7 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/interceptor/SlowQueryReport.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/interceptor/SlowQueryReport.java
@@ -240,7 +240,7 @@ public class SlowQueryReport extends AbstractQueryReport  {
             "The date and time of the last invocation"
         };
         
-        static final OpenType<?>[] FIELD_TYPES = new OpenType[] { 
+        static final OpenType[] FIELD_TYPES = new OpenType[] { 
             SimpleType.STRING,
             SimpleType.INTEGER,
             SimpleType.LONG,
@@ -274,7 +274,7 @@ public class SlowQueryReport extends AbstractQueryReport  {
             return FIELD_DESCRIPTIONS;
         }
         
-        public static OpenType<?>[] getFieldTypes() {
+        public static OpenType[] getFieldTypes() {
             return FIELD_TYPES;
         }
         

==================================================
