6f4efd933b7a4c60016257cd053038c264367f7e
==================================================
Don't send 503 if endpoint is paused and we
==================================================
Rainer Jung
==================================================
Sun Sep 25 21:54:13 2011 +0000
==================================================
AjpAprProcessor.java
Don't send 503 if endpoint is paused and we
just answered an AJP CPING.

If CPING works, mod_jk expects the main request
to work too. If we don't want to process the
main request we need to fail the CPING received
directly before.


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1175594 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AjpNioProcessor.java
index 1ef9ed49a6..db45590479 100644
--- a/java/org/apache/coyote/ajp/AjpAprProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpAprProcessor.java
@@ -113,6 +113,7 @@ public class AjpAprProcessor extends AbstractAjpProcessor<Long> {
         long socketRef = socket.getSocket().longValue();
         Socket.setrbb(socketRef, inputBuffer);
         Socket.setsbb(socketRef, outputBuffer);
+        boolean cping = false;
 
         // Error flag
         error = false;
@@ -137,6 +138,7 @@ public class AjpAprProcessor extends AbstractAjpProcessor<Long> {
                         recycle(true);
                         break;
                     }
+                    cping = true;
                     if (Socket.send(socketRef, pongMessageArray, 0,
                             pongMessageArray.length) < 0) {
                         error = true;
@@ -180,12 +182,13 @@ public class AjpAprProcessor extends AbstractAjpProcessor<Long> {
                 }
             }
 
-            if (endpoint.isPaused()) {
+            if (!cping && endpoint.isPaused()) {
                 // 503 - Service unavailable
                 response.setStatus(503);
                 adapter.log(request, response, 0);
                 error = true;
             }
+            cping = false;
 
             // Process the request in the adapter
             if (!error) {

==================================================
AjpProcessor.java
index ae93736e30..4940a38fa5 100644
--- a/java/org/apache/coyote/ajp/AjpNioProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpNioProcessor.java
@@ -98,6 +98,7 @@ public class AjpNioProcessor extends AbstractAjpProcessor<NioChannel> {
         this.socket = socket.getSocket();
         
         long soTimeout = endpoint.getSoTimeout();
+        boolean cping = false;
 
         // Error flag
         error = false;
@@ -122,6 +123,7 @@ public class AjpNioProcessor extends AbstractAjpProcessor<NioChannel> {
                         recycle(true);
                         break;
                     }
+                    cping = true;
                     try {
                         output(pongMessageArray, 0, pongMessageArray.length);
                     } catch (IOException e) {
@@ -167,12 +169,13 @@ public class AjpNioProcessor extends AbstractAjpProcessor<NioChannel> {
                 }
             }
 
-            if (endpoint.isPaused()) {
+            if (!cping && endpoint.isPaused()) {
                 // 503 - Service unavailable
                 response.setStatus(503);
                 adapter.log(request, response, 0);
                 error = true;
             }
+            cping = false;
 
             // Process the request in the adapter
             if (!error) {

==================================================
