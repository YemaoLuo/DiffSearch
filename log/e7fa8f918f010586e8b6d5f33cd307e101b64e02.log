e7fa8f918f010586e8b6d5f33cd307e101b64e02
==================================================
API uses Set rather than EnumSet
==================================================
Mark Emlyn
==================================================
Fri Jan 15 00:38:04 2010 +0000
==================================================
ServletContext.java
API uses Set rather than EnumSet

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@899498 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ApplicationContext.java
index 8a7319de48..6afa6c1b1e 100644
--- a/java/javax/servlet/ServletContext.java
+++ b/java/javax/servlet/ServletContext.java
@@ -19,7 +19,6 @@ package javax.servlet;
 import java.io.InputStream;
 import java.net.MalformedURLException;
 import java.net.URL;
-import java.util.EnumSet;
 import java.util.Enumeration;
 import java.util.EventListener;
 import java.util.Map;
@@ -854,7 +853,7 @@ public interface ServletContext {
      * TODO SERVLET3 - Add comments
      */
     public void setSessionTrackingModes(
-            EnumSet<SessionTrackingMode> sessionTrackingModes)
+            Set<SessionTrackingMode> sessionTrackingModes)
             throws IllegalStateException, IllegalArgumentException;
     
     /**

==================================================
ApplicationContextFacade.java
index 6acc869703..6ceef566e3 100644
--- a/java/org/apache/catalina/core/ApplicationContext.java
+++ b/java/org/apache/catalina/core/ApplicationContext.java
@@ -171,9 +171,9 @@ public class ApplicationContext
     /**
      * Session tracking modes
      */
-    private EnumSet<SessionTrackingMode> sessionTrackingModes = null;
-    private EnumSet<SessionTrackingMode> defaultSessionTrackingModes = null;
-    private EnumSet<SessionTrackingMode> supportedSessionTrackingModes = null;
+    private Set<SessionTrackingMode> sessionTrackingModes = null;
+    private Set<SessionTrackingMode> defaultSessionTrackingModes = null;
+    private Set<SessionTrackingMode> supportedSessionTrackingModes = null;
 
     // --------------------------------------------------------- Public Methods
 
@@ -963,7 +963,7 @@ public class ApplicationContext
      * used by this context has the attribute <code>secure</code> set to
      * <code>true</code>.
      */
-    public EnumSet<SessionTrackingMode> getDefaultSessionTrackingModes() {
+    public Set<SessionTrackingMode> getDefaultSessionTrackingModes() {
         return defaultSessionTrackingModes;
     }
 
@@ -994,7 +994,7 @@ public class ApplicationContext
      * Return the supplied value if one was previously set, else return the
      * defaults.
      */
-    public EnumSet<SessionTrackingMode> getEffectiveSessionTrackingModes() {
+    public Set<SessionTrackingMode> getEffectiveSessionTrackingModes() {
         if (sessionTrackingModes != null) {
             return sessionTrackingModes;
         }
@@ -1014,7 +1014,7 @@ public class ApplicationContext
      *                                  tracking mode is requested
      */
     public void setSessionTrackingModes(
-            EnumSet<SessionTrackingMode> sessionTrackingModes) {
+            Set<SessionTrackingMode> sessionTrackingModes) {
 
         if (context.getAvailable()) {
             throw new IllegalStateException(

==================================================
JspCServletContext.java
index 7ce33cadfe..4948ef445b 100644
--- a/java/org/apache/catalina/core/ApplicationContextFacade.java
+++ b/java/org/apache/catalina/core/ApplicationContextFacade.java
@@ -509,7 +509,7 @@ public final class ApplicationContextFacade
     
     
     @SuppressWarnings("unchecked") // doPrivileged() returns the correct type
-    public EnumSet<SessionTrackingMode> getDefaultSessionTrackingModes() {
+    public Set<SessionTrackingMode> getDefaultSessionTrackingModes() {
         if (SecurityUtil.isPackageProtectionEnabled()) {
             return (EnumSet<SessionTrackingMode>)
                 doPrivileged("getDefaultSessionTrackingModes", null);
@@ -519,7 +519,7 @@ public final class ApplicationContextFacade
     }
 
     @SuppressWarnings("unchecked") // doPrivileged() returns the correct type
-    public EnumSet<SessionTrackingMode> getEffectiveSessionTrackingModes() {
+    public Set<SessionTrackingMode> getEffectiveSessionTrackingModes() {
         if (SecurityUtil.isPackageProtectionEnabled()) {
             return (EnumSet<SessionTrackingMode>)
                 doPrivileged("getEffectiveSessionTrackingModes", null);
@@ -540,7 +540,7 @@ public final class ApplicationContextFacade
 
 
     public void setSessionTrackingModes(
-            EnumSet<SessionTrackingMode> sessionTrackingModes) {
+            Set<SessionTrackingMode> sessionTrackingModes) {
         if (SecurityUtil.isPackageProtectionEnabled()) {
             doPrivileged("setSessionTrackingModes",
                     new Object[]{sessionTrackingModes});

==================================================
