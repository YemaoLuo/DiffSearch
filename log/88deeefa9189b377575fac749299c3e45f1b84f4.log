88deeefa9189b377575fac749299c3e45f1b84f4
==================================================
Couple more whitespace checks. In both cases went with the nospace option since that is what the majority of the current code uses
==================================================
Mark Emlyn
==================================================
Wed Aug 4 22:50:52 2010 +0000
==================================================
Tomcat.java
index d9f8bdfdd4..3ae5d7bc70 100644
--- a/checkstyle.xml
+++ b/checkstyle.xml
@@ -53,5 +53,7 @@
     https://sourceforge.net/tracker/?func=detail&aid=3039718&group_id=29721&atid=397078
     <module name="GenericWhitespace"/>
     -->
+    <module name="EmptyForInitializerPad"/>
+    <module name="EmptyForIteratorPad"/>
   </module>
 </module>
\ No newline at end of file

==================================================
NioReceiver.java
index 43b50e511e..7dc46171de 100644
--- a/java/org/apache/catalina/startup/Tomcat.java
+++ b/java/org/apache/catalina/startup/Tomcat.java
@@ -673,7 +673,7 @@ public class Tomcat {
         ctx.setSessionTimeout(30);
         
         // MIME mappings
-        for (int i = 0; i < DEFAULT_MIME_MAPPINGS.length; ) {
+        for (int i = 0; i < DEFAULT_MIME_MAPPINGS.length;) {
             ctx.addMimeMapping(DEFAULT_MIME_MAPPINGS[i++],
                     DEFAULT_MIME_MAPPINGS[i++]);
         }

==================================================
ParallelNioSender.java
index f2d8a45b47..4cb96a762d 100644
--- a/java/org/apache/catalina/tribes/transport/nio/NioReceiver.java
+++ b/java/org/apache/catalina/tribes/transport/nio/NioReceiver.java
@@ -202,7 +202,7 @@ public class NioReceiver extends ReceiverBase implements Runnable {
         Selector tmpsel = selector;
         Set<SelectionKey> keys =  (isListening()&&tmpsel!=null)?tmpsel.keys():null;
         if ( keys == null ) return;
-        for (Iterator<SelectionKey> iter = keys.iterator(); iter.hasNext(); ) {
+        for (Iterator<SelectionKey> iter = keys.iterator(); iter.hasNext();) {
             SelectionKey key = iter.next();
             try {
 //                if (key.interestOps() == SelectionKey.OP_READ) {

==================================================
AbstractHttp11Processor.java
index 69745bc0e7..c14ba6e3d4 100644
--- a/java/org/apache/catalina/tribes/transport/nio/ParallelNioSender.java
+++ b/java/org/apache/catalina/tribes/transport/nio/ParallelNioSender.java
@@ -288,7 +288,7 @@ public class ParallelNioSender extends AbstractSender implements MultiPointSende
     @Override
     public boolean keepalive() {
         boolean result = false;
-        for ( Iterator<Entry<Member, NioSender>> i = nioSenders.entrySet().iterator(); i.hasNext();  ) {
+        for ( Iterator<Entry<Member, NioSender>> i = nioSenders.entrySet().iterator(); i.hasNext();) {
             Map.Entry<Member, NioSender> entry = i.next();
             NioSender sender = entry.getValue();
             if ( sender.keepalive() ) {

==================================================
Http11NioProcessor.java
index db6779d371..f399d2afca 100644
--- a/java/org/apache/coyote/http11/AbstractHttp11Processor.java
+++ b/java/org/apache/coyote/http11/AbstractHttp11Processor.java
@@ -708,7 +708,7 @@ public abstract class AbstractHttp11Processor {
             if (Ascii.toLower(buff[i]) != first) continue;
             // found first char, now look for a match
             int myPos = i+1;
-            for (int srcPos = 1; srcPos < srcEnd; ) {
+            for (int srcPos = 1; srcPos < srcEnd;) {
                 if (Ascii.toLower(buff[myPos++]) != b[srcPos++])
                     break;
                 if (srcPos == srcEnd) return i - start; // found it

==================================================
ByteChunk.java
index 35e0815d9f..7eca737c2e 100644
--- a/java/org/apache/coyote/http11/Http11NioProcessor.java
+++ b/java/org/apache/coyote/http11/Http11NioProcessor.java
@@ -1212,7 +1212,7 @@ public class Http11NioProcessor extends AbstractHttp11Processor implements Actio
             if (Ascii.toLower(buff[i]) != first) continue;
             // found first char, now look for a match
                 int myPos = i+1;
-            for (int srcPos = 1; srcPos < srcEnd; ) {
+            for (int srcPos = 1; srcPos < srcEnd;) {
                     if (Ascii.toLower(buff[myPos++]) != b[srcPos++])
                 break;
                     if (srcPos == srcEnd) return i - start; // found it

==================================================
CharChunk.java
index 350a9332cd..960d1b16c9 100644
--- a/java/org/apache/tomcat/util/buf/ByteChunk.java
+++ b/java/org/apache/tomcat/util/buf/ByteChunk.java
@@ -652,7 +652,7 @@ public final class ByteChunk implements Cloneable, Serializable {
         if (b1 == null || b2 == null || b2.length > len) {
             return false;
         }
-        for (int i = start, j = 0; i < end && j < b2.length; ) {
+        for (int i = start, j = 0; i < end && j < b2.length;) {
             if (b1[i++] != b2[j++]) 
                 return false;
         }
@@ -690,7 +690,7 @@ public final class ByteChunk implements Cloneable, Serializable {
             if( buff[i] != first ) continue;
             // found first char, now look for a match
             int myPos=i+1;
-            for( int srcPos=srcOff + 1; srcPos< srcEnd; ) {
+            for( int srcPos=srcOff + 1; srcPos< srcEnd;) {
                 if( buff[myPos++] != src.charAt( srcPos++ ))
                     continue mainLoop;
             }

==================================================
MimeHeaders.java
index d7887282de..1974c6fc8a 100644
--- a/java/org/apache/tomcat/util/buf/CharChunk.java
+++ b/java/org/apache/tomcat/util/buf/CharChunk.java
@@ -678,7 +678,7 @@ public final class CharChunk implements Cloneable, Serializable, CharSequence {
             if( buff[i] != first ) continue;
             // found first char, now look for a match
             int myPos=i+1;
-            for( int srcPos=srcOff + 1; srcPos< srcEnd; ) {
+            for( int srcPos=srcOff + 1; srcPos< srcEnd;) {
                 if( buff[myPos++] != src.charAt( srcPos++ ))
                     break;
                 if( srcPos==srcEnd ) return i-start; // found it

==================================================
NioEndpoint.java
index 39b0d062d7..d354e254d7 100644
--- a/java/org/apache/tomcat/util/http/MimeHeaders.java
+++ b/java/org/apache/tomcat/util/http/MimeHeaders.java
@@ -374,7 +374,7 @@ class NamesEnumerator implements Enumeration<String> {
 
     private void findNext() {
         next=null;
-        for(  ; pos< size; pos++ ) {
+        for(; pos< size; pos++ ) {
             next=headers.getName( pos ).toString();
             for( int j=0; j<pos ; j++ ) {
                 if( headers.getName( j ).equalsIgnoreCase( next )) {
@@ -424,7 +424,7 @@ class ValuesEnumerator implements Enumeration<String> {
 
     private void findNext() {
         next=null;
-        for( ; pos< size; pos++ ) {
+        for(; pos< size; pos++ ) {
             MessageBytes n1=headers.getName( pos );
             if( n1.equalsIgnoreCase( name )) {
                 next=headers.getValue( pos );

==================================================
