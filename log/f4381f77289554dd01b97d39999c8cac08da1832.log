f4381f77289554dd01b97d39999c8cac08da1832
==================================================
Rename Output.swallowedPadding to onSwallowedDataFramePayload
==================================================
Mark Thomas
==================================================
Fri Mar 12 09:55:38 2021 +0000
==================================================
Http2Parser.java
Rename Output.swallowedPadding to onSwallowedDataFramePayload

This change is in preparation for fixes to BZ 65179



==================================================
Http2UpgradeHandler.java
index 6b2369bdfc..8a852bffc7 100644
--- a/java/org/apache/coyote/http2/Http2Parser.java
+++ b/java/org/apache/coyote/http2/Http2Parser.java
@@ -208,7 +208,7 @@ class Http2Parser {
             }
         }
         if (Flags.hasPadding(flags)) {
-            output.swallowedPadding(streamId, padLength);
+            output.onSwallowedDataFramePayload(streamId, padLength);
         }
     }
 
@@ -731,7 +731,20 @@ class Http2Parser {
         ByteBuffer startRequestBodyFrame(int streamId, int payloadSize, boolean endOfStream) throws Http2Exception;
         void endRequestBodyFrame(int streamId) throws Http2Exception;
         void receivedEndOfStream(int streamId) throws ConnectionException;
-        void swallowedPadding(int streamId, int paddingLength) throws ConnectionException, IOException;
+        /**
+         * Notification triggered when the parser swallows some or all of a DATA
+         * frame payload without writing it to the ByteBuffer returned by
+         * {@link #startRequestBodyFrame(int, int, boolean)}.
+         *
+         * @param streamId  The stream on which the payload that has been
+         *                  swallowed was received
+         * @param swallowedDataBytesCount   The number of bytes that the parser
+         *                                  swallowed.
+         *
+         * @throws ConnectionException
+         * @throws IOException
+         */
+        void onSwallowedDataFramePayload(int streamId, int swallowedDataBytesCount) throws ConnectionException, IOException;
 
         // Header frames
         HeaderEmitter headersStart(int streamId, boolean headersEndStream)

==================================================
Http2TestBase.java
index c02d3b076c..f39c3c1fc7 100644
--- a/java/org/apache/coyote/http2/Http2UpgradeHandler.java
+++ b/java/org/apache/coyote/http2/Http2UpgradeHandler.java
@@ -1503,11 +1503,11 @@ class Http2UpgradeHandler extends AbstractStream implements InternalHttpUpgradeH
 
 
     @Override
-    public void swallowedPadding(int streamId, int paddingLength) throws
+    public void onSwallowedDataFramePayload(int streamId, int swallowedDataBytesCount) throws
             ConnectionException, IOException {
         AbstractNonZeroStream abstractNonZeroStream = getAbstractNonZeroStream(streamId, true);
         // +1 is for the payload byte used to define the padding length
-        writeWindowUpdate(abstractNonZeroStream, paddingLength + 1, false);
+        writeWindowUpdate(abstractNonZeroStream, swallowedDataBytesCount + 1, false);
     }
 
 

==================================================
