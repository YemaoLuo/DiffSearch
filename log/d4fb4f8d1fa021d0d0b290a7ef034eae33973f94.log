d4fb4f8d1fa021d0d0b290a7ef034eae33973f94
==================================================
First pass add adding support for SSLParameters.setApplicationProtocols() to JreCompat
==================================================
Mark Thomas
==================================================
Wed Jan 18 11:20:56 2017 +0000
==================================================
Jre9Compat.java
First pass add adding support for SSLParameters.setApplicationProtocols() to JreCompat

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1779312 13f79535-47bb-0310-9956-ffa450edef68



==================================================
JreCompat.java
index d57f1d3ac6..5fda7ef416 100644
--- a/java/org/apache/tomcat/util/compat/Jre9Compat.java
+++ b/java/org/apache/tomcat/util/compat/Jre9Compat.java
@@ -16,21 +16,30 @@
  */
 package org.apache.tomcat.util.compat;
 
+import java.lang.reflect.InvocationTargetException;
+import java.lang.reflect.Method;
+
+import javax.net.ssl.SSLParameters;
+
 class Jre9Compat extends JreCompat {
 
     private static final Class<?> inaccessibleObjectExceptionClazz;
-
+    private static final Method setApplicationProtocolsMethod;
 
     static {
         Class<?> c1 = null;
+        Method m2 = null;
+        
         try {
             c1 = Class.forName("java.lang.reflect.InaccessibleObjectException");
-        } catch (SecurityException e) {
+            SSLParameters.class.getMethod("setApplicationProtocolsMethod", String[].class);
+        } catch (SecurityException | NoSuchMethodException e) {
             // Should never happen
         } catch (ClassNotFoundException e) {
             // Must be Java 8
         }
         inaccessibleObjectExceptionClazz = c1;
+        setApplicationProtocolsMethod = m2;
     }
 
 
@@ -47,4 +56,14 @@ class Jre9Compat extends JreCompat {
 
         return inaccessibleObjectExceptionClazz.isAssignableFrom(t.getClass());
     }
+    
+    
+    @Override
+	public void setApplicationProtocols(SSLParameters sslParameters, String[] protocols) {
+    	try {
+			setApplicationProtocolsMethod.invoke(sslParameters, (Object) protocols);
+		} catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException e) {
+			throw new UnsupportedOperationException(e);
+		}
+    }
 }

==================================================
