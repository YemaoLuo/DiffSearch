64573401e9e5f5f3c9b34eb919f59bb89d8c1e1d
==================================================
Pull up duplicate check codes
==================================================
lihan lihan@apache.org
==================================================
Fri Sep 2 16:41:28 2022 +0800
==================================================
ErrorReportValve.java
Pull up duplicate check codes



==================================================
JsonErrorReportValve.java
index 126de87eb7..e7fbc696e4 100644
--- a/java/org/apache/catalina/valves/ErrorReportValve.java
+++ b/java/org/apache/catalina/valves/ErrorReportValve.java
@@ -141,6 +141,23 @@ public class ErrorReportValve extends ValveBase {
         response.setSuspended(false);
 
         try {
+            int statusCode = response.getStatus();
+
+            // Do nothing on a 1xx, 2xx and 3xx status
+            // Do nothing if anything has been written already
+            // Do nothing if the response hasn't been explicitly marked as in error
+            //    and that error has not been reported.
+            if (statusCode < 400 || response.getContentWritten() > 0 || !response.setErrorReported()) {
+                return;
+            }
+
+            // If an error has occurred that prevents further I/O, don't waste time
+            // producing an error report that will never be read
+            AtomicBoolean result = new AtomicBoolean(false);
+            response.getCoyoteResponse().action(ActionCode.IS_IO_ALLOWED, result);
+            if (!result.get()) {
+                return;
+            }
             report(request, response, throwable);
         } catch (Throwable tt) {
             ExceptionUtils.handleThrowable(tt);
@@ -160,25 +177,7 @@ public class ErrorReportValve extends ValveBase {
      *  a root cause exception
      */
     protected void report(Request request, Response response, Throwable throwable) {
-
         int statusCode = response.getStatus();
-
-        // Do nothing on a 1xx, 2xx and 3xx status
-        // Do nothing if anything has been written already
-        // Do nothing if the response hasn't been explicitly marked as in error
-        //    and that error has not been reported.
-        if (statusCode < 400 || response.getContentWritten() > 0 || !response.setErrorReported()) {
-            return;
-        }
-
-        // If an error has occurred that prevents further I/O, don't waste time
-        // producing an error report that will never be read
-        AtomicBoolean result = new AtomicBoolean(false);
-        response.getCoyoteResponse().action(ActionCode.IS_IO_ALLOWED, result);
-        if (!result.get()) {
-            return;
-        }
-
         ErrorPage errorPage = null;
         if (throwable != null) {
             errorPage = errorPageSupport.find(throwable);

==================================================
