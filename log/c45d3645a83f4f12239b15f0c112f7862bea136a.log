c45d3645a83f4f12239b15f0c112f7862bea136a
==================================================
DeltaManager needs to replicate changed attributes even if session
==================================================
Rainer Jung
==================================================
Wed Sep 23 11:28:14 2009 +0000
==================================================
DeltaManager.java
DeltaManager needs to replicate changed attributes even if session
gets invalidated. Otherwise session listeners will not see the right
data on the secondary nodes.

Port of r818061 from TC 5.5.x.


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@818062 13f79535-47bb-0310-9956-ffa450edef68



==================================================
DeltaSession.java
index 3eeab77871..de0be5449e 100644
--- a/java/org/apache/catalina/ha/session/DeltaManager.java
+++ b/java/org/apache/catalina/ha/session/DeltaManager.java
@@ -1108,6 +1108,25 @@ public class DeltaManager extends ClusterManagerBase{
      * @return a SessionMessage to be sent,
      */
     public ClusterMessage requestCompleted(String sessionId) {
+         return requestCompleted(sessionId, false);
+     }
+
+     /**
+      * When the request has been completed, the replication valve will notify
+      * the manager, and the manager will decide whether any replication is
+      * needed or not. If there is a need for replication, the manager will
+      * create a session message and that will be replicated. The cluster
+      * determines where it gets sent.
+      * 
+      * Session expiration also calls this method, but with expires == true.
+      * 
+      * @param sessionId -
+      *            the sessionId that just completed.
+      * @param expires -
+      *            whether this method has been called during session expiration
+      * @return a SessionMessage to be sent,
+      */
+     public ClusterMessage requestCompleted(String sessionId, boolean expires) {
         DeltaSession session = null;
         try {
             session = (DeltaSession) findSession(sessionId);
@@ -1129,7 +1148,7 @@ public class DeltaManager extends ClusterManagerBase{
                 }  
             }
             if(!isDeltaRequest) {
-                if(!session.isPrimarySession()) {               
+                if(!expires && !session.isPrimarySession()) {
                     counterSend_EVT_SESSION_ACCESSED++;
                     msg = new SessionMessageImpl(getName(),
                                                  SessionMessage.EVT_SESSION_ACCESSED, 
@@ -1145,9 +1164,10 @@ public class DeltaManager extends ClusterManagerBase{
                     log.debug(sm.getString("deltaManager.createMessage.delta",getName(), sessionId));
                 }
             }
-            session.setPrimarySession(true);
+            if (!expires)
+                session.setPrimarySession(true);
             //check to see if we need to send out an access message
-            if ((msg == null)) {
+            if (!expires && (msg == null)) {
                 long replDelta = System.currentTimeMillis() - session.getLastTimeReplicated();
                 if (replDelta > (getMaxInactiveInterval() * 1000)) {
                     counterSend_EVT_SESSION_ACCESSED++;

==================================================
