8a2a441b7d35ce7b02d5f259d6311e586c2ef10d
==================================================
Removed unnecessary return statements at the end of void methods
==================================================
Emmanuel Bourg
==================================================
Wed May 10 14:42:57 2017 +0000
==================================================
HttpServlet.java
Removed unnecessary return statements at the end of void methods

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1794729 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Request.java
index 9f3fe92eee..f7ea58a567 100644
--- a/java/javax/servlet/http/HttpServlet.java
+++ b/java/javax/servlet/http/HttpServlet.java
@@ -593,7 +593,6 @@ public abstract class HttpServlet extends GenericServlet {
         ServletOutputStream out = resp.getOutputStream();
         out.print(buffer.toString());
         out.close();
-        return;
     }
 
 

==================================================
ClusterSessionListener.java
index fbfde0eb1d..7e935a2834 100644
--- a/java/org/apache/catalina/connector/Request.java
+++ b/java/org/apache/catalina/connector/Request.java
@@ -1456,8 +1456,6 @@ public class Request implements HttpServletRequest {
 
             // Notify interested application event listeners
             notifyAttributeRemoved(name, value);
-        } else {
-            return;
         }
     }
 

==================================================
SimpleTcpCluster.java
index 5af24b89fc..c2c36b4771 100644
--- a/java/org/apache/catalina/ha/session/ClusterSessionListener.java
+++ b/java/org/apache/catalina/ha/session/ClusterSessionListener.java
@@ -91,7 +91,6 @@ public class ClusterSessionListener extends ClusterListener {
 
             }
         }
-        return;
     }
 
     /**

==================================================
WebappClassLoaderBase.java
index 96dc29bf5e..75ad71e6e9 100644
--- a/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java
+++ b/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java
@@ -785,7 +785,6 @@ public class SimpleTcpCluster extends LifecycleMBeanBase
                 }
             }
         }
-        return;
     }
 
     public int getChannelStartOptions() {

==================================================
ManagerServlet.java
index e9f0213c7d..019c4b207f 100644
--- a/java/org/apache/catalina/loader/WebappClassLoaderBase.java
+++ b/java/org/apache/catalina/loader/WebappClassLoaderBase.java
@@ -643,9 +643,7 @@ public abstract class WebappClassLoaderBase extends URLClassLoader
         if (this.transformers.remove(transformer)) {
             log.info(sm.getString("webappClassLoader.removeTransformer",
                     transformer, getContextName()));
-            return;
         }
-
     }
 
     protected void copyStateWithoutTransformers(WebappClassLoaderBase base) {

==================================================
HostManagerServlet.java
index a9856c718f..00fdf950c2 100644
--- a/java/org/apache/catalina/manager/ManagerServlet.java
+++ b/java/org/apache/catalina/manager/ManagerServlet.java
@@ -607,7 +607,6 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
                 log("managerServlet.storeConfig", e);
                 writer.println(smClient.getString("managerServlet.exception",
                         e.toString()));
-                return;
             }
         } else {
             String contextPath = path;
@@ -630,7 +629,6 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
                 log("managerServlet.save[" + path + "]", e);
                 writer.println(smClient.getString("managerServlet.exception",
                         e.toString()));
-                return;
             }
         }
     }

==================================================
JAASMemoryLoginModule.java
index c27e0d06b6..96adb4176f 100644
--- a/java/org/apache/catalina/manager/host/HostManagerServlet.java
+++ b/java/org/apache/catalina/manager/host/HostManagerServlet.java
@@ -580,9 +580,7 @@ public class HostManagerServlet
                     "hostManagerServlet.startFailed", name));
             writer.println(smClient.getString(
                     "hostManagerServlet.exception", e.toString()));
-            return;
         }
-
     }
 
 
@@ -642,9 +640,7 @@ public class HostManagerServlet
                     name));
             writer.println(smClient.getString("hostManagerServlet.exception",
                     e.toString()));
-            return;
         }
-
     }
 
 
@@ -675,7 +671,6 @@ public class HostManagerServlet
             } else {
                 writer.println(smClient.getString("hostManagerServlet.exception", e.toString()));
             }
-            return;
         }
     }
 

==================================================
Tomcat.java
index 361de3a829..64b603a2f6 100644
--- a/java/org/apache/catalina/realm/JAASMemoryLoginModule.java
+++ b/java/org/apache/catalina/realm/JAASMemoryLoginModule.java
@@ -400,7 +400,6 @@ public class JAASMemoryLoginModule extends MemoryRealm implements LoginModule {
             digester.parse(file);
         } catch (Exception e) {
             log.warn("Error processing configuration file " + file.getAbsolutePath(), e);
-            return;
         } finally {
             digester.reset();
         }

==================================================
NioReplicationTask.java
index f629ff20cf..4f2df85d5f 100644
--- a/java/org/apache/catalina/startup/Tomcat.java
+++ b/java/org/apache/catalina/startup/Tomcat.java
@@ -929,7 +929,6 @@ public class Tomcat {
                     context.getPipeline().addValve(new NonLoginAuthenticator());
                 }
             } catch (ClassCastException e) {
-                return;
             }
         }
 

==================================================
MemoryUserDatabase.java
index a6ad6a252c..83ba44a35e 100644
--- a/java/org/apache/catalina/tribes/transport/nio/NioReplicationTask.java
+++ b/java/org/apache/catalina/tribes/transport/nio/NioReplicationTask.java
@@ -232,7 +232,6 @@ public class NioReplicationTask extends AbstractRxTask {
 
         if (count < 0) {
             remoteEof(key);
-            return;
         }
     }
 

==================================================
Http2UpgradeHandler.java
index 4730173b02..4f3c2b5331 100644
--- a/java/org/apache/catalina/users/MemoryUserDatabase.java
+++ b/java/org/apache/catalina/users/MemoryUserDatabase.java
@@ -400,7 +400,6 @@ public class MemoryUserDatabase implements UserDatabase {
                     digester.parse(is);
                 } catch (IOException ioe) {
                     log.error(sm.getString("memoryUserDatabase.fileNotFound", pathName));
-                    return;
                 }
             }
         }

==================================================
JspServlet.java
index 53319f14ec..3ee8537292 100644
--- a/java/org/apache/coyote/http2/Http2UpgradeHandler.java
+++ b/java/org/apache/coyote/http2/Http2UpgradeHandler.java
@@ -702,7 +702,6 @@ class Http2UpgradeHandler extends AbstractStream implements InternalHttpUpgradeH
         synchronized (socketWrapper) {
             if (socketWrapper.flush(false)) {
                 socketWrapper.registerWriteInterest();
-                return;
             }
         }
     }

==================================================
FileHandler.java
index 92c05d732b..772c69c8fc 100644
--- a/java/org/apache/jasper/servlet/JspServlet.java
+++ b/java/org/apache/jasper/servlet/JspServlet.java
@@ -414,7 +414,6 @@ public class JspServlet extends HttpServlet implements PeriodicEventListener {
                         jspUri));
             }
         }
-        return;
     }
 
 

==================================================
UDecoder.java
index ff5016a60d..6c7f0dc301 100644
--- a/java/org/apache/juli/FileHandler.java
+++ b/java/org/apache/juli/FileHandler.java
@@ -209,7 +209,6 @@ public class FileHandler
                 }
             } catch (Exception e) {
                 reportError(null, e, ErrorManager.WRITE_FAILURE);
-                return;
             }
         } finally {
             writerLock.readLock().unlock();

==================================================
Cookie.java
index d431765b91..9d1d6fa1a1 100644
--- a/java/org/apache/tomcat/util/buf/UDecoder.java
+++ b/java/org/apache/tomcat/util/buf/UDecoder.java
@@ -121,8 +121,6 @@ public final class UDecoder {
         }
 
         mb.setEnd( idx );
-
-        return;
     }
 
     // -------------------- Additional methods --------------------

==================================================
Registry.java
index 98d739c4ea..a4331e2b50 100644
--- a/java/org/apache/tomcat/util/http/parser/Cookie.java
+++ b/java/org/apache/tomcat/util/http/parser/Cookie.java
@@ -147,7 +147,6 @@ public class Cookie {
                 if (b == SEMICOLON_BYTE || b == COMMA_BYTE) {
                     parseCookieRfc2109(bb, serverCookies, version);
                 }
-                return;
             } else {
                 // Unrecognised version.
                 // Ignore this header.

==================================================
PojoEndpointBase.java
index 0e30a08cf0..5f3e066776 100644
--- a/java/org/apache/tomcat/util/modeler/Registry.java
+++ b/java/org/apache/tomcat/util/modeler/Registry.java
@@ -700,7 +700,6 @@ public class Registry implements RegistryMBean, MBeanRegistration  {
             }
             loadDescriptors(pkg, classLoader);
         }
-        return;
     }
 
     private ModelerSource getModelerSource( String type )

==================================================
TestDataIntegrity.java
index 47f7603716..47110da306 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoEndpointBase.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoEndpointBase.java
@@ -72,14 +72,11 @@ public abstract class PojoEndpointBase extends Endpoint {
                         "pojoEndpointBase.onOpenFail",
                         pojo.getClass().getName()), e);
                 handleOnOpenOrCloseError(session, e);
-                return;
             } catch (InvocationTargetException e) {
                 Throwable cause = e.getCause();
                 handleOnOpenOrCloseError(session, cause);
-                return;
             } catch (Throwable t) {
                 handleOnOpenOrCloseError(session, t);
-                return;
             }
         }
     }

==================================================
TestMulticastPackages.java
index 06806f995d..9f78833ebe 100644
--- a/test/org/apache/catalina/tribes/test/channel/TestDataIntegrity.java
+++ b/test/org/apache/catalina/tribes/test/channel/TestDataIntegrity.java
@@ -74,7 +74,6 @@ public class TestDataIntegrity {
                         System.out.println("Thread["+this.getName()+"] sent "+msgCount+" messages in "+(System.currentTimeMillis()-start)+" ms.");
                     }catch ( Exception x ) {
                         x.printStackTrace();
-                        return;
                     }
                 }
             };
@@ -102,7 +101,6 @@ public class TestDataIntegrity {
                             System.out.println("Thread["+this.getName()+"] sent "+msgCount+" messages in "+(System.currentTimeMillis()-start)+" ms.");
                         }catch ( Exception x ) {
                             x.printStackTrace();
-                            return;
                         }
                     }
                 };

==================================================
TestUdpPackages.java
index 7186e54b6b..55a6e93139 100644
--- a/test/org/apache/catalina/tribes/test/channel/TestMulticastPackages.java
+++ b/test/org/apache/catalina/tribes/test/channel/TestMulticastPackages.java
@@ -127,7 +127,6 @@ public class TestMulticastPackages {
                         System.out.println("Thread["+this.getName()+"] sent "+msgCount+" messages in "+(System.currentTimeMillis()-start)+" ms.");
                     }catch ( Exception x ) {
                         x.printStackTrace();
-                        return;
                     }
                 }
             };

==================================================
