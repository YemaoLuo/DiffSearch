00eedc6d1ef25cedcdcbdbac139e51b1650c1943
==================================================
Conversion of TomcatBaseTest classes to JUnit 4 completed.
==================================================
Konstantin Kolinko
==================================================
Mon Jul 25 22:20:19 2011 +0000
==================================================
TestCompositeELResolver.java
Conversion of TomcatBaseTest classes to JUnit 4 completed.
Rename TomcatBaseTestJUnit4 -> TomcatBaseTest.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1150939 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestPageContext.java
index bfad6517ce..0925eb9f7d 100644
--- a/test/javax/el/TestCompositeELResolver.java
+++ b/test/javax/el/TestCompositeELResolver.java
@@ -26,10 +26,10 @@ import org.junit.Test;
 
 import org.apache.catalina.core.StandardContext;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
 
-public class TestCompositeELResolver extends TomcatBaseTestJUnit4 {
+public class TestCompositeELResolver extends TomcatBaseTest {
 
     @Test
     public void testBug50408() throws Exception {

==================================================
TestDigestAuthenticator.java
index c859de3ef8..c1b29d9b21 100644
--- a/test/javax/servlet/jsp/TestPageContext.java
+++ b/test/javax/servlet/jsp/TestPageContext.java
@@ -24,10 +24,10 @@ import static org.junit.Assert.assertTrue;
 import org.junit.Test;
 
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
 
-public class TestPageContext extends TomcatBaseTestJUnit4 {
+public class TestPageContext extends TomcatBaseTest {
 
     @Test
     public void testBug49196() throws Exception {

==================================================
TestFormAuthenticator.java
index c2ad305678..40714d8aba 100644
--- a/test/org/apache/catalina/authenticator/TestDigestAuthenticator.java
+++ b/test/org/apache/catalina/authenticator/TestDigestAuthenticator.java
@@ -35,11 +35,11 @@ import org.apache.catalina.deploy.SecurityConstraint;
 import org.apache.catalina.startup.TestTomcat.MapRealm;
 import org.apache.catalina.startup.TesterServlet;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.catalina.util.MD5Encoder;
 import org.apache.tomcat.util.buf.ByteChunk;
 
-public class TestDigestAuthenticator extends TomcatBaseTestJUnit4 {
+public class TestDigestAuthenticator extends TomcatBaseTest {
 
     private static String USER = "user";
     private static String PWD = "pwd";

==================================================
TesterDigestAuthenticatorPerformance.java
index d681914eb2..9178dbed92 100644
--- a/test/org/apache/catalina/authenticator/TestFormAuthenticator.java
+++ b/test/org/apache/catalina/authenticator/TestFormAuthenticator.java
@@ -26,9 +26,9 @@ import org.apache.catalina.Context;
 import org.apache.catalina.startup.SimpleHttpClient;
 import org.apache.catalina.startup.TestTomcat.MapRealm;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 
-public class TestFormAuthenticator extends TomcatBaseTestJUnit4 {
+public class TestFormAuthenticator extends TomcatBaseTest {
 
     @Test
     public void testGet() throws Exception {

==================================================
TestCometProcessor.java
index bb56073ac3..3e67441497 100644
--- a/test/org/apache/catalina/authenticator/TesterDigestAuthenticatorPerformance.java
+++ b/test/org/apache/catalina/authenticator/TesterDigestAuthenticatorPerformance.java
@@ -34,11 +34,11 @@ import org.apache.catalina.deploy.SecurityConstraint;
 import org.apache.catalina.startup.TestTomcat.MapRealm;
 import org.apache.catalina.startup.TesterServlet;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.catalina.util.MD5Encoder;
 import org.apache.tomcat.util.buf.ByteChunk;
 
-public class TesterDigestAuthenticatorPerformance extends TomcatBaseTestJUnit4 {
+public class TesterDigestAuthenticatorPerformance extends TomcatBaseTest {
 
     private static String USER = "user";
     private static String PWD = "pwd";

==================================================
TestConnector.java
index 0076afaef7..06362da0f6 100644
--- a/test/org/apache/catalina/comet/TestCometProcessor.java
+++ b/test/org/apache/catalina/comet/TestCometProcessor.java
@@ -36,9 +36,9 @@ import org.junit.Test;
 import org.apache.catalina.Context;
 import org.apache.catalina.comet.CometEvent.EventType;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 
-public class TestCometProcessor extends TomcatBaseTestJUnit4 {
+public class TestCometProcessor extends TomcatBaseTest {
 
     @Test
     public void testSimpleCometClient() throws Exception {

==================================================
TestCoyoteAdapter.java
index de61f59313..97e1b4cd36 100644
--- a/test/org/apache/catalina/connector/TestConnector.java
+++ b/test/org/apache/catalina/connector/TestConnector.java
@@ -26,13 +26,13 @@ import org.apache.catalina.Context;
 import org.apache.catalina.Wrapper;
 import org.apache.catalina.startup.TesterServlet;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
 
 /**
  * Test cases for {@link Connector}. 
  */
-public class TestConnector extends TomcatBaseTestJUnit4 {
+public class TestConnector extends TomcatBaseTest {
 
     @Test
     public void testStop() throws Exception {

==================================================
TestKeepAliveCount.java
index df9b73c72f..aaeed8962b 100644
--- a/test/org/apache/catalina/connector/TestCoyoteAdapter.java
+++ b/test/org/apache/catalina/connector/TestCoyoteAdapter.java
@@ -32,10 +32,10 @@ import org.junit.Test;
 
 import org.apache.catalina.Context;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
 
-public class TestCoyoteAdapter extends TomcatBaseTestJUnit4 {
+public class TestCoyoteAdapter extends TomcatBaseTest {
 
     @Test
     public void testPathParmsRootNone() throws Exception {

==================================================
TestMaxConnections.java
index 97f2f8441c..0c34b0ebb1 100644
--- a/test/org/apache/catalina/connector/TestKeepAliveCount.java
+++ b/test/org/apache/catalina/connector/TestKeepAliveCount.java
@@ -30,9 +30,9 @@ import org.junit.Test;
 import org.apache.catalina.Context;
 import org.apache.catalina.startup.SimpleHttpClient;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 
-public class TestKeepAliveCount extends TomcatBaseTestJUnit4 {
+public class TestKeepAliveCount extends TomcatBaseTest {
 
     @Test
     public void testHttp10() throws Exception {

==================================================
TestRequest.java
index 37bdaf649f..c9b45ca748 100644
--- a/test/org/apache/catalina/connector/TestMaxConnections.java
+++ b/test/org/apache/catalina/connector/TestMaxConnections.java
@@ -30,11 +30,11 @@ import org.junit.Test;
 import org.apache.catalina.Context;
 import org.apache.catalina.startup.SimpleHttpClient;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 
-public class TestMaxConnections extends TomcatBaseTestJUnit4 {
+public class TestMaxConnections extends TomcatBaseTest {
     private static Log log = LogFactory.getLog(TestMaxConnections.class);
     static int soTimeout = 3000;
     static int connectTimeout = 1000;

==================================================
TestResponse.java
index 76266838a8..0114c5531f 100644
--- a/test/org/apache/catalina/connector/TestRequest.java
+++ b/test/org/apache/catalina/connector/TestRequest.java
@@ -42,13 +42,13 @@ import org.apache.catalina.deploy.LoginConfig;
 import org.apache.catalina.startup.SimpleHttpClient;
 import org.apache.catalina.startup.TestTomcat.MapRealm;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
 
 /**
  * Test case for {@link Request}. 
  */
-public class TestRequest extends TomcatBaseTestJUnit4 {
+public class TestRequest extends TomcatBaseTest {
 
     /**
      * Test case for https://issues.apache.org/bugzilla/show_bug.cgi?id=37794

==================================================
TestAsyncContextImpl.java
index 28429638b2..176166ae38 100644
--- a/test/org/apache/catalina/connector/TestResponse.java
+++ b/test/org/apache/catalina/connector/TestResponse.java
@@ -36,13 +36,13 @@ import org.junit.Test;
 
 import org.apache.catalina.Context;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
 
 /**
  * Test case for {@link Request}. 
  */
-public class TestResponse extends TomcatBaseTestJUnit4 {
+public class TestResponse extends TomcatBaseTest {
 
     @Test
     public void testBug49598() throws Exception {

==================================================
TestNamingContextListener.java
index 117f6d9ab0..32a0d93ebe 100644
--- a/test/org/apache/catalina/core/TestAsyncContextImpl.java
+++ b/test/org/apache/catalina/core/TestAsyncContextImpl.java
@@ -45,12 +45,12 @@ import org.apache.catalina.Context;
 import org.apache.catalina.Wrapper;
 import org.apache.catalina.connector.Request;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.catalina.valves.TesterAccessLogValve;
 import org.apache.catalina.valves.TesterAccessLogValve.Entry;
 import org.apache.tomcat.util.buf.ByteChunk;
 
-public class TestAsyncContextImpl extends TomcatBaseTestJUnit4 {
+public class TestAsyncContextImpl extends TomcatBaseTest {
 
     // Time for a request to process (need to allow for threads to start etc.)
     private static final long REQUEST_TIME = 1000;

==================================================
TestStandardContext.java
index b1558b84da..43a1719dd1 100644
--- a/test/org/apache/catalina/core/TestNamingContextListener.java
+++ b/test/org/apache/catalina/core/TestNamingContextListener.java
@@ -29,9 +29,9 @@ import org.junit.Test;
 import org.apache.catalina.LifecycleState;
 import org.apache.catalina.deploy.ContextEnvironment;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 
-public class TestNamingContextListener extends TomcatBaseTestJUnit4 {
+public class TestNamingContextListener extends TomcatBaseTest {
 
     private static final String JNDI_NAME = "TestName";
     private static final String JNDI_VALUE= "Test Value";

==================================================
TestStandardContextAliases.java
index a2a5f6f92c..7774bd4c44 100644
--- a/test/org/apache/catalina/core/TestStandardContext.java
+++ b/test/org/apache/catalina/core/TestStandardContext.java
@@ -58,10 +58,10 @@ import org.apache.catalina.deploy.LoginConfig;
 import org.apache.catalina.startup.SimpleHttpClient;
 import org.apache.catalina.startup.TestTomcat.MapRealm;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
 
-public class TestStandardContext extends TomcatBaseTestJUnit4 {
+public class TestStandardContext extends TomcatBaseTest {
 
     private static final String REQUEST =
         "GET / HTTP/1.1\r\n" +

==================================================
TestStandardContextResources.java
index da9d7e62c9..28859fe9c7 100644
--- a/test/org/apache/catalina/core/TestStandardContextAliases.java
+++ b/test/org/apache/catalina/core/TestStandardContextAliases.java
@@ -33,10 +33,10 @@ import static org.junit.Assert.assertTrue;
 import org.junit.Test;
 
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
 
-public class TestStandardContextAliases extends TomcatBaseTestJUnit4 {
+public class TestStandardContextAliases extends TomcatBaseTest {
 
     @Test
     public void testDirContextAliases() throws Exception {

==================================================
TestStandardWrapper.java
index 22c22b4376..1478fe3fa9 100644
--- a/test/org/apache/catalina/core/TestStandardContextResources.java
+++ b/test/org/apache/catalina/core/TestStandardContextResources.java
@@ -41,10 +41,10 @@ import org.apache.catalina.deploy.WebXml;
 import org.apache.catalina.startup.Constants;
 import org.apache.catalina.startup.ContextConfig;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
 
-public class TestStandardContextResources extends TomcatBaseTestJUnit4 {
+public class TestStandardContextResources extends TomcatBaseTest {
 
     @Override
     public void setUp() throws Exception {

==================================================
TestSwallowAbortedUploads.java
index d762133634..92d6788f98 100644
--- a/test/org/apache/catalina/core/TestStandardWrapper.java
+++ b/test/org/apache/catalina/core/TestStandardWrapper.java
@@ -56,10 +56,10 @@ import org.apache.catalina.authenticator.BasicAuthenticator;
 import org.apache.catalina.deploy.LoginConfig;
 import org.apache.catalina.startup.TestTomcat.MapRealm;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
 
-public class TestStandardWrapper extends TomcatBaseTestJUnit4 {
+public class TestStandardWrapper extends TomcatBaseTest {
 
     @Test
     public void testSecurityAnnotationsSimple() throws Exception {

==================================================
TestAddCharSetFilter.java
index 5f067b3121..8d38f84e6d 100644
--- a/test/org/apache/catalina/core/TestSwallowAbortedUploads.java
+++ b/test/org/apache/catalina/core/TestSwallowAbortedUploads.java
@@ -38,11 +38,11 @@ import org.apache.catalina.Context;
 import org.apache.catalina.Wrapper;
 import org.apache.catalina.startup.SimpleHttpClient;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 
-public class TestSwallowAbortedUploads extends TomcatBaseTestJUnit4 {
+public class TestSwallowAbortedUploads extends TomcatBaseTest {
 
     private static Log log = LogFactory.getLog(TestSwallowAbortedUploads.class);
 

==================================================
TestCsrfPreventionFilter.java
index 257c5610ea..d818b44436 100644
--- a/test/org/apache/catalina/filters/TestAddCharSetFilter.java
+++ b/test/org/apache/catalina/filters/TestAddCharSetFilter.java
@@ -36,10 +36,10 @@ import org.apache.catalina.Context;
 import org.apache.catalina.deploy.FilterDef;
 import org.apache.catalina.deploy.FilterMap;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
 
-public class TestAddCharSetFilter extends TomcatBaseTestJUnit4 {
+public class TestAddCharSetFilter extends TomcatBaseTest {
 
     @Test
     public void testNoneSpecifiedMode1() throws Exception {

==================================================
TestExpiresFilter.java
index a42edf0bb2..b8b1d7a8f9 100644
--- a/test/org/apache/catalina/filters/TestCsrfPreventionFilter.java
+++ b/test/org/apache/catalina/filters/TestCsrfPreventionFilter.java
@@ -31,9 +31,9 @@ import static org.junit.Assert.assertTrue;
 import org.junit.Test;
 
 import org.apache.catalina.filters.CsrfPreventionFilter.LruCache;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 
-public class TestCsrfPreventionFilter extends TomcatBaseTestJUnit4 {
+public class TestCsrfPreventionFilter extends TomcatBaseTest {
 
     private static final String RESULT_NONCE =
         Constants.CSRF_NONCE_SESSION_ATTR_NAME + "=TESTNONCE";

==================================================
TestRemoteIpFilter.java
index e20dfc2b6c..38f3e45774 100644
--- a/test/org/apache/catalina/filters/TestExpiresFilter.java
+++ b/test/org/apache/catalina/filters/TestExpiresFilter.java
@@ -43,9 +43,9 @@ import org.apache.catalina.filters.ExpiresFilter.DurationUnit;
 import org.apache.catalina.filters.ExpiresFilter.ExpiresConfiguration;
 import org.apache.catalina.filters.ExpiresFilter.StartingPoint;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 
-public class TestExpiresFilter extends TomcatBaseTestJUnit4 {
+public class TestExpiresFilter extends TomcatBaseTest {
     public static final String TEMP_DIR = System.getProperty("java.io.tmpdir");
 
     @Test

==================================================
TestVirtualWebappLoader.java
index 337e49f79d..c8e95d13a6 100644
--- a/test/org/apache/catalina/filters/TestRemoteIpFilter.java
+++ b/test/org/apache/catalina/filters/TestRemoteIpFilter.java
@@ -53,9 +53,9 @@ import org.apache.catalina.connector.Response;
 import org.apache.catalina.deploy.FilterDef;
 import org.apache.catalina.deploy.FilterMap;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 
-public class TestRemoteIpFilter extends TomcatBaseTestJUnit4 {
+public class TestRemoteIpFilter extends TomcatBaseTest {
 
     /**
      * Mock {@link FilterChain} to keep a handle on the passed

==================================================
TestWebappClassLoaderMemoryLeak.java
index 3021fbc52a..09444f7c4a 100644
--- a/test/org/apache/catalina/loader/TestVirtualWebappLoader.java
+++ b/test/org/apache/catalina/loader/TestVirtualWebappLoader.java
@@ -26,10 +26,10 @@ import org.junit.Test;
 
 import org.apache.catalina.core.StandardContext;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.naming.resources.FileDirContext;
 
-public class TestVirtualWebappLoader extends TomcatBaseTestJUnit4 {
+public class TestVirtualWebappLoader extends TomcatBaseTest {
 
     @Test
     public void testModified() throws Exception {

==================================================
TestRegistration.java
index 2d63f991c5..fb283aee50 100644
--- a/test/org/apache/catalina/loader/TestWebappClassLoaderMemoryLeak.java
+++ b/test/org/apache/catalina/loader/TestWebappClassLoaderMemoryLeak.java
@@ -32,9 +32,9 @@ import org.junit.Test;
 import org.apache.catalina.Context;
 import org.apache.catalina.core.StandardContext;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 
-public class TestWebappClassLoaderMemoryLeak extends TomcatBaseTestJUnit4 {
+public class TestWebappClassLoaderMemoryLeak extends TomcatBaseTest {
 
     @Test
     public void testTimerThreadLeak() throws Exception {

==================================================
TestDefaultServlet.java
index 952c1b3047..893f0077ad 100644
--- a/test/org/apache/catalina/mbeans/TestRegistration.java
+++ b/test/org/apache/catalina/mbeans/TestRegistration.java
@@ -33,7 +33,7 @@ import org.junit.Test;
 
 import org.apache.catalina.core.StandardHost;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.modeler.Registry;
 
 /**
@@ -41,7 +41,7 @@ import org.apache.tomcat.util.modeler.Registry;
  * don't necessarily apply to one specific Tomcat class.
  *
  */
-public class TestRegistration extends TomcatBaseTestJUnit4 {
+public class TestRegistration extends TomcatBaseTest {
 
     private static final String contextName = "/foo";
 

==================================================
TestWebdavServlet.java
index 030e7e813f..18abf56a95 100644
--- a/test/org/apache/catalina/servlets/TestDefaultServlet.java
+++ b/test/org/apache/catalina/servlets/TestDefaultServlet.java
@@ -42,10 +42,9 @@ import static org.apache.catalina.startup.SimpleHttpClient.CRLF;
 import org.apache.catalina.startup.SimpleHttpClient;
 import org.apache.catalina.startup.Tomcat;
 import org.apache.catalina.startup.TomcatBaseTest;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
 import org.apache.tomcat.util.buf.ByteChunk;
 
-public class TestDefaultServlet extends TomcatBaseTestJUnit4 {
+public class TestDefaultServlet extends TomcatBaseTest {
 
     /**
      * Test attempting to access special paths (WEB-INF/META-INF) using

==================================================
TestContextConfig.java
index 305a88cbad..38803bec33 100644
--- a/test/org/apache/catalina/servlets/TestWebdavServlet.java
+++ b/test/org/apache/catalina/servlets/TestWebdavServlet.java
@@ -29,10 +29,9 @@ import org.junit.Test;
 
 import org.apache.catalina.startup.Tomcat;
 import org.apache.catalina.startup.TomcatBaseTest;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
 import org.apache.tomcat.util.buf.ByteChunk;
 
-public class TestWebdavServlet extends TomcatBaseTestJUnit4 {
+public class TestWebdavServlet extends TomcatBaseTest {
 
     /**
      * Test attempting to access special paths (WEB-INF/META-INF) using WebdavServlet 

==================================================
TestListener.java
index b40883296c..525270cca6 100644
--- a/test/org/apache/catalina/startup/TestContextConfig.java
+++ b/test/org/apache/catalina/startup/TestContextConfig.java
@@ -37,7 +37,7 @@ import org.junit.Test;
 import org.apache.catalina.core.StandardContext;
 import org.apache.tomcat.util.buf.ByteChunk;
 
-public class TestContextConfig extends TomcatBaseTestJUnit4 {
+public class TestContextConfig extends TomcatBaseTest {
 
     @Test
     public void testOverrideWithSCIDefaultName() throws Exception {

==================================================
TestTomcat.java
index 871fc1b279..0c146025f6 100644
--- a/test/org/apache/catalina/startup/TestListener.java
+++ b/test/org/apache/catalina/startup/TestListener.java
@@ -31,7 +31,7 @@ import org.junit.Test;
 
 import org.apache.catalina.Context;
 
-public class TestListener extends TomcatBaseTestJUnit4 {
+public class TestListener extends TomcatBaseTest {
 
     /**
      * Check that a ServletContainerInitializer can install a

==================================================
TestTomcatClassLoader.java
index fa8d08efe6..e68e9125ff 100644
--- a/test/org/apache/catalina/startup/TestTomcat.java
+++ b/test/org/apache/catalina/startup/TestTomcat.java
@@ -48,7 +48,7 @@ import org.apache.catalina.realm.GenericPrincipal;
 import org.apache.catalina.realm.RealmBase;
 import org.apache.tomcat.util.buf.ByteChunk;
 
-public class TestTomcat extends TomcatBaseTestJUnit4 {
+public class TestTomcat extends TomcatBaseTest {
 
     /**
      * Simple servlet to test in-line registration 

==================================================
TomcatBaseTest.java
index a886690a24..54a0c26fb3 100644
--- a/test/org/apache/catalina/startup/TestTomcatClassLoader.java
+++ b/test/org/apache/catalina/startup/TestTomcatClassLoader.java
@@ -34,7 +34,7 @@ import org.apache.catalina.Context;
 import org.apache.catalina.loader.WebappClassLoader;
 import org.apache.tomcat.util.buf.ByteChunk;
 
-public class TestTomcatClassLoader extends TomcatBaseTestJUnit4 {
+public class TestTomcatClassLoader extends TomcatBaseTest {
 
     @Test
     public void testDefaultClassLoader() throws Exception {

==================================================
TomcatBaseTestJUnit4.java
index f6c27055e2..7696becc58 100644
--- a/test/org/apache/catalina/startup/TomcatBaseTest.java
+++ b/test/org/apache/catalina/startup/TomcatBaseTest.java
@@ -32,7 +32,10 @@ import javax.servlet.http.HttpServlet;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
 
-import junit.framework.TestCase;
+import static org.junit.Assert.fail;
+
+import org.junit.After;
+import org.junit.Before;
 
 import org.apache.catalina.LifecycleState;
 import org.apache.catalina.connector.Connector;
@@ -45,7 +48,7 @@ import org.apache.tomcat.util.buf.ByteChunk;
  * Base test case that provides a Tomcat instance for each test - mainly so we
  * don't have to keep writing the cleanup code.
  */
-public abstract class TomcatBaseTest extends TestCase {
+public abstract class TomcatBaseTest {
     private Tomcat tomcat;
     private File tempDir;
     private boolean accessLogEnabled = false;
@@ -101,7 +104,7 @@ public abstract class TomcatBaseTest extends TestCase {
         return accessLogEnabled;
     }
 
-    @Override
+    @Before
     public void setUp() throws Exception {
         // Need to use JULI so log messages from the tests are visible
         System.setProperty("java.util.logging.manager",
@@ -169,7 +172,7 @@ public abstract class TomcatBaseTest extends TestCase {
         return protocol;
     }
 
-    @Override
+    @After
     public void tearDown() throws Exception {
         // Some tests may call tomcat.destroy(), some tests may just call
         // tomcat.stop(), some not call either method. Make sure that stop() &

==================================================
TestAbstractAjpProcessor.java
deleted file mode 100644
index 1f3c369344..0000000000
--- a/test/org/apache/catalina/startup/TomcatBaseTestJUnit4.java
+++ /dev/null
@@ -1,361 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- * 
- *      http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.catalina.startup;
-
-import java.io.BufferedInputStream;
-import java.io.File;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.OutputStream;
-import java.io.PrintWriter;
-import java.net.HttpURLConnection;
-import java.net.URL;
-import java.util.List;
-import java.util.Map;
-
-import javax.servlet.ServletException;
-import javax.servlet.http.HttpServlet;
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.http.HttpServletResponse;
-
-import static org.junit.Assert.fail;
-
-import org.junit.After;
-import org.junit.Before;
-
-import org.apache.catalina.LifecycleState;
-import org.apache.catalina.connector.Connector;
-import org.apache.catalina.core.AprLifecycleListener;
-import org.apache.catalina.core.StandardServer;
-import org.apache.catalina.valves.AccessLogValve;
-import org.apache.tomcat.util.buf.ByteChunk;
-
-/**
- * Base test case that provides a Tomcat instance for each test - mainly so we
- * don't have to keep writing the cleanup code.
- */
-public abstract class TomcatBaseTestJUnit4 {
-    private Tomcat tomcat;
-    private File tempDir;
-    private boolean accessLogEnabled = false;
-    private static int port = 8000;
-
-    public static final String TEMP_DIR = System.getProperty("java.io.tmpdir");
-
-    /**
-     * Make Tomcat instance accessible to sub-classes.
-     */
-    public Tomcat getTomcatInstance() {
-        return tomcat;
-    }
-
-    /**
-     * Sub-classes need to know port so they can connect
-     */
-    public int getPort() {
-        return port;
-    }
-    
-    /**
-     * Sub-classes may want to add connectors on a new port
-     */
-    public int getNextPort() {
-        port++;
-        return getPort();
-    }
-
-    /**
-     * Helper method that returns the path of the temporary directory used by
-     * the test runs. The directory is configured during {@link #setUp()} and is
-     * deleted at {@link #tearDown()}.
-     */
-    public File getTemporaryDirectory() {
-        return tempDir;
-    }
-
-    /**
-     * Helper method that returns the directory where Tomcat build resides. It
-     * is used to access resources that are part of default Tomcat deployment.
-     * E.g. the examples webapp.
-     */
-    public File getBuildDirectory() {
-        return new File(System.getProperty("tomcat.test.tomcatbuild",
-                "output/build"));
-    }
-
-    /**
-     * Sub-classes may want to check, whether an AccessLogValve is active
-     */
-    public boolean isAccessLogEnabled() {
-        return accessLogEnabled;
-    }
-
-    @Before
-    public void setUp() throws Exception {
-        // Need to use JULI so log messages from the tests are visible
-        System.setProperty("java.util.logging.manager",
-                "org.apache.juli.ClassLoaderLogManager");
-        System.setProperty("java.util.logging.config.file", new File(
-                getBuildDirectory(), "conf/logging.properties").toString());
-
-        tempDir = new File(System.getProperty("tomcat.test.temp", "output/tmp"));
-        if (!tempDir.exists() && !tempDir.mkdirs()) {
-            fail("Unable to create temporary directory for test");
-        }
-        
-        System.setProperty("catalina.base", tempDir.getAbsolutePath());
-        // Trigger loading of catalina.properties
-        CatalinaProperties.getProperty("foo");
-        
-        File appBase = new File(tempDir, "webapps");
-        if (!appBase.exists() && !appBase.mkdir()) {
-            fail("Unable to create appBase for test");
-        }
-        
-        tomcat = new Tomcat();
-
-        String protocol = getProtocol();
-        Connector connector = new Connector(protocol);
-        // If each test is running on same port - they
-        // may interfere with each other
-        connector.setPort(getNextPort());
-        // Mainly set to reduce timeouts during async tests
-        connector.setAttribute("connectionTimeout", "3000");
-        tomcat.getService().addConnector(connector);
-        tomcat.setConnector(connector);
-
-        // Add AprLifecycleListener if we are using the Apr connector
-        if (protocol.contains("Apr")) {
-            StandardServer server = (StandardServer) tomcat.getServer();
-            AprLifecycleListener listener = new AprLifecycleListener();
-            listener.setSSLRandomSeed("/dev/urandom");
-            server.addLifecycleListener(listener);
-            connector.setAttribute("pollerThreadCount", Integer.valueOf(1));
-        }
-        
-        tomcat.setBaseDir(tempDir.getAbsolutePath());
-        tomcat.getHost().setAppBase(appBase.getAbsolutePath());
-
-        accessLogEnabled = Boolean.parseBoolean(
-            System.getProperty("tomcat.test.accesslog", "false"));
-        if (accessLogEnabled) {
-            AccessLogValve alv = new AccessLogValve();
-            alv.setDirectory(getBuildDirectory() + "/logs");
-            alv.setPattern("%h %l %u %t \"%r\" %s %b %I %D");
-            tomcat.getHost().getPipeline().addValve(alv);
-        }
-    }
-    
-    protected String getProtocol() {
-        // Has a protocol been specified
-        String protocol = System.getProperty("tomcat.test.protocol");
-        
-        // Use BIO by default
-        if (protocol == null) {
-            protocol = "org.apache.coyote.http11.Http11Protocol";
-        }
-
-        return protocol;
-    }
-
-    @After
-    public void tearDown() throws Exception {
-        // Some tests may call tomcat.destroy(), some tests may just call
-        // tomcat.stop(), some not call either method. Make sure that stop() &
-        // destroy() are called as necessary.
-        if (tomcat.server != null &&
-                tomcat.server.getState() != LifecycleState.DESTROYED) {
-            if (tomcat.server.getState() != LifecycleState.STOPPED) {
-                tomcat.stop();
-            }
-            tomcat.destroy();
-        }
-        ExpandWar.delete(tempDir);
-    }
-    
-    /**
-     * Simple Hello World servlet for use by test cases
-     */
-    public static final class HelloWorldServlet extends HttpServlet {
-
-        private static final long serialVersionUID = 1L;
-
-        public static final String RESPONSE_TEXT =
-            "<html><body><p>Hello World</p></body></html>";
-
-        @Override
-        protected void doGet(HttpServletRequest req, HttpServletResponse resp)
-                throws ServletException, IOException {
-            PrintWriter out = resp.getWriter();
-            out.print(RESPONSE_TEXT);
-        }
-    }
-    
-
-    /**
-     *  Wrapper for getting the response.
-     */
-    public static ByteChunk getUrl(String path) throws IOException {
-        ByteChunk out = new ByteChunk();
-        getUrl(path, out, null);
-        return out;
-    }
-
-    public static int getUrl(String path, ByteChunk out,
-            Map<String, List<String>> resHead) throws IOException {
-        return getUrl(path, out, null, resHead);
-    }
-
-    public static int getUrl(String path, ByteChunk out,
-            Map<String, List<String>> reqHead,
-            Map<String, List<String>> resHead) throws IOException {
-        return getUrl(path, out, 1000000, reqHead, resHead);
-    }
-    
-    public static int getUrl(String path, ByteChunk out, int readTimeout,
-            Map<String, List<String>> reqHead,
-            Map<String, List<String>> resHead) throws IOException {
-
-        URL url = new URL(path);
-        HttpURLConnection connection = 
-            (HttpURLConnection) url.openConnection();
-        connection.setUseCaches(false);
-        connection.setReadTimeout(readTimeout);
-        if (reqHead != null) {
-            for (Map.Entry<String, List<String>> entry : reqHead.entrySet()) {
-                StringBuilder valueList = new StringBuilder();
-                for (String value : entry.getValue()) {
-                    if (valueList.length() > 0) {
-                        valueList.append(',');
-                    }
-                    valueList.append(value);
-                }
-                connection.setRequestProperty(entry.getKey(),
-                        valueList.toString());
-            }
-        }
-        connection.connect();
-        int rc = connection.getResponseCode();
-        if (resHead != null) {
-            Map<String, List<String>> head = connection.getHeaderFields();
-            resHead.putAll(head);
-        }
-        if (rc == HttpServletResponse.SC_OK) {
-            InputStream is = connection.getInputStream();
-            BufferedInputStream bis = null;
-            try {
-                bis = new BufferedInputStream(is);
-                byte[] buf = new byte[2048];
-                int rd = 0;
-                while((rd = bis.read(buf)) > 0) {
-                    out.append(buf, 0, rd);
-                }
-            } finally {
-                if (bis != null) {
-                    try {
-                        bis.close();
-                    } catch (IOException e) {
-                        // Ignore
-                    }
-                }
-            }
-        }
-        return rc;
-    }
-    
-    public static ByteChunk postUrl(byte[] body, String path)
-            throws IOException {
-        ByteChunk out = new ByteChunk();
-        postUrl(body, path, out, null);
-        return out;
-    }
-
-    public static int postUrl(byte[] body, String path, ByteChunk out,
-            Map<String, List<String>> resHead) throws IOException {
-        return postUrl(body, path, out, null, resHead);
-    }
-    
-    public static int postUrl(byte[] body, String path, ByteChunk out,
-            Map<String, List<String>> reqHead,
-            Map<String, List<String>> resHead) throws IOException {
-
-        URL url = new URL(path);
-        HttpURLConnection connection = 
-            (HttpURLConnection) url.openConnection();
-        connection.setDoOutput(true);
-        connection.setReadTimeout(1000000);
-        if (reqHead != null) {
-            for (Map.Entry<String, List<String>> entry : reqHead.entrySet()) {
-                StringBuilder valueList = new StringBuilder();
-                for (String value : entry.getValue()) {
-                    if (valueList.length() > 0) {
-                        valueList.append(',');
-                    }
-                    valueList.append(value);
-                }
-                connection.setRequestProperty(entry.getKey(),
-                        valueList.toString());
-            }
-        }
-        connection.connect();
-        
-        // Write the request body
-        OutputStream os = null;
-        try {
-            os = connection.getOutputStream();
-            if (body != null) {
-                os.write(body, 0, body.length);
-            }
-        } finally {
-            if (os != null) {
-                try {
-                    os.close();
-                } catch (IOException ioe) {
-                    // Ignore
-                }
-            }
-        }
-
-        int rc = connection.getResponseCode();
-        if (resHead != null) {
-            Map<String, List<String>> head = connection.getHeaderFields();
-            resHead.putAll(head);
-        }
-        if (rc == HttpServletResponse.SC_OK) {
-            InputStream is = connection.getInputStream();
-            BufferedInputStream bis = null;
-            try {
-                bis = new BufferedInputStream(is);
-                byte[] buf = new byte[2048];
-                int rd = 0;
-                while((rd = bis.read(buf)) > 0) {
-                    out.append(buf, 0, rd);
-                }
-            } finally {
-                if (bis != null) {
-                    try {
-                        bis.close();
-                    } catch (IOException e) {
-                        // Ignore
-                    }
-                }
-            }
-        }
-        return rc;
-    }
-
-}

==================================================
TestAbstractHttp11Processor.java
index 192137c542..0112c8e603 100644
--- a/test/org/apache/coyote/ajp/TestAbstractAjpProcessor.java
+++ b/test/org/apache/coyote/ajp/TestAbstractAjpProcessor.java
@@ -22,9 +22,9 @@ import static org.junit.Assert.assertTrue;
 import org.junit.Test;
 
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 
-public class TestAbstractAjpProcessor extends TomcatBaseTestJUnit4 {
+public class TestAbstractAjpProcessor extends TomcatBaseTest {
 
     @Override
     protected String getProtocol() {

==================================================
TestInternalInputBuffer.java
index f2c7fc1da1..37da2fa084 100644
--- a/test/org/apache/coyote/http11/TestAbstractHttp11Processor.java
+++ b/test/org/apache/coyote/http11/TestAbstractHttp11Processor.java
@@ -29,9 +29,9 @@ import org.apache.catalina.Context;
 import org.apache.catalina.startup.SimpleHttpClient;
 import org.apache.catalina.startup.TesterServlet;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 
-public class TestAbstractHttp11Processor extends TomcatBaseTestJUnit4 {
+public class TestAbstractHttp11Processor extends TomcatBaseTest {
 
     @Test
     public void testWithTEVoid() throws Exception {

==================================================
TestChunkedInputFilter.java
index 074726ccd0..6e61a916a4 100644
--- a/test/org/apache/coyote/http11/TestInternalInputBuffer.java
+++ b/test/org/apache/coyote/http11/TestInternalInputBuffer.java
@@ -34,9 +34,9 @@ import org.apache.catalina.Context;
 import org.apache.catalina.connector.Connector;
 import org.apache.catalina.startup.SimpleHttpClient;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 
-public class TestInternalInputBuffer extends TomcatBaseTestJUnit4 {
+public class TestInternalInputBuffer extends TomcatBaseTest {
     
     /**
      * Test case for https://issues.apache.org/bugzilla/show_bug.cgi?id=48839

==================================================
TestELInJsp.java
index 83d02da59f..b18ffbafcd 100644
--- a/test/org/apache/coyote/http11/filters/TestChunkedInputFilter.java
+++ b/test/org/apache/coyote/http11/filters/TestChunkedInputFilter.java
@@ -34,9 +34,9 @@ import org.junit.Test;
 import org.apache.catalina.Context;
 import org.apache.catalina.startup.SimpleHttpClient;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 
-public class TestChunkedInputFilter extends TomcatBaseTestJUnit4 {
+public class TestChunkedInputFilter extends TomcatBaseTest {
 
     @Test
     public void testTrailingHeaders() throws Exception {

==================================================
TestCompiler.java
index 56f440fc9c..bb38e46813 100644
--- a/test/org/apache/el/TestELInJsp.java
+++ b/test/org/apache/el/TestELInJsp.java
@@ -24,7 +24,7 @@ import static org.junit.Assert.assertTrue;
 import org.junit.Test;
 
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
 
 /**
@@ -32,7 +32,7 @@ import org.apache.tomcat.util.buf.ByteChunk;
  * tests may be found in {@link TestELEvaluation} and
  * {@link org.apache.jasper.compiler.TestAttributeParser}.
  */
-public class TestELInJsp extends TomcatBaseTestJUnit4 {
+public class TestELInJsp extends TomcatBaseTest {
 
     @Test
     public void testBug36923() throws Exception {

==================================================
TestGenerator.java
index 500d4c6cf6..47af1e5eea 100644
--- a/test/org/apache/jasper/compiler/TestCompiler.java
+++ b/test/org/apache/jasper/compiler/TestCompiler.java
@@ -27,10 +27,10 @@ import static org.junit.Assert.assertTrue;
 import org.junit.Test;
 
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
 
-public class TestCompiler extends TomcatBaseTestJUnit4 {
+public class TestCompiler extends TomcatBaseTest {
 
     @Test
     public void testBug49726a() throws Exception {

==================================================
TestJspConfig.java
index 9e803627bf..29d494d4d3 100644
--- a/test/org/apache/jasper/compiler/TestGenerator.java
+++ b/test/org/apache/jasper/compiler/TestGenerator.java
@@ -37,10 +37,10 @@ import org.junit.Test;
 
 import org.apache.catalina.core.StandardContext;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
 
-public class TestGenerator extends TomcatBaseTestJUnit4 {
+public class TestGenerator extends TomcatBaseTest {
 
     @Test
     public void testBug45015a() throws Exception {

==================================================
TestJspDocumentParser.java
index 18ea8c3a70..cdd340a151 100644
--- a/test/org/apache/jasper/compiler/TestJspConfig.java
+++ b/test/org/apache/jasper/compiler/TestJspConfig.java
@@ -24,10 +24,10 @@ import static org.junit.Assert.assertTrue;
 import org.junit.Test;
 
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
 
-public class TestJspConfig extends TomcatBaseTestJUnit4 {
+public class TestJspConfig extends TomcatBaseTest {
 
     @Test
     public void testServlet23NoEL() throws Exception {

==================================================
TestParser.java
index e03c5fb4be..7f3a123b03 100644
--- a/test/org/apache/jasper/compiler/TestJspDocumentParser.java
+++ b/test/org/apache/jasper/compiler/TestJspDocumentParser.java
@@ -28,10 +28,10 @@ import static org.junit.Assert.assertNull;
 import org.junit.Test;
 
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
 
-public class TestJspDocumentParser extends TomcatBaseTestJUnit4 {
+public class TestJspDocumentParser extends TomcatBaseTest {
 
     @Test
     public void testBug47977() throws Exception {

==================================================
TestParserNoStrictWhitespace.java
index 06f1888093..13d8fa61b3 100644
--- a/test/org/apache/jasper/compiler/TestParser.java
+++ b/test/org/apache/jasper/compiler/TestParser.java
@@ -27,14 +27,14 @@ import static org.junit.Assert.assertTrue;
 import org.junit.Test;
 
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
 
 /**
  * Tests are duplicated in {@link TestParserNoStrictWhitespace} with the strict
  * whitespace parsing disabled.
  */
-public class TestParser extends TomcatBaseTestJUnit4 {
+public class TestParser extends TomcatBaseTest {
 
     @Test
     public void testBug48627() throws Exception {

==================================================
TestScriptingVariabler.java
index c1180987c0..5d03012cae 100644
--- a/test/org/apache/jasper/compiler/TestParserNoStrictWhitespace.java
+++ b/test/org/apache/jasper/compiler/TestParserNoStrictWhitespace.java
@@ -27,14 +27,14 @@ import static org.junit.Assert.assertTrue;
 import org.junit.Test;
 
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
 
 /**
  * Tests are duplicated in {@link TestParser} with the strict whitespace parsing
  * enabled by default.
  */
-public class TestParserNoStrictWhitespace extends TomcatBaseTestJUnit4 {
+public class TestParserNoStrictWhitespace extends TomcatBaseTest {
     
     @Override
     public void setUp() throws Exception {

==================================================
TestValidator.java
index 9a74915db7..0eaf2be3e3 100644
--- a/test/org/apache/jasper/compiler/TestScriptingVariabler.java
+++ b/test/org/apache/jasper/compiler/TestScriptingVariabler.java
@@ -30,9 +30,9 @@ import static org.junit.Assert.assertNull;
 import org.junit.Test;
 
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 
-public class TestScriptingVariabler extends TomcatBaseTestJUnit4 {
+public class TestScriptingVariabler extends TomcatBaseTest {
 
     @Test
     public void testBug42390() throws Exception {

==================================================
TestNamingContext.java
index 3c1091518b..c019d8bd47 100644
--- a/test/org/apache/jasper/compiler/TestValidator.java
+++ b/test/org/apache/jasper/compiler/TestValidator.java
@@ -30,10 +30,10 @@ import static org.junit.Assert.assertTrue;
 import org.junit.Test;
 
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
 
-public class TestValidator extends TomcatBaseTestJUnit4 {
+public class TestValidator extends TomcatBaseTest {
 
     @Test
     public void testBug47331() throws Exception {

==================================================
TestProxyDirContext.java
index 3726e6fbf0..64720ec25b 100644
--- a/test/org/apache/naming/resources/TestNamingContext.java
+++ b/test/org/apache/naming/resources/TestNamingContext.java
@@ -36,10 +36,10 @@ import org.junit.Test;
 import org.apache.catalina.core.StandardContext;
 import org.apache.catalina.deploy.ContextResource;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
 
-public class TestNamingContext extends TomcatBaseTestJUnit4 {
+public class TestNamingContext extends TomcatBaseTest {
 
     @Test
     public void testLookupSingletonResource() throws Exception {

==================================================
TestWarDirContext.java
index d466b06fa4..6ddb1153d9 100644
--- a/test/org/apache/naming/resources/TestProxyDirContext.java
+++ b/test/org/apache/naming/resources/TestProxyDirContext.java
@@ -24,14 +24,14 @@ import org.junit.Test;
 
 import org.apache.catalina.core.StandardContext;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 
 /**
  * Unit test for the {@link ProxyDirContext}.
  * @author Marc Guillemot
  * @version $Revision: $
  */
-public class TestProxyDirContext extends TomcatBaseTestJUnit4 {
+public class TestProxyDirContext extends TomcatBaseTest {
 
     /**
      * lookup doesn't always throw the same exception.

==================================================
CookiesBaseTest.java
index 24898a8fb7..7215dc4292 100644
--- a/test/org/apache/naming/resources/TestWarDirContext.java
+++ b/test/org/apache/naming/resources/TestWarDirContext.java
@@ -25,10 +25,10 @@ import org.junit.Test;
 import org.apache.catalina.core.JreMemoryLeakPreventionListener;
 import org.apache.catalina.core.StandardContext;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
 
-public class TestWarDirContext extends TomcatBaseTestJUnit4 {
+public class TestWarDirContext extends TomcatBaseTest {
     
     @Override
     public void setUp() throws Exception {

==================================================
TestCookiesAllowEquals.java
index c559ebd6bc..166856666f 100644
--- a/test/org/apache/tomcat/util/http/CookiesBaseTest.java
+++ b/test/org/apache/tomcat/util/http/CookiesBaseTest.java
@@ -26,7 +26,7 @@ import javax.servlet.http.HttpServletResponse;
 
 import org.apache.catalina.Context;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 
 /**
  * Base Test case for {@link Cookies}. <b>Note</b> because of the use of
@@ -34,7 +34,7 @@ import org.apache.catalina.startup.TomcatBaseTestJUnit4;
  * must be executed in a new JVM instance. The tests have been place in separate
  * classes to facilitate this when running the unit tests via Ant.
  */
-public abstract class CookiesBaseTest extends TomcatBaseTestJUnit4 {
+public abstract class CookiesBaseTest extends TomcatBaseTest {
 
     /**
      * Servlet for cookie naming test.

==================================================
TestCookiesAllowHttpSeps.java
index 8f86851fb5..cf1f39da15 100644
--- a/test/org/apache/tomcat/util/http/TestCookiesAllowEquals.java
+++ b/test/org/apache/tomcat/util/http/TestCookiesAllowEquals.java
@@ -31,9 +31,9 @@ import org.junit.Test;
 import org.apache.catalina.Context;
 import org.apache.catalina.startup.SimpleHttpClient;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 
-public class TestCookiesAllowEquals extends TomcatBaseTestJUnit4 {
+public class TestCookiesAllowEquals extends TomcatBaseTest {
 
     private static final String COOKIE_WITH_EQUALS_1 = "name=equals=middle";
     private static final String COOKIE_WITH_EQUALS_2 = "name==equalsstart";

==================================================
TestCookiesAllowNameOnly.java
index 40264707ff..3cf38abcde 100644
--- a/test/org/apache/tomcat/util/http/TestCookiesAllowHttpSeps.java
+++ b/test/org/apache/tomcat/util/http/TestCookiesAllowHttpSeps.java
@@ -31,9 +31,9 @@ import org.junit.Test;
 import org.apache.catalina.Context;
 import org.apache.catalina.startup.SimpleHttpClient;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 
-public class TestCookiesAllowHttpSeps extends TomcatBaseTestJUnit4 {
+public class TestCookiesAllowHttpSeps extends TomcatBaseTest {
 
     private static final String COOKIE_WITH_SEPS = "name=val(ue";
 

==================================================
TestCookiesDisallowEquals.java
index f206f56ddb..7ab53722d2 100644
--- a/test/org/apache/tomcat/util/http/TestCookiesAllowNameOnly.java
+++ b/test/org/apache/tomcat/util/http/TestCookiesAllowNameOnly.java
@@ -31,9 +31,9 @@ import org.junit.Test;
 import org.apache.catalina.Context;
 import org.apache.catalina.startup.SimpleHttpClient;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 
-public class TestCookiesAllowNameOnly extends TomcatBaseTestJUnit4 {
+public class TestCookiesAllowNameOnly extends TomcatBaseTest {
 
     private static final String COOKIE_WITH_NAME_ONLY_1 = "bob";
     private static final String COOKIE_WITH_NAME_ONLY_2 = "bob=";

==================================================
TestMapperWelcomeFiles.java
index 9995abddb1..7796d85c04 100644
--- a/test/org/apache/tomcat/util/http/TestCookiesDisallowEquals.java
+++ b/test/org/apache/tomcat/util/http/TestCookiesDisallowEquals.java
@@ -31,9 +31,9 @@ import org.junit.Test;
 import org.apache.catalina.Context;
 import org.apache.catalina.startup.SimpleHttpClient;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 
-public class TestCookiesDisallowEquals extends TomcatBaseTestJUnit4 {
+public class TestCookiesDisallowEquals extends TomcatBaseTest {
 
     private static final String COOKIE_WITH_EQUALS = "name=value=withequals";
     private static final String COOKIE_TRUNCATED = "name=value";

==================================================
TestClientCert.java
index 095dc8fa9a..3d0e3e1ca8 100644
--- a/test/org/apache/tomcat/util/http/mapper/TestMapperWelcomeFiles.java
+++ b/test/org/apache/tomcat/util/http/mapper/TestMapperWelcomeFiles.java
@@ -33,10 +33,10 @@ import org.junit.Test;
 
 import org.apache.catalina.core.StandardContext;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
 
-public class TestMapperWelcomeFiles extends TomcatBaseTestJUnit4 {
+public class TestMapperWelcomeFiles extends TomcatBaseTest {
 
     @Test
     public void testWelcomeFileNotStrict() throws Exception {

==================================================
TestCustomSsl.java
index 2a02ef35a1..26ad81f789 100644
--- a/test/org/apache/tomcat/util/net/TestClientCert.java
+++ b/test/org/apache/tomcat/util/net/TestClientCert.java
@@ -23,7 +23,7 @@ import static org.junit.Assert.assertEquals;
 import org.junit.Test;
 
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
 
 /**
@@ -31,7 +31,7 @@ import org.apache.tomcat.util.buf.ByteChunk;
  * generated using a test CA the files for which are in the Tomcat PMC private
  * repository since not all of them are AL2 licensed.
  */
-public class TestClientCert extends TomcatBaseTestJUnit4 {
+public class TestClientCert extends TomcatBaseTest {
 
     @Test
     public void testClientCertGet() throws Exception {

==================================================
TestSsl.java
index 36fe3854bf..6f3c482ff3 100644
--- a/test/org/apache/tomcat/util/net/TestCustomSsl.java
+++ b/test/org/apache/tomcat/util/net/TestCustomSsl.java
@@ -29,7 +29,7 @@ import org.junit.Test;
 
 import org.apache.catalina.connector.Connector;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.coyote.ProtocolHandler;
 import org.apache.coyote.http11.AbstractHttp11JsseProtocol;
 import org.apache.tomcat.util.buf.ByteChunk;
@@ -40,7 +40,7 @@ import org.apache.tomcat.util.net.jsse.TesterBug50640SslImpl;
  * generated using a test CA the files for which are in the Tomcat PMC private
  * repository since not all of them are AL2 licensed.
  */
-public class TestCustomSsl extends TomcatBaseTestJUnit4 {
+public class TestCustomSsl extends TomcatBaseTest {
 
     @Test
     public void testCustomSslImplementation() throws Exception {

==================================================
TestXxxEndpoint.java
index a1751ebbfd..8e8f4b61bd 100644
--- a/test/org/apache/tomcat/util/net/TestSsl.java
+++ b/test/org/apache/tomcat/util/net/TestSsl.java
@@ -36,7 +36,7 @@ import static org.junit.Assert.fail;
 import org.junit.Test;
 
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
 
 /**
@@ -44,7 +44,7 @@ import org.apache.tomcat.util.buf.ByteChunk;
  * generated using a test CA the files for which are in the Tomcat PMC private
  * repository since not all of them are AL2 licensed.
  */
-public class TestSsl extends TomcatBaseTestJUnit4 {
+public class TestSsl extends TomcatBaseTest {
 
     @Test
     public void testSimpleSsl() throws Exception {

==================================================
TestJarScanner.java
index b71f57c7d2..b8b556713f 100644
--- a/test/org/apache/tomcat/util/net/TestXxxEndpoint.java
+++ b/test/org/apache/tomcat/util/net/TestXxxEndpoint.java
@@ -28,7 +28,7 @@ import org.junit.Test;
 
 import org.apache.catalina.connector.Connector;
 import org.apache.catalina.startup.Tomcat;
-import org.apache.catalina.startup.TomcatBaseTestJUnit4;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.jni.Address;
@@ -42,7 +42,7 @@ import org.apache.tomcat.jni.Socket;
  * Test case for the Endpoint implementations. The testing framework will ensure
  * that each implementation is tested.
  */
-public class TestXxxEndpoint extends TomcatBaseTestJUnit4 {
+public class TestXxxEndpoint extends TomcatBaseTest {
 
     private static Log log = LogFactory.getLog(TestXxxEndpoint.class);
 

==================================================
