6606281c3c208d5d00a7d9b788bf20636a3ce432
==================================================
Simplify.
==================================================
Mark Emlyn
==================================================
Tue Jun 26 20:06:21 2012 +0000
==================================================
PageContext.java
Simplify.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1354200 13f79535-47bb-0310-9956-ffa450edef68



==================================================
JspContextWrapper.java
index 598b4f086b..4689ab9a7a 100644
--- a/java/javax/servlet/jsp/PageContext.java
+++ b/java/javax/servlet/jsp/PageContext.java
@@ -216,7 +216,6 @@ public abstract class PageContext
      * @param autoFlush The value of the autoflush attribute from the page
      *     directive
      *
-     * @throws IOException during creation of JspWriter
      * @throws IllegalStateException if out not correctly initialized
      * @throws IllegalArgumentException If one of the given parameters
      *     is invalid
@@ -225,7 +224,7 @@ public abstract class PageContext
     public abstract void initialize(Servlet servlet, ServletRequest request,
         ServletResponse response, String errorPageURL, boolean needsSession,
         int bufferSize, boolean autoFlush)
-        throws IOException, IllegalStateException, IllegalArgumentException;
+        throws IllegalStateException, IllegalArgumentException;
 
     /**
      * <p>

==================================================
JspFactoryImpl.java
index b9c96ade8f..bc7de89a4e 100644
--- a/java/org/apache/jasper/runtime/JspContextWrapper.java
+++ b/java/org/apache/jasper/runtime/JspContextWrapper.java
@@ -97,7 +97,7 @@ public class JspContextWrapper extends PageContext implements VariableResolver {
     public void initialize(Servlet servlet, ServletRequest request,
             ServletResponse response, String errorPageURL,
             boolean needsSession, int bufferSize, boolean autoFlush)
-            throws IOException, IllegalStateException, IllegalArgumentException {
+            throws IllegalStateException, IllegalArgumentException {
     }
 
     @Override

==================================================
PageContextImpl.java
index 345b25a3f7..c5136cba70 100644
--- a/java/org/apache/jasper/runtime/JspFactoryImpl.java
+++ b/java/org/apache/jasper/runtime/JspFactoryImpl.java
@@ -29,7 +29,6 @@ import javax.servlet.jsp.JspFactory;
 import javax.servlet.jsp.PageContext;
 
 import org.apache.jasper.Constants;
-import org.apache.jasper.util.ExceptionUtils;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 
@@ -94,32 +93,24 @@ public class JspFactoryImpl extends JspFactory {
     private PageContext internalGetPageContext(Servlet servlet, ServletRequest request,
             ServletResponse response, String errorPageURL, boolean needsSession,
             int bufferSize, boolean autoflush) {
-        try {
-            PageContext pc;
-            if (USE_POOL) {
-                PageContextPool pool = localPool.get();
-                if (pool == null) {
-                    pool = new PageContextPool();
-                    localPool.set(pool);
-                }
-                pc = pool.get();
-                if (pc == null) {
-                    pc = new PageContextImpl();
-                }
-            } else {
-                pc = new PageContextImpl();
+
+        PageContext pc;
+        if (USE_POOL) {
+            PageContextPool pool = localPool.get();
+            if (pool == null) {
+                pool = new PageContextPool();
+                localPool.set(pool);
             }
-            pc.initialize(servlet, request, response, errorPageURL,
-                    needsSession, bufferSize, autoflush);
-            return pc;
-        } catch (Throwable ex) {
-            ExceptionUtils.handleThrowable(ex);
-            if (ex instanceof RuntimeException) {
-                throw (RuntimeException) ex;
+            pc = pool.get();
+            if (pc == null) {
+                pc = new PageContextImpl();
             }
-            log.fatal("Exception initializing page context", ex);
-            return null;
+        } else {
+            pc = new PageContextImpl();
         }
+        pc.initialize(servlet, request, response, errorPageURL,
+                needsSession, bufferSize, autoflush);
+        return pc;
     }
 
     private void internalReleasePageContext(PageContext pc) {

==================================================
