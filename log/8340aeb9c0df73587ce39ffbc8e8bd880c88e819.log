8340aeb9c0df73587ce39ffbc8e8bd880c88e819
==================================================
59910: Don't hardcode a key alias, JSSE can avoid using it.
==================================================
Remy Maucherat
==================================================
Tue Aug 2 23:13:59 2016 +0000
==================================================
SSLHostConfigCertificate.java
59910: Don't hardcode a key alias, JSSE can avoid using it.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1755009 13f79535-47bb-0310-9956-ffa450edef68



==================================================
JSSEUtil.java
index 209cce251e..ec4217e92b 100644
--- a/java/org/apache/tomcat/util/net/SSLHostConfigCertificate.java
+++ b/java/org/apache/tomcat/util/net/SSLHostConfigCertificate.java
@@ -52,7 +52,7 @@ public class SSLHostConfigCertificate implements Serializable {
     private String certificateKeyPassword = null;
 
     // JSSE
-    private String certificateKeyAlias = "tomcat";
+    private String certificateKeyAlias;
     private String certificateKeystorePassword = "changeit";
     private String certificateKeystoreFile = System.getProperty("user.home")+"/.keystore";
     private String certificateKeystoreProvider = DEFAULT_KEYSTORE_PROVIDER;

==================================================
OpenSSLContext.java
index f37cc8e85f..fff43bd5f4 100644
--- a/java/org/apache/tomcat/util/net/jsse/JSSEUtil.java
+++ b/java/org/apache/tomcat/util/net/jsse/JSSEUtil.java
@@ -206,6 +206,9 @@ public class JSSEUtil extends SSLUtilBase {
                 chain.addAll(certificateChainFile.getCertificates());
             }
 
+            if (keyAlias == null) {
+                keyAlias = "tomcat";
+            }
             ks.setKeyEntry(keyAlias, privateKeyFile.getPrivateKey(), keyPass.toCharArray(), chain.toArray(new Certificate[chain.size()]));
         }
 

==================================================
