8eced7a0a195bfb0f886c7f322369d50c09ad425
==================================================
Remove useless lock
==================================================
remm remm@apache.org
==================================================
Tue Dec 17 10:36:11 2019 +0100
==================================================
AprEndpoint.java
Remove useless lock

This will not cause any problem, but looking at the traces in 64007 the
extra locking is not necessary since it is guarded by the atomic boolean
and nothing else syncs on U.


==================================================
Nio2Endpoint.java
index ebfd51be33..b8b71e3c73 100644
--- a/java/org/apache/tomcat/util/net/AprEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AprEndpoint.java
@@ -2240,12 +2240,10 @@ public class AprEndpoint extends AbstractEndpoint<Long,Long> implements SNICallB
             getEndpoint().connections.remove(getSocket());
             socketBufferHandler = SocketBufferHandler.EMPTY;
             nonBlockingWriteBuffer.clear();
-            synchronized (closed) {
-                if (sslOutputBuffer != null) {
-                    ByteBufferUtils.cleanDirectBuffer(sslOutputBuffer);
-                }
-                ((AprEndpoint) getEndpoint()).getPoller().close(getSocket().longValue());
+            if (sslOutputBuffer != null) {
+                ByteBufferUtils.cleanDirectBuffer(sslOutputBuffer);
             }
+            ((AprEndpoint) getEndpoint()).getPoller().close(getSocket().longValue());
         }
 
 

==================================================
NioEndpoint.java
index ff5303b351..adafdad558 100644
--- a/java/org/apache/tomcat/util/net/Nio2Endpoint.java
+++ b/java/org/apache/tomcat/util/net/Nio2Endpoint.java
@@ -926,14 +926,12 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel,AsynchronousS
             }
             try {
                 getEndpoint().connections.remove(getSocket().getIOChannel());
-                synchronized (getSocket()) {
-                    if (getSocket().isOpen()) {
-                        getSocket().close(true);
-                    }
-                    if (getEndpoint().running && !getEndpoint().paused) {
-                        if (nioChannels == null || !nioChannels.push(getSocket())) {
-                            getSocket().free();
-                        }
+                if (getSocket().isOpen()) {
+                    getSocket().close(true);
+                }
+                if (getEndpoint().running && !getEndpoint().paused) {
+                    if (nioChannels == null || !nioChannels.push(getSocket())) {
+                        getSocket().free();
                     }
                 }
             } catch (Throwable e) {

==================================================
