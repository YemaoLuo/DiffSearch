5ec1108d0d50b5c3ef5ffd021dd24d694c44fee6
==================================================
Removed redundant casts
==================================================
Emmanuel Bourg
==================================================
Wed May 10 08:50:57 2017 +0000
==================================================
ApplicationContext.java
Removed redundant casts

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1794687 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ApplicationFilterConfig.java
index 9dfb694564..0186923aa4 100644
--- a/java/org/apache/catalina/core/ApplicationContext.java
+++ b/java/org/apache/catalina/core/ApplicationContext.java
@@ -1253,7 +1253,7 @@ public class ApplicationContext implements ServletContext {
 
         Container[] wrappers = context.findChildren();
         for (Container wrapper : wrappers) {
-            result.put(((Wrapper) wrapper).getName(),
+            result.put(wrapper.getName(),
                     new ApplicationServletRegistration(
                             (Wrapper) wrapper, context));
         }

==================================================
ApplicationPart.java
index 5e63b8958a..b19d673e29 100644
--- a/java/org/apache/catalina/core/ApplicationFilterConfig.java
+++ b/java/org/apache/catalina/core/ApplicationFilterConfig.java
@@ -322,7 +322,7 @@ public final class ApplicationFilterConfig implements FilterConfig, Serializable
             }
             if (!context.getIgnoreAnnotations()) {
                 try {
-                    ((StandardContext) context).getInstanceManager().destroyInstance(this.filter);
+                    context.getInstanceManager().destroyInstance(this.filter);
                 } catch (Exception e) {
                     Throwable t = ExceptionUtils
                             .unwrapInvocationTargetException(e);
@@ -343,7 +343,7 @@ public final class ApplicationFilterConfig implements FilterConfig, Serializable
     private InstanceManager getInstanceManager() {
         if (instanceManager == null) {
             if (context instanceof StandardContext) {
-                instanceManager = ((StandardContext)context).getInstanceManager();
+                instanceManager = context.getInstanceManager();
             } else {
                 instanceManager = new DefaultInstanceManager(null,
                         new HashMap<String, Map<String, String>>(),

==================================================
AsyncContextImpl.java
index 9f1ec4ea9a..d6400b5b61 100644
--- a/java/org/apache/catalina/core/ApplicationPart.java
+++ b/java/org/apache/catalina/core/ApplicationPart.java
@@ -62,7 +62,7 @@ public class ApplicationPart implements Part {
     @Override
     public String getHeader(String name) {
         if (fileItem instanceof DiskFileItem) {
-            return ((DiskFileItem) fileItem).getHeaders().getHeader(name);
+            return fileItem.getHeaders().getHeader(name);
         }
         return null;
     }
@@ -72,7 +72,7 @@ public class ApplicationPart implements Part {
         if (fileItem instanceof DiskFileItem) {
             LinkedHashSet<String> headerNames = new LinkedHashSet<>();
             Iterator<String> iter =
-                ((DiskFileItem) fileItem).getHeaders().getHeaderNames();
+                fileItem.getHeaders().getHeaderNames();
             while (iter.hasNext()) {
                 headerNames.add(iter.next());
             }
@@ -86,7 +86,7 @@ public class ApplicationPart implements Part {
         if (fileItem instanceof DiskFileItem) {
             LinkedHashSet<String> headers = new LinkedHashSet<>();
             Iterator<String> iter =
-                ((DiskFileItem) fileItem).getHeaders().getHeaders(name);
+                fileItem.getHeaders().getHeaders(name);
             while (iter.hasNext()) {
                 headers.add(iter.next());
             }

==================================================
ContainerBase.java
index f4d9632a6a..034195c438 100644
--- a/java/org/apache/catalina/core/AsyncContextImpl.java
+++ b/java/org/apache/catalina/core/AsyncContextImpl.java
@@ -486,7 +486,7 @@ public class AsyncContextImpl implements AsyncContext, AsyncContextCallback {
     private InstanceManager getInstanceManager() {
         if (instanceManager == null) {
             if (context instanceof StandardContext) {
-                instanceManager = ((StandardContext)context).getInstanceManager();
+                instanceManager = context.getInstanceManager();
             } else {
                 instanceManager = new DefaultInstanceManager(null,
                         new HashMap<String, Map<String, String>>(),

==================================================
StandardWrapper.java
index a6344afd69..04dcd713e3 100644
--- a/java/org/apache/catalina/core/ContainerBase.java
+++ b/java/org/apache/catalina/core/ContainerBase.java
@@ -1274,7 +1274,7 @@ public abstract class ContainerBase extends LifecycleMBeanBase
         List<ObjectName> names = new ArrayList<>(children.size());
         for (Container next : children.values()) {
             if (next instanceof ContainerBase) {
-                names.add(((ContainerBase)next).getObjectName());
+                names.add(next.getObjectName());
             }
         }
         return names.toArray(new ObjectName[names.size()]);

==================================================
DeltaManager.java
index 1425cf17d9..6e66aa57d6 100644
--- a/java/org/apache/catalina/core/StandardWrapper.java
+++ b/java/org/apache/catalina/core/StandardWrapper.java
@@ -1711,7 +1711,7 @@ public class StandardWrapper extends ContainerBase
             keyProperties.append(hostName);
         }
 
-        String contextName = ((Context) getParent()).getName();
+        String contextName = getParent().getName();
         if (!contextName.startsWith("/")) {
             keyProperties.append('/');
         }

==================================================
ReplicationValve.java
index 95cae42428..e7344e0a35 100644
--- a/java/org/apache/catalina/ha/session/DeltaManager.java
+++ b/java/org/apache/catalina/ha/session/DeltaManager.java
@@ -758,14 +758,14 @@ public class DeltaManager extends ClusterManagerBase{
                     for (SessionMessage smsg : receivedMessageQueue) {
                         if (!stateTimestampDrop) {
                             messageReceived(smsg,
-                                    smsg.getAddress() != null ? (Member) smsg.getAddress() : null);
+                                    smsg.getAddress() != null ? smsg.getAddress() : null);
                         } else {
                             if (smsg.getEventType() != SessionMessage.EVT_GET_ALL_SESSIONS &&
                                     smsg.getTimestamp() >= stateTransferCreateSendTime) {
                                 // FIXME handle EVT_GET_ALL_SESSIONS later
                                 messageReceived(smsg,
                                         smsg.getAddress() != null ?
-                                                (Member) smsg.getAddress() :
+                                                smsg.getAddress() :
                                                 null);
                             } else {
                                 if (log.isWarnEnabled()) {
@@ -917,7 +917,7 @@ public class DeltaManager extends ClusterManagerBase{
                     break;
             } //switch
 
-            messageReceived(msg, msg.getAddress() != null ? (Member) msg.getAddress() : null);
+            messageReceived(msg, msg.getAddress() != null ? msg.getAddress() : null);
         }
     }
 

==================================================
WebappLoader.java
index f911f2d07e..e2c35627d7 100644
--- a/java/org/apache/catalina/ha/tcp/ReplicationValve.java
+++ b/java/org/apache/catalina/ha/tcp/ReplicationValve.java
@@ -310,7 +310,7 @@ public class ReplicationValve
         Context context = request.getContext();
         boolean isCrossContext = context != null
                 && context instanceof StandardContext
-                && ((StandardContext) context).getCrossContext();
+                && context.getCrossContext();
         try {
             if(isCrossContext) {
                 if(log.isDebugEnabled()) {

==================================================
HostManagerServlet.java
index c28c370631..ad9bccd3e2 100644
--- a/java/org/apache/catalina/loader/WebappLoader.java
+++ b/java/org/apache/catalina/loader/WebappLoader.java
@@ -33,7 +33,6 @@ import javax.servlet.ServletContext;
 
 import org.apache.catalina.Context;
 import org.apache.catalina.Globals;
-import org.apache.catalina.Lifecycle;
 import org.apache.catalina.LifecycleException;
 import org.apache.catalina.LifecycleState;
 import org.apache.catalina.Loader;
@@ -396,7 +395,7 @@ public class WebappLoader extends LifecycleMBeanBase
 
             setPermissions();
 
-            ((Lifecycle) classLoader).start();
+            classLoader.start();
 
             String contextName = context.getName();
             if (!contextName.startsWith("/")) {

==================================================
MapperListener.java
index 617bf707bf..c27e0d06b6 100644
--- a/java/org/apache/catalina/manager/host/HostManagerServlet.java
+++ b/java/org/apache/catalina/manager/host/HostManagerServlet.java
@@ -479,7 +479,7 @@ public class HostManagerServlet
         try {
             Container child = engine.findChild(name);
             engine.removeChild(child);
-            if ( child instanceof ContainerBase ) ((ContainerBase)child).destroy();
+            if ( child instanceof ContainerBase ) child.destroy();
         } catch (Exception e) {
             writer.println(smClient.getString("hostManagerServlet.exception",
                     e.toString()));

==================================================
MBeanFactory.java
index 4df71cedfb..51716ef62c 100644
--- a/java/org/apache/catalina/mapper/MapperListener.java
+++ b/java/org/apache/catalina/mapper/MapperListener.java
@@ -131,7 +131,7 @@ public class MapperListener extends LifecycleMBeanBase
     @Override
     protected String getDomainInternal() {
         if (service instanceof LifecycleMBeanBase) {
-            return ((LifecycleMBeanBase) service).getDomain();
+            return service.getDomain();
         } else {
             return null;
         }

==================================================
StandardEngineSF.java
index a3755926e1..6e7143f3f6 100644
--- a/java/org/apache/catalina/mbeans/MBeanFactory.java
+++ b/java/org/apache/catalina/mbeans/MBeanFactory.java
@@ -752,7 +752,7 @@ public class MBeanFactory {
             host.removeChild(context);
             if(context instanceof StandardContext)
             try {
-                ((StandardContext)context).destroy();
+                context.destroy();
             } catch (Exception e) {
                 log.warn("Error during context [" + context.getName() + "] destroy ", e);
            }

==================================================
StandardHostSF.java
index 2316ffaa49..290e623dab 100644
--- a/java/org/apache/catalina/storeconfig/StandardEngineSF.java
+++ b/java/org/apache/catalina/storeconfig/StandardEngineSF.java
@@ -23,7 +23,6 @@ import java.util.List;
 
 import org.apache.catalina.Cluster;
 import org.apache.catalina.Container;
-import org.apache.catalina.Lifecycle;
 import org.apache.catalina.LifecycleListener;
 import org.apache.catalina.Realm;
 import org.apache.catalina.Valve;
@@ -54,8 +53,7 @@ public class StandardEngineSF extends StoreFactoryBase {
         if (aEngine instanceof StandardEngine) {
             StandardEngine engine = (StandardEngine) aEngine;
             // Store nested <Listener> elements
-            LifecycleListener listeners[] = ((Lifecycle) engine)
-                    .findLifecycleListeners();
+            LifecycleListener listeners[] = engine.findLifecycleListeners();
             storeElementArray(aWriter, indent, listeners);
 
             // Store nested <Realm> element

==================================================
StandardServerSF.java
index 19d3e10189..31368bffb1 100644
--- a/java/org/apache/catalina/storeconfig/StandardHostSF.java
+++ b/java/org/apache/catalina/storeconfig/StandardHostSF.java
@@ -23,7 +23,6 @@ import java.util.List;
 
 import org.apache.catalina.Cluster;
 import org.apache.catalina.Container;
-import org.apache.catalina.Lifecycle;
 import org.apache.catalina.LifecycleListener;
 import org.apache.catalina.Realm;
 import org.apache.catalina.Valve;
@@ -55,8 +54,7 @@ public class StandardHostSF extends StoreFactoryBase {
         if (aHost instanceof StandardHost) {
             StandardHost host = (StandardHost) aHost;
             // Store nested <Listener> elements
-            LifecycleListener listeners[] = ((Lifecycle) host)
-                    .findLifecycleListeners();
+            LifecycleListener listeners[] = host.findLifecycleListeners();
             storeElementArray(aWriter, indent, listeners);
 
             // Store nested <Alias> elements

==================================================
StandardServiceSF.java
index 1f2665c9c6..69023707e3 100644
--- a/java/org/apache/catalina/storeconfig/StandardServerSF.java
+++ b/java/org/apache/catalina/storeconfig/StandardServerSF.java
@@ -19,7 +19,6 @@ package org.apache.catalina.storeconfig;
 
 import java.io.PrintWriter;
 
-import org.apache.catalina.Lifecycle;
 import org.apache.catalina.LifecycleListener;
 import org.apache.catalina.Service;
 import org.apache.catalina.core.StandardServer;
@@ -68,8 +67,7 @@ public class StandardServerSF extends StoreFactoryBase {
         if (aObject instanceof StandardServer) {
             StandardServer server = (StandardServer) aObject;
             // Store nested <Listener> elements
-            LifecycleListener listeners[] = ((Lifecycle) server)
-                    .findLifecycleListeners();
+            LifecycleListener listeners[] = server.findLifecycleListeners();
             storeElementArray(aWriter, indent, listeners);
             /*LifecycleListener listener = null;
             for (int i = 0; listener == null && i < listeners.length; i++)

==================================================
AbstractReplicatedMap.java
index 67b6e44117..32e7779bc6 100644
--- a/java/org/apache/catalina/storeconfig/StandardServiceSF.java
+++ b/java/org/apache/catalina/storeconfig/StandardServiceSF.java
@@ -21,7 +21,6 @@ import java.io.PrintWriter;
 
 import org.apache.catalina.Engine;
 import org.apache.catalina.Executor;
-import org.apache.catalina.Lifecycle;
 import org.apache.catalina.LifecycleListener;
 import org.apache.catalina.connector.Connector;
 import org.apache.catalina.core.StandardService;
@@ -46,8 +45,7 @@ public class StandardServiceSF extends StoreFactoryBase {
         if (aService instanceof StandardService) {
             StandardService service = (StandardService) aService;
             // Store nested <Listener> elements
-            LifecycleListener listeners[] = ((Lifecycle) service)
-                    .findLifecycleListeners();
+            LifecycleListener listeners[] = service.findLifecycleListeners();
             storeElementArray(aWriter, indent, listeners);
 
             // Store nested <Executor> elements

==================================================
ExpressionBuilder.java
index 4ea22274b2..8c38712c6f 100644
--- a/java/org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java
+++ b/java/org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java
@@ -510,7 +510,7 @@ public abstract class AbstractReplicatedMap<K,V>
     public void transferState() {
         try {
             Member[] members = getMapMembers();
-            Member backup = members.length > 0 ? (Member) members[0] : null;
+            Member backup = members.length > 0 ? members[0] : null;
             if (backup != null) {
                 MapMessage msg = new MapMessage(mapContextName, getStateMessageType(), false,
                                                 null, null, null, null, null);

==================================================
Generator.java
index cde34a6735..f784d8e1f7 100644
--- a/java/org/apache/el/lang/ExpressionBuilder.java
+++ b/java/org/apache/el/lang/ExpressionBuilder.java
@@ -230,7 +230,7 @@ public final class ExpressionBuilder implements NodeVisitor {
                         "" + methodParameterCount, "" + node.jjtGetChild(0).jjtGetNumChildren()));
             }
         } else if (node instanceof AstIdentifier && this.varMapper != null) {
-            String variable = ((AstIdentifier) node).getImage();
+            String variable = node.getImage();
 
             // simply capture it
             this.varMapper.resolveVariable(variable);

==================================================
JspDocumentParser.java
index ce29953a8e..b4a369ede5 100644
--- a/java/org/apache/jasper/compiler/Generator.java
+++ b/java/org/apache/jasper/compiler/Generator.java
@@ -330,7 +330,7 @@ class Generator {
                     }
                     for (int i = 0; i < namedAttrs.size(); i++) {
                         attrNames[attrs.getLength() + i] =
-                            ((NamedAttribute) namedAttrs.getNode(i)).getQName();
+                            namedAttrs.getNode(i).getQName();
                     }
                     Arrays.sort(attrNames, Collections.reverseOrder());
                     if (attrNames.length > 0) {
@@ -3415,8 +3415,7 @@ class Generator {
                         out.printil("java.lang.String "
                                 + varName
                                 + " = "
-                                + quote(((Node.TemplateText) bodyElement)
-                                                .getText()) + ";");
+                                + quote(bodyElement.getText()) + ";");
                     }
                 }
 

==================================================
CallMethodRule.java
index 11d43f103d..ac42fdefd1 100644
--- a/java/org/apache/jasper/compiler/JspDocumentParser.java
+++ b/java/org/apache/jasper/compiler/JspDocumentParser.java
@@ -648,7 +648,7 @@ class JspDocumentParser
 
         if (current instanceof Node.NamedAttribute) {
             boolean isTrim = ((Node.NamedAttribute)current).isTrim();
-            Node.Nodes subElems = ((Node.NamedAttribute)current).getBody();
+            Node.Nodes subElems = current.getBody();
             for (int i = 0; subElems != null && i < subElems.size(); i++) {
                 Node subElem = subElems.getNode(i);
                 if (!(subElem instanceof Node.TemplateText)) {

==================================================
ObjectCreateRule.java
index 9337f2af14..8fd916d600 100644
--- a/java/org/apache/tomcat/util/digester/CallMethodRule.java
+++ b/java/org/apache/tomcat/util/digester/CallMethodRule.java
@@ -119,7 +119,7 @@ public class CallMethodRule extends Rule {
      */
     public CallMethodRule(String methodName) {
 
-        this(0, methodName, 0, (Class[]) null);
+        this(0, methodName, 0, null);
 
     }
 

==================================================
TestAsyncContextImpl.java
index 32ce1ebabb..febb1b5ec2 100644
--- a/java/org/apache/tomcat/util/digester/ObjectCreateRule.java
+++ b/java/org/apache/tomcat/util/digester/ObjectCreateRule.java
@@ -41,7 +41,7 @@ public class ObjectCreateRule extends Rule {
      */
     public ObjectCreateRule(String className) {
 
-        this(className, (String) null);
+        this(className, null);
 
     }
 

==================================================
ChannelCreator.java
index d32fb486b2..e4698458b2 100644
--- a/test/org/apache/catalina/core/TestAsyncContextImpl.java
+++ b/test/org/apache/catalina/core/TestAsyncContextImpl.java
@@ -2424,7 +2424,7 @@ public class TestAsyncContextImpl extends TomcatBaseTest {
                         HttpServletResponse response = (HttpServletResponse) event
                                 .getSuppliedResponse();
                         if (!response.isCommitted()) {
-                            ((HttpServletRequest) event.getSuppliedRequest())
+                            event.getSuppliedRequest()
                                     .setAttribute("timeout", Boolean.TRUE);
                             context.dispatch();
                         }

==================================================
TestELSupport.java
index a7a306484d..a49189336d 100644
--- a/test/org/apache/catalina/tribes/demos/ChannelCreator.java
+++ b/test/org/apache/catalina/tribes/demos/ChannelCreator.java
@@ -244,7 +244,7 @@ public class ChannelCreator {
 
 
         byte[] domain = new byte[] {1,2,3,4,5,6,7,8,9,0};
-        ((McastService)channel.getMembershipService()).setDomain(domain);
+        channel.getMembershipService().setDomain(domain);
         DomainFilterInterceptor filter = new DomainFilterInterceptor();
         filter.setDomain(domain);
         channel.addInterceptor(filter);

==================================================
