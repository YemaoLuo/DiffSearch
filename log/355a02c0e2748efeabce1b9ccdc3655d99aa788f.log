355a02c0e2748efeabce1b9ccdc3655d99aa788f
==================================================
Deprecate RuleSetBase as it has no meaningful content
==================================================
Mark Thomas
==================================================
Fri Jul 28 15:46:05 2017 +0000
==================================================
ClusterRuleSet.java
Deprecate RuleSetBase as it has no meaningful content

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1803286 13f79535-47bb-0310-9956-ffa450edef68



==================================================
MemoryRuleSet.java
index c4f80ea248..219bce2299 100644
--- a/java/org/apache/catalina/ha/ClusterRuleSet.java
+++ b/java/org/apache/catalina/ha/ClusterRuleSet.java
@@ -14,14 +14,10 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-
-
 package org.apache.catalina.ha;
 
-
 import org.apache.tomcat.util.digester.Digester;
-import org.apache.tomcat.util.digester.RuleSetBase;
-
+import org.apache.tomcat.util.digester.RuleSet;
 
 /**
  * <p><strong>RuleSet</strong> for processing the contents of a
@@ -29,7 +25,7 @@ import org.apache.tomcat.util.digester.RuleSetBase;
  *
  * @author Peter Rossbach
  */
-public class ClusterRuleSet extends RuleSetBase {
+public class ClusterRuleSet implements RuleSet {
 
 
     // ----------------------------------------------------- Instance Variables
@@ -49,9 +45,7 @@ public class ClusterRuleSet extends RuleSetBase {
      * matching pattern prefix.
      */
     public ClusterRuleSet() {
-
         this("");
-
     }
 
 
@@ -63,7 +57,6 @@ public class ClusterRuleSet extends RuleSetBase {
      *  trailing slash character)
      */
     public ClusterRuleSet(String prefix) {
-        super();
         this.prefix = prefix;
     }
 

==================================================
ContextRuleSet.java
index 8412eb70df..9a114e9787 100644
--- a/java/org/apache/catalina/realm/MemoryRuleSet.java
+++ b/java/org/apache/catalina/realm/MemoryRuleSet.java
@@ -14,29 +14,24 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-
-
 package org.apache.catalina.realm;
 
-
 import org.apache.tomcat.util.digester.Digester;
 import org.apache.tomcat.util.digester.Rule;
-import org.apache.tomcat.util.digester.RuleSetBase;
+import org.apache.tomcat.util.digester.RuleSet;
 import org.xml.sax.Attributes;
 
-
 /**
  * <p><strong>RuleSet</strong> for recognizing the users defined in the
  * XML file processed by <code>MemoryRealm</code>.</p>
  *
  * @author Craig R. McClanahan
  */
-public class MemoryRuleSet extends RuleSetBase {
+public class MemoryRuleSet implements RuleSet {
 
 
     // ----------------------------------------------------- Instance Variables
 
-
     /**
      * The matching pattern prefix to use for recognizing our elements.
      */
@@ -45,15 +40,12 @@ public class MemoryRuleSet extends RuleSetBase {
 
     // ------------------------------------------------------------ Constructor
 
-
     /**
      * Construct an instance of this <code>RuleSet</code> with the default
      * matching pattern prefix.
      */
     public MemoryRuleSet() {
-
         this("tomcat-users/");
-
     }
 
 
@@ -65,7 +57,6 @@ public class MemoryRuleSet extends RuleSetBase {
      *  trailing slash character)
      */
     public MemoryRuleSet(String prefix) {
-        super();
         this.prefix = prefix;
     }
 

==================================================
CredentialHandlerRuleSet.java
index 2d7bb4c5ab..3476317e65 100644
--- a/java/org/apache/catalina/startup/ContextRuleSet.java
+++ b/java/org/apache/catalina/startup/ContextRuleSet.java
@@ -14,14 +14,10 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-
-
 package org.apache.catalina.startup;
 
-
 import org.apache.tomcat.util.digester.Digester;
-import org.apache.tomcat.util.digester.RuleSetBase;
-
+import org.apache.tomcat.util.digester.RuleSet;
 
 /**
  * <p><strong>RuleSet</strong> for processing the contents of a
@@ -29,12 +25,10 @@ import org.apache.tomcat.util.digester.RuleSetBase;
  *
  * @author Craig R. McClanahan
  */
-public class ContextRuleSet extends RuleSetBase {
-
+public class ContextRuleSet implements RuleSet {
 
     // ----------------------------------------------------- Instance Variables
 
-
     /**
      * The matching pattern prefix to use for recognizing our elements.
      */
@@ -49,7 +43,6 @@ public class ContextRuleSet extends RuleSetBase {
 
     // ------------------------------------------------------------ Constructor
 
-
     /**
      * Construct an instance of this <code>RuleSet</code> with the default
      * matching pattern prefix.
@@ -88,7 +81,6 @@ public class ContextRuleSet extends RuleSetBase {
 
     // --------------------------------------------------------- Public Methods
 
-
     /**
      * <p>Add the set of Rule instances defined in this RuleSet to the
      * specified <code>Digester</code> instance, associating them with
@@ -249,5 +241,4 @@ public class ContextRuleSet extends RuleSetBase {
                             "setCookieProcessor",
                             "org.apache.tomcat.util.http.CookieProcessor");
     }
-
 }

==================================================
EngineRuleSet.java
index a5b53532e4..5742178ea2 100644
--- a/java/org/apache/catalina/startup/CredentialHandlerRuleSet.java
+++ b/java/org/apache/catalina/startup/CredentialHandlerRuleSet.java
@@ -17,7 +17,7 @@
 package org.apache.catalina.startup;
 
 import org.apache.tomcat.util.digester.Digester;
-import org.apache.tomcat.util.digester.RuleSetBase;
+import org.apache.tomcat.util.digester.RuleSet;
 
 /**
  * <p><strong>RuleSet</strong> for processing the contents of a
@@ -25,7 +25,7 @@ import org.apache.tomcat.util.digester.RuleSetBase;
  * CredentialHandler such as the <code>NestedCredentialHandler</code> that used
  * nested CredentialHandlers.</p>
  */
-public class CredentialHandlerRuleSet extends RuleSetBase {
+public class CredentialHandlerRuleSet implements RuleSet {
 
 
     private static final int MAX_NESTED_LEVELS = Integer.getInteger(

==================================================
HostRuleSet.java
index 0d3825273d..f98e285a86 100644
--- a/java/org/apache/catalina/startup/EngineRuleSet.java
+++ b/java/org/apache/catalina/startup/EngineRuleSet.java
@@ -14,14 +14,10 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-
-
 package org.apache.catalina.startup;
 
-
 import org.apache.tomcat.util.digester.Digester;
-import org.apache.tomcat.util.digester.RuleSetBase;
-
+import org.apache.tomcat.util.digester.RuleSet;
 
 /**
  * <p><strong>RuleSet</strong> for processing the contents of a
@@ -31,12 +27,10 @@ import org.apache.tomcat.util.digester.RuleSetBase;
  *
  * @author Craig R. McClanahan
  */
-public class EngineRuleSet extends RuleSetBase {
-
+public class EngineRuleSet implements RuleSet {
 
     // ----------------------------------------------------- Instance Variables
 
-
     /**
      * The matching pattern prefix to use for recognizing our elements.
      */
@@ -45,7 +39,6 @@ public class EngineRuleSet extends RuleSetBase {
 
     // ------------------------------------------------------------ Constructor
 
-
     /**
      * Construct an instance of this <code>RuleSet</code> with the default
      * matching pattern prefix.
@@ -69,7 +62,6 @@ public class EngineRuleSet extends RuleSetBase {
 
     // --------------------------------------------------------- Public Methods
 
-
     /**
      * <p>Add the set of Rule instances defined in this RuleSet to the
      * specified <code>Digester</code> instance, associating them with
@@ -122,8 +114,5 @@ public class EngineRuleSet extends RuleSetBase {
         digester.addSetNext(prefix + "Engine/Valve",
                             "addValve",
                             "org.apache.catalina.Valve");
-
     }
-
-
 }

==================================================
NamingRuleSet.java
index ab687b7ff0..3114cc1f9a 100644
--- a/java/org/apache/catalina/startup/HostRuleSet.java
+++ b/java/org/apache/catalina/startup/HostRuleSet.java
@@ -14,14 +14,10 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-
-
 package org.apache.catalina.startup;
 
-
 import org.apache.tomcat.util.digester.Digester;
-import org.apache.tomcat.util.digester.RuleSetBase;
-
+import org.apache.tomcat.util.digester.RuleSet;
 
 /**
  * <p><strong>RuleSet</strong> for processing the contents of a
@@ -31,12 +27,10 @@ import org.apache.tomcat.util.digester.RuleSetBase;
  *
  * @author Craig R. McClanahan
  */
-public class HostRuleSet extends RuleSetBase {
-
+public class HostRuleSet implements RuleSet {
 
     // ----------------------------------------------------- Instance Variables
 
-
     /**
      * The matching pattern prefix to use for recognizing our elements.
      */
@@ -45,7 +39,6 @@ public class HostRuleSet extends RuleSetBase {
 
     // ------------------------------------------------------------ Constructor
 
-
     /**
      * Construct an instance of this <code>RuleSet</code> with the default
      * matching pattern prefix.
@@ -69,7 +62,6 @@ public class HostRuleSet extends RuleSetBase {
 
     // --------------------------------------------------------- Public Methods
 
-
     /**
      * <p>Add the set of Rule instances defined in this RuleSet to the
      * specified <code>Digester</code> instance, associating them with
@@ -126,8 +118,5 @@ public class HostRuleSet extends RuleSetBase {
         digester.addSetNext(prefix + "Host/Valve",
                             "addValve",
                             "org.apache.catalina.Valve");
-
     }
-
-
 }

==================================================
RealmRuleSet.java
index 3e617b871d..dc5fbb33a5 100644
--- a/java/org/apache/catalina/startup/NamingRuleSet.java
+++ b/java/org/apache/catalina/startup/NamingRuleSet.java
@@ -14,14 +14,10 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-
-
 package org.apache.catalina.startup;
 
-
 import org.apache.tomcat.util.digester.Digester;
-import org.apache.tomcat.util.digester.RuleSetBase;
-
+import org.apache.tomcat.util.digester.RuleSet;
 
 /**
  * <p><strong>RuleSet</strong> for processing the JNDI Enterprise Naming
@@ -30,12 +26,10 @@ import org.apache.tomcat.util.digester.RuleSetBase;
  * @author Craig R. McClanahan
  * @author Remy Maucherat
  */
-public class NamingRuleSet extends RuleSetBase {
-
+public class NamingRuleSet implements RuleSet {
 
     // ----------------------------------------------------- Instance Variables
 
-
     /**
      * The matching pattern prefix to use for recognizing our elements.
      */
@@ -44,7 +38,6 @@ public class NamingRuleSet extends RuleSetBase {
 
     // ------------------------------------------------------------ Constructor
 
-
     /**
      * Construct an instance of this <code>RuleSet</code> with the default
      * matching pattern prefix.
@@ -68,7 +61,6 @@ public class NamingRuleSet extends RuleSetBase {
 
     // --------------------------------------------------------- Public Methods
 
-
     /**
      * <p>Add the set of Rule instances defined in this RuleSet to the
      * specified <code>Digester</code> instance, associating them with
@@ -129,8 +121,5 @@ public class NamingRuleSet extends RuleSetBase {
         digester.addRule(prefix + "Transaction",
                 new SetNextNamingRule("setTransaction",
                             "org.apache.tomcat.util.descriptor.web.ContextTransaction"));
-
     }
-
-
 }

==================================================
TagPluginParser.java
index 9bf9792c51..eb6cfa6521 100644
--- a/java/org/apache/catalina/startup/RealmRuleSet.java
+++ b/java/org/apache/catalina/startup/RealmRuleSet.java
@@ -14,29 +14,24 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-
-
 package org.apache.catalina.startup;
 
-
 import org.apache.tomcat.util.digester.Digester;
-import org.apache.tomcat.util.digester.RuleSetBase;
-
+import org.apache.tomcat.util.digester.RuleSet;
 
 /**
  * <p><strong>RuleSet</strong> for processing the contents of a Realm definition
  * element.  This <code>RuleSet</code> supports Realms such as the
  * <code>CombinedRealm</code> that used nested Realms.</p>
  */
-public class RealmRuleSet extends RuleSetBase {
-
+public class RealmRuleSet implements RuleSet {
 
     private static final int MAX_NESTED_REALM_LEVELS = Integer.getInteger(
             "org.apache.catalina.startup.RealmRuleSet.MAX_NESTED_REALM_LEVELS",
             3).intValue();
 
-    // ----------------------------------------------------- Instance Variables
 
+    // ----------------------------------------------------- Instance Variables
 
     /**
      * The matching pattern prefix to use for recognizing our elements.
@@ -46,7 +41,6 @@ public class RealmRuleSet extends RuleSetBase {
 
     // ------------------------------------------------------------ Constructor
 
-
     /**
      * Construct an instance of this <code>RuleSet</code> with the default
      * matching pattern prefix.
@@ -70,7 +64,6 @@ public class RealmRuleSet extends RuleSetBase {
 
     // --------------------------------------------------------- Public Methods
 
-
     /**
      * <p>Add the set of Rule instances defined in this RuleSet to the
      * specified <code>Digester</code> instance, associating them with

==================================================
ImplicitTldRuleSet.java
index b3be866b1e..80530d6d66 100644
--- a/java/org/apache/tomcat/util/descriptor/tagplugin/TagPluginParser.java
+++ b/java/org/apache/tomcat/util/descriptor/tagplugin/TagPluginParser.java
@@ -29,7 +29,7 @@ import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.descriptor.DigesterFactory;
 import org.apache.tomcat.util.descriptor.XmlErrorHandler;
 import org.apache.tomcat.util.digester.Digester;
-import org.apache.tomcat.util.digester.RuleSetBase;
+import org.apache.tomcat.util.digester.RuleSet;
 import org.xml.sax.InputSource;
 import org.xml.sax.SAXException;
 
@@ -78,7 +78,7 @@ public class TagPluginParser {
         return plugins;
     }
 
-    private static class TagPluginRuleSet extends RuleSetBase {
+    private static class TagPluginRuleSet implements RuleSet {
         @Override
         public void addRuleInstances(Digester digester) {
             digester.addCallMethod(PREFIX, "addPlugin", 2);

==================================================
TldRuleSet.java
index 7502ebd0d6..bd7e5fdd34 100644
--- a/java/org/apache/tomcat/util/descriptor/tld/ImplicitTldRuleSet.java
+++ b/java/org/apache/tomcat/util/descriptor/tld/ImplicitTldRuleSet.java
@@ -18,7 +18,7 @@ package org.apache.tomcat.util.descriptor.tld;
 
 import org.apache.tomcat.util.digester.Digester;
 import org.apache.tomcat.util.digester.Rule;
-import org.apache.tomcat.util.digester.RuleSetBase;
+import org.apache.tomcat.util.digester.RuleSet;
 import org.apache.tomcat.util.res.StringManager;
 import org.xml.sax.Attributes;
 
@@ -27,7 +27,7 @@ import org.xml.sax.Attributes;
  *
  * Only version information used and short names are allowed.
  */
-public class ImplicitTldRuleSet extends RuleSetBase {
+public class ImplicitTldRuleSet implements RuleSet {
 
     private static final StringManager sm = StringManager.getManager(ImplicitTldRuleSet.class);
 

==================================================
WebRuleSet.java
index 69094e1361..f298fd334d 100644
--- a/java/org/apache/tomcat/util/descriptor/tld/TldRuleSet.java
+++ b/java/org/apache/tomcat/util/descriptor/tld/TldRuleSet.java
@@ -24,13 +24,13 @@ import javax.servlet.jsp.tagext.VariableInfo;
 
 import org.apache.tomcat.util.digester.Digester;
 import org.apache.tomcat.util.digester.Rule;
-import org.apache.tomcat.util.digester.RuleSetBase;
+import org.apache.tomcat.util.digester.RuleSet;
 import org.xml.sax.Attributes;
 
 /**
  * RulesSet for digesting TLD files.
  */
-public class TldRuleSet extends RuleSetBase {
+public class TldRuleSet implements RuleSet {
     private static final String PREFIX = "taglib";
     private static final String VALIDATOR_PREFIX = PREFIX + "/validator";
     private static final String TAG_PREFIX = PREFIX + "/tag";

==================================================
RuleSetBase.java
index 28419afcd1..28478bf72e 100644
--- a/java/org/apache/tomcat/util/descriptor/web/WebRuleSet.java
+++ b/java/org/apache/tomcat/util/descriptor/web/WebRuleSet.java
@@ -24,19 +24,18 @@ import org.apache.tomcat.util.digester.CallMethodRule;
 import org.apache.tomcat.util.digester.CallParamRule;
 import org.apache.tomcat.util.digester.Digester;
 import org.apache.tomcat.util.digester.Rule;
-import org.apache.tomcat.util.digester.RuleSetBase;
+import org.apache.tomcat.util.digester.RuleSet;
 import org.apache.tomcat.util.digester.SetNextRule;
 import org.apache.tomcat.util.res.StringManager;
 import org.xml.sax.Attributes;
 
-
 /**
  * <p><strong>RuleSet</strong> for processing the contents of a web application
  * deployment descriptor (<code>/WEB-INF/web.xml</code>) resource.</p>
  *
  * @author Craig R. McClanahan
  */
-public class WebRuleSet extends RuleSetBase {
+public class WebRuleSet implements RuleSet {
 
     /**
      * The string resources for this package.
@@ -136,7 +135,6 @@ public class WebRuleSet extends RuleSetBase {
      * @param fragment <code>true</code> if this is a web fragment
      */
     public WebRuleSet(String prefix, boolean fragment) {
-        super();
         this.prefix = prefix;
         this.fragment = fragment;
 

==================================================
