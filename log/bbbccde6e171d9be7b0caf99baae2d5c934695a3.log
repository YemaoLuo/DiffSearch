bbbccde6e171d9be7b0caf99baae2d5c934695a3
==================================================
Remove $Id keyword from files in org/apache/el/**
==================================================
Konstantin Kolinko
==================================================
Fri Jan 24 20:17:35 2014 +0000
==================================================
ExpressionFactoryImpl.java
Remove $Id keyword from files in org/apache/el/**

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1561143 13f79535-47bb-0310-9956-ffa450edef68



==================================================
MethodExpressionImpl.java
index bc30151d98..704fa102e8 100644
--- a/java/org/apache/el/ExpressionFactoryImpl.java
+++ b/java/org/apache/el/ExpressionFactoryImpl.java
@@ -32,7 +32,6 @@ import org.apache.el.util.MessageFactory;
  * @see javax.el.ExpressionFactory
  *
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public class ExpressionFactoryImpl extends ExpressionFactory {
 

==================================================
ValueExpressionImpl.java
index 7707d5ebf2..318240730b 100644
--- a/java/org/apache/el/MethodExpressionImpl.java
+++ b/java/org/apache/el/MethodExpressionImpl.java
@@ -72,7 +72,6 @@ import org.apache.el.util.ReflectionUtil;
  * @see javax.el.MethodExpression
  *
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class MethodExpressionImpl extends MethodExpression implements
         Externalizable {

==================================================
ELArithmetic.java
index b88880483a..691d5ae767 100644
--- a/java/org/apache/el/ValueExpressionImpl.java
+++ b/java/org/apache/el/ValueExpressionImpl.java
@@ -84,7 +84,6 @@ import org.apache.el.util.ReflectionUtil;
  * @see javax.el.ValueExpression
  *
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class ValueExpressionImpl extends ValueExpression implements
         Externalizable {

==================================================
ELSupport.java
index f0bb5b3ae2..4661021d29 100644
--- a/java/org/apache/el/lang/ELArithmetic.java
+++ b/java/org/apache/el/lang/ELArithmetic.java
@@ -26,7 +26,6 @@ import org.apache.el.util.MessageFactory;
 /**
  * A helper class of Arithmetic defined by the EL Specification
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public abstract class ELArithmetic {
 

==================================================
ExpressionBuilder.java
index b76a66b21e..f8d5d3607e 100644
--- a/java/org/apache/el/lang/ELSupport.java
+++ b/java/org/apache/el/lang/ELSupport.java
@@ -36,7 +36,6 @@ import org.apache.el.util.MessageFactory;
  * A helper class that implements the EL Specification
  *
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public class ELSupport {
 

==================================================
FunctionMapperFactory.java
index e498d45f62..64fc41c942 100644
--- a/java/org/apache/el/lang/ExpressionBuilder.java
+++ b/java/org/apache/el/lang/ExpressionBuilder.java
@@ -46,7 +46,6 @@ import org.apache.el.util.MessageFactory;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class ExpressionBuilder implements NodeVisitor {
 

==================================================
ArithmeticNode.java
index 338818349f..835f46846d 100644
--- a/java/org/apache/el/lang/FunctionMapperFactory.java
+++ b/java/org/apache/el/lang/FunctionMapperFactory.java
@@ -23,7 +23,6 @@ import javax.el.FunctionMapper;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public class FunctionMapperFactory extends FunctionMapper {
 

==================================================
AstAnd.java
index 7969e24766..dc101af4fe 100644
--- a/java/org/apache/el/parser/ArithmeticNode.java
+++ b/java/org/apache/el/parser/ArithmeticNode.java
@@ -24,7 +24,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public abstract class ArithmeticNode extends SimpleNode {
 

==================================================
AstBracketSuffix.java
index 58e151ac0e..5a53f006b4 100644
--- a/java/org/apache/el/parser/AstAnd.java
+++ b/java/org/apache/el/parser/AstAnd.java
@@ -25,7 +25,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstAnd extends BooleanNode {
     public AstAnd(int id) {

==================================================
AstChoice.java
index 3138098a8e..1288d4f642 100644
--- a/java/org/apache/el/parser/AstBracketSuffix.java
+++ b/java/org/apache/el/parser/AstBracketSuffix.java
@@ -25,7 +25,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstBracketSuffix extends SimpleNode {
     public AstBracketSuffix(int id) {

==================================================
AstCompositeExpression.java
index 91279845c4..eafe8460d2 100644
--- a/java/org/apache/el/parser/AstChoice.java
+++ b/java/org/apache/el/parser/AstChoice.java
@@ -25,7 +25,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstChoice extends SimpleNode {
     public AstChoice(int id) {

==================================================
AstDeferredExpression.java
index 4bbb9b0255..f3fe24ac2f 100644
--- a/java/org/apache/el/parser/AstCompositeExpression.java
+++ b/java/org/apache/el/parser/AstCompositeExpression.java
@@ -26,7 +26,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstCompositeExpression extends SimpleNode {
 

==================================================
AstDiv.java
index c86895c7ef..772760959d 100644
--- a/java/org/apache/el/parser/AstDeferredExpression.java
+++ b/java/org/apache/el/parser/AstDeferredExpression.java
@@ -25,7 +25,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstDeferredExpression extends SimpleNode {
     public AstDeferredExpression(int id) {

==================================================
AstDotSuffix.java
index 412fd37e15..406e230b46 100644
--- a/java/org/apache/el/parser/AstDiv.java
+++ b/java/org/apache/el/parser/AstDiv.java
@@ -26,7 +26,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstDiv extends ArithmeticNode {
     public AstDiv(int id) {

==================================================
AstDynamicExpression.java
index c7d8140b47..3c8d1b5d09 100644
--- a/java/org/apache/el/parser/AstDotSuffix.java
+++ b/java/org/apache/el/parser/AstDotSuffix.java
@@ -27,7 +27,6 @@ import org.apache.el.util.Validation;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstDotSuffix extends SimpleNode {
     public AstDotSuffix(int id) {

==================================================
AstEmpty.java
index 49bdcb8f5d..b14d9ecd72 100644
--- a/java/org/apache/el/parser/AstDynamicExpression.java
+++ b/java/org/apache/el/parser/AstDynamicExpression.java
@@ -25,7 +25,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstDynamicExpression extends SimpleNode {
     public AstDynamicExpression(int id) {

==================================================
AstEqual.java
index ab6d84dca8..47c059036f 100644
--- a/java/org/apache/el/parser/AstEmpty.java
+++ b/java/org/apache/el/parser/AstEmpty.java
@@ -28,7 +28,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstEmpty extends SimpleNode {
     public AstEmpty(int id) {

==================================================
AstFalse.java
index a3126d420f..fae620d880 100644
--- a/java/org/apache/el/parser/AstEqual.java
+++ b/java/org/apache/el/parser/AstEqual.java
@@ -25,7 +25,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstEqual extends BooleanNode {
     public AstEqual(int id) {

==================================================
AstFloatingPoint.java
index 53905c6801..27527aa47b 100644
--- a/java/org/apache/el/parser/AstFalse.java
+++ b/java/org/apache/el/parser/AstFalse.java
@@ -25,7 +25,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstFalse extends BooleanNode {
     public AstFalse(int id) {

==================================================
AstFunction.java
index 9e402d5bbb..986910ece6 100644
--- a/java/org/apache/el/parser/AstFloatingPoint.java
+++ b/java/org/apache/el/parser/AstFloatingPoint.java
@@ -27,7 +27,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstFloatingPoint extends SimpleNode {
     public AstFloatingPoint(int id) {

==================================================
AstGreaterThan.java
index 23cedbced3..edecbd0106 100644
--- a/java/org/apache/el/parser/AstFunction.java
+++ b/java/org/apache/el/parser/AstFunction.java
@@ -34,7 +34,6 @@ import org.apache.el.util.MessageFactory;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstFunction extends SimpleNode {
 

==================================================
AstGreaterThanEqual.java
index 5034ec311d..bc54225a01 100644
--- a/java/org/apache/el/parser/AstGreaterThan.java
+++ b/java/org/apache/el/parser/AstGreaterThan.java
@@ -25,7 +25,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstGreaterThan extends BooleanNode {
     public AstGreaterThan(int id) {

==================================================
AstIdentifier.java
index a4c359f9d4..1b017c351f 100644
--- a/java/org/apache/el/parser/AstGreaterThanEqual.java
+++ b/java/org/apache/el/parser/AstGreaterThanEqual.java
@@ -25,7 +25,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstGreaterThanEqual extends BooleanNode {
     public AstGreaterThanEqual(int id) {

==================================================
AstInteger.java
index fbb51b065e..4ac660464c 100644
--- a/java/org/apache/el/parser/AstIdentifier.java
+++ b/java/org/apache/el/parser/AstIdentifier.java
@@ -35,7 +35,6 @@ import org.apache.el.util.Validation;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstIdentifier extends SimpleNode {
     public AstIdentifier(int id) {

==================================================
AstLessThan.java
index a6f447a2a4..186d5b8b7c 100644
--- a/java/org/apache/el/parser/AstInteger.java
+++ b/java/org/apache/el/parser/AstInteger.java
@@ -27,7 +27,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstInteger extends SimpleNode {
     public AstInteger(int id) {

==================================================
AstLessThanEqual.java
index 8cb7131491..0cf11572b6 100644
--- a/java/org/apache/el/parser/AstLessThan.java
+++ b/java/org/apache/el/parser/AstLessThan.java
@@ -25,7 +25,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstLessThan extends BooleanNode {
     public AstLessThan(int id) {

==================================================
AstLiteralExpression.java
index a7df0d5c0e..156f7ab631 100644
--- a/java/org/apache/el/parser/AstLessThanEqual.java
+++ b/java/org/apache/el/parser/AstLessThanEqual.java
@@ -25,7 +25,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstLessThanEqual extends BooleanNode {
     public AstLessThanEqual(int id) {

==================================================
AstMethodParameters.java
index 121532044f..7244df129a 100644
--- a/java/org/apache/el/parser/AstLiteralExpression.java
+++ b/java/org/apache/el/parser/AstLiteralExpression.java
@@ -25,7 +25,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstLiteralExpression extends SimpleNode {
     public AstLiteralExpression(int id) {

==================================================
AstMinus.java
index a002af761e..29fe15e1e1 100644
--- a/java/org/apache/el/parser/AstMethodParameters.java
+++ b/java/org/apache/el/parser/AstMethodParameters.java
@@ -22,9 +22,6 @@ import java.util.ArrayList;
 
 import org.apache.el.lang.EvaluationContext;
 
-/**
- * $Id$
- */
 public final class AstMethodParameters extends SimpleNode {
     public AstMethodParameters(int id) {
         super(id);

==================================================
AstMod.java
index da38a5717c..0530f4fbf9 100644
--- a/java/org/apache/el/parser/AstMinus.java
+++ b/java/org/apache/el/parser/AstMinus.java
@@ -26,7 +26,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstMinus extends ArithmeticNode {
     public AstMinus(int id) {

==================================================
AstMult.java
index 2d1007a5b4..7c069307d8 100644
--- a/java/org/apache/el/parser/AstMod.java
+++ b/java/org/apache/el/parser/AstMod.java
@@ -26,7 +26,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstMod extends ArithmeticNode {
     public AstMod(int id) {

==================================================
AstNegative.java
index 213782038c..b2adc6899a 100644
--- a/java/org/apache/el/parser/AstMult.java
+++ b/java/org/apache/el/parser/AstMult.java
@@ -26,7 +26,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstMult extends ArithmeticNode {
     public AstMult(int id) {

==================================================
AstNot.java
index 1e89c80b7f..a96f8622a4 100644
--- a/java/org/apache/el/parser/AstNegative.java
+++ b/java/org/apache/el/parser/AstNegative.java
@@ -28,7 +28,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstNegative extends SimpleNode {
     public AstNegative(int id) {

==================================================
AstNotEqual.java
index 5d037f433b..0642a9e8b4 100644
--- a/java/org/apache/el/parser/AstNot.java
+++ b/java/org/apache/el/parser/AstNot.java
@@ -25,7 +25,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstNot extends SimpleNode {
     public AstNot(int id) {

==================================================
AstNull.java
index 709a8705e4..fdeff8e1da 100644
--- a/java/org/apache/el/parser/AstNotEqual.java
+++ b/java/org/apache/el/parser/AstNotEqual.java
@@ -25,7 +25,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstNotEqual extends BooleanNode {
     public AstNotEqual(int id) {

==================================================
AstOr.java
index 2e6776d773..d6f196b6c8 100644
--- a/java/org/apache/el/parser/AstNull.java
+++ b/java/org/apache/el/parser/AstNull.java
@@ -25,7 +25,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstNull extends SimpleNode {
     public AstNull(int id) {

==================================================
AstPlus.java
index 45f0355977..4c1c7749af 100644
--- a/java/org/apache/el/parser/AstOr.java
+++ b/java/org/apache/el/parser/AstOr.java
@@ -25,7 +25,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstOr extends BooleanNode {
     public AstOr(int id) {

==================================================
AstString.java
index 0382ef2c1b..99036af9c1 100644
--- a/java/org/apache/el/parser/AstPlus.java
+++ b/java/org/apache/el/parser/AstPlus.java
@@ -26,7 +26,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstPlus extends ArithmeticNode {
     public AstPlus(int id) {

==================================================
AstTrue.java
index d77c7142dc..7ea9f82fcc 100644
--- a/java/org/apache/el/parser/AstString.java
+++ b/java/org/apache/el/parser/AstString.java
@@ -25,7 +25,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstString extends SimpleNode {
     public AstString(int id) {

==================================================
AstValue.java
index 4182532605..126eed857c 100644
--- a/java/org/apache/el/parser/AstTrue.java
+++ b/java/org/apache/el/parser/AstTrue.java
@@ -25,7 +25,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstTrue extends BooleanNode {
     public AstTrue(int id) {

==================================================
BooleanNode.java
index d673266cc0..c883c9c801 100644
--- a/java/org/apache/el/parser/AstValue.java
+++ b/java/org/apache/el/parser/AstValue.java
@@ -38,7 +38,6 @@ import org.apache.el.util.ReflectionUtil;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class AstValue extends SimpleNode {
 

==================================================
Node.java
index 9e1b222021..69e9f5ab3d 100644
--- a/java/org/apache/el/parser/BooleanNode.java
+++ b/java/org/apache/el/parser/BooleanNode.java
@@ -23,7 +23,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public abstract class BooleanNode extends SimpleNode {
     /**

==================================================
NodeVisitor.java
index 91e48f5d34..c5cd645376 100644
--- a/java/org/apache/el/parser/Node.java
+++ b/java/org/apache/el/parser/Node.java
@@ -32,7 +32,6 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * $Id$
  */
 public interface Node {
 

==================================================
SimpleNode.java
index 58fdf9b09f..25d920c83a 100644
--- a/java/org/apache/el/parser/NodeVisitor.java
+++ b/java/org/apache/el/parser/NodeVisitor.java
@@ -18,7 +18,6 @@ package org.apache.el.parser;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public interface NodeVisitor {
     public void visit(Node node) throws Exception;

==================================================
MessageFactory.java
index 482f4fb916..e48b36110d 100644
--- a/java/org/apache/el/parser/SimpleNode.java
+++ b/java/org/apache/el/parser/SimpleNode.java
@@ -32,7 +32,6 @@ import org.apache.el.util.MessageFactory;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public abstract class SimpleNode extends ELSupport implements Node {
     protected Node parent;

==================================================
ReflectionUtil.java
index 7df9cad0b7..6989d2e626 100644
--- a/java/org/apache/el/util/MessageFactory.java
+++ b/java/org/apache/el/util/MessageFactory.java
@@ -21,7 +21,6 @@ import java.util.ResourceBundle;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Id$
  */
 public final class MessageFactory {
 

==================================================
