841d8e4e5511abda3db361fa47eb9962089cabc7
==================================================
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=60852
==================================================
Mark Thomas
==================================================
Thu Mar 23 13:52:22 2017 +0000
==================================================
AbstractHttp11Protocol.java
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=60852
Correct spelling of compressible
Based on a patch by Michael Osipov

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1788241 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http11Processor.java
index 2144873496..201fc340c7 100644
--- a/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
+++ b/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
@@ -244,20 +244,44 @@ public abstract class AbstractHttp11Protocol<S> extends AbstractProtocol<S> {
     }
 
 
-    private String compressableMimeType = "text/html,text/xml,text/plain,text/css,text/javascript,application/javascript";
-    private String[] compressableMimeTypes = null;
-    public String getCompressableMimeType() { return compressableMimeType; }
+    /**
+     * @return See {@link #getCompressableMimeType()}
+     * @deprecated Use {@link #getCompressableMimeType()}
+     */
+    @Deprecated
+    public String getCompressableMimeType() {
+        return getCompressibleMimeType();
+    }
+    /**
+     * @param valueS See {@link #setCompressableMimeType(String)}
+     * @deprecated Use {@link #setCompressableMimeType(String)}
+     */
+    @Deprecated
     public void setCompressableMimeType(String valueS) {
-        compressableMimeType = valueS;
-        compressableMimeTypes = null;
+        setCompressibleMimeType(valueS);
     }
+    /**
+     * @return See {@link #getCompressableMimeTypes()}
+     * @deprecated Use {@link #getCompressableMimeTypes()}
+     */
+    @Deprecated
     public String[] getCompressableMimeTypes() {
-        String[] result = compressableMimeTypes;
+        return getCompressibleMimeTypes();
+    }
+    private String compressibleMimeType = "text/html,text/xml,text/plain,text/css,text/javascript,application/javascript";
+    private String[] compressibleMimeTypes = null;
+    public String getCompressibleMimeType() { return compressibleMimeType; }
+    public void setCompressibleMimeType(String valueS) {
+        compressibleMimeType = valueS;
+        compressibleMimeTypes = null;
+    }
+    public String[] getCompressibleMimeTypes() {
+        String[] result = compressibleMimeTypes;
         if (result != null) {
             return result;
         }
         List<String> values = new ArrayList<>();
-        StringTokenizer tokens = new StringTokenizer(compressableMimeType, ",");
+        StringTokenizer tokens = new StringTokenizer(compressibleMimeType, ",");
         while (tokens.hasMoreTokens()) {
             String token = tokens.nextToken().trim();
             if (token.length() > 0) {
@@ -265,7 +289,7 @@ public abstract class AbstractHttp11Protocol<S> extends AbstractProtocol<S> {
             }
         }
         result = values.toArray(new String[values.size()]);
-        compressableMimeTypes = result;
+        compressibleMimeTypes = result;
         return result;
     }
 

==================================================
