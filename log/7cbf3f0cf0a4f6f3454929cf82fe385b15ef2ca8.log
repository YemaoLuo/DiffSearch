7cbf3f0cf0a4f6f3454929cf82fe385b15ef2ca8
==================================================
Remove references to AbstractEndpoint from AbstractProcessor
==================================================
Mark Thomas
==================================================
Wed Dec 14 11:06:54 2016 +0000
==================================================
AbstractProcessor.java
Remove references to AbstractEndpoint from AbstractProcessor

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1774191 13f79535-47bb-0310-9956-ffa450edef68



==================================================
StreamProcessor.java
index 40c80920b6..463e3bd2f1 100644
--- a/java/org/apache/coyote/AbstractProcessor.java
+++ b/java/org/apache/coyote/AbstractProcessor.java
@@ -27,7 +27,6 @@ import javax.servlet.RequestDispatcher;
 
 import org.apache.tomcat.util.ExceptionUtils;
 import org.apache.tomcat.util.buf.ByteChunk;
-import org.apache.tomcat.util.net.AbstractEndpoint;
 import org.apache.tomcat.util.net.AbstractEndpoint.Handler.SocketState;
 import org.apache.tomcat.util.net.DispatchType;
 import org.apache.tomcat.util.net.SSLSupport;
@@ -60,13 +59,13 @@ public abstract class AbstractProcessor extends AbstractProcessorLight implement
 
 
     public AbstractProcessor(AbstractProtocol<?> protocol) {
-        this(protocol.getEndpoint(), new Request(), new Response());
+        this(protocol.getExecutor(), new Request(), new Response());
     }
 
 
-    protected AbstractProcessor(AbstractEndpoint<?,?> endpoint, Request coyoteRequest,
+    protected AbstractProcessor(Executor executor, Request coyoteRequest,
             Response coyoteResponse) {
-        this.executor = endpoint.getExecutor();
+        this.executor = executor;
         asyncStateMachine = new AsyncStateMachine(this);
         request = coyoteRequest;
         response = coyoteResponse;

==================================================
