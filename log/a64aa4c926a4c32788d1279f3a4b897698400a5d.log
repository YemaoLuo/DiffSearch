a64aa4c926a4c32788d1279f3a4b897698400a5d
==================================================
Clean-up
==================================================
Mark Emlyn
==================================================
Tue Sep 4 18:29:41 2012 +0000
==================================================
Bug51582.java
Clean-up
 - fix indentation
 - silence a handful of fairly pointless FindBugs warnings

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1380793 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AlternateUsernameTest.java
index 7d3c0a35ac..4d91364026 100644
--- a/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/bugs/Bug51582.java
+++ b/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/bugs/Bug51582.java
@@ -59,7 +59,9 @@ public class Bug51582
     Statement st = con.createStatement();
     try {
         st.execute("DROP ALIAS SLEEP");
-    }catch (Exception ignore) {}
+    } catch (Exception ignore) {
+        // Ignore
+    }
     st.execute("CREATE ALIAS SLEEP AS $$\nboolean sleep() {\n        try {\n            Thread.sleep(10000);\n            return true;        } catch (Exception x) {\n            return false;\n        }\n}\n$$;");
     st.close();
     con.close();

==================================================
CreateTestTable.java
index 3ff50316dd..92a4b04ee8 100644
--- a/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/AlternateUsernameTest.java
+++ b/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/AlternateUsernameTest.java
@@ -133,7 +133,11 @@ public class AlternateUsernameTest extends DefaultTestCase {
                     x.printStackTrace();
                 } finally {
                     if (pcon!=null) {
-                        try {pcon.close(); }catch (Exception ignore) {}
+                        try {
+                            pcon.close();
+                        } catch (Exception ignore) {
+                            // Ignore
+                        }
                         pcon = null;
                     }
                 }

==================================================
DefaultTestCase.java
index 80f2f2f153..085d075880 100644
--- a/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/CreateTestTable.java
+++ b/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/CreateTestTable.java
@@ -39,7 +39,9 @@ public class CreateTestTable extends DefaultTestCase {
         Statement st = con.createStatement();
         try {
             st.execute("create table test(id int not null, val1 varchar(255), val2 varchar(255), val3 varchar(255), val4 varchar(255))");
-        }catch (Exception ignore) {}
+        } catch (Exception ignore) {
+            // Ignore
+        }
         st.close();
         con.close();
     }
@@ -83,7 +85,9 @@ public class CreateTestTable extends DefaultTestCase {
             Statement st = con.createStatement();
             try {
                 st.execute("drop table test");
-            }catch (Exception ignore) {}
+            } catch (Exception ignore) {
+                // Ignore
+            }
             st.execute("create table test(id int not null, val1 varchar(255), val2 varchar(255), val3 varchar(255), val4 varchar(255))");
             st.close();
         }

==================================================
SimplePOJOAsyncExample.java
index 1165811f23..f58db784c9 100644
--- a/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/DefaultTestCase.java
+++ b/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/DefaultTestCase.java
@@ -180,8 +180,16 @@ public class DefaultTestCase extends TestCase {
 
     @Override
     protected void tearDown() throws Exception {
-        try {datasource.close();}catch(Exception ignore){}
-        try {tDatasource.close();}catch(Exception ignore){}
+        try {
+            datasource.close();
+        } catch (Exception ignore){
+            // Ignore
+        }
+        try {
+            tDatasource.close();
+        } catch (Exception ignore){
+            // Ignore
+        }
         //try {((ComboPooledDataSource)c3p0Datasource).close(true);}catch(Exception ignore){}
         datasource = null;
         tDatasource = null;

==================================================
SimplePOJOExample.java
index 611a1eeb74..976a847483 100644
--- a/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/SimplePOJOAsyncExample.java
+++ b/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/SimplePOJOAsyncExample.java
@@ -54,27 +54,32 @@ public class SimplePOJOAsyncExample {
 
         Connection con = null;
         try {
-          Future<Connection> future = datasource.getConnectionAsync();
-          while (!future.isDone()) {
-              System.out.println("Connection is not yet available. Do some background work");
-              try {
-                  Thread.sleep(100); //simulate work
-              }catch (InterruptedException x) {
-                  Thread.interrupted();
-              }
-          }
-          con = future.get(); //should return instantly
-          Statement st = con.createStatement();
-          ResultSet rs = st.executeQuery("select * from user");
-          int cnt = 1;
-          while (rs.next()) {
-              System.out.println((cnt++)+". Host:" +rs.getString("Host")+" User:"+rs.getString("User")+" Password:"+rs.getString("Password"));
-          }
-          rs.close();
-          st.close();
+            Future<Connection> future = datasource.getConnectionAsync();
+            while (!future.isDone()) {
+                System.out.println("Connection is not yet available. Do some background work");
+            try {
+                Thread.sleep(100); //simulate work
+                } catch (InterruptedException x) {
+                    Thread.interrupted();
+                }
+            }
+            con = future.get(); //should return instantly
+            Statement st = con.createStatement();
+            ResultSet rs = st.executeQuery("select * from user");
+            int cnt = 1;
+            while (rs.next()) {
+                System.out.println((cnt++)+". Host:" +rs.getString("Host")+" User:"+rs.getString("User")+" Password:"+rs.getString("Password"));
+            }
+            rs.close();
+            st.close();
         } finally {
-          if (con!=null) try {con.close();}catch (Exception ignore) {}
+            if (con!=null) {
+                try {
+                    con.close();
+                } catch (Exception ignore) {
+                    // Ignore
+                }
+            }
         }
     }
-
 }
\ No newline at end of file

==================================================
TestAsyncQueue.java
index 38bb39388a..381dacb5ad 100644
--- a/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/SimplePOJOExample.java
+++ b/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/SimplePOJOExample.java
@@ -53,18 +53,23 @@ public class SimplePOJOExample {
 
         Connection con = null;
         try {
-          con = datasource.getConnection();
-          Statement st = con.createStatement();
-          ResultSet rs = st.executeQuery("select * from user");
-          int cnt = 1;
-          while (rs.next()) {
-              System.out.println((cnt++)+". Host:" +rs.getString("Host")+" User:"+rs.getString("User")+" Password:"+rs.getString("Password"));
-          }
-          rs.close();
-          st.close();
+            con = datasource.getConnection();
+            Statement st = con.createStatement();
+            ResultSet rs = st.executeQuery("select * from user");
+            int cnt = 1;
+            while (rs.next()) {
+                System.out.println((cnt++)+". Host:" +rs.getString("Host")+" User:"+rs.getString("User")+" Password:"+rs.getString("Password"));
+            }
+            rs.close();
+            st.close();
         } finally {
-          if (con!=null) try {con.close();}catch (Exception ignore) {}
+            if (con!=null) {
+                try {
+                    con.close();
+                } catch (Exception ignore) {
+                    // Ignore
+                }
+            }
         }
     }
-
 }

==================================================
