62268605c5dcda064fb69ea587e4d0fbfce7f8fc
==================================================
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=57855
==================================================
Mark Thomas
==================================================
Mon Apr 27 09:45:12 2015 +0000
==================================================
AstValue.java
index 9aed8467db..f3d87089a6 100644
--- a/java/org/apache/el/Messages.properties
+++ b/java/org/apache/el/Messages.properties
@@ -21,6 +21,8 @@ error.unreachable.base=Target Unreachable, identifier ''{0}'' resolved to null
 error.unreachable.property=Target Unreachable, ''{0}'' returned null
 error.resolver.unhandled=ELResolver did not handle type: {0} with property of ''{1}''
 error.resolver.unhandled.null=ELResolver cannot handle a null base Object with identifier ''{0}''
+error.invoke.wrongParams=The method [{0}] was called with [{1}] parameter(s) when it expected [{2}]
+error.invoke.tooFewParams=The method [{0}] was called with [{1}] parameter(s) when it expected at least [{2}]
 
 # ValueExpressionLiteral
 error.value.literal.write=ValueExpression is a literal and not writable: {0}

==================================================
TestMethodExpressionImpl.java
index 0f6e01c752..f20b170200 100644
--- a/java/org/apache/el/parser/AstValue.java
+++ b/java/org/apache/el/parser/AstValue.java
@@ -237,7 +237,7 @@ public final class AstValue extends SimpleNode {
         }
         m = ReflectionUtil.getMethod(ctx, t.base, t.property, types, values);
 
-        // Handle varArgs and any co-ercion required
+        // Handle varArgs and any coercion required
         values = convertArgs(ctx, values, m);
 
         Object result = null;
@@ -268,6 +268,24 @@ public final class AstValue extends SimpleNode {
 
         int paramCount = types.length;
 
+        if (paramCount > 0 && src == null ||
+                m.isVarArgs() && src.length < paramCount ||
+                !m.isVarArgs() && src.length != paramCount) {
+            String inputParamCount = null;
+            if (src != null) {
+                inputParamCount = Integer.toString(src.length);
+            }
+            String msg;
+            if (m.isVarArgs()) {
+                msg = MessageFactory.get("error.invoke.tooFewParams",
+                        m.getName(), inputParamCount, Integer.toString(paramCount));
+            } else {
+                msg = MessageFactory.get("error.invoke.wrongParams",
+                        m.getName(), inputParamCount, Integer.toString(paramCount));
+            }
+            throw new IllegalArgumentException(msg);
+        }
+
         Object[] dest = new Object[paramCount];
 
         for (int i = 0; i < paramCount - 1; i++) {

==================================================
