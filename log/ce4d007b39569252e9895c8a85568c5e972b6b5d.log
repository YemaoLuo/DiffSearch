ce4d007b39569252e9895c8a85568c5e972b6b5d
==================================================
Replace $Date$ with $Id$ because of its i18n and timezone issues
==================================================
Konstantin Kolinko
==================================================
Thu Apr 29 14:01:02 2010 +0000
==================================================
ExpressionFactoryImpl.java
Replace $Date$ with $Id$ because of its i18n and timezone issues
(http://subversion.tigris.org/issues/show_bug.cgi?id=2332)

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@939311 13f79535-47bb-0310-9956-ffa450edef68



==================================================
MethodExpressionImpl.java
index 8260ab62bf..4fb0cfdb57 100644
--- a/java/org/apache/el/ExpressionFactoryImpl.java
+++ b/java/org/apache/el/ExpressionFactoryImpl.java
@@ -31,7 +31,7 @@ import org.apache.el.util.MessageFactory;
  * @see javax.el.ExpressionFactory
  * 
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public class ExpressionFactoryImpl extends ExpressionFactory {
 

==================================================
ValueExpressionImpl.java
index d43a6d8871..1f45aca859 100644
--- a/java/org/apache/el/MethodExpressionImpl.java
+++ b/java/org/apache/el/MethodExpressionImpl.java
@@ -75,7 +75,7 @@ import org.apache.el.util.ReflectionUtil;
  * @see javax.el.MethodExpression
  * 
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class MethodExpressionImpl extends MethodExpression implements
         Externalizable {

==================================================
ELArithmetic.java
index a511db7dbd..0550261071 100644
--- a/java/org/apache/el/ValueExpressionImpl.java
+++ b/java/org/apache/el/ValueExpressionImpl.java
@@ -88,7 +88,7 @@ import org.apache.el.util.ReflectionUtil;
  * @see javax.el.ValueExpression
  * 
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class ValueExpressionImpl extends ValueExpression implements
         Externalizable {

==================================================
ELSupport.java
index 5fb19c8eb8..63f49c982d 100644
--- a/java/org/apache/el/lang/ELArithmetic.java
+++ b/java/org/apache/el/lang/ELArithmetic.java
@@ -26,7 +26,7 @@ import org.apache.el.util.MessageFactory;
 /**
  * A helper class of Arithmetic defined by the EL Specification
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public abstract class ELArithmetic {
 

==================================================
ExpressionBuilder.java
index 6cee357207..8728f25a6d 100644
--- a/java/org/apache/el/lang/ELSupport.java
+++ b/java/org/apache/el/lang/ELSupport.java
@@ -32,7 +32,7 @@ import org.apache.el.util.MessageFactory;
  * A helper class that implements the EL Specification
  * 
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public class ELSupport {
 

==================================================
FunctionMapperFactory.java
index 80eb7153d7..03e74d7ca1 100644
--- a/java/org/apache/el/lang/ExpressionBuilder.java
+++ b/java/org/apache/el/lang/ExpressionBuilder.java
@@ -46,7 +46,7 @@ import org.apache.el.util.MessageFactory;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class ExpressionBuilder implements NodeVisitor {
 

==================================================
FunctionMapperImpl.java
index 37048ffdd3..60557e229f 100644
--- a/java/org/apache/el/lang/FunctionMapperFactory.java
+++ b/java/org/apache/el/lang/FunctionMapperFactory.java
@@ -23,7 +23,7 @@ import javax.el.FunctionMapper;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public class FunctionMapperFactory extends FunctionMapper {
 

==================================================
ArithmeticNode.java
index 8a6bf394c4..6ec08102c9 100644
--- a/java/org/apache/el/lang/FunctionMapperImpl.java
+++ b/java/org/apache/el/lang/FunctionMapperImpl.java
@@ -32,7 +32,7 @@ import org.apache.el.util.ReflectionUtil;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public class FunctionMapperImpl extends FunctionMapper implements
         Externalizable {

==================================================
AstAnd.java
index 9515271030..e77a7d1b85 100644
--- a/java/org/apache/el/parser/ArithmeticNode.java
+++ b/java/org/apache/el/parser/ArithmeticNode.java
@@ -24,7 +24,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public class ArithmeticNode extends SimpleNode {
 

==================================================
AstBracketSuffix.java
index d91e7b7810..1a8fc3e9d1 100644
--- a/java/org/apache/el/parser/AstAnd.java
+++ b/java/org/apache/el/parser/AstAnd.java
@@ -25,7 +25,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstAnd extends BooleanNode {
     public AstAnd(int id) {

==================================================
AstChoice.java
index 93216a0122..3138098a8e 100644
--- a/java/org/apache/el/parser/AstBracketSuffix.java
+++ b/java/org/apache/el/parser/AstBracketSuffix.java
@@ -25,7 +25,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstBracketSuffix extends SimpleNode {
     public AstBracketSuffix(int id) {

==================================================
AstCompositeExpression.java
index 9b3024f2bc..4c1495d3be 100644
--- a/java/org/apache/el/parser/AstChoice.java
+++ b/java/org/apache/el/parser/AstChoice.java
@@ -25,7 +25,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstChoice extends SimpleNode {
     public AstChoice(int id) {

==================================================
AstDeferredExpression.java
index 9fde3175a0..223e01c322 100644
--- a/java/org/apache/el/parser/AstCompositeExpression.java
+++ b/java/org/apache/el/parser/AstCompositeExpression.java
@@ -25,7 +25,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstCompositeExpression extends SimpleNode {
 

==================================================
AstDiv.java
index 641f3b0a79..c86895c7ef 100644
--- a/java/org/apache/el/parser/AstDeferredExpression.java
+++ b/java/org/apache/el/parser/AstDeferredExpression.java
@@ -25,7 +25,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstDeferredExpression extends SimpleNode {
     public AstDeferredExpression(int id) {

==================================================
AstDotSuffix.java
index 967e008cbb..412fd37e15 100644
--- a/java/org/apache/el/parser/AstDiv.java
+++ b/java/org/apache/el/parser/AstDiv.java
@@ -26,7 +26,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstDiv extends ArithmeticNode {
     public AstDiv(int id) {

==================================================
AstDynamicExpression.java
index ea64fec019..009465c99d 100644
--- a/java/org/apache/el/parser/AstDotSuffix.java
+++ b/java/org/apache/el/parser/AstDotSuffix.java
@@ -25,7 +25,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstDotSuffix extends SimpleNode {
     public AstDotSuffix(int id) {

==================================================
AstEmpty.java
index 9e6bad8082..49bdcb8f5d 100644
--- a/java/org/apache/el/parser/AstDynamicExpression.java
+++ b/java/org/apache/el/parser/AstDynamicExpression.java
@@ -25,7 +25,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstDynamicExpression extends SimpleNode {
     public AstDynamicExpression(int id) {

==================================================
AstEqual.java
index 83251af4b3..ab6d84dca8 100644
--- a/java/org/apache/el/parser/AstEmpty.java
+++ b/java/org/apache/el/parser/AstEmpty.java
@@ -28,7 +28,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstEmpty extends SimpleNode {
     public AstEmpty(int id) {

==================================================
AstFalse.java
index c0fbcecd4e..a3126d420f 100644
--- a/java/org/apache/el/parser/AstEqual.java
+++ b/java/org/apache/el/parser/AstEqual.java
@@ -25,7 +25,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstEqual extends BooleanNode {
     public AstEqual(int id) {

==================================================
AstFloatingPoint.java
index 2bd7d7dc64..53905c6801 100644
--- a/java/org/apache/el/parser/AstFalse.java
+++ b/java/org/apache/el/parser/AstFalse.java
@@ -25,7 +25,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstFalse extends BooleanNode {
     public AstFalse(int id) {

==================================================
AstFunction.java
index d4c5165305..073abd4a12 100644
--- a/java/org/apache/el/parser/AstFloatingPoint.java
+++ b/java/org/apache/el/parser/AstFloatingPoint.java
@@ -27,7 +27,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstFloatingPoint extends SimpleNode {
     public AstFloatingPoint(int id) {

==================================================
AstGreaterThan.java
index 25cd2d2f57..e9a982eb50 100644
--- a/java/org/apache/el/parser/AstFunction.java
+++ b/java/org/apache/el/parser/AstFunction.java
@@ -30,7 +30,7 @@ import org.apache.el.util.MessageFactory;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstFunction extends SimpleNode {
 

==================================================
AstGreaterThanEqual.java
index 8869ed9b4e..5034ec311d 100644
--- a/java/org/apache/el/parser/AstGreaterThan.java
+++ b/java/org/apache/el/parser/AstGreaterThan.java
@@ -25,7 +25,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstGreaterThan extends BooleanNode {
     public AstGreaterThan(int id) {

==================================================
AstIdentifier.java
index 2ffcfe5579..a4c359f9d4 100644
--- a/java/org/apache/el/parser/AstGreaterThanEqual.java
+++ b/java/org/apache/el/parser/AstGreaterThanEqual.java
@@ -25,7 +25,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstGreaterThanEqual extends BooleanNode {
     public AstGreaterThanEqual(int id) {

==================================================
AstInteger.java
index c6f4c9f5b0..6bb8946110 100644
--- a/java/org/apache/el/parser/AstIdentifier.java
+++ b/java/org/apache/el/parser/AstIdentifier.java
@@ -32,7 +32,7 @@ import org.apache.el.util.MessageFactory;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstIdentifier extends SimpleNode {
     public AstIdentifier(int id) {

==================================================
AstLessThan.java
index b2859eb968..a5f9268ab1 100644
--- a/java/org/apache/el/parser/AstInteger.java
+++ b/java/org/apache/el/parser/AstInteger.java
@@ -27,7 +27,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstInteger extends SimpleNode {
     public AstInteger(int id) {

==================================================
AstLessThanEqual.java
index 8ff781e167..8cb7131491 100644
--- a/java/org/apache/el/parser/AstLessThan.java
+++ b/java/org/apache/el/parser/AstLessThan.java
@@ -25,7 +25,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstLessThan extends BooleanNode {
     public AstLessThan(int id) {

==================================================
AstLiteralExpression.java
index 8d41b1f8fd..a7df0d5c0e 100644
--- a/java/org/apache/el/parser/AstLessThanEqual.java
+++ b/java/org/apache/el/parser/AstLessThanEqual.java
@@ -25,7 +25,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstLessThanEqual extends BooleanNode {
     public AstLessThanEqual(int id) {

==================================================
AstMinus.java
index b018251247..121532044f 100644
--- a/java/org/apache/el/parser/AstLiteralExpression.java
+++ b/java/org/apache/el/parser/AstLiteralExpression.java
@@ -25,7 +25,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstLiteralExpression extends SimpleNode {
     public AstLiteralExpression(int id) {

==================================================
AstMod.java
index c64d5f6e85..da38a5717c 100644
--- a/java/org/apache/el/parser/AstMinus.java
+++ b/java/org/apache/el/parser/AstMinus.java
@@ -26,7 +26,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstMinus extends ArithmeticNode {
     public AstMinus(int id) {

==================================================
AstMult.java
index dcaa851b53..2d1007a5b4 100644
--- a/java/org/apache/el/parser/AstMod.java
+++ b/java/org/apache/el/parser/AstMod.java
@@ -26,7 +26,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstMod extends ArithmeticNode {
     public AstMod(int id) {

==================================================
AstNegative.java
index 8bd9f5bc92..213782038c 100644
--- a/java/org/apache/el/parser/AstMult.java
+++ b/java/org/apache/el/parser/AstMult.java
@@ -26,7 +26,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstMult extends ArithmeticNode {
     public AstMult(int id) {

==================================================
AstNot.java
index 0e49b90eb8..e16a0a79e6 100644
--- a/java/org/apache/el/parser/AstNegative.java
+++ b/java/org/apache/el/parser/AstNegative.java
@@ -28,7 +28,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstNegative extends SimpleNode {
     public AstNegative(int id) {

==================================================
AstNotEqual.java
index 63f1bacdd5..2dd393b17e 100644
--- a/java/org/apache/el/parser/AstNot.java
+++ b/java/org/apache/el/parser/AstNot.java
@@ -25,7 +25,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstNot extends SimpleNode {
     public AstNot(int id) {

==================================================
AstNull.java
index b752e99970..709a8705e4 100644
--- a/java/org/apache/el/parser/AstNotEqual.java
+++ b/java/org/apache/el/parser/AstNotEqual.java
@@ -25,7 +25,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstNotEqual extends BooleanNode {
     public AstNotEqual(int id) {

==================================================
AstOr.java
index b13fe83ff5..2e6776d773 100644
--- a/java/org/apache/el/parser/AstNull.java
+++ b/java/org/apache/el/parser/AstNull.java
@@ -25,7 +25,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstNull extends SimpleNode {
     public AstNull(int id) {

==================================================
AstPlus.java
index d9d40ac31d..bad6cad6bb 100644
--- a/java/org/apache/el/parser/AstOr.java
+++ b/java/org/apache/el/parser/AstOr.java
@@ -25,7 +25,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstOr extends BooleanNode {
     public AstOr(int id) {

==================================================
AstString.java
index 8b34681cfd..0382ef2c1b 100644
--- a/java/org/apache/el/parser/AstPlus.java
+++ b/java/org/apache/el/parser/AstPlus.java
@@ -26,7 +26,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstPlus extends ArithmeticNode {
     public AstPlus(int id) {

==================================================
AstTrue.java
index 38d228dc0b..ffd1a1f4f6 100644
--- a/java/org/apache/el/parser/AstString.java
+++ b/java/org/apache/el/parser/AstString.java
@@ -25,7 +25,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstString extends SimpleNode {
     public AstString(int id) {

==================================================
AstValue.java
index a344d9f2a9..4182532605 100644
--- a/java/org/apache/el/parser/AstTrue.java
+++ b/java/org/apache/el/parser/AstTrue.java
@@ -25,7 +25,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstTrue extends BooleanNode {
     public AstTrue(int id) {

==================================================
BooleanNode.java
index 4caacfda01..9573e51391 100644
--- a/java/org/apache/el/parser/AstValue.java
+++ b/java/org/apache/el/parser/AstValue.java
@@ -37,7 +37,7 @@ import org.apache.el.util.ReflectionUtil;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class AstValue extends SimpleNode {
 

==================================================
NodeVisitor.java
index 1191f75ffc..e67be13169 100644
--- a/java/org/apache/el/parser/BooleanNode.java
+++ b/java/org/apache/el/parser/BooleanNode.java
@@ -23,7 +23,7 @@ import org.apache.el.lang.EvaluationContext;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public class BooleanNode extends SimpleNode {
     /**

==================================================
SimpleNode.java
index 7d12275178..0be7a963f5 100644
--- a/java/org/apache/el/parser/NodeVisitor.java
+++ b/java/org/apache/el/parser/NodeVisitor.java
@@ -18,7 +18,7 @@ package org.apache.el.parser;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public interface NodeVisitor {
     public void visit(Node node) throws Exception;

==================================================
MessageFactory.java
index 07824d7bd1..9ff99d1dd6 100644
--- a/java/org/apache/el/parser/SimpleNode.java
+++ b/java/org/apache/el/parser/SimpleNode.java
@@ -32,7 +32,7 @@ import org.apache.el.util.MessageFactory;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public abstract class SimpleNode extends ELSupport implements Node {
     protected Node parent;

==================================================
ReflectionUtil.java
index b7f2eda8c5..1581b8a1ac 100644
--- a/java/org/apache/el/util/MessageFactory.java
+++ b/java/org/apache/el/util/MessageFactory.java
@@ -21,7 +21,7 @@ import java.util.ResourceBundle;
 
 /**
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public final class MessageFactory {
 

==================================================
InstanceManagerFactory.java
index 4b1cd03829..ce425c6a39 100644
--- a/java/org/apache/el/util/ReflectionUtil.java
+++ b/java/org/apache/el/util/ReflectionUtil.java
@@ -34,7 +34,7 @@ import org.apache.el.lang.ELSupport;
  * Utilities for Managing Serialization and Reflection
  * 
  * @author Jacob Hookom [jacob@hookom.net]
- * @version $Change: 181177 $$Date$$Author$
+ * @version $Id$
  */
 public class ReflectionUtil {
 

==================================================
Enumerator.java
index a1a2aa2a3b..04faae370a 100644
--- a/java/org/apache/jasper/runtime/InstanceManagerFactory.java
+++ b/java/org/apache/jasper/runtime/InstanceManagerFactory.java
@@ -25,7 +25,7 @@ import javax.servlet.ServletConfig;
 import org.apache.tomcat.InstanceManager;
 
 /**
- * @version $Rev$ $Date$
+ * @version $Id$
  */
 public class InstanceManagerFactory {
 

==================================================
ParserUtils.java
index 7492a7dde1..8f8e1e63e3 100644
--- a/java/org/apache/jasper/util/Enumerator.java
+++ b/java/org/apache/jasper/util/Enumerator.java
@@ -35,7 +35,7 @@ import java.util.NoSuchElementException;
  * Constructors are provided to easily create such wrappers.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class Enumerator<T> implements Enumeration<T> {

==================================================
TreeNode.java
index 5b15587d10..f7688d3327 100644
--- a/java/org/apache/jasper/xmlparser/ParserUtils.java
+++ b/java/org/apache/jasper/xmlparser/ParserUtils.java
@@ -48,7 +48,7 @@ import org.xml.sax.SAXParseException;
  * use a separate class loader for the parser to be used.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ParserUtils {

==================================================
FileHandler.java
index 67a0c5cc0b..bb092fb041 100644
--- a/java/org/apache/jasper/xmlparser/TreeNode.java
+++ b/java/org/apache/jasper/xmlparser/TreeNode.java
@@ -35,7 +35,7 @@ import java.util.Iterator;
  * synchronized.
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class TreeNode {

==================================================
LogConfigurationException.java
index 8a1f0bdee4..90127aba92 100644
--- a/java/org/apache/juli/FileHandler.java
+++ b/java/org/apache/juli/FileHandler.java
@@ -42,7 +42,7 @@ import java.util.logging.SimpleFormatter;
  * named {prefix}.{date}.{suffix} in a configured directory, with an
  * optional preceding timestamp.
  *
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class FileHandler

==================================================
LogFactory.java
index 7e8dd49aef..31d0e90bb9 100644
--- a/java/org/apache/juli/logging/LogConfigurationException.java
+++ b/java/org/apache/juli/logging/LogConfigurationException.java
@@ -24,7 +24,7 @@ package org.apache.juli.logging;
  * factory methods.</p>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class LogConfigurationException extends RuntimeException {

==================================================
ContextAccessController.java
index 09d7e27466..c013eb6083 100644
--- a/java/org/apache/juli/logging/LogFactory.java
+++ b/java/org/apache/juli/logging/LogFactory.java
@@ -64,7 +64,7 @@ import java.util.logging.LogManager;
  * @author Craig R. McClanahan
  * @author Costin Manolache
  * @author Richard A. Sitze
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 public /* abstract */ class LogFactory {
 

==================================================
ContextBindings.java
index 4228294195..6dee3a1660 100644
--- a/java/org/apache/naming/ContextAccessController.java
+++ b/java/org/apache/naming/ContextAccessController.java
@@ -24,7 +24,7 @@ import java.util.Hashtable;
  * Handles the access control on the JNDI contexts.
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ContextAccessController {

==================================================
EjbRef.java
index c8ac3df236..d94d05653a 100644
--- a/java/org/apache/naming/ContextBindings.java
+++ b/java/org/apache/naming/ContextBindings.java
@@ -30,7 +30,7 @@ import javax.naming.Context;
  * </ul>
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ContextBindings {

==================================================
JndiPermission.java
index 8816701de7..8d3ee0cbaa 100644
--- a/java/org/apache/naming/EjbRef.java
+++ b/java/org/apache/naming/EjbRef.java
@@ -26,7 +26,7 @@ import javax.naming.StringRefAddr;
  * Represents a reference address to an EJB.
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class EjbRef

==================================================
NameParserImpl.java
index a41aa0adb7..bb99271721 100644
--- a/java/org/apache/naming/JndiPermission.java
+++ b/java/org/apache/naming/JndiPermission.java
@@ -33,7 +33,7 @@ import java.security.BasicPermission;
  * </p>
  *
  * @author Glenn Nielsen
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public final class JndiPermission extends BasicPermission {

==================================================
NamingContext.java
index 3c8cb0573e..377f05b355 100644
--- a/java/org/apache/naming/NameParserImpl.java
+++ b/java/org/apache/naming/NameParserImpl.java
@@ -27,7 +27,7 @@ import javax.naming.CompositeName;
  * Parses names.
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class NameParserImpl 

==================================================
NamingContextBindingsEnumeration.java
index ec1f1e1c41..63f9cc1f56 100644
--- a/java/org/apache/naming/NamingContext.java
+++ b/java/org/apache/naming/NamingContext.java
@@ -44,7 +44,7 @@ import javax.naming.spi.NamingManager;
  * Catalina JNDI Context implementation.
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 public class NamingContext implements Context {
 

==================================================
NamingContextEnumeration.java
index 3f7ec22330..f73fcf7a73 100644
--- a/java/org/apache/naming/NamingContextBindingsEnumeration.java
+++ b/java/org/apache/naming/NamingContextBindingsEnumeration.java
@@ -30,7 +30,7 @@ import javax.naming.NamingException;
  * Naming enumeration implementation.
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class NamingContextBindingsEnumeration 

==================================================
NamingEntry.java
index 1101f06fcd..1bf2e631d7 100644
--- a/java/org/apache/naming/NamingContextEnumeration.java
+++ b/java/org/apache/naming/NamingContextEnumeration.java
@@ -28,7 +28,7 @@ import javax.naming.NamingException;
  * Naming enumeration implementation.
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class NamingContextEnumeration 

==================================================
ResourceEnvRef.java
index 060688662a..82b630d425 100644
--- a/java/org/apache/naming/NamingEntry.java
+++ b/java/org/apache/naming/NamingEntry.java
@@ -23,7 +23,7 @@ package org.apache.naming;
  * Represents a binding in a NamingContext.
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class NamingEntry {

==================================================
ResourceLinkRef.java
index 9f9612a96f..c7d1722df4 100644
--- a/java/org/apache/naming/ResourceEnvRef.java
+++ b/java/org/apache/naming/ResourceEnvRef.java
@@ -25,7 +25,7 @@ import javax.naming.Reference;
  * Represents a reference address to a resource environment.
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ResourceEnvRef

==================================================
ResourceRef.java
index 4ad8eac818..08fd390965 100644
--- a/java/org/apache/naming/ResourceLinkRef.java
+++ b/java/org/apache/naming/ResourceLinkRef.java
@@ -26,7 +26,7 @@ import javax.naming.StringRefAddr;
  * Represents a reference address to a resource.
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ResourceLinkRef

==================================================
SelectorContext.java
index 687b86d237..48f569f416 100644
--- a/java/org/apache/naming/ResourceRef.java
+++ b/java/org/apache/naming/ResourceRef.java
@@ -29,7 +29,7 @@ import javax.naming.StringRefAddr;
  * Represents a reference address to a resource.
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ResourceRef

==================================================
StringManager.java
index eaff03f2c4..140a175762 100644
--- a/java/org/apache/naming/SelectorContext.java
+++ b/java/org/apache/naming/SelectorContext.java
@@ -32,7 +32,7 @@ import javax.naming.NamingException;
  * Catalina JNDI Context implementation.
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class SelectorContext implements Context {

==================================================
TransactionRef.java
index faffe1b652..745ef6ff86 100644
--- a/java/org/apache/naming/StringManager.java
+++ b/java/org/apache/naming/StringManager.java
@@ -42,7 +42,7 @@ import java.util.ResourceBundle;
  * <p>Please see the documentation for java.util.ResourceBundle for
  * more information.
  *
- * @version $Revision$ $Date$
+ * @version $Id$
  *
  * @author James Duncan Davidson [duncan@eng.sun.com]
  * @author James Todd [gonzo@eng.sun.com]

==================================================
EjbFactory.java
index 8b97ad4f76..b7b06889f8 100644
--- a/java/org/apache/naming/TransactionRef.java
+++ b/java/org/apache/naming/TransactionRef.java
@@ -25,7 +25,7 @@ import javax.naming.Reference;
  * Represents a reference address to a transaction.
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class TransactionRef

==================================================
MailSessionFactory.java
index fec62500cc..5e02a60dda 100644
--- a/java/org/apache/naming/factory/EjbFactory.java
+++ b/java/org/apache/naming/factory/EjbFactory.java
@@ -32,7 +32,7 @@ import org.apache.naming.EjbRef;
  * Object factory for EJBs.
  * 
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class EjbFactory

==================================================
OpenEjbFactory.java
index 14d1e93738..d525955321 100644
--- a/java/org/apache/naming/factory/MailSessionFactory.java
+++ b/java/org/apache/naming/factory/MailSessionFactory.java
@@ -62,7 +62,7 @@ import javax.naming.spi.ObjectFactory;
  * </pre>
  *
  * @author Craig R. McClanahan
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class MailSessionFactory implements ObjectFactory {

==================================================
ResourceEnvFactory.java
index 4f615e3052..f722c78b14 100644
--- a/java/org/apache/naming/factory/OpenEjbFactory.java
+++ b/java/org/apache/naming/factory/OpenEjbFactory.java
@@ -34,7 +34,7 @@ import java.util.Properties;
  * 
  * @author Jacek Laskowski
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 public class OpenEjbFactory implements ObjectFactory {
 

==================================================
ResourceFactory.java
index 31a2cdf74f..b28fe4da4b 100644
--- a/java/org/apache/naming/factory/ResourceEnvFactory.java
+++ b/java/org/apache/naming/factory/ResourceEnvFactory.java
@@ -31,7 +31,7 @@ import org.apache.naming.ResourceEnvRef;
  * Object factory for Resources env.
  * 
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ResourceEnvFactory

==================================================
ResourceLinkFactory.java
index 46cf0647f1..1ce1c8acb3 100644
--- a/java/org/apache/naming/factory/ResourceFactory.java
+++ b/java/org/apache/naming/factory/ResourceFactory.java
@@ -31,7 +31,7 @@ import org.apache.naming.ResourceRef;
  * Object factory for Resources.
  * 
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ResourceFactory

==================================================
TransactionFactory.java
index d67ceccff1..4e088998e6 100644
--- a/java/org/apache/naming/factory/ResourceLinkFactory.java
+++ b/java/org/apache/naming/factory/ResourceLinkFactory.java
@@ -34,7 +34,7 @@ import org.apache.naming.ResourceLinkRef;
  * <p>Object factory for resource links.</p>
  * 
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ResourceLinkFactory

==================================================
javaURLContextFactory.java
index f933cf3e13..a9e1f73181 100644
--- a/java/org/apache/naming/factory/TransactionFactory.java
+++ b/java/org/apache/naming/factory/TransactionFactory.java
@@ -31,7 +31,7 @@ import org.apache.naming.TransactionRef;
  * Object factory for User transactions.
  * 
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class TransactionFactory

==================================================
BaseDirContext.java
index 48729c1fb2..7ddfc94686 100644
--- a/java/org/apache/naming/java/javaURLContextFactory.java
+++ b/java/org/apache/naming/java/javaURLContextFactory.java
@@ -44,7 +44,7 @@ import org.apache.naming.ContextBindings;
  * </ul>
  * 
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class javaURLContextFactory

==================================================
FileDirContext.java
index f28412b9da..1c48fe528c 100644
--- a/java/org/apache/naming/resources/BaseDirContext.java
+++ b/java/org/apache/naming/resources/BaseDirContext.java
@@ -52,7 +52,7 @@ import org.apache.naming.StringManager;
  * Directory Context implementation helper class.
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public abstract class BaseDirContext implements DirContext {

==================================================
ProxyDirContext.java
index ba02c11603..412171c651 100644
--- a/java/org/apache/naming/resources/FileDirContext.java
+++ b/java/org/apache/naming/resources/FileDirContext.java
@@ -49,7 +49,7 @@ import org.apache.naming.NamingEntry;
  * Filesystem Directory Context implementation helper class.
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class FileDirContext extends BaseDirContext {

==================================================
RecyclableNamingEnumeration.java
index e649b310cb..88bf40da65 100644
--- a/java/org/apache/naming/resources/ProxyDirContext.java
+++ b/java/org/apache/naming/resources/ProxyDirContext.java
@@ -43,7 +43,7 @@ import org.apache.naming.StringManager;
  * Proxy Directory Context implementation.
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class ProxyDirContext implements DirContext {

==================================================
WARDirContext.java
index 818abe4ac5..f22a5515fa 100644
--- a/java/org/apache/naming/resources/RecyclableNamingEnumeration.java
+++ b/java/org/apache/naming/resources/RecyclableNamingEnumeration.java
@@ -28,7 +28,7 @@ import javax.naming.NamingException;
  * Naming enumeration implementation.
  *
  * @author Remy Maucherat
- * @version $Revision$ $Date$
+ * @version $Id$
  */
 
 public class RecyclableNamingEnumeration<E> 

==================================================
