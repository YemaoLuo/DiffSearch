a7a27737415ec8c13e3e324ab8d09f7611df9f9a
==================================================
WsListener->WsContextListener to more clearly differentiate between it and WsSessionListener
==================================================
Mark Emlyn
==================================================
Thu Sep 19 08:44:45 2013 +0000
==================================================
WsContextListener.java
WsListener->WsContextListener to more clearly differentiate between it and WsSessionListener

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1524657 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestFormAuthenticator.java
similarity index 96%
rename from java/org/apache/tomcat/websocket/server/WsListener.java
rename to java/org/apache/tomcat/websocket/server/WsContextListener.java
index 81883c76c9..9a75f361c2 100644
--- a/java/org/apache/tomcat/websocket/server/WsListener.java
+++ b/java/org/apache/tomcat/websocket/server/WsContextListener.java
@@ -27,7 +27,7 @@ import javax.servlet.ServletContextListener;
  * {@link javax.servlet.ServletContext} that uses WebSocket to bootstrap the
  * {@link WsServerContainer} correctly.
  */
-public class WsListener implements ServletContextListener {
+public class WsContextListener implements ServletContextListener {
 
     @Override
     public void contextInitialized(ServletContextEvent sce) {

==================================================
TestDefaultServlet.java
index 848f958305..031c304f08 100644
--- a/test/org/apache/catalina/authenticator/TestFormAuthenticator.java
+++ b/test/org/apache/catalina/authenticator/TestFormAuthenticator.java
@@ -43,7 +43,7 @@ import org.apache.tomcat.util.descriptor.web.ApplicationListener;
 import org.apache.tomcat.util.descriptor.web.LoginConfig;
 import org.apache.tomcat.util.descriptor.web.SecurityCollection;
 import org.apache.tomcat.util.descriptor.web.SecurityConstraint;
-import org.apache.tomcat.websocket.server.WsListener;
+import org.apache.tomcat.websocket.server.WsContextListener;
 
 /*
  * Test FORM authentication for sessions that do and do not use cookies.
@@ -649,7 +649,7 @@ public class TestFormAuthenticator extends TomcatBaseTest {
             setUseCookies(clientShouldUseCookies);
             ctx.setCookies(serverShouldUseCookies);
             ctx.addApplicationListener(new ApplicationListener(
-                    WsListener.class.getName(), false));
+                    WsContextListener.class.getName(), false));
 
             TesterMapRealm realm = new TesterMapRealm();
             realm.addUser("tomcat", "tomcat");

==================================================
TestWebdavServlet.java
index 78c210c5a7..d2fd2b9cab 100644
--- a/test/org/apache/catalina/servlets/TestDefaultServlet.java
+++ b/test/org/apache/catalina/servlets/TestDefaultServlet.java
@@ -44,7 +44,7 @@ import org.apache.catalina.startup.Tomcat;
 import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
 import org.apache.tomcat.util.descriptor.web.ApplicationListener;
-import org.apache.tomcat.websocket.server.WsListener;
+import org.apache.tomcat.websocket.server.WsContextListener;
 
 public class TestDefaultServlet extends TomcatBaseTest {
 
@@ -103,7 +103,7 @@ public class TestDefaultServlet extends TomcatBaseTest {
         org.apache.catalina.Context ctx =
             tomcat.addWebapp(null, "/examples", appDir.getAbsolutePath());
         ctx.addApplicationListener(new ApplicationListener(
-                WsListener.class.getName(), false));
+                WsContextListener.class.getName(), false));
 
         // Override the default servlet with our own mappings
         Tomcat.addServlet(ctx, "default2", new DefaultServlet());

==================================================
TestTomcat.java
index a322350326..d8bf2d0acf 100644
--- a/test/org/apache/catalina/servlets/TestWebdavServlet.java
+++ b/test/org/apache/catalina/servlets/TestWebdavServlet.java
@@ -31,7 +31,7 @@ import org.apache.catalina.startup.Tomcat;
 import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
 import org.apache.tomcat.util.descriptor.web.ApplicationListener;
-import org.apache.tomcat.websocket.server.WsListener;
+import org.apache.tomcat.websocket.server.WsContextListener;
 
 public class TestWebdavServlet extends TomcatBaseTest {
 
@@ -96,7 +96,7 @@ public class TestWebdavServlet extends TomcatBaseTest {
         Tomcat.addServlet(ctx, "webdav", new WebdavServlet());
         ctx.addServletMapping("/webdav/*", "webdav");
         ctx.addApplicationListener(new ApplicationListener(
-                WsListener.class.getName(), false));
+                WsContextListener.class.getName(), false));
 
         tomcat.start();
 

==================================================
TestCustomSsl.java
index bd9ec96ceb..6ea5d56037 100644
--- a/test/org/apache/catalina/startup/TestTomcat.java
+++ b/test/org/apache/catalina/startup/TestTomcat.java
@@ -46,7 +46,7 @@ import org.apache.tomcat.util.buf.ByteChunk;
 import org.apache.tomcat.util.descriptor.web.ApplicationListener;
 import org.apache.tomcat.util.descriptor.web.ContextEnvironment;
 import org.apache.tomcat.util.descriptor.web.ContextResourceLink;
-import org.apache.tomcat.websocket.server.WsListener;
+import org.apache.tomcat.websocket.server.WsContextListener;
 
 public class TestTomcat extends TomcatBaseTest {
 
@@ -220,7 +220,7 @@ public class TestTomcat extends TomcatBaseTest {
         org.apache.catalina.Context ctxt  = tomcat.addWebapp(
                 null, "/examples", appDir.getAbsolutePath());
         ctxt.addApplicationListener(new ApplicationListener(
-                WsListener.class.getName(), false));
+                WsContextListener.class.getName(), false));
         tomcat.start();
 
         ByteChunk res = getUrl("http://localhost:" + getPort() +
@@ -237,7 +237,7 @@ public class TestTomcat extends TomcatBaseTest {
         org.apache.catalina.Context ctxt  = tomcat.addWebapp(
                 null, "/examples", appDir.getAbsolutePath());
         ctxt.addApplicationListener(new ApplicationListener(
-                WsListener.class.getName(), false));
+                WsContextListener.class.getName(), false));
 
         tomcat.start();
 
@@ -358,7 +358,7 @@ public class TestTomcat extends TomcatBaseTest {
         org.apache.catalina.Context ctx =
             tomcat.addWebapp(null, "/examples", appDir.getAbsolutePath());
         ctx.addApplicationListener(new ApplicationListener(
-                WsListener.class.getName(), false));
+                WsContextListener.class.getName(), false));
 
         Tomcat.addServlet(ctx, "testGetResource", new GetResource());
         ctx.addServletMapping("/testGetResource", "testGetResource");

==================================================
TestSsl.java
index 0db7c8bd50..a29b8c5f3e 100644
--- a/test/org/apache/tomcat/util/net/TestCustomSsl.java
+++ b/test/org/apache/tomcat/util/net/TestCustomSsl.java
@@ -36,7 +36,7 @@ import org.apache.coyote.http11.AbstractHttp11JsseProtocol;
 import org.apache.tomcat.util.buf.ByteChunk;
 import org.apache.tomcat.util.descriptor.web.ApplicationListener;
 import org.apache.tomcat.util.net.jsse.TesterBug50640SslImpl;
-import org.apache.tomcat.websocket.server.WsListener;
+import org.apache.tomcat.websocket.server.WsContextListener;
 
 /**
  * The keys and certificates used in this file are all available in svn and were
@@ -76,7 +76,7 @@ public class TestCustomSsl extends TomcatBaseTest {
         Context ctxt  = tomcat.addWebapp(
                 null, "/examples", appDir.getAbsolutePath());
         ctxt.addApplicationListener(new ApplicationListener(
-                WsListener.class.getName(), false));
+                WsContextListener.class.getName(), false));
 
         tomcat.start();
         ByteChunk res = getUrl("https://localhost:" + getPort() +

==================================================
TestWsSubprotocols.java
index b91aa52b40..654ae0016b 100644
--- a/test/org/apache/tomcat/util/net/TestSsl.java
+++ b/test/org/apache/tomcat/util/net/TestSsl.java
@@ -40,7 +40,7 @@ import org.apache.catalina.startup.Tomcat;
 import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
 import org.apache.tomcat.util.descriptor.web.ApplicationListener;
-import org.apache.tomcat.websocket.server.WsListener;
+import org.apache.tomcat.websocket.server.WsContextListener;
 
 /**
  * The keys and certificates used in this file are all available in svn and were
@@ -59,7 +59,7 @@ public class TestSsl extends TomcatBaseTest {
         org.apache.catalina.Context ctxt  = tomcat.addWebapp(
                 null, "/examples", appDir.getAbsolutePath());
         ctxt.addApplicationListener(new ApplicationListener(
-                WsListener.class.getName(), false));
+                WsContextListener.class.getName(), false));
 
         TesterSupport.initSsl(tomcat);
 
@@ -79,7 +79,7 @@ public class TestSsl extends TomcatBaseTest {
         org.apache.catalina.Context ctxt  = tomcat.addWebapp(
                 null, "/examples", appDir.getAbsolutePath());
         ctxt.addApplicationListener(new ApplicationListener(
-                WsListener.class.getName(), false));
+                WsContextListener.class.getName(), false));
 
         TesterSupport.initSsl(tomcat, "localhost-copy1.jks", "changeit",
                 "tomcatpass");
@@ -174,7 +174,7 @@ public class TestSsl extends TomcatBaseTest {
         Context ctxt = tomcat.addWebapp(null, "/examples",
                 appDir.getAbsolutePath());
         ctxt.addApplicationListener(new ApplicationListener(
-                WsListener.class.getName(), false));
+                WsContextListener.class.getName(), false));
 
         TesterSupport.initSsl(tomcat);
 

==================================================
TestWsWebSocketContainer.java
index b8e20a0a5b..abf58b5215 100644
--- a/test/org/apache/tomcat/websocket/TestWsSubprotocols.java
+++ b/test/org/apache/tomcat/websocket/TestWsSubprotocols.java
@@ -43,7 +43,7 @@ import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.descriptor.web.ApplicationListener;
 import org.apache.tomcat.websocket.TesterMessageCountClient.TesterProgrammaticEndpoint;
 import org.apache.tomcat.websocket.server.Constants;
-import org.apache.tomcat.websocket.server.WsListener;
+import org.apache.tomcat.websocket.server.WsContextListener;
 
 public class TestWsSubprotocols extends TomcatBaseTest {
 
@@ -104,7 +104,7 @@ public class TestWsSubprotocols extends TomcatBaseTest {
 
     }
 
-    public static class Config extends WsListener {
+    public static class Config extends WsContextListener {
         @Override
         public void contextInitialized(ServletContextEvent sce) {
             super.contextInitialized(sce);

==================================================
TesterEchoServer.java
index 032407c20b..96d89b0cc8 100644
--- a/test/org/apache/tomcat/websocket/TestWsWebSocketContainer.java
+++ b/test/org/apache/tomcat/websocket/TestWsWebSocketContainer.java
@@ -56,7 +56,7 @@ import org.apache.tomcat.websocket.TesterMessageCountClient.BasicText;
 import org.apache.tomcat.websocket.TesterMessageCountClient.TesterEndpoint;
 import org.apache.tomcat.websocket.TesterMessageCountClient.TesterProgrammaticEndpoint;
 import org.apache.tomcat.websocket.server.Constants;
-import org.apache.tomcat.websocket.server.WsListener;
+import org.apache.tomcat.websocket.server.WsContextListener;
 
 public class TestWsWebSocketContainer extends TomcatBaseTest {
 
@@ -441,7 +441,7 @@ public class TestWsWebSocketContainer extends TomcatBaseTest {
     }
 
 
-    public static class BlockingConfig extends WsListener {
+    public static class BlockingConfig extends WsContextListener {
 
         public static final String PATH = "/block";
 
@@ -552,7 +552,7 @@ public class TestWsWebSocketContainer extends TomcatBaseTest {
     }
 
 
-    public static class ConstantTxConfig extends WsListener {
+    public static class ConstantTxConfig extends WsContextListener {
 
         private static final String PATH = "/test";
 

==================================================
TesterFirehoseServer.java
index 87bc3680d8..36fde23748 100644
--- a/test/org/apache/tomcat/websocket/TesterEchoServer.java
+++ b/test/org/apache/tomcat/websocket/TesterEchoServer.java
@@ -27,11 +27,11 @@ import javax.websocket.server.ServerContainer;
 import javax.websocket.server.ServerEndpoint;
 
 import org.apache.tomcat.websocket.server.Constants;
-import org.apache.tomcat.websocket.server.WsListener;
+import org.apache.tomcat.websocket.server.WsContextListener;
 
 public class TesterEchoServer {
 
-    public static class Config extends WsListener {
+    public static class Config extends WsContextListener {
 
         public static final String PATH_ASYNC = "/echoAsync";
         public static final String PATH_BASIC = "/echoBasic";

==================================================
TestEncodingDecoding.java
index abe9d810a3..4047ff95cc 100644
--- a/test/org/apache/tomcat/websocket/TesterFirehoseServer.java
+++ b/test/org/apache/tomcat/websocket/TesterFirehoseServer.java
@@ -27,7 +27,7 @@ import javax.websocket.server.ServerContainer;
 import javax.websocket.server.ServerEndpoint;
 
 import org.apache.tomcat.websocket.server.Constants;
-import org.apache.tomcat.websocket.server.WsListener;
+import org.apache.tomcat.websocket.server.WsContextListener;
 
 /**
  * Sends {@link #MESSAGE_COUNT} messages of size {@link #MESSAGE_SIZE} bytes as
@@ -49,7 +49,7 @@ public class TesterFirehoseServer {
     }
 
 
-    public static class Config extends WsListener {
+    public static class Config extends WsContextListener {
 
         public static final String PATH = "/firehose";
 

==================================================
TesterUtil.java
index 1ef6cc7c9e..9a2cdb790c 100644
--- a/test/org/apache/tomcat/websocket/pojo/TestEncodingDecoding.java
+++ b/test/org/apache/tomcat/websocket/pojo/TestEncodingDecoding.java
@@ -57,7 +57,7 @@ import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.descriptor.web.ApplicationListener;
 import org.apache.tomcat.websocket.pojo.TesterUtil.ServerConfigListener;
 import org.apache.tomcat.websocket.pojo.TesterUtil.SingletonConfigurator;
-import org.apache.tomcat.websocket.server.WsListener;
+import org.apache.tomcat.websocket.server.WsContextListener;
 
 public class TestEncodingDecoding extends TomcatBaseTest {
 
@@ -414,7 +414,7 @@ public class TestEncodingDecoding extends TomcatBaseTest {
     }
 
 
-    public static class ProgramaticServerEndpointConfig extends WsListener {
+    public static class ProgramaticServerEndpointConfig extends WsContextListener {
 
         @Override
         public void contextInitialized(ServletContextEvent sce) {

==================================================
TestWsServerContainer.java
index e0951e7451..21c11bb460 100644
--- a/test/org/apache/tomcat/websocket/pojo/TesterUtil.java
+++ b/test/org/apache/tomcat/websocket/pojo/TesterUtil.java
@@ -23,11 +23,11 @@ import javax.websocket.server.ServerContainer;
 import javax.websocket.server.ServerEndpointConfig.Configurator;
 
 import org.apache.tomcat.websocket.server.Constants;
-import org.apache.tomcat.websocket.server.WsListener;
+import org.apache.tomcat.websocket.server.WsContextListener;
 
 public class TesterUtil {
 
-    public static class ServerConfigListener extends WsListener {
+    public static class ServerConfigListener extends WsContextListener {
 
         private static Class<?> pojoClazz;
 

==================================================
