7098f89132d5b9bd4921204b69c05837c5a9f7d2
==================================================
Implement keep alive timeout logic
==================================================
Filip Hanik
==================================================
Wed Apr 25 18:29:50 2007 +0000
==================================================
TcpFailureDetector.java
Implement keep alive timeout logic


git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk@532434 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AbstractSender.java
index 37a66f952b..3fb1f68a7d 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/TcpFailureDetector.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/TcpFailureDetector.java
@@ -198,7 +198,7 @@ public class TcpFailureDetector extends ChannelInterceptorBase {
         }catch ( Exception x ) {
             log.warn("Unable to perform heartbeat on the TcpFailureDetector.",x);
         } finally {
-            super.heartbeat();
+            
         }
     }
     

==================================================
PooledSender.java
index 2695d63af0..d5fe7f10a6 100644
--- a/java/org/apache/catalina/tribes/transport/AbstractSender.java
+++ b/java/org/apache/catalina/tribes/transport/AbstractSender.java
@@ -113,7 +113,7 @@ public abstract class AbstractSender implements DataSender {
     public boolean keepalive() {
         boolean disconnect = false;
         if ( keepAliveCount >= 0 && requestCount>keepAliveCount ) disconnect = true;
-        else if ( keepAliveTime >= 0 && keepAliveTime> (System.currentTimeMillis()-connectTime) ) disconnect = true;
+        else if ( keepAliveTime >= 0 && (System.currentTimeMillis()-connectTime)>keepAliveTime ) disconnect = true;
         if ( disconnect ) disconnect();
         return disconnect;
     }

==================================================
ParallelNioSender.java
index efa767fdcf..a344c14b39 100644
--- a/java/org/apache/catalina/tribes/transport/PooledSender.java
+++ b/java/org/apache/catalina/tribes/transport/PooledSender.java
@@ -80,7 +80,7 @@ public abstract class PooledSender extends AbstractSender implements MultiPointS
 
     public boolean keepalive() {
         //do nothing, the pool checks on every return
-        return false;
+        return (queue==null)?false:queue.checkIdleKeepAlive();
     }
 
     
@@ -130,6 +130,16 @@ public abstract class PooledSender extends AbstractSender implements MultiPointS
         public int getInPoolSize() {
             return notinuse.size();
         }
+        
+        public synchronized boolean checkIdleKeepAlive() {
+            DataSender[] list = new DataSender[notinuse.size()];
+            notinuse.toArray(list);
+            boolean result = false;
+            for (int i=0; i<list.length; i++) {
+                result = result | list[i].keepalive();
+            }
+            return result;
+        }
 
         public synchronized DataSender getSender(long timeout) {
             long start = System.currentTimeMillis();

==================================================
