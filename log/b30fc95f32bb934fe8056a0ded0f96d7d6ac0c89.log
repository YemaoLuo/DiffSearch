b30fc95f32bb934fe8056a0ded0f96d7d6ac0c89
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49140
==================================================
Mark Emlyn
==================================================
Fri Apr 23 15:03:28 2010 +0000
==================================================
Request.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49140
Use appropriate iterators and for-each where possible

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@937322 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ApplicationHttpRequest.java
index 2d4000f0b0..d15d7ff7c4 100644
--- a/java/org/apache/catalina/connector/Request.java
+++ b/java/org/apache/catalina/connector/Request.java
@@ -2962,13 +2962,8 @@ public class Request
 
         // Process the quality values in highest->lowest order (due to
         // negating the Double value when creating the key)
-        Iterator<Double> keys = locales.keySet().iterator();
-        while (keys.hasNext()) {
-            Double key = keys.next();
-            ArrayList<Locale> list = locales.get(key);
-            Iterator<Locale> values = list.iterator();
-            while (values.hasNext()) {
-                Locale locale = values.next();
+        for (ArrayList<Locale> list : locales.values()) {
+            for (Locale locale : list) {
                 addLocale(locale);
             }
         }

==================================================
StandardContext.java
index 27416dd990..9079d80117 100644
--- a/java/org/apache/catalina/core/ApplicationHttpRequest.java
+++ b/java/org/apache/catalina/core/ApplicationHttpRequest.java
@@ -649,11 +649,11 @@ class ApplicationHttpRequest extends HttpServletRequestWrapper {
         if (orig == null)
             return (new HashMap<String, String[]>());
         HashMap<String, String[]> dest = new HashMap<String, String[]>();
-        Iterator<String> keys = orig.keySet().iterator();
-        while (keys.hasNext()) {
-            String key = keys.next();
-            dest.put(key, orig.get(key));
+        
+        for (Map.Entry<String, String[]> entry : orig.entrySet()) {
+            dest.put(entry.getKey(), entry.getValue());
         }
+
         return (dest);
 
     }

==================================================
ClusterSingleSignOnListener.java
index 717ff5067e..6b7b42516d 100644
--- a/java/org/apache/catalina/core/StandardContext.java
+++ b/java/org/apache/catalina/core/StandardContext.java
@@ -38,7 +38,6 @@ import java.util.TreeMap;
 import javax.management.AttributeNotFoundException;
 import javax.management.ListenerNotFoundException;
 import javax.management.MBeanNotificationInfo;
-import javax.management.MBeanRegistrationException;
 import javax.management.MBeanServer;
 import javax.management.MalformedObjectNameException;
 import javax.management.Notification;
@@ -4461,13 +4460,8 @@ public class StandardContext
         }
 
         // Load the collected "load on startup" servlets
-        Iterator<Integer> keys = map.keySet().iterator();
-        while (keys.hasNext()) {
-            Integer key = keys.next();
-            ArrayList<Wrapper> list = map.get(key);
-            Iterator<Wrapper> wrappers = list.iterator();
-            while (wrappers.hasNext()) {
-                Wrapper wrapper = wrappers.next();
+        for (ArrayList<Wrapper> list : map.values()) {
+            for (Wrapper wrapper : list) {
                 try {
                     wrapper.load();
                 } catch (ServletException e) {

==================================================
ClusterSessionListener.java
index a9e09743dc..77cee04cae 100644
--- a/java/org/apache/catalina/ha/authenticator/ClusterSingleSignOnListener.java
+++ b/java/org/apache/catalina/ha/authenticator/ClusterSingleSignOnListener.java
@@ -144,13 +144,10 @@ public class ClusterSingleSignOnListener extends ClusterListener {
         Session session = null;
 
         if (ctxname == null) {
-            java.util.Iterator<String> i = managers.keySet().iterator();
-            while (i.hasNext()) {
-                String key = i.next();
-                ClusterManager mgr = managers.get(key);
-                if (mgr != null) {
+            for (Map.Entry<String, ClusterManager> entry : managers.entrySet()) {
+                if (entry.getValue() != null) {
                     try {
-                        session = mgr.findSession(sessionId);
+                        session = entry.getValue().findSession(sessionId);
                     } catch (IOException io) {
                         log.error("Session doesn't exist:" + io);
                     }
@@ -160,7 +157,7 @@ public class ClusterSingleSignOnListener extends ClusterListener {
                     // up
                     if (log.isDebugEnabled())
                         log.debug("Context manager doesn't exist:"
-                                  + key);
+                                  + entry.getKey());
                 }
             }
         } else {

==================================================
ContextConfig.java
index 4e22b8ece3..e41273f0a0 100644
--- a/java/org/apache/catalina/ha/session/ClusterSessionListener.java
+++ b/java/org/apache/catalina/ha/session/ClusterSessionListener.java
@@ -17,7 +17,6 @@
 
 package org.apache.catalina.ha.session;
 
-import java.util.Iterator;
 import java.util.Map;
 
 import org.apache.catalina.ha.*;
@@ -67,18 +66,16 @@ public class ClusterSessionListener extends ClusterListener {
             //if so, wait until we are fully started up
             Map<String,ClusterManager> managers = cluster.getManagers() ;
             if (ctxname == null) {
-                Iterator<String> i = managers.keySet().iterator();
-                while (i.hasNext()) {
-                    String key = i.next();
-                    ClusterManager mgr = managers.get(key);
-                    if (mgr != null)
-                        mgr.messageDataReceived(msg);
+                for (Map.Entry<String, ClusterManager> entry :
+                        managers.entrySet()) {
+                    if (entry.getValue() != null)
+                        entry.getValue().messageDataReceived(msg);
                     else {
                         //this happens a lot before the system has started
                         // up
                         if (log.isDebugEnabled())
                             log.debug("Context manager doesn't exist:"
-                                    + key);
+                                    + entry.getKey());
                     }
                 }
             } else {

==================================================
