2cd3c6b620e9485694ed42e66896fa7f07885602
==================================================
Revert "Refactor AmbiguousBean test after seeing failures in CI"
==================================================
Mark Thomas
==================================================
Fri Mar 31 00:09:16 2023 +0100
==================================================
TestBeanSupport.java
Revert "Refactor AmbiguousBean test after seeing failures in CI"

This reverts commit ffb5ef2de0f161b2d4c1ca92452e478ef4fcc13b.

JavaBeans has a fixed algorithm when mehtods appear to be
ambiguous. This needs to be replicated in the standalone support



==================================================
TestBeanSupportAmbiguous.java
index 1f87d37bec..0807a90dce 100644
--- a/test/jakarta/el/TestBeanSupport.java
+++ b/test/jakarta/el/TestBeanSupport.java
@@ -74,6 +74,15 @@ public class TestBeanSupport extends ELBaseTest {
         doTest(MismatchBean.class, "value", TypeA.class, TypeA.class, null);
     }
 
+    /*
+     * The first setter found "wins".
+     */
+    @Test
+    public void testAmbiguousBean() {
+        doTest(AmbiguousBean.class, "value", TypeA.class, null, TypeA.class);
+    }
+
+
     private void doTest(Class<?> clazz, String propertyName, Class<?> type, Class<?> typeGet, Class<?> typeSet) {
         BeanProperties beanProperties = BeanSupport.getInstance().getBeanProperties(clazz);
         BeanProperty beanProperty = beanProperties.properties.get(propertyName);
@@ -213,6 +222,15 @@ public class TestBeanSupport extends ELBaseTest {
     }
 
 
+    public static class AmbiguousBean {
+        public void setValue(@SuppressWarnings("unused") TypeA value) {
+        }
+
+        public void setValue(@SuppressWarnings("unused") String value) {
+        }
+    }
+
+
     public static class TypeA {
     }
 

==================================================
