18a87c4f0cf3c4ee6a98e339e9fc459d7c43db92
==================================================
Refactor Mapper performance tests to a separate class so they can be more easily excluded.
==================================================
Mark Thomas
==================================================
Thu Feb 5 14:32:03 2015 +0000
==================================================
TestMapper.java
Refactor Mapper performance tests to a separate class so they can be more easily excluded.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1657584 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestMapperPerformance.java
index 91ff4ebd15..0b7d666ac5 100644
--- a/test/org/apache/catalina/mapper/TestMapper.java
+++ b/test/org/apache/catalina/mapper/TestMapper.java
@@ -41,7 +41,7 @@ import org.apache.tomcat.util.buf.MessageBytes;
 
 public class TestMapper extends LoggingBaseTest {
 
-    private Mapper mapper;
+    protected Mapper mapper;
 
     private HashMap<String, Host> hostMap = new HashMap<>();
 
@@ -538,38 +538,4 @@ public class TestMapper extends LoggingBaseTest {
             assertEquals("/foo/bar/bla", mappingData.contextPath.toString());
         }
     }
-
-    @Test
-    public void testPerformance() throws Exception {
-        // Takes ~1s on markt's laptop. If this takes more than 5s something
-        // probably needs looking at. If this fails repeatedly then we may need
-        // to increase this limit.
-        final long maxTime = 5000;
-        long time = testPerformanceImpl();
-        if (time >= maxTime) {
-            // Rerun to reject occasional failures, e.g. because of gc
-            log.warn("testPerformance() test completed in " + time + " ms");
-            time = testPerformanceImpl();
-            log.warn("testPerformance() test rerun completed in " + time + " ms");
-        }
-        assertTrue(String.valueOf(time), time < maxTime);
-    }
-
-    private long testPerformanceImpl() throws Exception {
-        MappingData mappingData = new MappingData();
-        MessageBytes host = MessageBytes.newInstance();
-        host.setString("iowejoiejfoiew");
-        MessageBytes uri = MessageBytes.newInstance();
-        uri.setString("/foo/bar/blah/bobou/foo");
-        uri.toChars();
-        uri.getCharChunk().setLimit(-1);
-
-        long start = System.currentTimeMillis();
-        for (int i = 0; i < 1000000; i++) {
-            mappingData.recycle();
-            mapper.map(host, uri, null, mappingData);
-        }
-        long time = System.currentTimeMillis() - start;
-        return time;
-    }
 }

==================================================
