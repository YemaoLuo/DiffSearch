0c966766f5623a613b64e2d456c23ef0ff7cbbae
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=50929
==================================================
Mark Emlyn
==================================================
Tue Mar 15 23:05:53 2011 +0000
==================================================
HttpUtils.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=50929
When wrapping an exception, set the root cause

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1081987 13f79535-47bb-0310-9956-ffa450edef68



==================================================
CoyoteInputStream.java
index ba756e6fb3..e7e1b912f5 100644
--- a/java/javax/servlet/http/HttpUtils.java
+++ b/java/javax/servlet/http/HttpUtils.java
@@ -182,7 +182,7 @@ public class HttpUtils {
             } while ((len - offset) > 0);
 
         } catch (IOException e) {
-            throw new IllegalArgumentException(e.getMessage());
+            throw new IllegalArgumentException(e.getMessage(), e);
         }
 
         // XXX we shouldn't assume that the only kind of POST body
@@ -194,7 +194,7 @@ public class HttpUtils {
         } catch (java.io.UnsupportedEncodingException e) {
             // XXX function should accept an encoding parameter & throw this
             // exception.  Otherwise throw something expected.
-            throw new IllegalArgumentException(e.getMessage());
+            throw new IllegalArgumentException(e.getMessage(), e);
         }
     }
 

==================================================
JDBCRealm.java
index 9d26cb9c51..dfdca5b041 100644
--- a/java/org/apache/catalina/connector/CoyoteInputStream.java
+++ b/java/org/apache/catalina/connector/CoyoteInputStream.java
@@ -101,7 +101,7 @@ public class CoyoteInputStream
                 if (e instanceof IOException){
                     throw (IOException)e;
                 } else {
-                    throw new RuntimeException(e.getMessage());
+                    throw new RuntimeException(e.getMessage(), e);
                 }
             }
         } else {
@@ -131,7 +131,7 @@ public class CoyoteInputStream
                 if (e instanceof IOException){
                     throw (IOException)e;
                 } else {
-                    throw new RuntimeException(e.getMessage());
+                    throw new RuntimeException(e.getMessage(), e);
                 }
             }
         } else {
@@ -162,7 +162,7 @@ public class CoyoteInputStream
                 if (e instanceof IOException){
                     throw (IOException)e;
                 } else {
-                    throw new RuntimeException(e.getMessage());
+                    throw new RuntimeException(e.getMessage() ,e);
                 }
             }
         } else {
@@ -195,7 +195,7 @@ public class CoyoteInputStream
                 if (e instanceof IOException){
                     throw (IOException)e;
                 } else {
-                    throw new RuntimeException(e.getMessage());
+                    throw new RuntimeException(e.getMessage(), e);
                 }
             }
         } else {
@@ -235,7 +235,7 @@ public class CoyoteInputStream
                 if (e instanceof IOException){
                     throw (IOException)e;
                 } else {
-                    throw new RuntimeException(e.getMessage());
+                    throw new RuntimeException(e.getMessage(), e);
                 }
             }
         } else {

==================================================
JDBCAccessLogValve.java
index 639596dfbe..332ff6b96e 100644
--- a/java/org/apache/catalina/realm/JDBCRealm.java
+++ b/java/org/apache/catalina/realm/JDBCRealm.java
@@ -698,7 +698,7 @@ public class JDBCRealm
                 driver = (Driver) clazz.newInstance();
             } catch (Throwable e) {
                 ExceptionUtils.handleThrowable(e);
-                throw new SQLException(e.getMessage());
+                throw new SQLException(e.getMessage(), e);
             }
         }
 

==================================================
WARDirContext.java
index 2ba0069fad..767c30fea7 100644
--- a/java/org/apache/catalina/valves/JDBCAccessLogValve.java
+++ b/java/org/apache/catalina/valves/JDBCAccessLogValve.java
@@ -573,7 +573,7 @@ public final class JDBCAccessLogValve extends ValveBase implements AccessLog {
                 driver = (Driver) clazz.newInstance();
             } catch (Throwable e) {
                 ExceptionUtils.handleThrowable(e);
-                throw new SQLException(e.getMessage());
+                throw new SQLException(e.getMessage(), e);
             }
         }
 

==================================================
NodeCreateRule.java
index 8106fd1a7c..264be9f477 100644
--- a/java/org/apache/naming/resources/WARDirContext.java
+++ b/java/org/apache/naming/resources/WARDirContext.java
@@ -990,7 +990,7 @@ public class WARDirContext extends BaseDirContext {
                     return is;
                 }
             } catch (ZipException e) {
-                throw new IOException(e.getMessage());
+                throw new IOException(e.getMessage(), e);
             }
             return super.streamContent();
         }

==================================================
