c63ae55f92b96d669be5fc45aa70813b02203e07
==================================================
Pull up common process() method in AstractEndpoint.Handler interface
==================================================
Mark Thomas
==================================================
Sun Nov 23 22:51:27 2014 +0000
==================================================
AbstractProtocol.java
Pull up common process() method in AstractEndpoint.Handler interface

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1641289 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AjpAprProtocol.java
index fe0fbc928f..03d922d007 100644
--- a/java/org/apache/coyote/AbstractProtocol.java
+++ b/java/org/apache/coyote/AbstractProtocol.java
@@ -345,7 +345,7 @@ public abstract class AbstractProtocol<S> implements ProtocolHandler,
     /**
      * Obtain the handler associated with the underlying Endpoint
      */
-    protected abstract Handler getHandler();
+    protected abstract Handler<S> getHandler();
 
 
     // ----------------------------------------------------- JMX related methods
@@ -563,7 +563,7 @@ public abstract class AbstractProtocol<S> implements ProtocolHandler,
     // ------------------------------------------- Connection handler base class
 
     protected abstract static class AbstractConnectionHandler<S,P extends Processor<S>>
-            implements AbstractEndpoint.Handler {
+            implements AbstractEndpoint.Handler<S> {
 
         protected abstract Log getLog();
 
@@ -591,6 +591,7 @@ public abstract class AbstractProtocol<S> implements ProtocolHandler,
         }
 
 
+        @Override
         public SocketState process(SocketWrapperBase<S> wrapper,
                 SocketStatus status) {
             if (wrapper == null) {

==================================================
AjpNio2Protocol.java
index 59c4a936e9..884e3c1870 100644
--- a/java/org/apache/coyote/ajp/AjpAprProtocol.java
+++ b/java/org/apache/coyote/ajp/AjpAprProtocol.java
@@ -21,7 +21,6 @@ import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.net.AbstractEndpoint;
 import org.apache.tomcat.util.net.AprEndpoint;
-import org.apache.tomcat.util.net.AprEndpoint.Handler;
 import org.apache.tomcat.util.net.SocketWrapperBase;
 
 
@@ -37,7 +36,7 @@ public class AjpAprProtocol extends AbstractAjpProtocol<Long> {
 
 
     @Override
-    protected AbstractEndpoint.Handler getHandler() {
+    protected AbstractEndpoint.Handler<Long> getHandler() {
         return cHandler;
     }
 
@@ -88,8 +87,7 @@ public class AjpAprProtocol extends AbstractAjpProtocol<Long> {
     // --------------------------------------  AjpConnectionHandler Inner Class
 
     protected static class AjpConnectionHandler
-            extends AbstractAjpConnectionHandler<Long>
-            implements Handler {
+            extends AbstractAjpConnectionHandler<Long> {
 
         public AjpConnectionHandler(AjpAprProtocol proto) {
             super(proto);

==================================================
AjpNioProtocol.java
index 271f5b0f71..bea201fc94 100644
--- a/java/org/apache/coyote/ajp/AjpNio2Protocol.java
+++ b/java/org/apache/coyote/ajp/AjpNio2Protocol.java
@@ -41,7 +41,7 @@ public class AjpNio2Protocol extends AbstractAjpProtocol<Nio2Channel> {
 
 
     @Override
-    protected AbstractEndpoint.Handler getHandler() {
+    protected AbstractEndpoint.Handler<Nio2Channel> getHandler() {
         return cHandler;
     }
 

==================================================
Http11AprProtocol.java
index 24d193f2bf..fd53308114 100644
--- a/java/org/apache/coyote/ajp/AjpNioProtocol.java
+++ b/java/org/apache/coyote/ajp/AjpNioProtocol.java
@@ -43,7 +43,7 @@ public class AjpNioProtocol extends AbstractAjpProtocol<NioChannel> {
 
 
     @Override
-    protected AbstractEndpoint.Handler getHandler() {
+    protected AbstractEndpoint.Handler<NioChannel> getHandler() {
         return cHandler;
     }
 

==================================================
Http11Nio2Protocol.java
index 8fb2e37238..1ab43699b4 100644
--- a/java/org/apache/coyote/http11/Http11AprProtocol.java
+++ b/java/org/apache/coyote/http11/Http11AprProtocol.java
@@ -28,7 +28,6 @@ import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.net.AbstractEndpoint;
 import org.apache.tomcat.util.net.AprEndpoint;
-import org.apache.tomcat.util.net.AprEndpoint.Handler;
 import org.apache.tomcat.util.net.AprEndpoint.Poller;
 import org.apache.tomcat.util.net.SocketStatus;
 import org.apache.tomcat.util.net.SocketWrapperBase;
@@ -51,7 +50,7 @@ public class Http11AprProtocol extends AbstractHttp11Protocol<Long> {
 
 
     @Override
-    protected AbstractEndpoint.Handler getHandler() {
+    protected AbstractEndpoint.Handler<Long> getHandler() {
         return cHandler;
     }
 
@@ -217,7 +216,7 @@ public class Http11AprProtocol extends AbstractHttp11Protocol<Long> {
     // --------------------  Connection handler --------------------
 
     protected static class Http11ConnectionHandler
-            extends AbstractConnectionHandler<Long,Http11AprProcessor> implements Handler {
+            extends AbstractConnectionHandler<Long,Http11AprProcessor> {
 
         protected Http11AprProtocol proto;
 

==================================================
Http11NioProtocol.java
index d5b90d0765..c5ef685692 100644
--- a/java/org/apache/coyote/http11/Http11Nio2Protocol.java
+++ b/java/org/apache/coyote/http11/Http11Nio2Protocol.java
@@ -52,7 +52,7 @@ public class Http11Nio2Protocol extends AbstractHttp11JsseProtocol<Nio2Channel>
 
 
     @Override
-    protected AbstractEndpoint.Handler getHandler() {
+    protected AbstractEndpoint.Handler<Nio2Channel> getHandler() {
         return cHandler;
     }
 

==================================================
SpdyProxyProtocol.java
index 1215dcd70c..449283edbd 100644
--- a/java/org/apache/coyote/http11/Http11NioProtocol.java
+++ b/java/org/apache/coyote/http11/Http11NioProtocol.java
@@ -57,7 +57,7 @@ public class Http11NioProtocol extends AbstractHttp11JsseProtocol<NioChannel> {
 
 
     @Override
-    protected AbstractEndpoint.Handler getHandler() {
+    protected AbstractEndpoint.Handler<NioChannel> getHandler() {
         return cHandler;
     }
 

==================================================
AbstractEndpoint.java
index 4436bc4359..2138ae7971 100644
--- a/java/org/apache/coyote/spdy/SpdyProxyProtocol.java
+++ b/java/org/apache/coyote/spdy/SpdyProxyProtocol.java
@@ -87,7 +87,7 @@ public class SpdyProxyProtocol extends AbstractProtocol<NioChannel> {
     }
 
     @Override
-    protected Handler getHandler() {
+    protected Handler<NioChannel> getHandler() {
         return cHandler;
     }
 

==================================================
AprEndpoint.java
index 7c52347565..59cfe8ff76 100644
--- a/java/org/apache/tomcat/util/net/AbstractEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AbstractEndpoint.java
@@ -55,7 +55,8 @@ public abstract class AbstractEndpoint<S> {
     protected static final StringManager sm = StringManager.getManager(
             AbstractEndpoint.class.getPackage().getName());
 
-    public static interface Handler {
+    public static interface Handler<S> {
+
         /**
          * Different types of socket states to react upon.
          */
@@ -66,6 +67,18 @@ public abstract class AbstractEndpoint<S> {
         }
 
 
+        /**
+         * Process the provided socket with the given current status.
+         *
+         * @param socket The socket to process
+         * @param status The current socket status
+         *
+         * @return The state of the socket after processing
+         */
+        public SocketState process(SocketWrapperBase<S> socket,
+                SocketStatus status);
+
+
         /**
          * Obtain the GlobalRequestProcessor associated with the handler.
          */

==================================================
Nio2Endpoint.java
index 0e6cc703b8..3dc7b44892 100644
--- a/java/org/apache/tomcat/util/net/AprEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AprEndpoint.java
@@ -130,9 +130,9 @@ public class AprEndpoint extends AbstractEndpoint<Long> {
     /**
      * Handling of accepted sockets.
      */
-    protected Handler handler = null;
-    public void setHandler(Handler handler ) { this.handler = handler; }
-    public Handler getHandler() { return handler; }
+    protected Handler<Long> handler = null;
+    public void setHandler(Handler<Long> handler ) { this.handler = handler; }
+    public Handler<Long> getHandler() { return handler; }
 
 
     /**
@@ -2215,19 +2215,6 @@ public class AprEndpoint extends AbstractEndpoint<Long> {
 
     }
 
-    // ------------------------------------------------ Handler Inner Interface
-
-
-    /**
-     * Bare bones interface used for socket processing. Per thread data is to be
-     * stored in the ThreadWithAttributes extra folders, or alternately in
-     * thread local fields.
-     */
-    public interface Handler extends AbstractEndpoint.Handler {
-        public SocketState process(SocketWrapperBase<Long> socket,
-                SocketStatus status);
-    }
-
 
     // --------------------------------- SocketWithOptionsProcessor Inner Class
 

==================================================
NioEndpoint.java
index 35c8193eda..67991d626a 100644
--- a/java/org/apache/tomcat/util/net/Nio2Endpoint.java
+++ b/java/org/apache/tomcat/util/net/Nio2Endpoint.java
@@ -1135,9 +1135,7 @@ public class Nio2Endpoint extends AbstractEndpoint<Nio2Channel> {
      * stored in the ThreadWithAttributes extra folders, or alternately in
      * thread local fields.
      */
-    public interface Handler extends AbstractEndpoint.Handler {
-        public SocketState process(SocketWrapperBase<Nio2Channel> socket,
-                SocketStatus status);
+    public interface Handler extends AbstractEndpoint.Handler<Nio2Channel> {
         public void release(SocketWrapperBase<Nio2Channel> socket);
         public void closeAll();
         public SSLImplementation getSslImplementation();

==================================================
