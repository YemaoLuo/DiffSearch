ffebbcf95595a71883bdde6f8d1dec0d8955223b
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=57027
==================================================
Mark Emlyn
==================================================
Mon Sep 29 19:24:38 2014 +0000
==================================================
DigestCredentialHandlerBase.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=57027
Add additional validation for stored credentials used by Realms when the credential is stored using hex encoding.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1628266 13f79535-47bb-0310-9956-ffa450edef68



==================================================
HexUtils.java
index 77229768a7..1dcff32cdc 100644
--- a/java/org/apache/catalina/realm/DigestCredentialHandlerBase.java
+++ b/java/org/apache/catalina/realm/DigestCredentialHandlerBase.java
@@ -150,12 +150,7 @@ public abstract class DigestCredentialHandlerBase implements CredentialHandler {
         if (sep1 < 0 || sep2 < 0) {
             // Stored credentials are invalid
             // This may be expected if nested credential handlers are being used
-            if (logInvalidStoredCredentials) {
-                // Logging credentials could be a security concern but they are
-                // invalid and that is probably a bigger problem
-                getLog().warn(sm.getString("credentialHandler.invalidStoredCredential",
-                        storedCredentials));
-            }
+            logInvalidStoredCredentials(storedCredentials);
             return false;
         }
 
@@ -164,7 +159,13 @@ public abstract class DigestCredentialHandlerBase implements CredentialHandler {
         int iterations = Integer.parseInt(storedCredentials.substring(sep1 + 1, sep2));
 
         String storedHexEncoded = storedCredentials.substring(sep2 + 1);
-        byte[] salt = HexUtils.fromHexString(hexSalt);
+        byte[] salt;
+        try {
+            salt = HexUtils.fromHexString(hexSalt);
+        } catch (IllegalArgumentException iae) {
+            logInvalidStoredCredentials(storedCredentials);
+            return false;
+        }
 
         String inputHexEncoded = mutate(inputCredentials, salt, iterations);
 
@@ -172,6 +173,16 @@ public abstract class DigestCredentialHandlerBase implements CredentialHandler {
     }
 
 
+    private void logInvalidStoredCredentials(String storedCredentials) {
+        if (logInvalidStoredCredentials) {
+            // Logging credentials could be a security concern but they are
+            // invalid and that is probably a bigger problem
+            getLog().warn(sm.getString("credentialHandler.invalidStoredCredential",
+                    storedCredentials));
+        }
+    }
+
+
     /**
      * Get the default salt length used by the {@link CredentialHandler}.
      */

==================================================
TestHexUtils.java
index 49b1af9f33..3d3b23bc86 100644
--- a/java/org/apache/tomcat/util/buf/LocalStrings.properties
+++ b/java/org/apache/tomcat/util/buf/LocalStrings.properties
@@ -16,6 +16,8 @@
 b2cConverter.unknownEncoding=The character encoding [{0}] is not supported
 c2bConverter.recycleFailed=Failed to recycle the C2B Converter. Creating new BufferedWriter, WriteConvertor and IntermediateOutputStream.
 
+hexUtils.fromHex.oddDigits=The input must consist of an even number of hex digits
+hexUtils.fromHex.nonHex=The input must consist only of hex digits
 uDecoder.urlDecode.missingDigit=The % character must be followed by two hexademical digits
 uDecoder.convertHexDigit.notHex=[{0}] is not a hexadecimal digit
 uDecoder.urlDecode.uee=Unable to URL decode the specified input since the encoding [{0}] is not supported.

==================================================
