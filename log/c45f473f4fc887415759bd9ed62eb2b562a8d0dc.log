c45f473f4fc887415759bd9ed62eb2b562a8d0dc
==================================================
Add MBean for Sender component.
==================================================
Keiichi Fujino
==================================================
Tue Apr 11 08:29:24 2017 +0000
==================================================
ReplicationTransmitter.java
Add MBean for Sender component.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1790939 13f79535-47bb-0310-9956-ffa450edef68



==================================================
PooledParallelSender.java
index 1ab66e9a8e..2ecde8a4b3 100644
--- a/java/org/apache/catalina/tribes/transport/ReplicationTransmitter.java
+++ b/java/org/apache/catalina/tribes/transport/ReplicationTransmitter.java
@@ -16,11 +16,14 @@
  */
 package org.apache.catalina.tribes.transport;
 
+import javax.management.ObjectName;
+
 import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.ChannelException;
 import org.apache.catalina.tribes.ChannelMessage;
 import org.apache.catalina.tribes.ChannelSender;
 import org.apache.catalina.tribes.Member;
+import org.apache.catalina.tribes.jmx.JmxRegistry;
 import org.apache.catalina.tribes.transport.nio.PooledParallelSender;
 
 /**
@@ -32,6 +35,11 @@ public class ReplicationTransmitter implements ChannelSender {
 
     private Channel channel;
 
+    /**
+     * the ObjectName of this Sender.
+     */
+    private ObjectName oname = null;
+
     public ReplicationTransmitter() {
     }
 
@@ -66,6 +74,9 @@ public class ReplicationTransmitter implements ChannelSender {
     @Override
     public void start() throws java.io.IOException {
         getTransport().connect();
+        // register jmx
+        JmxRegistry jmxRegistry = JmxRegistry.getRegistry(channel);
+        if (jmxRegistry != null) this.oname = jmxRegistry.registerJmx(",component=Sender", transport);
     }
 
     /**
@@ -76,6 +87,10 @@ public class ReplicationTransmitter implements ChannelSender {
     @Override
     public synchronized void stop() {
         getTransport().disconnect();
+        if (oname != null) {
+            JmxRegistry.getRegistry(channel).unregisterJmx(oname);
+            oname = null;
+        }
         channel = null;
     }
 

==================================================
PooledParallelSenderMBean.java
index 843011ed22..7c8c5d01ab 100644
--- a/java/org/apache/catalina/tribes/transport/nio/PooledParallelSender.java
+++ b/java/org/apache/catalina/tribes/transport/nio/PooledParallelSender.java
@@ -26,7 +26,7 @@ import org.apache.catalina.tribes.transport.DataSender;
 import org.apache.catalina.tribes.transport.PooledSender;
 import org.apache.catalina.tribes.util.StringManager;
 
-public class PooledParallelSender extends PooledSender {
+public class PooledParallelSender extends PooledSender implements PooledParallelSenderMBean {
     protected static final StringManager sm = StringManager.getManager(PooledParallelSender.class);
 
     @Override

==================================================
