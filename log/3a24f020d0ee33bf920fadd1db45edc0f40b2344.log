3a24f020d0ee33bf920fadd1db45edc0f40b2344
==================================================
Update filename processing after review of RFC 6266
==================================================
Mark Thomas
==================================================
Sat Mar 5 18:27:53 2016 +0000
==================================================
ApplicationPart.java
Update filename processing after review of RFC 6266

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1733751 13f79535-47bb-0310-9956-ffa450edef68



==================================================
HttpParser.java
index 5fbcbc219d..9f1ec4ea9a 100644
--- a/java/org/apache/catalina/core/ApplicationPart.java
+++ b/java/org/apache/catalina/core/ApplicationPart.java
@@ -32,6 +32,7 @@ import javax.servlet.http.Part;
 import org.apache.tomcat.util.http.fileupload.FileItem;
 import org.apache.tomcat.util.http.fileupload.ParameterParser;
 import org.apache.tomcat.util.http.fileupload.disk.DiskFileItem;
+import org.apache.tomcat.util.http.parser.HttpParser;
 
 /**
  * Adaptor to allow {@link FileItem} objects generated by the package renamed
@@ -139,16 +140,20 @@ public class ApplicationPart implements Part {
                 ParameterParser paramParser = new ParameterParser();
                 paramParser.setLowerCaseNames(true);
                 // Parameter parser can handle null input
-                Map<String,String> params =
-                    paramParser.parse(cd, ';');
+                Map<String,String> params = paramParser.parse(cd, ';');
                 if (params.containsKey("filename")) {
                     fileName = params.get("filename");
+                    // The parser will remove surrounding '"' but will not
+                    // unquote any \x sequences.
                     if (fileName != null) {
-                        // This is a token or a quoted-string. If it is a token,
-                        // there won't be any '\' characters. If it is a
-                        // quoted-string it can be dequoted by removing the '\'
-                        // characters.
-                        fileName = fileName.trim().replaceAll("\\\\", "");
+                        // RFC 6266. This is either a token or a quoted-string
+                        if (fileName.indexOf('\\') > -1) {
+                            // This is a quoted-string
+                            fileName = HttpParser.unquote(fileName.trim());
+                        } else {
+                            // This is a token
+                            fileName = fileName.trim();
+                        }
                     } else {
                         // Even if there is no value, the parameter is present,
                         // so we return an empty file name rather than no file

==================================================
