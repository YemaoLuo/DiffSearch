6bc2615e2a05647e92816f6a52be8bbd5d82cb23
==================================================
63879: Remove stack trace from debug logging on socket wrapper close
==================================================
remm remm@apache.org
==================================================
Tue Oct 29 09:27:00 2019 +0100
==================================================
AprEndpoint.java
63879: Remove stack trace from debug logging on socket wrapper close

In most cases this was really too much. Keep the overall verbosity of
the endpoint logging unchanged, however.


==================================================
Nio2Endpoint.java
index 8c0d484d1e..997c01a190 100644
--- a/java/org/apache/tomcat/util/net/AprEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AprEndpoint.java
@@ -2242,7 +2242,7 @@ public class AprEndpoint extends AbstractEndpoint<Long,Long> implements SNICallB
         @Override
         protected void doClose() {
             if (log.isDebugEnabled()) {
-                log.debug("Calling [" + getEndpoint() + "].closeSocket([" + this + "])", new Exception());
+                log.debug("Calling [" + getEndpoint() + "].closeSocket([" + this + "])");
             }
             socketBufferHandler = SocketBufferHandler.EMPTY;
             nonBlockingWriteBuffer.clear();

==================================================
NioEndpoint.java
index e61215bdf9..3fe951ccba 100644
--- a/java/org/apache/tomcat/util/net/Nio2Endpoint.java
+++ b/java/org/apache/tomcat/util/net/Nio2Endpoint.java
@@ -912,7 +912,7 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel,AsynchronousS
         @Override
         protected void doClose() {
             if (log.isDebugEnabled()) {
-                log.debug("Calling [" + getEndpoint() + "].closeSocket([" + this + "])", new Exception());
+                log.debug("Calling [" + getEndpoint() + "].closeSocket([" + this + "])");
             }
             try {
                 synchronized (getSocket()) {

==================================================
