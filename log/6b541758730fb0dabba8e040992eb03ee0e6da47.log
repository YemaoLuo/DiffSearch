6b541758730fb0dabba8e040992eb03ee0e6da47
==================================================
Align ActionCode.NB_WRITE_INTEREST
==================================================
Mark Thomas
==================================================
Fri Aug 12 07:47:15 2016 +0000
==================================================
AjpProcessor.java
Align ActionCode.NB_WRITE_INTEREST

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1756102 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http11Processor.java
index 7f764c269d..cdd5660701 100644
--- a/java/org/apache/coyote/ajp/AjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpProcessor.java
@@ -553,8 +553,7 @@ public class AjpProcessor extends AbstractProcessor {
         }
         case NB_WRITE_INTEREST: {
             AtomicBoolean isReady = (AtomicBoolean)param;
-            boolean result = responseMsgPos == -1 && socketWrapper.isReadyForWrite();
-            isReady.set(result);
+            isReady.set(isReady());
             break;
         }
         case DISPATCH_READ: {
@@ -1517,6 +1516,11 @@ public class AjpProcessor extends AbstractProcessor {
     }
     
     
+    private boolean isReady() {
+        return responseMsgPos == -1 && socketWrapper.isReadyForWrite();
+    }
+    
+    
     /**
      * Read at least the specified amount of bytes, and place them
      * in the input buffer. Note that if any data is available to read then this

==================================================
StreamProcessor.java
index cbfacd77ad..b44e5c587f 100644
--- a/java/org/apache/coyote/http11/Http11Processor.java
+++ b/java/org/apache/coyote/http11/Http11Processor.java
@@ -846,7 +846,7 @@ public class Http11Processor extends AbstractProcessor {
         }
         case NB_WRITE_INTEREST: {
             AtomicBoolean isReady = (AtomicBoolean)param;
-            isReady.set(outputBuffer.isReady());
+            isReady.set(isReady());
             break;
         }
         case DISPATCH_READ: {
@@ -1842,6 +1842,11 @@ public class Http11Processor extends AbstractProcessor {
     }
     
     
+    private boolean isReady() {
+        return outputBuffer.isReady();
+    }
+    
+    
     /**
      * Checks to see if the keep-alive loop should be broken, performing any
      * processing (e.g. sendfile handling) that may have an impact on whether

==================================================
