bbc3423c93515e27c1e605492209b4022f42f35c
==================================================
Add an extended key manager to handle a forced server alias on the tomcat NIO connector
==================================================
Filip Hanik
==================================================
Tue Nov 25 20:14:30 2008 +0000
==================================================
NioEndpoint.java
Add an extended key manager to handle a forced server alias on the tomcat NIO connector


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@720587 13f79535-47bb-0310-9956-ffa450edef68



==================================================
NioX509KeyManager.java
index 31eb7e02a9..ff125185bf 100644
--- a/java/org/apache/tomcat/util/net/NioEndpoint.java
+++ b/java/org/apache/tomcat/util/net/NioEndpoint.java
@@ -55,9 +55,8 @@ import javax.net.ssl.X509KeyManager;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.IntrospectionUtils;
-import org.apache.tomcat.util.net.JIoEndpoint.Worker;
 import org.apache.tomcat.util.net.SecureNioChannel.ApplicationBufferHandler;
-import org.apache.tomcat.util.net.jsse.JSSEKeyManager;
+import org.apache.tomcat.util.net.jsse.NioX509KeyManager;
 import org.apache.tomcat.util.res.StringManager;
 
 /**
@@ -785,8 +784,7 @@ public class NioEndpoint {
             ks.load(new FileInputStream(getKeystoreFile()), passphrase);
             KeyStore ts = null;
             if (getTruststoreFile()==null) {
-//                ts = KeyStore.getInstance(getKeystoreType());
-//                ts.load(new FileInputStream(getKeystoreFile()), passphrase);
+                //no op, same as for BIO connector
             }else {
                 ts = KeyStore.getInstance(ttype);
                 ts.load(new FileInputStream(getTruststoreFile()), tpassphrase);
@@ -809,17 +807,16 @@ public class NioEndpoint {
     }
     
     public KeyManager[] wrap(KeyManager[] managers) {
-        return managers;
-//        if (managers==null) return null;
-//        KeyManager[] result = new KeyManager[managers.length];
-//        for (int i=0; i<result.length; i++) {
-//            if (managers[i] instanceof X509KeyManager && getKeyAlias()!=null) {
-//                result[i] = new JSSEKeyManager((X509KeyManager)managers[i],getKeyAlias());
-//            } else {
-//                result[i] = managers[i];
-//            }
-//        }
-//        return result;
+        if (managers==null) return null;
+        KeyManager[] result = new KeyManager[managers.length];
+        for (int i=0; i<result.length; i++) {
+            if (managers[i] instanceof X509KeyManager && getKeyAlias()!=null) {
+                result[i] = new NioX509KeyManager((X509KeyManager)managers[i],getKeyAlias());
+            } else {
+                result[i] = managers[i];
+            }
+        }
+        return result;
     }
 
 

==================================================
