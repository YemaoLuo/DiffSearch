9ebc28c6f1cc8d0019bb16bf31e9aaf5308a4f8b
==================================================
Fix some exception handling TODOs
==================================================
Mark Emlyn
==================================================
Thu Jan 24 11:09:39 2013 +0000
==================================================
WsFrameClient.java
index a70f269d23..6b4a2ea750 100644
--- a/java/org/apache/tomcat/websocket/LocalStrings.properties
+++ b/java/org/apache/tomcat/websocket/LocalStrings.properties
@@ -38,4 +38,5 @@ wsRemoteEndpoint.concurrentMessageSend=Messages may not be send concurrently eve
 
 wsWebSocketContainer.invalidStatus=The HTTP response from the server [{0}] did not permit the HTTP upgrade to WebSocket
 wsWebSocketContainer.pathNoHost=No host was specified in URI
-wsWebSocketContainer.pathWrongScheme=The scheme [{0}] is not supported
\ No newline at end of file
+wsWebSocketContainer.pathWrongScheme=The scheme [{0}] is not supported
+wsWebSocketContainer.endpointCreateFail=Failed to create a local endpoint of type [{0}]
\ No newline at end of file

==================================================
WsWebSocketContainer.java
index 827ccdc4ca..83ffee5446 100644
--- a/java/org/apache/tomcat/websocket/WsFrameClient.java
+++ b/java/org/apache/tomcat/websocket/WsFrameClient.java
@@ -31,13 +31,17 @@ public class WsFrameClient extends WsFrameBase {
     private final CompletionHandler<Integer,Void> handler;
 
     public WsFrameClient(ByteBuffer response, AsynchronousSocketChannel channel,
-            WsSession wsSession) throws IOException {
+            WsSession wsSession) {
         super(wsSession);
         this.response = response;
         this.channel = channel;
         this.handler = new WsFrameClientCompletionHandler();
 
-        processSocketRead();
+        try {
+            processSocketRead();
+        } catch (IOException e) {
+            close(e);
+        }
     }
 
 
@@ -63,6 +67,17 @@ public class WsFrameClient extends WsFrameBase {
     }
 
 
+    private final void close(Throwable t) {
+        CloseReason cr = new CloseReason(
+                CloseCodes.CLOSED_ABNORMALLY, t.getMessage());
+        try {
+            wsSession.close(cr);
+        } catch (IOException ignore) {
+            // Ignore
+        }
+    }
+
+
     @Override
     protected boolean isMasked() {
         // Data is from the server so it is not masked
@@ -87,15 +102,5 @@ public class WsFrameClient extends WsFrameBase {
         public void failed(Throwable exc, Void attachment) {
             close(exc);
         }
-
-        private final void close(Throwable t) {
-            CloseReason cr = new CloseReason(
-                    CloseCodes.CLOSED_ABNORMALLY, t.getMessage());
-            try {
-                wsSession.close(cr);
-            } catch (IOException ignore) {
-                // Ignore
-            }
-        }
     }
 }

==================================================
