9a87acb9bb7cc7fb43ff3a9466cf31fa38e880f8
==================================================
Be specific about the type of cipher list.
==================================================
Mark Thomas
==================================================
Tue Jan 5 23:00:17 2016 +0000
==================================================
OpenSSLContext.java
Be specific about the type of cipher list.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1723196 13f79535-47bb-0310-9956-ffa450edef68



==================================================
OpenSSLUtil.java
index 17f896f614..4f0cbe9c68 100644
--- a/java/org/apache/tomcat/util/net/openssl/OpenSSLContext.java
+++ b/java/org/apache/tomcat/util/net/openssl/OpenSSLContext.java
@@ -67,10 +67,10 @@ public class OpenSSLContext implements org.apache.tomcat.util.net.SSLContext {
 
     private final List<String> negotiableProtocols;
 
-    private List<String> ciphers = new ArrayList<>();
+    private List<String> jsseCipherNames = new ArrayList<>();
 
-    public List<String> getCiphers() {
-        return ciphers;
+    public List<String> getJsseCipherNames() {
+        return jsseCipherNames;
     }
 
     private String enabledProtocol;
@@ -298,7 +298,7 @@ public class OpenSSLContext implements org.apache.tomcat.util.net.SSLContext {
 
             // List the ciphers that the client is permitted to negotiate
             String opensslCipherConfig = sslHostConfig.getCiphers();
-            this.ciphers = OpenSSLCipherConfigurationParser.parseExpression(opensslCipherConfig);
+            this.jsseCipherNames = OpenSSLCipherConfigurationParser.parseExpression(opensslCipherConfig);
             SSLContext.setCipherSuite(ctx, opensslCipherConfig);
             // Load Server key and certificate
             if (certificate.getCertificateFile() != null) {

==================================================
