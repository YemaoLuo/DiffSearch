f76d9deac608ef9f14cc336490207713048b207a
==================================================
Don't duplicate storage of upload timeouts in the Processor
==================================================
Mark Thomas
==================================================
Wed Dec 14 11:04:19 2016 +0000
==================================================
AbstractHttp11Protocol.java
Don't duplicate storage of upload timeouts in the Processor

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1774170 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http11Processor.java
index a960bdf12d..2514b2f652 100644
--- a/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
+++ b/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
@@ -105,15 +105,22 @@ public abstract class AbstractHttp11Protocol<S> extends AbstractProtocol<S> {
     public int getMaxHttpHeaderSize() { return maxHttpHeaderSize; }
     public void setMaxHttpHeaderSize(int valueI) { maxHttpHeaderSize = valueI; }
 
-
+    /**
+     * Maximum timeout on uploads. 5 minutes as in Apache HTTPD server.
+     */
+    private int connectionUploadTimeout = 300000;
     /**
      * Specifies a different (usually  longer) connection timeout during data
      * upload.
      */
-    private int connectionUploadTimeout = 300000;
     public int getConnectionUploadTimeout() { return connectionUploadTimeout; }
-    public void setConnectionUploadTimeout(int i) {
-        connectionUploadTimeout = i;
+    /**
+     * Set the upload timeout.
+     *
+     * @param timeout Upload timeout in milliseconds
+     */
+    public void setConnectionUploadTimeout(int timeout) {
+        connectionUploadTimeout = timeout;
     }
 
 
@@ -122,7 +129,19 @@ public abstract class AbstractHttp11Protocol<S> extends AbstractProtocol<S> {
      * socket timeout will be used for the full duration of the connection.
      */
     private boolean disableUploadTimeout = true;
+    /**
+     * Get the flag that controls upload time-outs.
+     *
+     * @return {@code true} if the separate upload timeout is disabled
+     */
     public boolean getDisableUploadTimeout() { return disableUploadTimeout; }
+    /**
+     * Set the flag to control whether a separate connection timeout is used
+     * during upload of a request body.
+     *
+     * @param isDisabled {@code true} if the separate upload timeout should be
+     *                   disabled
+     */
     public void setDisableUploadTimeout(boolean isDisabled) {
         disableUploadTimeout = isDisabled;
     }
@@ -648,8 +667,6 @@ public abstract class AbstractHttp11Protocol<S> extends AbstractProtocol<S> {
     protected Processor createProcessor() {
         Http11Processor processor = new Http11Processor(this);
         processor.setAdapter(getAdapter());
-        processor.setConnectionUploadTimeout(getConnectionUploadTimeout());
-        processor.setDisableUploadTimeout(getDisableUploadTimeout());
         processor.setCompressionMinSize(getCompressionMinSize());
         processor.setCompression(getCompression());
         processor.setNoCompressionUserAgents(getNoCompressionUserAgents());

==================================================
