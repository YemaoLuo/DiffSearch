517f398e163ab7abc90dce0a577b1918ee0742e8
==================================================
Additional follow-up to r1663715
==================================================
Mark Thomas
==================================================
Tue Mar 3 20:03:29 2015 +0000
==================================================
Constants.java
Additional follow-up to r1663715
- Use a Tomcat specific file located in META-INF to track the WAR modification time rather than using the expanded directory
- If the use expands the directory themselves, this tracking mechanism won;t be used.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1663772 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ExpandWar.java
index 27298ef632..803856fa45 100644
--- a/java/org/apache/catalina/startup/Constants.java
+++ b/java/org/apache/catalina/startup/Constants.java
@@ -31,6 +31,7 @@ public final class Constants {
     public static final String DefaultWebXml = "conf/web.xml";
     public static final String HostContextXml = "context.xml.default";
     public static final String HostWebXml = "web.xml.default";
+    public static final String WarTracker = "/META-INF/war-tracker";
 
     /**
      * A dummy value used to suppress loading the default web.xml file.

==================================================
HostConfig.java
index 77a96c4910..edd8cd87f5 100644
--- a/java/org/apache/catalina/startup/ExpandWar.java
+++ b/java/org/apache/catalina/startup/ExpandWar.java
@@ -80,6 +80,7 @@ public class ExpandWar {
         // Set up the variables used in the finally block of the following try
         boolean success = false;
         File docBase = new File(host.getAppBaseFile(), pathname);
+        File warTracker = new File(host.getAppBaseFile(), pathname + Constants.WarTracker);
 
         try (JarFile jarFile = juc.getJarFile()) {
 
@@ -92,10 +93,9 @@ public class ExpandWar {
                 // time of the expanded directory to the last modified time of
                 // the WAR so changes to the WAR while Tomcat is stopped can be
                 // detected
-                long dirLastModified = docBase.lastModified();
-
-                if (dirLastModified == warLastModified) {
-                    // No changes to the WAR
+                if (!warTracker.exists() || warTracker.lastModified() == warLastModified) {
+                    // No (detectable) changes to the WAR
+                    success = true;
                     return (docBase.getAbsolutePath());
                 }
 
@@ -157,9 +157,10 @@ public class ExpandWar {
                     }
                 }
 
-                // Align the last modified time of the directory with the WAR so
-                // changes to the WAR while Tomcat is stopped can be detected
-                docBase.setLastModified(warLastModified);
+                // Create the warTracker file and align the last modified time
+                // with the last modified time of the WAR
+                warTracker.createNewFile();
+                warTracker.setLastModified(warLastModified);
             }
             success = true;
         } catch (IOException e) {

==================================================
