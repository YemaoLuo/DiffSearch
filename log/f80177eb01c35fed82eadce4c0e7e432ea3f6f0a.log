f80177eb01c35fed82eadce4c0e7e432ea3f6f0a
==================================================
ConnectionSettings -> ConnectionSettingsRemote (the companion to ConnectionSettingsLocal)
==================================================
Mark Thomas
==================================================
Tue Aug 18 16:32:12 2015 +0000
==================================================
AbstractStream.java
ConnectionSettings -> ConnectionSettingsRemote (the companion to ConnectionSettingsLocal)

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1696454 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ConnectionSettingsRemote.java
index 68c669aadd..227e28f95f 100644
--- a/java/org/apache/coyote/http2/AbstractStream.java
+++ b/java/org/apache/coyote/http2/AbstractStream.java
@@ -35,7 +35,7 @@ abstract class AbstractStream {
 
     private volatile AbstractStream parentStream = null;
     private final Set<AbstractStream> childStreams = new HashSet<>();
-    private long windowSize = ConnectionSettings.DEFAULT_INITIAL_WINDOW_SIZE;
+    private long windowSize = ConnectionSettingsRemote.DEFAULT_INITIAL_WINDOW_SIZE;
 
     public Integer getIdentifier() {
         return identifier;

==================================================
Http2Parser.java
similarity index 97%
rename from java/org/apache/coyote/http2/ConnectionSettings.java
rename to java/org/apache/coyote/http2/ConnectionSettingsRemote.java
index 2c5d53d158..5e392758a1 100644
--- a/java/org/apache/coyote/http2/ConnectionSettings.java
+++ b/java/org/apache/coyote/http2/ConnectionSettingsRemote.java
@@ -20,13 +20,13 @@ import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.res.StringManager;
 
-public class ConnectionSettings {
+public class ConnectionSettingsRemote {
 
-    private final Log log = LogFactory.getLog(ConnectionSettings.class);
-    private final StringManager sm = StringManager.getManager(ConnectionSettings.class);
+    private final Log log = LogFactory.getLog(ConnectionSettingsRemote.class);
+    private final StringManager sm = StringManager.getManager(ConnectionSettingsRemote.class);
 
     public static final int DEFAULT_INITIAL_WINDOW_SIZE = (1 << 16) - 1;
-    private static final long UNLIMITED = ((long)1 << 32); // Use the maximum possible
+    static final long UNLIMITED = ((long)1 << 32); // Use the maximum possible
     private static final int MAX_WINDOW_SIZE = (1 << 31) - 1;
 
     private static final int MIN_MAX_FRAME_SIZE = 1 << 14;

==================================================
Http2UpgradeHandler.java
index 4ae100edc8..f0b4e0eae9 100644
--- a/java/org/apache/coyote/http2/Http2Parser.java
+++ b/java/org/apache/coyote/http2/Http2Parser.java
@@ -44,7 +44,7 @@ class Http2Parser {
     private volatile int headersCurrentStream = -1;
     private volatile boolean headersEndStream = false;
 
-    private volatile int maxPayloadSize = ConnectionSettings.DEFAULT_MAX_FRAME_SIZE;
+    private volatile int maxPayloadSize = ConnectionSettingsRemote.DEFAULT_MAX_FRAME_SIZE;
 
 
     Http2Parser(String connectionId, Input input, Output output) {

==================================================
Http2TestBase.java
index 52ce00e983..7d0a1a92e1 100644
--- a/java/org/apache/coyote/http2/Http2UpgradeHandler.java
+++ b/java/org/apache/coyote/http2/Http2UpgradeHandler.java
@@ -114,8 +114,8 @@ public class Http2UpgradeHandler extends AbstractStream implements InternalHttpU
             new AtomicReference<>(ConnectionState.NEW);
     private volatile long pausedNanoTime = Long.MAX_VALUE;
 
-    private final ConnectionSettings remoteSettings = new ConnectionSettings();
-    private final ConnectionSettings localSettings = new ConnectionSettings();
+    private final ConnectionSettingsRemote remoteSettings = new ConnectionSettingsRemote();
+    private final ConnectionSettingsRemote localSettings = new ConnectionSettingsRemote();
 
     private HpackDecoder hpackDecoder;
     private HpackEncoder hpackEncoder;
@@ -332,7 +332,7 @@ public class Http2UpgradeHandler extends AbstractStream implements InternalHttpU
     }
 
 
-    ConnectionSettings getRemoteSettings() {
+    ConnectionSettingsRemote getRemoteSettings() {
         return remoteSettings;
     }
 

==================================================
TestHttp2Section_4_2.java
index a0caf0fe59..8c47d7c8c6 100644
--- a/test/org/apache/coyote/http2/Http2TestBase.java
+++ b/test/org/apache/coyote/http2/Http2TestBase.java
@@ -356,7 +356,7 @@ public abstract class Http2TestBase extends TomcatBaseTest {
         input = new TestInput(is);
         output = new TestOutput();
         parser = new Http2Parser("-1", input, output);
-        hpackEncoder = new HpackEncoder(ConnectionSettings.DEFAULT_HEADER_TABLE_SIZE);
+        hpackEncoder = new HpackEncoder(ConnectionSettingsRemote.DEFAULT_HEADER_TABLE_SIZE);
     }
 
 
@@ -662,7 +662,7 @@ public abstract class Http2TestBase extends TomcatBaseTest {
 
         private StringBuffer trace = new StringBuffer();
         private String lastStreamId = "0";
-        private ConnectionSettings remoteSettings = new ConnectionSettings();
+        private ConnectionSettingsRemote remoteSettings = new ConnectionSettingsRemote();
 
 
         @Override

==================================================
