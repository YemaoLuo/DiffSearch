83fb92b726086f3deb8846f6d05e0191c77729bd
==================================================
Use a static cache of B2CConverter objects rather than a per request cache that gets cleared every time the request switches to async mode.
==================================================
Mark Thomas
==================================================
Thu Sep 3 19:58:03 2015 +0000
==================================================
CoyoteAdapter.java
Use a static cache of B2CConverter objects rather than a per request cache that gets cleared every time the request switches to async mode.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1701120 13f79535-47bb-0310-9956-ffa450edef68



==================================================
InputBuffer.java
index 81d55c1607..b0fc0af803 100644
--- a/java/org/apache/catalina/connector/CoyoteAdapter.java
+++ b/java/org/apache/catalina/connector/CoyoteAdapter.java
@@ -304,10 +304,6 @@ public class CoyoteAdapter implements Adapter {
             if (!success || !request.isAsync()) {
                 request.recycle();
                 response.recycle();
-            } else {
-                // Clear converters so that the minimum amount of memory
-                // is used by this processor
-                request.clearEncoders();
             }
         }
         return success;
@@ -404,13 +400,8 @@ public class CoyoteAdapter implements Adapter {
             if (!async || error.get()) {
                 request.recycle();
                 response.recycle();
-            } else {
-                // Clear converters so that the minimum amount of memory
-                // is used by this processor
-                request.clearEncoders();
             }
         }
-
     }
 
 

==================================================
Request.java
index 2fd3157fc5..905645c792 100644
--- a/java/org/apache/catalina/connector/InputBuffer.java
+++ b/java/org/apache/catalina/connector/InputBuffer.java
@@ -33,6 +33,7 @@ import org.apache.coyote.Request;
 import org.apache.tomcat.util.buf.B2CConverter;
 import org.apache.tomcat.util.buf.ByteChunk;
 import org.apache.tomcat.util.buf.CharChunk;
+import org.apache.tomcat.util.collections.SynchronizedStack;
 import org.apache.tomcat.util.res.StringManager;
 
 /**
@@ -52,9 +53,6 @@ public class InputBuffer extends Reader
      */
     protected static final StringManager sm = StringManager.getManager(InputBuffer.class);
 
-
-    // -------------------------------------------------------------- Constants
-
     public static final int DEFAULT_BUFFER_SIZE = 8*1024;
 
     // The buffer can be used for byte[] and char[] reading
@@ -64,6 +62,13 @@ public class InputBuffer extends Reader
     public final int BYTE_STATE = 2;
 
 
+    /**
+     * Encoder cache.
+     */
+    private static final ConcurrentHashMap<Charset,SynchronizedStack<B2CConverter>> encoders =
+            new ConcurrentHashMap<>();
+
+
     // ----------------------------------------------------- Instance Variables
 
     /**
@@ -96,12 +101,6 @@ public class InputBuffer extends Reader
     private String enc;
 
 
-    /**
-     * List of encoders.
-     */
-    protected final ConcurrentHashMap<Charset,B2CConverter> encoders = new ConcurrentHashMap<>();
-
-
     /**
      * Current byte to char converter.
      */
@@ -197,6 +196,7 @@ public class InputBuffer extends Reader
 
         if (conv != null) {
             conv.recycle();
+            encoders.get(conv.getCharset()).push(conv);
             conv = null;
         }
 
@@ -204,14 +204,6 @@ public class InputBuffer extends Reader
     }
 
 
-    /**
-     * Clear cached encoders (to save memory for async requests).
-     */
-    public void clearEncoders() {
-        encoders.clear();
-    }
-
-
     /**
      * Close the input buffer.
      *
@@ -370,9 +362,7 @@ public class InputBuffer extends Reader
 
     @Override
     public int realReadChars() throws IOException {
-        if (conv == null) {
-            setConverter();
-        }
+        checkConverter();
 
         boolean eof = false;
 
@@ -545,7 +535,6 @@ public class InputBuffer extends Reader
 
 
     private void setConverter() throws IOException {
-
         if (coyoteRequest != null) {
             enc = coyoteRequest.getCharacterEncoding();
         }
@@ -555,11 +544,16 @@ public class InputBuffer extends Reader
         }
 
         Charset charset = B2CConverter.getCharset(enc);
-        conv = encoders.get(charset);
+        SynchronizedStack<B2CConverter> stack = encoders.get(charset);
+        if (stack == null) {
+            stack = new SynchronizedStack<>();
+            encoders.putIfAbsent(charset, stack);
+            stack = encoders.get(charset);
+        }
+        conv = stack.pop();
 
         if (conv == null) {
             conv = createConverter(charset);
-            encoders.put(charset, conv);
         }
     }
 

==================================================
B2CConverter.java
index 8eedfeef8f..30085372ec 100644
--- a/java/org/apache/catalina/connector/Request.java
+++ b/java/org/apache/catalina/connector/Request.java
@@ -517,13 +517,6 @@ public class Request
         pathParameters.clear();
     }
 
-    /**
-     * Clear cached encoders (to save memory for async requests).
-     */
-    public void clearEncoders() {
-        inputBuffer.clearEncoders();
-    }
-
 
     // -------------------------------------------------------- Request Methods
 

==================================================
