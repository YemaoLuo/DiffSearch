6fc0e39256cc149ac7a3c819659ab147301eeff1
==================================================
Rename prior to some refactoring
==================================================
Mark Emlyn
==================================================
Mon Feb 25 12:24:10 2013 +0000
==================================================
WsRemoteEndpointAsync.java
Rename prior to some refactoring

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1449680 13f79535-47bb-0310-9956-ffa450edef68



==================================================
WsRemoteEndpointBasic.java
index 0527e9dcd0..3472e41643 100644
--- a/java/org/apache/tomcat/websocket/WsRemoteEndpointAsync.java
+++ b/java/org/apache/tomcat/websocket/WsRemoteEndpointAsync.java
@@ -26,10 +26,10 @@ import javax.websocket.SendHandler;
 // TODO Use a common base class
 public class WsRemoteEndpointAsync implements RemoteEndpoint.Async {
 
-    private final WsRemoteEndpointBase base;
+    private final WsRemoteEndpointImplBase base;
 
 
-    WsRemoteEndpointAsync(WsRemoteEndpointBase base) {
+    WsRemoteEndpointAsync(WsRemoteEndpointImplBase base) {
         this.base = base;
     }
 

==================================================
WsRemoteEndpointImplBase.java
index 308bccd702..a5c6be21fb 100644
--- a/java/org/apache/tomcat/websocket/WsRemoteEndpointBasic.java
+++ b/java/org/apache/tomcat/websocket/WsRemoteEndpointBasic.java
@@ -27,10 +27,10 @@ import javax.websocket.RemoteEndpoint;
 //TODO Use a common base class
 public class WsRemoteEndpointBasic implements RemoteEndpoint.Basic {
 
-    private final WsRemoteEndpointBase base;
+    private final WsRemoteEndpointImplBase base;
 
 
-    WsRemoteEndpointBasic(WsRemoteEndpointBase base) {
+    WsRemoteEndpointBasic(WsRemoteEndpointImplBase base) {
         this.base = base;
     }
 

==================================================
WsRemoteEndpointImplClient.java
similarity index 96%
rename from java/org/apache/tomcat/websocket/WsRemoteEndpointBase.java
rename to java/org/apache/tomcat/websocket/WsRemoteEndpointImplBase.java
index 7f20ee26ec..084c6ada71 100644
--- a/java/org/apache/tomcat/websocket/WsRemoteEndpointBase.java
+++ b/java/org/apache/tomcat/websocket/WsRemoteEndpointImplBase.java
@@ -45,12 +45,12 @@ import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.res.StringManager;
 
-public abstract class WsRemoteEndpointBase implements RemoteEndpoint {
+public abstract class WsRemoteEndpointImplBase implements RemoteEndpoint {
 
     private static final StringManager sm =
             StringManager.getManager(Constants.PACKAGE_NAME);
 
-    private final Log log = LogFactory.getLog(WsRemoteEndpointBase.class);
+    private final Log log = LogFactory.getLog(WsRemoteEndpointImplBase.class);
 
     private boolean messagePartInProgress = false;
     private final Queue<MessagePart> messagePartQueue = new ArrayDeque<>();
@@ -348,7 +348,7 @@ public abstract class WsRemoteEndpointBase implements RemoteEndpoint {
         private final SendHandler handler;
 
         public MessagePart(byte opCode, ByteBuffer payload, boolean last,
-                SendHandler handler, WsRemoteEndpointBase endpoint) {
+                SendHandler handler, WsRemoteEndpointImplBase endpoint) {
             this.opCode = opCode;
             this.payload = payload;
             this.last = last;
@@ -384,11 +384,11 @@ public abstract class WsRemoteEndpointBase implements RemoteEndpoint {
      */
     private static class EndMessageHandler implements SendHandler {
 
-        private final WsRemoteEndpointBase endpoint;
+        private final WsRemoteEndpointImplBase endpoint;
         private final SendHandler handler;
         private final boolean dataMessage;
 
-        public EndMessageHandler(WsRemoteEndpointBase endpoint,
+        public EndMessageHandler(WsRemoteEndpointImplBase endpoint,
                 SendHandler handler, boolean dataMessage) {
             this.endpoint = endpoint;
             this.handler = handler;
@@ -538,12 +538,12 @@ public abstract class WsRemoteEndpointBase implements RemoteEndpoint {
         private final boolean isLast;
         private final CharsetEncoder encoder;
         private final ByteBuffer buffer;
-        private final WsRemoteEndpointBase endpoint;
+        private final WsRemoteEndpointImplBase endpoint;
         private volatile boolean isDone = false;
 
         public TextMessageSendHandler(SendHandler handler, CharBuffer message,
                 boolean isLast, CharsetEncoder encoder,
-                ByteBuffer encoderBuffer, WsRemoteEndpointBase endpoint) {
+                ByteBuffer encoderBuffer, WsRemoteEndpointImplBase endpoint) {
             this.handler = handler;
             this.message = message;
             this.isLast = isLast;
@@ -587,13 +587,13 @@ public abstract class WsRemoteEndpointBase implements RemoteEndpoint {
         private final byte[] mask;
         private final ByteBuffer outputBuffer;
         private volatile boolean flushRequired;
-        private final WsRemoteEndpointBase endpoint;
+        private final WsRemoteEndpointImplBase endpoint;
         private int maskIndex = 0;
 
         public OutputBufferSendHandler(SendHandler completion,
                 ByteBuffer headerBuffer, ByteBuffer payload, byte[] mask,
                 ByteBuffer outputBuffer, boolean flushRequired,
-                WsRemoteEndpointBase endpoint) {
+                WsRemoteEndpointImplBase endpoint) {
             this.handler = completion;
             this.headerBuffer = headerBuffer;
             this.payload = payload;
@@ -719,10 +719,10 @@ public abstract class WsRemoteEndpointBase implements RemoteEndpoint {
 
     private static class WsOutputStream extends OutputStream {
 
-        private final WsRemoteEndpointBase endpoint;
+        private final WsRemoteEndpointImplBase endpoint;
         private final ByteBuffer buffer = ByteBuffer.allocate(8192);
 
-        public WsOutputStream(WsRemoteEndpointBase endpoint) {
+        public WsOutputStream(WsRemoteEndpointImplBase endpoint) {
             this.endpoint = endpoint;
         }
 
@@ -767,10 +767,10 @@ public abstract class WsRemoteEndpointBase implements RemoteEndpoint {
 
     private static class WsWriter extends Writer {
 
-        private final WsRemoteEndpointBase endpoint;
+        private final WsRemoteEndpointImplBase endpoint;
         private final CharBuffer buffer = CharBuffer.allocate(8192);
 
-        public WsWriter(WsRemoteEndpointBase endpoint) {
+        public WsWriter(WsRemoteEndpointImplBase endpoint) {
             this.endpoint = endpoint;
         }
 

==================================================
WsSession.java
similarity index 94%
rename from java/org/apache/tomcat/websocket/WsRemoteEndpointClient.java
rename to java/org/apache/tomcat/websocket/WsRemoteEndpointImplClient.java
index fa0d69d8f4..e31c4680d1 100644
--- a/java/org/apache/tomcat/websocket/WsRemoteEndpointClient.java
+++ b/java/org/apache/tomcat/websocket/WsRemoteEndpointImplClient.java
@@ -25,11 +25,11 @@ import java.util.concurrent.TimeUnit;
 import javax.websocket.SendHandler;
 import javax.websocket.SendResult;
 
-public class WsRemoteEndpointClient extends WsRemoteEndpointBase {
+public class WsRemoteEndpointImplClient extends WsRemoteEndpointImplBase {
 
     private final AsynchronousSocketChannel channel;
 
-    public WsRemoteEndpointClient(AsynchronousSocketChannel channel) {
+    public WsRemoteEndpointImplClient(AsynchronousSocketChannel channel) {
         this.channel = channel;
     }
 

==================================================
WsWebSocketContainer.java
index 2751b51097..36bd8125f4 100644
--- a/java/org/apache/tomcat/websocket/WsSession.java
+++ b/java/org/apache/tomcat/websocket/WsSession.java
@@ -53,7 +53,7 @@ public class WsSession implements Session {
     private final Log log = LogFactory.getLog(WsSession.class);
 
     private final Endpoint localEndpoint;
-    private final WsRemoteEndpointBase wsRemoteEndpoint;
+    private final WsRemoteEndpointImplBase wsRemoteEndpoint;
     private final RemoteEndpoint.Async remoteEndpointAsync;
     private final RemoteEndpoint.Basic remoteEndpointBasic;
     private final ClassLoader applicationClassLoader;
@@ -87,7 +87,7 @@ public class WsSession implements Session {
      * @param wsRemoteEndpoint
      */
     public WsSession(Endpoint localEndpoint,
-            WsRemoteEndpointBase wsRemoteEndpoint,
+            WsRemoteEndpointImplBase wsRemoteEndpoint,
             WsWebSocketContainer wsWebSocketContainer,
             WsRequest request, String subProtocol,
             Map<String,String> pathParameters,

==================================================
WsProtocolHandler.java
index e7b03b14f3..1207fb1662 100644
--- a/java/org/apache/tomcat/websocket/WsWebSocketContainer.java
+++ b/java/org/apache/tomcat/websocket/WsWebSocketContainer.java
@@ -160,8 +160,8 @@ public class WsWebSocketContainer
         }
 
         // Switch to WebSocket
-        WsRemoteEndpointClient wsRemoteEndpointClient =
-                new WsRemoteEndpointClient(channel);
+        WsRemoteEndpointImplClient wsRemoteEndpointClient =
+                new WsRemoteEndpointImplClient(channel);
 
         Endpoint endpoint;
         try {

==================================================
WsRemoteEndpointImplServer.java
index cc52c9ceec..c601688f92 100644
--- a/java/org/apache/tomcat/websocket/server/WsProtocolHandler.java
+++ b/java/org/apache/tomcat/websocket/server/WsProtocolHandler.java
@@ -92,8 +92,8 @@ public class WsProtocolHandler implements HttpUpgradeHandler {
         ClassLoader cl = t.getContextClassLoader();
         t.setContextClassLoader(applicationClassLoader);
         try {
-            WsRemoteEndpointServer wsRemoteEndpointServer =
-                    new WsRemoteEndpointServer(sos, webSocketContainer);
+            WsRemoteEndpointImplServer wsRemoteEndpointServer =
+                    new WsRemoteEndpointImplServer(sos, webSocketContainer);
             wsSession = new WsSession(ep, wsRemoteEndpointServer,
                     webSocketContainer, request, subProtocol, pathParameters,
                     secure, endpointConfig.getEncoders());
@@ -181,10 +181,10 @@ public class WsProtocolHandler implements HttpUpgradeHandler {
     private static class WsWriteListener implements WriteListener {
 
         private final WsProtocolHandler wsProtocolHandler;
-        private final WsRemoteEndpointServer wsRemoteEndpointServer;
+        private final WsRemoteEndpointImplServer wsRemoteEndpointServer;
 
         private WsWriteListener(WsProtocolHandler wsProtocolHandler,
-                WsRemoteEndpointServer wsRemoteEndpointServer) {
+                WsRemoteEndpointImplServer wsRemoteEndpointServer) {
             this.wsProtocolHandler = wsProtocolHandler;
             this.wsRemoteEndpointServer = wsRemoteEndpointServer;
         }

==================================================
WsWriteTimeout.java
similarity index 95%
rename from java/org/apache/tomcat/websocket/server/WsRemoteEndpointServer.java
rename to java/org/apache/tomcat/websocket/server/WsRemoteEndpointImplServer.java
index af705a6f51..974613aaeb 100644
--- a/java/org/apache/tomcat/websocket/server/WsRemoteEndpointServer.java
+++ b/java/org/apache/tomcat/websocket/server/WsRemoteEndpointImplServer.java
@@ -27,14 +27,14 @@ import javax.websocket.SendResult;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.res.StringManager;
-import org.apache.tomcat.websocket.WsRemoteEndpointBase;
+import org.apache.tomcat.websocket.WsRemoteEndpointImplBase;
 
 /**
  * This is the server side {@link javax.websocket.RemoteEndpoint} implementation
  * - i.e. what the server uses to send data to the client. Communication is over
  * a {@link ServletOutputStream}.
  */
-public class WsRemoteEndpointServer extends WsRemoteEndpointBase {
+public class WsRemoteEndpointImplServer extends WsRemoteEndpointImplBase {
 
     private static final StringManager sm =
             StringManager.getManager(Constants.PACKAGE_NAME);
@@ -50,7 +50,7 @@ public class WsRemoteEndpointServer extends WsRemoteEndpointBase {
     private volatile boolean close;
 
 
-    public WsRemoteEndpointServer(ServletOutputStream sos,
+    public WsRemoteEndpointImplServer(ServletOutputStream sos,
             ServerContainerImpl serverContainer) {
         this.sos = sos;
         this.wsWriteTimeout = serverContainer.getTimeout();

==================================================
