8f9e7bca3bb80785aef8c490a7d08ff83948b96b
==================================================
Rename "javax.websocket.*" to "jakarta.websocket.*"
==================================================
Mark Thomas
==================================================
Thu Nov 28 19:33:00 2019 +0000
==================================================
ClientEndpoint.java
index 1f30fc0511..1e12c7c28c 100644
--- a/build.xml
+++ b/build.xml
@@ -271,8 +271,8 @@
     <include name="**/NOTICE"/>
     <include name="**/RELEASE-NOTES"/>
     <include name="**/jakarta.servlet.ServletContainerInitializer"/>
-    <include name="**/javax.websocket.ContainerProvider"/>
-    <include name="**/javax.websocket.server.ServerEndpointConfig$Configurator"/>
+    <include name="**/jakarta.websocket.ContainerProvider"/>
+    <include name="**/jakarta.websocket.server.ServerEndpointConfig$Configurator"/>
     <include name="**/.gitignore"/>
     <include name="**/*.bnd"/>
     <include name="**/*.classpath"/>
@@ -348,7 +348,7 @@
   </patternset>
 
   <patternset id="files.websocket-api">
-    <include name="javax/websocket/**" />
+    <include name="jakarta/websocket/**" />
   </patternset>
 
   <patternset id="files.jaspic-api">
@@ -1971,7 +1971,7 @@ Apache Tomcat ${version} native binaries for Win64 AMD64/EMT64 platform.
         <path location="${ant.core.lib}"/>
       </classpath>
     </javadoc>
-    <javadoc packagenames="javax.websocket.*"
+    <javadoc packagenames="jakarta.websocket.*"
       sourcepath="${tomcat.dist}/src/java"
       destdir="${tomcat.dist}/webapps/docs/websocketapi"
       version="true"

==================================================
ClientEndpointConfig.java
similarity index 93%
rename from java/javax/websocket/ClientEndpoint.java
rename to java/jakarta/websocket/ClientEndpoint.java
index ee9841717f..4c44b0716a 100644
--- a/java/javax/websocket/ClientEndpoint.java
+++ b/java/jakarta/websocket/ClientEndpoint.java
@@ -14,14 +14,14 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket;
+package jakarta.websocket;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import javax.websocket.ClientEndpointConfig.Configurator;
+import jakarta.websocket.ClientEndpointConfig.Configurator;
 
 @Retention(RetentionPolicy.RUNTIME)
 @Target(ElementType.TYPE)

==================================================
CloseReason.java
similarity index 99%
rename from java/javax/websocket/ClientEndpointConfig.java
rename to java/jakarta/websocket/ClientEndpointConfig.java
index 13b6cba583..a56af4bf3d 100644
--- a/java/javax/websocket/ClientEndpointConfig.java
+++ b/java/jakarta/websocket/ClientEndpointConfig.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket;
+package jakarta.websocket;
 
 import java.util.Collections;
 import java.util.List;

==================================================
ContainerProvider.java
similarity index 99%
rename from java/javax/websocket/CloseReason.java
rename to java/jakarta/websocket/CloseReason.java
index ef88d135d8..dae0777ac1 100644
--- a/java/javax/websocket/CloseReason.java
+++ b/java/jakarta/websocket/CloseReason.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket;
+package jakarta.websocket;
 
 public class CloseReason {
 

==================================================
DecodeException.java
similarity index 98%
rename from java/javax/websocket/ContainerProvider.java
rename to java/jakarta/websocket/ContainerProvider.java
index f95c9ade16..33a8af2879 100644
--- a/java/javax/websocket/ContainerProvider.java
+++ b/java/jakarta/websocket/ContainerProvider.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket;
+package jakarta.websocket;
 
 import java.util.Iterator;
 import java.util.ServiceLoader;

==================================================
Decoder.java
similarity index 98%
rename from java/javax/websocket/DecodeException.java
rename to java/jakarta/websocket/DecodeException.java
index 771cfa5803..6076e903ae 100644
--- a/java/javax/websocket/DecodeException.java
+++ b/java/jakarta/websocket/DecodeException.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket;
+package jakarta.websocket;
 
 import java.nio.ByteBuffer;
 

==================================================
DefaultClientEndpointConfig.java
similarity index 98%
rename from java/javax/websocket/Decoder.java
rename to java/jakarta/websocket/Decoder.java
index fad262e3b5..c8fa343c61 100644
--- a/java/javax/websocket/Decoder.java
+++ b/java/jakarta/websocket/Decoder.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket;
+package jakarta.websocket;
 
 import java.io.IOException;
 import java.io.InputStream;

==================================================
DeploymentException.java
similarity index 98%
rename from java/javax/websocket/DefaultClientEndpointConfig.java
rename to java/jakarta/websocket/DefaultClientEndpointConfig.java
index ce28cb26d2..e166925121 100644
--- a/java/javax/websocket/DefaultClientEndpointConfig.java
+++ b/java/jakarta/websocket/DefaultClientEndpointConfig.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket;
+package jakarta.websocket;
 
 import java.util.List;
 import java.util.Map;

==================================================
EncodeException.java
similarity index 97%
rename from java/javax/websocket/DeploymentException.java
rename to java/jakarta/websocket/DeploymentException.java
index 1678fd0927..75bb0275ed 100644
--- a/java/javax/websocket/DeploymentException.java
+++ b/java/jakarta/websocket/DeploymentException.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket;
+package jakarta.websocket;
 
 public class DeploymentException extends Exception {
 

==================================================
Encoder.java
similarity index 97%
rename from java/javax/websocket/EncodeException.java
rename to java/jakarta/websocket/EncodeException.java
index fdb536ac4c..21e8598038 100644
--- a/java/javax/websocket/EncodeException.java
+++ b/java/jakarta/websocket/EncodeException.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket;
+package jakarta.websocket;
 
 public class EncodeException extends Exception {
 

==================================================
Endpoint.java
similarity index 98%
rename from java/javax/websocket/Encoder.java
rename to java/jakarta/websocket/Encoder.java
index 42a107f0e8..8b2c871fc7 100644
--- a/java/javax/websocket/Encoder.java
+++ b/java/jakarta/websocket/Encoder.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket;
+package jakarta.websocket;
 
 import java.io.IOException;
 import java.io.OutputStream;

==================================================
EndpointConfig.java
similarity index 98%
rename from java/javax/websocket/Endpoint.java
rename to java/jakarta/websocket/Endpoint.java
index 9dfdbcce2b..7a33a24074 100644
--- a/java/javax/websocket/Endpoint.java
+++ b/java/jakarta/websocket/Endpoint.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket;
+package jakarta.websocket;
 
 public abstract class Endpoint {
 

==================================================
Extension.java
similarity index 97%
rename from java/javax/websocket/EndpointConfig.java
rename to java/jakarta/websocket/EndpointConfig.java
index 0b6c96818d..ed2d423610 100644
--- a/java/javax/websocket/EndpointConfig.java
+++ b/java/jakarta/websocket/EndpointConfig.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket;
+package jakarta.websocket;
 
 import java.util.List;
 import java.util.Map;

==================================================
HandshakeResponse.java
similarity index 97%
rename from java/javax/websocket/Extension.java
rename to java/jakarta/websocket/Extension.java
index b95b27b8bd..98734b328a 100644
--- a/java/javax/websocket/Extension.java
+++ b/java/jakarta/websocket/Extension.java
@@ -14,7 +14,7 @@
  *  See the License for the specific language governing permissions and
  *  limitations under the License.
  */
-package javax.websocket;
+package jakarta.websocket;
 
 import java.util.List;
 

==================================================
MessageHandler.java
similarity index 97%
rename from java/javax/websocket/HandshakeResponse.java
rename to java/jakarta/websocket/HandshakeResponse.java
index 807192e8bf..6754020cb5 100644
--- a/java/javax/websocket/HandshakeResponse.java
+++ b/java/jakarta/websocket/HandshakeResponse.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket;
+package jakarta.websocket;
 
 import java.util.List;
 import java.util.Map;

==================================================
OnClose.java
similarity index 98%
rename from java/javax/websocket/MessageHandler.java
rename to java/jakarta/websocket/MessageHandler.java
index 2c30d99779..212ec0ead9 100644
--- a/java/javax/websocket/MessageHandler.java
+++ b/java/jakarta/websocket/MessageHandler.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket;
+package jakarta.websocket;
 
 public interface MessageHandler {
 

==================================================
OnError.java
similarity index 97%
rename from java/javax/websocket/OnClose.java
rename to java/jakarta/websocket/OnClose.java
index 6ee61d369a..31291165bc 100644
--- a/java/javax/websocket/OnClose.java
+++ b/java/jakarta/websocket/OnClose.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket;
+package jakarta.websocket;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

==================================================
OnMessage.java
similarity index 97%
rename from java/javax/websocket/OnError.java
rename to java/jakarta/websocket/OnError.java
index ce43148480..a09a5bde28 100644
--- a/java/javax/websocket/OnError.java
+++ b/java/jakarta/websocket/OnError.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket;
+package jakarta.websocket;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

==================================================
OnOpen.java
similarity index 97%
rename from java/javax/websocket/OnMessage.java
rename to java/jakarta/websocket/OnMessage.java
index 564fa99474..34cfcfa18e 100644
--- a/java/javax/websocket/OnMessage.java
+++ b/java/jakarta/websocket/OnMessage.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket;
+package jakarta.websocket;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

==================================================
PongMessage.java
similarity index 97%
rename from java/javax/websocket/OnOpen.java
rename to java/jakarta/websocket/OnOpen.java
index 9f0ea6e362..26b8e9d1e0 100644
--- a/java/javax/websocket/OnOpen.java
+++ b/java/jakarta/websocket/OnOpen.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket;
+package jakarta.websocket;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

==================================================
RemoteEndpoint.java
similarity index 97%
rename from java/javax/websocket/PongMessage.java
rename to java/jakarta/websocket/PongMessage.java
index 7e9e3b6a33..8740eae8e4 100644
--- a/java/javax/websocket/PongMessage.java
+++ b/java/jakarta/websocket/PongMessage.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket;
+package jakarta.websocket;
 
 import java.nio.ByteBuffer;
 

==================================================
SendHandler.java
similarity index 99%
rename from java/javax/websocket/RemoteEndpoint.java
rename to java/jakarta/websocket/RemoteEndpoint.java
index 19c7a10028..213b8a4104 100644
--- a/java/javax/websocket/RemoteEndpoint.java
+++ b/java/jakarta/websocket/RemoteEndpoint.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket;
+package jakarta.websocket;
 
 import java.io.IOException;
 import java.io.OutputStream;

==================================================
SendResult.java
similarity index 97%
rename from java/javax/websocket/SendHandler.java
rename to java/jakarta/websocket/SendHandler.java
index 65b9a19ae4..9e8317c5b5 100644
--- a/java/javax/websocket/SendHandler.java
+++ b/java/jakarta/websocket/SendHandler.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket;
+package jakarta.websocket;
 
 public interface SendHandler {
 

==================================================
Session.java
similarity index 97%
rename from java/javax/websocket/SendResult.java
rename to java/jakarta/websocket/SendResult.java
index a3797d5bb4..e3d47ec750 100644
--- a/java/javax/websocket/SendResult.java
+++ b/java/jakarta/websocket/SendResult.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket;
+package jakarta.websocket;
 
 public final class SendResult {
     private final Throwable exception;

==================================================
SessionException.java
similarity index 95%
rename from java/javax/websocket/Session.java
rename to java/jakarta/websocket/Session.java
index eea15e5be8..2ff44d68ae 100644
--- a/java/javax/websocket/Session.java
+++ b/java/jakarta/websocket/Session.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket;
+package jakarta.websocket;
 
 import java.io.Closeable;
 import java.io.IOException;
@@ -38,9 +38,9 @@ public interface Session extends Closeable {
      * binary, pong). The message type will be derived at runtime from the
      * provided {@link MessageHandler} instance. It is not always possible to do
      * this so it is better to use
-     * {@link #addMessageHandler(Class, javax.websocket.MessageHandler.Partial)}
+     * {@link #addMessageHandler(Class, jakarta.websocket.MessageHandler.Partial)}
      * or
-     * {@link #addMessageHandler(Class, javax.websocket.MessageHandler.Whole)}.
+     * {@link #addMessageHandler(Class, jakarta.websocket.MessageHandler.Whole)}.
      *
      * @param handler   The message handler for a incoming message
      *
@@ -114,7 +114,7 @@ public interface Session extends Closeable {
 
     /**
      * Close the connection to the remote end point using the code
-     * {@link javax.websocket.CloseReason.CloseCodes#NORMAL_CLOSURE} and an
+     * {@link jakarta.websocket.CloseReason.CloseCodes#NORMAL_CLOSURE} and an
      * empty reason phrase.
      *
      * @throws IOException if an I/O error occurs while the WebSocket session is

==================================================
WebSocketContainer.java
similarity index 97%
rename from java/javax/websocket/SessionException.java
rename to java/jakarta/websocket/SessionException.java
index 428b82ec04..b3eafed099 100644
--- a/java/javax/websocket/SessionException.java
+++ b/java/jakarta/websocket/SessionException.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket;
+package jakarta.websocket;
 
 public class SessionException extends Exception {
 

==================================================
DefaultServerEndpointConfig.java
similarity index 99%
rename from java/javax/websocket/WebSocketContainer.java
rename to java/jakarta/websocket/WebSocketContainer.java
index f2da3e4327..d7fd1aa5d7 100644
--- a/java/javax/websocket/WebSocketContainer.java
+++ b/java/jakarta/websocket/WebSocketContainer.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket;
+package jakarta.websocket;
 
 import java.io.IOException;
 import java.net.URI;

==================================================
HandshakeRequest.java
similarity index 95%
rename from java/javax/websocket/server/DefaultServerEndpointConfig.java
rename to java/jakarta/websocket/server/DefaultServerEndpointConfig.java
index 7c3b8d7d62..e0122f2faa 100644
--- a/java/javax/websocket/server/DefaultServerEndpointConfig.java
+++ b/java/jakarta/websocket/server/DefaultServerEndpointConfig.java
@@ -14,15 +14,15 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket.server;
+package jakarta.websocket.server;
 
 import java.util.List;
 import java.util.Map;
 import java.util.concurrent.ConcurrentHashMap;
 
-import javax.websocket.Decoder;
-import javax.websocket.Encoder;
-import javax.websocket.Extension;
+import jakarta.websocket.Decoder;
+import jakarta.websocket.Encoder;
+import jakarta.websocket.Extension;
 
 /**
  * Provides the default configuration for WebSocket server endpoints.

==================================================
PathParam.java
similarity index 98%
rename from java/javax/websocket/server/HandshakeRequest.java
rename to java/jakarta/websocket/server/HandshakeRequest.java
index b42ca8db35..2edb554608 100644
--- a/java/javax/websocket/server/HandshakeRequest.java
+++ b/java/jakarta/websocket/server/HandshakeRequest.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket.server;
+package jakarta.websocket.server;
 
 import java.net.URI;
 import java.security.Principal;

==================================================
ServerApplicationConfig.java
similarity index 97%
rename from java/javax/websocket/server/PathParam.java
rename to java/jakarta/websocket/server/PathParam.java
index ff1d085ed1..bcf613f348 100644
--- a/java/javax/websocket/server/PathParam.java
+++ b/java/jakarta/websocket/server/PathParam.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket.server;
+package jakarta.websocket.server;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

==================================================
ServerContainer.java
similarity index 96%
rename from java/javax/websocket/server/ServerApplicationConfig.java
rename to java/jakarta/websocket/server/ServerApplicationConfig.java
index b91f1c4397..8f59597ef8 100644
--- a/java/javax/websocket/server/ServerApplicationConfig.java
+++ b/java/jakarta/websocket/server/ServerApplicationConfig.java
@@ -14,11 +14,11 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket.server;
+package jakarta.websocket.server;
 
 import java.util.Set;
 
-import javax.websocket.Endpoint;
+import jakarta.websocket.Endpoint;
 
 /**
  * Applications may provide an implementation of this interface to filter the

==================================================
ServerEndpoint.java
similarity index 89%
rename from java/javax/websocket/server/ServerContainer.java
rename to java/jakarta/websocket/server/ServerContainer.java
index 3243a07c0f..a210311cda 100644
--- a/java/javax/websocket/server/ServerContainer.java
+++ b/java/jakarta/websocket/server/ServerContainer.java
@@ -14,10 +14,10 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket.server;
+package jakarta.websocket.server;
 
-import javax.websocket.DeploymentException;
-import javax.websocket.WebSocketContainer;
+import jakarta.websocket.DeploymentException;
+import jakarta.websocket.WebSocketContainer;
 
 /**
  * Provides the ability to deploy endpoints programmatically.

==================================================
ServerEndpointConfig.java
similarity index 93%
rename from java/javax/websocket/server/ServerEndpoint.java
rename to java/jakarta/websocket/server/ServerEndpoint.java
index 43b7dfa220..9c7f013070 100644
--- a/java/javax/websocket/server/ServerEndpoint.java
+++ b/java/jakarta/websocket/server/ServerEndpoint.java
@@ -14,15 +14,15 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket.server;
+package jakarta.websocket.server;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import javax.websocket.Decoder;
-import javax.websocket.Encoder;
+import jakarta.websocket.Decoder;
+import jakarta.websocket.Encoder;
 
 @Retention(RetentionPolicy.RUNTIME)
 @Target(ElementType.TYPE)

==================================================
Constants.java
similarity index 97%
rename from java/javax/websocket/server/ServerEndpointConfig.java
rename to java/jakarta/websocket/server/ServerEndpointConfig.java
index fa56ce4ad2..4fb16d301e 100644
--- a/java/javax/websocket/server/ServerEndpointConfig.java
+++ b/java/jakarta/websocket/server/ServerEndpointConfig.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package javax.websocket.server;
+package jakarta.websocket.server;
 
 import java.security.AccessController;
 import java.security.PrivilegedAction;
@@ -23,11 +23,11 @@ import java.util.Iterator;
 import java.util.List;
 import java.util.ServiceLoader;
 
-import javax.websocket.Decoder;
-import javax.websocket.Encoder;
-import javax.websocket.EndpointConfig;
-import javax.websocket.Extension;
-import javax.websocket.HandshakeResponse;
+import jakarta.websocket.Decoder;
+import jakarta.websocket.Encoder;
+import jakarta.websocket.EndpointConfig;
+import jakarta.websocket.Extension;
+import jakarta.websocket.HandshakeResponse;
 
 /**
  * Provides configuration information for WebSocket endpoints published to a

==================================================
DecoderEntry.java
index fa01921e57..1971653c08 100644
--- a/java/org/apache/tomcat/websocket/Constants.java
+++ b/java/org/apache/tomcat/websocket/Constants.java
@@ -20,7 +20,7 @@ import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
 
-import javax.websocket.Extension;
+import jakarta.websocket.Extension;
 
 /**
  * Internal implementation constants.

==================================================
FutureToSendHandler.java
index 299e38e52d..3af5aa59a8 100644
--- a/java/org/apache/tomcat/websocket/DecoderEntry.java
+++ b/java/org/apache/tomcat/websocket/DecoderEntry.java
@@ -16,7 +16,7 @@
  */
 package org.apache.tomcat.websocket;
 
-import javax.websocket.Decoder;
+import jakarta.websocket.Decoder;
 
 public class DecoderEntry {
 

==================================================
MessageHandlerResult.java
index 692cb593c8..5882eef68f 100644
--- a/java/org/apache/tomcat/websocket/FutureToSendHandler.java
+++ b/java/org/apache/tomcat/websocket/FutureToSendHandler.java
@@ -23,8 +23,8 @@ import java.util.concurrent.TimeUnit;
 import java.util.concurrent.TimeoutException;
 import java.util.concurrent.atomic.AtomicReference;
 
-import javax.websocket.SendHandler;
-import javax.websocket.SendResult;
+import jakarta.websocket.SendHandler;
+import jakarta.websocket.SendResult;
 
 import org.apache.tomcat.util.res.StringManager;
 

==================================================
MessagePart.java
index a55e8dd60a..2f6a938871 100644
--- a/java/org/apache/tomcat/websocket/MessageHandlerResult.java
+++ b/java/org/apache/tomcat/websocket/MessageHandlerResult.java
@@ -16,7 +16,7 @@
  */
 package org.apache.tomcat.websocket;
 
-import javax.websocket.MessageHandler;
+import jakarta.websocket.MessageHandler;
 
 public class MessageHandlerResult {
 

==================================================
PerMessageDeflate.java
index f51c007543..506289b245 100644
--- a/java/org/apache/tomcat/websocket/MessagePart.java
+++ b/java/org/apache/tomcat/websocket/MessagePart.java
@@ -18,7 +18,7 @@ package org.apache.tomcat.websocket;
 
 import java.nio.ByteBuffer;
 
-import javax.websocket.SendHandler;
+import jakarta.websocket.SendHandler;
 
 class MessagePart {
     private final boolean fin;

==================================================
Transformation.java
index afcfcf02eb..c101916d5b 100644
--- a/java/org/apache/tomcat/websocket/PerMessageDeflate.java
+++ b/java/org/apache/tomcat/websocket/PerMessageDeflate.java
@@ -24,9 +24,9 @@ import java.util.zip.DataFormatException;
 import java.util.zip.Deflater;
 import java.util.zip.Inflater;
 
-import javax.websocket.Extension;
-import javax.websocket.Extension.Parameter;
-import javax.websocket.SendHandler;
+import jakarta.websocket.Extension;
+import jakarta.websocket.Extension.Parameter;
+import jakarta.websocket.SendHandler;
 
 import org.apache.tomcat.util.res.StringManager;
 

==================================================
TransformationFactory.java
index 14d809303f..0a955f07fe 100644
--- a/java/org/apache/tomcat/websocket/Transformation.java
+++ b/java/org/apache/tomcat/websocket/Transformation.java
@@ -20,7 +20,7 @@ import java.io.IOException;
 import java.nio.ByteBuffer;
 import java.util.List;
 
-import javax.websocket.Extension;
+import jakarta.websocket.Extension;
 
 /**
  * The internal representation of the transformation that a WebSocket extension

==================================================
Util.java
index 643be94014..9d2b37c27b 100644
--- a/java/org/apache/tomcat/websocket/TransformationFactory.java
+++ b/java/org/apache/tomcat/websocket/TransformationFactory.java
@@ -18,7 +18,7 @@ package org.apache.tomcat.websocket;
 
 import java.util.List;
 
-import javax.websocket.Extension;
+import jakarta.websocket.Extension;
 
 import org.apache.tomcat.util.res.StringManager;
 

==================================================
WrappedMessageHandler.java
index 63009a6259..ac8ea2dbc0 100644
--- a/java/org/apache/tomcat/websocket/Util.java
+++ b/java/org/apache/tomcat/websocket/Util.java
@@ -33,20 +33,20 @@ import java.util.Queue;
 import java.util.Set;
 import java.util.concurrent.ConcurrentLinkedQueue;
 
-import javax.websocket.CloseReason.CloseCode;
-import javax.websocket.CloseReason.CloseCodes;
-import javax.websocket.Decoder;
-import javax.websocket.Decoder.Binary;
-import javax.websocket.Decoder.BinaryStream;
-import javax.websocket.Decoder.Text;
-import javax.websocket.Decoder.TextStream;
-import javax.websocket.DeploymentException;
-import javax.websocket.Encoder;
-import javax.websocket.EndpointConfig;
-import javax.websocket.Extension;
-import javax.websocket.MessageHandler;
-import javax.websocket.PongMessage;
-import javax.websocket.Session;
+import jakarta.websocket.CloseReason.CloseCode;
+import jakarta.websocket.CloseReason.CloseCodes;
+import jakarta.websocket.Decoder;
+import jakarta.websocket.Decoder.Binary;
+import jakarta.websocket.Decoder.BinaryStream;
+import jakarta.websocket.Decoder.Text;
+import jakarta.websocket.Decoder.TextStream;
+import jakarta.websocket.DeploymentException;
+import jakarta.websocket.Encoder;
+import jakarta.websocket.EndpointConfig;
+import jakarta.websocket.Extension;
+import jakarta.websocket.MessageHandler;
+import jakarta.websocket.PongMessage;
+import jakarta.websocket.Session;
 
 import org.apache.tomcat.util.res.StringManager;
 import org.apache.tomcat.websocket.pojo.PojoMessageHandlerPartialBinary;

==================================================
WsContainerProvider.java
index c4004b3faa..fc5ee2e2de 100644
--- a/java/org/apache/tomcat/websocket/WrappedMessageHandler.java
+++ b/java/org/apache/tomcat/websocket/WrappedMessageHandler.java
@@ -16,7 +16,7 @@
  */
 package org.apache.tomcat.websocket;
 
-import javax.websocket.MessageHandler;
+import jakarta.websocket.MessageHandler;
 
 public interface WrappedMessageHandler {
     long getMaxMessageSize();

==================================================
WsExtension.java
index 654ad79077..ad990f17d5 100644
--- a/java/org/apache/tomcat/websocket/WsContainerProvider.java
+++ b/java/org/apache/tomcat/websocket/WsContainerProvider.java
@@ -16,8 +16,8 @@
  */
 package org.apache.tomcat.websocket;
 
-import javax.websocket.ContainerProvider;
-import javax.websocket.WebSocketContainer;
+import jakarta.websocket.ContainerProvider;
+import jakarta.websocket.WebSocketContainer;
 
 public class WsContainerProvider extends ContainerProvider {
 

==================================================
WsExtensionParameter.java
index 766e0fbf93..6895619f4e 100644
--- a/java/org/apache/tomcat/websocket/WsExtension.java
+++ b/java/org/apache/tomcat/websocket/WsExtension.java
@@ -19,7 +19,7 @@ package org.apache.tomcat.websocket;
 import java.util.ArrayList;
 import java.util.List;
 
-import javax.websocket.Extension;
+import jakarta.websocket.Extension;
 
 public class WsExtension implements Extension {
 

==================================================
WsFrameBase.java
index 1b3f266870..4bc464ab19 100644
--- a/java/org/apache/tomcat/websocket/WsExtensionParameter.java
+++ b/java/org/apache/tomcat/websocket/WsExtensionParameter.java
@@ -16,7 +16,7 @@
  */
 package org.apache.tomcat.websocket;
 
-import javax.websocket.Extension.Parameter;
+import jakarta.websocket.Extension.Parameter;
 
 public class WsExtensionParameter implements Parameter {
 

==================================================
WsFrameClient.java
index 28cdc30036..97c9c94b26 100644
--- a/java/org/apache/tomcat/websocket/WsFrameBase.java
+++ b/java/org/apache/tomcat/websocket/WsFrameBase.java
@@ -25,11 +25,11 @@ import java.nio.charset.CodingErrorAction;
 import java.util.List;
 import java.util.concurrent.atomic.AtomicReferenceFieldUpdater;
 
-import javax.websocket.CloseReason;
-import javax.websocket.CloseReason.CloseCodes;
-import javax.websocket.Extension;
-import javax.websocket.MessageHandler;
-import javax.websocket.PongMessage;
+import jakarta.websocket.CloseReason;
+import jakarta.websocket.CloseReason.CloseCodes;
+import jakarta.websocket.Extension;
+import jakarta.websocket.MessageHandler;
+import jakarta.websocket.PongMessage;
 
 import org.apache.juli.logging.Log;
 import org.apache.tomcat.util.ExceptionUtils;

==================================================
WsHandshakeResponse.java
index 260048e684..78034912be 100644
--- a/java/org/apache/tomcat/websocket/WsFrameClient.java
+++ b/java/org/apache/tomcat/websocket/WsFrameClient.java
@@ -21,8 +21,8 @@ import java.io.IOException;
 import java.nio.ByteBuffer;
 import java.nio.channels.CompletionHandler;
 
-import javax.websocket.CloseReason;
-import javax.websocket.CloseReason.CloseCodes;
+import jakarta.websocket.CloseReason;
+import jakarta.websocket.CloseReason.CloseCodes;
 
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;

==================================================
WsIOException.java
index ecb39e4452..e99c03f399 100644
--- a/java/org/apache/tomcat/websocket/WsHandshakeResponse.java
+++ b/java/org/apache/tomcat/websocket/WsHandshakeResponse.java
@@ -21,7 +21,7 @@ import java.util.List;
 import java.util.Map;
 import java.util.Map.Entry;
 
-import javax.websocket.HandshakeResponse;
+import jakarta.websocket.HandshakeResponse;
 
 import org.apache.tomcat.util.collections.CaseInsensitiveKeyMap;
 

==================================================
WsPongMessage.java
index 0b7b1d4bd6..c09e0ad2a8 100644
--- a/java/org/apache/tomcat/websocket/WsIOException.java
+++ b/java/org/apache/tomcat/websocket/WsIOException.java
@@ -18,7 +18,7 @@ package org.apache.tomcat.websocket;
 
 import java.io.IOException;
 
-import javax.websocket.CloseReason;
+import jakarta.websocket.CloseReason;
 
 /**
  * Allows the WebSocket implementation to throw an {@link IOException} that

==================================================
WsRemoteEndpointAsync.java
index c3a6c33472..6019fc5418 100644
--- a/java/org/apache/tomcat/websocket/WsPongMessage.java
+++ b/java/org/apache/tomcat/websocket/WsPongMessage.java
@@ -18,7 +18,7 @@ package org.apache.tomcat.websocket;
 
 import java.nio.ByteBuffer;
 
-import javax.websocket.PongMessage;
+import jakarta.websocket.PongMessage;
 
 public class WsPongMessage implements PongMessage {
 

==================================================
WsRemoteEndpointBase.java
index 964223baaa..afb59e941b 100644
--- a/java/org/apache/tomcat/websocket/WsRemoteEndpointAsync.java
+++ b/java/org/apache/tomcat/websocket/WsRemoteEndpointAsync.java
@@ -19,8 +19,8 @@ package org.apache.tomcat.websocket;
 import java.nio.ByteBuffer;
 import java.util.concurrent.Future;
 
-import javax.websocket.RemoteEndpoint;
-import javax.websocket.SendHandler;
+import jakarta.websocket.RemoteEndpoint;
+import jakarta.websocket.SendHandler;
 
 public class WsRemoteEndpointAsync extends WsRemoteEndpointBase
         implements RemoteEndpoint.Async {

==================================================
WsRemoteEndpointBasic.java
index e883c2ca0a..65a5f27454 100644
--- a/java/org/apache/tomcat/websocket/WsRemoteEndpointBase.java
+++ b/java/org/apache/tomcat/websocket/WsRemoteEndpointBase.java
@@ -19,7 +19,7 @@ package org.apache.tomcat.websocket;
 import java.io.IOException;
 import java.nio.ByteBuffer;
 
-import javax.websocket.RemoteEndpoint;
+import jakarta.websocket.RemoteEndpoint;
 
 public abstract class WsRemoteEndpointBase implements RemoteEndpoint {
 

==================================================
WsRemoteEndpointImplBase.java
index b0fc050a2b..27859aac30 100644
--- a/java/org/apache/tomcat/websocket/WsRemoteEndpointBasic.java
+++ b/java/org/apache/tomcat/websocket/WsRemoteEndpointBasic.java
@@ -21,8 +21,8 @@ import java.io.OutputStream;
 import java.io.Writer;
 import java.nio.ByteBuffer;
 
-import javax.websocket.EncodeException;
-import javax.websocket.RemoteEndpoint;
+import jakarta.websocket.EncodeException;
+import jakarta.websocket.RemoteEndpoint;
 
 public class WsRemoteEndpointBasic extends WsRemoteEndpointBase
         implements RemoteEndpoint.Basic {

==================================================
WsRemoteEndpointImplClient.java
index 548f5a99c1..08f3bf39e7 100644
--- a/java/org/apache/tomcat/websocket/WsRemoteEndpointImplBase.java
+++ b/java/org/apache/tomcat/websocket/WsRemoteEndpointImplBase.java
@@ -33,15 +33,15 @@ import java.util.concurrent.Semaphore;
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicBoolean;
 
-import javax.websocket.CloseReason;
-import javax.websocket.CloseReason.CloseCodes;
-import javax.websocket.DeploymentException;
-import javax.websocket.EncodeException;
-import javax.websocket.Encoder;
-import javax.websocket.EndpointConfig;
-import javax.websocket.RemoteEndpoint;
-import javax.websocket.SendHandler;
-import javax.websocket.SendResult;
+import jakarta.websocket.CloseReason;
+import jakarta.websocket.CloseReason.CloseCodes;
+import jakarta.websocket.DeploymentException;
+import jakarta.websocket.EncodeException;
+import jakarta.websocket.Encoder;
+import jakarta.websocket.EndpointConfig;
+import jakarta.websocket.RemoteEndpoint;
+import jakarta.websocket.SendHandler;
+import jakarta.websocket.SendResult;
 
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;

==================================================
WsSession.java
index 473fda2124..789326bb13 100644
--- a/java/org/apache/tomcat/websocket/WsRemoteEndpointImplClient.java
+++ b/java/org/apache/tomcat/websocket/WsRemoteEndpointImplClient.java
@@ -22,8 +22,8 @@ import java.util.concurrent.ExecutionException;
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.TimeoutException;
 
-import javax.websocket.SendHandler;
-import javax.websocket.SendResult;
+import jakarta.websocket.SendHandler;
+import jakarta.websocket.SendResult;
 
 public class WsRemoteEndpointImplClient extends WsRemoteEndpointImplBase {
 

==================================================
WsWebSocketContainer.java
index 37bff32059..b52d4022b2 100644
--- a/java/org/apache/tomcat/websocket/WsSession.java
+++ b/java/org/apache/tomcat/websocket/WsSession.java
@@ -30,22 +30,22 @@ import java.util.Set;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.atomic.AtomicLong;
 
-import javax.websocket.CloseReason;
-import javax.websocket.CloseReason.CloseCode;
-import javax.websocket.CloseReason.CloseCodes;
-import javax.websocket.DeploymentException;
-import javax.websocket.Endpoint;
-import javax.websocket.EndpointConfig;
-import javax.websocket.Extension;
-import javax.websocket.MessageHandler;
-import javax.websocket.MessageHandler.Partial;
-import javax.websocket.MessageHandler.Whole;
-import javax.websocket.PongMessage;
-import javax.websocket.RemoteEndpoint;
-import javax.websocket.SendResult;
-import javax.websocket.Session;
-import javax.websocket.WebSocketContainer;
-import javax.websocket.server.ServerEndpointConfig;
+import jakarta.websocket.CloseReason;
+import jakarta.websocket.CloseReason.CloseCode;
+import jakarta.websocket.CloseReason.CloseCodes;
+import jakarta.websocket.DeploymentException;
+import jakarta.websocket.Endpoint;
+import jakarta.websocket.EndpointConfig;
+import jakarta.websocket.Extension;
+import jakarta.websocket.MessageHandler;
+import jakarta.websocket.MessageHandler.Partial;
+import jakarta.websocket.MessageHandler.Whole;
+import jakarta.websocket.PongMessage;
+import jakarta.websocket.RemoteEndpoint;
+import jakarta.websocket.SendResult;
+import jakarta.websocket.Session;
+import jakarta.websocket.WebSocketContainer;
+import jakarta.websocket.server.ServerEndpointConfig;
 
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;

==================================================
PojoEndpointBase.java
index 4ea31fc08f..e849648faa 100644
--- a/java/org/apache/tomcat/websocket/WsWebSocketContainer.java
+++ b/java/org/apache/tomcat/websocket/WsWebSocketContainer.java
@@ -54,16 +54,17 @@ import javax.net.ssl.SSLEngine;
 import javax.net.ssl.SSLException;
 import javax.net.ssl.SSLParameters;
 import javax.net.ssl.TrustManagerFactory;
-import javax.websocket.ClientEndpoint;
-import javax.websocket.ClientEndpointConfig;
-import javax.websocket.CloseReason;
-import javax.websocket.CloseReason.CloseCodes;
-import javax.websocket.DeploymentException;
-import javax.websocket.Endpoint;
-import javax.websocket.Extension;
-import javax.websocket.HandshakeResponse;
-import javax.websocket.Session;
-import javax.websocket.WebSocketContainer;
+
+import jakarta.websocket.ClientEndpoint;
+import jakarta.websocket.ClientEndpointConfig;
+import jakarta.websocket.CloseReason;
+import jakarta.websocket.CloseReason.CloseCodes;
+import jakarta.websocket.DeploymentException;
+import jakarta.websocket.Endpoint;
+import jakarta.websocket.Extension;
+import jakarta.websocket.HandshakeResponse;
+import jakarta.websocket.Session;
+import jakarta.websocket.WebSocketContainer;
 
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;

==================================================
PojoEndpointClient.java
index 75615d41c5..41ddd0d5a4 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoEndpointBase.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoEndpointBase.java
@@ -21,11 +21,11 @@ import java.lang.reflect.InvocationTargetException;
 import java.util.Map;
 import java.util.Set;
 
-import javax.websocket.CloseReason;
-import javax.websocket.Endpoint;
-import javax.websocket.EndpointConfig;
-import javax.websocket.MessageHandler;
-import javax.websocket.Session;
+import jakarta.websocket.CloseReason;
+import jakarta.websocket.Endpoint;
+import jakarta.websocket.EndpointConfig;
+import jakarta.websocket.MessageHandler;
+import jakarta.websocket.Session;
 
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;

==================================================
PojoEndpointServer.java
index f4d0567a3b..2d9e224cf7 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoEndpointClient.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoEndpointClient.java
@@ -19,16 +19,16 @@ package org.apache.tomcat.websocket.pojo;
 import java.util.Collections;
 import java.util.List;
 
-import javax.websocket.Decoder;
-import javax.websocket.DeploymentException;
-import javax.websocket.EndpointConfig;
-import javax.websocket.Session;
+import jakarta.websocket.Decoder;
+import jakarta.websocket.DeploymentException;
+import jakarta.websocket.EndpointConfig;
+import jakarta.websocket.Session;
 
 
 /**
  * Wrapper class for instances of POJOs annotated with
- * {@link javax.websocket.ClientEndpoint} so they appear as standard
- * {@link javax.websocket.Endpoint} instances.
+ * {@link jakarta.websocket.ClientEndpoint} so they appear as standard
+ * {@link jakarta.websocket.Endpoint} instances.
  */
 public class PojoEndpointClient extends PojoEndpointBase {
 

==================================================
PojoMessageHandlerBase.java
index 48af737626..b41145c09e 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoEndpointServer.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoEndpointServer.java
@@ -18,16 +18,16 @@ package org.apache.tomcat.websocket.pojo;
 
 import java.util.Map;
 
-import javax.websocket.EndpointConfig;
-import javax.websocket.Session;
-import javax.websocket.server.ServerEndpointConfig;
+import jakarta.websocket.EndpointConfig;
+import jakarta.websocket.Session;
+import jakarta.websocket.server.ServerEndpointConfig;
 
 import org.apache.tomcat.util.res.StringManager;
 
 /**
  * Wrapper class for instances of POJOs annotated with
- * {@link javax.websocket.server.ServerEndpoint} so they appear as standard
- * {@link javax.websocket.Endpoint} instances.
+ * {@link jakarta.websocket.server.ServerEndpoint} so they appear as standard
+ * {@link jakarta.websocket.Endpoint} instances.
  */
 public class PojoEndpointServer extends PojoEndpointBase {
 

==================================================
PojoMessageHandlerPartialBase.java
index bc125c73b4..333e870507 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerBase.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerBase.java
@@ -20,10 +20,10 @@ import java.io.IOException;
 import java.lang.reflect.Method;
 import java.nio.ByteBuffer;
 
-import javax.websocket.EncodeException;
-import javax.websocket.MessageHandler;
-import javax.websocket.RemoteEndpoint;
-import javax.websocket.Session;
+import jakarta.websocket.EncodeException;
+import jakarta.websocket.MessageHandler;
+import jakarta.websocket.RemoteEndpoint;
+import jakarta.websocket.Session;
 
 import org.apache.tomcat.util.ExceptionUtils;
 import org.apache.tomcat.websocket.WrappedMessageHandler;

==================================================
PojoMessageHandlerPartialBinary.java
index 4a0f525409..2d7edddf8d 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerPartialBase.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerPartialBase.java
@@ -20,9 +20,9 @@ import java.lang.reflect.InvocationTargetException;
 import java.lang.reflect.Method;
 import java.nio.ByteBuffer;
 
-import javax.websocket.DecodeException;
-import javax.websocket.MessageHandler;
-import javax.websocket.Session;
+import jakarta.websocket.DecodeException;
+import jakarta.websocket.MessageHandler;
+import jakarta.websocket.Session;
 
 import org.apache.tomcat.websocket.WsSession;
 

==================================================
PojoMessageHandlerPartialText.java
index 6446efba33..0ca701ac47 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerPartialBinary.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerPartialBinary.java
@@ -19,7 +19,7 @@ package org.apache.tomcat.websocket.pojo;
 import java.lang.reflect.Method;
 import java.nio.ByteBuffer;
 
-import javax.websocket.Session;
+import jakarta.websocket.Session;
 
 /**
  * ByteBuffer specific concrete implementation for handling partial messages.

==================================================
PojoMessageHandlerWholeBase.java
index 683634b8f4..a52757cdc9 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerPartialText.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerPartialText.java
@@ -18,7 +18,7 @@ package org.apache.tomcat.websocket.pojo;
 
 import java.lang.reflect.Method;
 
-import javax.websocket.Session;
+import jakarta.websocket.Session;
 
 /**
  * Text specific concrete implementation for handling partial messages.

==================================================
PojoMessageHandlerWholeBinary.java
index aa4abbe0c2..e9735527d9 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerWholeBase.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerWholeBase.java
@@ -19,9 +19,9 @@ package org.apache.tomcat.websocket.pojo;
 import java.lang.reflect.InvocationTargetException;
 import java.lang.reflect.Method;
 
-import javax.websocket.DecodeException;
-import javax.websocket.MessageHandler;
-import javax.websocket.Session;
+import jakarta.websocket.DecodeException;
+import jakarta.websocket.MessageHandler;
+import jakarta.websocket.Session;
 
 import org.apache.tomcat.websocket.WsSession;
 

==================================================
PojoMessageHandlerWholePong.java
index e4756f6a4a..07b49ce619 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerWholeBinary.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerWholeBinary.java
@@ -23,12 +23,12 @@ import java.nio.ByteBuffer;
 import java.util.ArrayList;
 import java.util.List;
 
-import javax.websocket.DecodeException;
-import javax.websocket.Decoder;
-import javax.websocket.Decoder.Binary;
-import javax.websocket.Decoder.BinaryStream;
-import javax.websocket.EndpointConfig;
-import javax.websocket.Session;
+import jakarta.websocket.DecodeException;
+import jakarta.websocket.Decoder;
+import jakarta.websocket.Decoder.Binary;
+import jakarta.websocket.Decoder.BinaryStream;
+import jakarta.websocket.EndpointConfig;
+import jakarta.websocket.Session;
 
 import org.apache.tomcat.util.res.StringManager;
 

==================================================
PojoMessageHandlerWholeText.java
index 762814dff4..64bd6ba45f 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerWholePong.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerWholePong.java
@@ -18,8 +18,8 @@ package org.apache.tomcat.websocket.pojo;
 
 import java.lang.reflect.Method;
 
-import javax.websocket.PongMessage;
-import javax.websocket.Session;
+import jakarta.websocket.PongMessage;
+import jakarta.websocket.Session;
 
 /**
  * PongMessage specific concrete implementation for handling whole messages.

==================================================
PojoMethodMapping.java
index 3ec4bd77b1..0cb5fecc58 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerWholeText.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerWholeText.java
@@ -22,12 +22,12 @@ import java.lang.reflect.Method;
 import java.util.ArrayList;
 import java.util.List;
 
-import javax.websocket.DecodeException;
-import javax.websocket.Decoder;
-import javax.websocket.Decoder.Text;
-import javax.websocket.Decoder.TextStream;
-import javax.websocket.EndpointConfig;
-import javax.websocket.Session;
+import jakarta.websocket.DecodeException;
+import jakarta.websocket.Decoder;
+import jakarta.websocket.Decoder.Text;
+import jakarta.websocket.Decoder.TextStream;
+import jakarta.websocket.EndpointConfig;
+import jakarta.websocket.Session;
 
 import org.apache.tomcat.util.res.StringManager;
 import org.apache.tomcat.websocket.Util;

==================================================
PojoPathParam.java
index d640b53882..4ace70fcba 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoMethodMapping.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoMethodMapping.java
@@ -30,19 +30,19 @@ import java.util.List;
 import java.util.Map;
 import java.util.Set;
 
-import javax.websocket.CloseReason;
-import javax.websocket.DecodeException;
-import javax.websocket.Decoder;
-import javax.websocket.DeploymentException;
-import javax.websocket.EndpointConfig;
-import javax.websocket.MessageHandler;
-import javax.websocket.OnClose;
-import javax.websocket.OnError;
-import javax.websocket.OnMessage;
-import javax.websocket.OnOpen;
-import javax.websocket.PongMessage;
-import javax.websocket.Session;
-import javax.websocket.server.PathParam;
+import jakarta.websocket.CloseReason;
+import jakarta.websocket.DecodeException;
+import jakarta.websocket.Decoder;
+import jakarta.websocket.DeploymentException;
+import jakarta.websocket.EndpointConfig;
+import jakarta.websocket.MessageHandler;
+import jakarta.websocket.OnClose;
+import jakarta.websocket.OnError;
+import jakarta.websocket.OnMessage;
+import jakarta.websocket.OnOpen;
+import jakarta.websocket.PongMessage;
+import jakarta.websocket.Session;
+import jakarta.websocket.server.PathParam;
 
 import org.apache.tomcat.util.res.StringManager;
 import org.apache.tomcat.websocket.DecoderEntry;
@@ -51,7 +51,7 @@ import org.apache.tomcat.websocket.Util.DecoderMatch;
 
 /**
  * For a POJO class annotated with
- * {@link javax.websocket.server.ServerEndpoint}, an instance of this class
+ * {@link jakarta.websocket.server.ServerEndpoint}, an instance of this class
  * creates and caches the method handler, method information and parameter
  * information for the onXXX calls.
  */

==================================================
package-info.java
index f35249e0c5..442f4c35ca 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoPathParam.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoPathParam.java
@@ -16,17 +16,17 @@
  */
 package org.apache.tomcat.websocket.pojo;
 
-import javax.websocket.DeploymentException;
+import jakarta.websocket.DeploymentException;
 
 import org.apache.tomcat.util.res.StringManager;
 import org.apache.tomcat.websocket.Util;
 
 /**
  * Stores the parameter type and name for a parameter that needs to be passed to
- * an onXxx method of {@link javax.websocket.Endpoint}. The name is only present
+ * an onXxx method of {@link jakarta.websocket.Endpoint}. The name is only present
  * for parameters annotated with
- * {@link javax.websocket.server.PathParam}. For the
- * {@link javax.websocket.Session} and {@link java.lang.Throwable} parameters,
+ * {@link jakarta.websocket.server.PathParam}. For the
+ * {@link jakarta.websocket.Session} and {@link java.lang.Throwable} parameters,
  * {@link #getName()} will always return <code>null</code>.
  */
 public class PojoPathParam {

==================================================
Constants.java
index 28daf9d4e0..31f4c6ae7b 100644
--- a/java/org/apache/tomcat/websocket/pojo/package-info.java
+++ b/java/org/apache/tomcat/websocket/pojo/package-info.java
@@ -16,6 +16,6 @@
  */
 /**
  * This package provides the necessary plumbing to convert an annotated POJO
- * into a WebSocket {@link javax.websocket.Endpoint}.
+ * into a WebSocket {@link jakarta.websocket.Endpoint}.
  */
 package org.apache.tomcat.websocket.pojo;
\ No newline at end of file

==================================================
DefaultServerEndpointConfigurator.java
index 876f1b8074..16768617d8 100644
--- a/java/org/apache/tomcat/websocket/server/Constants.java
+++ b/java/org/apache/tomcat/websocket/server/Constants.java
@@ -29,7 +29,7 @@ public class Constants {
             "org.apache.tomcat.websocket.noAddAfterHandshake";
 
     public static final String SERVER_CONTAINER_SERVLET_CONTEXT_ATTRIBUTE =
-            "javax.websocket.server.ServerContainer";
+            "jakarta.websocket.server.ServerContainer";
 
 
     private Constants() {

==================================================
UpgradeUtil.java
index 75b8d7059e..a64b8301ca 100644
--- a/java/org/apache/tomcat/websocket/server/DefaultServerEndpointConfigurator.java
+++ b/java/org/apache/tomcat/websocket/server/DefaultServerEndpointConfigurator.java
@@ -21,10 +21,10 @@ import java.util.HashSet;
 import java.util.List;
 import java.util.Set;
 
-import javax.websocket.Extension;
-import javax.websocket.HandshakeResponse;
-import javax.websocket.server.HandshakeRequest;
-import javax.websocket.server.ServerEndpointConfig;
+import jakarta.websocket.Extension;
+import jakarta.websocket.HandshakeResponse;
+import jakarta.websocket.server.HandshakeRequest;
+import jakarta.websocket.server.ServerEndpointConfig;
 
 public class DefaultServerEndpointConfigurator
         extends ServerEndpointConfig.Configurator {

==================================================
UriTemplate.java
index 598dee0fce..8e647dfbf5 100644
--- a/java/org/apache/tomcat/websocket/server/UpgradeUtil.java
+++ b/java/org/apache/tomcat/websocket/server/UpgradeUtil.java
@@ -26,16 +26,15 @@ import java.util.List;
 import java.util.Map;
 import java.util.Map.Entry;
 
-import javax.websocket.Endpoint;
-import javax.websocket.Extension;
-import javax.websocket.HandshakeResponse;
-import javax.websocket.server.ServerEndpointConfig;
-
 import jakarta.servlet.ServletException;
 import jakarta.servlet.ServletRequest;
 import jakarta.servlet.ServletResponse;
 import jakarta.servlet.http.HttpServletRequest;
 import jakarta.servlet.http.HttpServletResponse;
+import jakarta.websocket.Endpoint;
+import jakarta.websocket.Extension;
+import jakarta.websocket.HandshakeResponse;
+import jakarta.websocket.server.ServerEndpointConfig;
 
 import org.apache.tomcat.util.codec.binary.Base64;
 import org.apache.tomcat.util.res.StringManager;

==================================================
WsHandshakeRequest.java
index a9b8eb91ad..6419ed07ae 100644
--- a/java/org/apache/tomcat/websocket/server/UriTemplate.java
+++ b/java/org/apache/tomcat/websocket/server/UriTemplate.java
@@ -24,7 +24,7 @@ import java.util.List;
 import java.util.Map;
 import java.util.Set;
 
-import javax.websocket.DeploymentException;
+import jakarta.websocket.DeploymentException;
 
 import org.apache.tomcat.util.res.StringManager;
 

==================================================
WsHttpUpgradeHandler.java
index c04cf05899..a10cb8cd96 100644
--- a/java/org/apache/tomcat/websocket/server/WsHandshakeRequest.java
+++ b/java/org/apache/tomcat/websocket/server/WsHandshakeRequest.java
@@ -27,9 +27,8 @@ import java.util.List;
 import java.util.Map;
 import java.util.Map.Entry;
 
-import javax.websocket.server.HandshakeRequest;
-
 import jakarta.servlet.http.HttpServletRequest;
+import jakarta.websocket.server.HandshakeRequest;
 
 import org.apache.tomcat.util.collections.CaseInsensitiveKeyMap;
 import org.apache.tomcat.util.res.StringManager;

==================================================
WsMappingResult.java
index b882abb8a2..c449108d5c 100644
--- a/java/org/apache/tomcat/websocket/server/WsHttpUpgradeHandler.java
+++ b/java/org/apache/tomcat/websocket/server/WsHttpUpgradeHandler.java
@@ -20,15 +20,14 @@ import java.io.IOException;
 import java.util.List;
 import java.util.Map;
 
-import javax.websocket.CloseReason;
-import javax.websocket.CloseReason.CloseCodes;
-import javax.websocket.DeploymentException;
-import javax.websocket.Endpoint;
-import javax.websocket.Extension;
-import javax.websocket.server.ServerEndpointConfig;
-
 import jakarta.servlet.http.HttpSession;
 import jakarta.servlet.http.WebConnection;
+import jakarta.websocket.CloseReason;
+import jakarta.websocket.CloseReason.CloseCodes;
+import jakarta.websocket.DeploymentException;
+import jakarta.websocket.Endpoint;
+import jakarta.websocket.Extension;
+import jakarta.websocket.server.ServerEndpointConfig;
 
 import org.apache.coyote.http11.upgrade.InternalHttpUpgradeHandler;
 import org.apache.juli.logging.Log;

==================================================
WsPerSessionServerEndpointConfig.java
index 097386bcdb..51252318ca 100644
--- a/java/org/apache/tomcat/websocket/server/WsMappingResult.java
+++ b/java/org/apache/tomcat/websocket/server/WsMappingResult.java
@@ -18,7 +18,7 @@ package org.apache.tomcat.websocket.server;
 
 import java.util.Map;
 
-import javax.websocket.server.ServerEndpointConfig;
+import jakarta.websocket.server.ServerEndpointConfig;
 
 class WsMappingResult {
 

==================================================
WsRemoteEndpointImplServer.java
index aab9e7f6ac..07452e9054 100644
--- a/java/org/apache/tomcat/websocket/server/WsPerSessionServerEndpointConfig.java
+++ b/java/org/apache/tomcat/websocket/server/WsPerSessionServerEndpointConfig.java
@@ -20,10 +20,10 @@ import java.util.List;
 import java.util.Map;
 import java.util.concurrent.ConcurrentHashMap;
 
-import javax.websocket.Decoder;
-import javax.websocket.Encoder;
-import javax.websocket.Extension;
-import javax.websocket.server.ServerEndpointConfig;
+import jakarta.websocket.Decoder;
+import jakarta.websocket.Encoder;
+import jakarta.websocket.Extension;
+import jakarta.websocket.server.ServerEndpointConfig;
 
 /**
  * Wraps the provided {@link ServerEndpointConfig} and provides a per session

==================================================
WsSci.java
index 0fee1899eb..d56ba3dbef 100644
--- a/java/org/apache/tomcat/websocket/server/WsRemoteEndpointImplServer.java
+++ b/java/org/apache/tomcat/websocket/server/WsRemoteEndpointImplServer.java
@@ -24,8 +24,8 @@ import java.nio.channels.CompletionHandler;
 import java.util.concurrent.RejectedExecutionException;
 import java.util.concurrent.TimeUnit;
 
-import javax.websocket.SendHandler;
-import javax.websocket.SendResult;
+import jakarta.websocket.SendHandler;
+import jakarta.websocket.SendResult;
 
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
@@ -36,7 +36,7 @@ import org.apache.tomcat.websocket.Transformation;
 import org.apache.tomcat.websocket.WsRemoteEndpointImplBase;
 
 /**
- * This is the server side {@link javax.websocket.RemoteEndpoint} implementation
+ * This is the server side {@link jakarta.websocket.RemoteEndpoint} implementation
  * - i.e. what the server uses to send data to the client.
  */
 public class WsRemoteEndpointImplServer extends WsRemoteEndpointImplBase {
@@ -257,7 +257,7 @@ public class WsRemoteEndpointImplServer extends WsRemoteEndpointImplBase {
      * @param useDispatch   Should {@link SendHandler#onResult(SendResult)} be
      *                      called from a new thread, keeping in mind the
      *                      requirements of
-     *                      {@link javax.websocket.RemoteEndpoint.Async}
+     *                      {@link jakarta.websocket.RemoteEndpoint.Async}
      */
     private void clearHandler(Throwable t, boolean useDispatch) {
         // Setting the result marks this (partial) message as

==================================================
WsServerContainer.java
index 348c2a5b6f..007cac6674 100644
--- a/java/org/apache/tomcat/websocket/server/WsSci.java
+++ b/java/org/apache/tomcat/websocket/server/WsSci.java
@@ -20,17 +20,16 @@ import java.lang.reflect.Modifier;
 import java.util.HashSet;
 import java.util.Set;
 
-import javax.websocket.ContainerProvider;
-import javax.websocket.DeploymentException;
-import javax.websocket.Endpoint;
-import javax.websocket.server.ServerApplicationConfig;
-import javax.websocket.server.ServerEndpoint;
-import javax.websocket.server.ServerEndpointConfig;
-
 import jakarta.servlet.ServletContainerInitializer;
 import jakarta.servlet.ServletContext;
 import jakarta.servlet.ServletException;
 import jakarta.servlet.annotation.HandlesTypes;
+import jakarta.websocket.ContainerProvider;
+import jakarta.websocket.DeploymentException;
+import jakarta.websocket.Endpoint;
+import jakarta.websocket.server.ServerApplicationConfig;
+import jakarta.websocket.server.ServerEndpoint;
+import jakarta.websocket.server.ServerEndpointConfig;
 
 import org.apache.tomcat.util.compat.JreCompat;
 
@@ -59,7 +58,7 @@ public class WsSci implements ServletContainerInitializer {
         Set<Class<?>> scannedPojoEndpoints = new HashSet<>();
 
         try {
-            // wsPackage is "javax.websocket."
+            // wsPackage is "jakarta.websocket."
             String wsPackage = ContainerProvider.class.getName();
             wsPackage = wsPackage.substring(0, wsPackage.lastIndexOf('.') + 1);
             for (Class<?> clazz : clazzes) {

==================================================
TesterContainerProviderPerformance.java
index d0ad04495b..e35985cc2d 100644
--- a/res/checkstyle/org-import-control.xml
+++ b/res/checkstyle/org-import-control.xml
@@ -172,7 +172,7 @@
       </subpackage>
     </subpackage>
     <subpackage name="websocket">
-      <allow pkg="javax.websocket"/>
+      <allow pkg="jakarta.websocket"/>
       <allow pkg="org.apache.juli"/>
       <allow pkg="org.apache.tomcat"/>
       <allow pkg="org.apache.tomcat.util"/>

==================================================
TestWebappClassLoader.java
similarity index 98%
rename from test/javax/websocket/TesterContainerProviderPerformance.java
rename to test/jakarta/websocket/TesterContainerProviderPerformance.java
index 92b617a0a8..a3c8a87f46 100644
--- a/test/javax/websocket/TesterContainerProviderPerformance.java
+++ b/test/jakarta/websocket/TesterContainerProviderPerformance.java
@@ -14,7 +14,7 @@
  *  See the License for the specific language governing permissions and
  *  limitations under the License.
  */
-package javax.websocket;
+package jakarta.websocket;
 
 import java.util.function.IntConsumer;
 import java.util.function.Supplier;

==================================================
TestConnectionLimit.java
index df4fb87c25..426247d957 100644
--- a/test/org/apache/catalina/loader/TestWebappClassLoader.java
+++ b/test/org/apache/catalina/loader/TestWebappClassLoader.java
@@ -103,7 +103,7 @@ public class TestWebappClassLoader extends TomcatBaseTest {
             "org.apache.tomcat",
             "jakarta.el",
             "jakarta.servlet",
-            "javax.websocket",
+            "jakarta.websocket",
             "jakarta.security.auth.message"
         };
 

==================================================
TestPerMessageDeflate.java
index 85c2a0f8a2..9335fdc982 100644
--- a/test/org/apache/tomcat/websocket/TestConnectionLimit.java
+++ b/test/org/apache/tomcat/websocket/TestConnectionLimit.java
@@ -20,10 +20,10 @@ import java.io.IOException;
 import java.net.URI;
 import java.util.concurrent.atomic.AtomicInteger;
 
-import javax.websocket.ClientEndpointConfig.Builder;
-import javax.websocket.ContainerProvider;
-import javax.websocket.DeploymentException;
-import javax.websocket.WebSocketContainer;
+import jakarta.websocket.ClientEndpointConfig.Builder;
+import jakarta.websocket.ContainerProvider;
+import jakarta.websocket.DeploymentException;
+import jakarta.websocket.WebSocketContainer;
 
 import org.junit.Ignore;
 import org.junit.Test;

==================================================
TestUtil.java
index 9139460c74..d2b74e9bc3 100644
--- a/test/org/apache/tomcat/websocket/TestPerMessageDeflate.java
+++ b/test/org/apache/tomcat/websocket/TestPerMessageDeflate.java
@@ -23,8 +23,8 @@ import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
 
-import javax.websocket.Extension;
-import javax.websocket.Extension.Parameter;
+import jakarta.websocket.Extension;
+import jakarta.websocket.Extension.Parameter;
 
 import org.junit.Test;
 

==================================================
TestWebSocketFrameClient.java
index 9c64417722..c76a6f088d 100644
--- a/test/org/apache/tomcat/websocket/TestUtil.java
+++ b/test/org/apache/tomcat/websocket/TestUtil.java
@@ -19,12 +19,12 @@ package org.apache.tomcat.websocket;
 import java.util.ArrayList;
 import java.util.List;
 
-import javax.websocket.EncodeException;
-import javax.websocket.Encoder;
-import javax.websocket.EndpointConfig;
-import javax.websocket.Extension;
-import javax.websocket.Extension.Parameter;
-import javax.websocket.MessageHandler;
+import jakarta.websocket.EncodeException;
+import jakarta.websocket.Encoder;
+import jakarta.websocket.EndpointConfig;
+import jakarta.websocket.Extension;
+import jakarta.websocket.Extension.Parameter;
+import jakarta.websocket.MessageHandler;
 
 import org.junit.Assert;
 import org.junit.Test;

==================================================
TestWebSocketFrameClientSSL.java
index 016bd8def7..4449ac125e 100644
--- a/test/org/apache/tomcat/websocket/TestWebSocketFrameClient.java
+++ b/test/org/apache/tomcat/websocket/TestWebSocketFrameClient.java
@@ -24,11 +24,11 @@ import java.util.Queue;
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.TimeUnit;
 
-import javax.websocket.ClientEndpointConfig;
-import javax.websocket.ClientEndpointConfig.Configurator;
-import javax.websocket.ContainerProvider;
-import javax.websocket.Session;
-import javax.websocket.WebSocketContainer;
+import jakarta.websocket.ClientEndpointConfig;
+import jakarta.websocket.ClientEndpointConfig.Configurator;
+import jakarta.websocket.ContainerProvider;
+import jakarta.websocket.Session;
+import jakarta.websocket.WebSocketContainer;
 
 import org.junit.Assert;
 import org.junit.Test;

==================================================
TestWsPingPongMessages.java
index ab12e0cef9..d27e4dd6a8 100644
--- a/test/org/apache/tomcat/websocket/TestWebSocketFrameClientSSL.java
+++ b/test/org/apache/tomcat/websocket/TestWebSocketFrameClientSSL.java
@@ -21,11 +21,11 @@ import java.util.Queue;
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.TimeUnit;
 
-import javax.websocket.ClientEndpointConfig;
-import javax.websocket.ContainerProvider;
-import javax.websocket.MessageHandler;
-import javax.websocket.Session;
-import javax.websocket.WebSocketContainer;
+import jakarta.websocket.ClientEndpointConfig;
+import jakarta.websocket.ContainerProvider;
+import jakarta.websocket.MessageHandler;
+import jakarta.websocket.Session;
+import jakarta.websocket.WebSocketContainer;
 
 import org.junit.Assert;
 import org.junit.Test;

==================================================
TestWsRemoteEndpoint.java
index 6ed5483e9d..25951da5da 100644
--- a/test/org/apache/tomcat/websocket/TestWsPingPongMessages.java
+++ b/test/org/apache/tomcat/websocket/TestWsPingPongMessages.java
@@ -22,11 +22,11 @@ import java.nio.charset.StandardCharsets;
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.TimeUnit;
 
-import javax.websocket.ClientEndpointConfig;
-import javax.websocket.ContainerProvider;
-import javax.websocket.PongMessage;
-import javax.websocket.Session;
-import javax.websocket.WebSocketContainer;
+import jakarta.websocket.ClientEndpointConfig;
+import jakarta.websocket.ContainerProvider;
+import jakarta.websocket.PongMessage;
+import jakarta.websocket.Session;
+import jakarta.websocket.WebSocketContainer;
 
 import org.junit.Assert;
 import org.junit.Test;

==================================================
TestWsSessionSuspendResume.java
index 8c01d1af7b..d2c9edd1f6 100644
--- a/test/org/apache/tomcat/websocket/TestWsRemoteEndpoint.java
+++ b/test/org/apache/tomcat/websocket/TestWsRemoteEndpoint.java
@@ -26,11 +26,11 @@ import java.util.List;
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.TimeUnit;
 
-import javax.websocket.ClientEndpointConfig.Builder;
-import javax.websocket.ContainerProvider;
-import javax.websocket.Endpoint;
-import javax.websocket.Session;
-import javax.websocket.WebSocketContainer;
+import jakarta.websocket.ClientEndpointConfig.Builder;
+import jakarta.websocket.ContainerProvider;
+import jakarta.websocket.Endpoint;
+import jakarta.websocket.Session;
+import jakarta.websocket.WebSocketContainer;
 
 import org.junit.Assert;
 import org.junit.Test;

==================================================
TestWsSubprotocols.java
index 8af8679820..cd2483ec08 100644
--- a/test/org/apache/tomcat/websocket/TestWsSessionSuspendResume.java
+++ b/test/org/apache/tomcat/websocket/TestWsSessionSuspendResume.java
@@ -23,14 +23,14 @@ import java.util.List;
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.TimeUnit;
 
-import javax.websocket.ClientEndpointConfig;
-import javax.websocket.CloseReason;
-import javax.websocket.ContainerProvider;
-import javax.websocket.Endpoint;
-import javax.websocket.EndpointConfig;
-import javax.websocket.Session;
-import javax.websocket.WebSocketContainer;
-import javax.websocket.server.ServerEndpointConfig;
+import jakarta.websocket.ClientEndpointConfig;
+import jakarta.websocket.CloseReason;
+import jakarta.websocket.ContainerProvider;
+import jakarta.websocket.Endpoint;
+import jakarta.websocket.EndpointConfig;
+import jakarta.websocket.Session;
+import jakarta.websocket.WebSocketContainer;
+import jakarta.websocket.server.ServerEndpointConfig;
 
 import org.junit.Assert;
 import org.junit.Test;

==================================================
TestWsWebSocketContainer.java
index d6b848e4eb..8bc21fedbc 100644
--- a/test/org/apache/tomcat/websocket/TestWsSubprotocols.java
+++ b/test/org/apache/tomcat/websocket/TestWsSubprotocols.java
@@ -20,14 +20,14 @@ import java.net.URI;
 import java.util.Arrays;
 import java.util.List;
 
-import javax.websocket.ClientEndpointConfig;
-import javax.websocket.ContainerProvider;
-import javax.websocket.EndpointConfig;
-import javax.websocket.OnOpen;
-import javax.websocket.Session;
-import javax.websocket.WebSocketContainer;
-import javax.websocket.server.ServerEndpoint;
-import javax.websocket.server.ServerEndpointConfig;
+import jakarta.websocket.ClientEndpointConfig;
+import jakarta.websocket.ContainerProvider;
+import jakarta.websocket.EndpointConfig;
+import jakarta.websocket.OnOpen;
+import jakarta.websocket.Session;
+import jakarta.websocket.WebSocketContainer;
+import jakarta.websocket.server.ServerEndpoint;
+import jakarta.websocket.server.ServerEndpointConfig;
 
 import org.junit.Assert;
 import org.junit.Test;

==================================================
TestWsWebSocketContainerGetOpenSessions.java
index de989747d3..1554cf07a4 100644
--- a/test/org/apache/tomcat/websocket/TestWsWebSocketContainer.java
+++ b/test/org/apache/tomcat/websocket/TestWsWebSocketContainer.java
@@ -29,21 +29,20 @@ import java.util.concurrent.ExecutionException;
 import java.util.concurrent.Future;
 import java.util.concurrent.TimeUnit;
 
-import javax.websocket.ClientEndpointConfig;
-import javax.websocket.ContainerProvider;
-import javax.websocket.DeploymentException;
-import javax.websocket.Endpoint;
-import javax.websocket.EndpointConfig;
-import javax.websocket.Extension;
-import javax.websocket.MessageHandler;
-import javax.websocket.OnMessage;
-import javax.websocket.Session;
-import javax.websocket.WebSocketContainer;
-import javax.websocket.server.ServerContainer;
-import javax.websocket.server.ServerEndpoint;
-import javax.websocket.server.ServerEndpointConfig;
-
 import jakarta.servlet.ServletContextEvent;
+import jakarta.websocket.ClientEndpointConfig;
+import jakarta.websocket.ContainerProvider;
+import jakarta.websocket.DeploymentException;
+import jakarta.websocket.Endpoint;
+import jakarta.websocket.EndpointConfig;
+import jakarta.websocket.Extension;
+import jakarta.websocket.MessageHandler;
+import jakarta.websocket.OnMessage;
+import jakarta.websocket.Session;
+import jakarta.websocket.WebSocketContainer;
+import jakarta.websocket.server.ServerContainer;
+import jakarta.websocket.server.ServerEndpoint;
+import jakarta.websocket.server.ServerEndpointConfig;
 
 import org.junit.Assert;
 import org.junit.Test;
@@ -120,7 +119,7 @@ public class TestWsWebSocketContainer extends WebSocketBaseTest {
     }
 
 
-    @Test(expected=javax.websocket.DeploymentException.class)
+    @Test(expected=jakarta.websocket.DeploymentException.class)
     public void testConnectToServerEndpointInvalidScheme() throws Exception {
         Tomcat tomcat = getTomcatInstance();
         // No file system docBase required
@@ -138,7 +137,7 @@ public class TestWsWebSocketContainer extends WebSocketBaseTest {
     }
 
 
-    @Test(expected=javax.websocket.DeploymentException.class)
+    @Test(expected=jakarta.websocket.DeploymentException.class)
     public void testConnectToServerEndpointNoHost() throws Exception {
         Tomcat tomcat = getTomcatInstance();
         // No file system docBase required

==================================================
TesterAsyncTiming.java
index dcea80b8b9..91d730ae04 100644
--- a/test/org/apache/tomcat/websocket/TestWsWebSocketContainerGetOpenSessions.java
+++ b/test/org/apache/tomcat/websocket/TestWsWebSocketContainerGetOpenSessions.java
@@ -23,21 +23,20 @@ import java.util.Map;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.atomic.AtomicInteger;
 
-import javax.websocket.ClientEndpointConfig;
-import javax.websocket.CloseReason;
-import javax.websocket.ContainerProvider;
-import javax.websocket.DeploymentException;
-import javax.websocket.Endpoint;
-import javax.websocket.EndpointConfig;
-import javax.websocket.MessageHandler;
-import javax.websocket.OnMessage;
-import javax.websocket.Session;
-import javax.websocket.WebSocketContainer;
-import javax.websocket.server.ServerContainer;
-import javax.websocket.server.ServerEndpoint;
-import javax.websocket.server.ServerEndpointConfig;
-
 import jakarta.servlet.ServletContextEvent;
+import jakarta.websocket.ClientEndpointConfig;
+import jakarta.websocket.CloseReason;
+import jakarta.websocket.ContainerProvider;
+import jakarta.websocket.DeploymentException;
+import jakarta.websocket.Endpoint;
+import jakarta.websocket.EndpointConfig;
+import jakarta.websocket.MessageHandler;
+import jakarta.websocket.OnMessage;
+import jakarta.websocket.Session;
+import jakarta.websocket.WebSocketContainer;
+import jakarta.websocket.server.ServerContainer;
+import jakarta.websocket.server.ServerEndpoint;
+import jakarta.websocket.server.ServerEndpointConfig;
 
 import org.junit.Assert;
 import org.junit.Test;

==================================================
TesterBlockWebSocketSCI.java
index e9b7a3a593..61cfbff69e 100644
--- a/test/org/apache/tomcat/websocket/TesterAsyncTiming.java
+++ b/test/org/apache/tomcat/websocket/TesterAsyncTiming.java
@@ -19,12 +19,12 @@ package org.apache.tomcat.websocket;
 import java.nio.ByteBuffer;
 import java.util.concurrent.Semaphore;
 
-import javax.websocket.OnMessage;
-import javax.websocket.RemoteEndpoint.Async;
-import javax.websocket.SendHandler;
-import javax.websocket.SendResult;
-import javax.websocket.Session;
-import javax.websocket.server.ServerEndpoint;
+import jakarta.websocket.OnMessage;
+import jakarta.websocket.RemoteEndpoint.Async;
+import jakarta.websocket.SendHandler;
+import jakarta.websocket.SendResult;
+import jakarta.websocket.Session;
+import jakarta.websocket.server.ServerEndpoint;
 
 import org.apache.tomcat.websocket.server.TesterEndpointConfig;
 

==================================================
TesterEchoServer.java
index 423e01e415..3a691aad5d 100644
--- a/test/org/apache/tomcat/websocket/TesterBlockWebSocketSCI.java
+++ b/test/org/apache/tomcat/websocket/TesterBlockWebSocketSCI.java
@@ -19,9 +19,9 @@ package org.apache.tomcat.websocket;
 import java.util.Collections;
 import java.util.Set;
 
-import javax.websocket.Endpoint;
-import javax.websocket.server.ServerApplicationConfig;
-import javax.websocket.server.ServerEndpointConfig;
+import jakarta.websocket.Endpoint;
+import jakarta.websocket.server.ServerApplicationConfig;
+import jakarta.websocket.server.ServerEndpointConfig;
 
 /**
  * This configuration blocks any endpoints discovered by the SCI from being

==================================================
TesterFirehoseServer.java
index eb20213fd6..cfc0855e20 100644
--- a/test/org/apache/tomcat/websocket/TesterEchoServer.java
+++ b/test/org/apache/tomcat/websocket/TesterEchoServer.java
@@ -19,13 +19,12 @@ package org.apache.tomcat.websocket;
 import java.io.IOException;
 import java.nio.ByteBuffer;
 
-import javax.websocket.DeploymentException;
-import javax.websocket.OnMessage;
-import javax.websocket.Session;
-import javax.websocket.server.ServerContainer;
-import javax.websocket.server.ServerEndpoint;
-
 import jakarta.servlet.ServletContextEvent;
+import jakarta.websocket.DeploymentException;
+import jakarta.websocket.OnMessage;
+import jakarta.websocket.Session;
+import jakarta.websocket.server.ServerContainer;
+import jakarta.websocket.server.ServerEndpoint;
 
 import org.apache.tomcat.websocket.server.Constants;
 import org.apache.tomcat.websocket.server.WsContextListener;

==================================================
TesterMessageCountClient.java
index 8b4b1eff5a..e16b11b0be 100644
--- a/test/org/apache/tomcat/websocket/TesterFirehoseServer.java
+++ b/test/org/apache/tomcat/websocket/TesterFirehoseServer.java
@@ -19,13 +19,13 @@ package org.apache.tomcat.websocket;
 import java.io.IOException;
 import java.util.concurrent.atomic.AtomicInteger;
 
-import javax.websocket.OnClose;
-import javax.websocket.OnError;
-import javax.websocket.OnMessage;
-import javax.websocket.OnOpen;
-import javax.websocket.RemoteEndpoint.Basic;
-import javax.websocket.Session;
-import javax.websocket.server.ServerEndpoint;
+import jakarta.websocket.OnClose;
+import jakarta.websocket.OnError;
+import jakarta.websocket.OnMessage;
+import jakarta.websocket.OnOpen;
+import jakarta.websocket.RemoteEndpoint.Basic;
+import jakarta.websocket.Session;
+import jakarta.websocket.server.ServerEndpoint;
 
 import org.apache.tomcat.websocket.server.TesterEndpointConfig;
 

==================================================
TesterWsClientAutobahn.java
index f340cbb0d7..8faa193702 100644
--- a/test/org/apache/tomcat/websocket/TesterMessageCountClient.java
+++ b/test/org/apache/tomcat/websocket/TesterMessageCountClient.java
@@ -23,15 +23,15 @@ import java.util.concurrent.CopyOnWriteArrayList;
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.LinkedBlockingQueue;
 
-import javax.websocket.ClientEndpoint;
-import javax.websocket.CloseReason;
-import javax.websocket.Endpoint;
-import javax.websocket.EndpointConfig;
-import javax.websocket.MessageHandler;
-import javax.websocket.OnClose;
-import javax.websocket.OnError;
-import javax.websocket.OnOpen;
-import javax.websocket.Session;
+import jakarta.websocket.ClientEndpoint;
+import jakarta.websocket.CloseReason;
+import jakarta.websocket.Endpoint;
+import jakarta.websocket.EndpointConfig;
+import jakarta.websocket.MessageHandler;
+import jakarta.websocket.OnClose;
+import jakarta.websocket.OnError;
+import jakarta.websocket.OnOpen;
+import jakarta.websocket.Session;
 
 public class TesterMessageCountClient {
 

==================================================
TestEncodingDecoding.java
index 1b5ee3972d..4917004204 100644
--- a/test/org/apache/tomcat/websocket/TesterWsClientAutobahn.java
+++ b/test/org/apache/tomcat/websocket/TesterWsClientAutobahn.java
@@ -23,16 +23,16 @@ import java.util.ArrayList;
 import java.util.List;
 import java.util.concurrent.CountDownLatch;
 
-import javax.websocket.ClientEndpoint;
-import javax.websocket.ClientEndpointConfig;
-import javax.websocket.ContainerProvider;
-import javax.websocket.Endpoint;
-import javax.websocket.Extension;
-import javax.websocket.OnClose;
-import javax.websocket.OnError;
-import javax.websocket.OnMessage;
-import javax.websocket.Session;
-import javax.websocket.WebSocketContainer;
+import jakarta.websocket.ClientEndpoint;
+import jakarta.websocket.ClientEndpointConfig;
+import jakarta.websocket.ContainerProvider;
+import jakarta.websocket.Endpoint;
+import jakarta.websocket.Extension;
+import jakarta.websocket.OnClose;
+import jakarta.websocket.OnError;
+import jakarta.websocket.OnMessage;
+import jakarta.websocket.Session;
+import jakarta.websocket.WebSocketContainer;
 
 import org.apache.tomcat.util.ExceptionUtils;
 import org.apache.tomcat.websocket.pojo.PojoEndpointClient;

==================================================
TestPojoEndpointBase.java
index a82a157cdc..ed5e77118d 100644
--- a/test/org/apache/tomcat/websocket/pojo/TestEncodingDecoding.java
+++ b/test/org/apache/tomcat/websocket/pojo/TestEncodingDecoding.java
@@ -27,26 +27,25 @@ import java.util.Queue;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.ConcurrentLinkedQueue;
 
-import javax.websocket.ClientEndpoint;
-import javax.websocket.ContainerProvider;
-import javax.websocket.DecodeException;
-import javax.websocket.Decoder;
-import javax.websocket.DeploymentException;
-import javax.websocket.EncodeException;
-import javax.websocket.Encoder;
-import javax.websocket.Endpoint;
-import javax.websocket.EndpointConfig;
-import javax.websocket.Extension;
-import javax.websocket.MessageHandler;
-import javax.websocket.OnError;
-import javax.websocket.OnMessage;
-import javax.websocket.Session;
-import javax.websocket.WebSocketContainer;
-import javax.websocket.server.ServerContainer;
-import javax.websocket.server.ServerEndpoint;
-import javax.websocket.server.ServerEndpointConfig;
-
 import jakarta.servlet.ServletContextEvent;
+import jakarta.websocket.ClientEndpoint;
+import jakarta.websocket.ContainerProvider;
+import jakarta.websocket.DecodeException;
+import jakarta.websocket.Decoder;
+import jakarta.websocket.DeploymentException;
+import jakarta.websocket.EncodeException;
+import jakarta.websocket.Encoder;
+import jakarta.websocket.Endpoint;
+import jakarta.websocket.EndpointConfig;
+import jakarta.websocket.Extension;
+import jakarta.websocket.MessageHandler;
+import jakarta.websocket.OnError;
+import jakarta.websocket.OnMessage;
+import jakarta.websocket.Session;
+import jakarta.websocket.WebSocketContainer;
+import jakarta.websocket.server.ServerContainer;
+import jakarta.websocket.server.ServerEndpoint;
+import jakarta.websocket.server.ServerEndpointConfig;
 
 import org.junit.Assert;
 import org.junit.Ignore;

==================================================
TestPojoMethodMapping.java
index b98cdcdb3a..2177ac44f5 100644
--- a/test/org/apache/tomcat/websocket/pojo/TestPojoEndpointBase.java
+++ b/test/org/apache/tomcat/websocket/pojo/TestPojoEndpointBase.java
@@ -20,15 +20,15 @@ import java.net.URI;
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.TimeUnit;
 
-import javax.websocket.ClientEndpoint;
-import javax.websocket.ContainerProvider;
-import javax.websocket.EndpointConfig;
-import javax.websocket.OnClose;
-import javax.websocket.OnError;
-import javax.websocket.OnOpen;
-import javax.websocket.Session;
-import javax.websocket.WebSocketContainer;
-import javax.websocket.server.ServerEndpoint;
+import jakarta.websocket.ClientEndpoint;
+import jakarta.websocket.ContainerProvider;
+import jakarta.websocket.EndpointConfig;
+import jakarta.websocket.OnClose;
+import jakarta.websocket.OnError;
+import jakarta.websocket.OnOpen;
+import jakarta.websocket.Session;
+import jakarta.websocket.WebSocketContainer;
+import jakarta.websocket.server.ServerEndpoint;
 
 import org.junit.Assert;
 import org.junit.Test;

==================================================
TesterUtil.java
index e4ebc18272..14b916d28c 100644
--- a/test/org/apache/tomcat/websocket/pojo/TestPojoMethodMapping.java
+++ b/test/org/apache/tomcat/websocket/pojo/TestPojoMethodMapping.java
@@ -20,14 +20,14 @@ import java.net.URI;
 import java.util.ArrayList;
 import java.util.List;
 
-import javax.websocket.ContainerProvider;
-import javax.websocket.OnClose;
-import javax.websocket.OnMessage;
-import javax.websocket.OnOpen;
-import javax.websocket.Session;
-import javax.websocket.WebSocketContainer;
-import javax.websocket.server.PathParam;
-import javax.websocket.server.ServerEndpoint;
+import jakarta.websocket.ContainerProvider;
+import jakarta.websocket.OnClose;
+import jakarta.websocket.OnMessage;
+import jakarta.websocket.OnOpen;
+import jakarta.websocket.Session;
+import jakarta.websocket.WebSocketContainer;
+import jakarta.websocket.server.PathParam;
+import jakarta.websocket.server.ServerEndpoint;
 
 import org.junit.Assert;
 import org.junit.Test;

==================================================
TestAsyncMessages.java
index d3611a0d6e..4c5db6d45e 100644
--- a/test/org/apache/tomcat/websocket/pojo/TesterUtil.java
+++ b/test/org/apache/tomcat/websocket/pojo/TesterUtil.java
@@ -16,8 +16,8 @@
  */
 package org.apache.tomcat.websocket.pojo;
 
-import javax.websocket.ClientEndpoint;
-import javax.websocket.server.ServerEndpointConfig.Configurator;
+import jakarta.websocket.ClientEndpoint;
+import jakarta.websocket.server.ServerEndpointConfig.Configurator;
 
 import org.apache.tomcat.websocket.server.TesterEndpointConfig;
 

==================================================
TestClassLoader.java
index 7937818b35..e9a5893781 100644
--- a/test/org/apache/tomcat/websocket/server/TestAsyncMessages.java
+++ b/test/org/apache/tomcat/websocket/server/TestAsyncMessages.java
@@ -20,11 +20,11 @@ import java.net.URI;
 import java.nio.ByteBuffer;
 import java.util.concurrent.CountDownLatch;
 
-import javax.websocket.ClientEndpointConfig;
-import javax.websocket.ContainerProvider;
-import javax.websocket.MessageHandler;
-import javax.websocket.Session;
-import javax.websocket.WebSocketContainer;
+import jakarta.websocket.ClientEndpointConfig;
+import jakarta.websocket.ContainerProvider;
+import jakarta.websocket.MessageHandler;
+import jakarta.websocket.Session;
+import jakarta.websocket.WebSocketContainer;
 
 import org.junit.Assert;
 import org.junit.Ignore;

==================================================
TestClose.java
index b182ef6bfc..84afed1db2 100644
--- a/test/org/apache/tomcat/websocket/server/TestClassLoader.java
+++ b/test/org/apache/tomcat/websocket/server/TestClassLoader.java
@@ -20,13 +20,13 @@ import java.io.IOException;
 import java.net.URI;
 import java.util.concurrent.atomic.AtomicInteger;
 
-import javax.websocket.ClientEndpoint;
-import javax.websocket.ContainerProvider;
-import javax.websocket.OnMessage;
-import javax.websocket.OnOpen;
-import javax.websocket.Session;
-import javax.websocket.WebSocketContainer;
-import javax.websocket.server.ServerEndpoint;
+import jakarta.websocket.ClientEndpoint;
+import jakarta.websocket.ContainerProvider;
+import jakarta.websocket.OnMessage;
+import jakarta.websocket.OnOpen;
+import jakarta.websocket.Session;
+import jakarta.websocket.WebSocketContainer;
+import jakarta.websocket.server.ServerEndpoint;
 
 import org.junit.Assert;
 import org.junit.Test;

==================================================
TestCloseBug58624.java
index 30c18bb1c3..cc8dc57f9c 100644
--- a/test/org/apache/tomcat/websocket/server/TestClose.java
+++ b/test/org/apache/tomcat/websocket/server/TestClose.java
@@ -22,15 +22,15 @@ import java.util.Set;
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.TimeUnit;
 
-import javax.websocket.CloseReason;
-import javax.websocket.CloseReason.CloseCode;
-import javax.websocket.CloseReason.CloseCodes;
-import javax.websocket.OnClose;
-import javax.websocket.OnError;
-import javax.websocket.OnMessage;
-import javax.websocket.OnOpen;
-import javax.websocket.Session;
-import javax.websocket.server.ServerEndpointConfig;
+import jakarta.websocket.CloseReason;
+import jakarta.websocket.CloseReason.CloseCode;
+import jakarta.websocket.CloseReason.CloseCodes;
+import jakarta.websocket.OnClose;
+import jakarta.websocket.OnError;
+import jakarta.websocket.OnMessage;
+import jakarta.websocket.OnOpen;
+import jakarta.websocket.Session;
+import jakarta.websocket.server.ServerEndpointConfig;
 
 import org.junit.Assert;
 import org.junit.Assume;

==================================================
TestShutdown.java
index b0785c6c03..7feb93bc04 100644
--- a/test/org/apache/tomcat/websocket/server/TestCloseBug58624.java
+++ b/test/org/apache/tomcat/websocket/server/TestCloseBug58624.java
@@ -19,20 +19,19 @@ package org.apache.tomcat.websocket.server;
 import java.net.URI;
 import java.util.concurrent.atomic.AtomicInteger;
 
-import javax.websocket.ClientEndpoint;
-import javax.websocket.CloseReason;
-import javax.websocket.ContainerProvider;
-import javax.websocket.DeploymentException;
-import javax.websocket.OnClose;
-import javax.websocket.OnError;
-import javax.websocket.OnMessage;
-import javax.websocket.OnOpen;
-import javax.websocket.Session;
-import javax.websocket.WebSocketContainer;
-import javax.websocket.server.ServerContainer;
-import javax.websocket.server.ServerEndpointConfig;
-
 import jakarta.servlet.ServletContextEvent;
+import jakarta.websocket.ClientEndpoint;
+import jakarta.websocket.CloseReason;
+import jakarta.websocket.ContainerProvider;
+import jakarta.websocket.DeploymentException;
+import jakarta.websocket.OnClose;
+import jakarta.websocket.OnError;
+import jakarta.websocket.OnMessage;
+import jakarta.websocket.OnOpen;
+import jakarta.websocket.Session;
+import jakarta.websocket.WebSocketContainer;
+import jakarta.websocket.server.ServerContainer;
+import jakarta.websocket.server.ServerEndpointConfig;
 
 import org.junit.Assert;
 import org.junit.Test;

==================================================
TestWsRemoteEndpointImplServer.java
index 6cd7f18d74..6a4a8817bf 100644
--- a/test/org/apache/tomcat/websocket/server/TestShutdown.java
+++ b/test/org/apache/tomcat/websocket/server/TestShutdown.java
@@ -22,14 +22,14 @@ import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicLong;
 
-import javax.websocket.ClientEndpointConfig;
-import javax.websocket.ContainerProvider;
-import javax.websocket.EndpointConfig;
-import javax.websocket.OnMessage;
-import javax.websocket.OnOpen;
-import javax.websocket.Session;
-import javax.websocket.WebSocketContainer;
-import javax.websocket.server.ServerEndpoint;
+import jakarta.websocket.ClientEndpointConfig;
+import jakarta.websocket.ContainerProvider;
+import jakarta.websocket.EndpointConfig;
+import jakarta.websocket.OnMessage;
+import jakarta.websocket.OnOpen;
+import jakarta.websocket.Session;
+import jakarta.websocket.WebSocketContainer;
+import jakarta.websocket.server.ServerEndpoint;
 
 import org.junit.Assert;
 import org.junit.Test;

==================================================
TestWsServerContainer.java
index 77987acd79..cbc0bd3da6 100644
--- a/test/org/apache/tomcat/websocket/server/TestWsRemoteEndpointImplServer.java
+++ b/test/org/apache/tomcat/websocket/server/TestWsRemoteEndpointImplServer.java
@@ -23,18 +23,18 @@ import java.util.List;
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.Executors;
 
-import javax.websocket.CloseReason;
-import javax.websocket.ContainerProvider;
-import javax.websocket.EncodeException;
-import javax.websocket.Encoder;
-import javax.websocket.EndpointConfig;
-import javax.websocket.OnClose;
-import javax.websocket.OnError;
-import javax.websocket.OnMessage;
-import javax.websocket.OnOpen;
-import javax.websocket.Session;
-import javax.websocket.WebSocketContainer;
-import javax.websocket.server.ServerEndpointConfig;
+import jakarta.websocket.CloseReason;
+import jakarta.websocket.ContainerProvider;
+import jakarta.websocket.EncodeException;
+import jakarta.websocket.Encoder;
+import jakarta.websocket.EndpointConfig;
+import jakarta.websocket.OnClose;
+import jakarta.websocket.OnError;
+import jakarta.websocket.OnMessage;
+import jakarta.websocket.OnOpen;
+import jakarta.websocket.Session;
+import jakarta.websocket.WebSocketContainer;
+import jakarta.websocket.server.ServerEndpointConfig;
 
 import org.junit.Ignore;
 import org.junit.Test;

==================================================
TesterEndpointConfig.java
index 1eb69d5dab..28fc72b1fd 100644
--- a/test/org/apache/tomcat/websocket/server/TestWsServerContainer.java
+++ b/test/org/apache/tomcat/websocket/server/TestWsServerContainer.java
@@ -21,12 +21,12 @@ import java.util.Queue;
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.TimeUnit;
 
-import javax.websocket.ContainerProvider;
-import javax.websocket.DeploymentException;
-import javax.websocket.Session;
-import javax.websocket.WebSocketContainer;
-import javax.websocket.server.ServerEndpoint;
-import javax.websocket.server.ServerEndpointConfig;
+import jakarta.websocket.ContainerProvider;
+import jakarta.websocket.DeploymentException;
+import jakarta.websocket.Session;
+import jakarta.websocket.WebSocketContainer;
+import jakarta.websocket.server.ServerEndpoint;
+import jakarta.websocket.server.ServerEndpointConfig;
 
 import org.junit.Assert;
 import org.junit.Test;

==================================================
TesterWsClient.java
index 855c1949b7..934660631a 100644
--- a/test/org/apache/tomcat/websocket/server/TesterEndpointConfig.java
+++ b/test/org/apache/tomcat/websocket/server/TesterEndpointConfig.java
@@ -16,11 +16,10 @@
  */
 package org.apache.tomcat.websocket.server;
 
-import javax.websocket.DeploymentException;
-import javax.websocket.server.ServerContainer;
-import javax.websocket.server.ServerEndpointConfig;
-
 import jakarta.servlet.ServletContextEvent;
+import jakarta.websocket.DeploymentException;
+import jakarta.websocket.server.ServerContainer;
+import jakarta.websocket.server.ServerEndpointConfig;
 
 public abstract class TesterEndpointConfig extends WsContextListener {
 

==================================================
ExamplesConfig.java
index 69b8bafbec..6729d907f3 100644
--- a/webapps/docs/web-socket-howto.xml
+++ b/webapps/docs/web-socket-howto.xml
@@ -94,14 +94,14 @@
 <p>When using the WebSocket client to connect to server endpoints, the timeout
    for IO operations while establishing the connection is controlled by the
    <code>userProperties</code> of the provided
-   <code>javax.websocket.ClientEndpointConfig</code>. The property is
+   <code>jakarta.websocket.ClientEndpointConfig</code>. The property is
    <code>org.apache.tomcat.websocket.IO_TIMEOUT_MS</code> and is the
    timeout as a <code>String</code> in milliseconds. The default is 5000 (5
    seconds).</p>
 
 <p>When using the WebSocket client to connect to secure server endpoints, the
    client SSL configuration is controlled by the <code>userProperties</code>
-   of the provided <code>javax.websocket.ClientEndpointConfig</code>. The
+   of the provided <code>jakarta.websocket.ClientEndpointConfig</code>. The
    following user properties are supported:</p>
    <ul>
      <li><code>org.apache.tomcat.websocket.SSL_CONTEXT</code></li>
@@ -129,7 +129,7 @@
 <p>When using the WebSocket client to connect to server endpoints, the number of
    HTTP redirects that the client will follow is controlled by the
    <code>userProperties</code> of the provided
-   <code>javax.websocket.ClientEndpointConfig</code>. The property is
+   <code>jakarta.websocket.ClientEndpointConfig</code>. The property is
    <ocde>org.apache.tomcat.websocket.MAX_REDIRECTIONS</ocde>. The default value
    is 20. Redirection support can be disabled by configuring a value of zero.</p>
 

==================================================
ChatAnnotation.java
index ba8c60bda3..5222a17111 100644
--- a/webapps/examples/WEB-INF/classes/websocket/ExamplesConfig.java
+++ b/webapps/examples/WEB-INF/classes/websocket/ExamplesConfig.java
@@ -19,9 +19,9 @@ package websocket;
 import java.util.HashSet;
 import java.util.Set;
 
-import javax.websocket.Endpoint;
-import javax.websocket.server.ServerApplicationConfig;
-import javax.websocket.server.ServerEndpointConfig;
+import jakarta.websocket.Endpoint;
+import jakarta.websocket.server.ServerApplicationConfig;
+import jakarta.websocket.server.ServerEndpointConfig;
 
 import websocket.drawboard.DrawboardEndpoint;
 import websocket.echo.EchoEndpoint;

==================================================
Client.java
index d1d55234da..c0a2f2b515 100644
--- a/webapps/examples/WEB-INF/classes/websocket/chat/ChatAnnotation.java
+++ b/webapps/examples/WEB-INF/classes/websocket/chat/ChatAnnotation.java
@@ -21,12 +21,12 @@ import java.util.Set;
 import java.util.concurrent.CopyOnWriteArraySet;
 import java.util.concurrent.atomic.AtomicInteger;
 
-import javax.websocket.OnClose;
-import javax.websocket.OnError;
-import javax.websocket.OnMessage;
-import javax.websocket.OnOpen;
-import javax.websocket.Session;
-import javax.websocket.server.ServerEndpoint;
+import jakarta.websocket.OnClose;
+import jakarta.websocket.OnError;
+import jakarta.websocket.OnMessage;
+import jakarta.websocket.OnOpen;
+import jakarta.websocket.Session;
+import jakarta.websocket.server.ServerEndpoint;
 
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;

==================================================
DrawboardEndpoint.java
index 909950d4e8..549fd74266 100644
--- a/webapps/examples/WEB-INF/classes/websocket/drawboard/Client.java
+++ b/webapps/examples/WEB-INF/classes/websocket/drawboard/Client.java
@@ -19,12 +19,12 @@ package websocket.drawboard;
 import java.io.IOException;
 import java.util.LinkedList;
 
-import javax.websocket.CloseReason;
-import javax.websocket.CloseReason.CloseCodes;
-import javax.websocket.RemoteEndpoint.Async;
-import javax.websocket.SendHandler;
-import javax.websocket.SendResult;
-import javax.websocket.Session;
+import jakarta.websocket.CloseReason;
+import jakarta.websocket.CloseReason.CloseCodes;
+import jakarta.websocket.RemoteEndpoint.Async;
+import jakarta.websocket.SendHandler;
+import jakarta.websocket.SendResult;
+import jakarta.websocket.Session;
 
 import websocket.drawboard.wsmessages.AbstractWebsocketMessage;
 import websocket.drawboard.wsmessages.BinaryWebsocketMessage;

==================================================
EchoAnnotation.java
index cd99f49576..df989667fd 100644
--- a/webapps/examples/WEB-INF/classes/websocket/drawboard/DrawboardEndpoint.java
+++ b/webapps/examples/WEB-INF/classes/websocket/drawboard/DrawboardEndpoint.java
@@ -19,11 +19,11 @@ package websocket.drawboard;
 import java.io.EOFException;
 import java.io.IOException;
 
-import javax.websocket.CloseReason;
-import javax.websocket.Endpoint;
-import javax.websocket.EndpointConfig;
-import javax.websocket.MessageHandler;
-import javax.websocket.Session;
+import jakarta.websocket.CloseReason;
+import jakarta.websocket.Endpoint;
+import jakarta.websocket.EndpointConfig;
+import jakarta.websocket.MessageHandler;
+import jakarta.websocket.Session;
 
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;

==================================================
EchoAsyncAnnotation.java
index 34f0de2c1b..7cb3aa64b8 100644
--- a/webapps/examples/WEB-INF/classes/websocket/echo/EchoAnnotation.java
+++ b/webapps/examples/WEB-INF/classes/websocket/echo/EchoAnnotation.java
@@ -19,10 +19,10 @@ package websocket.echo;
 import java.io.IOException;
 import java.nio.ByteBuffer;
 
-import javax.websocket.OnMessage;
-import javax.websocket.PongMessage;
-import javax.websocket.Session;
-import javax.websocket.server.ServerEndpoint;
+import jakarta.websocket.OnMessage;
+import jakarta.websocket.PongMessage;
+import jakarta.websocket.Session;
+import jakarta.websocket.server.ServerEndpoint;
 
 /**
  * The three annotated echo endpoints can be used to test with Autobahn and

==================================================
EchoEndpoint.java
index 39df783b72..1d92fd48f8 100644
--- a/webapps/examples/WEB-INF/classes/websocket/echo/EchoAsyncAnnotation.java
+++ b/webapps/examples/WEB-INF/classes/websocket/echo/EchoAsyncAnnotation.java
@@ -24,9 +24,9 @@ import java.util.concurrent.Future;
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.TimeoutException;
 
-import javax.websocket.OnMessage;
-import javax.websocket.PongMessage;
-import javax.websocket.Session;
+import jakarta.websocket.OnMessage;
+import jakarta.websocket.PongMessage;
+import jakarta.websocket.Session;
 
 /**
  * The three annotated echo endpoints can be used to test with Autobahn and
@@ -36,7 +36,7 @@ import javax.websocket.Session;
  * Note: This one is disabled by default since it allocates memory, and needs
  * to be enabled back.
  */
-//@javax.websocket.server.ServerEndpoint("/websocket/echoAsyncAnnotation")
+//@jakarta.websocket.server.ServerEndpoint("/websocket/echoAsyncAnnotation")
 public class EchoAsyncAnnotation {
 
     private static final Future<Void> COMPLETED = new CompletedFuture();

==================================================
EchoStreamAnnotation.java
index 3620238298..8652861aa6 100644
--- a/webapps/examples/WEB-INF/classes/websocket/echo/EchoEndpoint.java
+++ b/webapps/examples/WEB-INF/classes/websocket/echo/EchoEndpoint.java
@@ -19,11 +19,11 @@ package websocket.echo;
 import java.io.IOException;
 import java.nio.ByteBuffer;
 
-import javax.websocket.Endpoint;
-import javax.websocket.EndpointConfig;
-import javax.websocket.MessageHandler;
-import javax.websocket.RemoteEndpoint;
-import javax.websocket.Session;
+import jakarta.websocket.Endpoint;
+import jakarta.websocket.EndpointConfig;
+import jakarta.websocket.MessageHandler;
+import jakarta.websocket.RemoteEndpoint;
+import jakarta.websocket.Session;
 
 public class EchoEndpoint extends Endpoint {
 

==================================================
Snake.java
index 7aef82110c..95f4c1a198 100644
--- a/webapps/examples/WEB-INF/classes/websocket/echo/EchoStreamAnnotation.java
+++ b/webapps/examples/WEB-INF/classes/websocket/echo/EchoStreamAnnotation.java
@@ -20,10 +20,10 @@ import java.io.IOException;
 import java.io.OutputStream;
 import java.io.Writer;
 
-import javax.websocket.OnMessage;
-import javax.websocket.PongMessage;
-import javax.websocket.Session;
-import javax.websocket.server.ServerEndpoint;
+import jakarta.websocket.OnMessage;
+import jakarta.websocket.PongMessage;
+import jakarta.websocket.Session;
+import jakarta.websocket.server.ServerEndpoint;
 
 /**
  * The three annotated echo endpoints can be used to test with Autobahn and

==================================================
SnakeAnnotation.java
index 7a112220c5..619a879c80 100644
--- a/webapps/examples/WEB-INF/classes/websocket/snake/Snake.java
+++ b/webapps/examples/WEB-INF/classes/websocket/snake/Snake.java
@@ -21,9 +21,9 @@ import java.util.ArrayDeque;
 import java.util.Collection;
 import java.util.Deque;
 
-import javax.websocket.CloseReason;
-import javax.websocket.CloseReason.CloseCodes;
-import javax.websocket.Session;
+import jakarta.websocket.CloseReason;
+import jakarta.websocket.CloseReason.CloseCodes;
+import jakarta.websocket.Session;
 
 public class Snake {
 

==================================================
