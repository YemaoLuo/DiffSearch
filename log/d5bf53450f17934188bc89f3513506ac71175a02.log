d5bf53450f17934188bc89f3513506ac71175a02
==================================================
more work towards making the JIO connector ready for async
==================================================
Filip Hanik
==================================================
Mon Mar 8 16:38:35 2010 +0000
==================================================
Http11Processor.java
more work towards making the JIO connector ready for async


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@920392 13f79535-47bb-0310-9956-ffa450edef68



==================================================
JIoEndpoint.java
index e74d3f9e09..2d3ef330f0 100644
--- a/java/org/apache/coyote/http11/Http11Processor.java
+++ b/java/org/apache/coyote/http11/Http11Processor.java
@@ -185,12 +185,13 @@ public class Http11Processor extends AbstractHttp11Processor implements ActionHo
             error = true;
         }
 
-        boolean keptAlive = false;
+        boolean keptAlive = socketWrapper.isKeptAlive();
 
         while (started && !error && keepAlive) {
 
             // Parsing the request header
             try {
+                //TODO - calculate timeout based on length in queue (System.currentTimeMills() - wrapper.getLastAccess() is the time in queue)
                 if (keptAlive) {
                     if (keepAliveTimeout > 0) {
                         socket.setSoTimeout(keepAliveTimeout);

==================================================
SocketWrapper.java
index c42c9b2f94..270dd39f72 100644
--- a/java/org/apache/tomcat/util/net/JIoEndpoint.java
+++ b/java/org/apache/tomcat/util/net/JIoEndpoint.java
@@ -187,10 +187,12 @@ public class JIoEndpoint extends AbstractEndpoint {
         public void run() {
         	boolean close = false;
             // Process the request from this socket
-            if (!setSocketOptions(socket.getSocket())) { //this does a handshake and resets socket value
+            if ( (!socket.isKeptAlive()) && (!setSocketOptions(socket.getSocket())) ) { //this does a handshake and resets socket value
             	close = true;
-            } else if (!handler.process(socket)) {
-                close = true;
+            }
+            
+            if ( (!close) ) {
+                close = !handler.process(socket);
             }
             if (close) {
             	// Close socket
@@ -203,7 +205,10 @@ public class JIoEndpoint extends AbstractEndpoint {
                     // Ignore
                 }
             } else {
+                socket.setKeptAlive(true);
+                socket.access();
                 //keepalive connection
+                //TODO - servlet3 check async status, we may just be in a hold pattern
                 getExecutor().execute(new SocketProcessor(socket));
             }
             // Finish up this request

==================================================
