4eb83dbf649a07a59c41109a5f901255b6e7700c
==================================================
Reinstate the TLD validation option
==================================================
Mark Emlyn
==================================================
Fri Nov 22 15:51:57 2013 +0000
==================================================
Context.java
Reinstate the TLD validation option

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1544585 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ApplicationContext.java
index 46a822fe81..9b6bd7a951 100644
--- a/java/org/apache/catalina/Context.java
+++ b/java/org/apache/catalina/Context.java
@@ -599,8 +599,8 @@ public interface Context extends Container {
 
 
     /**
-     * Will the parsing of web.xml, web-fragment.xml and *.tld files for this
-     * Context be performed by a validating parser?
+     * Will the parsing of web.xml and web-fragment.xml files for this Context
+     * be performed by a validating parser?
      *
      * @return true if validation is enabled.
      */
@@ -608,7 +608,7 @@ public interface Context extends Container {
 
 
     /**
-     * Controls whether the parsing of web.xml, web-fragment.xml and *.tld files
+     * Controls whether the parsing of web.xml and web-fragment.xml files
      * for this Context will be performed by a validating parser.
      *
      * @param xmlValidation true to enable xml validation
@@ -616,6 +616,24 @@ public interface Context extends Container {
     public void setXmlValidation(boolean xmlValidation);
 
 
+    /**
+     * Will the parsing of *.tld files for this Context be performed by a
+     * validating parser?
+     *
+     * @return true if validation is enabled.
+     */
+    public boolean getTldValidation();
+
+
+    /**
+     * Controls whether the parsing of *.tld files for this Context will be
+     * performed by a validating parser.
+     *
+     * @param tldValidation true to enable xml validation
+     */
+    public void setTldValidation(boolean tldValidation);
+
+
     /**
      * Will the parsing of *.jspx and *.tagx files for this Context be performed
      * by a validating parser?

==================================================
StandardContext.java
index a314447668..45aea51da2 100644
--- a/java/org/apache/catalina/core/ApplicationContext.java
+++ b/java/org/apache/catalina/core/ApplicationContext.java
@@ -220,15 +220,16 @@ public class ApplicationContext
      */
     @Override
     public Object getAttribute(String name) {
-
         // Special handling for XML validation as the context setting must
         // always override anything that might have been set by an application.
         if (Globals.JASPER_XML_VALIDATION_ATTR.equals(name) &&
-                context.getXmlValidation()) {
+                context.getTldValidation()) {
+            return Boolean.TRUE;
+        } else if (Globals.JASPER_XML_VALIDATION_DOC_ATTR.equals(name) &&
+                context.getXmlValidationJspDoc()) {
             return Boolean.TRUE;
         }
         return (attributes.get(name));
-
     }
 
 
@@ -242,9 +243,12 @@ public class ApplicationContext
         names.addAll(attributes.keySet());
         // Special handling for XML validation as this attribute will always be
         // available if validation has been enabled on the context
-        if (context.getXmlValidation()) {
+        if (context.getTldValidation()) {
             names.add(Globals.JASPER_XML_VALIDATION_ATTR);
         }
+        if (context.getXmlValidationJspDoc()) {
+            names.add(Globals.JASPER_XML_VALIDATION_DOC_ATTR);
+        }
         return Collections.enumeration(names);
     }
 

==================================================
FailedContext.java
index dd1f37a2d3..8064ef2b4c 100644
--- a/java/org/apache/catalina/core/StandardContext.java
+++ b/java/org/apache/catalina/core/StandardContext.java
@@ -688,10 +688,10 @@ public class StandardContext extends ContainerBase
 
 
     /**
-     * Attribute value used to turn on/off XML validation for web.xml,
-     * web-fragment.xml and *.tld files.
+     * Attribute value used to turn on/off XML validation for web.xml and
+     * web-fragment.xml files.
      */
-    private boolean xmlValidation = Globals.STRICT_SERVLET_COMPLIANCE;
+    private boolean webXmlValidation = Globals.STRICT_SERVLET_COMPLIANCE;
 
 
     /**
@@ -704,7 +704,12 @@ public class StandardContext extends ContainerBase
     /**
      * Attribute value used to turn on/off XML namespace validation
      */
-    private boolean xmlNamespaceAware = Globals.STRICT_SERVLET_COMPLIANCE;
+    private boolean webXmlNamespaceAware = Globals.STRICT_SERVLET_COMPLIANCE;
+
+    /**
+     * Attribute value used to turn on/off XML validation
+     */
+    private boolean tldValidation = Globals.STRICT_SERVLET_COMPLIANCE;
 
 
     /**
@@ -6372,38 +6377,50 @@ public class StandardContext extends ContainerBase
 
 
     @Override
-    public void setXmlValidation(boolean xmlValidation){
-        this.xmlValidation = xmlValidation;
+    public boolean getXmlNamespaceAware() {
+        return webXmlNamespaceAware;
     }
 
 
     @Override
-    public boolean getXmlValidation(){
-        return xmlValidation;
+    public void setXmlNamespaceAware(boolean webXmlNamespaceAware) {
+        this.webXmlNamespaceAware = webXmlNamespaceAware;
     }
 
 
     @Override
-    public void setXmlValidationJspDoc(boolean xmlValidationJspDoc){
-        this.xmlValidationJspDoc = xmlValidationJspDoc;
+    public void setXmlValidation(boolean webXmlValidation) {
+        this.webXmlValidation = webXmlValidation;
     }
 
 
     @Override
-    public boolean getXmlValidationJspDoc(){
-        return xmlValidationJspDoc;
+    public boolean getXmlValidation() {
+        return webXmlValidation;
     }
 
 
     @Override
-    public boolean getXmlNamespaceAware(){
-        return xmlNamespaceAware;
+    public void setTldValidation(boolean tldValidation) {
+        this.tldValidation = tldValidation;
     }
 
 
     @Override
-    public void setXmlNamespaceAware(boolean xmlNamespaceAware){
-        this.xmlNamespaceAware = xmlNamespaceAware;
+    public boolean getTldValidation() {
+        return tldValidation;
+    }
+
+
+    @Override
+    public void setXmlValidationJspDoc(boolean webXmlValidationJspDoc) {
+        this.xmlValidationJspDoc = webXmlValidationJspDoc;
+    }
+
+
+    @Override
+    public boolean getXmlValidationJspDoc() {
+        return xmlValidationJspDoc;
     }
 
 

==================================================
TesterContext.java
index fc5aecc27e..2e8c87637b 100644
--- a/java/org/apache/catalina/startup/FailedContext.java
+++ b/java/org/apache/catalina/startup/FailedContext.java
@@ -455,6 +455,11 @@ public class FailedContext extends LifecycleMBeanBase implements Context {
     @Override
     public void setXmlValidation(boolean xmlValidation) { /* NO-OP */ }
 
+    @Override
+    public boolean getTldValidation() { return false; }
+    @Override
+    public void setTldValidation(boolean tldValidation){ /* NO-OP */ }
+
     @Override
     public boolean getXmlValidationJspDoc() { return false; }
     @Override

==================================================
