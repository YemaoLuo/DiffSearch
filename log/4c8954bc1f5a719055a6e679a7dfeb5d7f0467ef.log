4c8954bc1f5a719055a6e679a7dfeb5d7f0467ef
==================================================
Refactoring prep for extracting sendfile code to a separate method
==================================================
Mark Emlyn
==================================================
Mon Sep 5 13:45:14 2011 +0000
==================================================
AbstractHttp11Processor.java
Refactoring prep for extracting sendfile code to a separate method

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1165282 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http11AprProcessor.java
index 0baadc0dc0..50e169995b 100644
--- a/java/org/apache/coyote/http11/AbstractHttp11Processor.java
+++ b/java/org/apache/coyote/http11/AbstractHttp11Processor.java
@@ -78,6 +78,12 @@ public abstract class AbstractHttp11Processor<S> extends AbstractProcessor<S> {
     protected boolean keepAlive = true;
 
 
+    /**
+     * Flag used to indicate that the socket should be kept open (e.g. for keep
+     * alive or send file.
+     */
+    protected boolean openSocket = false;
+
     /**
      * HTTP/1.1 flag.
      */

==================================================
Http11NioProcessor.java
index 22725ec039..d567e91bf8 100644
--- a/java/org/apache/coyote/http11/Http11AprProcessor.java
+++ b/java/org/apache/coyote/http11/Http11AprProcessor.java
@@ -181,6 +181,7 @@ public class Http11AprProcessor extends AbstractHttp11Processor<Long> {
         error = false;
         keepAlive = true;
         comet = false;
+        openSocket = false;
 
         int soTimeout = endpoint.getSoTimeout();
 
@@ -189,7 +190,6 @@ public class Http11AprProcessor extends AbstractHttp11Processor<Long> {
         }
 
         boolean keptAlive = false;
-        boolean openSocket = false;
         boolean sendfileInProgress = false;
 
         long socketRef = socketWrapper.getSocket().longValue();

==================================================
Http11Processor.java
index ae746cb6c0..1c004f4826 100644
--- a/java/org/apache/coyote/http11/Http11NioProcessor.java
+++ b/java/org/apache/coyote/http11/Http11NioProcessor.java
@@ -210,6 +210,7 @@ public class Http11NioProcessor extends AbstractHttp11Processor<NioChannel> {
         error = false;
         keepAlive = true;
         comet = false;
+        openSocket = false;
         
         int soTimeout = endpoint.getSoTimeout();
 
@@ -218,7 +219,6 @@ public class Http11NioProcessor extends AbstractHttp11Processor<NioChannel> {
         }
 
         boolean keptAlive = false;
-        boolean openSocket = false;
         boolean readComplete = true;
         
         while (!error && keepAlive && !comet && !isAsync() && !endpoint.isPaused()) {

==================================================
