356a6977343c3c15e7bc516105070828c6b91b41
==================================================
Enable client of JarScanner to determine if JAR is part of a web
==================================================
Mark Emlyn
==================================================
Fri Jun 14 07:39:32 2013 +0000
==================================================
ContextConfig.java
Enable client of JarScanner to determine if JAR is part of a web
application or provided by the container.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1492975 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TldConfig.java
index 562b3de814..c5526bb517 100644
--- a/java/org/apache/catalina/startup/ContextConfig.java
+++ b/java/org/apache/catalina/startup/ContextConfig.java
@@ -2743,7 +2743,8 @@ public class ContextConfig implements LifecycleListener {
         private final Map<String,WebXml> fragments = new HashMap<>();
 
         @Override
-        public void scan(JarURLConnection jarConn) throws IOException {
+        public void scan(JarURLConnection jarConn, boolean isWebapp)
+                throws IOException {
 
             URL url = jarConn.getURL();
             URL resourceURL = jarConn.getJarFileURL();
@@ -2790,7 +2791,7 @@ public class ContextConfig implements LifecycleListener {
         }
 
         @Override
-        public void scan(File file) throws IOException {
+        public void scan(File file, boolean isWebapp) throws IOException {
 
             InputStream stream = null;
             WebXml fragment = new WebXml();

==================================================
TldLocationsCache.java
index 1532dc1fbe..84351b7332 100644
--- a/java/org/apache/catalina/startup/TldConfig.java
+++ b/java/org/apache/catalina/startup/TldConfig.java
@@ -287,12 +287,13 @@ public final class TldConfig  implements LifecycleListener {
     private class TldJarScannerCallback implements JarScannerCallback {
 
         @Override
-        public void scan(JarURLConnection urlConn) throws IOException {
+        public void scan(JarURLConnection urlConn, boolean isWebapp)
+                throws IOException {
             tldScanJar(urlConn);
         }
 
         @Override
-        public void scan(File file) {
+        public void scan(File file, boolean isWebapp) {
             File metaInf = new File(file, "META-INF");
             if (metaInf.isDirectory()) {
                 tldScanDir(metaInf);

==================================================
JarScannerCallback.java
index 2d08ea9174..4c9d76411b 100644
--- a/java/org/apache/jasper/compiler/TldLocationsCache.java
+++ b/java/org/apache/jasper/compiler/TldLocationsCache.java
@@ -255,12 +255,13 @@ public class TldLocationsCache {
     private class TldJarScannerCallback implements JarScannerCallback {
 
         @Override
-        public void scan(JarURLConnection urlConn) throws IOException {
+        public void scan(JarURLConnection urlConn, boolean isWebapp)
+                throws IOException {
             tldScanJar(urlConn);
         }
 
         @Override
-        public void scan(File file) throws IOException {
+        public void scan(File file, boolean isWebapp) throws IOException {
             File metaInf = new File(file, "META-INF");
             if (metaInf.isDirectory()) {
                 tldScanDir(metaInf);

==================================================
StandardJarScanner.java
index fd32034f4c..315915a056 100644
--- a/java/org/apache/tomcat/JarScannerCallback.java
+++ b/java/org/apache/tomcat/JarScannerCallback.java
@@ -31,17 +31,24 @@ public interface JarScannerCallback {
      * further processing via the provided URL connection.
      *
      * @param urlConn   The connection to the identified JAR
+     * @param isWebapp  Indicates if the JAR was found within a web application.
+     *                      If <code>false</code> the JAR should be treated as
+     *                      being provided by the container
      */
-    public void scan(JarURLConnection urlConn) throws IOException;
+    public void scan(JarURLConnection urlConn, boolean isWebapp)
+            throws IOException;
 
     /**
      * A JAR was found (probably in an unpacked WAR or possibly elsewhere on the
      * class path) and may be accessed for further processing via the provided
      * file.
      *
-     * @param file  The file for the identified JAR.
+     * @param file      The file for the identified JAR.
+     * @param isWebapp  Indicates if the JAR was found within a web application.
+     *                      If <code>false</code> the JAR should be treated as
+     *                      being provided by the container
      */
-    public void scan(File file) throws IOException;
+    public void scan(File file, boolean isWebapp) throws IOException;
 
     /**
      * A directory structure was found within the web application at

==================================================
