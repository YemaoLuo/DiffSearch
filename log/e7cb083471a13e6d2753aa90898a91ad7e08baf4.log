e7cb083471a13e6d2753aa90898a91ad7e08baf4
==================================================
Fix Java 8 Javadoc errors in org.apache.coyote
==================================================
Mark Emlyn
==================================================
Mon Oct 13 14:32:10 2014 +0000
==================================================
Request.java
Fix Java 8 Javadoc errors in org.apache.coyote

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1631414 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Response.java
index 5a5ca94dee..0b8de0a034 100644
--- a/java/org/apache/coyote/Request.java
+++ b/java/org/apache/coyote/Request.java
@@ -451,7 +451,7 @@ public final class Request {
      *
      * The buffer is owned by the protocol implementation - it will be reused on the next read.
      * The Adapter must either process the data in place or copy it to a separate buffer if it needs
-     * to hold it. In most cases this is done during byte->char conversions or via InputStream. Unlike
+     * to hold it. In most cases this is done during byte-&gt;char conversions or via InputStream. Unlike
      * InputStream, this interface allows the app to process data in place, without copy.
      *
      */

==================================================
AbstractInputBuffer.java
index b991f1aecf..433873b47d 100644
--- a/java/org/apache/coyote/Response.java
+++ b/java/org/apache/coyote/Response.java
@@ -37,7 +37,7 @@ import org.apache.tomcat.util.res.StringManager;
  * @author Jason Hunter [jch@eng.sun.com]
  * @author James Todd [gonzo@eng.sun.com]
  * @author Harish Prabandham
- * @author Hans Bergsten <hans@gefionsoftware.com>
+ * @author Hans Bergsten [hans@gefionsoftware.com]
  * @author Remy Maucherat
  */
 public final class Response {
@@ -280,7 +280,7 @@ public final class Response {
 
     // -------------------- Headers --------------------
     /**
-     * Warning: This method always returns <code>false<code> for Content-Type
+     * Warning: This method always returns <code>false</code> for Content-Type
      * and Content-Length.
      */
     public boolean containsHeader(String name) {

==================================================
InternalInputBuffer.java
index d3190f2d13..4a93e301d6 100644
--- a/java/org/apache/coyote/http11/AbstractInputBuffer.java
+++ b/java/org/apache/coyote/http11/AbstractInputBuffer.java
@@ -361,7 +361,7 @@ public abstract class AbstractInputBuffer<S> implements InputBuffer{
 
     /**
      * Has all of the request body been read? There are subtle differences
-     * between this and available() > 0 primarily because of having to handle
+     * between this and available() &gt; 0 primarily because of having to handle
      * faking non-blocking reads with the blocking IO connector.
      */
     public boolean isFinished() {

==================================================
SpdyAprNpnHandler.java
index c69fdb7724..cca628f4f8 100644
--- a/java/org/apache/coyote/http11/InternalInputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalInputBuffer.java
@@ -73,7 +73,7 @@ public class InternalInputBuffer extends AbstractInputBuffer<Socket> {
     /**
      * Data is always available for blocking IO (if you wait long enough) so
      * return a value of 1. Note that the actual value is never used it is only
-     * tested for == 0 or > 0.
+     * tested for == 0 or &gt; 0.
      */
     @Override
     public int available() {

==================================================
SpdyProxyProtocol.java
index f96ae291d4..8507617045 100644
--- a/java/org/apache/coyote/spdy/SpdyAprNpnHandler.java
+++ b/java/org/apache/coyote/spdy/SpdyAprNpnHandler.java
@@ -38,7 +38,7 @@ import org.apache.tomcat.util.net.SocketWrapper;
  * Plugin for APR connector providing SPDY support via NPN negotiation.
  *
  * Example:
- * <Connector port="9443"
+ * &lt;Connector port="9443"
  *            npnHandler="org.apache.coyote.spdy.SpdyAprNpnHandler"
  *            protocol="HTTP/1.1"
  *            SSLEnabled="true"
@@ -47,7 +47,7 @@ import org.apache.tomcat.util.net.SocketWrapper;
  *            secure="true"
  *            sslProtocol="TLS"
  *            SSLCertificateFile="conf/localhost-cert.pem"
- *            SSLCertificateKeyFile="conf/localhost-key.pem"/>
+ *            SSLCertificateKeyFile="conf/localhost-key.pem"/&gt;
  *
  * This requires APR library ( libtcnative-1 ) to be present and compiled
  * with a recent openssl or a openssl patched with npn support.

==================================================
