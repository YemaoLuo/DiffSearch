ac505b0160233a458eea798a6fb3e8c79da9e34a
==================================================
Javadoc fixes.
==================================================
Remy Maucherat
==================================================
Wed Jan 13 17:35:13 2016 +0000
==================================================
ConnectorSF.java
Javadoc fixes.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1724467 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ConnectorStoreAppender.java
index 4a7b38eda2..a0f8bf6f05 100644
--- a/java/org/apache/catalina/storeconfig/ConnectorSF.java
+++ b/java/org/apache/catalina/storeconfig/ConnectorSF.java
@@ -29,14 +29,6 @@ import org.apache.tomcat.util.net.SSLHostConfig;
  */
 public class ConnectorSF extends StoreFactoryBase {
 
-    /**
-     * Store Connector description
-     *
-     * @param aWriter
-     * @param indent
-     * @param aConnector
-     * @throws Exception
-     */
     @Override
     public void storeChildren(PrintWriter aWriter, int indent, Object aConnector,
             StoreDescription parentDesc) throws Exception {

==================================================
IStoreConfig.java
index 0a4dec85e0..ef4dc7c6e1 100644
--- a/java/org/apache/catalina/storeconfig/ConnectorStoreAppender.java
+++ b/java/org/apache/catalina/storeconfig/ConnectorStoreAppender.java
@@ -57,21 +57,6 @@ public class ConnectorStoreAppender extends StoreAppender {
         replacements.put("protocols", "sslProtocols");
     }
 
-    /**
-     * Store the relevant attributes of the specified JavaBean.
-     *
-     * @param writer
-     *            PrintWriter to which we are storing
-     * @param include
-     *            Should we include a <code>className</code> attribute?
-     * @param bean
-     *            Bean whose properties are to be rendered as attributes,
-     * @param desc
-     *            RegistryDescrpitor from this bean
-     *
-     * @exception Exception
-     *                if an exception occurs while storing
-     */
     @Override
     public void printAttributes(PrintWriter writer, int indent,
             boolean include, Object bean, StoreDescription desc)
@@ -118,11 +103,11 @@ public class ConnectorStoreAppender extends StoreAppender {
     }
 
     /**
-     * Get all properties from Connector and current ProtocolHandler
+     * Get all properties from Connector and current ProtocolHandler.
      *
-     * @param bean
-     * @return List of Connector Properties
-     * @throws IntrospectionException
+     * @param bean The connector
+     * @return List of Connector property names
+     * @throws IntrospectionException Error intropecting connector
      */
     protected List<String> getPropertyKeys(Connector bean)
             throws IntrospectionException {
@@ -177,13 +162,13 @@ public class ConnectorStoreAppender extends StoreAppender {
     }
 
     /**
-     * print Attributes
+     * Print Attributes for the connector
      *
-     * @param aWriter
-     * @param indent
-     * @param bean
-     * @param aDesc
-     * @throws Exception
+     * @param aWriter Current writer
+     * @param indent Indentation level
+     * @param bean The connector bean
+     * @param aDesc The connector description
+     * @throws Exception Store error occurred
      */
     protected void storeConnectorAttribtues(PrintWriter aWriter, int indent,
             Object bean, StoreDescription aDesc) throws Exception {
@@ -192,8 +177,8 @@ public class ConnectorStoreAppender extends StoreAppender {
         }
     }
 
-    /*
-     * Print the open tag for connector attributes (override)
+    /**
+     * Print the open tag for connector attributes (override).
      *
      * @see org.apache.catalina.storeconfig.StoreAppender#printOpenTag(java.io.PrintWriter,
      *      int, java.lang.Object,
@@ -209,7 +194,7 @@ public class ConnectorStoreAppender extends StoreAppender {
     }
 
     /**
-     * print a tag for connector attributes (override)
+     * Print a tag for connector attributes (override).
      *
      * @see org.apache.catalina.storeconfig.StoreAppender#printTag(java.io.PrintWriter,
      *      int, java.lang.Object,
@@ -225,11 +210,8 @@ public class ConnectorStoreAppender extends StoreAppender {
     }
 
     /**
-     * print a value but replace attribute name
+     * Print a value but replace certain attribute names.
      *
-     * @param writer
-     * @param name
-     * @param value
      * @see org.apache.catalina.storeconfig.StoreAppender#printValue(java.io.PrintWriter,
      *      int, java.lang.String, java.lang.Object)
      */
@@ -243,13 +225,13 @@ public class ConnectorStoreAppender extends StoreAppender {
         super.printValue(writer, indent, repl, value);
     }
 
-    /*
+    /**
      * Print Connector Values. <ul><li> Spezial handling to default jkHome.
      * </li><li> Don't save catalina.base path at server.xml</li><li></ul>
      *
-     * @see org.apache.catalina.config.StoreAppender#isPrintValue(java.lang.Object,
+     * @see org.apache.catalina.storeconfig.StoreAppender#isPrintValue(java.lang.Object,
      *      java.lang.Object, java.lang.String,
-     *      org.apache.catalina.config.StoreDescription)
+     *      org.apache.catalina.storeconfig.StoreDescription)
      */
     @Override
     public boolean isPrintValue(Object bean, Object bean2, String attrName,

==================================================
LoaderSF.java
index 45e8578c33..c15cecdccf 100644
--- a/java/org/apache/catalina/storeconfig/IStoreConfig.java
+++ b/java/org/apache/catalina/storeconfig/IStoreConfig.java
@@ -65,6 +65,7 @@ public interface IStoreConfig {
      *
      * @param aServer
      *            Object to be stored
+     * @return <code>true</code> if the store operation was successful
      */
     boolean store(Server aServer);
 
@@ -77,6 +78,7 @@ public interface IStoreConfig {
      *            Number of spaces to indent this element
      * @param aServer
      *            Object to be stored
+     * @throws Exception Store error occurred
      */
     void store(PrintWriter aWriter, int indent, Server aServer) throws Exception;
 
@@ -89,6 +91,7 @@ public interface IStoreConfig {
      *            Number of spaces to indent this element
      * @param aService
      *            Object to be stored
+     * @throws Exception Store error occurred
      */
     void store(PrintWriter aWriter, int indent, Service aService) throws Exception;
 
@@ -101,6 +104,7 @@ public interface IStoreConfig {
      *            Number of spaces to indent this element
      * @param aHost
      *            Object to be stored
+     * @throws Exception Store error occurred
      */
     void store(PrintWriter aWriter, int indent, Host aHost) throws Exception;
 
@@ -109,6 +113,7 @@ public interface IStoreConfig {
      *
      * @param aContext
      *            Object to be stored
+     * @return <code>true</code> if the store operation was successful
      */
     boolean store(Context aContext);
 
@@ -121,6 +126,7 @@ public interface IStoreConfig {
      *            Number of spaces to indent this element
      * @param aContext
      *            Object to be stored
+     * @throws Exception Store error occurred
      */
     void store(PrintWriter aWriter, int indent, Context aContext) throws Exception;
 }
\ No newline at end of file

==================================================
ManagerSF.java
index 873517af8f..1d89e9fb7d 100644
--- a/java/org/apache/catalina/storeconfig/LoaderSF.java
+++ b/java/org/apache/catalina/storeconfig/LoaderSF.java
@@ -67,6 +67,7 @@ public class LoaderSF extends StoreFactoryBase {
      *
      * @param loader
      *            Loader to be tested
+     * @return <code>true</code> if this is an instance of the default loader
      */
     protected boolean isDefaultLoader(Loader loader) {
 

==================================================
SSLHostConfigSF.java
index ae3be39ec8..e4e0a79b83 100644
--- a/java/org/apache/catalina/storeconfig/ManagerSF.java
+++ b/java/org/apache/catalina/storeconfig/ManagerSF.java
@@ -67,6 +67,7 @@ public class ManagerSF extends StoreFactoryBase {
      *
      * @param smanager
      *            Manager to be tested
+     * @return <code>true</code> if this is an instance of the default manager
      */
     protected boolean isDefaultManager(StandardManager smanager) {
 

==================================================
StandardContextSF.java
index 6b93ec5a0a..61ead840b8 100644
--- a/java/org/apache/catalina/storeconfig/SSLHostConfigSF.java
+++ b/java/org/apache/catalina/storeconfig/SSLHostConfigSF.java
@@ -28,12 +28,8 @@ import org.apache.tomcat.util.net.SSLHostConfigCertificate;
 public class SSLHostConfigSF extends StoreFactoryBase {
 
     /**
-     * Store SSLHostConfig description
-     *
-     * @param aWriter
-     * @param indent
-     * @param aSSLHostConfig
-     * @throws Exception
+     * Store nested SSLHostConfigCertificate elements.
+     * {@inheritDoc}
      */
     @Override
     public void storeChildren(PrintWriter aWriter, int indent, Object aSSLHostConfig,

==================================================
StandardServerSF.java
index d717ffce9f..dda2c56a81 100644
--- a/java/org/apache/catalina/storeconfig/StandardContextSF.java
+++ b/java/org/apache/catalina/storeconfig/StandardContextSF.java
@@ -58,11 +58,11 @@ public class StandardContextSF extends StoreFactoryBase {
 
     private static Log log = LogFactory.getLog(StandardContextSF.class);
 
-    /*
+    /**
      * Store a Context as Separate file as configFile value from context exists.
      * filename can be relative to catalina.base.
      *
-     * @see org.apache.catalina.config.IStoreFactory#store(java.io.PrintWriter,
+     * @see org.apache.catalina.storeconfig.IStoreFactory#store(java.io.PrintWriter,
      *      int, java.lang.Object)
      */
     @Override
@@ -110,10 +110,10 @@ public class StandardContextSF extends StoreFactoryBase {
      * Store a Context without backup add separate file or when configFile =
      * null a aWriter.
      *
-     * @param aWriter
-     * @param indent
-     * @param aContext
-     * @throws Exception
+     * @param aWriter Current output writer
+     * @param indent Indentation level
+     * @param aContext The context which will be stored
+     * @throws Exception Configuration storing error
      */
     protected void storeContextSeparate(PrintWriter aWriter, int indent,
             StandardContext aContext) throws Exception {
@@ -146,10 +146,10 @@ public class StandardContextSF extends StoreFactoryBase {
     }
 
     /**
-     * Store the Context with a Backup
+     * Store the Context with a Backup.
      *
-     * @param aContext
-     * @throws Exception
+     * @param aContext The context which will be stored
+     * @throws Exception Configuration storing error
      */
     protected void storeWithBackup(StandardContext aContext) throws Exception {
         StoreFileMover mover = getConfigFileWriter(aContext);
@@ -188,9 +188,9 @@ public class StandardContextSF extends StoreFactoryBase {
     /**
      * Get explicit writer for context (context.getConfigFile()).
      *
-     * @param context
+     * @param context The context which will be stored
      * @return The file mover
-     * @throws IOException
+     * @throws Exception Error getting a writer for the configuration file
      */
     protected StoreFileMover getConfigFileWriter(Context context)
             throws Exception {
@@ -210,17 +210,13 @@ public class StandardContextSF extends StoreFactoryBase {
     }
 
     /**
-     * Store the specified Host properties.
-     *
-     * @param aWriter
-     *            PrintWriter to which we are storing
-     * @param indent
-     *            Number of spaces to indent this element
-     * @param aContext
-     *            Context whose properties are being stored
+     * Store the specified context element children.
      *
-     * @exception Exception
-     *                if an exception occurs while storing
+     * @param aWriter Current output writer
+     * @param indent Indentation level
+     * @param aContext Context to store
+     * @param parentDesc The element description
+     * @throws Exception Configuration storing error
      */
     @Override
     public void storeChildren(PrintWriter aWriter, int indent, Object aContext,
@@ -304,6 +300,8 @@ public class StandardContextSF extends StoreFactoryBase {
     /**
      * Return a File object representing the "configuration root" directory for
      * our associated Host.
+     * @param context The context instance
+     * @return a file to the configuration base path
      */
     protected File configBase(Context context) {
 
@@ -327,16 +325,16 @@ public class StandardContextSF extends StoreFactoryBase {
     }
 
     /**
-     * filter out the default watched resources
+     * Filter out the default watched resources, to remove standard ones.
      *
-     * @param context
-     * @param wresources
-     * @return The watched resources
-     * @throws IOException
-     * TODO relative watchedresource
+     * @param context The context instance
+     * @param wresources The raw watched resources list
+     * @return The filtered watched resources
+     * @throws Exception Configuration storing error
+     * TODO relative watched resources
      * TODO absolute handling configFile
      * TODO Filename case handling for Windows?
-     * TODO digester variable subsitution $catalina.base, $catalina.home
+     * TODO digester variable substitution $catalina.base, $catalina.home
      */
     protected String[] filterWatchedResources(StandardContext context,
             String[] wresources) throws Exception {

==================================================
StandardServiceSF.java
index 2e49faaed6..1f2665c9c6 100644
--- a/java/org/apache/catalina/storeconfig/StandardServerSF.java
+++ b/java/org/apache/catalina/storeconfig/StandardServerSF.java
@@ -54,13 +54,13 @@ public class StandardServerSF extends StoreFactoryBase {
     }
 
     /**
-     * Store Children from this StandardServer description
+     * Store the specified server element children.
      *
-     * @param aWriter
-     * @param indent
-     * @param aObject
-     * @param parentDesc
-     * @throws Exception
+     * @param aWriter Current output writer
+     * @param indent Indentation level
+     * @param aObject Server to store
+     * @param parentDesc The element description
+     * @throws Exception Configuration storing error
      */
     @Override
     public void storeChildren(PrintWriter aWriter, int indent, Object aObject,

==================================================
StoreAppender.java
index f1885db9e6..67b6e44117 100644
--- a/java/org/apache/catalina/storeconfig/StandardServiceSF.java
+++ b/java/org/apache/catalina/storeconfig/StandardServiceSF.java
@@ -32,12 +32,13 @@ import org.apache.catalina.core.StandardService;
 public class StandardServiceSF extends StoreFactoryBase {
 
     /**
-     * Store Children from this StandardService description
+     * Store the specified service element children.
      *
-     * @param aWriter
-     * @param indent
-     * @param aService
-     * @throws Exception
+     * @param aWriter Current output writer
+     * @param indent Indentation level
+     * @param aService Service to store
+     * @param parentDesc The element description
+     * @throws Exception Configuration storing error
      */
     @Override
     public void storeChildren(PrintWriter aWriter, int indent, Object aService,

==================================================
StoreConfig.java
index 550d32b82c..4ab8dd4a34 100644
--- a/java/org/apache/catalina/storeconfig/StoreAppender.java
+++ b/java/org/apache/catalina/storeconfig/StoreAppender.java
@@ -42,11 +42,11 @@ public class StoreAppender {
             Short.TYPE, InetAddress.class };
 
     /**
-     * print the closing tag
+     * Print the closing tag.
      *
-     * @param aWriter
-     * @param aDesc
-     * @throws Exception
+     * @param aWriter The output writer
+     * @param aDesc Store description of the current element
+     * @throws Exception A store error occurred
      */
     public void printCloseTag(PrintWriter aWriter, StoreDescription aDesc)
             throws Exception {
@@ -56,13 +56,13 @@ public class StoreAppender {
     }
 
     /**
-     * print only the open tag with all attributes
+     * Print only the open tag with all attributes.
      *
-     * @param aWriter
-     * @param indent
-     * @param bean
-     * @param aDesc
-     * @throws Exception
+     * @param aWriter The output writer
+     * @param indent Indentation level
+     * @param bean The current bean that is stored
+     * @param aDesc Store description of the current element
+     * @throws Exception A store error occurred
      */
     public void printOpenTag(PrintWriter aWriter, int indent, Object bean,
             StoreDescription aDesc) throws Exception {
@@ -76,11 +76,11 @@ public class StoreAppender {
     /**
      * Print tag with all attributes
      *
-     * @param aWriter
-     * @param indent
-     * @param bean
-     * @param aDesc
-     * @throws Exception
+     * @param aWriter The output writer
+     * @param indent Indentation level
+     * @param bean The current bean that is stored
+     * @param aDesc Store description of the current element
+     * @throws Exception A store error occurred
      */
     public void printTag(PrintWriter aWriter, int indent, Object bean,
             StoreDescription aDesc) throws Exception {
@@ -92,12 +92,12 @@ public class StoreAppender {
     }
 
     /**
-     * print the value from tag as content
+     * Print the value from tag as content.
      *
-     * @param aWriter
-     * @param tag
-     * @param content
-     * @throws Exception
+     * @param aWriter The output writer
+     * @param tag The element name
+     * @param content Element content
+     * @throws Exception A store error occurred
      */
     public void printTagContent(PrintWriter aWriter, String tag, String content)
             throws Exception {
@@ -111,12 +111,12 @@ public class StoreAppender {
     }
 
     /**
-     * print an array of values
+     * Print an array of values.
      *
-     * @param aWriter
-     * @param tag
-     * @param indent
-     * @param elements
+     * @param aWriter The output writer
+     * @param tag The element name
+     * @param indent Indentation level
+     * @param elements Array of element values
      */
     public void printTagValueArray(PrintWriter aWriter, String tag, int indent,
             String[] elements) {
@@ -139,12 +139,13 @@ public class StoreAppender {
     }
 
     /**
-     * print a array of elements
+     * Print an array of elements.
      *
-     * @param aWriter
-     * @param tag
-     * @param indent
-     * @param elements
+     * @param aWriter The output writer
+     * @param tag The element name
+     * @param indent Indentation level
+     * @param elements Array of elements
+     * @throws Exception Store error occurred
      */
     public void printTagArray(PrintWriter aWriter, String tag, int indent,
             String[] elements) throws Exception {
@@ -157,11 +158,10 @@ public class StoreAppender {
     }
 
     /**
-     * Print some spaces
+     * Print some spaces.
      *
-     * @param aWriter
-     * @param indent
-     *            number of spaces
+     * @param aWriter The output writer
+     * @param indent The number of spaces
      */
     public void printIndent(PrintWriter aWriter, int indent) {
         for (int i = 0; i < indent; i++) {
@@ -174,10 +174,11 @@ public class StoreAppender {
      * <code>className</code> attribute defining the fully qualified Java
      * class name of the bean.
      *
-     * @param writer
-     *            PrintWriter to which we are storing
+     * @param writer PrintWriter to which we are storing
+     * @param indent Indentation level
      * @param bean
      *            Bean whose properties are to be rendered as attributes,
+     * @param desc Store description of the current element
      *
      * @exception Exception
      *                if an exception occurs while storing
@@ -192,8 +193,8 @@ public class StoreAppender {
     /**
      * Store the relevant attributes of the specified JavaBean.
      *
-     * @param writer
-     *            PrintWriter to which we are storing
+     * @param writer PrintWriter to which we are storing
+     * @param indent Indentation level
      * @param include
      *            Should we include a <code>className</code> attribute?
      * @param bean
@@ -268,13 +269,15 @@ public class StoreAppender {
     }
 
     /**
-     * @param writer
-     * @param indent
-     * @param bean
-     * @param desc
-     * @param attributeName
-     * @param bean2
-     * @param value
+     * Store the specified of the specified JavaBean.
+     *
+     * @param writer PrintWriter to which we are storing
+     * @param indent Indentation level
+     * @param bean The current bean
+     * @param desc RegistryDescrpitor from this bean
+     * @param attributeName The attribute name to store
+     * @param bean2 A default instance of the bean for comparison
+     * @param value The attribute value
      */
     protected void printAttribute(PrintWriter writer, int indent, Object bean, StoreDescription desc, String attributeName, Object bean2, Object value) {
         if (isPrintValue(bean, bean2, attributeName, desc))
@@ -282,7 +285,7 @@ public class StoreAppender {
     }
 
     /**
-     * print this Attribute value or not
+     * Determine if the attribute value needs to be stored.
      *
      * @param bean
      *            orginal bean
@@ -292,7 +295,7 @@ public class StoreAppender {
      *            attribute name
      * @param desc
      *            StoreDescription from bean
-     * @return True if it's a printing value
+     * @return <code>true</code> if the value should be stored
      */
     public boolean isPrintValue(Object bean, Object bean2, String attrName,
             StoreDescription desc) {
@@ -308,12 +311,12 @@ public class StoreAppender {
     }
 
     /**
-     * generate default Instance
+     * Generate default Instance for the specified bean.
      *
-     * @param bean
+     * @param bean The bean
      * @return an object from same class as bean parameter
-     * @throws InstantiationException
-     * @throws IllegalAccessException
+     * @throws InstantiationException Error creating a new instance
+     * @throws IllegalAccessException Another error occurred
      */
     public Object defaultInstance(Object bean) throws InstantiationException,
             IllegalAccessException {
@@ -321,11 +324,12 @@ public class StoreAppender {
     }
 
     /**
-     * print an attribute value
+     * Print an attribute value.
      *
-     * @param writer
-     * @param name
-     * @param value
+     * @param writer PrintWriter to which we are storing
+     * @param indent Indentation level
+     * @param name Attribute name
+     * @param value Attribute value
      */
     public void printValue(PrintWriter writer, int indent, String name,
             Object value) {
@@ -348,6 +352,8 @@ public class StoreAppender {
     /**
      * Given a string, this method replaces all occurrences of '&lt;', '&gt;',
      * '&amp;', and '"'.
+     * @param input The string to escape
+     * @return the escaped string
      */
     public String convertStr(String input) {
 
@@ -378,6 +384,7 @@ public class StoreAppender {
      *
      * @param clazz
      *            Java class to be tested
+     * @return <code>true</code> if the specified class should be stored
      */
     protected boolean isPersistable(Class<?> clazz) {
 

==================================================
StoreConfigLifecycleListener.java
index 3cc881cb2d..8a0fcadec1 100644
--- a/java/org/apache/catalina/storeconfig/StoreConfig.java
+++ b/java/org/apache/catalina/storeconfig/StoreConfig.java
@@ -49,7 +49,7 @@ public class StoreConfig implements IStoreConfig {
     private Server server;
 
     /**
-     * get server.xml location
+     * Get server.xml location
      *
      * @return The server file name
      */
@@ -58,30 +58,25 @@ public class StoreConfig implements IStoreConfig {
     }
 
     /**
-     * set new server.xml location
+     * Set new server.xml location.
      *
-     * @param string
+     * @param string The server.xml location
      */
     public void setServerFilename(String string) {
         serverFilename = string;
     }
 
-    /*
+    /**
      * Get the StoreRegistry with all factory to generate the
-     * server.xml/context.xml files
+     * server.xml/context.xml files.
      *
-     * @see org.apache.catalina.config.IStoreConfig#getRegistry()
+     * @see org.apache.catalina.storeconfig.IStoreConfig#getRegistry()
      */
     @Override
     public StoreRegistry getRegistry() {
         return registry;
     }
 
-    /*
-     * set StoreRegistry
-     *
-     * @see org.apache.catalina.config.IStoreConfig#setRegistry(org.apache.catalina.config.ConfigurationRegistry)
-     */
     @Override
     public void setServer(Server aServer) {
         server = aServer;
@@ -92,6 +87,11 @@ public class StoreConfig implements IStoreConfig {
         return server;
     }
 
+    /**
+     * set StoreRegistry
+     *
+     * @see org.apache.catalina.storeconfig.IStoreConfig#setRegistry(org.apache.catalina.storeconfig.StoreRegistry)
+     */
     @Override
     public void setRegistry(StoreRegistry aRegistry) {
         registry = aRegistry;
@@ -106,14 +106,15 @@ public class StoreConfig implements IStoreConfig {
     }
 
     /**
-     * Store Server from Object Name (Catalina:type=Server)
+     * Store Server from Object Name (Catalina:type=Server).
      *
-     * @param aServerName
-     *            Server ObjectName
-     * @param backup
-     * @param externalAllowed
-     *            s *
-     * @throws MalformedObjectNameException
+     * @param aServerName Server ObjectName
+     * @param backup <code>true</code> to backup existing configuration files
+     *  before rewriting them
+     * @param externalAllowed <code>true</code> to allow saving webapp
+     *  configuration for webapps that are not inside the host's app
+     *  directory
+     * @throws MalformedObjectNameException Bad MBean name
      */
     public synchronized void storeServer(String aServerName, boolean backup,
             boolean externalAllowed) throws MalformedObjectNameException {
@@ -157,13 +158,15 @@ public class StoreConfig implements IStoreConfig {
     }
 
     /**
-     * Store a Context from ObjectName
+     * Store a Context from ObjectName.
      *
-     * @param aContextName
-     *            MBean ObjectName
-     * @param backup
-     * @param externalAllowed
-     * @throws MalformedObjectNameException
+     * @param aContextName MBean ObjectName
+     * @param backup <code>true</code> to backup existing configuration files
+     *  before rewriting them
+     * @param externalAllowed <code>true</code> to allow saving webapp
+     *  configuration for webapps that are not inside the host's app
+     *  directory
+     * @throws MalformedObjectNameException Bad MBean name
      */
     public synchronized void storeContext(String aContextName, boolean backup,
             boolean externalAllowed) throws MalformedObjectNameException {
@@ -224,6 +227,8 @@ public class StoreConfig implements IStoreConfig {
      * Write the configuration information for this entire <code>Server</code>
      * out to the server.xml configuration file.
      *
+     * @param aServer Server instance
+     * @return <code>true</code> if the store operation was successful
      */
     @Override
     public synchronized boolean store(Server aServer) {
@@ -243,10 +248,8 @@ public class StoreConfig implements IStoreConfig {
         return false;
     }
 
-    /*
-     * (non-Javadoc)
-     *
-     * @see org.apache.catalina.config.IStoreConfig#store(org.apache.catalina.Context)
+    /**
+     * @see org.apache.catalina.storeconfig.IStoreConfig#store(org.apache.catalina.Context)
      */
     @Override
     public synchronized boolean store(Context aContext) {
@@ -274,10 +277,8 @@ public class StoreConfig implements IStoreConfig {
         return false;
     }
 
-    /*
-     * (non-Javadoc)
-     *
-     * @see org.apache.catalina.config.IStoreConfig#store(java.io.PrintWriter,
+    /**
+     * @see org.apache.catalina.storeconfig.IStoreConfig#store(java.io.PrintWriter,
      *      int, org.apache.catalina.Context)
      */
     @Override
@@ -296,10 +297,8 @@ public class StoreConfig implements IStoreConfig {
         }
     }
 
-    /*
-     * (non-Javadoc)
-     *
-     * @see org.apache.catalina.config.IStoreConfig#store(java.io.PrintWriter,
+    /**
+     * @see org.apache.catalina.storeconfig.IStoreConfig#store(java.io.PrintWriter,
      *      int, org.apache.catalina.Host)
      */
     @Override
@@ -310,10 +309,8 @@ public class StoreConfig implements IStoreConfig {
         desc.getStoreFactory().store(aWriter, indent, aHost);
     }
 
-    /*
-     * (non-Javadoc)
-     *
-     * @see org.apache.catalina.config.IStoreConfig#store(java.io.PrintWriter,
+    /**
+     * @see org.apache.catalina.storeconfig.IStoreConfig#store(java.io.PrintWriter,
      *      int, org.apache.catalina.Service)
      */
     @Override
@@ -325,12 +322,8 @@ public class StoreConfig implements IStoreConfig {
     }
 
     /**
-     * Store the state of this Server MBean (which will recursively store
-     * everything)
-     *
-     * @param writer
-     * @param indent
-     * @param aServer
+     * @see org.apache.catalina.storeconfig.IStoreConfig#store(java.io.PrintWriter,
+     *      int, org.apache.catalina.Server)
      */
     @Override
     public void store(PrintWriter writer, int indent,

==================================================
StoreContextAppender.java
index 2022211fbd..0ef487e867 100644
--- a/java/org/apache/catalina/storeconfig/StoreConfigLifecycleListener.java
+++ b/java/org/apache/catalina/storeconfig/StoreConfigLifecycleListener.java
@@ -53,8 +53,8 @@ public class StoreConfigLifecycleListener implements LifecycleListener {
     private String storeRegistry = null;
     private ObjectName oname = null;
 
-    /*
-     * register StoreRegistry after Start the complete Server
+    /**
+     * Register StoreRegistry after Start the complete Server.
      *
      * @see org.apache.catalina.LifecycleListener#lifecycleEvent(org.apache.catalina.LifecycleEvent)
      */
@@ -75,8 +75,9 @@ public class StoreConfigLifecycleListener implements LifecycleListener {
      }
 
     /**
-     * create StoreConfig MBean and load StoreRgistry MBeans name is
-     * <i>Catalina:type=StoreConfig </i>
+     * Create StoreConfig MBean and load StoreRgistry MBeans name is
+     * <code>Catalina:type=StoreConfig</code>.
+     * @param server The Server instance
      */
     protected void createMBean(Server server) {
         StoreLoader loader = new StoreLoader();
@@ -107,11 +108,11 @@ public class StoreConfigLifecycleListener implements LifecycleListener {
     }
 
     /**
-     * Create a ManagedBean (StoreConfig)
+     * Create a ManagedBean (StoreConfig).
      *
-     * @param object
-     * @return The bean
-     * @throws Exception
+     * @param object The object to manage
+     * @return an MBean wrapping the object
+     * @throws Exception if an error occurred
      */
     protected DynamicMBean getManagedBean(Object object) throws Exception {
         ManagedBean managedBean = registry.findManagedBean("StoreConfig");
@@ -119,7 +120,7 @@ public class StoreConfigLifecycleListener implements LifecycleListener {
     }
 
     /**
-     * @return Returns the storeConfig.
+     * @return the store config instance
      */
     public IStoreConfig getStoreConfig() {
         return storeConfig;
@@ -134,7 +135,7 @@ public class StoreConfigLifecycleListener implements LifecycleListener {
     }
 
     /**
-     * @return Returns the storeConfigClass.
+     * @return the main store config class name
      */
     public String getStoreConfigClass() {
         return storeConfigClass;
@@ -149,7 +150,7 @@ public class StoreConfigLifecycleListener implements LifecycleListener {
     }
 
     /**
-     * @return Returns the storeRegistry.
+     * @return the store registry
      */
     public String getStoreRegistry() {
         return storeRegistry;

==================================================
StoreDescription.java
index 348bc44257..b484727d27 100644
--- a/java/org/apache/catalina/storeconfig/StoreContextAppender.java
+++ b/java/org/apache/catalina/storeconfig/StoreContextAppender.java
@@ -30,13 +30,8 @@ import org.apache.catalina.core.StandardHost;
 public class StoreContextAppender extends StoreAppender {
 
     /**
-     * @param writer
-     * @param indent
-     * @param bean
-     * @param desc
-     * @param attributeName
-     * @param bean2
-     * @param value
+     * {@inheritDoc}
+     * Adds special handling for <code>docBase</code>.
      */
     @Override
     protected void printAttribute(PrintWriter writer, int indent, Object bean, StoreDescription desc, String attributeName, Object bean2, Object value) {
@@ -52,14 +47,14 @@ public class StoreContextAppender extends StoreAppender {
         }
     }
 
-    /*
-     * Print Context Values. <ul><li> Spezial handling to default workDir.
+    /**
+     * Print Context Values. <ul><li> Special handling to default workDir.
      * </li><li> Don't save path at external context.xml </li><li> Don't
      * generate docBase for host.appBase webapps <LI></ul>
      *
-     * @see org.apache.catalina.config.StoreAppender#isPrintValue(java.lang.Object,
+     * @see org.apache.catalina.storeconfig.StoreAppender#isPrintValue(java.lang.Object,
      *      java.lang.Object, java.lang.String,
-     *      org.apache.catalina.config.StoreDescription)
+     *      org.apache.catalina.storeconfig.StoreDescription)
      */
     @Override
     public boolean isPrintValue(Object bean, Object bean2, String attrName,
@@ -123,7 +118,7 @@ public class StoreContextAppender extends StoreAppender {
     /**
      * Make default Work Dir.
      *
-     * @param context
+     * @param context The context
      * @return The default working directory for the context.
      */
     protected String getDefaultWorkDir(StandardContext context) {
@@ -150,11 +145,11 @@ public class StoreContextAppender extends StoreAppender {
         return defaultWorkDir;
     }
 
-    /*
+    /**
      * Generate a real default StandardContext TODO read and interpret the
      * default context.xml and context.xml.default TODO Cache a Default
      * StandardContext ( with reloading strategy) TODO remove really all
-     * elements, but detection is hard... To Listener or Valve from same class?>
+     * elements, but detection is hard... To Listener or Valve from same class?
      *
      * @see org.apache.catalina.storeconfig.StoreAppender#defaultInstance(java.lang.Object)
      */

==================================================
StoreFactoryBase.java
index 95fb7ebed0..4bb23b3b6a 100644
--- a/java/org/apache/catalina/storeconfig/StoreDescription.java
+++ b/java/org/apache/catalina/storeconfig/StoreDescription.java
@@ -285,9 +285,9 @@ public class StoreDescription {
     }
 
     /**
-     * is child transient, please don't save this.
+     * Is child transient, please don't save this.
      *
-     * @param classname
+     * @param classname The class name to check
      * @return is classname attribute?
      */
     public boolean isTransientChild(String classname) {
@@ -297,9 +297,9 @@ public class StoreDescription {
     }
 
     /**
-     * is attribute transient, please don't save this.
+     * Is attribute transient, please don't save this.
      *
-     * @param attribute
+     * @param attribute The attribute name to check
      * @return is transient attribute?
      */
     public boolean isTransientAttribute(String attribute) {

==================================================
StoreFactoryRule.java
index de6b66adda..159c8c2d84 100644
--- a/java/org/apache/catalina/storeconfig/StoreFactoryBase.java
+++ b/java/org/apache/catalina/storeconfig/StoreFactoryBase.java
@@ -47,7 +47,7 @@ public class StoreFactoryBase implements IStoreFactory {
     private static final String info = "org.apache.catalina.config.StoreFactoryBase/1.0";
 
     /**
-     * Return descriptive information about this Facotry implementation and the
+     * @return descriptive information about this Facotry implementation and the
      * corresponding version number, in the format
      * <code>&lt;description&gt;/&lt;version&gt;</code>.
      */
@@ -74,10 +74,10 @@ public class StoreFactoryBase implements IStoreFactory {
         this.storeAppender = storeAppender;
     }
 
-    /*
-     * set Registry
+    /**
+     * Set Registry
      *
-     * @see org.apache.catalina.config.IStoreFactory#setRegistry(org.apache.catalina.config.ConfigurationRegistry)
+     * @see org.apache.catalina.storeconfig.IStoreFactory#setRegistry(org.apache.catalina.storeconfig.StoreRegistry)
      */
     @Override
     public void setRegistry(StoreRegistry aRegistry) {
@@ -85,10 +85,10 @@ public class StoreFactoryBase implements IStoreFactory {
 
     }
 
-    /*
+    /**
      * get Registry
      *
-     * @see org.apache.catalina.config.IStoreFactory#getRegistry()
+     * @see org.apache.catalina.storeconfig.IStoreFactory#getRegistry()
      */
     @Override
     public StoreRegistry getRegistry() {
@@ -104,7 +104,7 @@ public class StoreFactoryBase implements IStoreFactory {
         aWriter.println("\"?>");
     }
 
-    /*
+    /**
      * Store a server.xml element with attributes and children
      *
      * @see org.apache.catalina.storeconfig.IStoreFactory#store(java.io.PrintWriter,
@@ -138,12 +138,13 @@ public class StoreFactoryBase implements IStoreFactory {
     }
 
     /**
-     * Must Implement at subclass for sepzial store children handling
+     * Must Implement at subclass for custom store children handling.
      *
-     * @param aWriter
-     * @param indent
-     * @param aElement
-     * @param elementDesc
+     * @param aWriter Current output writer
+     * @param indent Indentation level
+     * @param aElement Current element
+     * @param elementDesc The element description
+     * @throws Exception Configuration storing error
      */
     public void storeChildren(PrintWriter aWriter, int indent, Object aElement,
             StoreDescription elementDesc) throws Exception {
@@ -153,10 +154,10 @@ public class StoreFactoryBase implements IStoreFactory {
      * Store only elements from storeChildren methods that are not a transient
      * child.
      *
-     * @param aWriter current output writer
-     * @param indent indentation level
-     * @param aTagElement current tomcat element
-     * @throws Exception
+     * @param aWriter Current output writer
+     * @param indent Indentation level
+     * @param aTagElement Current element
+     * @throws Exception Configuration storing error
      */
     protected void storeElement(PrintWriter aWriter, int indent,
             Object aTagElement) throws Exception {
@@ -176,11 +177,12 @@ public class StoreFactoryBase implements IStoreFactory {
         }
     }
 
-    /*
-     * Save a array of elements
-     * @param aWriter current output writer
-     * @param indent indentation level
-     * @param elements list of child elments to store!
+    /**
+     * Save a array of elements.
+     * @param aWriter Current output writer
+     * @param indent Indentation level
+     * @param elements Array of elements
+     * @throws Exception Configuration storing error
      */
     protected void storeElementArray(PrintWriter aWriter, int indent,
             Object[] elements) throws Exception {

==================================================
StoreFileMover.java
index 9029dece70..d0016b52b8 100644
--- a/java/org/apache/catalina/storeconfig/StoreFactoryRule.java
+++ b/java/org/apache/catalina/storeconfig/StoreFactoryRule.java
@@ -41,6 +41,9 @@ public class StoreFactoryRule extends Rule {
      * @param attributeName
      *            Name of the attribute that optionally includes an override
      *            name of the IStoreFactory class
+     * @param storeAppenderClass The store appender class
+     * @param appenderAttributeName The attribute name for the store
+     *  appender class
      */
     public StoreFactoryRule(String storeFactoryClass, String attributeName,
             String storeAppenderClass, String appenderAttributeName) {
@@ -74,11 +77,10 @@ public class StoreFactoryRule extends Rule {
     /**
      * Handle the beginning of an XML element.
      *
-     * @param attributes
-     *            The attributes of this element
-     *
-     * @exception Exception
-     *                if a processing error occurs
+     * @param namespace XML namespace
+     * @param name The element name
+     * @param attributes The attributes of this element
+     * @exception Exception if a processing error occurs
      */
     @Override
     public void begin(String namespace, String name, Attributes attributes)
@@ -99,15 +101,15 @@ public class StoreFactoryRule extends Rule {
     }
 
     /**
-     * create new instance from attribte className!
+     * Create new instance from attribute className!
      *
      * @param attr class Name attribute
      * @param defaultName Default Class
      * @param attributes current digester attribute elements
-     * @return new config object instance
-     * @throws ClassNotFoundException
-     * @throws InstantiationException
-     * @throws IllegalAccessException
+     * @return new configured object instance
+     * @throws ClassNotFoundException Class was not found
+     * @throws InstantiationException Error creating an instance
+     * @throws IllegalAccessException Security exception
      */
     protected Object newInstance(String attr, String defaultName,
             Attributes attributes) throws ClassNotFoundException,

==================================================
StoreLoader.java
index 03730c9663..99a5c247c9 100644
--- a/java/org/apache/catalina/storeconfig/StoreFileMover.java
+++ b/java/org/apache/catalina/storeconfig/StoreFileMover.java
@@ -86,7 +86,7 @@ public class StoreFileMover {
     }
 
     /**
-     * @param string
+     * @param string The file name
      */
     public void setFilename(String string) {
         filename = string;
@@ -100,7 +100,7 @@ public class StoreFileMover {
     }
 
     /**
-     * @param string
+     * @param string The encoding
      */
     public void setEncoding(String string) {
         encoding = string;
@@ -108,6 +108,9 @@ public class StoreFileMover {
 
     /**
      * Calculate file objects for the old and new configuration files.
+     * @param basename The base path
+     * @param encoding The encoding of the file
+     * @param filename The file name
      */
     public StoreFileMover(String basename, String filename, String encoding) {
         setBasename(basename);
@@ -124,7 +127,7 @@ public class StoreFileMover {
     }
 
     /**
-     * generate the Filename to new with TimeStamp
+     * Generate the Filename to new with TimeStamp.
      */
     public void init() {
         String configFile = getFilename();
@@ -147,9 +150,9 @@ public class StoreFileMover {
     }
 
     /**
-     * Shuffle old-&gt;save and new-&gt;old
+     * Shuffle old-&gt;save and new-&gt;old.
      *
-     * @throws IOException
+     * @throws IOException a file operation error occurred
      */
     public void move() throws IOException {
         if (configOld.renameTo(configSave)) {
@@ -175,10 +178,10 @@ public class StoreFileMover {
     }
 
     /**
-     * Open an output writer for the new configuration file
+     * Open an output writer for the new configuration file.
      *
      * @return The writer
-     * @throws IOException
+     * @throws IOException Failed opening a writer to the new file
      */
     public PrintWriter getWriter() throws IOException {
         return new PrintWriter(new OutputStreamWriter(
@@ -186,7 +189,7 @@ public class StoreFileMover {
     }
 
     /**
-     * Time value for backup yyyy-mm-dd.hh-mm-ss
+     * Time value for backup yyyy-mm-dd.hh-mm-ss.
      *
      * @return The time
      */

==================================================
StoreRegistry.java
index ce26eba1b7..c02a0e8295 100644
--- a/java/org/apache/catalina/storeconfig/StoreLoader.java
+++ b/java/org/apache/catalina/storeconfig/StoreLoader.java
@@ -102,6 +102,7 @@ public class StoreLoader {
     /**
      * Create and configure the Digester we will be using for setup store
      * registry.
+     * @return the XML digester that will be used to parse the configuration
      */
     protected static Digester createDigester() {
         long t1 = System.currentTimeMillis();
@@ -139,9 +140,11 @@ public class StoreLoader {
     }
 
     /**
-     *
-     * @param aFile
-     * @return The server file
+     * Find main configuration file.
+     * @param aFile File name, absolute or relative
+     *  to <code>${catalina.base}/conf</code>, if not specified
+     *  <code>server-registry.xml</code> is used
+     * @return The file
      */
     protected File serverFile(String aFile) {
 
@@ -160,9 +163,9 @@ public class StoreLoader {
     }
 
     /**
-     * Load Description from external source
+     * Load main configuration file from external source.
      *
-     * @param aURL
+     * @param aURL URL to the configuration file
      */
     public void load(String aURL) {
         synchronized (digester) {
@@ -183,7 +186,7 @@ public class StoreLoader {
      * Load from defaults
      * <ul>
      * <li>System Property URL catalina.storeregistry</li>
-     * <li>File $catalina.base/conf/server-registry.xml</li>
+     * <li>File ${catalina.base}/conf/server-registry.xml</li>
      * <li>class resource org/apache/catalina/storeconfig/server-registry.xml
      * </li>
      * </ul>
@@ -252,7 +255,7 @@ public class StoreLoader {
     }
 
     /**
-     * Get the value of the catalina.home environment variable.
+     * @return the catalina.home environment variable.
      */
     private static String getCatalinaHome() {
         return System.getProperty("catalina.home", System
@@ -260,21 +263,21 @@ public class StoreLoader {
     }
 
     /**
-     * Get the value of the catalina.base environment variable.
+     * @return the catalina.base environment variable.
      */
     private static String getCatalinaBase() {
         return System.getProperty("catalina.base", getCatalinaHome());
     }
 
     /**
-     * Get the value of the configuration URL.
+     * @return the configuration URL.
      */
     private static String getConfigUrl() {
         return System.getProperty("catalina.storeconfig");
     }
 
     /**
-     * @return Returns the registryResource.
+     * @return the registryResource.
      */
     public URL getRegistryResource() {
         return registryResource;

==================================================
