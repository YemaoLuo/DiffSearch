11b0bbbc97a9dd96c57ed82e8aef23d7e4ec813f
==================================================
Now containers can have multiple realms, need to make sure we don't get duplicate names for the realms in jmx.
==================================================
Mark Emlyn
==================================================
Tue Sep 23 16:35:42 2008 +0000
==================================================
CombinedRealm.java
Now containers can have multiple realms, need to make sure we don't get duplicate names for the realms in jmx.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@698227 13f79535-47bb-0310-9956-ffa450edef68



==================================================
RealmBase.java
index 2ac1181a93..23d981143c 100644
--- a/java/org/apache/catalina/realm/CombinedRealm.java
+++ b/java/org/apache/catalina/realm/CombinedRealm.java
@@ -23,6 +23,8 @@ import java.security.cert.X509Certificate;
 import java.util.LinkedList;
 import java.util.List;
 
+import javax.management.ObjectName;
+
 import org.apache.catalina.Container;
 import org.apache.catalina.Lifecycle;
 import org.apache.catalina.LifecycleException;
@@ -67,6 +69,21 @@ public class CombinedRealm extends RealmBase {
 	}
 
 
+	/**
+	 * Return the set of Realms that this Realm is wrapping
+	 */
+	public ObjectName[] getRealms() {
+	    ObjectName[] result = new ObjectName[realms.size()];
+	    for (Realm realm : realms) {
+	        if (realm instanceof RealmBase) {
+	            result[realms.indexOf(realm)] =
+	                ((RealmBase) realm).getObjectName();
+	        }
+	    }
+	    return result;
+	}
+
+
     /**
      * Return the Principal associated with the specified username and
      * credentials, if there is one; otherwise return <code>null</code>.
@@ -180,8 +197,14 @@ public class CombinedRealm extends RealmBase {
      * @param container The associated Container
      */
     public void setContainer(Container container) {
-        // Set the container for sub-realms. Mainly so logging works.
         for(Realm realm : realms) {
+            // Set the realmPath for JMX naming
+            if (realm instanceof RealmBase) {
+                ((RealmBase) realm).setRealmPath(
+                        getRealmPath() + "/realm" + realms.indexOf(realm));
+            }
+            
+            // Set the container for sub-realms. Mainly so logging works.
             realm.setContainer(container);
         }
         super.setContainer(container);

==================================================
