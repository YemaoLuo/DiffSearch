1afca5b9e4539508d474d9427d6a9665262f762c
==================================================
Move algorithm to SSLHostConfig
==================================================
Mark Thomas
==================================================
Thu Apr 30 13:15:36 2015 +0000
==================================================
AbstractHttp11JsseProtocol.java
Move algorithm to SSLHostConfig

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1676978 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AbstractHttp11Protocol.java
index bc384d6c73..d1d49055e8 100644
--- a/java/org/apache/coyote/http11/AbstractHttp11JsseProtocol.java
+++ b/java/org/apache/coyote/http11/AbstractHttp11JsseProtocol.java
@@ -25,9 +25,6 @@ public abstract class AbstractHttp11JsseProtocol<S>
         super(endpoint);
     }
 
-    public String getAlgorithm() { return getEndpoint().getAlgorithm();}
-    public void setAlgorithm(String s ) { getEndpoint().setAlgorithm(s);}
-
     public String getClientAuth() { return getEndpoint().getClientAuth();}
     public void setClientAuth(String s ) { getEndpoint().setClientAuth(s);}
 

==================================================
AbstractEndpoint.java
index b9d18e1e36..6a27b6f8f0 100644
--- a/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
+++ b/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
@@ -379,6 +379,11 @@ public abstract class AbstractHttp11Protocol<S> extends AbstractProtocol<S> {
         defaultSSLHostConfig.setCertificateKeyFile(certificateKeyFile);
     }
 
+    public void setAlgorithm(String certificateAlgorithm) {
+        registerDefaultSSLHostConfig();
+        defaultSSLHostConfig.setCertificateAlgorithm(certificateAlgorithm);
+    }
+
 
     // ------------------------------------------------------------- Common code
 

==================================================
SSLHostConfig.java
index 7d5293afc5..c1708f7a89 100644
--- a/java/org/apache/tomcat/util/net/AbstractEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AbstractEndpoint.java
@@ -31,8 +31,6 @@ import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.Executor;
 import java.util.concurrent.TimeUnit;
 
-import javax.net.ssl.KeyManagerFactory;
-
 import org.apache.juli.logging.Log;
 import org.apache.tomcat.util.IntrospectionUtils;
 import org.apache.tomcat.util.net.AbstractEndpoint.Acceptor.AcceptorState;
@@ -986,10 +984,6 @@ public abstract class AbstractEndpoint<S> {
         this.sslImplementationName = s;
     }
 
-    private String algorithm = KeyManagerFactory.getDefaultAlgorithm();
-    public String getAlgorithm() { return algorithm;}
-    public void setAlgorithm(String s ) { this.algorithm = s;}
-
     private String clientAuth = "false";
     public String getClientAuth() { return clientAuth;}
     public void setClientAuth(String s ) { this.clientAuth = s;}

==================================================
JSSESocketFactory.java
index 16e6da768d..563638adc0 100644
--- a/java/org/apache/tomcat/util/net/SSLHostConfig.java
+++ b/java/org/apache/tomcat/util/net/SSLHostConfig.java
@@ -21,6 +21,8 @@ import java.util.HashSet;
 import java.util.Map;
 import java.util.Set;
 
+import javax.net.ssl.KeyManagerFactory;
+
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.res.StringManager;
@@ -45,6 +47,7 @@ public class SSLHostConfig {
     private Set<String> protocols = new HashSet<>();
     // JSSE
     private String keystoreFile = System.getProperty("user.home")+"/.keystore";
+    private String certificateAlgorithm = KeyManagerFactory.getDefaultAlgorithm();
     // OpenSSL
     private String certificateFile;
     private String certificateKeyFile;
@@ -145,6 +148,17 @@ public class SSLHostConfig {
     }
 
 
+    public void setCertificateAlgorithm(String certificateAlgorithm) {
+        setProperty("certificateAlgorithm", Type.JSSE);
+        this.certificateAlgorithm = certificateAlgorithm;
+    }
+
+
+    public String getCertificateAlgorithm() {
+        return certificateAlgorithm;
+    }
+
+
     // ------------------------------- OpenSSL specific configuration properties
 
     public void setCertificateFile(String certificateFile) {

==================================================
