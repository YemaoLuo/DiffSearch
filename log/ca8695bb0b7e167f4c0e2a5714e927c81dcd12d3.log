ca8695bb0b7e167f4c0e2a5714e927c81dcd12d3
==================================================
Since I'm experimenting with it, improve a bit the API.
==================================================
Remy Maucherat
==================================================
Fri Sep 11 17:10:38 2015 +0000
==================================================
Nio2Endpoint.java
Since I'm experimenting with it, improve a bit the API.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1702518 13f79535-47bb-0310-9956-ffa450edef68



==================================================
SocketWrapperBase.java
index b46ea3ae7e..ae1fc71e0e 100644
--- a/java/org/apache/tomcat/util/net/Nio2Endpoint.java
+++ b/java/org/apache/tomcat/util/net/Nio2Endpoint.java
@@ -1015,7 +1015,7 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel> {
                     if (complete) {
                         readPending.release();
                         state.state = currentState;
-                        if (completion) {
+                        if (completion && state.handler != null) {
                             state.handler.completed(Long.valueOf(state.nBytes), state.attachment);
                         }
                     } else {
@@ -1038,8 +1038,10 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel> {
                     // If already closed, don't call onError and close again
                     return;
                 }
-                state.state = Nio2Endpoint.isInline() ? CompletionState.INLINE : CompletionState.DONE;
-                state.handler.failed(ioe, state.attachment);
+                state.state = Nio2Endpoint.isInline() ? CompletionState.ERROR : CompletionState.DONE;
+                if (state.handler != null) {
+                    state.handler.failed(ioe, state.attachment);
+                }
             }
         }
 
@@ -1068,7 +1070,7 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel> {
                     if (complete) {
                         writePending.release();
                         state.state = currentState;
-                        if (completion) {
+                        if (completion && state.handler != null) {
                             state.handler.completed(Long.valueOf(state.nBytes), state.attachment);
                         }
                     } else {
@@ -1087,8 +1089,10 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel> {
                 }
                 Nio2SocketWrapper.this.setError(ioe);
                 writePending.release();
-                state.state = Nio2Endpoint.isInline() ? CompletionState.INLINE : CompletionState.DONE;
-                state.handler.failed(ioe, state.attachment);
+                state.state = Nio2Endpoint.isInline() ? CompletionState.ERROR : CompletionState.DONE;
+                if (state.handler != null) {
+                    state.handler.failed(ioe, state.attachment);
+                }
             }
         }
 

==================================================
