9624a674d4193653c14d1f077800f767ec705f8f
==================================================
More i18n items.
==================================================
Remy Maucherat
==================================================
Mon Dec 10 10:57:08 2018 +0000
==================================================
StandardWrapper.java
More i18n items.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1848561 13f79535-47bb-0310-9956-ffa450edef68



==================================================
WebdavFixFilter.java
index 9aa053e89b..40decbd3ab 100644
--- a/java/org/apache/catalina/filters/LocalStrings.properties
+++ b/java/org/apache/catalina/filters/LocalStrings.properties
@@ -60,3 +60,6 @@ remoteIpFilter.invalidNumber=Illegal number for parameter [{0}]: [{1}]
 requestFilter.deny=Denied request for [{0}] based on property [{1}]
 
 restCsrfPreventionFilter.invalidNonce=CSRF nonce validation failed
+
+webDavFilter.xpRootContext=WebdavFixFilter: the XP-x64-SP2 client will only work with the root context
+webDavFilter.xpProblem=WebdavFixFilter: the XP-x64-SP2 client is known not to work with WebDAV Servlet

==================================================
HTMLManagerServlet.java
index bb68b25682..e625f2e56b 100644
--- a/java/org/apache/catalina/filters/WebdavFixFilter.java
+++ b/java/org/apache/catalina/filters/WebdavFixFilter.java
@@ -26,6 +26,8 @@ import javax.servlet.ServletResponse;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
 
+import org.apache.tomcat.util.res.StringManager;
+
 /**
  * Filter that attempts to force MS WebDAV clients connecting on port 80 to use
  * a WebDAV client that actually works. Other workarounds that might help
@@ -59,9 +61,7 @@ import javax.servlet.http.HttpServletResponse;
 public class WebdavFixFilter extends GenericFilter {
 
     private static final long serialVersionUID = 1L;
-
-    private static final String LOG_MESSAGE_PREAMBLE =
-        "WebdavFixFilter: Detected client problem: ";
+    protected static final StringManager sm = StringManager.getManager(WebdavFixFilter.class);
 
     /* Start string for all versions */
     private static final String UA_MINIDIR_START =
@@ -101,11 +101,11 @@ public class WebdavFixFilter extends GenericFilter {
         } else if (ua.startsWith(UA_MINIDIR_5_2_3790)) {
             // XP 64-bit SP2
             if (!"".equals(httpRequest.getContextPath())) {
-                log("XP-x64-SP2 clients only work with the root context");
+                getServletContext().log(sm.getString("webDavFilter.xpRootContext"));
             }
             // Namespace issue maybe
             // see http://greenbytes.de/tech/webdav/webdav-redirector-list.html
-            log("XP-x64-SP2 is known not to work with WebDAV Servlet");
+            getServletContext().log(sm.getString("webDavFilter.xpProblem"));
 
             chain.doFilter(request, response);
         } else {
@@ -131,9 +131,4 @@ public class WebdavFixFilter extends GenericFilter {
         return location.toString();
     }
 
-    private void log(String msg) {
-        StringBuilder builder = new StringBuilder(LOG_MESSAGE_PREAMBLE);
-        builder.append(msg);
-        getServletContext().log(builder.toString());
-    }
 }

==================================================
ManagerServlet.java
index 3dbd3cd392..763f19f2b4 100644
--- a/java/org/apache/catalina/manager/LocalStrings.properties
+++ b/java/org/apache/catalina/manager/LocalStrings.properties
@@ -73,6 +73,9 @@ htmlManagerServlet.diagnosticsSslConnectorCipherText=List the configured TLS vir
 htmlManagerServlet.diagnosticsSslConnectorTrustedCertsButton=Trusted Certificates
 htmlManagerServlet.diagnosticsSslConnectorTrustedCertsText=List the configured TLS virtual hosts and the trusted certificates for each.
 htmlManagerServlet.diagnosticsTitle=Diagnostics
+htmlManagerServlet.error.idleParam=Could not parse integer idle parameter [{0}]
+htmlManagerServlet.error.sessions=Error processing sessions command for context [{0}]
+htmlManagerServlet.error.sortOrder=Unknown sort order [{0}]
 htmlManagerServlet.expire.explain=with idle &ge;
 htmlManagerServlet.expire.unit=minutes
 htmlManagerServlet.findleaksList=The following web applications were stopped (reloaded, undeployed), but their\n\
@@ -122,6 +125,17 @@ managerServlet.deleteFail=FAIL - Unable to delete [{0}]. The continued presence
 managerServlet.deployFailed=FAIL - Failed to deploy application at context path [{0}]
 managerServlet.deployed=OK - Deployed application at context path [{0}]
 managerServlet.deployedButNotStarted=FAIL - Deployed application at context path [{0}] but context failed to start
+managerServlet.error.deploy=Error deploying [{0}]
+managerServlet.error.idleParam=Could not parse integer idle parameter [{0}]
+managerServlet.error.reload=Error reloading [{0}]
+managerServlet.error.resources=Error displaying resources of type [{0}]
+managerServlet.error.serverInfo=Error displaying server information
+managerServlet.error.sessions=Error displaying sessions information for context [{0}]
+managerServlet.error.start=Error starting [{0}]
+managerServlet.error.stop=Error stopping [{0}]
+managerServlet.error.storeConfig=Error storing configuration
+managerServlet.error.storeContextConfig=Error storing configuration for context [{0}]
+managerServlet.error.undeploy=Error undeploying [{0}]
 managerServlet.exception=FAIL - Encountered exception [{0}]
 managerServlet.findleaksFail=FAIL - Find leaks failed: Host not instance of StandardHost
 managerServlet.findleaksList=OK - Found potential memory leaks in the following applications:
@@ -149,6 +163,13 @@ managerServlet.resourcesType=OK - Listed global resources of type [{0}]
 managerServlet.saveFail=FAIL - Configuration save failed: [{0}]
 managerServlet.saved=OK - Server configuration saved
 managerServlet.savedContext=OK - Context [{0}] configuration saved
+managerServlet.serverInfo=OK - Server info\n\
+Tomcat Version: [{0}]\n\
+OS Name: [{1}]\n\
+OS Version: [{2}]\n\
+OS Architecture: [{3}]\n\
+JVM Version: [{4}]\n\
+JVM Vendor: [{5}]
 managerServlet.sessiondefaultmax=Default maximum session inactive interval [{0}] minutes
 managerServlet.sessions=OK - Session information for application at context path [{0}]
 managerServlet.sessiontimeout=[{0}] minutes: [{1}] sessions

==================================================
