687c71f93d5f0112bbb4774966cf3be21a13a40a
==================================================
Ensure that a Stream is only reset once. Second and subsequent resets
==================================================
Mark Thomas
==================================================
Tue Oct 13 16:37:28 2015 +0000
==================================================
Http2UpgradeHandler.java
Ensure that a Stream is only reset once. Second and subsequent resets
are NO-OPs.
Ensure that a Stream is not reset when it is closed. Resetting a closed
stream is a NO-OP.
Ensure that IDLE streams are not reset. Resetting an IDLE stream
triggers an ISE.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1708465 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Stream.java
index 10fe0dabfa..23e2782758 100644
--- a/java/org/apache/coyote/http2/Http2UpgradeHandler.java
+++ b/java/org/apache/coyote/http2/Http2UpgradeHandler.java
@@ -410,25 +410,23 @@ public class Http2UpgradeHandler extends AbstractStream implements InternalHttpU
         }
 
         Stream stream = getStream(se.getStreamId(), false);
-        if (stream != null) {
-            stream.sendRst();
-        }
+        if (stream != null && stream.sendReset()) {
+            // Write a RST frame
+            byte[] rstFrame = new byte[13];
+            // Length
+            ByteUtil.setThreeBytes(rstFrame, 0, 4);
+            // Type
+            rstFrame[3] = FrameType.RST.getIdByte();
+            // No flags
+            // Stream ID
+            ByteUtil.set31Bits(rstFrame, 5, se.getStreamId());
+            // Payload
+            ByteUtil.setFourBytes(rstFrame, 9, se.getError().getCode());
 
-        // Write a RST frame
-        byte[] rstFrame = new byte[13];
-        // Length
-        ByteUtil.setThreeBytes(rstFrame, 0, 4);
-        // Type
-        rstFrame[3] = FrameType.RST.getIdByte();
-        // No flags
-        // Stream ID
-        ByteUtil.set31Bits(rstFrame, 5, se.getStreamId());
-        // Payload
-        ByteUtil.setFourBytes(rstFrame, 9, se.getError().getCode());
-
-        synchronized (socketWrapper) {
-            socketWrapper.write(true, rstFrame, 0, rstFrame.length);
-            socketWrapper.flush(true);
+            synchronized (socketWrapper) {
+                socketWrapper.write(true, rstFrame, 0, rstFrame.length);
+                socketWrapper.flush(true);
+            }
         }
     }
 

==================================================
