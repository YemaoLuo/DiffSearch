9d85c135562e08dca2f6f04b5b1f89c4d64f7f47
==================================================
Add the plumbing required for HTTP/2 5.1.1 and 5.1.2
==================================================
Mark Thomas
==================================================
Wed Jun 10 19:43:10 2015 +0000
==================================================
Http2UpgradeHandler.java
Add the plumbing required for HTTP/2 5.1.1 and 5.1.2

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1684752 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Stream.java
index 8d1893e039..455d4c8ea8 100644
--- a/java/org/apache/coyote/http2/LocalStrings.properties
+++ b/java/org/apache/coyote/http2/LocalStrings.properties
@@ -72,6 +72,7 @@ upgradeHandler.socketCloseFailed=Error closing socket
 upgradeHandler.stream.closed=Stream [{0}] has been closed for some time
 upgradeHandler.stream.even=A new remote stream ID of [{0}] was requested but all remote streams must use odd identifiers
 upgradeHandler.stream.old=A new remote stream ID of [{0}] was requested but the most recent stream was [{1}]
+upgradeHandler.tooManyRemoteStreams=The client attempted to use more than [{0}] active streams
 upgradeHandler.swallow.eos=End of stream found while trying to swallow [{0}] bytes
 upgradeHandler.unexpectedEos=Unexpected end of stream
 upgradeHandler.unexpectedStatus=An unexpected value of status ([{0}]) was passed to this method

==================================================
StreamStateMachine.java
index 23b79ec7b8..492b6722a4 100644
--- a/java/org/apache/coyote/http2/Stream.java
+++ b/java/org/apache/coyote/http2/Stream.java
@@ -38,11 +38,12 @@ public class Stream extends AbstractStream implements HeaderEmitter {
     private volatile int weight = Constants.DEFAULT_WEIGHT;
 
     private final Http2UpgradeHandler handler;
+    private final StreamStateMachine state;
+    // TODO: Only create these objects if needed and null them when finished
     private final Request coyoteRequest;
     private final Response coyoteResponse = new Response();
     private final StreamInputBuffer inputBuffer;
     private final StreamOutputBuffer outputBuffer = new StreamOutputBuffer();
-    private final StreamStateMachine state;
 
 
     public Stream(Integer identifier, Http2UpgradeHandler handler) {
@@ -260,6 +261,16 @@ public class Stream extends AbstractStream implements HeaderEmitter {
     }
 
 
+    boolean isActive() {
+        return state.isActive();
+    }
+
+
+    void closeIfIdle() {
+        state.closeIfIdle();
+    }
+
+
     class StreamOutputBuffer implements OutputBuffer {
 
         private final ByteBuffer buffer = ByteBuffer.allocate(8 * 1024);

==================================================
