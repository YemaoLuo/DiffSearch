b12358ef473f5f43a85c0cdd0170196755618007
==================================================
Fix Eclipse/FindBugs warnings apart from those that trigger bug 50984
==================================================
Mark Emlyn
==================================================
Wed Mar 30 15:41:02 2011 +0000
==================================================
Constants.java
Fix Eclipse/FindBugs warnings apart from those that trigger bug 50984

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1086992 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ManagerServlet.java
index 3b02e01767..9ed856a4b4 100644
--- a/java/org/apache/catalina/manager/LocalStrings.properties
+++ b/java/org/apache/catalina/manager/LocalStrings.properties
@@ -91,6 +91,7 @@ managerServlet.noRole=FAIL - User does not possess role {0}
 managerServlet.noSelf=FAIL - The manager can not reload, undeploy, stop, or undeploy itself
 managerServlet.noWrapper=Container has not called setWrapper() for this servlet
 managerServlet.notDeployed=FAIL - Context {0} is defined in server.xml and may not be undeployed
+managerServlet.objectNameFail=FAIL - Unable to register object name [{0}] for Manager Servlet
 managerServlet.postCommand=FAIL - Tried to use command {0} via a GET request but POST is required
 managerServlet.reloaded=OK - Reloaded application at context path {0}
 managerServlet.resourcesAll=OK - Listed global resources of all types

==================================================
StatusManagerServlet.java
index 72cf687ce1..ab277305c2 100644
--- a/java/org/apache/catalina/manager/ManagerServlet.java
+++ b/java/org/apache/catalina/manager/ManagerServlet.java
@@ -168,7 +168,7 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
     /**
      * The Context container associated with our web application.
      */
-    protected Context context = null;
+    protected transient Context context = null;
 
 
     /**
@@ -200,7 +200,7 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
     /**
      * The associated host.
      */
-    protected Host host = null;
+    protected transient Host host = null;
 
     
     /**
@@ -212,7 +212,7 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
     /**
      * MBean server.
      */
-    protected MBeanServer mBeanServer = null;
+    protected transient MBeanServer mBeanServer = null;
 
 
     /**
@@ -225,7 +225,7 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
      * The global JNDI <code>NamingContext</code> for this server,
      * if available.
      */
-    protected javax.naming.Context global = null;
+    protected transient javax.naming.Context global = null;
 
 
     /**
@@ -238,7 +238,7 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
     /**
      * The Wrapper container associated with this servlet.
      */
-    protected Wrapper wrapper = null;
+    protected transient Wrapper wrapper = null;
 
 
     // ----------------------------------------------- ContainerServlet Methods
@@ -272,11 +272,12 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
             context = (Context) wrapper.getParent();
             host = (Host) context.getParent();
             Engine engine = (Engine) host.getParent();
+            String name = engine.getName() + ":type=Deployer,host=" +
+                    host.getName();
             try {
-                oname = new ObjectName(engine.getName() 
-                        + ":type=Deployer,host=" + host.getName());
+                oname = new ObjectName(name);
             } catch (Exception e) {
-                // ?
+                log(sm.getString("managerServlet.objectNameFail", name), e);
             }
         }
 
@@ -785,6 +786,7 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
         if (!validateContextName(cn, writer, smClient)) {
             return;
         }
+        @SuppressWarnings("null") // checked in call above
         String name = cn.getName();
         String baseName = cn.getBaseName();
         String displayPath = cn.getDisplayName();

==================================================
Constants.java
index 22a54fe1c0..4bf605173c 100644
--- a/java/org/apache/catalina/manager/StatusManagerServlet.java
+++ b/java/org/apache/catalina/manager/StatusManagerServlet.java
@@ -299,6 +299,7 @@ public class StatusManagerServlet
     // ------------------------------------------- NotificationListener Methods
 
 
+    @Override
     public void handleNotification(Notification notification,
                                    java.lang.Object handback) {
 

==================================================
HTMLHostManagerServlet.java
index 973ae92f7e..92d76bd21a 100644
--- a/java/org/apache/catalina/manager/host/Constants.java
+++ b/java/org/apache/catalina/manager/host/Constants.java
@@ -23,86 +23,6 @@ public class Constants {
 
     public static final String Package = "org.apache.catalina.manager.host";
 
-    public static final String HTML_HEADER_SECTION =
-        "<html>\n" +
-        "<head>\n" +
-        "<style>\n" +
-        org.apache.catalina.util.TomcatCSS.TOMCAT_CSS + "\n" +
-        "  table {\n" +
-        "    width: 100%;\n" +
-        "  }\n" +
-        "  td.page-title {\n" +
-        "    text-align: center;\n" +
-        "    vertical-align: top;\n" +
-        "    font-family:sans-serif,Tahoma,Arial;\n" +
-        "    font-weight: bold;\n" +
-        "    background: white;\n" +
-        "    color: black;\n" +
-        "  }\n" +
-        "  td.title {\n" +
-        "    text-align: left;\n" +
-        "    vertical-align: top;\n" +
-        "    font-family:sans-serif,Tahoma,Arial;\n" +
-        "    font-style:italic;\n" +
-        "    font-weight: bold;\n" +
-        "    background: #D2A41C;\n" +
-        "  }\n" +
-        "  td.header-left {\n" +
-        "    text-align: left;\n" +
-        "    vertical-align: top;\n" +
-        "    font-family:sans-serif,Tahoma,Arial;\n" +
-        "    font-weight: bold;\n" +
-        "    background: #FFDC75;\n" +
-        "  }\n" +
-        "  td.header-center {\n" +
-        "    text-align: center;\n" +
-        "    vertical-align: top;\n" +
-        "    font-family:sans-serif,Tahoma,Arial;\n" +
-        "    font-weight: bold;\n" +
-        "    background: #FFDC75;\n" +
-        "  }\n" +
-        "  td.row-left {\n" +
-        "    text-align: left;\n" +
-        "    vertical-align: middle;\n" +
-        "    font-family:sans-serif,Tahoma,Arial;\n" +
-        "    color: black;\n" +
-        "    background: white;\n" +
-        "  }\n" +
-        "  td.row-center {\n" +
-        "    text-align: center;\n" +
-        "    vertical-align: middle;\n" +
-        "    font-family:sans-serif,Tahoma,Arial;\n" +
-        "    color: black;\n" +
-        "    background: white;\n" +
-        "  }\n" +
-        "  td.row-right {\n" +
-        "    text-align: right;\n" +
-        "    vertical-align: middle;\n" +
-        "    font-family:sans-serif,Tahoma,Arial;\n" +
-        "    color: black;\n" +
-        "    background: white;\n" +
-        "  }\n" +
-        "  TH {\n" +
-        "    text-align: center;\n" +
-        "    vertical-align: top;\n" +
-        "    font-family:sans-serif,Tahoma,Arial;\n" +
-        "    font-weight: bold;\n" +
-        "    background: #FFDC75;\n" +
-        "  }\n" +
-        "  TD {\n" +
-        "    text-align: center;\n" +
-        "    vertical-align: middle;\n" +
-        "    font-family:sans-serif,Tahoma,Arial;\n" +
-        "    color: black;\n" +
-        "    background: white;\n" +
-        "  }\n" +
-        "  form {\n" +
-        "    margin: 1;\n" +
-        "  }\n" +
-        "  form.inline {\n" +
-        "    display: inline;\n" +
-        "  }\n" +        "</style>\n";
-
     public static final String BODY_HEADER_SECTION =
         "<title>{0}</title>\n" +
         "</head>\n" +

==================================================
BaseSessionComparator.java
index 16238e2b75..9f8cd103d3 100644
--- a/java/org/apache/catalina/manager/host/HTMLHostManagerServlet.java
+++ b/java/org/apache/catalina/manager/host/HTMLHostManagerServlet.java
@@ -237,7 +237,7 @@ public final class HTMLHostManagerServlet extends HostManagerServlet {
         PrintWriter writer = response.getWriter();
 
         // HTML Header Section
-        writer.print(Constants.HTML_HEADER_SECTION);
+        writer.print(org.apache.catalina.manager.Constants.HTML_HEADER_SECTION);
 
         // Body Header Section
         Object[] args = new Object[2];

==================================================
ReverseComparator.java
index 73dc9a7db2..ffc5c64b72 100644
--- a/java/org/apache/catalina/manager/util/BaseSessionComparator.java
+++ b/java/org/apache/catalina/manager/util/BaseSessionComparator.java
@@ -39,6 +39,8 @@ public abstract class BaseSessionComparator<T> implements Comparator<Session> {
     /* (non-Javadoc)
      * @see java.util.Comparator#compare(java.lang.Object, java.lang.Object)
      */
+    @SuppressWarnings("unchecked")
+    @Override
     public final int compare(Session s1, Session s2) {
         Comparable<T> c1 = getComparableObject(s1);
         Comparable<T> c2 = getComparableObject(s2);

==================================================
