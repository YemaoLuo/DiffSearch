c4860e680b43dec1984cf2eaf63325a395d4fb7a
==================================================
Improve Kubernetes environment lookups
==================================================
remm remm@apache.org
==================================================
Mon Feb 10 13:26:26 2020 +0100
==================================================
CloudMembershipProvider.java
Improve Kubernetes environment lookups

Fix lookup order by looking for specific names first, then the standard
Kubernetes ones, otherwise overriding will most likely not work.
Also add a dedicated name for the DNS service, that will default to
getNamespace() if not present.
Submitted by Bernd Bohmann.


==================================================
DNSMembershipProvider.java
index f33aed688e..22f9a95ed1 100644
--- a/java/org/apache/catalina/tribes/membership/cloud/CloudMembershipProvider.java
+++ b/java/org/apache/catalina/tribes/membership/cloud/CloudMembershipProvider.java
@@ -88,7 +88,7 @@ public abstract class CloudMembershipProvider extends MembershipProviderBase imp
      * @return the namespace
      */
     protected String getNamespace() {
-        String namespace = getEnv("KUBERNETES_NAMESPACE", CUSTOM_ENV_PREFIX + "NAMESPACE");
+        String namespace = getEnv(CUSTOM_ENV_PREFIX + "NAMESPACE", "KUBERNETES_NAMESPACE");
         if (namespace == null || namespace.length() == 0) {
             log.warn(sm.getString("kubernetesMembershipProvider.noNamespace"));
             namespace = "tomcat";

==================================================
KubernetesMembershipProvider.java
index 25fcff178d..7b57d97358 100644
--- a/java/org/apache/catalina/tribes/membership/cloud/DNSMembershipProvider.java
+++ b/java/org/apache/catalina/tribes/membership/cloud/DNSMembershipProvider.java
@@ -33,7 +33,7 @@ import org.apache.juli.logging.LogFactory;
 public class DNSMembershipProvider extends CloudMembershipProvider {
     private static final Log log = LogFactory.getLog(DNSMembershipProvider.class);
 
-    private String namespace;
+    private String dnsServiceName;
 
     @Override
     public void start(int level) throws Exception {
@@ -44,12 +44,15 @@ public class DNSMembershipProvider extends CloudMembershipProvider {
         super.start(level);
 
         // Set up Kubernetes API parameters
-        namespace = getNamespace();
+        dnsServiceName = getEnv("DNS_MEMBERSHIP_SERVICE_NAME");
+        if (dnsServiceName == null) {
+            dnsServiceName = getNamespace();
+        }
 
         if (log.isDebugEnabled()) {
-            log.debug(String.format("Namespace [%s] set; clustering enabled", namespace));
+            log.debug(String.format("Namespace [%s] set; clustering enabled", dnsServiceName));
         }
-        namespace = URLEncoder.encode(namespace, "UTF-8");
+        dnsServiceName = URLEncoder.encode(dnsServiceName, "UTF-8");
 
         // Fetch initial members
         heartbeat();
@@ -66,9 +69,9 @@ public class DNSMembershipProvider extends CloudMembershipProvider {
 
         InetAddress[] inetAddresses = null;
         try {
-            inetAddresses = InetAddress.getAllByName(namespace);
+            inetAddresses = InetAddress.getAllByName(dnsServiceName);
         } catch (UnknownHostException exception) {
-            log.warn(sm.getString("dnsMembershipProvider.dnsError", namespace), exception);
+            log.warn(sm.getString("dnsMembershipProvider.dnsError", dnsServiceName), exception);
         }
 
         if (inetAddresses != null) {

==================================================
