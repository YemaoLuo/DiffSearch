e5e5a2f66a5a4f4c419bb3e929d2313cede7091d
==================================================
Handle case where relative ordering refers top fragments that are not present in the application
==================================================
Mark Emlyn
==================================================
Thu Nov 1 18:13:20 2012 +0000
==================================================
WebXml.java
Handle case where relative ordering refers top fragments that are not present in the application

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1404704 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestWebXmlOrdering.java
index 1571a81283..5c6597b3b4 100644
--- a/java/org/apache/catalina/deploy/WebXml.java
+++ b/java/org/apache/catalina/deploy/WebXml.java
@@ -2123,14 +2123,29 @@ public class WebXml {
             // Stage 1. Make all dependencies bi-directional - this makes the
             //          next stage simpler.
             for (WebXml fragment : fragments.values()) {
-                for (String before : fragment.getBeforeOrdering()) {
-                    if (!before.equals(ORDER_OTHERS)) {
-                        fragments.get(before).addAfterOrdering(fragment.getName());
+                Iterator<String> before =
+                        fragment.getBeforeOrdering().iterator();
+                while (before.hasNext()) {
+                    String beforeEntry = before.next();
+                    if (!beforeEntry.equals(ORDER_OTHERS)) {
+                        WebXml beforeFragment = fragments.get(beforeEntry);
+                        if (beforeFragment == null) {
+                            before.remove();
+                        } else {
+                            beforeFragment.addAfterOrdering(fragment.getName());
+                        }
                     }
                 }
-                for (String after : fragment.getAfterOrdering()) {
-                    if (!after.equals(ORDER_OTHERS)) {
-                        fragments.get(after).addBeforeOrdering(fragment.getName());
+                Iterator<String> after = fragment.getAfterOrdering().iterator();
+                while (after.hasNext()) {
+                    String afterEntry = after.next();
+                    if (!afterEntry.equals(ORDER_OTHERS)) {
+                        WebXml afterFragment = fragments.get(afterEntry);
+                        if (afterFragment == null) {
+                            after.remove();
+                        } else {
+                            afterFragment.addBeforeOrdering(fragment.getName());
+                        }
                     }
                 }
             }

==================================================
