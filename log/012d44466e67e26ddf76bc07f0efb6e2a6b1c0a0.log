012d44466e67e26ddf76bc07f0efb6e2a6b1c0a0
==================================================
Refactor default cluster buffer sizes to use constants
==================================================
Mark Thomas
==================================================
Fri May 20 11:58:41 2022 +0100
==================================================
ObjectReader.java
index 3e79933931..ba016d3bca 100644
--- a/java/org/apache/catalina/tribes/io/LocalStrings_zh_CN.properties
+++ b/java/org/apache/catalina/tribes/io/LocalStrings_zh_CN.properties
@@ -15,7 +15,7 @@
 
 bufferPool.created=已创建缓冲池，最大大小为：[{0}]字节，类型为：[{1}]
 
-objectReader.retrieveFailed.socketReceiverBufferSize=无法检索套接字接收器缓冲区大小，设置为默认43800字节。
+objectReader.retrieveFailed.socketReceiverBufferSize=无法检索套接字接收器缓冲区大小，设置为默认[{0}]字节。
 
 replicationStream.conflict=和非公开接口类加载器冲突
 

==================================================
AbstractSender.java
index 20eed9e300..7851352bde 100644
--- a/java/org/apache/catalina/tribes/io/ObjectReader.java
+++ b/java/org/apache/catalina/tribes/io/ObjectReader.java
@@ -22,6 +22,7 @@ import java.nio.ByteBuffer;
 import java.nio.channels.SocketChannel;
 
 import org.apache.catalina.tribes.ChannelMessage;
+import org.apache.catalina.tribes.transport.Constants;
 import org.apache.catalina.tribes.util.StringManager;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
@@ -67,8 +68,9 @@ public class ObjectReader {
             this.buffer = new XByteBuffer(socket.getReceiveBufferSize(), true);
         }catch ( IOException x ) {
             //unable to get buffer size
-            log.warn(sm.getString("objectReader.retrieveFailed.socketReceiverBufferSize"));
-            this.buffer = new XByteBuffer(43800,true);
+            log.warn(sm.getString("objectReader.retrieveFailed.socketReceiverBufferSize",
+                    Integer.toString(Constants.DEFAULT_CLUSTER_MSG_BUFFER_SIZE)));
+            this.buffer = new XByteBuffer(Constants.DEFAULT_CLUSTER_MSG_BUFFER_SIZE, true);
         }
     }
 

==================================================
Constants.java
index b12d59a9a4..b61a546926 100644
--- a/java/org/apache/catalina/tribes/transport/AbstractSender.java
+++ b/java/org/apache/catalina/tribes/transport/AbstractSender.java
@@ -25,10 +25,10 @@ import org.apache.catalina.tribes.Member;
 public abstract class AbstractSender implements DataSender {
 
     private volatile boolean connected = false;
-    private int rxBufSize = 25188;
-    private int txBufSize = 43800;
-    private int udpRxBufSize = 25188;
-    private int udpTxBufSize = 43800;
+    private int rxBufSize = Constants.DEFAULT_CLUSTER_ACK_BUFFER_SIZE;
+    private int txBufSize = Constants.DEFAULT_CLUSTER_MSG_BUFFER_SIZE;
+    private int udpRxBufSize = Constants.DEFAULT_CLUSTER_ACK_BUFFER_SIZE;
+    private int udpTxBufSize = Constants.DEFAULT_CLUSTER_MSG_BUFFER_SIZE;
     private boolean directBuffer = false;
     private int keepAliveCount = -1;
     private int requestCount = 0;

==================================================
ReceiverBase.java
index c83e6bb1c8..fe0515409f 100644
--- a/java/org/apache/catalina/tribes/transport/Constants.java
+++ b/java/org/apache/catalina/tribes/transport/Constants.java
@@ -27,6 +27,9 @@ public class Constants {
 
     public static final String Package = "org.apache.catalina.tribes.transport";
 
+    public static final int DEFAULT_CLUSTER_MSG_BUFFER_SIZE = 43800;
+    public static final int DEFAULT_CLUSTER_ACK_BUFFER_SIZE = 25188;
+
     /*
      * Do not change any of these values!
      */

==================================================
ChannelCreator.java
index 20547cccd2..ee4efd56ba 100644
--- a/java/org/apache/catalina/tribes/transport/ReceiverBase.java
+++ b/java/org/apache/catalina/tribes/transport/ReceiverBase.java
@@ -56,10 +56,10 @@ public abstract class ReceiverBase implements ChannelReceiver, ListenCallback, R
     private int port  = 4000;
     private int udpPort = -1;
     private int securePort = -1;
-    private int rxBufSize = 43800;
-    private int txBufSize = 25188;
-    private int udpRxBufSize = 43800;
-    private int udpTxBufSize = 25188;
+    private int rxBufSize = Constants.DEFAULT_CLUSTER_MSG_BUFFER_SIZE;
+    private int txBufSize = Constants.DEFAULT_CLUSTER_ACK_BUFFER_SIZE;
+    private int udpRxBufSize = Constants.DEFAULT_CLUSTER_MSG_BUFFER_SIZE;
+    private int udpTxBufSize = Constants.DEFAULT_CLUSTER_ACK_BUFFER_SIZE;
 
     private volatile boolean listen = false;
     private RxTaskPool pool;

==================================================
SocketReceive.java
index 9a0c39e3cf..92ec94892e 100644
--- a/test/org/apache/catalina/tribes/demos/ChannelCreator.java
+++ b/test/org/apache/catalina/tribes/demos/ChannelCreator.java
@@ -33,6 +33,7 @@ import org.apache.catalina.tribes.group.interceptors.TcpFailureDetector;
 import org.apache.catalina.tribes.group.interceptors.ThroughputInterceptor;
 import org.apache.catalina.tribes.membership.McastService;
 import org.apache.catalina.tribes.membership.MemberImpl;
+import org.apache.catalina.tribes.transport.Constants;
 import org.apache.catalina.tribes.transport.MultiPointSender;
 import org.apache.catalina.tribes.transport.ReceiverBase;
 import org.apache.catalina.tribes.transport.ReplicationTransmitter;
@@ -177,8 +178,8 @@ public class ChannelCreator {
         rx.setMaxThreads(tcpthreadcount);
         rx.setMinThreads(tcpthreadcount);
         rx.getBind();
-        rx.setRxBufSize(43800);
-        rx.setTxBufSize(25188);
+        rx.setRxBufSize(Constants.DEFAULT_CLUSTER_MSG_BUFFER_SIZE);
+        rx.setTxBufSize(Constants.DEFAULT_CLUSTER_ACK_BUFFER_SIZE);
         rx.setAutoBind(autoBind);
 
 
@@ -188,8 +189,8 @@ public class ChannelCreator {
                 transport,true,ChannelCreator.class.getClassLoader()).getConstructor().newInstance();
         sender.setTimeout(acktimeout);
         sender.setMaxRetryAttempts(2);
-        sender.setRxBufSize(43800);
-        sender.setTxBufSize(25188);
+        sender.setRxBufSize(Constants.DEFAULT_CLUSTER_MSG_BUFFER_SIZE);
+        sender.setTxBufSize(Constants.DEFAULT_CLUSTER_ACK_BUFFER_SIZE);
 
         for (Object o : transportProperties.keySet()) {
             String key = (String) o;

==================================================
SocketTribesReceive.java
index fc746c0e06..2cfac6d6ea 100644
--- a/test/org/apache/catalina/tribes/test/transport/SocketReceive.java
+++ b/test/org/apache/catalina/tribes/test/transport/SocketReceive.java
@@ -22,6 +22,8 @@ import java.net.ServerSocket;
 import java.net.Socket;
 import java.text.DecimalFormat;
 
+import org.apache.catalina.tribes.transport.Constants;
+
 public class SocketReceive {
     static long start = 0;
     static double mb = 0;
@@ -38,7 +40,7 @@ public class SocketReceive {
         try (ServerSocket srvSocket = new ServerSocket(9999)) {
             System.out.println("Listening on 9999");
             Socket socket = srvSocket.accept();
-            socket.setReceiveBufferSize(43800);
+            socket.setReceiveBufferSize(Constants.DEFAULT_CLUSTER_MSG_BUFFER_SIZE);
             InputStream in = socket.getInputStream();
             Thread t = new Thread() {
                 @Override

==================================================
SocketValidateReceive.java
index 5534cc093b..9300100656 100644
--- a/test/org/apache/catalina/tribes/test/transport/SocketTribesReceive.java
+++ b/test/org/apache/catalina/tribes/test/transport/SocketTribesReceive.java
@@ -23,6 +23,7 @@ import java.net.Socket;
 import java.text.DecimalFormat;
 
 import org.apache.catalina.tribes.io.XByteBuffer;
+import org.apache.catalina.tribes.transport.Constants;
 
 public class SocketTribesReceive {
     static long start = 0;
@@ -37,7 +38,7 @@ public class SocketTribesReceive {
 
 
     public static void main(String[] args) throws Exception {
-        int size = 43800;
+        int size = Constants.DEFAULT_CLUSTER_MSG_BUFFER_SIZE;
         if (args.length > 0 ) {
             try {
                 size = Integer.parseInt(args[0]);
@@ -45,7 +46,7 @@ public class SocketTribesReceive {
                 /* Ignore */
             }
         }
-        XByteBuffer xbuf = new XByteBuffer(43800,true);
+        XByteBuffer xbuf = new XByteBuffer(Constants.DEFAULT_CLUSTER_MSG_BUFFER_SIZE, true);
         try (ServerSocket srvSocket = new ServerSocket(9999)) {
             System.out.println("Listening on 9999");
             Socket socket = srvSocket.accept();

==================================================
