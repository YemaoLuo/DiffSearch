5d45badf474b4b2d561ee05cbcc626e9452b6034
==================================================
javadoc: Use real @return tags instead of textual
==================================================
Felix Schumacher
==================================================
Wed Oct 14 16:49:29 2015 +0000
==================================================
Role.java
javadoc: Use real @return tags instead of textual
description, only. Add missing @param tags.


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1708649 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Server.java
index ac7c78ffff..ee18e68869 100644
--- a/java/org/apache/catalina/Role.java
+++ b/java/org/apache/catalina/Role.java
@@ -36,7 +36,7 @@ public interface Role extends Principal {
 
 
     /**
-     * Return the description of this role.
+     * @return the description of this role.
      */
     public String getDescription();
 
@@ -50,7 +50,7 @@ public interface Role extends Principal {
 
 
     /**
-     * Return the role name of this role, which must be unique
+     * @return the role name of this role, which must be unique
      * within the scope of a {@link UserDatabase}.
      */
     public String getRolename();
@@ -66,7 +66,7 @@ public interface Role extends Principal {
 
 
     /**
-     * Return the {@link UserDatabase} within which this Role is defined.
+     * @return the {@link UserDatabase} within which this Role is defined.
      */
     public UserDatabase getUserDatabase();
 

==================================================
Service.java
index d2a37279a4..9eaa8b3e2d 100644
--- a/java/org/apache/catalina/Server.java
+++ b/java/org/apache/catalina/Server.java
@@ -51,7 +51,7 @@ public interface Server extends Lifecycle {
     // ------------------------------------------------------------- Properties
 
     /**
-     * Return the global naming resources.
+     * @return the global naming resources.
      */
     public NamingResourcesImpl getGlobalNamingResources();
 
@@ -66,13 +66,13 @@ public interface Server extends Lifecycle {
 
 
     /**
-     * Return the global naming resources context.
+     * @return the global naming resources context.
      */
     public javax.naming.Context getGlobalNamingContext();
 
 
     /**
-     * Return the port number we listen to for shutdown commands.
+     * @return the port number we listen to for shutdown commands.
      */
     public int getPort();
 
@@ -86,7 +86,7 @@ public interface Server extends Lifecycle {
 
 
     /**
-     * Return the address on which we listen to for shutdown commands.
+     * @return the address on which we listen to for shutdown commands.
      */
     public String getAddress();
 
@@ -100,7 +100,7 @@ public interface Server extends Lifecycle {
 
 
     /**
-     * Return the shutdown command string we are waiting for.
+     * @return the shutdown command string we are waiting for.
      */
     public String getShutdown();
 
@@ -114,7 +114,7 @@ public interface Server extends Lifecycle {
 
 
     /**
-     * Return the parent class loader for this component. If not set, return
+     * @return the parent class loader for this component. If not set, return
      * {@link #getCatalina()} {@link Catalina#getParentClassLoader()}. If
      * catalina has not been set, return the system class loader.
      */
@@ -130,18 +130,20 @@ public interface Server extends Lifecycle {
 
 
     /**
-     * Return the outer Catalina startup/shutdown component if present.
+     * @return the outer Catalina startup/shutdown component if present.
      */
     public Catalina getCatalina();
 
     /**
      * Set the outer Catalina startup/shutdown component if present.
+     *
+     * @param catalina the outer Catalina component
      */
     public void setCatalina(Catalina catalina);
 
 
     /**
-     * Obtain the configured base (instance) directory. Note that home and base
+     * @return the configured base (instance) directory. Note that home and base
      * may be the same (and are by default). If this is not set the value
      * returned by {@link #getCatalinaHome()} will be used.
      */
@@ -150,12 +152,14 @@ public interface Server extends Lifecycle {
     /**
      * Set the configured base (instance) directory. Note that home and base
      * may be the same (and are by default).
+     *
+     * @param catalinaBase the configured base directory
      */
     public void setCatalinaBase(File catalinaBase);
 
 
     /**
-     * Obtain the configured home (binary) directory. Note that home and base
+     * @return the configured home (binary) directory. Note that home and base
      * may be the same (and are by default).
      */
     public File getCatalinaHome();
@@ -163,6 +167,8 @@ public interface Server extends Lifecycle {
     /**
      * Set the configured home (binary) directory. Note that home and base
      * may be the same (and are by default).
+     *
+     * @param catalinaHome the configured home directory
      */
     public void setCatalinaHome(File catalinaHome);
 
@@ -185,16 +191,16 @@ public interface Server extends Lifecycle {
 
 
     /**
-     * Return the specified Service (if it exists); otherwise return
-     * <code>null</code>.
+     * Find the specified Service
      *
      * @param name Name of the Service to be returned
+     * @return the specified Service, or <code>null</code> if none exists.
      */
     public Service findService(String name);
 
 
     /**
-     * Return the set of Services defined within this Server.
+     * @return the set of Services defined within this Server.
      */
     public Service[] findServices();
 
@@ -209,7 +215,7 @@ public interface Server extends Lifecycle {
 
 
     /**
-     * Obtain the token necessary for operations on the associated JNDI naming
+     * @return the token necessary for operations on the associated JNDI naming
      * context.
      */
     public Object getNamingToken();

==================================================
