e2d5a040b962a904db5264b3cb3282c6b05f823c
==================================================
Remove legacy NIO double close
==================================================
remm remm@apache.org
==================================================
Wed May 22 00:43:09 2019 +0200
==================================================
NioChannel.java
Remove legacy NIO double close

Closing the socket is not necessary. I found information on Java 1.4, 5
and 6 having possible issues that needed the socket close, but this is
now fixed. NIO2 from Java 7 doesn't give the user a choice as its
channel doesn't expose the socket to avoid abuse and bad practices.


==================================================
NioEndpoint.java
index 9489b72068..d3f27664f5 100644
--- a/java/org/apache/tomcat/util/net/NioChannel.java
+++ b/java/org/apache/tomcat/util/net/NioChannel.java
@@ -40,11 +40,10 @@ public class NioChannel implements ByteChannel, ScatteringByteChannel, Gathering
 
     protected static final ByteBuffer emptyBuf = ByteBuffer.allocate(0);
 
+    protected final SocketBufferHandler bufHandler;
     protected SocketChannel sc = null;
     protected NioSocketWrapper socketWrapper = null;
 
-    protected final SocketBufferHandler bufHandler;
-
     public NioChannel(SocketChannel channel, SocketBufferHandler bufHandler) {
         this.sc = channel;
         this.bufHandler = bufHandler;
@@ -102,7 +101,6 @@ public class NioChannel implements ByteChannel, ScatteringByteChannel, Gathering
      */
     @Override
     public void close() throws IOException {
-        sc.socket().close();
         sc.close();
     }
 
@@ -114,7 +112,9 @@ public class NioChannel implements ByteChannel, ScatteringByteChannel, Gathering
      * @throws IOException If closing the secure channel fails.
      */
     public void close(boolean force) throws IOException {
-        if (isOpen() || force ) close();
+        if (isOpen() || force) {
+            close();
+        }
     }
 
     /**

==================================================
