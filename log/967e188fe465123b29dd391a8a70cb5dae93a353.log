967e188fe465123b29dd391a8a70cb5dae93a353
==================================================
Rename
==================================================
Mark Thomas
==================================================
Thu Jan 15 10:49:25 2015 +0000
==================================================
AbstractHttp11Processor.java
Rename

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1652042 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http11AprProcessor.java
index 5c3521083b..0f6bd439af 100644
--- a/java/org/apache/coyote/http11/AbstractHttp11Processor.java
+++ b/java/org/apache/coyote/http11/AbstractHttp11Processor.java
@@ -72,7 +72,7 @@ public abstract class AbstractHttp11Processor<S> extends AbstractProcessor<S> {
     /**
      * Input.
      */
-    protected AbstractInputBuffer inputBuffer;
+    protected Http11InputBuffer inputBuffer;
 
 
     /**
@@ -615,7 +615,7 @@ public abstract class AbstractHttp11Processor<S> extends AbstractProcessor<S> {
      * Exposes input buffer to super class to allow better code re-use.
      * @return  The input buffer used by the processor.
      */
-    protected AbstractInputBuffer getInputBuffer() {
+    protected Http11InputBuffer getInputBuffer() {
         return inputBuffer;
     }
 
@@ -774,7 +774,7 @@ public abstract class AbstractHttp11Processor<S> extends AbstractProcessor<S> {
             InputFilter savedBody = new SavedRequestInputFilter(body);
             savedBody.setRequest(request);
 
-            AbstractInputBuffer internalBuffer = (AbstractInputBuffer) request.getInputBuffer();
+            Http11InputBuffer internalBuffer = (Http11InputBuffer) request.getInputBuffer();
             internalBuffer.addActiveFilter(savedBody);
             break;
         }

==================================================
Http11InputBuffer.java
index e853fae5b5..b6602cbccc 100644
--- a/java/org/apache/coyote/http11/Http11AprProcessor.java
+++ b/java/org/apache/coyote/http11/Http11AprProcessor.java
@@ -58,7 +58,7 @@ public class Http11AprProcessor extends AbstractHttp11Processor<Long> {
 
         super(endpoint);
 
-        inputBuffer = new AbstractInputBuffer(request, headerBufferSize);
+        inputBuffer = new Http11InputBuffer(request, headerBufferSize);
         request.setInputBuffer(getInputBuffer());
 
         outputBuffer = new Http11OutputBuffer(response, headerBufferSize);

==================================================
Http11Nio2Processor.java
similarity index 99%
rename from java/org/apache/coyote/http11/AbstractInputBuffer.java
rename to java/org/apache/coyote/http11/Http11InputBuffer.java
index 8d474609a2..97ce32f53c 100644
--- a/java/org/apache/coyote/http11/AbstractInputBuffer.java
+++ b/java/org/apache/coyote/http11/Http11InputBuffer.java
@@ -37,16 +37,16 @@ import org.apache.tomcat.util.res.StringManager;
  *
  * <S>  The type of socket used by the underlying I/O implementation
  */
-public class AbstractInputBuffer implements InputBuffer {
+public class Http11InputBuffer implements InputBuffer {
 
     // -------------------------------------------------------------- Constants
 
-    private static final Log log = LogFactory.getLog(AbstractInputBuffer.class);
+    private static final Log log = LogFactory.getLog(Http11InputBuffer.class);
 
     /**
      * The string manager for this package.
      */
-    protected static final StringManager sm = StringManager.getManager(AbstractInputBuffer.class);
+    protected static final StringManager sm = StringManager.getManager(Http11InputBuffer.class);
 
 
     protected static final boolean[] HTTP_TOKEN_CHAR = new boolean[128];
@@ -207,7 +207,7 @@ public class AbstractInputBuffer implements InputBuffer {
 
     // ----------------------------------------------------------- Constructors
 
-    public AbstractInputBuffer(Request request, int headerBufferSize) {
+    public Http11InputBuffer(Request request, int headerBufferSize) {
 
         this.request = request;
         headers = request.getMimeHeaders();

==================================================
Http11NioProcessor.java
index bbcd0ddeef..ea3b74b5b4 100644
--- a/java/org/apache/coyote/http11/Http11Nio2Processor.java
+++ b/java/org/apache/coyote/http11/Http11Nio2Processor.java
@@ -62,7 +62,7 @@ public class Http11Nio2Processor extends AbstractHttp11Processor<Nio2Channel> {
 
         super(endpoint);
 
-        inputBuffer = new AbstractInputBuffer(request, maxHttpHeaderSize);
+        inputBuffer = new Http11InputBuffer(request, maxHttpHeaderSize);
         request.setInputBuffer(getInputBuffer());
 
         outputBuffer = new Http11OutputBuffer(response, maxHttpHeaderSize);

==================================================
