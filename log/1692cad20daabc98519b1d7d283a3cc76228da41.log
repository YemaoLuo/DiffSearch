1692cad20daabc98519b1d7d283a3cc76228da41
==================================================
Minor clean-up. Remove an unnecessary declared exception
==================================================
Mark Thomas
==================================================
Mon Jan 18 16:07:08 2016 +0000
==================================================
AbstractProtocol.java
Minor clean-up. Remove an unnecessary declared exception

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1725299 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AbstractAjpProtocol.java
index 9ae3cada31..c7d0ddc46d 100644
--- a/java/org/apache/coyote/AbstractProtocol.java
+++ b/java/org/apache/coyote/AbstractProtocol.java
@@ -16,7 +16,6 @@
  */
 package org.apache.coyote;
 
-import java.io.IOException;
 import java.net.InetAddress;
 import java.nio.ByteBuffer;
 import java.util.Collections;
@@ -434,7 +433,7 @@ public abstract class AbstractProtocol<S> implements ProtocolHandler,
 
     protected abstract Processor createUpgradeProcessor(
             SocketWrapperBase<?> socket, ByteBuffer leftoverInput,
-            UpgradeToken upgradeToken) throws IOException;
+            UpgradeToken upgradeToken);
 
 
     // ----------------------------------------------------- JMX related methods

==================================================
AbstractHttp11Protocol.java
index c7613ad597..4aee88d05b 100644
--- a/java/org/apache/coyote/ajp/AbstractAjpProtocol.java
+++ b/java/org/apache/coyote/ajp/AbstractAjpProtocol.java
@@ -16,7 +16,6 @@
  */
 package org.apache.coyote.ajp;
 
-import java.io.IOException;
 import java.nio.ByteBuffer;
 
 import org.apache.coyote.AbstractProtocol;
@@ -172,8 +171,8 @@ public abstract class AbstractAjpProtocol<S> extends AbstractProtocol<S> {
 
     @Override
     protected Processor createUpgradeProcessor(SocketWrapperBase<?> socket,
-            ByteBuffer leftoverInput, UpgradeToken upgradeToken) throws IOException {
-        throw new IOException(sm.getString("ajpprotocol.noUpgradeHandler",
+            ByteBuffer leftoverInput, UpgradeToken upgradeToken) {
+        throw new IllegalStateException(sm.getString("ajpprotocol.noUpgradeHandler",
                 upgradeToken.getHttpUpgradeHandler().getClass().getName()));
     }
 }

==================================================
