e041c52e5f1c2bec68cd56ab4d568b97cc5ebb03
==================================================
Refactor to expose useful utility method to other tests
==================================================
Mark Thomas
==================================================
Tue Sep 22 19:27:10 2015 +0000
==================================================
TestHostConfigAutomaticDeployment.java
Refactor to expose useful utility method to other tests

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1704702 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TomcatBaseTest.java
index 96d161eb41..0077db3868 100644
--- a/test/org/apache/catalina/startup/TestHostConfigAutomaticDeployment.java
+++ b/test/org/apache/catalina/startup/TestHostConfigAutomaticDeployment.java
@@ -20,11 +20,7 @@ import java.io.File;
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.nio.charset.StandardCharsets;
-import java.nio.file.FileVisitResult;
-import java.nio.file.FileVisitor;
 import java.nio.file.Files;
-import java.nio.file.Path;
-import java.nio.file.attribute.BasicFileAttributes;
 
 import org.junit.Assert;
 import org.junit.Test;
@@ -1755,44 +1751,6 @@ public class TestHostConfigAutomaticDeployment extends TomcatBaseTest {
         return xml;
     }
 
-    private static void recurrsiveCopy(final Path src, final Path dest)
-            throws IOException {
-
-        Files.walkFileTree(src, new FileVisitor<Path>() {
-            @Override
-            public FileVisitResult preVisitDirectory(Path dir,
-                    BasicFileAttributes attrs) throws IOException {
-                Files.copy(dir, dest.resolve(src.relativize(dir)));
-                return FileVisitResult.CONTINUE;
-            }
-
-            @Override
-            public FileVisitResult visitFile(Path file,
-                    BasicFileAttributes attrs) throws IOException {
-                Path destPath = dest.resolve(src.relativize(file));
-                Files.copy(file, destPath);
-                // Make sure that HostConfig thinks all newly copied files have
-                // been modified.
-                destPath.toFile().setLastModified(
-                        System.currentTimeMillis() - 2 * HostConfig.FILE_MODIFICATION_RESOLUTION_MS);
-                return FileVisitResult.CONTINUE;
-            }
-
-            @Override
-            public FileVisitResult visitFileFailed(Path file, IOException ioe)
-                    throws IOException {
-                throw ioe;
-            }
-
-            @Override
-            public FileVisitResult postVisitDirectory(Path dir, IOException ioe)
-                    throws IOException {
-                // NO-OP
-                return FileVisitResult.CONTINUE;
-            }});
-    }
-
-
     private static class StateTracker implements LifecycleListener {
 
         private StringBuilder stateHistory = new StringBuilder();

==================================================
