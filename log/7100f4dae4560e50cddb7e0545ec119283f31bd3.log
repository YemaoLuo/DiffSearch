7100f4dae4560e50cddb7e0545ec119283f31bd3
==================================================
Javadoc and remove unnecessary code
==================================================
Mark Emlyn
==================================================
Thu Dec 27 18:08:14 2012 +0000
==================================================
DefaultServerConfiguration.java
Javadoc and remove unnecessary code

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1426279 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ServerEndpointConfiguration.java
index 861e9a05f0..7a87ac1a43 100644
--- a/java/javax/websocket/server/DefaultServerConfiguration.java
+++ b/java/javax/websocket/server/DefaultServerConfiguration.java
@@ -26,6 +26,9 @@ import javax.websocket.Endpoint;
 import javax.websocket.Extension;
 import javax.websocket.HandshakeResponse;
 
+/**
+ * Provides the default implementation for WebSocket server endpoints.
+ */
 public class DefaultServerConfiguration implements ServerEndpointConfiguration {
 
     private Class<? extends Endpoint> endpointClass;
@@ -101,6 +104,11 @@ public class DefaultServerConfiguration implements ServerEndpointConfiguration {
         return null;
     }
 
+    /**
+     * {@inheritDoc}
+     *
+     * The default implementation accepts all connection requests.
+     */
     @Override
     public boolean checkOrigin(String originHeaderValue) {
         return true;

==================================================
PojoEndpointConfiguration.java
index 5276ffc02e..523094e0cc 100644
--- a/java/javax/websocket/server/ServerEndpointConfiguration.java
+++ b/java/javax/websocket/server/ServerEndpointConfiguration.java
@@ -32,11 +32,24 @@ public interface ServerEndpointConfiguration extends EndpointConfiguration {
 
     List<Extension> getNegotiatedExtensions(List<Extension> requestedExtensions);
 
+    /**
+     * Enables the WebSocket endpoint to acceot or reject connections based on
+     * the HTTP origin header.
+     *
+     * @param originHeaderValue The HTTP origin header provided by the client.
+     *
+     * @return  <code>true</code> if the request should be accepted otherwise
+     *          <code>false</false>
+     */
     boolean checkOrigin(String originHeaderValue);
 
     boolean matchesURI(URI uri);
 
     void modifyHandshake(HandshakeRequest request, HandshakeResponse response);
 
+    /**
+     * Returns the path at which this WebSocket server endpoint has been
+     * registered. It may be a path or a level 0 URI template.
+     */
     String getPath();
 }

==================================================
