18c0edc3cceb36600f2e0543d954d5aeaf7e4793
==================================================
https://issues.apache.org/bugzilla/show_bug.cgi?id=48137
==================================================
Mark Emlyn
==================================================
Thu Nov 5 19:08:42 2009 +0000
==================================================
Cluster.java
https://issues.apache.org/bugzilla/show_bug.cgi?id=48137
Fix javadoc typos
Patch provided by qingyang.xu

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@833130 13f79535-47bb-0310-9956-ffa450edef68



==================================================
CometEvent.java
index 13e879fe98..6a594ce295 100644
--- a/java/org/apache/catalina/Cluster.java
+++ b/java/org/apache/catalina/Cluster.java
@@ -105,7 +105,7 @@ public interface Cluster {
     /**
      * Register a manager with the cluster. If the cluster is not responsible 
      * for creating a manager, then the container will at least notify the 
-     * cluster that this mananger is participating in the cluster.
+     * cluster that this manager is participating in the cluster.
      * @param manager Manager
      */
     public void registerManager(Manager manager);

==================================================
CometProcessor.java
index acaff982c6..341a57e614 100644
--- a/java/org/apache/catalina/CometEvent.java
+++ b/java/org/apache/catalina/CometEvent.java
@@ -40,7 +40,7 @@ public interface CometEvent {
      *  fields using the request and response objects. Between the end of the processing 
      *  of this event, and the beginning of the processing of the end or error events,
      *  it is possible to use the response object to write data on the open connection.
-     *  Note that the response object and depedent OutputStream and Writer are still 
+     *  Note that the response object and dependent OutputStream and Writer are still 
      *  not synchronized, so when they are accessed by multiple threads, 
      *  synchronization is mandatory. After processing the initial event, the request 
      *  is considered to be committed.
@@ -115,7 +115,7 @@ public interface CometEvent {
      * Ends the Comet session. This signals to the container that 
      * the container wants to end the comet session. This will send back to the
      * client a notice that the server has no more data to send as part of this
-     * request. The servlet should perform any needed cleanup as if it had recieved
+     * request. The servlet should perform any needed cleanup as if it had received
      * an END or ERROR event. 
      * 
      * @throws IOException if an IO exception occurs

==================================================
Context.java
index 4536a82099..38e9f3bc34 100644
--- a/java/org/apache/catalina/CometProcessor.java
+++ b/java/org/apache/catalina/CometProcessor.java
@@ -25,7 +25,7 @@ import javax.servlet.Servlet;
 
 /**
  * This interface should be implemented by servlets which would like to handle
- * asynchronous IO, recieving events when data is available for reading, and
+ * asynchronous IO, receiving events when data is available for reading, and
  * being able to output data without the need for being invoked by the container.
  * Note: When this interface is implemented, the service method of the servlet will
  * never be called, and will be replaced with a begin event.

==================================================
Host.java
index b8478f4ac4..46852d857b 100644
--- a/java/org/apache/catalina/Context.java
+++ b/java/org/apache/catalina/Context.java
@@ -965,7 +965,7 @@ public interface Context extends Container {
 
 
     /**
-     * Remove the tag library location forthe specified tag library URI.
+     * Remove the tag library location for the specified tag library URI.
      *
      * @param uri URI, relative to the web.xml file
      */
@@ -1010,7 +1010,7 @@ public interface Context extends Container {
 
     /**
      * Get the server.xml <context> attribute's xmlNamespaceAware.
-     * @return true if namespace awarenes is enabled.
+     * @return true if namespace awareness is enabled.
      *
      */
     public boolean getXmlNamespaceAware();
@@ -1062,7 +1062,7 @@ public interface Context extends Container {
 
     /**
      * Get the server.xml &lt;host&gt; attribute's xmlNamespaceAware.
-     * @return true if namespace awarenes is enabled.
+     * @return true if namespace awareness is enabled.
      */
     public boolean getTldNamespaceAware();
 

==================================================
Pipeline.java
index 296839f437..b205de90ff 100644
--- a/java/org/apache/catalina/Host.java
+++ b/java/org/apache/catalina/Host.java
@@ -102,7 +102,7 @@ public interface Host extends Container {
 
     /**
      * Return the value of the auto deploy flag.  If true, it indicates that 
-     * this host's child webapps should be discovred and automatically 
+     * this host's child webapps should be discovered and automatically 
      * deployed dynamically.
      */
     public boolean getAutoDeploy();
@@ -134,7 +134,7 @@ public interface Host extends Container {
         
     /**
      * Return the value of the deploy on startup flag.  If true, it indicates 
-     * that this host's child webapps should be discovred and automatically 
+     * that this host's child webapps should be discovered and automatically 
      * deployed.
      */
     public boolean getDeployOnStartup();
@@ -168,7 +168,7 @@ public interface Host extends Container {
 
     /**
      * Get the server.xml &lt;host&gt; attribute's xmlNamespaceAware.
-     * @return true if namespace awarenes is enabled.
+     * @return true if namespace awareness is enabled.
      *
      */
     public boolean getXmlNamespaceAware();

==================================================
BaseRedirectorHelperTask.java
index d457115d5d..cfcf303d6f 100644
--- a/java/org/apache/catalina/Pipeline.java
+++ b/java/org/apache/catalina/Pipeline.java
@@ -54,7 +54,7 @@ public interface Pipeline {
 
     /**
      * <p>Set the Valve instance that has been distinguished as the basic
-     * Valve for this Pipeline (if any).  Prioer to setting the basic Valve,
+     * Valve for this Pipeline (if any).  Prior to setting the basic Valve,
      * the Valve's <code>setContainer()</code> will be called, if it
      * implements <code>Contained</code>, with the owning Container as an
      * argument.  The method may throw an <code>IllegalArgumentException</code>
@@ -84,7 +84,7 @@ public interface Pipeline {
      *
      * @exception IllegalArgumentException if this Container refused to
      *  accept the specified Valve
-     * @exception IllegalArgumentException if the specifie Valve refuses to be
+     * @exception IllegalArgumentException if the specified Valve refuses to be
      *  associated with this Container
      * @exception IllegalStateException if the specified Valve is already
      *  associated with a different Container

==================================================
JKStatusUpdateTask.java
index e14ac37473..326a70e4bc 100644
--- a/java/org/apache/catalina/ant/BaseRedirectorHelperTask.java
+++ b/java/org/apache/catalina/ant/BaseRedirectorHelperTask.java
@@ -93,7 +93,7 @@ public abstract class BaseRedirectorHelperTask extends Task {
 
     /** 
      * Flag which indicates that, if redirected, output should also be 
-     * always sent to the log. Default is that otput is sent only to
+     * always sent to the log. Default is that output is sent only to
      * redirected streams.
      */
     protected boolean alwaysLog = false;
@@ -271,7 +271,7 @@ public abstract class BaseRedirectorHelperTask extends Task {
         }
         /*
          * Due to depends chain, Ant could call the Task more than once,
-         * this is to prevent that we attempt to reuse the previuosly 
+         * this is to prevent that we attempt to reuse the previously 
          * closed Streams.
          */
         redirectOutStream = null;
@@ -346,7 +346,7 @@ public abstract class BaseRedirectorHelperTask extends Task {
   
     /**
      * Handles output with ERR priority to error stream and all other
-     * pritorities to output stream.
+     * priorities to output stream.
      *
      * @param output The output to log. Should not be <code>null</code>.
      */
@@ -360,7 +360,7 @@ public abstract class BaseRedirectorHelperTask extends Task {
   
     /**
      * Handles output with ERR priority to error stream and all other
-     * pritorities to output stream, then flushes the stream.
+     * priorities to output stream, then flushes the stream.
      *
      * @param output The output to log. Should not be <code>null</code>.
      */

==================================================
JMXAccessorQueryTask.java
index d59e9663c1..cab3d8972e 100644
--- a/java/org/apache/catalina/ant/JKStatusUpdateTask.java
+++ b/java/org/apache/catalina/ant/JKStatusUpdateTask.java
@@ -352,7 +352,7 @@ public class JKStatusUpdateTask extends AbstractCatalinaTask {
     }
 
     /**
-     * check correct lb and worker pararmeter
+     * check correct lb and worker parameter
      */
     protected void checkParameter() {
         if (worker == null) {

==================================================
JMXAccessorSetTask.java
index 4213888cfc..399c7e49fd 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorQueryTask.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorQueryTask.java
@@ -50,8 +50,8 @@ import org.apache.tools.ant.BuildException;
  * </pre>
  * with attribute <em>attributebinding="true"</em> you can get 
  * all attributes also from result objects.<br/>
- * The poperty manager.lenght show the size of the result 
- * and with manager.[0..lenght].name the 
+ * The property manager.lenght show the size of the result 
+ * and with manager.[0..length].name the 
  * resulted ObjectNames are saved. 
  * These tasks require Ant 1.6 or later interface.
  *
@@ -125,7 +125,7 @@ public class JMXAccessorQueryTask extends JMXAccessorTask {
        
     /**
      * Call Mbean server for some mbeans with same domain, attributes.
-     *  with <em>attributebindung=true</em> you can save all attributes from all found objects
+     *  with <em>attributebinding=true</em> you can save all attributes from all found objects
      * as your ant properties
      * @param jmxServerConnection
      * @param qry

==================================================
JMXAccessorTask.java
index 581e448066..ef7d8fe642 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorSetTask.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorSetTask.java
@@ -197,7 +197,7 @@ public class JMXAccessorSetTask extends JMXAccessorTask {
 
 
     /**
-     * Get MBean Attriute from Mbean Server
+     * Get MBean Attribute from Mbean Server
      * @param jmxServerConnection
      * @param name
      * @param attribute

==================================================
AuthenticatorBase.java
index e6bd419b41..70c7b09f4a 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorTask.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorTask.java
@@ -604,7 +604,7 @@ public class JMXAccessorTask extends BaseRedirectorHelperTask {
      * an array and isSeparateArrayResults is true, resultproperty used as
      * prefix (<code>resultproperty.0-array.length</code> and store the
      * result array length at <code>resultproperty.length</code>. Other
-     * option is that you delemit your result with a delimiter
+     * option is that you delimit your result with a delimiter
      * (java.util.StringTokenizer is used).
      * 
      * @param propertyPrefix

==================================================
FormAuthenticator.java
index 725d0ab7e8..f85e39b5c9 100644
--- a/java/org/apache/catalina/authenticator/AuthenticatorBase.java
+++ b/java/org/apache/catalina/authenticator/AuthenticatorBase.java
@@ -57,7 +57,7 @@ import org.apache.juli.logging.LogFactory;
  * Basic implementation of the <b>Valve</b> interface that enforces the
  * <code>&lt;security-constraint&gt;</code> elements in the web application
  * deployment descriptor.  This functionality is implemented as a Valve
- * so that it can be ommitted in environments that do not require these
+ * so that it can be omitted in environments that do not require these
  * features.  Individual implementations of each supported authentication
  * method can subclass this base class as required.
  * <p>

==================================================
SingleSignOn.java
index 5155055227..b67c50632a 100644
--- a/java/org/apache/catalina/authenticator/FormAuthenticator.java
+++ b/java/org/apache/catalina/authenticator/FormAuthenticator.java
@@ -345,7 +345,7 @@ public class FormAuthenticator
 
     /**
      * Does this request match the saved one (so that it must be the redirect
-     * we signalled after successful authentication?
+     * we signaled after successful authentication?
      *
      * @param request The request to be verified
      */
@@ -409,7 +409,7 @@ public class FormAuthenticator
         Iterator<String> names = saved.getHeaderNames();
         while (names.hasNext()) {
             String name = names.next();
-            // The browser isn't expecting this conditional reposponse now.
+            // The browser isn't expecting this conditional response now.
             // Assuming that it can quietly recover from an unexpected 412.
             // BZ 43687
             if(!("If-Modified-Since".equalsIgnoreCase(name) ||

==================================================
Connector.java
index 239810fc9c..ea0805bb1c 100644
--- a/java/org/apache/catalina/authenticator/SingleSignOn.java
+++ b/java/org/apache/catalina/authenticator/SingleSignOn.java
@@ -44,7 +44,7 @@ import org.apache.catalina.valves.ValveBase;
 /**
  * A <strong>Valve</strong> that supports a "single sign on" user experience,
  * where the security identity of a user who successfully authenticates to one
- * web application is propogated to other web applications in the same
+ * web application is propagated to other web applications in the same
  * security domain.  For successful use, the following requirements must
  * be met:
  * <ul>

==================================================
CoyoteAdapter.java
index 14d11d80c2..fe7be66f16 100644
--- a/java/org/apache/catalina/connector/Connector.java
+++ b/java/org/apache/catalina/connector/Connector.java
@@ -156,7 +156,7 @@ public class Connector
 
 
     /**
-     * The server port to which we should pretent requests to this Connector
+     * The server port to which we should pretend requests to this Connector
      * were directed.  This is useful when operating Tomcat behind a proxy
      * server, so that redirects get constructed accurately.  If not specified,
      * the port number specified by the <code>port</code> property is used.

==================================================
CoyoteInputStream.java
index 1ae3408d37..2aabdc7d6f 100644
--- a/java/org/apache/catalina/connector/CoyoteAdapter.java
+++ b/java/org/apache/catalina/connector/CoyoteAdapter.java
@@ -622,7 +622,7 @@ public class CoyoteAdapter
 
 
     /**
-     * Look for SSL sesison ID if required. Only look for SSL Session ID if it
+     * Look for SSL session ID if required. Only look for SSL Session ID if it
      * is the only tracking method enabled.
      */
     protected void parseSessionSslId(Request request) {

==================================================
CoyoteReader.java
index 088ad93028..f230148db6 100644
--- a/java/org/apache/catalina/connector/CoyoteInputStream.java
+++ b/java/org/apache/catalina/connector/CoyoteInputStream.java
@@ -209,7 +209,7 @@ public class CoyoteInputStream
     /** 
      * Close the stream
      * Since we re-cycle, we can't allow the call to super.close()
-     * which would permantely disable us.
+     * which would permanently disable us.
      */
     @Override
     public void close() throws IOException {

==================================================
OutputBuffer.java
index 6ef1fa7ba1..eb24dd83d5 100644
--- a/java/org/apache/catalina/connector/CoyoteReader.java
+++ b/java/org/apache/catalina/connector/CoyoteReader.java
@@ -23,7 +23,7 @@ import java.io.IOException;
 
 
 /**
- * Coyote implementation of the buffred reader.
+ * Coyote implementation of the buffered reader.
  * 
  * @author Remy Maucherat
  */

==================================================
Request.java
index 226f1ca829..0851163946 100644
--- a/java/org/apache/catalina/connector/OutputBuffer.java
+++ b/java/org/apache/catalina/connector/OutputBuffer.java
@@ -35,7 +35,7 @@ import org.apache.tomcat.util.buf.C2BConverter;
 /**
  * The buffer used by Tomcat response. This is a derivative of the Tomcat 3.3
  * OutputBuffer, with the removal of some of the state handling (which in 
- * Coyote is mostly the Processor's responsability).
+ * Coyote is mostly the Processor's responsibility).
  *
  * @author Costin Manolache
  * @author Remy Maucherat

==================================================
RequestFacade.java
index b58f4ac0f8..32de3d2cb3 100644
--- a/java/org/apache/catalina/connector/Request.java
+++ b/java/org/apache/catalina/connector/Request.java
@@ -189,7 +189,7 @@ public class Request
 
 
     /**
-     * The preferred Locales assocaited with this Request.
+     * The preferred Locales associated with this Request.
      */
     protected ArrayList<Locale> locales = new ArrayList<Locale>();
 
@@ -689,7 +689,7 @@ public class Request
     /**
      * Set the URI converter.
      * 
-     * @param URIConverter the new URI connverter
+     * @param URIConverter the new URI converter
      */
     protected void setURIConverter(B2CConverter URIConverter) {
         this.URIConverter = URIConverter;
@@ -1379,7 +1379,7 @@ public class Request
                 listener.attributeRemoved(event);
             } catch (Throwable t) {
                 context.getLogger().error(sm.getString("coyoteRequest.attributeEvent"), t);
-                // Error valve will pick this execption up and display it to user
+                // Error valve will pick this exception up and display it to user
                 attributes.put( Globals.EXCEPTION_ATTR, t );
             }
         }
@@ -1464,7 +1464,7 @@ public class Request
                 }
             } catch (Throwable t) {
                 context.getLogger().error(sm.getString("coyoteRequest.attributeEvent"), t);
-                // Error valve will pick this execption up and display it to user
+                // Error valve will pick this exception up and display it to user
                 attributes.put( Globals.EXCEPTION_ATTR, t );
             }
         }
@@ -1838,7 +1838,7 @@ public class Request
 
 
     /**
-     * Set the set of cookies recieved with this Request.
+     * Set the set of cookies received with this Request.
      */
     public void setCookies(Cookie[] cookies) {
 
@@ -2189,7 +2189,7 @@ public class Request
         if (userPrincipal == null)
             return (false);
 
-        // Identify the Realm we will use for checking role assignmenets
+        // Identify the Realm we will use for checking role assignments
         if (context == null)
             return (false);
         Realm realm = context.getRealm();

==================================================
Response.java
index 2b93dceed6..3d8cad8d41 100644
--- a/java/org/apache/catalina/connector/RequestFacade.java
+++ b/java/org/apache/catalina/connector/RequestFacade.java
@@ -394,7 +394,7 @@ public class RequestFacade implements HttpServletRequest {
 
         /*
          * Clone the returned array only if there is a security manager
-         * in place, so that performance won't suffer in the nonsecure case
+         * in place, so that performance won't suffer in the non-secure case
          */
         if (SecurityUtil.isPackageProtectionEnabled()){
             ret = AccessController.doPrivileged(
@@ -616,7 +616,7 @@ public class RequestFacade implements HttpServletRequest {
 
         /*
          * Clone the returned array only if there is a security manager
-         * in place, so that performance won't suffer in the nonsecure case
+         * in place, so that performance won't suffer in the non-secure case
          */
         if (SecurityUtil.isPackageProtectionEnabled()){
             ret = AccessController.doPrivileged(

==================================================
ContextService.java
index 71bbdfe85c..d951e0534f 100644
--- a/java/org/apache/catalina/connector/Response.java
+++ b/java/org/apache/catalina/connector/Response.java
@@ -792,7 +792,7 @@ public class Response
      * of the request. This method must be called prior to reading
      * request parameters or reading input using getReader().
      *
-     * @param charset String containing the name of the chararacter encoding.
+     * @param charset String containing the name of the character encoding.
      */
     public void setCharacterEncoding(String charset) {
 
@@ -971,7 +971,7 @@ public class Response
 
         final StringBuffer sb = new StringBuffer();
         //web application code can receive a IllegalArgumentException 
-        //from the appendCookieValue invokation
+        //from the appendCookieValue invocation
         if (SecurityUtil.isPackageProtectionEnabled()) {
             AccessController.doPrivileged(new PrivilegedAction<Void>() {
                 public Void run(){

==================================================
WebdavFixFilter.java
index 81ec42b6c0..f75dcc9254 100644
--- a/java/org/apache/catalina/deploy/ContextService.java
+++ b/java/org/apache/catalina/deploy/ContextService.java
@@ -172,7 +172,7 @@ public class ContextService extends ResourceBase implements Serializable {
     /**
      * A list of Handlers to use for this service-ref.
      *
-     * The instanciation of the handler have to be done.
+     * The instantiation of the handler have to be done.
      */
     private HashMap<String, ContextHandler> handlers =
         new HashMap<String, ContextHandler>();

==================================================
ClusterSingleSignOn.java
index 9d171b3a76..b1296714e2 100644
--- a/java/org/apache/catalina/filters/WebdavFixFilter.java
+++ b/java/org/apache/catalina/filters/WebdavFixFilter.java
@@ -34,7 +34,7 @@ import javax.servlet.http.HttpServletResponse;
  * include:
  * <ul>
  *   <li>Specifying the port, even if it is port 80, when trying to connect.</li>
- *   <li>Cancelling the first authentication dialog box and then trying to
+ *   <li>Canceling the first authentication dialog box and then trying to
  *       reconnect.</li>
  * </ul>
  * 

==================================================
CollectedInfo.java
index 5b6f659229..0801fc42a6 100644
--- a/java/org/apache/catalina/ha/authenticator/ClusterSingleSignOn.java
+++ b/java/org/apache/catalina/ha/authenticator/ClusterSingleSignOn.java
@@ -37,7 +37,7 @@ import org.apache.catalina.ha.ClusterManager;
 /**
  * A <strong>Valve</strong> that supports a "single sign on" user experience on
  * each nodes of a cluster, where the security identity of a user who successfully
- * authenticates to one web application is propogated to other web applications and
+ * authenticates to one web application is propagated to other web applications and
  * to other nodes cluster in the same security domain.  For successful use, the following
  * requirements must be met:
  * <ul>

==================================================
HeartbeatListener.java
index 1866a0d212..65afb0f5c4 100644
--- a/java/org/apache/catalina/ha/backend/CollectedInfo.java
+++ b/java/org/apache/catalina/ha/backend/CollectedInfo.java
@@ -31,7 +31,7 @@ import org.apache.tomcat.util.modeler.Registry;
 /*
  * Listener to provider informations to mod_heartbeat.c
  * *msg_format = "v=%u&ready=%u&busy=%u"; (message to send).
- * send the muticast merssage using the format...
+ * send the muticast message using the format...
  * what about the bind(IP. port) only IP makes sense (for the moment).
  * BTW:v  = version :-)
  */

==================================================
FarmWarDeployer.java
index bc5bb25923..1ba3fe6c83 100644
--- a/java/org/apache/catalina/ha/backend/HeartbeatListener.java
+++ b/java/org/apache/catalina/ha/backend/HeartbeatListener.java
@@ -29,7 +29,7 @@ import org.apache.juli.logging.LogFactory;
 /*
  * Listener to provider informations to mod_heartbeat.c
  * *msg_format = "v=%u&ready=%u&busy=%u"; (message to send).
- * send the muticast merssage using the format...
+ * send the muticast message using the format...
  * what about the bind(IP. port) only IP makes sense (for the moment).
  * BTW:v  = version :-)
  */

==================================================
FileMessageFactory.java
index 2b5f37c1f8..7d0cd278c0 100644
--- a/java/org/apache/catalina/ha/deploy/FarmWarDeployer.java
+++ b/java/org/apache/catalina/ha/deploy/FarmWarDeployer.java
@@ -445,7 +445,7 @@ public class FarmWarDeployer extends ClusterListener implements ClusterDeployer,
     }
 
     /*
-     * Modifcation from watchDir war detected!
+     * Modification from watchDir war detected!
      * 
      * @see org.apache.catalina.ha.deploy.FileChangeListener#fileModified(java.io.File)
      */
@@ -469,7 +469,7 @@ public class FarmWarDeployer extends ClusterListener implements ClusterDeployer,
     }
 
     /*
-     * War remvoe from watchDir
+     * War remove from watchDir
      * 
      * @see org.apache.catalina.ha.deploy.FileChangeListener#fileRemoved(java.io.File)
      */

==================================================
WarWatcher.java
index 971e11a1da..7e33ca8c08 100644
--- a/java/org/apache/catalina/ha/deploy/FileMessageFactory.java
+++ b/java/org/apache/catalina/ha/deploy/FileMessageFactory.java
@@ -92,7 +92,7 @@ public class FileMessageFactory {
     protected long totalNrOfMessages = 0;
     
     /**
-     * The number of the last message procssed. Message IDs are 1 based.
+     * The number of the last message processed. Message IDs are 1 based.
      */
     protected AtomicLong lastMessageProcessed = new AtomicLong(0);
     

==================================================
DeltaManager.java
index c662e4c519..a40683b5ee 100644
--- a/java/org/apache/catalina/ha/deploy/WarWatcher.java
+++ b/java/org/apache/catalina/ha/deploy/WarWatcher.java
@@ -70,7 +70,7 @@ public class WarWatcher {
     /*--Logic---------------------------------------------------*/
 
     /**
-     * check for modification and send notifcation to listener
+     * check for modification and send notification to listener
      */
     public void check() {
         if (log.isInfoEnabled())

==================================================
DeltaRequest.java
index f3e9ee5d3b..98ff509ae3 100644
--- a/java/org/apache/catalina/ha/session/DeltaManager.java
+++ b/java/org/apache/catalina/ha/session/DeltaManager.java
@@ -396,7 +396,7 @@ public class DeltaManager extends ClusterManagerBase{
     }
 
     /**
-     * Set the maximum number of actives Sessions allowed, or -1 for no limit.
+     * Set the maximum number of active Sessions allowed, or -1 for no limit.
      * 
      * @param max
      *            The new maximum number of sessions
@@ -652,7 +652,7 @@ public class DeltaManager extends ClusterManagerBase{
 
     /**
      * Load sessions from other cluster node.
-     * FIXME replace currently sessions with same id without notifcation.
+     * FIXME replace currently sessions with same id without notification.
      * FIXME SSO handling is not really correct with the session replacement!
      * @exception ClassNotFoundException
      *                if a serialized class cannot be found during the reload
@@ -1257,7 +1257,7 @@ public class DeltaManager extends ClusterManagerBase{
     }
 
     /**
-     * Exipre all find sessions.
+     * Expire all find sessions.
      */
     public void expireAllLocalSessions()
     {

==================================================
DeltaSession.java
index 48f5ca5984..e9d4e3f3ac 100644
--- a/java/org/apache/catalina/ha/session/DeltaRequest.java
+++ b/java/org/apache/catalina/ha/session/DeltaRequest.java
@@ -20,7 +20,7 @@ package org.apache.catalina.ha.session;
 
 /**
  * This class is used to track the series of actions that happens when
- * a request is executed. These actions will then translate into invokations of methods 
+ * a request is executed. These actions will then translate into invocations of methods 
  * on the actual session.
  * This class is NOT thread safe. One DeltaRequest per session
  * @author <a href="mailto:fhanik@apache.org">Filip Hanik</a>

==================================================
JvmRouteBinderValve.java
index c852e51fe5..4a9c573bca 100644
--- a/java/org/apache/catalina/ha/session/DeltaSession.java
+++ b/java/org/apache/catalina/ha/session/DeltaSession.java
@@ -86,7 +86,7 @@ public class DeltaSession extends StandardSession implements Externalizable,Clus
     private transient DeltaRequest deltaRequest = null;
 
     /**
-     * Last time the session was replicatd, used for distributed expiring of
+     * Last time the session was replicated, used for distributed expiring of
      * session
      */
     private transient long lastTimeReplicated = System.currentTimeMillis();

==================================================
SessionMessageImpl.java
index 4f171dde58..754ea7ee12 100644
--- a/java/org/apache/catalina/ha/session/JvmRouteBinderValve.java
+++ b/java/org/apache/catalina/ha/session/JvmRouteBinderValve.java
@@ -54,7 +54,7 @@ import org.apache.catalina.valves.ValveBase;
  * backup cluster node, that answered the request. After the response is
  * delivered to the client, all subsequent client requests will go directly to
  * the backup node. The change of sessionid is also sent to all other cluster
- * nodes. After all that, the session stickyness will work directly to the
+ * nodes. After all that, the session stickiness will work directly to the
  * backup node and the traffic will not go back to the failed node after it is
  * restarted!
  * 
@@ -169,7 +169,7 @@ public class JvmRouteBinderValve extends ValveBase implements ClusterValve, Life
     }
 
     /**
-     * get name of failed reqeust session attribute
+     * get name of failed request session attribute
      * 
      * @param sessionIdAttribute
      *            The sessionIdAttribute to set.
@@ -306,9 +306,9 @@ public class JvmRouteBinderValve extends ValveBase implements ClusterValve, Life
     }
     
     /**
-     * Handle jvmRoute stickyness after tomcat instance failed. After this
+     * Handle jvmRoute stickiness after tomcat instance failed. After this
      * correction a new Cookie send to client with new jvmRoute and the
-     * SessionID change propage to the other cluster nodes.
+     * SessionID change propagate to the other cluster nodes.
      * 
      * @param request current request
      * @param response
@@ -379,7 +379,7 @@ public class JvmRouteBinderValve extends ValveBase implements ClusterValve, Life
             Response response, String sessionId, String newSessionID, Session catalinaSession) {
         lifecycle.fireLifecycleEvent("Before session migration",
                 catalinaSession);
-        // FIXME: setId trigger session Listener, but only chance to registiert manager with correct id!
+        // FIXME: setId trigger session Listener, but only chance to register manager with correct id!
         catalinaSession.setId(newSessionID);
         // FIXME: Why we remove change data from other running request?
         // setId also trigger resetDeltaRequest!!
@@ -388,7 +388,7 @@ public class JvmRouteBinderValve extends ValveBase implements ClusterValve, Life
         changeRequestSessionID(request, response, sessionId, newSessionID);
 
         if (getCluster() != null) {
-            // now sending the change to all other clusternode!
+            // now sending the change to all other clusternodes!
             ClusterManager manager = (ClusterManager)catalinaSession.getManager();
             sendSessionIDClusterBackup(manager,request,sessionId, newSessionID);
         }
@@ -413,7 +413,7 @@ public class JvmRouteBinderValve extends ValveBase implements ClusterValve, Life
         request.setRequestedSessionId(newSessionID);
         if(request.isRequestedSessionIdFromCookie())
             setNewSessionCookie(request, response,newSessionID);
-        // set orginal sessionid at request, to allow application detect the
+        // set original sessionid at request, to allow application detect the
         // change
         if (sessionIdAttribute != null && !"".equals(sessionIdAttribute)) {
             if (log.isDebugEnabled()) {

==================================================
ReplicationValve.java
index fc07532a9f..a23e31b33e 100644
--- a/java/org/apache/catalina/ha/session/SessionMessageImpl.java
+++ b/java/org/apache/catalina/ha/session/SessionMessageImpl.java
@@ -128,7 +128,7 @@ public class SessionMessageImpl extends ClusterMessageBase implements SessionMes
     
     /**
      * clear text event type name (for logging purpose only) 
-     * @return the event type in a string representating, useful for debugging
+     * @return the event type in a string representation, useful for debugging
      */
     public String getEventTypeString()
     {

==================================================
SimpleTcpCluster.java
index ebbc575882..33e41468fb 100644
--- a/java/org/apache/catalina/ha/tcp/ReplicationValve.java
+++ b/java/org/apache/catalina/ha/tcp/ReplicationValve.java
@@ -385,7 +385,7 @@ public class ReplicationValve
 
     
     /**
-     * reset the active statitics 
+     * reset the active statistics 
      */
     public void resetStatistics() {
         totalRequestTime = 0 ;
@@ -469,7 +469,7 @@ public class ReplicationValve
   
     /**
      * Fix memory leak for long sessions with many changes, when no backup member exists!
-     * @param request current request after responce is generated
+     * @param request current request after response is generated
      * @param isCrossContext check crosscontext threadlocal
      */
     protected void resetReplicationRequest(Request request, boolean isCrossContext) {

==================================================
WebappClassLoader.java
index 423267ad84..9ed50478de 100644
--- a/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java
+++ b/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java
@@ -882,10 +882,10 @@ public class SimpleTcpCluster
 
     /**
      * notify all listeners from receiving a new message is not ClusterMessage
-     * emitt Failure Event to LifecylceListener
+     * emit Failure Event to LifecylceListener
      * 
      * @param message
-     *            receveived Message
+     *            received Message
      */
     public boolean accept(Serializable msg, Member sender) {
         return (msg instanceof ClusterMessage);

==================================================
HTMLManagerServlet.java
index b0e1870027..28c21e0f90 100644
--- a/java/org/apache/catalina/loader/WebappClassLoader.java
+++ b/java/org/apache/catalina/loader/WebappClassLoader.java
@@ -958,7 +958,7 @@ public class WebappClassLoader
 
     /**
      * Find the specified resource in our local repository, and return a
-     * <code>URL</code> refering to it, or <code>null</code> if this resource
+     * <code>URL</code> referring to it, or <code>null</code> if this resource
      * cannot be found.
      *
      * @param name Name of the resource to be found
@@ -2344,7 +2344,7 @@ public class WebappClassLoader
 
 
     /**
-     * Validate a classname. As per SRV.9.7.2, we must restict loading of 
+     * Validate a classname. As per SRV.9.7.2, we must restrict loading of 
      * classes from J2SE (java.*) and classes of the servlet API 
      * (javax.servlet.*). That should enhance robustness and prevent a number
      * of user error (where an older version of servlet.jar would be present

==================================================
JMXProxyServlet.java
index 8ba3bc74fd..aa5576eb23 100644
--- a/java/org/apache/catalina/manager/HTMLManagerServlet.java
+++ b/java/org/apache/catalina/manager/HTMLManagerServlet.java
@@ -647,7 +647,7 @@ public final class HTMLManagerServlet extends ManagerServlet {
      *
      * @see ManagerServlet#undeploy(PrintWriter, String)
      *
-     * @param path Context path of the application to be undeployd
+     * @param path Context path of the application to be undeployed
      * @return message String
      */
     protected String undeploy(String path) {
@@ -1066,8 +1066,8 @@ public final class HTMLManagerServlet extends ManagerServlet {
     // ------------------------------------------------------ Private Constants
 
     // These HTML sections are broken in relatively small sections, because of
-    // limited number of subsitutions MessageFormat can process
-    // (maximium of 10).
+    // limited number of substitutions MessageFormat can process
+    // (maximum of 10).
 
     private static final String APPS_HEADER_SECTION =
         "<table border=\"1\" cellspacing=\"0\" cellpadding=\"3\">\n" +

==================================================
ManagerServlet.java
index 69965f021e..1c71cb53c5 100644
--- a/java/org/apache/catalina/manager/JMXProxyServlet.java
+++ b/java/org/apache/catalina/manager/JMXProxyServlet.java
@@ -155,7 +155,7 @@ public class JMXProxyServlet extends HttpServlet  {
 
             try {
                 MBeanInfo minfo=mBeanServer.getMBeanInfo(oname);
-                // can't be null - I thinl
+                // can't be null - I think
                 String code=minfo.getClassName();
                 if ("org.apache.commons.modeler.BaseModelMBean".equals(code)) {
                     code=(String)mBeanServer.getAttribute(oname, "modelerType");

==================================================
HTMLHostManagerServlet.java
index 643ac26278..413935e6e7 100644
--- a/java/org/apache/catalina/manager/ManagerServlet.java
+++ b/java/org/apache/catalina/manager/ManagerServlet.java
@@ -1074,7 +1074,7 @@ public class ManagerServlet
      *
      * @param writer Writer to render to
      * @param path Context path of the application to list session information for
-     * @param idle Expire all sessions with idle time &ge; idle for this context
+     * @param idle Expire all sessions with idle time &gt; idle for this context
      */
     protected void sessions(PrintWriter writer, String path, int idle) {
 

==================================================
SessionUtils.java
index cf304e4527..82d609121a 100644
--- a/java/org/apache/catalina/manager/host/HTMLHostManagerServlet.java
+++ b/java/org/apache/catalina/manager/host/HTMLHostManagerServlet.java
@@ -487,8 +487,8 @@ public final class HTMLHostManagerServlet extends HostManagerServlet {
     // ------------------------------------------------------ Private Constants
 
     // These HTML sections are broken in relatively small sections, because of
-    // limited number of subsitutions MessageFormat can process
-    // (maximium of 10).
+    // limited number of substitutions MessageFormat can process
+    // (maximum of 10).
 
     private static final String HOSTS_HEADER_SECTION =
         "<table border=\"1\" cellspacing=\"0\" cellpadding=\"3\">\n" +

==================================================
ContextEnvironmentMBean.java
index 2c9b4eb72e..7b784ece11 100644
--- a/java/org/apache/catalina/manager/util/SessionUtils.java
+++ b/java/org/apache/catalina/manager/util/SessionUtils.java
@@ -66,7 +66,7 @@ public class SessionUtils {
     /**
      * Try to get user locale from the session, if possible.
      * IMPLEMENTATION NOTE: this method has explicit support for Tapestry 3, Struts 1.x and Spring
-     * JSF check the browser meta tag "accept languages" to choose what langage to display.
+     * JSF check the browser meta tag "accept languages" to choose what language to display.
      * @param in_session
      * @return String
      */

==================================================
ContextResourceLinkMBean.java
index dd72e53a1b..bf584ad77a 100644
--- a/java/org/apache/catalina/mbeans/ContextEnvironmentMBean.java
+++ b/java/org/apache/catalina/mbeans/ContextEnvironmentMBean.java
@@ -97,7 +97,7 @@ public class ContextEnvironmentMBean extends BaseModelMBean {
              throw new MBeanException(e);
         }
         
-        // cannot use side-efects.  It's removed and added back each time 
+        // cannot use side-effects.  It's removed and added back each time 
         // there is a modification in a resource.
         NamingResources nr = ce.getNamingResources();
         nr.removeEnvironment(ce.getName());

==================================================
ContextResourceMBean.java
index 66ed03fbaf..14cf26734a 100644
--- a/java/org/apache/catalina/mbeans/ContextResourceLinkMBean.java
+++ b/java/org/apache/catalina/mbeans/ContextResourceLinkMBean.java
@@ -97,7 +97,7 @@ public class ContextResourceLinkMBean extends BaseModelMBean {
              throw new MBeanException(e);
         }
         
-        // cannot use side-efects.  It's removed and added back each time 
+        // cannot use side-effects.  It's removed and added back each time 
         // there is a modification in a resource.
         NamingResources nr = crl.getNamingResources();
         nr.removeResourceLink(crl.getName());

==================================================
MBeanFactory.java
index 1101a56f08..461140271e 100644
--- a/java/org/apache/catalina/mbeans/ContextResourceMBean.java
+++ b/java/org/apache/catalina/mbeans/ContextResourceMBean.java
@@ -177,7 +177,7 @@ public class ContextResourceMBean extends BaseModelMBean {
             cr.setProperty(name, ""+value);
         }
         
-        // cannot use side-efects.  It's removed and added back each time 
+        // cannot use side-effects.  It's removed and added back each time 
         // there is a modification in a resource.
         NamingResources nr = cr.getNamingResources();
         nr.removeResource(cr.getName());

==================================================
ServerLifecycleListener.java
index 0ac143db74..2fdd0b9402 100644
--- a/java/org/apache/catalina/mbeans/MBeanFactory.java
+++ b/java/org/apache/catalina/mbeans/MBeanFactory.java
@@ -820,7 +820,7 @@ public class MBeanFactory extends BaseModelMBean {
     /**
      * Remove an existing Context.
      *
-     * @param contextName MBean Name of the comonent to remove
+     * @param contextName MBean Name of the component to remove
      *
      * @exception Exception if a component cannot be removed
      */
@@ -871,7 +871,7 @@ public class MBeanFactory extends BaseModelMBean {
     /**
      * Remove an existing Host.
      *
-     * @param name MBean Name of the comonent to remove
+     * @param name MBean Name of the component to remove
      *
      * @exception Exception if a component cannot be removed
      */
@@ -898,7 +898,7 @@ public class MBeanFactory extends BaseModelMBean {
     /**
      * Remove an existing Loader.
      *
-     * @param name MBean Name of the comonent to remove
+     * @param name MBean Name of the component to remove
      *
      * @exception Exception if a component cannot be removed
      */
@@ -915,7 +915,7 @@ public class MBeanFactory extends BaseModelMBean {
     /**
      * Remove an existing Manager.
      *
-     * @param name MBean Name of the comonent to remove
+     * @param name MBean Name of the component to remove
      *
      * @exception Exception if a component cannot be removed
      */
@@ -932,7 +932,7 @@ public class MBeanFactory extends BaseModelMBean {
     /**
      * Remove an existing Realm.
      *
-     * @param name MBean Name of the comonent to remove
+     * @param name MBean Name of the component to remove
      *
      * @exception Exception if a component cannot be removed
      */
@@ -948,7 +948,7 @@ public class MBeanFactory extends BaseModelMBean {
     /**
      * Remove an existing Valve.
      *
-     * @param name MBean Name of the comonent to remove
+     * @param name MBean Name of the component to remove
      *
      * @exception Exception if a component cannot be removed
      */

==================================================
DataSourceRealm.java
index a77c6bc2a3..e9b8b76d29 100644
--- a/java/org/apache/catalina/mbeans/ServerLifecycleListener.java
+++ b/java/org/apache/catalina/mbeans/ServerLifecycleListener.java
@@ -71,7 +71,7 @@ public class ServerLifecycleListener
 
 
     /**
-     * Semicolon separated list of paths containing MBean desciptor resources.
+     * Semicolon separated list of paths containing MBean descriptor resources.
      */
     protected String descriptors = null;
 
@@ -278,7 +278,7 @@ public class ServerLifecycleListener
      */
     protected void createMBeans(Connector connector) throws Exception {
 
-        // Create the MBean for the Connnector itself
+        // Create the MBean for the Connector itself
 //        if (log.isDebugEnabled())
 //            log.debug("Creating MBean for Connector " + connector);
 //        MBeanUtils.createMBean(connector);

==================================================
JAASCallbackHandler.java
index eb5dd2584d..faaa4d9fae 100644
--- a/java/org/apache/catalina/realm/DataSourceRealm.java
+++ b/java/org/apache/catalina/realm/DataSourceRealm.java
@@ -36,7 +36,7 @@ import org.apache.tomcat.util.res.StringManager;
 
 /**
 *
-* Implmentation of <b>Realm</b> that works with any JDBC JNDI DataSource.
+* Implementation of <b>Realm</b> that works with any JDBC JNDI DataSource.
 * See the JDBCRealm.howto for more details on how to set up the database and
 * for configuration options.
 *
@@ -105,7 +105,7 @@ public class DataSourceRealm
 
 
     /**
-     * The column in the user table that holds the user's credintials
+     * The column in the user table that holds the user's credentials
      */
     protected String userCredCol = null;
 

==================================================
JAASMemoryLoginModule.java
index 015245e952..07ace7d468 100644
--- a/java/org/apache/catalina/realm/JAASCallbackHandler.java
+++ b/java/org/apache/catalina/realm/JAASCallbackHandler.java
@@ -86,7 +86,7 @@ public class JAASCallbackHandler implements CallbackHandler {
      * @param nonce         Server generated nonce
      * @param nc            Nonce count
      * @param cnonce        Client generated nonce
-     * @param qop           Quality of protection aplied to the message
+     * @param qop           Quality of protection applied to the message
      * @param realmName     Realm name
      * @param md5a2         Second MD5 digest used to calculate the digest
      *                      MD5(Method + ":" + uri)
@@ -146,7 +146,7 @@ public class JAASCallbackHandler implements CallbackHandler {
     protected String cnonce = null;
 
     /**
-     * Quality of protection aplied to the message.
+     * Quality of protection applied to the message.
      */
     protected String qop;
 
@@ -172,7 +172,7 @@ public class JAASCallbackHandler implements CallbackHandler {
      * Retrieve the information requested in the provided <code>Callbacks</code>.
      * This implementation only recognizes {@link NameCallback},
      * {@link PasswordCallback} and {@link TextInputCallback}.
-     * {@link TextInputCallback} is ued to pass the various additional
+     * {@link TextInputCallback} is used to pass the various additional
      * parameters required for DIGEST authentication. 
      *
      * @param callbacks The set of <code>Callback</code>s to be processed

==================================================
JAASRealm.java
index 0daa56bcee..2f094e4c1f 100644
--- a/java/org/apache/catalina/realm/JAASMemoryLoginModule.java
+++ b/java/org/apache/catalina/realm/JAASMemoryLoginModule.java
@@ -61,7 +61,7 @@ import org.apache.tomcat.util.digester.Digester;
  * <li><strong>debug</strong> - Set to "true" to get debugging messages
  *     generated to System.out.  The default value is <code>false</code>.</li>
  * <li><strong>pathname</strong> - Relative (to the pathname specified by the
- *     "catalina.base" system property) or absolute pahtname to the
+ *     "catalina.base" system property) or absolute pathname to the
  *     XML file containing our user information, in the format supported by
  *     {@link MemoryRealm}.  The default value matches the MemoryRealm
  *     default.</li>
@@ -110,7 +110,7 @@ public class JAASMemoryLoginModule extends MemoryRealm implements LoginModule {
 
     /**
      * The <code>Principal</code> identified by our validation, or
-     * <code>null</code> if validation falied.
+     * <code>null</code> if validation failed.
      */
     protected Principal principal = null;
 
@@ -374,7 +374,7 @@ public class JAASMemoryLoginModule extends MemoryRealm implements LoginModule {
     /**
      * Log out this user.
      *
-     * @return <code>true</code> in all cases because thie
+     * @return <code>true</code> in all cases because the
      *  <code>LoginModule</code> should not be ignored
      *
      * @exception LoginException if logging out failed

==================================================
JDBCRealm.java
index 0c573ffd66..1037e2139e 100644
--- a/java/org/apache/catalina/realm/JAASRealm.java
+++ b/java/org/apache/catalina/realm/JAASRealm.java
@@ -41,7 +41,7 @@ import org.apache.juli.logging.LogFactory;
 
 
 /**
- * <p>Implmentation of <b>Realm</b> that authenticates users via the <em>Java
+ * <p>Implementation of <b>Realm</b> that authenticates users via the <em>Java
  * Authentication and Authorization Service</em> (JAAS).  JAAS support requires
  * either JDK 1.4 (which includes it as part of the standard platform) or
  * JDK 1.3 (with the plug-in <code>jaas.jar</code> file).</p>
@@ -82,7 +82,7 @@ import org.apache.juli.logging.LogFactory;
  *     <code>Subject.getPrincipals()</code>, it will identify the first
  *     <code>Principal</code> that matches the "user classes" list as the
  *     <code>Principal</code> for this user.</li>
- * <li>As this Realm iterates over the <code>Princpals</code> returned by
+ * <li>As this Realm iterates over the <code>Principals</code> returned by
  *     <code>Subject.getPrincipals()</code>, it will accumulate the set of
  *     all <code>Principals</code> matching the "role classes" list as
  *     identifying the security roles for this user.</li>
@@ -337,7 +337,7 @@ public class JAASRealm
      * @param nonce         Server generated nonce
      * @param nc            Nonce count
      * @param cnonce        Client generated nonce
-     * @param qop           Quality of protection aplied to the message
+     * @param qop           Quality of protection applied to the message
      * @param realmName     Realm name
      * @param md5a2         Second MD5 digest used to calculate the digest
      *                          MD5(Method + ":" + uri)

==================================================
JNDIRealm.java
index cf935eb466..9ffa29c9bf 100644
--- a/java/org/apache/catalina/realm/JDBCRealm.java
+++ b/java/org/apache/catalina/realm/JDBCRealm.java
@@ -34,7 +34,7 @@ import org.apache.tomcat.util.res.StringManager;
 
 /**
 *
-* Implmentation of <b>Realm</b> that works with any JDBC supported database.
+* Implementation of <b>Realm</b> that works with any JDBC supported database.
 * See the JDBCRealm.howto for more details on how to set up the database and
 * for configuration options.
 *
@@ -133,7 +133,7 @@ public class JDBCRealm
 
 
     /**
-     * The column in the user table that holds the user's credintials
+     * The column in the user table that holds the user's credentials
      */
     protected String userCredCol = null;
 
@@ -332,9 +332,9 @@ public class JDBCRealm
     @Override
     public synchronized Principal authenticate(String username, String credentials) {
 
-        // Number of tries is the numebr of attempts to connect to the database
+        // Number of tries is the number of attempts to connect to the database
         // during this login attempt (if we need to open the database)
-        // This needs rewritten wuth better pooling support, the existing code
+        // This needs rewritten with better pooling support, the existing code
         // needs signature changes since the Prepared statements needs cached
         // with the connections.
         // The code below will try twice if there is a SQLException so the
@@ -533,9 +533,9 @@ public class JDBCRealm
         PreparedStatement stmt = null;
         ResultSet rs = null;
 
-        // Number of tries is the numebr of attempts to connect to the database
+        // Number of tries is the number of attempts to connect to the database
         // during this login attempt (if we need to open the database)
-        // This needs rewritten wuth better pooling support, the existing code
+        // This needs rewritten with better pooling support, the existing code
         // needs signature changes since the Prepared statements needs cached
         // with the connections.
         // The code below will try twice if there is a SQLException so the
@@ -614,7 +614,7 @@ public class JDBCRealm
         PreparedStatement stmt = null;
         ResultSet rs = null;
 
-        // Number of tries is the numebr of attempts to connect to the database
+        // Number of tries is the number of attempts to connect to the database
         // during this login attempt (if we need to open the database)
         // This needs rewritten wuth better pooling support, the existing code
         // needs signature changes since the Prepared statements needs cached

==================================================
LockOutRealm.java
index 96ecdc9121..c3dc967ad6 100644
--- a/java/org/apache/catalina/realm/JNDIRealm.java
+++ b/java/org/apache/catalina/realm/JNDIRealm.java
@@ -1815,7 +1815,7 @@ public class JNDIRealm extends RealmBase {
             // Ensure that we have a directory context available
             context = open();
 
-            // Occassionally the directory context will timeout.  Try one more
+            // Occasionally the directory context will timeout.  Try one more
             // time before giving up.
             try {
 

==================================================
RealmBase.java
index c2492bf354..f0cd11df0b 100644
--- a/java/org/apache/catalina/realm/LockOutRealm.java
+++ b/java/org/apache/catalina/realm/LockOutRealm.java
@@ -33,7 +33,7 @@ import org.apache.juli.logging.LogFactory;
  * authentication attempts in a given period of time. To ensure correct
  * operation, there is a reasonable degree of synchronisation in this Realm.
  * This Realm does not require modification to the underlying Realms or the
- * associated user storage mecahisms. It achieves this by recording all failed
+ * associated user storage mechanisms. It achieves this by recording all failed
  * logins, including those for users that do not exist. To prevent a DOS by
  * deliberating making requests with invalid users (and hence causing this cache
  * to grow) the size of the list of users that have failed authentication is

==================================================
SecurityUtil.java
index a99dc20079..bb1d1b2396 100644
--- a/java/org/apache/catalina/realm/RealmBase.java
+++ b/java/org/apache/catalina/realm/RealmBase.java
@@ -864,7 +864,7 @@ public abstract class RealmBase
      */
     public boolean hasRole(Principal principal, String role) {
 
-        // Should be overriten in JAASRealm - to avoid pretty inefficient conversions
+        // Should be overridden in JAASRealm - to avoid pretty inefficient conversions
         if ((principal == null) || (role == null) ||
             !(principal instanceof GenericPrincipal))
             return (false);

==================================================
CGIServlet.java
index 293447e223..f640218a48 100644
--- a/java/org/apache/catalina/security/SecurityUtil.java
+++ b/java/org/apache/catalina/security/SecurityUtil.java
@@ -106,7 +106,7 @@ public final class SecurityUtil{
      * @param methodName the method to apply the security restriction
      * @param targetObject the <code>Servlet</code> on which the method will
      * be called.
-     * @param targetType <code>Class</code> array used to instanciate a i
+     * @param targetType <code>Class</code> array used to instantiate a
      * <code>Method</code> object.
      * @param targetArguments <code>Object</code> array contains the runtime 
      * parameters instance.
@@ -132,7 +132,7 @@ public final class SecurityUtil{
      * @param methodName the method to apply the security restriction
      * @param targetObject the <code>Servlet</code> on which the method will
      * be called.
-     * @param targetType <code>Class</code> array used to instanciate a 
+     * @param targetType <code>Class</code> array used to instantiate a 
      * <code>Method</code> object.
      * @param targetArguments <code>Object</code> array contains the 
      * runtime parameters instance.
@@ -191,7 +191,7 @@ public final class SecurityUtil{
      * @param methodName the method to apply the security restriction
      * @param targetObject the <code>Filter</code> on which the method will 
      * be called.
-     * @param targetType <code>Class</code> array used to instanciate a
+     * @param targetType <code>Class</code> array used to instantiate a
      * <code>Method</code> object.
      * @param targetArguments <code>Object</code> array contains the 
      * runtime parameters instance.
@@ -213,7 +213,7 @@ public final class SecurityUtil{
      * @param methodName the method to apply the security restriction
      * @param targetObject the <code>Filter</code> on which the method will 
      * be called.
-     * @param targetType <code>Class</code> array used to instanciate a
+     * @param targetType <code>Class</code> array used to instantiate a
      * <code>Method</code> object.
      * @param targetArguments <code>Object</code> array contains the 
      * runtime parameters instance.
@@ -369,7 +369,7 @@ public final class SecurityUtil{
      * @param methodName the method to apply the security restriction
      * @param targetObject the <code>Servlet</code> on which the method will
      * be called.
-     * @param targetType <code>Class</code> array used to instanciate a 
+     * @param targetType <code>Class</code> array used to instantiate a 
      * <code>Method</code> object.
      * @return the method instance.
      */

==================================================
DefaultServlet.java
index a4c1cacc39..bd493cd9a6 100644
--- a/java/org/apache/catalina/servlets/CGIServlet.java
+++ b/java/org/apache/catalina/servlets/CGIServlet.java
@@ -178,7 +178,7 @@ import org.apache.catalina.util.IOTools;
  * </p>
  * <p>
  *
- * <b>Metavariable Values</b>: According to the CGI specificion,
+ * <b>Metavariable Values</b>: According to the CGI specification,
  * implementations may choose to represent both null or missing values in an
  * implementation-specific manner, but must define that manner.  This
  * implementation chooses to always define all required metavariables, but
@@ -191,7 +191,7 @@ import org.apache.catalina.util.IOTools;
  *
  * <b>NPH --  Non-parsed-header implementation</b>:  This implementation does
  * not support the CGI NPH concept, whereby server ensures that the data
- * supplied to the script are preceisely as supplied by the client and
+ * supplied to the script are precisely as supplied by the client and
  * unaltered by the server.
  * </p>
  * <p>
@@ -893,10 +893,10 @@ public final class CGIServlet extends HttpServlet {
 
         /**
          * Constructs the CGI environment to be supplied to the invoked CGI
-         * script; relies heavliy on Servlet API methods and findCGI
+         * script; relies heavily on Servlet API methods and findCGI
          *
          * @param    req request associated with the CGI
-         *           invokation
+         *           Invocation
          *
          * @return   true if environment was set OK, false if there
          *           was a problem and no environment was set
@@ -1356,7 +1356,7 @@ public final class CGIServlet extends HttpServlet {
      * <p>
      *
      * The CGI environment and settings are derived from the information
-     * passed to the constuctor.
+     * passed to the constructor.
      *
      * </p>
      * <p>
@@ -1406,7 +1406,7 @@ public final class CGIServlet extends HttpServlet {
          * @param  env      Hashtable with the desired script environment
          * @param  wd       File with the script's desired working directory
          * @param  params   ArrayList with the script's query command line
-         *                  paramters as strings
+         *                  parameters as strings
          */
         protected CGIRunner(String command, Hashtable<String,String> env,
                             File wd, ArrayList<String> params) {

==================================================
WebdavServlet.java
index 18ac133726..eeaf9279a0 100644
--- a/java/org/apache/catalina/servlets/DefaultServlet.java
+++ b/java/org/apache/catalina/servlets/DefaultServlet.java
@@ -633,7 +633,7 @@ public class DefaultServlet
     /**
      * URL rewriter.
      *
-     * @param path Path which has to be rewiten
+     * @param path Path which has to be rewritten
      */
     protected String rewriteUrl(String path) {
         return urlEncoder.encode( path );

==================================================
JDBCStore.java
index 5d1f54d6f5..6809846a2a 100644
--- a/java/org/apache/catalina/servlets/WebdavServlet.java
+++ b/java/org/apache/catalina/servlets/WebdavServlet.java
@@ -2308,7 +2308,7 @@ public class WebdavServlet
 
 
     /**
-     * Propfind helper method. Dispays the properties of a lock-null resource.
+     * Propfind helper method. Displays the properties of a lock-null resource.
      *
      * @param resources Resources object associated with this context
      * @param generatedXML XML response to the Propfind request
@@ -3019,8 +3019,8 @@ class WebdavStatus {
      * providing status for multiple independent operations.
      */
     public static final int SC_MULTI_STATUS = 207;
-    // This one colides with HTTP 1.1
-    // "207 Parital Update OK"
+    // This one collides with HTTP 1.1
+    // "207 Partial Update OK"
 
 
     /**
@@ -3028,7 +3028,7 @@ class WebdavStatus {
      * the PATCH method was not understood by the resource.
      */
     public static final int SC_UNPROCESSABLE_ENTITY = 418;
-    // This one colides with HTTP 1.1
+    // This one collides with HTTP 1.1
     // "418 Reauthentication Required"
 
 
@@ -3038,7 +3038,7 @@ class WebdavStatus {
      * execution of this method.
      */
     public static final int SC_INSUFFICIENT_SPACE_ON_RESOURCE = 419;
-    // This one colides with HTTP 1.1
+    // This one collides with HTTP 1.1
     // "419 Proxy Reauthentication Required"
 
 
@@ -3064,7 +3064,7 @@ class WebdavStatus {
 
 
     static {
-        // HTTP 1.0 tatus Code
+        // HTTP 1.0 status Code
         addStatusCodeMap(SC_OK, "OK");
         addStatusCodeMap(SC_CREATED, "Created");
         addStatusCodeMap(SC_ACCEPTED, "Accepted");

==================================================
PersistentManagerBase.java
index f9e0c53ada..11300dbe61 100644
--- a/java/org/apache/catalina/session/JDBCStore.java
+++ b/java/org/apache/catalina/session/JDBCStore.java
@@ -824,7 +824,7 @@ public class JDBCStore extends StoreBase {
      * <code>null</code> or closed try to reopen it.
      * Returns <code>null</code> if the connection could not be established.
      *
-     * @return <code>Connection</code> if the connection suceeded
+     * @return <code>Connection</code> if the connection succeeded
      */
     protected Connection getConnection() {
         try {

==================================================
StandardManager.java
index 7f476d963d..279b9f2817 100644
--- a/java/org/apache/catalina/session/PersistentManagerBase.java
+++ b/java/org/apache/catalina/session/PersistentManagerBase.java
@@ -39,7 +39,7 @@ import org.apache.juli.logging.LogFactory;
 /**
  * Extends the <b>ManagerBase</b> class to implement most of the
  * functionality required by a Manager which supports any kind of
- * persistence, even if onlyfor  restarts.
+ * persistence, even if only for  restarts.
  * <p>
  * <b>IMPLEMENTATION NOTE</b>:  Correct behavior of session storing and
  * reloading depends upon external calls to the <code>start()</code> and
@@ -386,7 +386,7 @@ public abstract class PersistentManagerBase
 
 
     /**
-     * Set the maximum number of actives Sessions allowed, or -1 for
+     * Set the maximum number of active Sessions allowed, or -1 for
      * no limit.
      *
      * @param max The new maximum number of sessions

==================================================
ExpressionParseTree.java
index a8f3ea1fe1..4f5c6ca7b6 100644
--- a/java/org/apache/catalina/session/StandardManager.java
+++ b/java/org/apache/catalina/session/StandardManager.java
@@ -219,7 +219,7 @@ public class StandardManager
 
 
     /**
-     * Set the maximum number of actives Sessions allowed, or -1 for
+     * Set the maximum number of active Sessions allowed, or -1 for
      * no limit.
      *
      * @param max The new maximum number of sessions

==================================================
SSIFsize.java
index 7133e4cd00..854c6e0867 100644
--- a/java/org/apache/catalina/ssi/ExpressionParseTree.java
+++ b/java/org/apache/catalina/ssi/ExpressionParseTree.java
@@ -164,13 +164,13 @@ public class ExpressionParseTree {
                     break;
                 case ExpressionTokenizer.TOKEN_GE :
                     pushOpp(new NotNode());
-                    // Similar stategy to NOT_EQ above, except this
+                    // Similar strategy to NOT_EQ above, except this
                     // is NOT less than
                     oppStack.add(0, new LessThanNode());
                     break;
                 case ExpressionTokenizer.TOKEN_LE :
                     pushOpp(new NotNode());
-                    // Similar stategy to NOT_EQ above, except this
+                    // Similar strategy to NOT_EQ above, except this
                     // is NOT greater than
                     oppStack.add(0, new GreaterThanNode());
                     break;

==================================================
SSIServletExternalResolver.java
index e1768140ab..a9b1bd780c 100644
--- a/java/org/apache/catalina/ssi/SSIFsize.java
+++ b/java/org/apache/catalina/ssi/SSIFsize.java
@@ -92,7 +92,7 @@ public final class SSIFsize implements SSICommand {
     }
 
 
-    //We try to mimick Apache here, as we do everywhere
+    //We try to mimic Apache here, as we do everywhere
     //All the 'magic' numbers are from the util_script.c Apache source file.
     protected String formatSize(long size, String format) {
         String retString = "";

==================================================
SSIStopProcessingException.java
index 3e756563d1..db542b3b9c 100644
--- a/java/org/apache/catalina/ssi/SSIServletExternalResolver.java
+++ b/java/org/apache/catalina/ssi/SSIServletExternalResolver.java
@@ -346,7 +346,7 @@ public class SSIServletExternalResolver implements SSIExternalResolver {
         String retVal = null;
         int lastSlash = servletPath.lastIndexOf('/');
         if (lastSlash >= 0) {
-            //cut off file namee
+            //cut off file name
             retVal = servletPath.substring(0, lastSlash + 1);
         }
         return retVal;

==================================================
Channel.java
index 058450d798..819f33f6ef 100644
--- a/java/org/apache/catalina/ssi/SSIStopProcessingException.java
+++ b/java/org/apache/catalina/ssi/SSIStopProcessingException.java
@@ -19,7 +19,7 @@ package org.apache.catalina.ssi;
 
 /**
  * Exception used to tell SSIProcessor that it should stop processing SSI
- * commands. This is used to mimick the Apache behavior in #set with invalid
+ * commands. This is used to mimic the Apache behavior in #set with invalid
  * attributes.
  * 
  * @author Paul Speed

==================================================
ChannelListener.java
index ced1e70bee..a13dda98ec 100644
--- a/java/org/apache/catalina/tribes/Channel.java
+++ b/java/org/apache/catalina/tribes/Channel.java
@@ -28,7 +28,7 @@ import java.io.Serializable;
  * 2. receive message (by registering a <code>ChannelListener</code><br>
  * 3. get all members of the group <code>getMembers()</code><br>
  * 4. receive notifications of members added and members disappeared by
- *    registerering a <code>MembershipListener</code><br>
+ *    registering a <code>MembershipListener</code><br>
  * <br>
  * The channel has 5 major components:<br>
  * 1. Data receiver, with a built in thread pool to receive messages from other peers<br>
@@ -125,7 +125,7 @@ public interface Channel {
      * to trigger certain behavior. Most flags are used to trigger channel interceptors
      * as the message passes through the channel stack. <br>
      * However, there are five default flags that every channel implementation must implement<br>
-     * SEND_OPTIONS_BYTE_MESSAGE - The message is a pure byte message and no marshalling or unmarshalling will
+     * SEND_OPTIONS_BYTE_MESSAGE - The message is a pure byte message and no marshaling or unmarshaling will
      * be performed.<br>
      *
      * @see #send(Member[], Serializable , int)

==================================================
Heartbeat.java
index 8d97777d76..d329b86f0c 100644
--- a/java/org/apache/catalina/tribes/ChannelListener.java
+++ b/java/org/apache/catalina/tribes/ChannelListener.java
@@ -26,7 +26,7 @@ import java.io.Serializable;
  * <code>if ( listener.accept(msg,sender) ) listener.messageReceived(msg,sender);</code><br>
  * A ChannelListener implementation MUST NOT return true on <code>accept(Serializable, Member)</code>
  * if it doesn't intend to process the message. The channel can this way track whether a message
- * was processed by an above application or if it was just received and forgot about, a featuer required
+ * was processed by an above application or if it was just received and forgot about, a feature required
  * to support message-response(RPC) calls<br>
  * 
  * @author Filip Hanik

==================================================
Member.java
index 7cd91e4ec0..95065e5bb6 100644
--- a/java/org/apache/catalina/tribes/Heartbeat.java
+++ b/java/org/apache/catalina/tribes/Heartbeat.java
@@ -27,7 +27,7 @@ package org.apache.catalina.tribes;
 public interface Heartbeat {
     
     /**
-     * Heartbeat invokation for resources cleanup etc
+     * Heartbeat invocation for resources cleanup etc
      */
     public void heartbeat();
 

==================================================
UniqueId.java
index 278b246f23..0707d81d42 100644
--- a/java/org/apache/catalina/tribes/Member.java
+++ b/java/org/apache/catalina/tribes/Member.java
@@ -53,7 +53,7 @@ public interface Member {
 
     /**
      * Returns the listen port for the ChannelReceiver implementation
-     * @return the listen port for this member, -1 if its not listening on an unsecure port
+     * @return the listen port for this member, -1 if its not listening on an insecure port
      * @see ChannelReceiver
      */
     public int getPort();

==================================================
GroupChannel.java
index a025f4a39a..799c2c5a07 100644
--- a/java/org/apache/catalina/tribes/UniqueId.java
+++ b/java/org/apache/catalina/tribes/UniqueId.java
@@ -20,7 +20,7 @@ import org.apache.catalina.tribes.util.Arrays;
 import java.io.Serializable;
 
 /**
- * <p>Title: Represents a globabally unique Id</p>
+ * <p>Title: Represents a globally unique Id</p>
  *
  * <p>Company: </p>
  *

==================================================
MessageDispatch15Interceptor.java
index d93be23ad0..72c56a469a 100644
--- a/java/org/apache/catalina/tribes/group/GroupChannel.java
+++ b/java/org/apache/catalina/tribes/group/GroupChannel.java
@@ -79,7 +79,7 @@ public class GroupChannel extends ChannelInterceptorBase implements ManagedChann
     protected ChannelCoordinator coordinator = new ChannelCoordinator();
 
     /**
-     * The first interceptor in the inteceptor stack.
+     * The first interceptor in the interceptor stack.
      * The interceptors are chained in a linked list, so we only need a reference to the
      * first one
      */
@@ -587,7 +587,7 @@ public class GroupChannel extends ChannelInterceptorBase implements ManagedChann
 
     /**
      * Returns the sleep time in milliseconds that the internal heartbeat will
-     * sleep in between invokations of <code>Channel.heartbeat()</code>
+     * sleep in between invocations of <code>Channel.heartbeat()</code>
      * @return long
      */
     public long getHeartbeatSleeptime() {

==================================================
ObjectReader.java
index 5a3981f638..aa1a005c14 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/MessageDispatch15Interceptor.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/MessageDispatch15Interceptor.java
@@ -28,7 +28,7 @@ import java.util.concurrent.TimeUnit;
 /**
  * 
  * Same implementation as the MessageDispatchInterceptor
- * except is ues an atomic long for the currentSize calculation
+ * except it uses an atomic long for the currentSize calculation
  * and uses a thread pool for message sending.
  * 
  * @author Filip Hanik

==================================================
McastServiceImpl.java
index 136eb60949..86505bf713 100644
--- a/java/org/apache/catalina/tribes/io/ObjectReader.java
+++ b/java/org/apache/catalina/tribes/io/ObjectReader.java
@@ -91,7 +91,7 @@ public class ObjectReader {
      * @param data new transfer buffer
      * @param off offset
      * @param len length in buffer
-     * @return number of messages that sended to callback
+     * @return number of messages that was sent to callback
      * @throws java.io.IOException
      */
     public int append(ByteBuffer data, int len, boolean count) throws java.io.IOException {

==================================================
PooledSender.java
index 23f8fbf337..7df5f1efb0 100644
--- a/java/org/apache/catalina/tribes/membership/McastServiceImpl.java
+++ b/java/org/apache/catalina/tribes/membership/McastServiceImpl.java
@@ -210,7 +210,7 @@ public class McastServiceImpl
                 socket = new MulticastSocket(new InetSocketAddress(address,port));
             } catch (BindException e) {
                 /*
-                 * On some plattforms (e.g. Linux) it is not possible to bind
+                 * On some platforms (e.g. Linux) it is not possible to bind
                  * to the multicast address. In this case only bind to the
                  * port.
                  */

==================================================
BioReplicationTask.java
index 092e4d3821..e541df61f4 100644
--- a/java/org/apache/catalina/tribes/transport/PooledSender.java
+++ b/java/org/apache/catalina/tribes/transport/PooledSender.java
@@ -88,7 +88,7 @@ public abstract class PooledSender extends AbstractSender implements MultiPointS
     }
 
     public void add(Member member) {
-        // no op, senders created upon demans
+        // no op, senders created upon demands
     }
 
     public void remove(Member member) {

==================================================
BioSender.java
index aadcec5add..87d73eda6b 100644
--- a/java/org/apache/catalina/tribes/transport/bio/BioReplicationTask.java
+++ b/java/org/apache/catalina/tribes/transport/bio/BioReplicationTask.java
@@ -138,7 +138,7 @@ public class BioReplicationTask extends AbstractRxTask {
 
 
     /**
-     * send a reply-acknowledgement (6,2,3)
+     * send a reply-acknowledgment (6,2,3)
      * @param key
      * @param channel
      */

==================================================
FastQueue.java
index e99f17ba36..5f6994597c 100644
--- a/java/org/apache/catalina/tribes/transport/bio/BioSender.java
+++ b/java/org/apache/catalina/tribes/transport/bio/BioSender.java
@@ -226,9 +226,9 @@ public class BioSender extends AbstractSender implements DataSender {
      * Wait for ack is needed and make auto retry when write message is failed.
      * After sending error close and reopen socket again.
      * 
-     * After successfull sending update stats
+     * After successful sending update stats
      * 
-     * WARNING: Subclasses must be very carefull that only one thread call this pushMessage at once!!!
+     * WARNING: Subclasses must be very careful that only one thread call this pushMessage at once!!!
      * 
      * @see #closeSocket()
      * @see #openSocket()
@@ -251,8 +251,8 @@ public class BioSender extends AbstractSender implements DataSender {
     }
     
     /**
-     * Wait for Acknowledgement from other server
-     * FIXME Please, not wait only for three charcters, better control that the wait ack message is correct.
+     * Wait for Acknowledgment from other server
+     * FIXME Please, not wait only for three characters, better control that the wait ack message is correct.
      * @param timeout
      * @throws java.io.IOException
      * @throws java.net.SocketTimeoutException

==================================================
NioSender.java
index 3669f00b7c..7adc575154 100644
--- a/java/org/apache/catalina/tribes/transport/bio/util/FastQueue.java
+++ b/java/org/apache/catalina/tribes/transport/bio/util/FastQueue.java
@@ -25,7 +25,7 @@ import org.apache.catalina.tribes.group.InterceptorPayload;
 
 /**
  * A fast queue that remover thread lock the adder thread. <br/>Limit the queue
- * length when you have strange producer thread problemes.
+ * length when you have strange producer thread problems.
  * 
  * FIXME add i18n support to log messages
  * @author Rainer Jung
@@ -69,7 +69,7 @@ public class FastQueue {
     private boolean inMutex = false;
 
     /**
-     * limit the queue legnth ( default is unlimited)
+     * limit the queue length ( default is unlimited)
      */
     private int maxQueueLength = 0;
 

==================================================
ParallelNioSender.java
index 6dcc672a0b..43129ae132 100644
--- a/java/org/apache/catalina/tribes/transport/nio/NioSender.java
+++ b/java/org/apache/catalina/tribes/transport/nio/NioSender.java
@@ -188,7 +188,7 @@ public class NioSender extends AbstractSender implements DataSender{
         }
         if ( current != null ) {
             if ( remaining > 0 ) {
-                //weve written everything, or we are starting a new package
+                //we have written everything, or we are starting a new package
                 //protect against buffer overwrite
                 int byteswritten = isUdpBased()?dataChannel.write(writebuf) : socketChannel.write(writebuf);
                 if (byteswritten == -1 ) throw new EOFException();

==================================================
MemoryUserDatabase.java
index 1f2ffc1965..d743fb7756 100644
--- a/java/org/apache/catalina/tribes/transport/nio/ParallelNioSender.java
+++ b/java/org/apache/catalina/tribes/transport/nio/ParallelNioSender.java
@@ -95,7 +95,7 @@ public class ParallelNioSender extends AbstractSender implements MultiPointSende
                 delta = System.currentTimeMillis() - start;
             }
             if ( remaining > 0 ) {
-                //timeout has occured
+                //timeout has occurred
                 ChannelException cxtimeout = new ChannelException("Operation has timed out("+getTimeout()+" ms.).");
                 if ( cx==null ) cx = new ChannelException("Operation has timed out("+getTimeout()+" ms.).");
                 for (int i=0; i<senders.length; i++ ) {
@@ -307,7 +307,7 @@ public class ParallelNioSender extends AbstractSender implements MultiPointSende
                 }
             }
         }
-        //clean up any cancelled keys
+        //clean up any canceled keys
         if ( result ) try { selector.selectNow(); }catch (Exception ignore){}
         return result;
     }

==================================================
Base64.java
index aee332fda7..9fae2894b2 100644
--- a/java/org/apache/catalina/users/MemoryUserDatabase.java
+++ b/java/org/apache/catalina/users/MemoryUserDatabase.java
@@ -111,7 +111,7 @@ public class MemoryUserDatabase implements UserDatabase {
 
 
     /**
-     * The relative or absolute pathname ot the file in which we write
+     * The relative or absolute pathname of the file in which we write
      * our new information prior to renaming.
      */
     protected String pathnameNew = pathname + ".new";

==================================================
DateTool.java
index 4dfc538e66..5c6f7b67b4 100644
--- a/java/org/apache/catalina/util/Base64.java
+++ b/java/org/apache/catalina/util/Base64.java
@@ -108,7 +108,7 @@ public final class  Base64
     }
 
     /**
-     * Encodes hex octects into Base64.
+     * Encodes hex octets into Base64.
      *
      * @param binaryData Array containing binary data to encode.
      * @return Base64-encoded data.
@@ -203,7 +203,7 @@ public final class  Base64
     }
 
     /**
-     * Decodes Base64 data into octects
+     * Decodes Base64 data into octets
      *
      * @param base64DataBC Byte array containing Base64 data
      * @param decodedDataCC The decoded data chars

==================================================
ExtensionValidator.java
index 2d73225e0c..b7617343a8 100644
--- a/java/org/apache/catalina/util/DateTool.java
+++ b/java/org/apache/catalina/util/DateTool.java
@@ -35,7 +35,7 @@ import java.util.TimeZone;
 public class DateTool {
 
     /**
-     * US locale - all HTTP dates are in english
+     * US locale - all HTTP dates are in English
      */
     public final static Locale LOCALE_US = Locale.US;
 

==================================================
IOTools.java
index 88fcc9ef64..9510672e4f 100644
--- a/java/org/apache/catalina/util/ExtensionValidator.java
+++ b/java/org/apache/catalina/util/ExtensionValidator.java
@@ -39,9 +39,9 @@ import org.apache.tomcat.util.res.StringManager;
 
 
 /**
- * Ensures that all extension dependies are resolved for a WEB application
+ * Ensures that all extension dependencies are resolved for a WEB application
  * are met. This class builds a master list of extensions available to an
- * applicaiton and then validates those extensions.
+ * application and then validates those extensions.
  *
  * See http://java.sun.com/j2se/1.4/docs/guide/extensions/spec.html for
  * a detailed explanation of the extension mechanism in Java.
@@ -113,7 +113,7 @@ public final class ExtensionValidator {
 
 
     /**
-     * Runtime validation of a Web Applicaiton.
+     * Runtime validation of a Web Application.
      *
      * This method uses JNDI to look up the resources located under a 
      * <code>DirContext</code>. It locates Web Application MANIFEST.MF 
@@ -140,7 +140,7 @@ public final class ExtensionValidator {
         // If the application context is null it does not exist and 
         // therefore is not valid
         if (dirContext == null) return false;
-        // Find the Manifest for the Web Applicaiton
+        // Find the Manifest for the Web Application
         InputStream inputStream = null;
         try {
             NamingEnumeration<Binding> wne =
@@ -236,7 +236,7 @@ public final class ExtensionValidator {
      * represented by any given <code>ManifestResource</code> objects 
      * is not met.
      *
-     * This method should also provide static validation of a Web Applicaiton 
+     * This method should also provide static validation of a Web Application 
      * if provided with the necessary parameters.
      *
      * @param appName The name of the Application that will appear in the 
@@ -277,7 +277,7 @@ public final class ExtensionValidator {
             while (rit.hasNext()) {
                 boolean found = false;
                 Extension requiredExt = rit.next();
-                // check the applicaion itself for the extension
+                // check the application itself for the extension
                 if (availableExtensions != null) {
                     Iterator<Extension> ait = availableExtensions.iterator();
                     while (ait.hasNext()) {

==================================================
ManifestResource.java
index 23f1dbc1ab..7047858629 100644
--- a/java/org/apache/catalina/util/IOTools.java
+++ b/java/org/apache/catalina/util/IOTools.java
@@ -41,7 +41,7 @@ public class IOTools {
      *
      * @param reader the reader to read from.
      * @param writer the writer to write to.
-     * @param buf the char array to use as a bufferx
+     * @param buf the char array to use as a buffer
      */
     public static void flow( Reader reader, Writer writer, char[] buf ) 
         throws IOException {

==================================================
ParameterMap.java
index 206567de95..5b672627a0 100644
--- a/java/org/apache/catalina/util/ManifestResource.java
+++ b/java/org/apache/catalina/util/ManifestResource.java
@@ -100,7 +100,7 @@ public class ManifestResource {
     }
     
     /**
-     * Convienience method to check if this <code>ManifestResource</code>
+     * Convenience method to check if this <code>ManifestResource</code>
      * has an requires extensions.
      *
      * @return true if required extensions are present

==================================================
RequestUtil.java
index 5b00064749..5d1c8918bc 100644
--- a/java/org/apache/catalina/util/ParameterMap.java
+++ b/java/org/apache/catalina/util/ParameterMap.java
@@ -83,7 +83,7 @@ public final class ParameterMap<K,V> extends HashMap<K,V> {
     /**
      * Construct a new map with the same mappings as the given map.
      *
-     * @param map Map whose contents are dupliated in the new map
+     * @param map Map whose contents are duplicated in the new map
      */
     public ParameterMap(Map<K,V> map) {
 

==================================================
SchemaResolver.java
index f0cb3c9ebe..057049de6c 100644
--- a/java/org/apache/catalina/util/RequestUtil.java
+++ b/java/org/apache/catalina/util/RequestUtil.java
@@ -324,7 +324,7 @@ public final class RequestUtil {
 
 
     /**
-     * Convert a byte character value to hexidecimal digit value.
+     * Convert a byte character value to hexadecimal digit value.
      *
      * @param b the character value byte
      */

==================================================
Strftime.java
index cafaf27de6..553f371805 100644
--- a/java/org/apache/catalina/util/SchemaResolver.java
+++ b/java/org/apache/catalina/util/SchemaResolver.java
@@ -34,7 +34,7 @@ import org.xml.sax.SAXException;
 public class SchemaResolver implements EntityResolver {
 
     /**
-     * The disgester instance for which this class is the entity resolver.
+     * The digester instance for which this class is the entity resolver.
      */
     protected Digester digester;
 
@@ -62,7 +62,7 @@ public class SchemaResolver implements EntityResolver {
 
     /**
      * Create a new <code>EntityResolver</code> that will redirect
-     * all remote dtds and schema to a locat destination.
+     * all remote dtds and schema to a local destination.
      * @param digester The digester instance.
      */
     public SchemaResolver(Digester digester) {

==================================================
AccessLogValve.java
index e96b613cc1..862a5d6d60 100644
--- a/java/org/apache/catalina/util/Strftime.java
+++ b/java/org/apache/catalina/util/Strftime.java
@@ -80,7 +80,7 @@ public class Strftime {
         translate.put("r","hh:mm:ss a");
         translate.put("R","HH:mm");
         //There's no way to specify this with SimpleDateFormat
-        //translate.put("s","seconds since ecpoch");
+        //translate.put("s","seconds since epoch");
         translate.put("S","ss");
         translate.put("t","\t");
         translate.put("T","HH:mm:ss");
@@ -88,12 +88,12 @@ public class Strftime {
         //translate.put("u","day of week ( 1-7 )");
 
         //There's no way to specify this with SimpleDateFormat
-        //translate.put("U","week in year with first sunday as first day...");
+        //translate.put("U","week in year with first Sunday as first day...");
 
         translate.put("V","ww"); //I'm not sure this is always exactly the same
 
         //There's no way to specify this with SimpleDateFormat
-        //translate.put("W","week in year with first monday as first day...");
+        //translate.put("W","week in year with first Monday as first day...");
 
         //There's no way to specify this with SimpleDateFormat
         //translate.put("w","E");

==================================================
CometConnectionManagerValve.java
index 53a8ab4296..e4a3c6f406 100644
--- a/java/org/apache/catalina/valves/AccessLogValve.java
+++ b/java/org/apache/catalina/valves/AccessLogValve.java
@@ -497,7 +497,7 @@ public class AccessLogValve
 
     /**
      * Return whether the attribute name to look for when
-     * performing conditional loggging. If null, every
+     * performing conditional logging. If null, every
      * request is logged.
      */
     public String getCondition() {
@@ -1358,7 +1358,7 @@ public class AccessLogValve
             if (replace) {
                 /*
                  * For code that processes {, the behavior will be ... if I do
-                 * not enounter a closing } - then I ignore the {
+                 * not encounter a closing } - then I ignore the {
                  */
                 if ('{' == ch) {
                     StringBuilder name = new StringBuilder();

==================================================
