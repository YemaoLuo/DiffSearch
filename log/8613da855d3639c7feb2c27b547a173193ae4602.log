8613da855d3639c7feb2c27b547a173193ae4602
==================================================
More SecurityManager clean-up
==================================================
Mark Thomas
==================================================
Thu Jan 12 16:18:32 2023 +0000
==================================================
DefaultInstanceManager.java
More SecurityManager clean-up


==================================================
NamingResourcesImpl.java
index 7c196970b2..859043ae9c 100644
--- a/java/org/apache/catalina/core/DefaultInstanceManager.java
+++ b/java/org/apache/catalina/core/DefaultInstanceManager.java
@@ -304,7 +304,7 @@ public class DefaultInstanceManager implements InstanceManager {
                 }
 
                 // Initialize methods annotations
-                Method[] methods = Introspection.getDeclaredMethods(clazz);
+                Method[] methods = clazz.getDeclaredMethods();
                 Method postConstruct = null;
                 String postConstructFromXml = postConstructMethods.get(clazz.getName());
                 Method preDestroy = null;
@@ -395,7 +395,7 @@ public class DefaultInstanceManager implements InstanceManager {
                 if (context != null) {
                     // Initialize fields annotations for resource injection if
                     // JNDI is enabled
-                    Field[] fields = Introspection.getDeclaredFields(clazz);
+                    Field[] fields = clazz.getDeclaredFields();
                     for (Field field : fields) {
                         Resource resourceAnnotation;
                         Annotation ejbAnnotation;

==================================================
WebAnnotationSet.java
index 1000fc5846..37f90217e2 100644
--- a/java/org/apache/catalina/deploy/NamingResourcesImpl.java
+++ b/java/org/apache/catalina/deploy/NamingResourcesImpl.java
@@ -1238,7 +1238,7 @@ public class NamingResourcesImpl extends LifecycleMBeanBase
     }
 
     private Class<?> getSetterType(Class<?> clazz, String name) {
-        Method[] methods = Introspection.getDeclaredMethods(clazz);
+        Method[] methods = clazz.getDeclaredMethods();
         if (methods != null && methods.length > 0) {
             for (Method method : methods) {
                 if (Introspection.isValidSetter(method) &&
@@ -1251,7 +1251,7 @@ public class NamingResourcesImpl extends LifecycleMBeanBase
     }
 
     private Class<?> getFieldType(Class<?> clazz, String name) {
-        Field[] fields = Introspection.getDeclaredFields(clazz);
+        Field[] fields = clazz.getDeclaredFields();
         if (fields != null && fields.length > 0) {
             for (Field field : fields) {
                 if (field.getName().equals(name)) {

==================================================
CloudMembershipProvider.java
index 99e67143b4..e6459094c0 100644
--- a/java/org/apache/catalina/startup/WebAnnotationSet.java
+++ b/java/org/apache/catalina/startup/WebAnnotationSet.java
@@ -269,7 +269,7 @@ public class WebAnnotationSet {
 
     protected static void loadFieldsAnnotation(Context context, Class<?> clazz) {
         // Initialize the annotations
-        Field[] fields = Introspection.getDeclaredFields(clazz);
+        Field[] fields = clazz.getDeclaredFields();
         if (fields != null && fields.length > 0) {
             for (Field field : fields) {
                 Resource annotation = field.getAnnotation(Resource.class);
@@ -285,7 +285,7 @@ public class WebAnnotationSet {
 
     protected static void loadMethodsAnnotation(Context context, Class<?> clazz) {
         // Initialize the annotations
-        Method[] methods = Introspection.getDeclaredMethods(clazz);
+        Method[] methods = clazz.getDeclaredMethods();
         if (methods != null && methods.length > 0) {
             for (Method method : methods) {
                 Resource annotation = method.getAnnotation(Resource.class);

==================================================
ReceiverBase.java
index 8bab726f87..6b8fdf9cdf 100644
--- a/java/org/apache/catalina/tribes/membership/cloud/CloudMembershipProvider.java
+++ b/java/org/apache/catalina/tribes/membership/cloud/CloudMembershipProvider.java
@@ -19,10 +19,8 @@ package org.apache.catalina.tribes.membership.cloud;
 import java.io.IOException;
 import java.io.Serializable;
 import java.net.InetAddress;
-import java.security.AccessController;
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
-import java.security.PrivilegedAction;
 import java.time.Instant;
 import java.util.HashMap;
 import java.util.Map;
@@ -74,7 +72,7 @@ public abstract class CloudMembershipProvider extends MembershipProviderBase imp
     protected static String getEnv(String... keys) {
         String val = null;
         for (String key : keys) {
-            val = AccessController.doPrivileged((PrivilegedAction<String>) () -> System.getenv(key));
+            val = System.getenv(key);
             if (val != null) {
                 break;
             }

==================================================
TcclThreadFactory.java
index 31d84d48b3..8ad1d2e688 100644
--- a/java/org/apache/catalina/tribes/transport/ReceiverBase.java
+++ b/java/org/apache/catalina/tribes/transport/ReceiverBase.java
@@ -588,8 +588,7 @@ public abstract class ReceiverBase implements ChannelReceiver, ListenCallback, R
         final String namePrefix;
 
         TaskThreadFactory(String namePrefix) {
-            SecurityManager s = System.getSecurityManager();
-            group = (s != null) ? s.getThreadGroup() : Thread.currentThread().getThreadGroup();
+            group = Thread.currentThread().getThreadGroup();
             this.namePrefix = namePrefix;
         }
 

==================================================
Introspection.java
index de46faa62b..4fbbc44069 100644
--- a/java/org/apache/catalina/tribes/util/TcclThreadFactory.java
+++ b/java/org/apache/catalina/tribes/util/TcclThreadFactory.java
@@ -16,8 +16,6 @@
  */
 package org.apache.catalina.tribes.util;
 
-import java.security.AccessController;
-import java.security.PrivilegedAction;
 import java.util.concurrent.ThreadFactory;
 import java.util.concurrent.atomic.AtomicInteger;
 
@@ -31,8 +29,6 @@ import java.util.concurrent.atomic.AtomicInteger;
 public class TcclThreadFactory implements ThreadFactory {
 
     private static final AtomicInteger poolNumber = new AtomicInteger(1);
-    private static final boolean IS_SECURITY_ENABLED =
-        (System.getSecurityManager() != null);
 
     private final ThreadGroup group;
     private final AtomicInteger threadNumber = new AtomicInteger(1);
@@ -43,28 +39,15 @@ public class TcclThreadFactory implements ThreadFactory {
     }
 
     public TcclThreadFactory(String namePrefix) {
-        SecurityManager s = System.getSecurityManager();
-        group = (s != null) ? s.getThreadGroup() : Thread.currentThread().getThreadGroup();
+        group = Thread.currentThread().getThreadGroup();
         this.namePrefix = namePrefix;
     }
 
     @Override
     public Thread newThread(Runnable r) {
         final Thread t = new Thread(group, r, namePrefix + threadNumber.getAndIncrement());
-
-        if (IS_SECURITY_ENABLED) {
-            AccessController.doPrivileged(new PrivilegedAction<Void>() {
-                @Override
-                public Void run() {
-                    t.setContextClassLoader(this.getClass().getClassLoader());
-                    return null;
-                }
-            });
-        } else {
-            t.setContextClassLoader(this.getClass().getClassLoader());
-        }
+        t.setContextClassLoader(this.getClass().getClassLoader());
         t.setDaemon(true);
         return t;
     }
-
 }

==================================================
