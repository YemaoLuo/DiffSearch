da2db4d75a31d1ee40c8fb342a624cd52f9a85ea
==================================================
Fix bit sign checks warnings, no functional change.
==================================================
Remy Maucherat
==================================================
Wed Jul 26 14:37:20 2017 +0000
==================================================
ApplicationFilterFactory.java
Fix bit sign checks warnings, no functional change.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1803055 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ContextConfig.java
index 2b15ac2683..e066f94214 100644
--- a/java/org/apache/catalina/core/ApplicationFilterFactory.java
+++ b/java/org/apache/catalina/core/ApplicationFilterFactory.java
@@ -260,27 +260,27 @@ public final class ApplicationFilterFactory {
     private static boolean matchDispatcher(FilterMap filterMap, DispatcherType type) {
         switch (type) {
             case FORWARD :
-                if ((filterMap.getDispatcherMapping() & FilterMap.FORWARD) > 0) {
-                        return true;
+                if ((filterMap.getDispatcherMapping() & FilterMap.FORWARD) != 0) {
+                    return true;
                 }
                 break;
             case INCLUDE :
-                if ((filterMap.getDispatcherMapping() & FilterMap.INCLUDE) > 0) {
+                if ((filterMap.getDispatcherMapping() & FilterMap.INCLUDE) != 0) {
                     return true;
                 }
                 break;
             case REQUEST :
-                if ((filterMap.getDispatcherMapping() & FilterMap.REQUEST) > 0) {
+                if ((filterMap.getDispatcherMapping() & FilterMap.REQUEST) != 0) {
                     return true;
                 }
                 break;
             case ERROR :
-                if ((filterMap.getDispatcherMapping() & FilterMap.ERROR) > 0) {
+                if ((filterMap.getDispatcherMapping() & FilterMap.ERROR) != 0) {
                     return true;
                 }
                 break;
             case ASYNC :
-                if ((filterMap.getDispatcherMapping() & FilterMap.ASYNC) > 0) {
+                if ((filterMap.getDispatcherMapping() & FilterMap.ASYNC) != 0) {
                     return true;
                 }
                 break;

==================================================
ByteUtil.java
index e2bbff2159..80b81f37b8 100644
--- a/java/org/apache/catalina/startup/ContextConfig.java
+++ b/java/org/apache/catalina/startup/ContextConfig.java
@@ -2130,7 +2130,7 @@ public class ContextConfig implements LifecycleListener {
         }
 
         if ((javaClass.getAccessFlags() &
-                org.apache.tomcat.util.bcel.Const.ACC_ANNOTATION) > 0) {
+                org.apache.tomcat.util.bcel.Const.ACC_ANNOTATION) != 0) {
             // Skip annotations.
             return;
         }

==================================================
Flags.java
index c940ce2323..d1e30606cd 100644
--- a/java/org/apache/coyote/http2/ByteUtil.java
+++ b/java/org/apache/coyote/http2/ByteUtil.java
@@ -27,7 +27,7 @@ class ByteUtil {
 
 
     static boolean isBit7Set(byte input) {
-        return (input & 0x80) > 0;
+        return (input & 0x80) != 0;
     }
 
 

==================================================
FilterMap.java
index 6c63f93dd0..d7ff18158e 100644
--- a/java/org/apache/coyote/http2/Flags.java
+++ b/java/org/apache/coyote/http2/Flags.java
@@ -24,26 +24,26 @@ class Flags {
 
 
     static boolean isEndOfStream(int flags) {
-        return (flags & 0x01) > 0;
+        return (flags & 0x01) != 0;
     }
 
 
     static boolean isAck(int flags) {
-        return (flags & 0x01) > 0;
+        return (flags & 0x01) != 0;
     }
 
 
     static boolean isEndOfHeaders(int flags) {
-        return (flags & 0x04) > 0;
+        return (flags & 0x04) != 0;
     }
 
 
     static boolean hasPadding(int flags) {
-        return (flags & 0x08) > 0;
+        return (flags & 0x08) != 0;
     }
 
 
     static boolean hasPriority(int flags) {
-        return (flags & 0x20) > 0;
+        return (flags & 0x20) != 0;
     }
 }

==================================================
PerMessageDeflate.java
index 766f65d013..c432d95feb 100644
--- a/java/org/apache/tomcat/util/descriptor/web/FilterMap.java
+++ b/java/org/apache/tomcat/util/descriptor/web/FilterMap.java
@@ -178,19 +178,19 @@ public class FilterMap extends XmlEncodingBase implements Serializable {
 
     public String[] getDispatcherNames() {
         List<String> result = new ArrayList<>();
-        if ((dispatcherMapping & FORWARD) > 0) {
+        if ((dispatcherMapping & FORWARD) != 0) {
             result.add(DispatcherType.FORWARD.name());
         }
-        if ((dispatcherMapping & INCLUDE) > 0) {
+        if ((dispatcherMapping & INCLUDE) != 0) {
             result.add(DispatcherType.INCLUDE.name());
         }
-        if ((dispatcherMapping & REQUEST) > 0) {
+        if ((dispatcherMapping & REQUEST) != 0) {
             result.add(DispatcherType.REQUEST.name());
         }
-        if ((dispatcherMapping & ERROR) > 0) {
+        if ((dispatcherMapping & ERROR) != 0) {
             result.add(DispatcherType.ERROR.name());
         }
-        if ((dispatcherMapping & ASYNC) > 0) {
+        if ((dispatcherMapping & ASYNC) != 0) {
             result.add(DispatcherType.ASYNC.name());
         }
         return result.toArray(new String[result.size()]);

==================================================
Util.java
index 513cf08bfa..d648050721 100644
--- a/java/org/apache/tomcat/websocket/PerMessageDeflate.java
+++ b/java/org/apache/tomcat/websocket/PerMessageDeflate.java
@@ -240,7 +240,7 @@ public class PerMessageDeflate implements Transformation {
     @Override
     public boolean validateRsv(int rsv, byte opCode) {
         if (Util.isControl(opCode)) {
-            if ((rsv & RSV_BITMASK) > 0) {
+            if ((rsv & RSV_BITMASK) != 0) {
                 return false;
             } else {
                 if (next == null) {
@@ -251,7 +251,7 @@ public class PerMessageDeflate implements Transformation {
             }
         } else {
             int rsvNext = rsv;
-            if ((rsv & RSV_BITMASK) > 0) {
+            if ((rsv & RSV_BITMASK) != 0) {
                 rsvNext = rsv ^ RSV_BITMASK;
             }
             if (next == null) {
@@ -300,7 +300,7 @@ public class PerMessageDeflate implements Transformation {
 
     @Override
     public boolean validateRsvBits(int i) {
-        if ((i & RSV_BITMASK) > 0) {
+        if ((i & RSV_BITMASK) != 0) {
             return false;
         }
         if (next == null) {

==================================================
WsFrameBase.java
index 228ac8c127..ddf5f493a1 100644
--- a/java/org/apache/tomcat/websocket/Util.java
+++ b/java/org/apache/tomcat/websocket/Util.java
@@ -69,7 +69,7 @@ public class Util {
 
 
     static boolean isControl(byte opCode) {
-        return (opCode & 0x08) > 0;
+        return (opCode & 0x08) != 0;
     }
 
 

==================================================
