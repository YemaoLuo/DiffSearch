6d7470c6a3e579b4a6f901aeee544cb2a3a91bfc
==================================================
Use Charset rather than encoding name to create C2BConvertor
==================================================
Mark Thomas
==================================================
Wed Sep 2 20:31:25 2015 +0000
==================================================
OutputBuffer.java
Use Charset rather than encoding name to create C2BConvertor

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1700892 13f79535-47bb-0310-9956-ffa450edef68



==================================================
C2BConverter.java
index 94c10e1af2..9614634b70 100644
--- a/java/org/apache/catalina/connector/OutputBuffer.java
+++ b/java/org/apache/catalina/connector/OutputBuffer.java
@@ -568,7 +568,7 @@ public class OutputBuffer extends Writer
             enc = DEFAULT_ENCODING;
         }
 
-        Charset charset = B2CConverter.getCharset(enc);
+        final Charset charset = B2CConverter.getCharset(enc);
         conv = encoders.get(charset);
 
         if (conv == null) {
@@ -579,7 +579,7 @@ public class OutputBuffer extends Writer
 
                                 @Override
                                 public C2BConverter run() throws IOException{
-                                    return new C2BConverter(enc);
+                                    return new C2BConverter(charset);
                                 }
                             }
                     );
@@ -590,7 +590,7 @@ public class OutputBuffer extends Writer
                     }
                 }
             } else {
-                conv = new C2BConverter(enc);
+                conv = new C2BConverter(charset);
             }
 
             encoders.put(charset, conv);

==================================================
UEncoder.java
index 36bc934c06..621b7ebc52 100644
--- a/java/org/apache/tomcat/util/buf/C2BConverter.java
+++ b/java/org/apache/tomcat/util/buf/C2BConverter.java
@@ -19,6 +19,7 @@ package org.apache.tomcat.util.buf;
 import java.io.IOException;
 import java.nio.ByteBuffer;
 import java.nio.CharBuffer;
+import java.nio.charset.Charset;
 import java.nio.charset.CharsetEncoder;
 import java.nio.charset.CoderResult;
 import java.nio.charset.CodingErrorAction;
@@ -37,8 +38,8 @@ public final class C2BConverter {
      */
     private final CharBuffer leftovers;
 
-    public C2BConverter(String encoding) throws IOException {
-        encoder = B2CConverter.getCharset(encoding).newEncoder();
+    public C2BConverter(Charset charset) {
+        encoder = charset.newEncoder();
         // FIXME: See if unmappable/malformed behavior configuration is needed
         //        in practice
         encoder.onUnmappableCharacter(CodingErrorAction.REPLACE)

==================================================
