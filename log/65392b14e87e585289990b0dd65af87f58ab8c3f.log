65392b14e87e585289990b0dd65af87f58ab8c3f
==================================================
CheckStyle Javadoc checks += JavadocMissingLeadingAsterisk
==================================================
Mark Thomas
==================================================
Thu Jan 12 18:41:58 2023 +0000
==================================================
TagData.java
CheckStyle Javadoc checks += JavadocMissingLeadingAsterisk


==================================================
JAASRealm.java
index 989a7a83df..680acf3c74 100644
--- a/java/jakarta/servlet/jsp/tagext/TagData.java
+++ b/java/jakarta/servlet/jsp/tagext/TagData.java
@@ -50,7 +50,7 @@ public class TagData implements Cloneable {
      *
      * All values must be Strings except for those holding the
      * distinguished object REQUEST_TIME_VALUE.
-
+     *
      * @param atts the static attribute and values.  May be null.
      */
     public TagData(Object[] atts[]) {

==================================================
CGIServlet.java
index f249ae4387..c6b1dcfbfa 100644
--- a/java/org/apache/catalina/realm/JAASRealm.java
+++ b/java/org/apache/catalina/realm/JAASRealm.java
@@ -97,21 +97,23 @@ import org.apache.tomcat.util.ExceptionUtils;
  *     with this name in the JAAS configuration file. Here is a hypothetical
  *     JAAS configuration file entry for a database-oriented login module that uses
  *     a Tomcat-managed JNDI database resource:
- *     <blockquote><pre>Catalina {
-org.foobar.auth.DatabaseLoginModule REQUIRED
-    JNDI_RESOURCE=jdbc/AuthDB
-  USER_TABLE=users
-  USER_ID_COLUMN=id
-  USER_NAME_COLUMN=name
-  USER_CREDENTIAL_COLUMN=password
-  ROLE_TABLE=roles
-  ROLE_NAME_COLUMN=name
-  PRINCIPAL_FACTORY=org.foobar.auth.impl.SimplePrincipalFactory;
-};</pre></blockquote></li>
+ *     <blockquote><pre>
+ * Catalina {
+ * org.foobar.auth.DatabaseLoginModule REQUIRED
+ *   JNDI_RESOURCE=jdbc/AuthDB
+ *   USER_TABLE=users
+ *   USER_ID_COLUMN=id
+ *   USER_NAME_COLUMN=name
+ *   USER_CREDENTIAL_COLUMN=password
+ *   ROLE_TABLE=roles
+ *   ROLE_NAME_COLUMN=name
+ *   PRINCIPAL_FACTORY=org.foobar.auth.impl.SimplePrincipalFactory;
+ * };
+ * </pre></blockquote></li>
  * <li>To set the JAAS configuration file
  *     location, set the <code>CATALINA_OPTS</code> environment variable
  *     similar to the following:
-<blockquote><code>CATALINA_OPTS="-Djava.security.auth.login.config=$CATALINA_HOME/conf/jaas.config"</code></blockquote>
+ *     <blockquote><code>CATALINA_OPTS="-Djava.security.auth.login.config=$CATALINA_HOME/conf/jaas.config"</code></blockquote>
  * </li>
  * <li>As part of the login process, JAASRealm registers its own <code>CallbackHandler</code>,
  *     called (unsurprisingly) <code>JAASCallbackHandler</code>. This handler supplies the

==================================================
TomcatURLStreamHandlerFactory.java
index cb4a7421bb..d93c7dbb36 100644
--- a/java/org/apache/catalina/servlets/CGIServlet.java
+++ b/java/org/apache/catalina/servlets/CGIServlet.java
@@ -765,7 +765,7 @@ public final class CGIServlet extends HttpServlet {
          *
          * @return true if the request was parsed without error, false if there
          *           was a problem
-
+         *
          * @throws UnsupportedEncodingException Unknown encoding
          */
         protected boolean setupFromRequest(HttpServletRequest req)

==================================================
AjpProcessor.java
index f2dd35ba39..d58f9d3fef 100644
--- a/java/org/apache/catalina/webresources/TomcatURLStreamHandlerFactory.java
+++ b/java/org/apache/catalina/webresources/TomcatURLStreamHandlerFactory.java
@@ -86,7 +86,6 @@ public class TomcatURLStreamHandlerFactory implements URLStreamHandlerFactory {
      *         successfully disabled as a result of this call.
      *         <code>false</code> if the factory was already registered prior
      *         to this call.
-
      */
     public static boolean disable() {
         return !getInstanceInternal(false).isRegistered();

==================================================
StringManager.java
index a7911e75f8..3d50ae89b5 100644
--- a/java/org/apache/coyote/ajp/AjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpProcessor.java
@@ -565,7 +565,7 @@ public class AjpProcessor extends AbstractProcessor {
      * @param message   The message to populate
      * @param block If there is no data available to read when this method is
      *              called, should this call block until data becomes available?
-
+     *
      * @return true if the message has been read, false if no data was read
      *
      * @throws IOException any other failure, including incomplete reads

==================================================
package-info.java
index b20094d071..c34368acd1 100644
--- a/java/org/apache/naming/StringManager.java
+++ b/java/org/apache/naming/StringManager.java
@@ -92,13 +92,13 @@ public class StringManager {
     }
 
     /**
-        Get a string from the underlying resource bundle or return
-        null if the String is not found.
-
-        @param key to desired resource String
-        @return resource String matching <i>key</i> from underlying
-                bundle or null if not found.
-        @throws IllegalArgumentException if <i>key</i> is null.
+     *  Get a string from the underlying resource bundle or return
+     *  null if the String is not found.
+     *
+     *  @param key to desired resource String
+     *  @return resource String matching <i>key</i> from underlying
+     *          bundle or null if not found.
+     *  @throws IllegalArgumentException if <i>key</i> is null.
      */
     public String getString(String key) {
         if(key == null){

==================================================
PoolConfiguration.java
index e930cb4cc6..a439660a21 100644
--- a/java/org/apache/tomcat/dbcp/dbcp2/managed/package-info.java
+++ b/java/org/apache/tomcat/dbcp/dbcp2/managed/package-info.java
@@ -29,7 +29,7 @@
  * transaction is committed or rolled back the enlisted connections are
  * committed or rolled back.
  * </p>
-
+ *
  * <p>
  * This package supports full XADataSources and non-XA data sources using
  * local transaction semantics. non-XA data sources commit and rollback as

==================================================
