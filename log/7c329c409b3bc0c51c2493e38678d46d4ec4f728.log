7c329c409b3bc0c51c2493e38678d46d4ec4f728
==================================================
Remove deprecated code
==================================================
Mark Thomas
==================================================
Mon Oct 31 09:02:45 2022 +0000
==================================================
Context.java
Remove deprecated code


==================================================
StandardContext.java
index 1ac36ee92e..cf940fad3f 100644
--- a/java/org/apache/catalina/Context.java
+++ b/java/org/apache/catalina/Context.java
@@ -1943,26 +1943,4 @@ public interface Context extends Container, ContextBind {
      * @param dispatcherWrapsSameObject the new flag value
      */
     public void setDispatcherWrapsSameObject(boolean dispatcherWrapsSameObject);
-
-
-    /**
-     * @return <code>true</code> if the resources archive lookup will
-     * use a bloom filter.
-     *
-     * @deprecated This method will be removed in Tomcat 11 onwards.
-     *             Use {@link WebResourceRoot#getArchiveIndexStrategy()}
-     */
-    @Deprecated
-    public boolean getUseBloomFilterForArchives();
-
-    /**
-     * Set bloom filter flag value.
-     *
-     * @param useBloomFilterForArchives The new fast class path scan flag
-     *
-     * @deprecated This method will be removed in Tomcat 11 onwards
-     *             Use {@link WebResourceRoot#setArchiveIndexStrategy(String)}
-     */
-    @Deprecated
-    public void setUseBloomFilterForArchives(boolean useBloomFilterForArchives);
 }

==================================================
FailedContext.java
index 92f9f9d434..ba1d0facb7 100644
--- a/java/org/apache/catalina/core/mbeans-descriptors.xml
+++ b/java/org/apache/catalina/core/mbeans-descriptors.xml
@@ -321,10 +321,6 @@
                description="Unpack WAR property"
                type="boolean"/>
 
-    <attribute name="useBloomFilterForArchives"
-               description="DEPRECATED: Use a bloom filter for archives lookups"
-               type="boolean"/>
-
     <attribute name="useHttpOnly"
                description="Indicates that session cookies should use HttpOnly"
                type="boolean"/>

==================================================
AbstractArchiveResourceSet.java
index e352ce28c7..3234eed0cd 100644
--- a/java/org/apache/catalina/startup/FailedContext.java
+++ b/java/org/apache/catalina/startup/FailedContext.java
@@ -835,11 +835,4 @@ public class FailedContext extends LifecycleMBeanBase implements Context {
     public boolean getParallelAnnotationScanning() { return false; }
     @Override
     public void setParallelAnnotationScanning(boolean parallelAnnotationScanning) {}
-
-    @Override
-    public boolean getUseBloomFilterForArchives() { return false; }
-
-    @Override
-    public void setUseBloomFilterForArchives(boolean useBloomFilterForArchives) {}
-
 }
\ No newline at end of file

==================================================
TestAbstractArchiveResourceSet.java
index 3933cb3ab1..9d22a7d1b0 100644
--- a/java/org/apache/catalina/webresources/AbstractArchiveResourceSet.java
+++ b/java/org/apache/catalina/webresources/AbstractArchiveResourceSet.java
@@ -309,14 +309,12 @@ public abstract class AbstractArchiveResourceSet extends AbstractResourceSet {
                 sm.getString("abstractArchiveResourceSet.setReadOnlyFalse"));
     }
 
-    @SuppressWarnings("deprecation")
     protected JarFile openJarFile() throws IOException {
         synchronized (archiveLock) {
             if (archive == null) {
                 archive = new JarFile(new File(getBase()), true, ZipFile.OPEN_READ, Runtime.version());
                 WebResourceRoot root = getRoot();
-                if (root.getArchiveIndexStrategyEnum().getUsesBloom() ||
-                        root.getContext() != null && root.getContext().getUseBloomFilterForArchives()) {
+                if (root.getArchiveIndexStrategyEnum().getUsesBloom()) {
                     jarContents = new JarContents(archive);
                     retainBloomFilterForArchives = root.getArchiveIndexStrategyEnum().getRetain();
                 }

==================================================
TesterContext.java
index ba5f742d65..acaff361d5 100644
--- a/test/org/apache/catalina/webresources/TestAbstractArchiveResourceSet.java
+++ b/test/org/apache/catalina/webresources/TestAbstractArchiveResourceSet.java
@@ -78,32 +78,6 @@ public class TestAbstractArchiveResourceSet {
         Assert.assertNull(getJarContents(jarResourceSet));
     }
 
-    @Deprecated
-    @Test
-    public void testBloomFilterWithSimpleArchiveIndexing() throws Exception {
-        WebResourceRoot root = new TesterWebResourceRoot();
-
-        root.setArchiveIndexStrategy(WebResourceRoot.ArchiveIndexStrategy.SIMPLE.name());
-        root.getContext().setUseBloomFilterForArchives(true);
-
-        File file = new File("webapps/examples/WEB-INF/lib/taglibs-standard-impl-1.2.5-migrated-0.0.1.jar");
-
-        JarResourceSet jarResourceSet = new JarResourceSet(root, "/WEB-INF/classes", file.getAbsolutePath(), "/");
-        jarResourceSet.getArchiveEntries(false);
-        Assert.assertNotNull(getJarContents(jarResourceSet));
-
-        WebResource r1 = jarResourceSet.getResource("/WEB-INF/classes/org/");
-        Assert.assertTrue(r1.isDirectory());
-        Assert.assertNotNull(getJarContents(jarResourceSet));
-
-        WebResource r2 = jarResourceSet.getResource("/WEB-INF/classes/org");
-        Assert.assertTrue(r2.isDirectory());
-        Assert.assertNotNull(getJarContents(jarResourceSet));
-
-        jarResourceSet.gc();
-        Assert.assertNull(getJarContents(jarResourceSet));
-    }
-
     private JarContents getJarContents(Object target)
         throws IllegalArgumentException, IllegalAccessException, NoSuchFieldException, SecurityException {
         Field field = AbstractArchiveResourceSet.class.getDeclaredField("jarContents");

==================================================
