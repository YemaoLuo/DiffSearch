c8c886059aaf86d0c81296572c93f48588338429
==================================================
Change the channel field to protected.
==================================================
Keiichi Fujino
==================================================
Wed Apr 20 04:58:59 2016 +0000
==================================================
ChannelCoordinator.java
Change the channel field to protected.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1740044 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ChannelInterceptorBase.java
index 221c8e8e15..930962de81 100644
--- a/java/org/apache/catalina/tribes/group/ChannelCoordinator.java
+++ b/java/org/apache/catalina/tribes/group/ChannelCoordinator.java
@@ -151,10 +151,10 @@ public class ChannelCoordinator extends ChannelInterceptorBase implements Messag
             //listens to with the local membership settings
             if ( Channel.SND_RX_SEQ==(svc & Channel.SND_RX_SEQ) ) {
                 clusterReceiver.setMessageListener(this);
-                clusterReceiver.setChannel(getChannel());
+                clusterReceiver.setChannel(channel);
                 clusterReceiver.start();
                 //synchronize, big time FIXME
-                Member localMember = getChannel().getLocalMember(false);
+                Member localMember = channel.getLocalMember(false);
                 if (localMember instanceof StaticMember) {
                     // static member
                     StaticMember staticMember = (StaticMember)localMember;
@@ -171,14 +171,14 @@ public class ChannelCoordinator extends ChannelInterceptorBase implements Messag
                 valid = true;
             }
             if ( Channel.SND_TX_SEQ==(svc & Channel.SND_TX_SEQ) ) {
-                clusterSender.setChannel(getChannel());
+                clusterSender.setChannel(channel);
                 clusterSender.start();
                 valid = true;
             }
 
             if ( Channel.MBR_RX_SEQ==(svc & Channel.MBR_RX_SEQ) ) {
                 membershipService.setMembershipListener(this);
-                membershipService.setChannel(getChannel());
+                membershipService.setChannel(channel);
                 if (membershipService instanceof McastService) {
                     ((McastService)membershipService).setMessageListener(this);
                 }
@@ -186,7 +186,7 @@ public class ChannelCoordinator extends ChannelInterceptorBase implements Messag
                 valid = true;
             }
             if ( Channel.MBR_TX_SEQ==(svc & Channel.MBR_TX_SEQ) ) {
-                membershipService.setChannel(getChannel());
+                membershipService.setChannel(channel);
                 membershipService.start(MembershipService.MBR_TX);
                 valid = true;
             }

==================================================
MessageDispatchInterceptor.java
index 244c2c8f00..67aed3f180 100644
--- a/java/org/apache/catalina/tribes/group/ChannelInterceptorBase.java
+++ b/java/org/apache/catalina/tribes/group/ChannelInterceptorBase.java
@@ -29,7 +29,7 @@ public abstract class ChannelInterceptorBase implements ChannelInterceptor {
 
     private ChannelInterceptor next;
     private ChannelInterceptor previous;
-    private Channel channel;
+    protected Channel channel;
     //default value, always process
     protected int optionFlag = 0;
 

==================================================
TcpPingInterceptor.java
index e3465445c5..b5b20fba0d 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/MessageDispatchInterceptor.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/MessageDispatchInterceptor.java
@@ -111,7 +111,7 @@ public class MessageDispatchInterceptor extends ChannelInterceptorBase {
             return;
         }
         String channelName = "";
-        if (getChannel().getName() != null) channelName = "[" + getChannel().getName() + "]";
+        if (channel.getName() != null) channelName = "[" + channel.getName() + "]";
         executor = ExecutorFactory.newThreadPool(maxSpareThreads, maxThreads, keepAliveTime,
                 TimeUnit.MILLISECONDS,
                 new TcclThreadFactory("MessageDispatchInterceptor.MessageDispatchThread" + channelName));

==================================================
McastService.java
index 3d6a1c1c61..35d999e8ef 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/TcpPingInterceptor.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/TcpPingInterceptor.java
@@ -70,7 +70,7 @@ public class TcpPingInterceptor extends ChannelInterceptorBase {
             thread = new PingThread();
             thread.setDaemon(true);
             String channelName = "";
-            if (getChannel().getName() != null) channelName = "[" + getChannel().getName() + "]";
+            if (channel.getName() != null) channelName = "[" + channel.getName() + "]";
             thread.setName("TcpPingInterceptor.PingThread" + channelName +"-"+cnt.addAndGet(1));
             thread.start();
         }

==================================================
McastServiceImpl.java
index f83aa87ed2..181de95dbb 100644
--- a/java/org/apache/catalina/tribes/membership/McastService.java
+++ b/java/org/apache/catalina/tribes/membership/McastService.java
@@ -78,7 +78,7 @@ public class McastService implements MembershipService,MembershipListener,Messag
 
     protected byte[] domain;
 
-    private Channel channel;
+    protected Channel channel;
 
     /**
      * Create a membership service.

==================================================
ReceiverBase.java
index 958cbd6966..56696d16b3 100644
--- a/java/org/apache/catalina/tribes/membership/McastServiceImpl.java
+++ b/java/org/apache/catalina/tribes/membership/McastServiceImpl.java
@@ -155,7 +155,7 @@ public class McastServiceImpl {
      */
     protected final boolean localLoopbackDisabled;
 
-    private Channel channel;
+    protected Channel channel;
 
     /**
      * Create a new mcast service instance.
@@ -620,7 +620,7 @@ public class McastServiceImpl {
 
             Thread t = new RecoveryThread(parent);
             String channelName = "";
-            if (parent.getChannel().getName() != null) channelName = "[" + parent.getChannel().getName() + "]";
+            if (parent.channel.getName() != null) channelName = "[" + parent.channel.getName() + "]";
             t.setName("Tribes-MembershipRecovery" + channelName);
             t.setDaemon(true);
             t.start();

==================================================
ReplicationTransmitter.java
index 3f043a17a1..7ef1389788 100644
--- a/java/org/apache/catalina/tribes/transport/ReceiverBase.java
+++ b/java/org/apache/catalina/tribes/transport/ReceiverBase.java
@@ -80,7 +80,7 @@ public abstract class ReceiverBase implements ChannelReceiver, ListenCallback, R
     private long maxIdleTime = 60000;
 
     private ExecutorService executor;
-    private Channel channel;
+    protected Channel channel;
 
     public ReceiverBase() {
     }

==================================================
BioReceiver.java
index 56c86d20cd..2e826b9ec8 100644
--- a/java/org/apache/catalina/tribes/transport/ReplicationTransmitter.java
+++ b/java/org/apache/catalina/tribes/transport/ReplicationTransmitter.java
@@ -30,7 +30,7 @@ import org.apache.catalina.tribes.transport.nio.PooledParallelSender;
  */
 public class ReplicationTransmitter implements ChannelSender {
 
-    private Channel channel;
+    protected Channel channel;
 
     public ReplicationTransmitter() {
     }

==================================================
NioReceiver.java
index 965e59c8bd..ca4aaf4301 100644
--- a/java/org/apache/catalina/tribes/transport/bio/BioReceiver.java
+++ b/java/org/apache/catalina/tribes/transport/bio/BioReceiver.java
@@ -54,7 +54,7 @@ public class BioReceiver extends ReceiverBase implements Runnable {
             getBind();
             bind();
             String channelName = "";
-            if (getChannel().getName() != null) channelName = "[" + getChannel().getName() + "]";
+            if (channel.getName() != null) channelName = "[" + channel.getName() + "]";
             Thread t = new Thread(this, "BioReceiver" + channelName);
             t.setDaemon(true);
             t.start();

==================================================
