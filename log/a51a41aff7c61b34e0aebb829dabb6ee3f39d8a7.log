a51a41aff7c61b34e0aebb829dabb6ee3f39d8a7
==================================================
Logs for Filters must be non-static as loggers are created per class-loader and Filters may be used in multiple class loaders.
==================================================
Mark Thomas
==================================================
Thu May 24 12:57:24 2018 +0000
==================================================
AddDefaultCharsetFilter.java
Logs for Filters must be non-static as loggers are created per class-loader and Filters may be used in multiple class loaders.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1832160 13f79535-47bb-0310-9956-ffa450edef68



==================================================
CsrfPreventionFilterBase.java
index c7469df655..d82bb9fc44 100644
--- a/java/org/apache/catalina/filters/AddDefaultCharsetFilter.java
+++ b/java/org/apache/catalina/filters/AddDefaultCharsetFilter.java
@@ -47,8 +47,9 @@ import org.apache.juli.logging.LogFactory;
  */
 public class AddDefaultCharsetFilter extends FilterBase {
 
-    private static final Log log =
-        LogFactory.getLog(AddDefaultCharsetFilter.class);
+    // Log must be non-static as loggers are created per class-loader and this
+    // Filter may be used in multiple class loaders
+    private final Log log = LogFactory.getLog(AddDefaultCharsetFilter.class);
 
     private static final String DEFAULT_ENCODING = "ISO-8859-1";
 

==================================================
ExpiresFilter.java
index 53ac9d0cc8..4e2d1334be 100644
--- a/java/org/apache/catalina/filters/CsrfPreventionFilterBase.java
+++ b/java/org/apache/catalina/filters/CsrfPreventionFilterBase.java
@@ -29,7 +29,9 @@ import org.apache.juli.logging.LogFactory;
 
 public abstract class CsrfPreventionFilterBase extends FilterBase {
 
-    private static final Log log = LogFactory.getLog(CsrfPreventionFilterBase.class);
+    // Log must be non-static as loggers are created per class-loader and this
+    // Filter may be used in multiple class loaders
+    private final Log log = LogFactory.getLog(CsrfPreventionFilterBase.class);
 
     private String randomClass = SecureRandom.class.getName();
 

==================================================
FailedRequestFilter.java
index eb4f6b59b6..5661465d70 100644
--- a/java/org/apache/catalina/filters/ExpiresFilter.java
+++ b/java/org/apache/catalina/filters/ExpiresFilter.java
@@ -1050,7 +1050,9 @@ public class ExpiresFilter extends FilterBase {
 
     private static final String HEADER_LAST_MODIFIED = "Last-Modified";
 
-    private static final Log log = LogFactory.getLog(ExpiresFilter.class);
+    // Log must be non-static as loggers are created per class-loader and this
+    // Filter may be used in multiple class loaders
+    private final Log log = LogFactory.getLog(ExpiresFilter.class);
 
     private static final String PARAMETER_EXPIRES_BY_TYPE = "ExpiresByType";
 

==================================================
HttpHeaderSecurityFilter.java
index 13a612880f..9034fb156a 100644
--- a/java/org/apache/catalina/filters/FailedRequestFilter.java
+++ b/java/org/apache/catalina/filters/FailedRequestFilter.java
@@ -43,7 +43,9 @@ import org.apache.tomcat.util.http.Parameters.FailReason;
  */
 public class FailedRequestFilter extends FilterBase {
 
-    private static final Log log = LogFactory.getLog(FailedRequestFilter.class);
+    // Log must be non-static as loggers are created per class-loader and this
+    // Filter may be used in multiple class loaders
+    private final Log log = LogFactory.getLog(FailedRequestFilter.class);
 
     @Override
     protected Log getLogger() {

==================================================
RemoteAddrFilter.java
index a6e6f0f840..4a2e1bc02c 100644
--- a/java/org/apache/catalina/filters/HttpHeaderSecurityFilter.java
+++ b/java/org/apache/catalina/filters/HttpHeaderSecurityFilter.java
@@ -36,7 +36,9 @@ import org.apache.juli.logging.LogFactory;
  */
 public class HttpHeaderSecurityFilter extends FilterBase {
 
-    private static final Log log = LogFactory.getLog(HttpHeaderSecurityFilter.class);
+    // Log must be non-static as loggers are created per class-loader and this
+    // Filter may be used in multiple class loaders
+    private final Log log = LogFactory.getLog(HttpHeaderSecurityFilter.class);
 
     // HSTS
     private static final String HSTS_HEADER_NAME = "Strict-Transport-Security";

==================================================
RemoteHostFilter.java
index 4da7d2cc68..afc6f4e833 100644
--- a/java/org/apache/catalina/filters/RemoteAddrFilter.java
+++ b/java/org/apache/catalina/filters/RemoteAddrFilter.java
@@ -33,18 +33,11 @@ import org.apache.juli.logging.LogFactory;
  * @author Craig R. McClanahan
  *
  */
-
 public final class RemoteAddrFilter extends RequestFilter {
 
-    // ----------------------------------------------------- Instance Variables
-    private static final Log log = LogFactory.getLog(RemoteAddrFilter.class);
-
-
-    // ------------------------------------------------------------- Properties
-
-
-
-    // --------------------------------------------------------- Public Methods
+    // Log must be non-static as loggers are created per class-loader and this
+    // Filter may be used in multiple class loaders
+    private final Log log = LogFactory.getLog(RemoteAddrFilter.class);
 
 
     /**

==================================================
RemoteIpFilter.java
index 0871a405ac..0ca08b11ff 100644
--- a/java/org/apache/catalina/filters/RemoteHostFilter.java
+++ b/java/org/apache/catalina/filters/RemoteHostFilter.java
@@ -35,12 +35,10 @@ import org.apache.juli.logging.LogFactory;
  */
 public final class RemoteHostFilter extends RequestFilter {
 
-    // ----------------------------------------------------- Instance Variables
+    // Log must be non-static as loggers are created per class-loader and this
+    // Filter may be used in multiple class loaders
+    private final Log log = LogFactory.getLog(RemoteHostFilter.class);
 
-    private static final Log log = LogFactory.getLog(RemoteHostFilter.class);
-
-
-    // --------------------------------------------------------- Public Methods
 
     /**
      * Extract the desired request property, and pass it (along with the

==================================================
RequestDumperFilter.java
index ddcde7d6f5..96aaafa449 100644
--- a/java/org/apache/catalina/filters/RemoteIpFilter.java
+++ b/java/org/apache/catalina/filters/RemoteIpFilter.java
@@ -652,10 +652,9 @@ public class RemoteIpFilter extends GenericFilter {
 
     protected static final String INTERNAL_PROXIES_PARAMETER = "internalProxies";
 
-    /**
-     * Logger
-     */
-    private static final Log log = LogFactory.getLog(RemoteIpFilter.class);
+    // Log must be non-static as loggers are created per class-loader and this
+    // Filter may be used in multiple class loaders
+    private final Log log = LogFactory.getLog(RemoteIpFilter.class);
 
     protected static final String PROTOCOL_HEADER_PARAMETER = "protocolHeader";
 

==================================================
SetCharacterEncodingFilter.java
index 5feb16e509..419e8425d3 100644
--- a/java/org/apache/catalina/filters/RequestDumperFilter.java
+++ b/java/org/apache/catalina/filters/RequestDumperFilter.java
@@ -64,10 +64,9 @@ public class RequestDumperFilter extends GenericFilter {
         }
     };
 
-    /**
-     * The logger for this class.
-     */
-    private static final Log log = LogFactory.getLog(RequestDumperFilter.class);
+    // Log must be non-static as loggers are created per class-loader and this
+    // Filter may be used in multiple class loaders
+    private final Log log = LogFactory.getLog(RequestDumperFilter.class);
 
 
     /**

==================================================
