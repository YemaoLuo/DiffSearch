a393d738f67ab1be62a63f443e25386a66697661
==================================================
Use available constants
==================================================
Igal Sapir
==================================================
0700
==================================================
VersionLoggerListener.java
Use available constants



==================================================
ConnectorStoreAppender.java
index 472cd46d48..9e92df0339 100644
--- a/java/org/apache/catalina/startup/VersionLoggerListener.java
+++ b/java/org/apache/catalina/startup/VersionLoggerListener.java
@@ -113,9 +113,9 @@ public class VersionLoggerListener implements LifecycleListener {
         log.info(sm.getString("versionLoggerListener.vm.vendor",
                 System.getProperty("java.vm.vendor")));
         log.info(sm.getString("versionLoggerListener.catalina.base",
-                System.getProperty("catalina.base")));
+                System.getProperty(Constants.CATALINA_BASE_PROP)));
         log.info(sm.getString("versionLoggerListener.catalina.home",
-                System.getProperty("catalina.home")));
+                System.getProperty(Constants.CATALINA_HOME_PROP)));
 
         if (logArgs) {
             List<String> args = ManagementFactory.getRuntimeMXBean().getInputArguments();

==================================================
StandardContextSF.java
index 5b872aca5b..615eb722de 100644
--- a/java/org/apache/catalina/storeconfig/ConnectorStoreAppender.java
+++ b/java/org/apache/catalina/storeconfig/ConnectorStoreAppender.java
@@ -29,6 +29,7 @@ import java.util.HashSet;
 import java.util.List;
 import java.util.Set;
 
+import org.apache.catalina.Globals;
 import org.apache.catalina.connector.Connector;
 import org.apache.coyote.ProtocolHandler;
 import org.apache.tomcat.util.IntrospectionUtils;
@@ -281,7 +282,7 @@ public class ConnectorStoreAppender extends StoreAppender {
 
     protected File getCatalinaBase() {
 
-        File file = new File(System.getProperty("catalina.base"));
+        File file = new File(System.getProperty(Globals.CATALINA_BASE_PROP));
         try {
             file = file.getCanonicalFile();
         } catch (IOException e) {

==================================================
StoreContextAppender.java
index 5a15731160..98a752717b 100644
--- a/java/org/apache/catalina/storeconfig/StandardContextSF.java
+++ b/java/org/apache/catalina/storeconfig/StandardContextSF.java
@@ -28,6 +28,7 @@ import java.util.List;
 import org.apache.catalina.Container;
 import org.apache.catalina.Context;
 import org.apache.catalina.Engine;
+import org.apache.catalina.Globals;
 import org.apache.catalina.Host;
 import org.apache.catalina.LifecycleListener;
 import org.apache.catalina.Loader;
@@ -122,7 +123,7 @@ public class StandardContextSF extends StoreFactoryBase {
         if (configFile != null) {
             File config = new File(configFile.toURI());
             if (!config.isAbsolute()) {
-                config = new File(System.getProperty("catalina.base"),
+                config = new File(System.getProperty(Globals.CATALINA_BASE_PROP),
                         config.getPath());
             }
             if( (!config.isFile()) || (!config.canWrite())) {
@@ -188,7 +189,7 @@ public class StandardContextSF extends StoreFactoryBase {
         if (configFile != null) {
             File config = new File(configFile.toURI());
             if (!config.isAbsolute()) {
-                config = new File(System.getProperty("catalina.base"),
+                config = new File(System.getProperty(Globals.CATALINA_BASE_PROP),
                         config.getPath());
             }
             // Open an output writer for the new configuration file
@@ -294,7 +295,7 @@ public class StandardContextSF extends StoreFactoryBase {
      */
     protected File configBase(Context context) {
 
-        File file = new File(System.getProperty("catalina.base"), "conf");
+        File file = new File(System.getProperty(Globals.CATALINA_BASE_PROP), "conf");
         Container host = context.getParent();
 
         if (host instanceof Host) {
@@ -328,9 +329,9 @@ public class StandardContextSF extends StoreFactoryBase {
     protected String[] filterWatchedResources(StandardContext context,
             String[] wresources) throws Exception {
         File configBase = configBase(context);
-        String confContext = new File(System.getProperty("catalina.base"),
+        String confContext = new File(System.getProperty(Globals.CATALINA_BASE_PROP),
                 "conf/context.xml").getCanonicalPath();
-        String confWeb = new File(System.getProperty("catalina.base"),
+        String confWeb = new File(System.getProperty(Globals.CATALINA_BASE_PROP),
                 "conf/web.xml").getCanonicalPath();
         String confHostDefault = new File(configBase, "context.xml.default")
                 .getCanonicalPath();

==================================================
StoreFileMover.java
index 920a482152..b52d20c1b7 100644
--- a/java/org/apache/catalina/storeconfig/StoreContextAppender.java
+++ b/java/org/apache/catalina/storeconfig/StoreContextAppender.java
@@ -21,6 +21,7 @@ import java.io.IOException;
 import java.io.PrintWriter;
 
 import org.apache.catalina.Container;
+import org.apache.catalina.Globals;
 import org.apache.catalina.core.StandardContext;
 import org.apache.catalina.core.StandardHost;
 
@@ -87,7 +88,7 @@ public class StoreContextAppender extends StoreAppender {
         File appBase;
         File file = new File(host.getAppBase());
         if (!file.isAbsolute()) {
-            file = new File(System.getProperty("catalina.base"), host
+            file = new File(System.getProperty(Globals.CATALINA_BASE_PROP), host
                     .getAppBase());
         }
         try {

==================================================
Library.java
index b52d5b8188..9d68e1c1c2 100644
--- a/java/org/apache/catalina/storeconfig/StoreFileMover.java
+++ b/java/org/apache/catalina/storeconfig/StoreFileMover.java
@@ -23,6 +23,7 @@ import java.io.OutputStreamWriter;
 import java.io.PrintWriter;
 import java.sql.Timestamp;
 
+import org.apache.catalina.Globals;
 import org.apache.tomcat.util.res.StringManager;
 
 /**
@@ -38,7 +39,7 @@ public class StoreFileMover {
 
     private String encoding = "UTF-8";
 
-    private String basename = System.getProperty("catalina.base");
+    private String basename = System.getProperty(Globals.CATALINA_BASE_PROP);
 
     private File configOld;
 

==================================================
LoggingBaseTest.java
index f22c32cb86..a00d29b408 100644
--- a/java/org/apache/tomcat/jni/Library.java
+++ b/java/org/apache/tomcat/jni/Library.java
@@ -18,6 +18,8 @@ package org.apache.tomcat.jni;
 
 import java.io.File;
 
+import org.apache.catalina.Globals;
+
 public final class Library {
 
     /* Default library names */
@@ -30,7 +32,7 @@ public final class Library {
     private Library() throws Exception {
         boolean loaded = false;
         StringBuilder err = new StringBuilder();
-        File binLib = new File(System.getProperty("catalina.home"), "bin");
+        File binLib = new File(System.getProperty(Globals.CATALINA_HOME_PROP), "bin");
         for (int i = 0; i < NAMES.length; i++) {
             File library = new File(binLib, System.mapLibraryName(NAMES[i]));
             try {

==================================================
TestConfigFileLoader.java
index 7949bbc2b9..bf0ea4038a 100644
--- a/test/org/apache/catalina/startup/LoggingBaseTest.java
+++ b/test/org/apache/catalina/startup/LoggingBaseTest.java
@@ -112,7 +112,7 @@ public abstract class LoggingBaseTest {
         Path tempBasePath = FileSystems.getDefault().getPath(tempBase.getAbsolutePath());
         tempDir = Files.createTempDirectory(tempBasePath, "test").toFile();
 
-        System.setProperty("catalina.base", tempDir.getAbsolutePath());
+        System.setProperty(Constants.CATALINA_BASE_PROP, tempDir.getAbsolutePath());
 
         // Configure logging
         System.setProperty("java.util.logging.manager",

==================================================
