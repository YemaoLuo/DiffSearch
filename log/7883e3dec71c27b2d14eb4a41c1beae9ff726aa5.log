7883e3dec71c27b2d14eb4a41c1beae9ff726aa5
==================================================
Refactor InstanceManager lookup
==================================================
Mark Thomas
==================================================
Wed May 5 12:08:50 2021 +0100
==================================================
WsSession.java
Refactor InstanceManager lookup



==================================================
WsWebSocketContainer.java
index 4c71d84302..c91a0f22d9 100644
--- a/java/org/apache/tomcat/websocket/WsSession.java
+++ b/java/org/apache/tomcat/websocket/WsSession.java
@@ -54,7 +54,6 @@ import jakarta.websocket.server.ServerEndpointConfig.Configurator;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.InstanceManager;
-import org.apache.tomcat.InstanceManagerBindings;
 import org.apache.tomcat.util.ExceptionUtils;
 import org.apache.tomcat.util.res.StringManager;
 import org.apache.tomcat.websocket.pojo.PojoEndpointServer;
@@ -173,12 +172,7 @@ public class WsSession implements Session {
         this.userProperties.putAll(endpointConfig.getUserProperties());
         this.id = Long.toHexString(ids.getAndIncrement());
 
-        InstanceManager instanceManager = webSocketContainer.getInstanceManager();
-        if (instanceManager == null) {
-            instanceManager = InstanceManagerBindings.get(applicationClassLoader);
-        }
-
-        this.localEndpoint = clientEndpointHolder.getInstance(instanceManager);
+        this.localEndpoint = clientEndpointHolder.getInstance(getInstanceManager());
 
         if (log.isDebugEnabled()) {
             log.debug(sm.getString("wsSession.created", id));
@@ -261,11 +255,7 @@ public class WsSession implements Session {
         this.userProperties.putAll(endpointConfig.getUserProperties());
         this.id = Long.toHexString(ids.getAndIncrement());
 
-        InstanceManager instanceManager = webSocketContainer.getInstanceManager();
-        if (instanceManager == null) {
-            instanceManager = InstanceManagerBindings.get(applicationClassLoader);
-        }
-
+        InstanceManager instanceManager = getInstanceManager();
         Configurator configurator = serverEndpointConfig.getConfigurator();
         Class<?> clazz = serverEndpointConfig.getEndpointClass();
 
@@ -390,10 +380,7 @@ public class WsSession implements Session {
         this.userProperties.putAll(endpointConfig.getUserProperties());
         this.id = Long.toHexString(ids.getAndIncrement());
 
-        InstanceManager instanceManager = webSocketContainer.getInstanceManager();
-        if (instanceManager == null) {
-            instanceManager = InstanceManagerBindings.get(applicationClassLoader);
-        }
+        InstanceManager instanceManager = getInstanceManager();
         if (instanceManager != null) {
             try {
                 instanceManager.newInstance(localEndpoint);
@@ -408,6 +395,11 @@ public class WsSession implements Session {
     }
 
 
+    public InstanceManager getInstanceManager() {
+        return webSocketContainer.getInstanceManager(applicationClassLoader);
+    }
+
+
     @Override
     public WebSocketContainer getContainer() {
         checkState();
@@ -758,10 +750,7 @@ public class WsSession implements Session {
 
         // Fire the onClose event
         Throwable throwable = null;
-        InstanceManager instanceManager = webSocketContainer.getInstanceManager();
-        if (instanceManager == null) {
-            instanceManager = InstanceManagerBindings.get(applicationClassLoader);
-        }
+        InstanceManager instanceManager = webSocketContainer.getInstanceManager(applicationClassLoader);
         Thread t = Thread.currentThread();
         ClassLoader cl = t.getContextClassLoader();
         t.setContextClassLoader(applicationClassLoader);

==================================================
