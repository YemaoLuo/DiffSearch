8587b971ce86afb1ac1feb140863ed544d4b144e
==================================================
As of r487420, the RxTask implementations don't implement run() as loop with a call to wait().
==================================================
Mark Thomas
==================================================
Thu Apr 5 09:59:40 2018 +0000
==================================================
AbstractRxTask.java
As of r487420, the RxTask implementations don't implement run() as loop with a call to wait().
Clean-up some left-over syncs and notify() calls.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1828410 13f79535-47bb-0310-9956-ffa450edef68



==================================================
RxTaskPool.java
index 11e52d43be..f8e8956f6b 100644
--- a/java/org/apache/catalina/tribes/transport/AbstractRxTask.java
+++ b/java/org/apache/catalina/tribes/transport/AbstractRxTask.java
@@ -26,6 +26,7 @@ public abstract class AbstractRxTask implements Runnable
 
     private ListenCallback callback;
     private RxTaskPool pool;
+    @Deprecated
     private boolean doRun = true;
     private int options;
     protected boolean useBufferPool = true;
@@ -46,6 +47,14 @@ public abstract class AbstractRxTask implements Runnable
         this.callback = callback;
     }
 
+    /**
+     * Sets doRun field which is unused.
+     *
+     * @param doRun New value
+     *
+     * @deprecated Will be removed in Tomcat 10
+     */
+    @Deprecated
     public void setDoRun(boolean doRun) {
         this.doRun = doRun;
     }
@@ -62,14 +71,20 @@ public abstract class AbstractRxTask implements Runnable
         return callback;
     }
 
+    /**
+     * Gets doRun field which is unused.
+     *
+     * @return Current field value
+     *
+     * @deprecated Will be removed in Tomcat 10
+     */
+    @Deprecated
     public boolean isDoRun() {
         return doRun;
     }
 
-    public void close()
-    {
+    public void close() {
         doRun = false;
-        notify();
     }
 
     public void setUseBufferPool(boolean usebufpool) {

==================================================
BioReceiver.java
index 4a2c5b0115..15633e92a1 100644
--- a/java/org/apache/catalina/tribes/transport/RxTaskPool.java
+++ b/java/org/apache/catalina/tribes/transport/RxTaskPool.java
@@ -105,14 +105,12 @@ public class RxTaskPool {
                 //if ( idle.size() < minThreads && !idle.contains(worker)) idle.add(worker);
                 if ( idle.size() < maxTasks && !idle.contains(worker)) idle.add(worker); //let max be the upper limit
                 else {
-                    worker.setDoRun(false);
-                    synchronized (worker){worker.notify();}
+                    worker.close();
                 }
-                mutex.notify();
+                mutex.notifyAll();
             }
-        }else {
-            worker.setDoRun(false);
-            synchronized (worker){worker.notify();}
+        } else {
+            worker.close();
         }
     }
 

==================================================
BioReplicationTask.java
index 965e59c8bd..3214ab58bb 100644
--- a/java/org/apache/catalina/tribes/transport/bio/BioReceiver.java
+++ b/java/org/apache/catalina/tribes/transport/bio/BioReceiver.java
@@ -130,9 +130,9 @@ public class BioReceiver extends ReceiverBase implements Runnable {
                 if ( doListen() ) throw x;
             }
             if ( !doListen() ) {
-                task.setDoRun(false);
                 task.serviceSocket(null,null);
                 getExecutor().execute(task);
+                task.close();
                 break; //regular shutdown
             }
             if ( socket == null ) continue;

==================================================
