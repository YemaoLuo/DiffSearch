fe909bad46150ffb9dcd436c0095ab97c20a2745
==================================================
Refactor. Add new method isToken(String) to reduce duplication
==================================================
Mark Thomas
==================================================
Fri Jan 7 19:46:15 2022 +0000
==================================================
ApplicationPushBuilder.java
Refactor. Add new method isToken(String) to reduce duplication


==================================================
Rfc6265CookieProcessor.java
index 0b5679b9e2..525c7792e7 100644
--- a/java/org/apache/catalina/core/ApplicationPushBuilder.java
+++ b/java/org/apache/catalina/core/ApplicationPushBuilder.java
@@ -199,11 +199,8 @@ public class ApplicationPushBuilder implements PushBuilder {
                     sm.getString("applicationPushBuilder.methodInvalid", upperMethod));
         }
         // Check a token was supplied
-        for (char c : upperMethod.toCharArray()) {
-            if (!HttpParser.isToken(c)) {
-                throw new IllegalArgumentException(
-                        sm.getString("applicationPushBuilder.methodNotToken", upperMethod));
-            }
+        if (!HttpParser.isToken(upperMethod)) {
+            throw new IllegalArgumentException(sm.getString("applicationPushBuilder.methodNotToken", upperMethod));
         }
         this.method = method;
         return this;

==================================================
HttpParser.java
index 79fe0d92af..b7f85f5017 100644
--- a/java/org/apache/tomcat/util/http/Rfc6265CookieProcessor.java
+++ b/java/org/apache/tomcat/util/http/Rfc6265CookieProcessor.java
@@ -272,15 +272,11 @@ public class Rfc6265CookieProcessor extends CookieProcessorBase {
 
 
     private void validateAttribute(String name, String value) {
-        char[] chars = name.toCharArray();
-        for (char ch : chars) {
-            if (!HttpParser.isToken(ch)) {
-                throw new IllegalArgumentException(sm.getString(
-                        "rfc6265CookieProcessor.invalidAttributeName", name));
-            }
+        if (!HttpParser.isToken(name)) {
+            throw new IllegalArgumentException(sm.getString("rfc6265CookieProcessor.invalidAttributeName", name));
         }
 
-        chars = value.toCharArray();
+        char[] chars = value.toCharArray();
         for (char ch : chars) {
             if (ch < 0x20 || ch > 0x7E || ch == ';') {
                 throw new IllegalArgumentException(sm.getString(

==================================================
TestHttpParser.java
index b06d468534..7dcb63196f 100644
--- a/java/org/apache/tomcat/util/http/parser/HttpParser.java
+++ b/java/org/apache/tomcat/util/http/parser/HttpParser.java
@@ -237,6 +237,23 @@ public class HttpParser {
     }
 
 
+    public static boolean isToken(String s) {
+        // token = 1 * tchar (RFC 7230)
+        if (s == null) {
+            return false;
+        }
+        if (s.isEmpty()) {
+            return false;
+        }
+        for (char c : s.toCharArray()) {
+            if (!isToken(c)) {
+                return false;
+            }
+        }
+        return true;
+    }
+
+
     public static boolean isHex(int c) {
         // Fast for correct values, slower for some incorrect ones
         try {

==================================================
