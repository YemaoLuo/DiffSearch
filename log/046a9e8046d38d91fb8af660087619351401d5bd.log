046a9e8046d38d91fb8af660087619351401d5bd
==================================================
Align Realm.authenticate(String,String) code to work the same way across all appropriate realms: logging, order of operations, code comments, etc.
==================================================
Christopher Schultz
==================================================
Sat Aug 27 11:47:09 2016 +0000
==================================================
DataSourceRealm.java
Align Realm.authenticate(String,String) code to work the same way across all appropriate realms: logging, order of operations, code comments, etc.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1757997 13f79535-47bb-0310-9956-ffa450edef68



==================================================
JDBCRealm.java
index 205a08a122..d5ac10a743 100644
--- a/java/org/apache/catalina/realm/DataSourceRealm.java
+++ b/java/org/apache/catalina/realm/DataSourceRealm.java
@@ -287,16 +287,26 @@ public class DataSourceRealm extends RealmBase {
      * @return the associated principal, or <code>null</code> if there is none.
      */
     protected Principal authenticate(Connection dbConnection,
-                                               String username,
-                                               String credentials) {
+                                     String username,
+                                     String credentials) {
+        // No user or no credentials
+        // Can't possibly authenticate, don't bother the database then
+        if (username == null || credentials == null) {
+            if (containerLog.isTraceEnabled())
+                containerLog.trace(sm.getString("dataSourceRealm.authenticateFailure",
+                                                username));
+            return null;
+        }
 
+        // Look up the user's credentials
         String dbCredentials = getPassword(dbConnection, username);
 
-        if (credentials == null || dbCredentials == null) {
+        if(dbCredentials == null) {
+            // User was not found in the database.
+
             if (containerLog.isTraceEnabled())
-                containerLog.trace(
-                    sm.getString("dataSourceRealm.authenticateFailure",
-                                 username));
+                containerLog.trace(sm.getString("dataSourceRealm.authenticateFailure",
+                                                username));
             return null;
         }
 
@@ -305,15 +315,13 @@ public class DataSourceRealm extends RealmBase {
 
         if (validated) {
             if (containerLog.isTraceEnabled())
-                containerLog.trace(
-                    sm.getString("dataSourceRealm.authenticateSuccess",
-                                 username));
+                containerLog.trace(sm.getString("dataSourceRealm.authenticateSuccess",
+                                                username));
         } else {
             if (containerLog.isTraceEnabled())
-                containerLog.trace(
-                    sm.getString("dataSourceRealm.authenticateFailure",
-                                 username));
-            return (null);
+                containerLog.trace(sm.getString("dataSourceRealm.authenticateFailure",
+                                                username));
+            return null;
         }
 
         ArrayList<String> list = getRoles(dbConnection, username);

==================================================
MemoryRealm.java
index 554a3c5009..fc93598352 100644
--- a/java/org/apache/catalina/realm/JDBCRealm.java
+++ b/java/org/apache/catalina/realm/JDBCRealm.java
@@ -370,10 +370,12 @@ public class JDBCRealm
     public synchronized Principal authenticate(Connection dbConnection,
                                                String username,
                                                String credentials) {
-
         // No user or no credentials
         // Can't possibly authenticate, don't bother the database then
         if (username == null || credentials == null) {
+            if (containerLog.isTraceEnabled())
+                containerLog.trace(sm.getString("jdbcRealm.authenticateFailure",
+                                                username));
             return null;
         }
 
@@ -381,6 +383,8 @@ public class JDBCRealm
         String dbCredentials = getPassword(username);
 
         if (dbCredentials == null) {
+            // User was not found in the database.
+
             if (containerLog.isTraceEnabled())
                 containerLog.trace(sm.getString("jdbcRealm.authenticateFailure",
                                                 username));
@@ -398,14 +402,13 @@ public class JDBCRealm
             if (containerLog.isTraceEnabled())
                 containerLog.trace(sm.getString("jdbcRealm.authenticateFailure",
                                                 username));
-            return (null);
+            return null;
         }
 
         ArrayList<String> roles = getRoles(username);
 
         // Create and return a suitable Principal for this user
         return (new GenericPrincipal(username, credentials, roles));
-
     }
 
 

==================================================
RealmBase.java
index 54c24e1607..aec126fa90 100644
--- a/java/org/apache/catalina/realm/MemoryRealm.java
+++ b/java/org/apache/catalina/realm/MemoryRealm.java
@@ -114,30 +114,35 @@ public class MemoryRealm  extends RealmBase {
     @Override
     public Principal authenticate(String username, String credentials) {
 
+        // No user or no credentials
+        // Can't possibly authenticate, don't bother the database then
+        if (username == null || credentials == null) {
+            if (log.isDebugEnabled())
+                log.debug(sm.getString("memoryRealm.authenticateFailure", username));
+            return null;
+        }
+
         GenericPrincipal principal = principals.get(username);
 
-        boolean validated;
-        if (principal == null) {
-            validated = false;
-        } else {
-            if (credentials == null || principal.getPassword() == null) {
-                if (log.isDebugEnabled())
-                    log.debug(sm.getString("memoryRealm.authenticateFailure", username));
-                return (null);
-            }
-            validated = getCredentialHandler().matches(credentials, principal.getPassword());
+        if(principal == null || principal.getPassword() == null) {
+            // User was not found in the database of the password was null
+
+            if (log.isDebugEnabled())
+                log.debug(sm.getString("memoryRealm.authenticateFailure", username));
+            return null;
         }
 
+        boolean validated = getCredentialHandler().matches(credentials, principal.getPassword());
+
         if (validated) {
             if (log.isDebugEnabled())
                 log.debug(sm.getString("memoryRealm.authenticateSuccess", username));
-            return (principal);
+            return principal;
         } else {
             if (log.isDebugEnabled())
                 log.debug(sm.getString("memoryRealm.authenticateFailure", username));
-            return (null);
+            return null;
         }
-
     }
 
 

==================================================
