4c2a08336bfd90b78c0d20c0fdb54b052f7c9a92
==================================================
First attempt (untested) at incoming flow control
==================================================
Mark Thomas
==================================================
Thu Jun 4 20:54:43 2015 +0000
==================================================
Http2Parser.java
First attempt (untested) at incoming flow control

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1683640 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http2UpgradeHandler.java
index 0bf776b178..531238fcb0 100644
--- a/java/org/apache/coyote/http2/Http2Parser.java
+++ b/java/org/apache/coyote/http2/Http2Parser.java
@@ -134,7 +134,6 @@ class Http2Parser {
             padLength = b[0] & 0xFF;
         }
 
-        // TODO Flow control
         ByteBuffer dest = output.getInputByteBuffer(streamId, payloadSize);
         if (dest == null) {
             swallow(payloadSize);

==================================================
Stream.java
index ce9f6231de..9f87592af1 100644
--- a/java/org/apache/coyote/http2/Http2UpgradeHandler.java
+++ b/java/org/apache/coyote/http2/Http2UpgradeHandler.java
@@ -439,6 +439,21 @@ public class Http2UpgradeHandler extends AbstractStream implements InternalHttpU
     }
 
 
+    void writeWindowUpdate(Stream stream, int increment) throws IOException {
+        synchronized (socketWrapper) {
+            // Build window update frame for stream 0
+            byte[] frame = new byte[13];
+            ByteUtil.setThreeBytes(frame, 0,  4);
+            frame[3] = FrameType.WINDOW_UPDATE.getIdByte();
+            ByteUtil.set31Bits(frame, 9, increment);
+            socketWrapper.write(true, frame, 0, frame.length);
+            // Change stream Id and re-use
+            ByteUtil.set31Bits(frame, 5, stream.getIdentifier().intValue());
+            socketWrapper.write(true, frame, 0, frame.length);
+        }
+    }
+
+
     private void processWrites() throws IOException {
         synchronized (socketWrapper) {
             if (socketWrapper.flush(false)) {

==================================================
