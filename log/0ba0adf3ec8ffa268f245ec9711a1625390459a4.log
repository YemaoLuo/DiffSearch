0ba0adf3ec8ffa268f245ec9711a1625390459a4
==================================================
Total data sent should agree with any content-length header
==================================================
Mark Thomas
==================================================
Mon Mar 27 08:02:38 2017 +0000
==================================================
Http2UpgradeHandler.java
Total data sent should agree with any content-length header
Found with the h2spec tool written by Moto Ishizawa.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1788841 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Stream.java
index d2fa289131..b0d9aa7b3d 100644
--- a/java/org/apache/coyote/http2/LocalStrings.properties
+++ b/java/org/apache/coyote/http2/LocalStrings.properties
@@ -75,6 +75,7 @@ pingManager.roundTripTime=Connection [{0}] Round trip time measured as [{1}]ns
 stream.closed=Connection [{0}], Stream [{1}], Unable to write to stream once it has been closed
 stream.header.case=Connection [{0}], Stream [{1}], HTTP header name [{2}] must be in lower case
 stream.header.connection=Connection [{0}], Stream [{1}], HTTP header [connection] is not permitted in an HTTP/2 request
+stream.header.contentLength=Connection [{0}], Stream [{1}], The content length header value [{2}] does not agree with the size of the data received [{3}]
 stream.header.debug=Connection [{0}], Stream [{1}], HTTP header [{2}], Value [{3}]
 stream.header.duplicate=Connection [{0}], Stream [{1}], received multiple [{3}] headers
 stream.header.noPath=Connection [{0}], Stream [{1}], The [:path] pseudo header was empty

==================================================
StreamProcessor.java
index 7c7c973337..9e7ce51ccc 100644
--- a/java/org/apache/coyote/http2/Stream.java
+++ b/java/org/apache/coyote/http2/Stream.java
@@ -54,6 +54,7 @@ class Stream extends AbstractStream implements HeaderEmitter {
     }
 
     private volatile int weight = Constants.DEFAULT_WEIGHT;
+    private volatile long contentLengthReceived = 0;
 
     private final Http2UpgradeHandler handler;
     private final StreamStateMachine state;
@@ -446,7 +447,24 @@ class Stream extends AbstractStream implements HeaderEmitter {
     }
 
 
-    final void receivedEndOfStream() {
+    final void receivedData(int payloadSize) throws ConnectionException {
+        contentLengthReceived += payloadSize;
+        long contentLengthHeader = coyoteRequest.getContentLengthLong();
+        if (contentLengthHeader > -1 && contentLengthReceived > contentLengthHeader) {
+            throw new ConnectionException(sm.getString("stream.header.contentLength",
+                    getConnectionId(), getIdentifier(), Long.valueOf(contentLengthHeader),
+                    Long.valueOf(contentLengthReceived)), Http2Error.PROTOCOL_ERROR);
+        }
+    }
+
+
+    final void receivedEndOfStream() throws ConnectionException {
+        long contentLengthHeader = coyoteRequest.getContentLengthLong();
+        if (contentLengthHeader > -1 && contentLengthReceived != contentLengthHeader) {
+            throw new ConnectionException(sm.getString("stream.header.contentLength",
+                    getConnectionId(), getIdentifier(), Long.valueOf(contentLengthHeader),
+                    Long.valueOf(contentLengthReceived)), Http2Error.PROTOCOL_ERROR);
+        }
         state.receivedEndOfStream();
         if (inputBuffer != null) {
             inputBuffer.notifyEof();

==================================================
