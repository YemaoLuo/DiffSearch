f0f385146d69f64255c39879de431c5f4407974a
==================================================
More unused classes
==================================================
Mark Emlyn
==================================================
Sun Oct 14 17:59:38 2012 +0000
==================================================
LineNumber.java
More unused classes

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1398107 13f79535-47bb-0310-9956-ffa450edef68



==================================================
LineNumberTable.java
deleted file mode 100644
index e15db52523..0000000000
--- a/java/org/apache/tomcat/util/bcel/classfile/LineNumber.java
+++ /dev/null
@@ -1,47 +0,0 @@
-/*
- *  Licensed to the Apache Software Foundation (ASF) under one or more
- *  contributor license agreements.  See the NOTICE file distributed with
- *  this work for additional information regarding copyright ownership.
- *  The ASF licenses this file to You under the Apache License, Version 2.0
- *  (the "License"); you may not use this file except in compliance with
- *  the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- *
- */
-package org.apache.tomcat.util.bcel.classfile;
-
-import java.io.DataInput;
-import java.io.IOException;
-import java.io.Serializable;
-
-/**
- * This class represents a (PC offset, line number) pair, i.e., a line number in
- * the source that corresponds to a relative address in the byte code. This
- * is used for debugging purposes.
- *
- * @version $Id$
- * @author  <A HREF="mailto:m.dahm@gmx.de">M. Dahm</A>
- * @see     LineNumberTable
- */
-public final class LineNumber implements Cloneable, Serializable {
-
-    private static final long serialVersionUID = 3393830630264494355L;
-
-
-    /**
-     * Construct object from file stream.
-     * @param file Input stream
-     * @throws IOException
-     */
-    LineNumber(DataInput file) throws IOException {
-        file.readUnsignedShort();   // Unused start_pc
-        file.readUnsignedShort();   // Unused line_number
-    }
-}

==================================================
LocalVariable.java
index e6807e51b6..d2ae8f9edf 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/LineNumberTable.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/LineNumberTable.java
@@ -28,26 +28,10 @@ import java.io.IOException;
  * @version $Id$
  * @author  <A HREF="mailto:m.dahm@gmx.de">M. Dahm</A>
  * @see     Code
- * @see LineNumber
  */
 public final class LineNumberTable extends Attribute {
 
     private static final long serialVersionUID = 6585122636118666124L;
-    private int line_number_table_length;
-    private LineNumber[] line_number_table; // Table of line/numbers pairs
-
-
-    /*
-     * @param name_index Index of name
-     * @param length Content length in bytes
-     * @param line_number_table Table of line/numbers pairs
-     * @param constant_pool Array of constants
-     */
-    public LineNumberTable(int name_index, int length, LineNumber[] line_number_table,
-            ConstantPool constant_pool) {
-        super(name_index, length, constant_pool);
-        setLineNumberTable(line_number_table);
-    }
 
 
     /**
@@ -60,20 +44,10 @@ public final class LineNumberTable extends Attribute {
      */
     LineNumberTable(int name_index, int length, DataInputStream file, ConstantPool constant_pool)
             throws IOException {
-        this(name_index, length, (LineNumber[]) null, constant_pool);
-        line_number_table_length = (file.readUnsignedShort());
-        line_number_table = new LineNumber[line_number_table_length];
+        super(name_index, length, constant_pool);
+        int line_number_table_length = (file.readUnsignedShort());
         for (int i = 0; i < line_number_table_length; i++) {
-            line_number_table[i] = new LineNumber(file);
+            Utility.swallowLineNumber(file);
         }
     }
-
-
-    /**
-     * @param line_number_table the line number entries for this table
-     */
-    public final void setLineNumberTable( LineNumber[] line_number_table ) {
-        this.line_number_table = line_number_table;
-        line_number_table_length = (line_number_table == null) ? 0 : line_number_table.length;
-    }
 }

==================================================
LocalVariableTable.java
deleted file mode 100644
index 596875c219..0000000000
--- a/java/org/apache/tomcat/util/bcel/classfile/LocalVariable.java
+++ /dev/null
@@ -1,51 +0,0 @@
-/*
- *  Licensed to the Apache Software Foundation (ASF) under one or more
- *  contributor license agreements.  See the NOTICE file distributed with
- *  this work for additional information regarding copyright ownership.
- *  The ASF licenses this file to You under the Apache License, Version 2.0
- *  (the "License"); you may not use this file except in compliance with
- *  the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- *
- */
-package org.apache.tomcat.util.bcel.classfile;
-
-import java.io.DataInput;
-import java.io.IOException;
-import java.io.Serializable;
-
-import org.apache.tomcat.util.bcel.Constants;
-
-/**
- * This class represents a local variable within a method. It contains its
- * scope, name, signature and index on the method's frame.
- *
- * @version $Id$
- * @author  <A HREF="mailto:m.dahm@gmx.de">M. Dahm</A>
- * @see     LocalVariableTable
- */
-public final class LocalVariable implements Constants, Cloneable, Serializable {
-
-    private static final long serialVersionUID = -914189896372081589L;
-
-
-    /**
-     * Construct object from file stream.
-     * @param file Input stream
-     * @throws IOException
-     */
-    LocalVariable(DataInput file) throws IOException {
-        file.readUnsignedShort();   // Unused start_pc
-        file.readUnsignedShort();   // Unused length
-        file.readUnsignedShort();   // Unused name_index
-        file.readUnsignedShort();   // Unused signature_index
-        file.readUnsignedShort();   // Unused index
-    }
-}

==================================================
LocalVariableTypeTable.java
index dd45fde9f9..53d0ae59d9 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/LocalVariableTable.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/LocalVariableTable.java
@@ -27,26 +27,10 @@ import java.io.IOException;
  * @version $Id$
  * @author  <A HREF="mailto:m.dahm@gmx.de">M. Dahm</A>
  * @see     Code
- * @see LocalVariable
  */
 public class LocalVariableTable extends Attribute {
 
     private static final long serialVersionUID = -3904314258294133920L;
-    private int local_variable_table_length; // Table of local
-    private LocalVariable[] local_variable_table; // variables
-
-
-    /**
-     * @param name_index Index in constant pool to `LocalVariableTable'
-     * @param length Content length in bytes
-     * @param local_variable_table Table of local variables
-     * @param constant_pool Array of constants
-     */
-    public LocalVariableTable(int name_index, int length, LocalVariable[] local_variable_table,
-            ConstantPool constant_pool) {
-        super(name_index, length, constant_pool);
-        setLocalVariableTable(local_variable_table);
-    }
 
 
     /**
@@ -59,19 +43,10 @@ public class LocalVariableTable extends Attribute {
      */
     LocalVariableTable(int name_index, int length, DataInputStream file, ConstantPool constant_pool)
             throws IOException {
-        this(name_index, length, (LocalVariable[]) null, constant_pool);
-        local_variable_table_length = (file.readUnsignedShort());
-        local_variable_table = new LocalVariable[local_variable_table_length];
+        super(name_index, length, constant_pool);
+        int local_variable_table_length = (file.readUnsignedShort());
         for (int i = 0; i < local_variable_table_length; i++) {
-            local_variable_table[i] = new LocalVariable(file);
+            Utility.swallowLocalVariable(file);
         }
     }
-
-
-    public final void setLocalVariableTable( LocalVariable[] local_variable_table ) {
-        this.local_variable_table = local_variable_table;
-        local_variable_table_length = (local_variable_table == null)
-                ? 0
-                : local_variable_table.length;
-    }
 }

==================================================
Utility.java
index ac94c5f6c0..ea9b1abcde 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/LocalVariableTypeTable.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/LocalVariableTypeTable.java
@@ -47,32 +47,16 @@ import java.io.IOException;
 //  }
 // J5TODO: Needs some testing !
 public class LocalVariableTypeTable extends Attribute {
-  private static final long serialVersionUID = -5466082154076451597L;
-private int             local_variable_type_table_length; // Table of local
-  private LocalVariable[] local_variable_type_table;        // variables
+    private static final long serialVersionUID = -5466082154076451597L;
 
-  public LocalVariableTypeTable(int name_index, int length,
-                                LocalVariable[] local_variable_table,
-                                ConstantPool    constant_pool)
-  {
-    super(name_index, length, constant_pool);
-    setLocalVariableTable(local_variable_table);
-  }
+    LocalVariableTypeTable(int name_index, int length,
+            DataInputStream dis, ConstantPool constant_pool)
+                    throws IOException {
+        super(name_index, length, constant_pool);
 
-  LocalVariableTypeTable(int nameIdx, int len, DataInputStream dis,ConstantPool cpool) throws IOException {
-    this(nameIdx, len, (LocalVariable[])null, cpool);
+        int local_variable_type_table_length = (dis.readUnsignedShort());
 
-    local_variable_type_table_length = (dis.readUnsignedShort());
-    local_variable_type_table = new LocalVariable[local_variable_type_table_length];
-
-    for(int i=0; i < local_variable_type_table_length; i++)
-      local_variable_type_table[i] = new LocalVariable(dis);
-  }
-
-  public final void setLocalVariableTable(LocalVariable[] local_variable_table)
-  {
-    this.local_variable_type_table = local_variable_table;
-    local_variable_type_table_length = (local_variable_table == null)? 0 :
-      local_variable_table.length;
-  }
+        for(int i=0; i < local_variable_type_table_length; i++)
+            Utility.swallowLocalVariable(dis);
+    }
 }

==================================================
