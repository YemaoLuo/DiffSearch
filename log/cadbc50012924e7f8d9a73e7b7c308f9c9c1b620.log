cadbc50012924e7f8d9a73e7b7c308f9c9c1b620
==================================================
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=58387
==================================================
Mark Thomas
==================================================
Thu Sep 17 07:42:37 2015 +0000
==================================================
AbstractProcessor.java
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=58387
Fix rare data race

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1703509 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Request.java
index c3056122c5..aa835d135e 100644
--- a/java/org/apache/coyote/AbstractProcessor.java
+++ b/java/org/apache/coyote/AbstractProcessor.java
@@ -85,6 +85,7 @@ public abstract class AbstractProcessor implements ActionHook, Processor {
         response = coyoteResponse;
         response.setHook(this);
         request.setResponse(response);
+        request.setHook(this);
     }
 
     /**

==================================================
Response.java
index d0f9276c10..057fceb696 100644
--- a/java/org/apache/coyote/Request.java
+++ b/java/org/apache/coyote/Request.java
@@ -131,7 +131,7 @@ public final class Request {
     private final HashMap<String,Object> attributes = new HashMap<>();
 
     private Response response;
-    private ActionHook hook;
+    private volatile ActionHook hook;
 
     private long bytesRead=0;
     // Time of the request - useful to avoid repeated calls to System.currentTime
@@ -350,18 +350,18 @@ public final class Request {
         return response;
     }
 
-    public void setResponse( Response response ) {
-        this.response=response;
-        response.setRequest( this );
+    public void setResponse(Response response) {
+        this.response = response;
+        response.setRequest(this);
     }
 
-    public void action(ActionCode actionCode, Object param) {
-        if( hook==null && response!=null ) {
-            hook=response.getHook();
-        }
+    protected void setHook(ActionHook hook) {
+        this.hook = hook;
+    }
 
+    public void action(ActionCode actionCode, Object param) {
         if (hook != null) {
-            if( param==null ) {
+            if (param == null) {
                 hook.action(actionCode, this);
             } else {
                 hook.action(actionCode, param);

==================================================
