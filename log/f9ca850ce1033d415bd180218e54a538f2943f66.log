f9ca850ce1033d415bd180218e54a538f2943f66
==================================================
Remainder of fix for https://issues.apache.org/bugzilla/show_bug.cgi?id=48379
==================================================
Mark Emlyn
==================================================
Wed Mar 10 16:18:10 2010 +0000
==================================================
Context.java
Remainder of fix for https://issues.apache.org/bugzilla/show_bug.cgi?id=48379
Allow session cookie name to be configured per context
With this option, the servlet 3 options and system property there were just too many places this was being configured so the system property option has been removed for Tomcat 7.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@921426 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Globals.java
index 5efefa4df6..e55b728572 100644
--- a/java/org/apache/catalina/Context.java
+++ b/java/org/apache/catalina/Context.java
@@ -176,6 +176,25 @@ public interface Context extends Container {
     public void setCookies(boolean cookies);
 
     
+    /**
+     * Gets the name to use for session cookies. Overrides any setting that
+     * may be specified by the application.
+     * 
+     * @return  The value of the default session cookie name or null if not
+     *          specified
+     */
+    public String getSessionCookieName();
+    
+    
+    /**
+     * Sets the name to use for session cookies. Overrides any setting that
+     * may be specified by the application.
+     * 
+     * @param sessionCookieName   The name to use
+     */
+    public void setSessionCookieName(String sessionCookieName);
+
+    
     /**
      * Gets the value of the use HttpOnly cookies for session cookies flag.
      * 

==================================================
CoyoteAdapter.java
index 99c03a4c81..6c11e586a2 100644
--- a/java/org/apache/catalina/Globals.java
+++ b/java/org/apache/catalina/Globals.java
@@ -268,9 +268,7 @@ public final class Globals {
      * The name of the cookie used to pass the session identifier back
      * and forth with the client.
      */
-    public static final String SESSION_COOKIE_NAME =
-        System.getProperty("org.apache.catalina.SESSION_COOKIE_NAME",
-                "JSESSIONID");
+    public static final String SESSION_COOKIE_NAME = "JSESSIONID";
 
 
     /**

==================================================
ApplicationSessionCookieConfig.java
index 7ccad23f51..188694633a 100644
--- a/java/org/apache/catalina/connector/CoyoteAdapter.java
+++ b/java/org/apache/catalina/connector/CoyoteAdapter.java
@@ -29,6 +29,7 @@ import org.apache.catalina.Globals;
 import org.apache.catalina.Wrapper;
 import org.apache.tomcat.util.res.StringManager;
 import org.apache.catalina.comet.CometEvent;
+import org.apache.catalina.core.ApplicationSessionCookieConfig;
 import org.apache.catalina.core.AsyncContextImpl;
 import org.apache.catalina.util.ServerInfo;
 import org.apache.catalina.util.URLEncoder;
@@ -722,9 +723,12 @@ public class CoyoteAdapter implements Adapter {
         if (count <= 0)
             return;
 
+        String sessionCookieName =
+            ApplicationSessionCookieConfig.getSessionCookieName(context);
+
         for (int i = 0; i < count; i++) {
             ServerCookie scookie = serverCookies.getCookie(i);
-            if (scookie.getName().equals(Globals.SESSION_COOKIE_NAME)) {
+            if (scookie.getName().equals(sessionCookieName)) {
                 // Override anything requested in the URL
                 if (!request.isRequestedSessionIdFromCookie()) {
                     // Accept only the first session id cookie

==================================================
StandardContext.java
index 7e76eda891..1a148e25bb 100644
--- a/java/org/apache/catalina/core/ApplicationSessionCookieConfig.java
+++ b/java/org/apache/catalina/core/ApplicationSessionCookieConfig.java
@@ -122,11 +122,7 @@ public class ApplicationSessionCookieConfig implements SessionCookieConfig {
         //       2. Values from SessionCookieConfig
         //       3. Defaults
 
-        String cookieName = scc.getName();
-        if (cookieName == null) {
-            cookieName = Globals.SESSION_COOKIE_NAME;
-        }
-        Cookie cookie = new Cookie(cookieName, sessionId);
+        Cookie cookie = new Cookie(getSessionCookieName(context), sessionId);
        
         // Just apply the defaults.
         cookie.setMaxAge(scc.getMaxAge());
@@ -162,4 +158,33 @@ public class ApplicationSessionCookieConfig implements SessionCookieConfig {
 
         return cookie;
     }
+    
+    
+    /**
+     * Determine the name to use for the session cookie for the provided
+     * context.
+     * @param context
+     */
+    public static String getSessionCookieName(Context context) {
+        
+        // Priority is:
+        // 1. Cookie name defined in context
+        // 2. Cookie name configured for app
+        // 3. Default defined by spec
+        if (context != null) {
+            String cookieName = context.getSessionCookieName();
+            if (cookieName != null && cookieName.length() > 0) {
+                return cookieName;
+            }
+            
+            SessionCookieConfig scc =
+                context.getServletContext().getSessionCookieConfig();
+            cookieName = scc.getName();
+            if (cookieName != null && cookieName.length() > 0) {
+                return cookieName;
+            }
+        }
+        
+        return Globals.SESSION_COOKIE_NAME;
+    }
 }

==================================================
