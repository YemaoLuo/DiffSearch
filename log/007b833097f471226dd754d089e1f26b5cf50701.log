007b833097f471226dd754d089e1f26b5cf50701
==================================================
Start preparing for non blocking writes, the underlying code has to have the ability if there is ever gonna be a need
==================================================
Filip Hanik
==================================================
Sun Apr 8 17:03:21 2007 +0000
==================================================
NioEndpoint.java
Start preparing for non blocking writes, the underlying code has to have the ability if there is ever gonna be a need
fix NPE


git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk@526577 13f79535-47bb-0310-9956-ffa450edef68



==================================================
NioSelectorPool.java
index 39762b5543..34716c5fc4 100644
--- a/java/org/apache/tomcat/util/net/NioEndpoint.java
+++ b/java/org/apache/tomcat/util/net/NioEndpoint.java
@@ -2063,8 +2063,9 @@ public class NioEndpoint {
             try {
                 key = socket.getIOChannel().keyFor(socket.getPoller().getSelector());
                 int handshake = -1;
+                
                 try {
-                    handshake = socket.handshake(key.isReadable(), key.isWritable());
+                    if (key!=null) handshake = socket.handshake(key.isReadable(), key.isWritable());
                 }catch ( IOException x ) {
                     handshake = -1;
                     if ( log.isDebugEnabled() ) log.debug("Error during SSL handshake",x);
@@ -2091,8 +2092,11 @@ public class NioEndpoint {
                         }
                     } 
                 } else if (handshake == -1 ) {
-                    KeyAttachment ka = (KeyAttachment)key.attachment();
-                    socket.getPoller().cancelledKey(key,SocketStatus.DISCONNECT,false);
+                    KeyAttachment ka = null;
+                    if (key!=null) {
+                        ka = (KeyAttachment) key.attachment();
+                        socket.getPoller().cancelledKey(key, SocketStatus.DISCONNECT, false);
+                    }
                     try {socket.close(true);}catch (IOException ignore){}
                     nioChannels.offer(socket);
                     if ( ka!=null ) keyCache.offer(ka);

==================================================
