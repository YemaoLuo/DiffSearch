dd338a5ad474e73ff968a47d4a93dd821c0110cc
==================================================
Update the internal fork of Commons Codec to r1817136 to pick up some code clean-up.
==================================================
Mark Thomas
==================================================
Mon Dec 4 22:59:11 2017 +0000
==================================================
Base64.java
Update the internal fork of Commons Codec to r1817136 to pick up some code clean-up.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817137 13f79535-47bb-0310-9956-ffa450edef68



==================================================
BaseNCodec.java
index 5496feda5b..9f17e37ef4 100644
--- a/java/org/apache/tomcat/util/codec/binary/Base64.java
+++ b/java/org/apache/tomcat/util/codec/binary/Base64.java
@@ -550,7 +550,7 @@ public class Base64 extends BaseNCodec {
      * @since 1.4 (NOTE:  1.4 chunked the output, whereas 1.5 does not).
      */
     public static String encodeBase64String(final byte[] binaryData) {
-        return StringUtils.newStringUtf8(encodeBase64(binaryData, false));
+        return StringUtils.newStringUsAscii(encodeBase64(binaryData, false));
     }
 
     /**
@@ -576,7 +576,7 @@ public class Base64 extends BaseNCodec {
      * @since 1.4
      */
     public static String encodeBase64URLSafeString(final byte[] binaryData) {
-        return StringUtils.newStringUtf8(encodeBase64(binaryData, false, true));
+        return StringUtils.newStringUsAscii(encodeBase64(binaryData, false, true));
     }
 
     /**

==================================================
StringUtils.java
index ec4a1986d0..4541356b2c 100644
--- a/java/org/apache/tomcat/util/codec/binary/BaseNCodec.java
+++ b/java/org/apache/tomcat/util/codec/binary/BaseNCodec.java
@@ -320,6 +320,8 @@ public abstract class BaseNCodec {
      *
      * @param pArray a byte array containing binary data
      * @return String containing only character data in the appropriate alphabet.
+     * @since 1.5
+     * This is a duplicate of {@link #encodeToString(byte[])}; it was merged during refactoring.
     */
     public String encodeAsString(final byte[] pArray){
         return StringUtils.newStringUtf8(encode(pArray));
@@ -386,7 +388,7 @@ public abstract class BaseNCodec {
      * @return A byte array containing only the base N alphabetic character data
      * @since 1.11
      */
-    public byte[] encode(final byte[] pArray, int offset, int length) {
+    public byte[] encode(final byte[] pArray, final int offset, final int length) {
         if (pArray == null || pArray.length == 0) {
             return pArray;
         }
@@ -425,7 +427,7 @@ public abstract class BaseNCodec {
      *         <code>false</code>, otherwise
      */
     public boolean isInAlphabet(final byte[] arrayOctet, final boolean allowWSPad) {
-        for (byte octet : arrayOctet) {
+        for (final byte octet : arrayOctet) {
             if (!isInAlphabet(octet) &&
                     (!allowWSPad || (octet != pad) && !isWhiteSpace(octet))) {
                 return false;

==================================================
