db9a3cb9872c60c46066f0a41ee0aaa6833966ac
==================================================
Avoid synchronization on roles verification
==================================================
remm remm@apache.org
==================================================
Fri Jun 4 10:08:20 2021 +0200
==================================================
MemoryGroup.java
Avoid synchronization on roles verification

For the memory UserDatabase. The amount of synchronization blocks needed
to browse through groups and check roles looked excessive.


==================================================
MemoryUser.java
index 93dce18cd7..d348693e7c 100644
--- a/java/org/apache/catalina/users/MemoryGroup.java
+++ b/java/org/apache/catalina/users/MemoryGroup.java
@@ -20,6 +20,7 @@ package org.apache.catalina.users;
 import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.List;
+import java.util.concurrent.CopyOnWriteArrayList;
 
 import org.apache.catalina.Role;
 import org.apache.catalina.User;
@@ -71,7 +72,7 @@ public class MemoryGroup extends AbstractGroup {
     /**
      * The set of {@link Role}s associated with this group.
      */
-    protected final ArrayList<Role> roles = new ArrayList<>();
+    protected final CopyOnWriteArrayList<Role> roles = new CopyOnWriteArrayList<>();
 
 
     // ------------------------------------------------------------- Properties
@@ -82,9 +83,7 @@ public class MemoryGroup extends AbstractGroup {
      */
     @Override
     public Iterator<Role> getRoles() {
-        synchronized (roles) {
-            return roles.iterator();
-        }
+        return roles.iterator();
     }
 
 
@@ -124,11 +123,7 @@ public class MemoryGroup extends AbstractGroup {
      */
     @Override
     public void addRole(Role role) {
-        synchronized (roles) {
-            if (!roles.contains(role)) {
-                roles.add(role);
-            }
-        }
+        roles.addIfAbsent(role);
     }
 
 
@@ -139,9 +134,7 @@ public class MemoryGroup extends AbstractGroup {
      */
     @Override
     public boolean isInRole(Role role) {
-        synchronized (roles) {
-            return roles.contains(role);
-        }
+        return roles.contains(role);
     }
 
 
@@ -152,9 +145,7 @@ public class MemoryGroup extends AbstractGroup {
      */
     @Override
     public void removeRole(Role role) {
-        synchronized (roles) {
-            roles.remove(role);
-        }
+        roles.remove(role);
     }
 
 
@@ -163,9 +154,7 @@ public class MemoryGroup extends AbstractGroup {
      */
     @Override
     public void removeRoles() {
-        synchronized (roles) {
-            roles.clear();
-        }
+        roles.clear();
     }
 
 

==================================================
