3844af93351344d3428bddaccfa670d9bcac529d
==================================================
Fix more of the Java 8 Javadoc errors in the org.apace.catalina package
==================================================
Mark Emlyn
==================================================
Mon Oct 13 14:15:11 2014 +0000
==================================================
MemoryUser.java
Fix more of the Java 8 Javadoc errors in the org.apace.catalina package

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1631404 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ExtensionValidator.java
index 7478aa0d17..c54e97ddcd 100644
--- a/java/org/apache/catalina/users/MemoryUser.java
+++ b/java/org/apache/catalina/users/MemoryUser.java
@@ -252,7 +252,7 @@ public class MemoryUser extends AbstractUser {
      *
      * <p><strong>IMPLEMENTATION NOTE</strong> - For backwards compatibility,
      * the reader that processes this entry will accept either
-     * <code>username</code> or </code>name</code> for the username
+     * <code>username</code> or <code>name</code> for the username
      * property.</p>
      */
     public String toXml() {

==================================================
MIME2Java.java
index 920a8727bb..cf97d48764 100644
--- a/java/org/apache/catalina/util/ExtensionValidator.java
+++ b/java/org/apache/catalina/util/ExtensionValidator.java
@@ -112,7 +112,7 @@ public final class ExtensionValidator {
      * file in the /META-INF/ directory of the application and all
      * MANIFEST.MF files in each JAR file located in the WEB-INF/lib
      * directory and creates an <code>ArrayList</code> of
-     * <code>ManifestResorce<code> objects. These objects are then passed
+     * <code>ManifestResorce</code> objects. These objects are then passed
      * to the validateManifestResources method for validation.
      *
      * @param resources The resources configured for this Web Application

==================================================
RequestUtil.java
index ff0886e6cf..ab9354f296 100644
--- a/java/org/apache/catalina/util/MIME2Java.java
+++ b/java/org/apache/catalina/util/MIME2Java.java
@@ -32,6 +32,7 @@ import java.util.Map;
  * methods such as <code>TXDocument#printWithFormat</code> and <code>DTD#printExternal</code>.
  * <P>
  * <TABLE BORDER="0" WIDTH="100%">
+ *  <caption>MIME charset name to Java encoding name mapping</caption>
  *  <TR>
  *      <TD WIDTH="33%">
  *          <P ALIGN="CENTER"><B>Common Name</B>

==================================================
JDBCAccessLogValve.java
index 154e627f10..5bda170e9a 100644
--- a/java/org/apache/catalina/util/RequestUtil.java
+++ b/java/org/apache/catalina/util/RequestUtil.java
@@ -90,7 +90,7 @@ public final class RequestUtil {
      * <strong>IMPLEMENTATION NOTE</strong>:  URL decoding is performed
      * individually on the parsed name and value elements, rather than on
      * the entire query string ahead of time, to properly deal with the case
-     * where the name or value includes an encoded "=" or "&" character
+     * where the name or value includes an encoded "=" or "&amp;" character
      * that would otherwise be interpreted as a delimiter.
      *
      * @param map Map that accumulates the resulting parameters
@@ -169,7 +169,7 @@ public final class RequestUtil {
      * <strong>IMPLEMENTATION NOTE</strong>:  URL decoding is performed
      * individually on the parsed name and value elements, rather than on
      * the entire query string ahead of time, to properly deal with the case
-     * where the name or value includes an encoded "=" or "&" character
+     * where the name or value includes an encoded "=" or "&amp;" character
      * that would otherwise be interpreted as a delimiter.
      *
      * NOTE: byte array data is modified by this method.  Caller beware.

==================================================
RemoteIpValve.java
index b245a6c6c6..5df69a0cc0 100644
--- a/java/org/apache/catalina/valves/JDBCAccessLogValve.java
+++ b/java/org/apache/catalina/valves/JDBCAccessLogValve.java
@@ -41,6 +41,7 @@ import org.apache.tomcat.util.ExceptionUtils;
  * AccessLogValve.
  * To use, copy into the server/classes directory of the Tomcat installation
  * and configure in server.xml as:
+ * </p>
  * <pre>
  *      &lt;Valve className="org.apache.catalina.valves.JDBCAccessLogValve"
  *          driverName="<i>your_jdbc_driver</i>"
@@ -48,7 +49,6 @@ import org.apache.tomcat.util.ExceptionUtils;
  *          pattern="combined" resolveHosts="false"
  *      /&gt;
  * </pre>
- * </p>
  * <p>
  * Many parameters can be configured, such as the database connection (with
  * <code>driverName</code> and <code>connectionURL</code>),

==================================================
RewriteCond.java
index 81f247d88f..03ae57385a 100644
--- a/java/org/apache/catalina/valves/RemoteIpValve.java
+++ b/java/org/apache/catalina/valves/RemoteIpValve.java
@@ -47,6 +47,7 @@ import org.apache.juli.logging.LogFactory;
  * </p>
  * <p>
  * If the incoming <code>request.getRemoteAddr()</code> matches the valve's list of internal proxies :
+ * </p>
  * <ul>
  * <li>Loop on the comma delimited list of IPs and hostnames passed by the preceding load balancer or proxy in the given request's Http
  * header named <code>$remoteIpHeader</code> (default value <code>x-forwarded-for</code>). Values are processed in right-to-left order.</li>
@@ -62,10 +63,8 @@ import org.apache.juli.logging.LogFactory;
  * <code>request.scheme = https</code> and <code>request.serverPort = 443</code>. Note that 443 can be overwritten with the
  * <code>$httpsServerPort</code> configuration parameter.</li>
  * </ul>
- * </p>
- * <p>
- * <strong>Configuration parameters:</strong>
  * <table border="1">
+ * <caption>Configuration parameters</caption>
  * <tr>
  * <th>RemoteIpValve property</th>
  * <th>Description</th>
@@ -96,7 +95,6 @@ import org.apache.juli.logging.LogFactory;
  *     <br>
  * By default, 10/8, 192.168/16, 169.254/16, 127/8 and 172.16/12 are allowed.</td>
  * </tr>
- * </tr>
  * <tr>
  * <td>proxiesHeader</td>
  * <td>Name of the http header created by this valve to hold the list of proxies that have been processed in the incoming
@@ -144,7 +142,6 @@ import org.apache.juli.logging.LogFactory;
  * <td>443</td>
  * </tr>
  * </table>
- * </p>
  * <p>
  * <p>
  * This Valve may be attached to any Container, depending on the granularity of the filtering you wish to perform.
@@ -157,24 +154,23 @@ import org.apache.juli.logging.LogFactory;
  * <code>RemoteIpValve</code> uses regular expression to configure <code>internalProxies</code> and <code>trustedProxies</code> in the same
  * fashion as {@link RequestFilterValve} does.
  * </p>
- * <hr/>
+ * <hr>
  * <p>
  * <strong>Sample with internal proxies</strong>
  * </p>
  * <p>
  * RemoteIpValve configuration:
  * </p>
- * <code><pre>
+ * <code>
  * &lt;Valve
  *   className="org.apache.catalina.valves.RemoteIpValve"
  *   internalProxies="192\.168\.0\.10|192\.168\.0\.11"
  *   remoteIpHeader="x-forwarded-for"
  *   proxiesHeader="x-forwarded-by"
  *   protocolHeader="x-forwarded-proto"
- *   /&gt;</pre></code>
- * <p>
- * Request values:
+ *   /&gt;</code>
  * <table border="1">
+ * <caption>Request Values</caption>
  * <tr>
  * <th>property</th>
  * <th>Value Before RemoteIpValve</th>
@@ -216,27 +212,27 @@ import org.apache.juli.logging.LogFactory;
  * <td>443</td>
  * </tr>
  * </table>
+ * <p>
  * Note : <code>x-forwarded-by</code> header is null because only internal proxies as been traversed by the request.
  * <code>x-forwarded-by</code> is null because all the proxies are trusted or internal.
  * </p>
- * <hr/>
+ * <hr>
  * <p>
  * <strong>Sample with trusted proxies</strong>
  * </p>
  * <p>
  * RemoteIpValve configuration:
  * </p>
- * <code><pre>
+ * <code>
  * &lt;Valve
  *   className="org.apache.catalina.valves.RemoteIpValve"
  *   internalProxies="192\.168\.0\.10|192\.168\.0\.11"
  *   remoteIpHeader="x-forwarded-for"
  *   proxiesHeader="x-forwarded-by"
  *   trustedProxies="proxy1|proxy2"
- *   /&gt;</pre></code>
- * <p>
- * Request values:
+ *   /&gt;</code>
  * <table border="1">
+ * <caption>Request Values</caption>
  * <tr>
  * <th>property</th>
  * <th>Value Before RemoteIpValve</th>
@@ -258,27 +254,27 @@ import org.apache.juli.logging.LogFactory;
  * <td>proxy1, proxy2</td>
  * </tr>
  * </table>
+ * <p>
  * Note : <code>proxy1</code> and <code>proxy2</code> are both trusted proxies that come in <code>x-forwarded-for</code> header, they both
  * are migrated in <code>x-forwarded-by</code> header. <code>x-forwarded-by</code> is null because all the proxies are trusted or internal.
  * </p>
- * <hr/>
+ * <hr>
  * <p>
  * <strong>Sample with internal and trusted proxies</strong>
  * </p>
  * <p>
  * RemoteIpValve configuration:
  * </p>
- * <code><pre>
+ * <code>
  * &lt;Valve
  *   className="org.apache.catalina.valves.RemoteIpValve"
  *   internalProxies="192\.168\.0\.10|192\.168\.0\.11"
  *   remoteIpHeader="x-forwarded-for"
  *   proxiesHeader="x-forwarded-by"
  *   trustedProxies="proxy1|proxy2"
- *   /&gt;</pre></code>
- * <p>
- * Request values:
+ *   /&gt;</code>
  * <table border="1">
+ * <caption>Request Values</caption>
  * <tr>
  * <th>property</th>
  * <th>Value Before RemoteIpValve</th>
@@ -300,28 +296,28 @@ import org.apache.juli.logging.LogFactory;
  * <td>proxy1, proxy2</td>
  * </tr>
  * </table>
+ * <p>
  * Note : <code>proxy1</code> and <code>proxy2</code> are both trusted proxies that come in <code>x-forwarded-for</code> header, they both
  * are migrated in <code>x-forwarded-by</code> header. As <code>192.168.0.10</code> is an internal proxy, it does not appear in
  * <code>x-forwarded-by</code>. <code>x-forwarded-by</code> is null because all the proxies are trusted or internal.
  * </p>
- * <hr/>
+ * <hr>
  * <p>
  * <strong>Sample with an untrusted proxy</strong>
  * </p>
  * <p>
  * RemoteIpValve configuration:
  * </p>
- * <code><pre>
+ * <code>
  * &lt;Valve
  *   className="org.apache.catalina.valves.RemoteIpValve"
  *   internalProxies="192\.168\.0\.10|192\.168\.0\.11"
  *   remoteIpHeader="x-forwarded-for"
  *   proxiesHeader="x-forwarded-by"
  *   trustedProxies="proxy1|proxy2"
- *   /&gt;</pre></code>
- * <p>
- * Request values:
+ *   /&gt;</code>
  * <table border="1">
+ * <caption>Request Values</caption>
  * <tr>
  * <th>property</th>
  * <th>Value Before RemoteIpValve</th>
@@ -343,6 +339,7 @@ import org.apache.juli.logging.LogFactory;
  * <td>proxy1</td>
  * </tr>
  * </table>
+ * <p>
  * Note : <code>x-forwarded-by</code> holds the trusted proxy <code>proxy1</code>. <code>x-forwarded-by</code> holds
  * <code>140.211.11.130</code> because <code>untrusted-proxy</code> is not trusted and thus, we can not trust that
  * <code>untrusted-proxy</code> is the actual remote ip. <code>request.remoteAddr</code> is <code>untrusted-proxy</code> that is an IP

==================================================
