385d0504e414def3de68401bc6bc604835079e98
==================================================
Refactor. Using List interface so use ArrayList rather than LinkedList
==================================================
Mark Thomas
==================================================
Wed Oct 5 17:47:56 2022 +0100
==================================================
PooledSender.java
Refactor. Using List interface so use ArrayList rather than LinkedList


==================================================
RxTaskPool.java
index bbb4370e26..59afa9c6d3 100644
--- a/java/org/apache/catalina/tribes/transport/PooledSender.java
+++ b/java/org/apache/catalina/tribes/transport/PooledSender.java
@@ -17,6 +17,7 @@
 package org.apache.catalina.tribes.transport;
 
 import java.io.IOException;
+import java.util.ArrayList;
 import java.util.List;
 
 import org.apache.catalina.tribes.Member;
@@ -122,8 +123,8 @@ public abstract class PooledSender extends AbstractSender implements MultiPointS
         public SenderQueue(PooledSender parent, int limit) {
             this.limit = limit;
             this.parent = parent;
-            notinuse = new java.util.LinkedList<>();
-            inuse = new java.util.LinkedList<>();
+            notinuse = new ArrayList<>();
+            inuse = new ArrayList<>();
         }
 
         /**

==================================================
RemoteCIDRValve.java
index 24b4bcfc71..c57c3b54ab 100644
--- a/java/org/apache/catalina/tribes/transport/RxTaskPool.java
+++ b/java/org/apache/catalina/tribes/transport/RxTaskPool.java
@@ -15,8 +15,8 @@
  * limitations under the License.
  */
 package org.apache.catalina.tribes.transport;
+import java.util.ArrayList;
 import java.util.Iterator;
-import java.util.LinkedList;
 import java.util.List;
 
 /**
@@ -27,8 +27,8 @@ import java.util.List;
  */
 public class RxTaskPool {
 
-    final List<AbstractRxTask> idle = new LinkedList<>();
-    final List<AbstractRxTask> used = new LinkedList<>();
+    final List<AbstractRxTask> idle = new ArrayList<>();
+    final List<AbstractRxTask> used = new ArrayList<>();
 
     final Object mutex = new Object();
     boolean running = true;

==================================================
