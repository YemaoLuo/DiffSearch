744f17d5458686f0bfb22d210797f29cb99eb332
==================================================
Language improvements
==================================================
Mark Thomas
==================================================
Sun May 23 19:43:15 2021 +0100
==================================================
ServletContext.java
Language improvements

Identified by https://clcdemo.net/analysis.html?project=tomcat.git


==================================================
DistributedManager.java
index 38dd583b5d..3a7e2b16b4 100644
--- a/java/jakarta/servlet/ServletContext.java
+++ b/java/jakarta/servlet/ServletContext.java
@@ -425,8 +425,9 @@ public interface ServletContext {
      * parameter does not exist.
      * <p>
      * This method can make available configuration information useful to an
-     * entire "web application". For example, it can provide a webmaster's email
-     * address or the name of a system that holds critical data.
+     * entire "web application". For example, it can provide a web site
+     * administrator's email address or the name of a system that holds critical
+     * data.
      *
      * @param name
      *            a <code>String</code> containing the name of the parameter

==================================================
Globals.java
index 561c488268..612ebbe77b 100644
--- a/java/org/apache/catalina/DistributedManager.java
+++ b/java/org/apache/catalina/DistributedManager.java
@@ -25,7 +25,7 @@ import java.util.Set;
  * BackupManager is an example of such a Manager as are implementations of the
  * StoreManager interface.
  * <p>
- * With the BackupManager, sessions can be primary (master copy on this node),
+ * With the BackupManager, sessions can be primary (primary copy on this node),
  * backup (backup copy on this node) or proxy (only the session ID on this
  * node). The identity of the primary and backup nodes are known for all
  * sessions, including proxy sessions.

==================================================
DefaultServlet.java
index d2e869887d..916dd38e1c 100644
--- a/java/org/apache/catalina/Globals.java
+++ b/java/org/apache/catalina/Globals.java
@@ -271,8 +271,8 @@ public final class Globals {
     // -------------------------------------------------------- Global constants
 
     /**
-     * The master flag which controls strict servlet specification
-     * compliance.
+     * The flag which controls strict servlet specification compliance. Setting
+     * this flag to {@code true} will change the defaults for other settings.
      */
     public static final boolean STRICT_SERVLET_COMPLIANCE =
             Boolean.parseBoolean(System.getProperty("org.apache.catalina.STRICT_SERVLET_COMPLIANCE", "false"));

==================================================
Constants.java
index cff8f88e27..8e6857599e 100644
--- a/java/org/apache/catalina/servlets/DefaultServlet.java
+++ b/java/org/apache/catalina/servlets/DefaultServlet.java
@@ -364,7 +364,7 @@ public class DefaultServlet extends HttpServlet {
             useAcceptRanges = Boolean.parseBoolean(getServletConfig().getInitParameter("useAcceptRanges"));
         }
 
-        // Sanity check on the specified buffer sizes
+        // Prevent the use of buffer sizes that are too small
         if (input < 256) {
             input = 256;
         }

==================================================
ExtensionValidator.java
index 07a6e072b2..2b8414264d 100644
--- a/java/org/apache/catalina/startup/Constants.java
+++ b/java/org/apache/catalina/startup/Constants.java
@@ -38,7 +38,8 @@ public final class Constants {
     public static final String WarTracker = "/META-INF/war-tracker";
 
     /**
-     * A dummy value used to suppress loading the default web.xml file.
+     * A value that points to a non-existent file used to suppress loading the
+     * default web.xml file.
      *
      * <p>
      * It is useful when embedding Tomcat, when the default configuration is

==================================================
TestSSOnonLoginAndBasicAuthenticator.java
index 2d0975d1b2..772f705e8a 100644
--- a/java/org/apache/catalina/util/ExtensionValidator.java
+++ b/java/org/apache/catalina/util/ExtensionValidator.java
@@ -37,8 +37,8 @@ import org.apache.tomcat.util.res.StringManager;
 
 /**
  * Ensures that all extension dependencies are resolved for a WEB application
- * are met. This class builds a master list of extensions available to an
- * application and then validates those extensions.
+ * are met. This class builds a list of extensions available to an application
+ * and then validates those extensions.
  *
  * See http://docs.oracle.com/javase/1.4.2/docs/guide/extensions/spec.html
  * for a detailed explanation of the extension mechanism in Java.

==================================================
