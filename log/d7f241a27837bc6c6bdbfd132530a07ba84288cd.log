d7f241a27837bc6c6bdbfd132530a07ba84288cd
==================================================
Remove unused clone() methods and references to Cloneable
==================================================
Mark Emlyn
==================================================
Wed Sep 10 22:28:01 2014 +0000
==================================================
Attribute.java
Remove unused clone() methods and references to Cloneable

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1624157 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Constant.java
index 2d2bc90bcd..65ca29cd3a 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Attribute.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Attribute.java
@@ -33,7 +33,7 @@ import org.apache.tomcat.util.bcel.Constants;
  *
  * @author <A HREF="mailto:m.dahm@gmx.de">M. Dahm</A>
  */
-public abstract class Attribute implements Cloneable, Serializable
+public abstract class Attribute implements Serializable
 {
     private static final long serialVersionUID = 1514136303496688899L;
 
@@ -173,27 +173,4 @@ public abstract class Attribute implements Cloneable, Serializable
                 Constants.CONSTANT_Utf8);
         return c.getBytes();
     }
-
-
-    /**
-     * Use copy() if you want to have a deep copy(), i.e., with all references
-     * copied correctly.
-     *
-     * @return shallow copy of this attribute
-     */
-    @Override
-    public Attribute clone()
-    {
-        Attribute attr = null;
-        try
-        {
-            attr = (Attribute) super.clone();
-        }
-        catch (CloneNotSupportedException e)
-        {
-            throw new Error("Clone Not Supported"); // never happens
-        }
-        return attr;
-    }
-
 }

==================================================
ConstantPool.java
index d3a59dcd2b..a918fcf534 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Constant.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Constant.java
@@ -31,7 +31,7 @@ import org.apache.tomcat.util.bcel.util.BCELComparator;
  *
  * @author  <A HREF="mailto:m.dahm@gmx.de">M. Dahm</A>
  */
-public abstract class Constant implements Cloneable, Serializable {
+public abstract class Constant implements Serializable {
 
     private static final long serialVersionUID = 2827409182154809454L;
     private static BCELComparator _cmp = new BCELComparator() {
@@ -75,16 +75,6 @@ public abstract class Constant implements Cloneable, Serializable {
     }
 
 
-    @Override
-    public Object clone() {
-        try {
-            return super.clone();
-        } catch (CloneNotSupportedException e) {
-            throw new Error("Clone Not Supported"); // never happens
-        }
-    }
-
-
     /**
      * Read one constant from the given file, the type depends on a tag byte.
      *

==================================================
FieldOrMethod.java
index 9bbacc716b..161c342269 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantPool.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ConstantPool.java
@@ -34,7 +34,7 @@ import org.apache.tomcat.util.bcel.Constants;
  * @see     Constant
  * @author <A HREF="mailto:m.dahm@gmx.de">M. Dahm</A>
  */
-public class ConstantPool implements Cloneable, Serializable {
+public class ConstantPool implements Serializable {
 
     private static final long serialVersionUID = -6765503791185687014L;
     private int constant_pool_count;

==================================================
JavaClass.java
index 0c13c18fd3..239e910970 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/FieldOrMethod.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/FieldOrMethod.java
@@ -28,7 +28,7 @@ import org.apache.tomcat.util.bcel.util.BCELComparator;
  *
  * @author  <A HREF="mailto:m.dahm@gmx.de">M. Dahm</A>
  */
-public class FieldOrMethod extends AccessFlags implements Cloneable {
+public class FieldOrMethod extends AccessFlags {
 
     private static final long serialVersionUID = -3383525930205542157L;
     private static BCELComparator _cmp = new BCELComparator() {

==================================================
