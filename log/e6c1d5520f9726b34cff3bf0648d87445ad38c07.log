e6c1d5520f9726b34cff3bf0648d87445ad38c07
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=50105
==================================================
Mark Emlyn
==================================================
Tue Oct 19 13:03:01 2010 +0000
==================================================
AstCompositeExpression.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=50105
Use Enum.name() rather than Enum.toString() in composite expressions

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1024224 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestValueExpressionImpl.java
index 223e01c322..4bbb9b0255 100644
--- a/java/org/apache/el/parser/AstCompositeExpression.java
+++ b/java/org/apache/el/parser/AstCompositeExpression.java
@@ -20,6 +20,7 @@ package org.apache.el.parser;
 
 import javax.el.ELException;
 
+import org.apache.el.lang.ELSupport;
 import org.apache.el.lang.EvaluationContext;
 
 
@@ -48,7 +49,7 @@ public final class AstCompositeExpression extends SimpleNode {
             for (int i = 0; i < this.children.length; i++) {
                 obj = this.children[i].getValue(ctx);
                 if (obj != null) {
-                    sb.append(obj);
+                    sb.append(ELSupport.coerceToString(obj));
                 }
             }
         }

==================================================
TesterEnum.java
index 0079f2c838..b2decc1030 100644
--- a/test/org/apache/el/TestValueExpressionImpl.java
+++ b/test/org/apache/el/TestValueExpressionImpl.java
@@ -81,4 +81,27 @@ public class TestValueExpressionImpl extends TestCase {
         assertEquals(beanB, vr.getBase());
         assertEquals("name", vr.getProperty());
     }
+
+
+    public void testBug50105() {
+        ExpressionFactory factory = ExpressionFactory.newInstance();
+        ELContext context = new ELContextImpl();
+        
+        TesterEnum testEnum = TesterEnum.APPLE;
+        
+        ValueExpression var =
+            factory.createValueExpression(testEnum, TesterEnum.class);
+        context.getVariableMapper().setVariable("testEnum", var);
+
+        // When coercing an Enum to a String, name() should always be used.
+        ValueExpression ve1 = factory.createValueExpression(
+                context, "${testEnum}", String.class);
+        String result1 = (String) ve1.getValue(context);
+        assertEquals("APPLE", result1);
+        
+        ValueExpression ve2 = factory.createValueExpression(
+                context, "foo${testEnum}bar", String.class);
+        String result2 = (String) ve2.getValue(context);
+        assertEquals("fooAPPLEbar", result2);
+    }
 }

==================================================
