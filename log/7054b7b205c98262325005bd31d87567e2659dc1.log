7054b7b205c98262325005bd31d87567e2659dc1
==================================================
Expand WebDocket client debug logging
==================================================
Mark Thomas
==================================================
Tue Sep 8 17:38:45 2020 +0100
==================================================
WsWebSocketContainer.java
index 22e9f17689..03b7923c78 100644
--- a/java/org/apache/tomcat/websocket/LocalStrings.properties
+++ b/java/org/apache/tomcat/websocket/LocalStrings.properties
@@ -128,6 +128,8 @@ wsSession.unknownHandlerType=Unable to add the message handler [{0}] as it was w
 wsWebSocketContainer.shutdown=The web application is stopping
 
 wsWebSocketContainer.asynchronousSocketChannelFail=Unable to open a connection to the server
+wsWebSocketContainer.connect.entry=Connecting endpoint instance of type [{0}] to [{1}]
+wsWebSocketContainer.connect.write=Writing the HTTP upgrade request from buffer starting at [{0}] with a limit of [{1}]
 wsWebSocketContainer.defaultConfiguratorFail=Failed to create the default configurator
 wsWebSocketContainer.endpointCreateFail=Failed to create a local endpoint of type [{0}]
 wsWebSocketContainer.failedAuthentication=Failed to handle HTTP response code [{0}]. Authentication header was not accepted by server.

==================================================
TestWebSocketFrameClient.java
index c78da3cd16..2022182bef 100644
--- a/java/org/apache/tomcat/websocket/WsWebSocketContainer.java
+++ b/java/org/apache/tomcat/websocket/WsWebSocketContainer.java
@@ -203,6 +203,10 @@ public class WsWebSocketContainer implements WebSocketContainer, BackgroundProce
             Set<URI> redirectSet)
             throws DeploymentException {
 
+        if (log.isDebugEnabled()) {
+            log.debug(sm.getString("wsWebSocketContainer.connect.entry", endpoint.getClass().getName(), path));
+        }
+
         boolean secure = false;
         ByteBuffer proxyConnect = null;
         URI proxyPath;
@@ -346,6 +350,10 @@ public class WsWebSocketContainer implements WebSocketContainer, BackgroundProce
             Future<Void> fHandshake = channel.handshake();
             fHandshake.get(timeout, TimeUnit.MILLISECONDS);
 
+            if (log.isDebugEnabled()) {
+                log.debug(sm.getString("wsWebSocketContainer.connect.write",
+                        Integer.valueOf(request.position()), Integer.valueOf(request.limit())));
+            }
             writeRequest(channel, request, timeout);
 
             HttpResponse httpResponse = processResponse(response, channel, timeout);

==================================================
