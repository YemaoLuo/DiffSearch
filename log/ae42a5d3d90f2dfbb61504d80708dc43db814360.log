ae42a5d3d90f2dfbb61504d80708dc43db814360
==================================================
Avoid using /tmp as a docBase where it is not necessary
==================================================
Mark Emlyn
==================================================
Wed Oct 29 19:40:24 2014 +0000
==================================================
TestVirtualWebappLoader.java
Avoid using /tmp as a docBase where it is not necessary

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1635276 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestWebappClassLoader.java
index 625399d90e..ab47daeb45 100644
--- a/test/org/apache/catalina/loader/TestVirtualWebappLoader.java
+++ b/test/org/apache/catalina/loader/TestVirtualWebappLoader.java
@@ -42,10 +42,10 @@ public class TestVirtualWebappLoader extends TomcatBaseTest {
     @Test
     public void testStartInternal() throws Exception {
         Tomcat tomcat = getTomcatInstance();
+
         File appDir = new File("test/webapp");
-        // Must have a real docBase - just use temp
-        StandardContext ctx =
-            (StandardContext)tomcat.addContext("",  appDir.getAbsolutePath());
+        StandardContext ctx = (StandardContext) tomcat.addContext("",
+                appDir.getAbsolutePath());
 
 
         WebappLoader loader = new WebappLoader();

==================================================
TestWebappClassLoaderExecutorMemoryLeak.java
index 5fc95e62d4..049d9c91c3 100644
--- a/test/org/apache/catalina/loader/TestWebappClassLoader.java
+++ b/test/org/apache/catalina/loader/TestWebappClassLoader.java
@@ -39,7 +39,7 @@ public class TestWebappClassLoader extends TomcatBaseTest {
         expected[1] = "jar:" + warUrl + "!/WEB-INF/lib/test.jar";
 
         Tomcat tomcat = getTomcatInstance();
-        // Must have a real docBase - just use temp
+
         StandardContext ctx =
                 (StandardContext)tomcat.addContext("",  f.getAbsolutePath());
 

==================================================
TestWebappClassLoaderMemoryLeak.java
index 686190bee3..a67813a2e8 100644
--- a/test/org/apache/catalina/loader/TestWebappClassLoaderExecutorMemoryLeak.java
+++ b/test/org/apache/catalina/loader/TestWebappClassLoaderExecutorMemoryLeak.java
@@ -41,9 +41,8 @@ public class TestWebappClassLoaderExecutorMemoryLeak extends TomcatBaseTest {
     public void testTimerThreadLeak() throws Exception {
         Tomcat tomcat = getTomcatInstance();
 
-        // Must have a real docBase - just use temp
-        Context ctx = tomcat.addContext("",
-                System.getProperty("java.io.tmpdir"));
+        // No file system docBase required
+        Context ctx = tomcat.addContext("", null);
 
         if (ctx instanceof StandardContext) {
             ((StandardContext) ctx).setClearReferencesStopThreads(true);

==================================================
TestWebappClassLoaderThreadLocalMemoryLeak.java
index aaae042eba..b2a88a6e19 100644
--- a/test/org/apache/catalina/loader/TestWebappClassLoaderMemoryLeak.java
+++ b/test/org/apache/catalina/loader/TestWebappClassLoaderMemoryLeak.java
@@ -40,9 +40,8 @@ public class TestWebappClassLoaderMemoryLeak extends TomcatBaseTest {
     public void testTimerThreadLeak() throws Exception {
         Tomcat tomcat = getTomcatInstance();
 
-        // Must have a real docBase - just use temp
-        Context ctx =
-            tomcat.addContext("", System.getProperty("java.io.tmpdir"));
+        // No file system docBase required
+        Context ctx = tomcat.addContext("", null);
 
         if (ctx instanceof StandardContext) {
             ((StandardContext) ctx).setClearReferencesStopTimerThreads(true);

==================================================
