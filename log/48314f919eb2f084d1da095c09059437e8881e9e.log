48314f919eb2f084d1da095c09059437e8881e9e
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=54096
==================================================
Mark Emlyn
==================================================
Fri Nov 9 19:31:07 2012 +0000
==================================================
NamingContextListener.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=54096
env-entry can use any type that has a String or char constructor

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1407595 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestNamingContextListener.java
index 4ab75ba621..c90d61d161 100644
--- a/java/org/apache/catalina/core/NamingContextListener.java
+++ b/java/org/apache/catalina/core/NamingContextListener.java
@@ -21,6 +21,7 @@ package org.apache.catalina.core;
 
 import java.beans.PropertyChangeEvent;
 import java.beans.PropertyChangeListener;
+import java.lang.reflect.Constructor;
 import java.net.MalformedURLException;
 import java.net.URL;
 import java.util.Collection;
@@ -842,7 +843,11 @@ public class NamingContextListener
                     }
                 }
             } else {
-                logger.error(sm.getString("naming.invalidEnvEntryType", env.getName()));
+                value = constructEnvEntry(env.getType(), env.getValue());
+                if (value == null) {
+                    logger.error(sm.getString(
+                            "naming.invalidEnvEntryType", env.getName()));
+                }
             }
         } catch (NumberFormatException e) {
             logger.error(sm.getString("naming.invalidEnvEntryValue", env.getName()));
@@ -865,6 +870,33 @@ public class NamingContextListener
     }
 
 
+    private Object constructEnvEntry(String type, String value) {
+        try {
+            Class<?> clazz = Class.forName(type);
+            Constructor<?> c = null;
+            try {
+                 c = clazz.getConstructor(String.class);
+                 return c.newInstance(value);
+            } catch (NoSuchMethodException e) {
+                // Ignore
+            }
+
+            if (value.length() != 1) {
+                return null;
+            }
+
+            try {
+                c = clazz.getConstructor(char.class);
+                return c.newInstance(Character.valueOf(value.charAt(0)));
+            } catch (NoSuchMethodException e) {
+                // Ignore
+            }
+        } catch (Exception e) {
+            // Ignore
+        }
+        return null;
+    }
+
     /**
      * Set the specified local EJBs in the naming context.
      */

==================================================
