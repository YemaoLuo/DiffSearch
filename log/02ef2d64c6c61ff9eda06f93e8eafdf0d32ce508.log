02ef2d64c6c61ff9eda06f93e8eafdf0d32ce508
==================================================
Regenerate with current jextract
==================================================
remm remm@apache.org
==================================================
Thu Jan 26 16:03:47 2023 +0100
==================================================
Constants$root.java
index 0fd841b896..cd512210ee 100644
--- a/modules/openssl-foreign/openssl-tomcat.conf
+++ b/modules/openssl-foreign/openssl-tomcat.conf
@@ -38,10 +38,10 @@
 --include-function BIO_s_file                           # header: /usr/include/openssl/bio.h
 --include-function BIO_s_mem                            # header: /usr/include/openssl/bio.h
 --include-function BIO_write                            # header: /usr/include/openssl/bio.h
---include-macro BIO_CLOSE                               # header: /usr/include/openssl/bio.h
---include-macro BIO_CTRL_RESET                          # header: /usr/include/openssl/bio.h
---include-macro BIO_C_SET_FILENAME                      # header: /usr/include/openssl/bio.h
---include-macro BIO_FP_READ                             # header: /usr/include/openssl/bio.h
+--include-constant BIO_CLOSE                               # header: /usr/include/openssl/bio.h
+--include-constant BIO_CTRL_RESET                          # header: /usr/include/openssl/bio.h
+--include-constant BIO_C_SET_FILENAME                      # header: /usr/include/openssl/bio.h
+--include-constant BIO_FP_READ                             # header: /usr/include/openssl/bio.h
 
 #### Extracted from: /usr/include/openssl/bn.h
 
@@ -61,7 +61,7 @@
 --include-function CRYPTO_free                         # header: /usr/include/openssl/crypto.h
 --include-function OpenSSL_version                     # header: /usr/include/openssl/crypto.h
 --include-function OpenSSL_version_num                 # header: /usr/include/openssl/crypto.h
---include-macro OPENSSL_INIT_ENGINE_ALL_BUILTIN        # header: /usr/include/openssl/crypto.h
+--include-constant OPENSSL_INIT_ENGINE_ALL_BUILTIN        # header: /usr/include/openssl/crypto.h
 
 #### Extracted from: /usr/include/openssl/dh.h
 
@@ -84,7 +84,7 @@
 --include-function ENGINE_load_private_key                  # header: /usr/include/openssl/engine.h
 --include-function ENGINE_register_all_complete             # header: /usr/include/openssl/engine.h
 --include-function ENGINE_set_default                       # header: /usr/include/openssl/engine.h
---include-macro ENGINE_METHOD_ALL                           # header: /usr/include/openssl/engine.h
+--include-constant ENGINE_METHOD_ALL                           # header: /usr/include/openssl/engine.h
 
 #### Extracted from: /usr/include/openssl/err.h
 
@@ -100,13 +100,13 @@
 --include-function EVP_MD_get0_provider                   # header: /usr/include/openssl/evp.h
 --include-function EVP_PKEY_get_base_id                   # header: /usr/include/openssl/evp.h
 --include-function EVP_PKEY_get_bits                      # header: /usr/include/openssl/evp.h
---include-macro EVP_PKEY_DSA                              # header: /usr/include/openssl/evp.h
---include-macro EVP_PKEY_NONE                             # header: /usr/include/openssl/evp.h
---include-macro EVP_PKEY_RSA                              # header: /usr/include/openssl/evp.h
+--include-constant EVP_PKEY_DSA                              # header: /usr/include/openssl/evp.h
+--include-constant EVP_PKEY_NONE                             # header: /usr/include/openssl/evp.h
+--include-constant EVP_PKEY_RSA                              # header: /usr/include/openssl/evp.h
 
 #### Extracted from: /usr/include/openssl/obj_mac.h
 
---include-macro NID_info_access                                               # header: /usr/include/openssl/obj_mac.h
+--include-constant NID_info_access                                               # header: /usr/include/openssl/obj_mac.h
 
 #### Extracted from: /usr/include/openssl/ocsp.h
 
@@ -124,17 +124,17 @@
 --include-function OCSP_single_get0_status                  # header: /usr/include/openssl/ocsp.h
 --include-function d2i_OCSP_RESPONSE                        # header: /usr/include/openssl/ocsp.h
 --include-function i2d_OCSP_REQUEST                         # header: /usr/include/openssl/ocsp.h
---include-macro OCSP_RESPONSE_STATUS_SUCCESSFUL             # header: /usr/include/openssl/ocsp.h
---include-macro V_OCSP_CERTSTATUS_GOOD                      # header: /usr/include/openssl/ocsp.h
---include-macro V_OCSP_CERTSTATUS_REVOKED                   # header: /usr/include/openssl/ocsp.h
---include-macro V_OCSP_CERTSTATUS_UNKNOWN                   # header: /usr/include/openssl/ocsp.h
+--include-constant OCSP_RESPONSE_STATUS_SUCCESSFUL             # header: /usr/include/openssl/ocsp.h
+--include-constant V_OCSP_CERTSTATUS_GOOD                      # header: /usr/include/openssl/ocsp.h
+--include-constant V_OCSP_CERTSTATUS_REVOKED                   # header: /usr/include/openssl/ocsp.h
+--include-constant V_OCSP_CERTSTATUS_UNKNOWN                   # header: /usr/include/openssl/ocsp.h
 
 #### Extracted from: /usr/include/openssl/opensslconf-x86_64.h
 
---include-macro OPENSSL_API_COMPAT    # header: /usr/include/openssl/opensslconf-x86_64.h
---include-macro OPENSSL_FILE          # header: /usr/include/openssl/opensslconf-x86_64.h
---include-macro OPENSSL_LINE          # header: /usr/include/openssl/opensslconf-x86_64.h
---include-macro OPENSSL_MIN_API       # header: /usr/include/openssl/opensslconf-x86_64.h
+--include-constant OPENSSL_API_COMPAT    # header: /usr/include/openssl/opensslconf-x86_64.h
+--include-constant OPENSSL_FILE          # header: /usr/include/openssl/opensslconf-x86_64.h
+--include-constant OPENSSL_LINE          # header: /usr/include/openssl/opensslconf-x86_64.h
+--include-constant OPENSSL_MIN_API       # header: /usr/include/openssl/opensslconf-x86_64.h
 
 #### Extracted from: /usr/include/openssl/pem.h
 
@@ -145,7 +145,7 @@
 
 #### Extracted from: /usr/include/openssl/pemerr.h
 
---include-macro PEM_R_NO_START_LINE                           # header: /usr/include/openssl/pemerr.h
+--include-constant PEM_R_NO_START_LINE                           # header: /usr/include/openssl/pemerr.h
 
 #### Extracted from: /usr/include/openssl/pkcs12.h
 
@@ -238,75 +238,75 @@
 --include-function SSL_verify_client_post_handshake              # header: /usr/include/openssl/ssl.h
 --include-function SSL_write                                     # header: /usr/include/openssl/ssl.h
 --include-function TLS_server_method                             # header: /usr/include/openssl/ssl.h
---include-macro SSL_CB_HANDSHAKE_DONE                            # header: /usr/include/openssl/ssl.h
---include-macro SSL_CONF_FLAG_CERTIFICATE                        # header: /usr/include/openssl/ssl.h
---include-macro SSL_CONF_FLAG_FILE                               # header: /usr/include/openssl/ssl.h
---include-macro SSL_CONF_FLAG_SERVER                             # header: /usr/include/openssl/ssl.h
---include-macro SSL_CONF_FLAG_SHOW_ERRORS                        # header: /usr/include/openssl/ssl.h
---include-macro SSL_CONF_TYPE_DIR                                # header: /usr/include/openssl/ssl.h
---include-macro SSL_CONF_TYPE_FILE                               # header: /usr/include/openssl/ssl.h
---include-macro SSL_CONF_TYPE_UNKNOWN                            # header: /usr/include/openssl/ssl.h
---include-macro SSL_CTRL_CHAIN_CERT                              # header: /usr/include/openssl/ssl.h
---include-macro SSL_CTRL_GET_SESS_CACHE_MODE                     # header: /usr/include/openssl/ssl.h
---include-macro SSL_CTRL_GET_SESS_CACHE_SIZE                     # header: /usr/include/openssl/ssl.h
---include-macro SSL_CTRL_SESS_ACCEPT                             # header: /usr/include/openssl/ssl.h
---include-macro SSL_CTRL_SESS_ACCEPT_GOOD                        # header: /usr/include/openssl/ssl.h
---include-macro SSL_CTRL_SESS_ACCEPT_RENEGOTIATE                 # header: /usr/include/openssl/ssl.h
---include-macro SSL_CTRL_SESS_CACHE_FULL                         # header: /usr/include/openssl/ssl.h
---include-macro SSL_CTRL_SESS_CB_HIT                             # header: /usr/include/openssl/ssl.h
---include-macro SSL_CTRL_SESS_CONNECT                            # header: /usr/include/openssl/ssl.h
---include-macro SSL_CTRL_SESS_CONNECT_GOOD                       # header: /usr/include/openssl/ssl.h
---include-macro SSL_CTRL_SESS_CONNECT_RENEGOTIATE                # header: /usr/include/openssl/ssl.h
---include-macro SSL_CTRL_SESS_HIT                                # header: /usr/include/openssl/ssl.h
---include-macro SSL_CTRL_SESS_MISSES                             # header: /usr/include/openssl/ssl.h
---include-macro SSL_CTRL_SESS_NUMBER                             # header: /usr/include/openssl/ssl.h
---include-macro SSL_CTRL_SESS_TIMEOUTS                           # header: /usr/include/openssl/ssl.h
---include-macro SSL_CTRL_SET_MAX_PROTO_VERSION                   # header: /usr/include/openssl/ssl.h
---include-macro SSL_CTRL_SET_MIN_PROTO_VERSION                   # header: /usr/include/openssl/ssl.h
---include-macro SSL_CTRL_SET_SESS_CACHE_MODE                     # header: /usr/include/openssl/ssl.h
---include-macro SSL_CTRL_SET_SESS_CACHE_SIZE                     # header: /usr/include/openssl/ssl.h
---include-macro SSL_CTRL_SET_TLSEXT_TICKET_KEYS                  # header: /usr/include/openssl/ssl.h
---include-macro SSL_CTRL_SET_TMP_DH                              # header: /usr/include/openssl/ssl.h
---include-macro SSL_CTRL_SET_TMP_ECDH                            # header: /usr/include/openssl/ssl.h
---include-macro SSL_ERROR_NONE                                   # header: /usr/include/openssl/ssl.h
---include-macro SSL_OP_ALL                                       # header: /usr/include/openssl/ssl.h
---include-macro SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION         # header: /usr/include/openssl/ssl.h
---include-macro SSL_OP_CIPHER_SERVER_PREFERENCE                  # header: /usr/include/openssl/ssl.h
---include-macro SSL_OP_NO_COMPRESSION                            # header: /usr/include/openssl/ssl.h
---include-macro SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION    # header: /usr/include/openssl/ssl.h
---include-macro SSL_OP_NO_SSLv2                                  # header: /usr/include/openssl/ssl.h
---include-macro SSL_OP_NO_SSLv3                                  # header: /usr/include/openssl/ssl.h
---include-macro SSL_OP_NO_TICKET                                 # header: /usr/include/openssl/ssl.h
---include-macro SSL_OP_NO_TLSv1                                  # header: /usr/include/openssl/ssl.h
---include-macro SSL_OP_NO_TLSv1_1                                # header: /usr/include/openssl/ssl.h
---include-macro SSL_OP_NO_TLSv1_2                                # header: /usr/include/openssl/ssl.h
---include-macro SSL_OP_NO_TLSv1_3                                # header: /usr/include/openssl/ssl.h
---include-macro SSL_OP_SINGLE_DH_USE                             # header: /usr/include/openssl/ssl.h
---include-macro SSL_OP_SINGLE_ECDH_USE                           # header: /usr/include/openssl/ssl.h
---include-macro SSL_RECEIVED_SHUTDOWN                            # header: /usr/include/openssl/ssl.h
---include-macro SSL_SENT_SHUTDOWN                                # header: /usr/include/openssl/ssl.h
---include-macro SSL_SESS_CACHE_OFF                               # header: /usr/include/openssl/ssl.h
---include-macro SSL_SESS_CACHE_SERVER                            # header: /usr/include/openssl/ssl.h
---include-macro SSL_VERIFY_FAIL_IF_NO_PEER_CERT                  # header: /usr/include/openssl/ssl.h
---include-macro SSL_VERIFY_NONE                                  # header: /usr/include/openssl/ssl.h
---include-macro SSL_VERIFY_PEER                                  # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CB_HANDSHAKE_DONE                            # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CONF_FLAG_CERTIFICATE                        # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CONF_FLAG_FILE                               # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CONF_FLAG_SERVER                             # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CONF_FLAG_SHOW_ERRORS                        # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CONF_TYPE_DIR                                # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CONF_TYPE_FILE                               # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CONF_TYPE_UNKNOWN                            # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CTRL_CHAIN_CERT                              # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CTRL_GET_SESS_CACHE_MODE                     # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CTRL_GET_SESS_CACHE_SIZE                     # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CTRL_SESS_ACCEPT                             # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CTRL_SESS_ACCEPT_GOOD                        # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CTRL_SESS_ACCEPT_RENEGOTIATE                 # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CTRL_SESS_CACHE_FULL                         # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CTRL_SESS_CB_HIT                             # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CTRL_SESS_CONNECT                            # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CTRL_SESS_CONNECT_GOOD                       # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CTRL_SESS_CONNECT_RENEGOTIATE                # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CTRL_SESS_HIT                                # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CTRL_SESS_MISSES                             # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CTRL_SESS_NUMBER                             # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CTRL_SESS_TIMEOUTS                           # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CTRL_SET_MAX_PROTO_VERSION                   # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CTRL_SET_MIN_PROTO_VERSION                   # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CTRL_SET_SESS_CACHE_MODE                     # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CTRL_SET_SESS_CACHE_SIZE                     # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CTRL_SET_TLSEXT_TICKET_KEYS                  # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CTRL_SET_TMP_DH                              # header: /usr/include/openssl/ssl.h
+--include-constant SSL_CTRL_SET_TMP_ECDH                            # header: /usr/include/openssl/ssl.h
+--include-constant SSL_ERROR_NONE                                   # header: /usr/include/openssl/ssl.h
+--include-constant SSL_OP_ALL                                       # header: /usr/include/openssl/ssl.h
+--include-constant SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION         # header: /usr/include/openssl/ssl.h
+--include-constant SSL_OP_CIPHER_SERVER_PREFERENCE                  # header: /usr/include/openssl/ssl.h
+--include-constant SSL_OP_NO_COMPRESSION                            # header: /usr/include/openssl/ssl.h
+--include-constant SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION    # header: /usr/include/openssl/ssl.h
+--include-constant SSL_OP_NO_SSLv2                                  # header: /usr/include/openssl/ssl.h
+--include-constant SSL_OP_NO_SSLv3                                  # header: /usr/include/openssl/ssl.h
+--include-constant SSL_OP_NO_TICKET                                 # header: /usr/include/openssl/ssl.h
+--include-constant SSL_OP_NO_TLSv1                                  # header: /usr/include/openssl/ssl.h
+--include-constant SSL_OP_NO_TLSv1_1                                # header: /usr/include/openssl/ssl.h
+--include-constant SSL_OP_NO_TLSv1_2                                # header: /usr/include/openssl/ssl.h
+--include-constant SSL_OP_NO_TLSv1_3                                # header: /usr/include/openssl/ssl.h
+--include-constant SSL_OP_SINGLE_DH_USE                             # header: /usr/include/openssl/ssl.h
+--include-constant SSL_OP_SINGLE_ECDH_USE                           # header: /usr/include/openssl/ssl.h
+--include-constant SSL_RECEIVED_SHUTDOWN                            # header: /usr/include/openssl/ssl.h
+--include-constant SSL_SENT_SHUTDOWN                                # header: /usr/include/openssl/ssl.h
+--include-constant SSL_SESS_CACHE_OFF                               # header: /usr/include/openssl/ssl.h
+--include-constant SSL_SESS_CACHE_SERVER                            # header: /usr/include/openssl/ssl.h
+--include-constant SSL_VERIFY_FAIL_IF_NO_PEER_CERT                  # header: /usr/include/openssl/ssl.h
+--include-constant SSL_VERIFY_NONE                                  # header: /usr/include/openssl/ssl.h
+--include-constant SSL_VERIFY_PEER                                  # header: /usr/include/openssl/ssl.h
 
 #### Extracted from: /usr/include/openssl/ssl2.h
 
---include-macro SSL2_VERSION            # header: /usr/include/openssl/ssl2.h
+--include-constant SSL2_VERSION            # header: /usr/include/openssl/ssl2.h
 
 #### Extracted from: /usr/include/openssl/ssl3.h
 
---include-macro SSL3_VERSION                            # header: /usr/include/openssl/ssl3.h
+--include-constant SSL3_VERSION                            # header: /usr/include/openssl/ssl3.h
 
 #### Extracted from: /usr/include/openssl/tls1.h
 
---include-macro SSL_TLSEXT_ERR_NOACK                                  # header: /usr/include/openssl/tls1.h
---include-macro SSL_TLSEXT_ERR_OK                                     # header: /usr/include/openssl/tls1.h
---include-macro TLS1_1_VERSION                                        # header: /usr/include/openssl/tls1.h
---include-macro TLS1_2_VERSION                                        # header: /usr/include/openssl/tls1.h
---include-macro TLS1_3_VERSION                                        # header: /usr/include/openssl/tls1.h
---include-macro TLS1_VERSION                                          # header: /usr/include/openssl/tls1.h
+--include-constant SSL_TLSEXT_ERR_NOACK                                  # header: /usr/include/openssl/tls1.h
+--include-constant SSL_TLSEXT_ERR_OK                                     # header: /usr/include/openssl/tls1.h
+--include-constant TLS1_1_VERSION                                        # header: /usr/include/openssl/tls1.h
+--include-constant TLS1_2_VERSION                                        # header: /usr/include/openssl/tls1.h
+--include-constant TLS1_3_VERSION                                        # header: /usr/include/openssl/tls1.h
+--include-constant TLS1_VERSION                                          # header: /usr/include/openssl/tls1.h
 
 #### Extracted from: /usr/include/openssl/stack.h
 
@@ -322,7 +322,7 @@
 --include-function X509_free                        # header: /usr/include/openssl/x509.h
 --include-function X509_get_ext                     # header: /usr/include/openssl/x509.h
 --include-function X509_get_ext_by_NID              # header: /usr/include/openssl/x509.h
---include-macro X509_FILETYPE_PEM                   # header: /usr/include/openssl/x509.h
+--include-constant X509_FILETYPE_PEM                   # header: /usr/include/openssl/x509.h
 
 #### Extracted from: /usr/include/openssl/x509v3.h
 
@@ -342,16 +342,16 @@
 --include-function X509_STORE_CTX_get0_untrusted                   # header: /usr/include/openssl/x509_vfy.h
 --include-function X509_STORE_CTX_set_error                        # header: /usr/include/openssl/x509_vfy.h
 --include-function X509_STORE_set_flags                            # header: /usr/include/openssl/x509_vfy.h
---include-macro X509_L_ADD_DIR                                     # header: /usr/include/openssl/x509_vfy.h
---include-macro X509_L_FILE_LOAD                                   # header: /usr/include/openssl/x509_vfy.h
---include-macro X509_V_ERR_APPLICATION_VERIFICATION                # header: /usr/include/openssl/x509_vfy.h
---include-macro X509_V_ERR_CERT_UNTRUSTED                          # header: /usr/include/openssl/x509_vfy.h
---include-macro X509_V_ERR_CRL_HAS_EXPIRED                         # header: /usr/include/openssl/x509_vfy.h
---include-macro X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT             # header: /usr/include/openssl/x509_vfy.h
---include-macro X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN               # header: /usr/include/openssl/x509_vfy.h
---include-macro X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY       # header: /usr/include/openssl/x509_vfy.h
---include-macro X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE         # header: /usr/include/openssl/x509_vfy.h
---include-macro X509_V_FLAG_CRL_CHECK                              # header: /usr/include/openssl/x509_vfy.h
---include-macro X509_V_FLAG_CRL_CHECK_ALL                          # header: /usr/include/openssl/x509_vfy.h
---include-macro X509_V_OK                                          # header: /usr/include/openssl/x509_vfy.h
+--include-constant X509_L_ADD_DIR                                     # header: /usr/include/openssl/x509_vfy.h
+--include-constant X509_L_FILE_LOAD                                   # header: /usr/include/openssl/x509_vfy.h
+--include-constant X509_V_ERR_APPLICATION_VERIFICATION                # header: /usr/include/openssl/x509_vfy.h
+--include-constant X509_V_ERR_CERT_UNTRUSTED                          # header: /usr/include/openssl/x509_vfy.h
+--include-constant X509_V_ERR_CRL_HAS_EXPIRED                         # header: /usr/include/openssl/x509_vfy.h
+--include-constant X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT             # header: /usr/include/openssl/x509_vfy.h
+--include-constant X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN               # header: /usr/include/openssl/x509_vfy.h
+--include-constant X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY       # header: /usr/include/openssl/x509_vfy.h
+--include-constant X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE         # header: /usr/include/openssl/x509_vfy.h
+--include-constant X509_V_FLAG_CRL_CHECK                              # header: /usr/include/openssl/x509_vfy.h
+--include-constant X509_V_FLAG_CRL_CHECK_ALL                          # header: /usr/include/openssl/x509_vfy.h
+--include-constant X509_V_OK                                          # header: /usr/include/openssl/x509_vfy.h
 

==================================================
RuntimeHelper.java
index 801356956d..5727b52eb3 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/Constants$root.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/Constants$root.java
@@ -24,17 +24,19 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-public class Constants$root {
+final class Constants$root {
 
-    static final  OfBoolean C_BOOL$LAYOUT = JAVA_BOOLEAN;
-    static final  OfByte C_CHAR$LAYOUT = JAVA_BYTE;
-    static final  OfShort C_SHORT$LAYOUT = JAVA_SHORT.withBitAlignment(16);
-    static final  OfInt C_INT$LAYOUT = JAVA_INT.withBitAlignment(32);
-    static final  OfLong C_LONG$LAYOUT = JAVA_LONG.withBitAlignment(64);
-    static final  OfLong C_LONG_LONG$LAYOUT = JAVA_LONG.withBitAlignment(64);
-    static final  OfFloat C_FLOAT$LAYOUT = JAVA_FLOAT.withBitAlignment(32);
-    static final  OfDouble C_DOUBLE$LAYOUT = JAVA_DOUBLE.withBitAlignment(64);
-    static final  OfAddress C_POINTER$LAYOUT = ADDRESS.withBitAlignment(64).asUnbounded();
+    // Suppresses default constructor, ensuring non-instantiability.
+    private Constants$root() {}
+    static final OfBoolean C_BOOL$LAYOUT = JAVA_BOOLEAN;
+    static final OfByte C_CHAR$LAYOUT = JAVA_BYTE;
+    static final OfShort C_SHORT$LAYOUT = JAVA_SHORT;
+    static final OfInt C_INT$LAYOUT = JAVA_INT;
+    static final OfLong C_LONG$LAYOUT = JAVA_LONG;
+    static final OfLong C_LONG_LONG$LAYOUT = JAVA_LONG;
+    static final OfFloat C_FLOAT$LAYOUT = JAVA_FLOAT;
+    static final OfDouble C_DOUBLE$LAYOUT = JAVA_DOUBLE;
+    static final OfAddress C_POINTER$LAYOUT = ADDRESS.withBitAlignment(64).asUnbounded();
 }
 
 

==================================================
SSL_CTX_set_cert_verify_callback$cb.java
index 313e14f08b..c277588251 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/RuntimeHelper.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/RuntimeHelper.java
@@ -24,8 +24,8 @@ import java.lang.foreign.GroupLayout;
 import java.lang.foreign.SymbolLookup;
 import java.lang.foreign.MemoryLayout;
 import java.lang.foreign.MemorySegment;
-import java.lang.foreign.SegmentAllocator;
 import java.lang.foreign.SegmentScope;
+import java.lang.foreign.SegmentAllocator;
 import java.lang.foreign.ValueLayout;
 import java.lang.invoke.MethodHandle;
 import java.lang.invoke.MethodHandles;
@@ -42,11 +42,11 @@ import static java.lang.foreign.ValueLayout.*;
 
 final class RuntimeHelper {
 
-    private RuntimeHelper() {}
-    private final static Linker LINKER = Linker.nativeLinker();
-    private final static ClassLoader LOADER = RuntimeHelper.class.getClassLoader();
-    private final static MethodHandles.Lookup MH_LOOKUP = MethodHandles.lookup();
-    private final static SymbolLookup SYMBOL_LOOKUP;
+    private static final Linker LINKER = Linker.nativeLinker();
+    private static final ClassLoader LOADER = RuntimeHelper.class.getClassLoader();
+    private static final MethodHandles.Lookup MH_LOOKUP = MethodHandles.lookup();
+    private static final SymbolLookup SYMBOL_LOOKUP;
+    private static final SegmentAllocator THROWING_ALLOCATOR = (x, y) -> { throw new AssertionError("should not reach here"); };
 
     final static SegmentAllocator CONSTANT_ALLOCATOR =
             (size, align) -> MemorySegment.allocateNative(size, align, SegmentScope.auto());
@@ -57,6 +57,9 @@ final class RuntimeHelper {
         SYMBOL_LOOKUP = name -> loaderLookup.find(name).or(() -> LINKER.defaultLookup().find(name));
     }
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private RuntimeHelper() {}
+
     static <T> T requireNonNull(T obj, String symbolName) {
         if (obj == null) {
             throw new UnsatisfiedLinkError("unresolved symbol: " + symbolName);
@@ -64,45 +67,43 @@ final class RuntimeHelper {
         return obj;
     }
 
-    private final static SegmentAllocator THROWING_ALLOCATOR = (x, y) -> { throw new AssertionError("should not reach here"); };
-
-    static final MemorySegment lookupGlobalVariable(String name, MemoryLayout layout) {
+    static MemorySegment lookupGlobalVariable(String name, MemoryLayout layout) {
         return SYMBOL_LOOKUP.find(name).map(symbol -> MemorySegment.ofAddress(symbol.address(), layout.byteSize(), symbol.scope())).orElse(null);
     }
 
-    static final MethodHandle downcallHandle(String name, FunctionDescriptor fdesc) {
+    static MethodHandle downcallHandle(String name, FunctionDescriptor fdesc) {
         return SYMBOL_LOOKUP.find(name).
                 map(addr -> LINKER.downcallHandle(addr, fdesc)).
                 orElse(null);
     }
 
-    static final MethodHandle downcallHandle(FunctionDescriptor fdesc) {
+    static MethodHandle downcallHandle(FunctionDescriptor fdesc) {
         return LINKER.downcallHandle(fdesc);
     }
 
-    static final MethodHandle downcallHandleVariadic(String name, FunctionDescriptor fdesc) {
+    static MethodHandle downcallHandleVariadic(String name, FunctionDescriptor fdesc) {
         return SYMBOL_LOOKUP.find(name).
                 map(addr -> VarargsInvoker.make(addr, fdesc)).
                 orElse(null);
     }
 
-    static final <Z> MemorySegment upcallStub(Class<Z> fi, Z z, FunctionDescriptor fdesc, SegmentScope session) {
+    static <Z> MemorySegment upcallStub(Class<Z> fi, Z z, FunctionDescriptor fdesc, SegmentScope scope) {
         try {
             MethodHandle handle = MH_LOOKUP.findVirtual(fi, "apply", fdesc.toMethodType());
             handle = handle.bindTo(z);
-            return LINKER.upcallStub(handle, fdesc, session);
+            return LINKER.upcallStub(handle, fdesc, scope);
         } catch (Throwable ex) {
             throw new AssertionError(ex);
         }
     }
 
-    static MemorySegment asArray(MemorySegment addr, MemoryLayout layout, int numElements, SegmentScope session) {
-         return MemorySegment.ofAddress(addr.address(), numElements * layout.byteSize(), session);
+    static MemorySegment asArray(MemorySegment addr, MemoryLayout layout, int numElements, SegmentScope scope) {
+         return MemorySegment.ofAddress(addr.address(), numElements * layout.byteSize(), scope);
     }
 
     // Internals only below this point
 
-    private static class VarargsInvoker {
+    private static final class VarargsInvoker {
         private static final MethodHandle INVOKE_MH;
         private final MemorySegment symbol;
         private final FunctionDescriptor function;

==================================================
SSL_CTX_set_tmp_dh_callback$dh.java
index 1b7d27bb80..a8196b12ec 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/SSL_CTX_set_cert_verify_callback$cb.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/SSL_CTX_set_cert_verify_callback$cb.java
@@ -24,17 +24,22 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
+/**
+ * {@snippet :
+ * int (*SSL_CTX_set_cert_verify_callback$cb)(X509_STORE_CTX*,void*);
+ * }
+ */
 public interface SSL_CTX_set_cert_verify_callback$cb {
 
     int apply(java.lang.foreign.MemorySegment _x0, java.lang.foreign.MemorySegment _x1);
-    static MemorySegment allocate(SSL_CTX_set_cert_verify_callback$cb fi, SegmentScope session) {
-        return RuntimeHelper.upcallStub(SSL_CTX_set_cert_verify_callback$cb.class, fi, constants$15.SSL_CTX_set_cert_verify_callback$cb$FUNC, session);
+    static MemorySegment allocate(SSL_CTX_set_cert_verify_callback$cb fi, SegmentScope scope) {
+        return RuntimeHelper.upcallStub(SSL_CTX_set_cert_verify_callback$cb.class, fi, constants$15.SSL_CTX_set_cert_verify_callback$cb$FUNC, scope);
     }
-    static SSL_CTX_set_cert_verify_callback$cb ofAddress(MemorySegment addr, SegmentScope session) {
-        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, session);
+    static SSL_CTX_set_cert_verify_callback$cb ofAddress(MemorySegment addr, SegmentScope scope) {
+        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
         return (java.lang.foreign.MemorySegment __x0, java.lang.foreign.MemorySegment __x1) -> {
             try {
-                return (int)constants$15.SSL_CTX_set_cert_verify_callback$cb$MH.invokeExact((MemorySegment)symbol, __x0, __x1);
+                return (int)constants$15.SSL_CTX_set_cert_verify_callback$cb$MH.invokeExact(symbol, __x0, __x1);
             } catch (Throwable ex$) {
                 throw new AssertionError("should not reach here", ex$);
             }

==================================================
SSL_set_info_callback$cb.java
index 2d61016be3..f0c64eee7b 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/SSL_CTX_set_tmp_dh_callback$dh.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/SSL_CTX_set_tmp_dh_callback$dh.java
@@ -24,17 +24,22 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
+/**
+ * {@snippet :
+ * DH* (*SSL_CTX_set_tmp_dh_callback$dh)(SSL*,int,int);
+ * }
+ */
 public interface SSL_CTX_set_tmp_dh_callback$dh {
 
     java.lang.foreign.MemorySegment apply(java.lang.foreign.MemorySegment _x0, int _x1, int _x2);
-    static MemorySegment allocate(SSL_CTX_set_tmp_dh_callback$dh fi, SegmentScope session) {
-        return RuntimeHelper.upcallStub(SSL_CTX_set_tmp_dh_callback$dh.class, fi, constants$21.SSL_CTX_set_tmp_dh_callback$dh$FUNC, session);
+    static MemorySegment allocate(SSL_CTX_set_tmp_dh_callback$dh fi, SegmentScope scope) {
+        return RuntimeHelper.upcallStub(SSL_CTX_set_tmp_dh_callback$dh.class, fi, constants$21.SSL_CTX_set_tmp_dh_callback$dh$FUNC, scope);
     }
-    static SSL_CTX_set_tmp_dh_callback$dh ofAddress(MemorySegment addr, SegmentScope session) {
-        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, session);
+    static SSL_CTX_set_tmp_dh_callback$dh ofAddress(MemorySegment addr, SegmentScope scope) {
+        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
         return (java.lang.foreign.MemorySegment __x0, int __x1, int __x2) -> {
             try {
-                return (java.lang.foreign.MemorySegment)constants$22.SSL_CTX_set_tmp_dh_callback$dh$MH.invokeExact((MemorySegment)symbol, __x0, __x1, __x2);
+                return (java.lang.foreign.MemorySegment)constants$22.SSL_CTX_set_tmp_dh_callback$dh$MH.invokeExact(symbol, __x0, __x1, __x2);
             } catch (Throwable ex$) {
                 throw new AssertionError("should not reach here", ex$);
             }

==================================================
constants$0.java
index f853d20995..6008ac05af 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/SSL_set_info_callback$cb.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/SSL_set_info_callback$cb.java
@@ -24,17 +24,22 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
+/**
+ * {@snippet :
+ * void (*SSL_set_info_callback$cb)(const SSL*,int,int);
+ * }
+ */
 public interface SSL_set_info_callback$cb {
 
     void apply(java.lang.foreign.MemorySegment _x0, int _x1, int _x2);
-    static MemorySegment allocate(SSL_set_info_callback$cb fi, SegmentScope session) {
-        return RuntimeHelper.upcallStub(SSL_set_info_callback$cb.class, fi, constants$21.SSL_set_info_callback$cb$FUNC, session);
+    static MemorySegment allocate(SSL_set_info_callback$cb fi, SegmentScope scope) {
+        return RuntimeHelper.upcallStub(SSL_set_info_callback$cb.class, fi, constants$21.SSL_set_info_callback$cb$FUNC, scope);
     }
-    static SSL_set_info_callback$cb ofAddress(MemorySegment addr, SegmentScope session) {
-        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, session);
+    static SSL_set_info_callback$cb ofAddress(MemorySegment addr, SegmentScope scope) {
+        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
         return (java.lang.foreign.MemorySegment __x0, int __x1, int __x2) -> {
             try {
-                constants$21.SSL_set_info_callback$cb$MH.invokeExact((MemorySegment)symbol, __x0, __x1, __x2);
+                constants$21.SSL_set_info_callback$cb$MH.invokeExact(symbol, __x0, __x1, __x2);
             } catch (Throwable ex$) {
                 throw new AssertionError("should not reach here", ex$);
             }

==================================================
constants$1.java
index 5812df1472..60a76fd651 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$0.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$0.java
@@ -24,8 +24,10 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$0 {
+final class constants$0 {
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$0() {}
     static final FunctionDescriptor OPENSSL_sk_num$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
         Constants$root.C_POINTER$LAYOUT
     );

==================================================
constants$10.java
index 674de51409..55942ad213 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$1.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$1.java
@@ -24,8 +24,10 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$1 {
+final class constants$1 {
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$1() {}
     static final FunctionDescriptor BIO_s_file$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
     static final MethodHandle BIO_s_file$MH = RuntimeHelper.downcallHandle(
         "BIO_s_file",

==================================================
constants$11.java
index 24301868e0..dda8ba2ede 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$10.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$10.java
@@ -24,8 +24,10 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$10 {
+final class constants$10 {
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$10() {}
     static final FunctionDescriptor PEM_read_bio_ECPKParameters$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
         Constants$root.C_POINTER$LAYOUT,
         Constants$root.C_POINTER$LAYOUT,

==================================================
constants$12.java
index 312a845a8f..4e57c7f21a 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$11.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$11.java
@@ -24,8 +24,10 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$11 {
+final class constants$11 {
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$11() {}
     static final FunctionDescriptor SSL_CTX_set_options$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
         Constants$root.C_POINTER$LAYOUT,
         Constants$root.C_LONG_LONG$LAYOUT

==================================================
constants$13.java
index 2f5ed0b29c..1fa3c12a0b 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$12.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$12.java
@@ -24,8 +24,10 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$12 {
+final class constants$12 {
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$12() {}
     static final FunctionDescriptor SSL_CTX_new$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
         Constants$root.C_POINTER$LAYOUT
     );

==================================================
constants$14.java
index 8a526af710..bcab07b600 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$13.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$13.java
@@ -24,8 +24,10 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$13 {
+final class constants$13 {
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$13() {}
     static final FunctionDescriptor SSL_CIPHER_get_name$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
         Constants$root.C_POINTER$LAYOUT
     );

==================================================
constants$15.java
index 18f386d913..b36fcb3ade 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$14.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$14.java
@@ -24,8 +24,10 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$14 {
+final class constants$14 {
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$14() {}
     static final FunctionDescriptor SSL_CTX_set_ciphersuites$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
         Constants$root.C_POINTER$LAYOUT,
         Constants$root.C_POINTER$LAYOUT

==================================================
constants$16.java
index 8e092c940e..a7b8649446 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$15.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$15.java
@@ -24,8 +24,10 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$15 {
+final class constants$15 {
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$15() {}
     static final FunctionDescriptor SSL_SESSION_get_id$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
         Constants$root.C_POINTER$LAYOUT,
         Constants$root.C_POINTER$LAYOUT

==================================================
constants$17.java
index 602efd7b79..c2d5833d2d 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$16.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$16.java
@@ -24,8 +24,10 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$16 {
+final class constants$16 {
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$16() {}
     static final FunctionDescriptor SSL_CTX_set_cert_verify_callback$FUNC = FunctionDescriptor.ofVoid(
         Constants$root.C_POINTER$LAYOUT,
         Constants$root.C_POINTER$LAYOUT,

==================================================
constants$18.java
index bab5081b38..0d56bb9da5 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$17.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$17.java
@@ -24,8 +24,10 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$17 {
+final class constants$17 {
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$17() {}
     static final FunctionDescriptor SSL_new$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
         Constants$root.C_POINTER$LAYOUT
     );

==================================================
constants$19.java
index 7112db0e02..e80b1c1201 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$18.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$18.java
@@ -24,8 +24,10 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$18 {
+final class constants$18 {
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$18() {}
     static final FunctionDescriptor TLS_server_method$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
     static final MethodHandle TLS_server_method$MH = RuntimeHelper.downcallHandle(
         "TLS_server_method",

==================================================
constants$2.java
index 723ab4f361..d213369fd8 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$19.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$19.java
@@ -24,8 +24,10 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$19 {
+final class constants$19 {
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$19() {}
     static final FunctionDescriptor SSL_shutdown$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
         Constants$root.C_POINTER$LAYOUT
     );

==================================================
constants$20.java
index aad34760e5..4966508649 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$2.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$2.java
@@ -24,8 +24,10 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$2 {
+final class constants$2 {
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$2() {}
     static final FunctionDescriptor BIO_ctrl$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
         Constants$root.C_POINTER$LAYOUT,
         Constants$root.C_INT$LAYOUT,

==================================================
constants$21.java
index f037a6c9c3..7c0f69a470 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$20.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$20.java
@@ -24,8 +24,10 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$20 {
+final class constants$20 {
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$20() {}
     static final FunctionDescriptor SSL_set_accept_state$FUNC = FunctionDescriptor.ofVoid(
         Constants$root.C_POINTER$LAYOUT
     );

==================================================
constants$22.java
index 4215d5c1d2..5ce5412ad2 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$21.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$21.java
@@ -24,8 +24,10 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$21 {
+final class constants$21 {
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$21() {}
     static final FunctionDescriptor SSL_set_info_callback$cb$FUNC = FunctionDescriptor.ofVoid(
         Constants$root.C_POINTER$LAYOUT,
         Constants$root.C_INT$LAYOUT,

==================================================
constants$23.java
index 0e2e8f5899..47a4fc9d00 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$22.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$22.java
@@ -24,8 +24,10 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$22 {
+final class constants$22 {
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$22() {}
     static final FunctionDescriptor SSL_CTX_set_tmp_dh_callback$dh$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
         Constants$root.C_POINTER$LAYOUT,
         Constants$root.C_INT$LAYOUT,

==================================================
constants$24.java
index b8ccff0855..234851e93c 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$23.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$23.java
@@ -24,8 +24,10 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$23 {
+final class constants$23 {
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$23() {}
     static final FunctionDescriptor SSL_CONF_CTX_set_ssl_ctx$FUNC = FunctionDescriptor.ofVoid(
         Constants$root.C_POINTER$LAYOUT,
         Constants$root.C_POINTER$LAYOUT

==================================================
constants$25.java
index f94cf4fb0e..a8a2e4201c 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$24.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$24.java
@@ -24,8 +24,10 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$24 {
+final class constants$24 {
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$24() {}
     static final FunctionDescriptor ERR_clear_error$FUNC = FunctionDescriptor.ofVoid();
     static final MethodHandle ERR_clear_error$MH = RuntimeHelper.downcallHandle(
         "ERR_clear_error",

==================================================
constants$26.java
index b844e43196..7eae50ad67 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$25.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$25.java
@@ -24,8 +24,10 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$25 {
+final class constants$25 {
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$25() {}
     static final FunctionDescriptor RAND_seed$FUNC = FunctionDescriptor.ofVoid(
         Constants$root.C_POINTER$LAYOUT,
         Constants$root.C_INT$LAYOUT

==================================================
constants$27.java
index 691d00546b..685a84ec1c 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$26.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$26.java
@@ -24,8 +24,10 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$26 {
+final class constants$26 {
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$26() {}
     static final FunctionDescriptor ENGINE_free$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
         Constants$root.C_POINTER$LAYOUT
     );

==================================================
constants$28.java
index d4d7cfc7be..d6a8d897c9 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$27.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$27.java
@@ -24,8 +24,10 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$27 {
+final class constants$27 {
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$27() {}
     static final FunctionDescriptor OCSP_response_get1_basic$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
         Constants$root.C_POINTER$LAYOUT
     );

==================================================
constants$29.java
index 768dafad97..4df680b449 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$28.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$28.java
@@ -24,8 +24,10 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$28 {
+final class constants$28 {
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$28() {}
     static final FunctionDescriptor d2i_OCSP_RESPONSE$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
         Constants$root.C_POINTER$LAYOUT,
         Constants$root.C_POINTER$LAYOUT,

==================================================
constants$3.java
index 175593e7f6..ee0f995484 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$29.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$29.java
@@ -24,9 +24,11 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$29 {
+final class constants$29 {
 
-    static final MemorySegment OPENSSL_FILE$SEGMENT = RuntimeHelper.CONSTANT_ALLOCATOR.allocateUtf8String("/tmp/jextract$7309346795930420663.h");
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$29() {}
+    static final MemorySegment OPENSSL_FILE$SEGMENT = RuntimeHelper.CONSTANT_ALLOCATOR.allocateUtf8String("/tmp/jextract$10207917738838814958.h");
 }
 
 

==================================================
constants$4.java
index dc54b44a45..cae0beeb17 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$3.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$3.java
@@ -24,8 +24,10 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$3 {
+final class constants$3 {
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$3() {}
     static final FunctionDescriptor BN_get_rfc2409_prime_768$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
         Constants$root.C_POINTER$LAYOUT
     );

==================================================
constants$5.java
index 46d0a201ef..d4a247d5f7 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$4.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$4.java
@@ -24,8 +24,10 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$4 {
+final class constants$4 {
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$4() {}
     static final FunctionDescriptor BN_get_rfc3526_prime_6144$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
         Constants$root.C_POINTER$LAYOUT
     );

==================================================
constants$6.java
index 7efcd1bb60..67fb9fc829 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$5.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$5.java
@@ -24,8 +24,10 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$5 {
+final class constants$5 {
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$5() {}
     static final FunctionDescriptor EVP_MD_free$FUNC = FunctionDescriptor.ofVoid(
         Constants$root.C_POINTER$LAYOUT
     );

==================================================
constants$7.java
index 4761995db8..76f2e37454 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$6.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$6.java
@@ -24,8 +24,10 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$6 {
+final class constants$6 {
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$6() {}
     static final FunctionDescriptor EC_KEY_free$FUNC = FunctionDescriptor.ofVoid(
         Constants$root.C_POINTER$LAYOUT
     );

==================================================
constants$8.java
index 03b0ebe143..8fa95fdb6c 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$7.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$7.java
@@ -24,8 +24,10 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$7 {
+final class constants$7 {
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$7() {}
     static final FunctionDescriptor X509_STORE_add_lookup$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
         Constants$root.C_POINTER$LAYOUT,
         Constants$root.C_POINTER$LAYOUT

==================================================
constants$9.java
index aad2b8dd3c..fc018122d2 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$8.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$8.java
@@ -24,8 +24,10 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$8 {
+final class constants$8 {
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$8() {}
     static final FunctionDescriptor X509_STORE_CTX_set_error$FUNC = FunctionDescriptor.ofVoid(
         Constants$root.C_POINTER$LAYOUT,
         Constants$root.C_INT$LAYOUT

==================================================
openssl_h.java
index 953331b523..bc99139f11 100644
--- a/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$9.java
+++ b/modules/openssl-foreign/src/main/java/org/apache/tomcat/util/openssl/constants$9.java
@@ -24,8 +24,10 @@ import java.lang.invoke.VarHandle;
 import java.nio.ByteOrder;
 import java.lang.foreign.*;
 import static java.lang.foreign.ValueLayout.*;
-class constants$9 {
+final class constants$9 {
 
+    // Suppresses default constructor, ensuring non-instantiability.
+    private constants$9() {}
     static final FunctionDescriptor d2i_X509$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
         Constants$root.C_POINTER$LAYOUT,
         Constants$root.C_POINTER$LAYOUT,

==================================================
