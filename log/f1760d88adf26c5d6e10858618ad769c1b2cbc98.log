f1760d88adf26c5d6e10858618ad769c1b2cbc98
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=48760
==================================================
Mark Emlyn
==================================================
Tue Mar 9 13:15:15 2010 +0000
==================================================
FileDirContext.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=48760
Remove potential race condition that can result in multiple threads trying to use the same InputStream

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@920858 13f79535-47bb-0310-9956-ffa450edef68



==================================================
WARDirContext.java
index 9b556fe4e9..6ef0d4e639 100644
--- a/java/org/apache/naming/resources/FileDirContext.java
+++ b/java/org/apache/naming/resources/FileDirContext.java
@@ -892,7 +892,7 @@ public class FileDirContext extends BaseDirContext {
 
 
     /**
-     * This specialized resource implementation avoids opening the IputStream
+     * This specialized resource implementation avoids opening the InputStream
      * to the file right away (which would put a lock on the file).
      */
     protected class FileResource extends Resource {
@@ -933,7 +933,9 @@ public class FileDirContext extends BaseDirContext {
         public InputStream streamContent()
             throws IOException {
             if (binaryContent == null) {
-                inputStream = new FileInputStream(file);
+                FileInputStream fis = new FileInputStream(file);
+                inputStream = fis;
+                return fis;
             }
             return super.streamContent();
         }

==================================================
