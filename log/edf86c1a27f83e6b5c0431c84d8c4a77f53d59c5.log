edf86c1a27f83e6b5c0431c84d8c4a77f53d59c5
==================================================
Make Log and StringManager instances private to the class.
==================================================
Mark Emlyn
==================================================
Wed May 19 10:24:53 2010 +0000
==================================================
ClusterListener.java
Make Log and StringManager instances private to the class.
This fixes:
- messages for one class being logged via the logger of another
- messages not being found since the class is in a different packager to the super class

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@946107 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ClusterSingleSignOnListener.java
index 9708c5f3cc..1090b28872 100644
--- a/java/org/apache/catalina/ha/ClusterListener.java
+++ b/java/org/apache/catalina/ha/ClusterListener.java
@@ -37,17 +37,14 @@ import org.apache.tomcat.util.res.StringManager;
  */
 public abstract class ClusterListener implements ChannelListener {
 
-    public static final org.apache.juli.logging.Log log =
+    private static final org.apache.juli.logging.Log log =
         org.apache.juli.logging.LogFactory.getLog(ClusterListener.class);
 
-
     //--Instance Variables--------------------------------------
 
     /**
      * The string manager for this package.
      */
-    protected static final StringManager sm =
-        StringManager.getManager(Constants.Package);
 
     protected CatalinaCluster cluster = null;
 

==================================================
ClusterSessionListener.java
index 77cee04cae..c6805e3d8b 100644
--- a/java/org/apache/catalina/ha/authenticator/ClusterSingleSignOnListener.java
+++ b/java/org/apache/catalina/ha/authenticator/ClusterSingleSignOnListener.java
@@ -24,6 +24,8 @@ import org.apache.catalina.Session;
 import org.apache.catalina.ha.ClusterManager;
 import org.apache.catalina.ha.ClusterMessage;
 import org.apache.catalina.ha.ClusterListener;
+import org.apache.juli.logging.Log;
+import org.apache.juli.logging.LogFactory;
 
 /**
  * Receive replicated SingleSignOnMessage form other cluster node.
@@ -32,6 +34,9 @@ import org.apache.catalina.ha.ClusterListener;
  */
 public class ClusterSingleSignOnListener extends ClusterListener {
  
+    private static final Log log =
+        LogFactory.getLog(ClusterSingleSignOnListener.class);
+
     /**
      * The descriptive information about this implementation.
      */
@@ -45,6 +50,7 @@ public class ClusterSingleSignOnListener extends ClusterListener {
     //--Constructor---------------------------------------------
 
     public ClusterSingleSignOnListener() {
+        // NO-OP
     }
 
     //--Logic---------------------------------------------------
@@ -152,13 +158,12 @@ public class ClusterSingleSignOnListener extends ClusterListener {
                         log.error("Session doesn't exist:" + io);
                     }
                     return session;
-                } else {
-                    //this happens a lot before the system has started
-                    // up
-                    if (log.isDebugEnabled())
-                        log.debug("Context manager doesn't exist:"
-                                  + entry.getKey());
                 }
+                //this happens a lot before the system has started
+                // up
+                if (log.isDebugEnabled())
+                    log.debug("Context manager doesn't exist:"
+                              + entry.getKey());
             }
         } else {
             ClusterManager mgr = managers.get(ctxname);

==================================================
JvmRouteSessionIDBinderListener.java
index f4148846f5..18c3fbdc5a 100644
--- a/java/org/apache/catalina/ha/session/ClusterSessionListener.java
+++ b/java/org/apache/catalina/ha/session/ClusterSessionListener.java
@@ -19,7 +19,11 @@ package org.apache.catalina.ha.session;
 
 import java.util.Map;
 
-import org.apache.catalina.ha.*;
+import org.apache.catalina.ha.ClusterListener;
+import org.apache.catalina.ha.ClusterManager;
+import org.apache.catalina.ha.ClusterMessage;
+import org.apache.juli.logging.Log;
+import org.apache.juli.logging.LogFactory;
 
 /**
  * Receive replicated SessionMessage form other cluster node.
@@ -28,7 +32,10 @@ import org.apache.catalina.ha.*;
  * @version $Id$
  */
 public class ClusterSessionListener extends ClusterListener {
- 
+
+    private static final Log log =
+        LogFactory.getLog(ClusterSessionListener.class);
+    
     /**
      * The descriptive information about this implementation.
      */
@@ -37,6 +44,7 @@ public class ClusterSessionListener extends ClusterListener {
     //--Constructor---------------------------------------------
 
     public ClusterSessionListener() {
+        // NO-OP
     }
 
     //--Logic---------------------------------------------------

==================================================
