851ccfc33646b3130442ec5c14cdb8385223b428
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49799
==================================================
Mark Emlyn
==================================================
Mon Aug 30 22:32:08 2010 +0000
==================================================
Generator.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49799
The new omit< attribute for <jsp:attribute .../> elements now supports the use of expressions and expression language.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@991011 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Node.java
index b384777154..8b25f5e099 100644
--- a/java/org/apache/jasper/compiler/Generator.java
+++ b/java/org/apache/jasper/compiler/Generator.java
@@ -1861,20 +1861,30 @@ class Generator {
             Hashtable<String,String> map = new Hashtable<String,String>();
             Node.JspAttribute[] attrs = n.getJspAttributes();
             for (int i = 0; attrs != null && i < attrs.length; i++) {
-                String attrStr = null;
+                String value = null;
+                String nvp = null;
                 if (attrs[i].isNamedAttribute()) {
-                    if (attrs[i].getNamedAttributeNode().isOmit()) {
-                        // Skip this attribute - JSP.5-7
+                    NamedAttribute attr = attrs[i].getNamedAttributeNode();
+                    Node.JspAttribute omitAttr = attr.getOmit();
+                    String omit = attributeValue(omitAttr, false, boolean.class);
+                    if ("true".equals(omit)) {
                         continue;
                     }
-                    attrStr = generateNamedAttributeValue(attrs[i]
-                            .getNamedAttributeNode());
+                    value = generateNamedAttributeValue(
+                            attrs[i].getNamedAttributeNode());
+                    if ("false".equals(omit)) {
+                        nvp = " + \" " + attrs[i].getName() + "=\\\"\" + " +
+                                value + " + \"\\\"\"";
+                    } else {
+                        nvp = " + (Boolean.valueOf(" + omit + ")?\"\":\" " + attrs[i].getName() +
+                                "=\\\"\" + " + value + " + \"\\\"\")";
+                    }
                 } else {
-                    attrStr = attributeValue(attrs[i], false, Object.class);
+                    value = attributeValue(attrs[i], false, Object.class);
+                    nvp = " + \" " + attrs[i].getName() + "=\\\"\" + " +
+                            value + " + \"\\\"\"";
                 }
-                String s = " + \" " + attrs[i].getName() + "=\\\"\" + "
-                        + attrStr + " + \"\\\"\"";
-                map.put(attrs[i].getName(), s);
+                map.put(attrs[i].getName(), nvp);
             }
 
             // Write begin tag, using XML-style 'name' attribute as the

==================================================
Validator.java
index 7ce8376b16..77721ed24c 100644
--- a/java/org/apache/jasper/compiler/Node.java
+++ b/java/org/apache/jasper/compiler/Node.java
@@ -1866,7 +1866,7 @@ abstract class Node implements TagConstants {
 
         // True if this attribute should be omitted from the output if
         // used with a <jsp:element>, otherwise false
-        private boolean omit = false;
+        private JspAttribute omit;
 
         private ChildInfo childInfo;
 
@@ -1890,10 +1890,6 @@ abstract class Node implements TagConstants {
                 // (if null or true, leave default of true)
                 trim = false;
             }
-            if ("true".equals(this.getAttributeValue("omit"))) {
-                // (if null or false, leave default of false)
-                omit = true;
-            }
             childInfo = new ChildInfo();
             name = this.getAttributeValue("name");
             if (name != null) {
@@ -1933,7 +1929,11 @@ abstract class Node implements TagConstants {
             return trim;
         }
 
-        public boolean isOmit() {
+        public void setOmit(JspAttribute omit) {
+            this.omit = omit;
+        }
+        
+        public JspAttribute getOmit() {
             return omit;
         }
 

==================================================
TestGenerator.java
index 8af6d6496f..6d68d3b47d 100644
--- a/java/org/apache/jasper/compiler/Validator.java
+++ b/java/org/apache/jasper/compiler/Validator.java
@@ -685,6 +685,8 @@ class Validator {
         @Override
         public void visit(Node.NamedAttribute n) throws JasperException {
             JspUtil.checkAttributes("Attribute", n, attributeAttrs, err);
+            n.setOmit(getJspAttribute(null, "omit", null, null, n
+                    .getAttributeValue("omit"), n, true));
             visitBody(n);
         }
 

==================================================
