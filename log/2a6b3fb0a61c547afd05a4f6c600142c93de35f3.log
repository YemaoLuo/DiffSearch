2a6b3fb0a61c547afd05a4f6c600142c93de35f3
==================================================
Remove deprecated code
==================================================
Mark Thomas
==================================================
Wed Mar 15 13:47:25 2023 +0000
==================================================
Realm.java
Remove deprecated code


==================================================
DigestAuthenticator.java
index e81802965e..bf15dc2982 100644
--- a/java/org/apache/catalina/Realm.java
+++ b/java/org/apache/catalina/Realm.java
@@ -84,47 +84,10 @@ public interface Realm extends Contained {
     Principal authenticate(String username, String credentials);
 
 
-    /**
-     * Try to authenticate with the specified username, which
-     * matches the digest calculated using the given parameters using the
-     * method described in RFC 2617 (which is a superset of RFC 2069).
-     *
-     * @param username Username of the Principal to look up
-     * @param digest Digest which has been submitted by the client
-     * @param nonce Unique (or supposedly unique) token which has been used
-     * for this request
-     * @param nc the nonce counter
-     * @param cnonce the client chosen nonce
-     * @param qop the "quality of protection" ({@code nc} and {@code cnonce}
-     *        will only be used, if {@code qop} is not {@code null}).
-     * @param realm Realm name
-     * @param digestA2 Second digest calculated as digest(Method + ":" + uri)
-     *
-     * @return the associated principal, or {@code null} if there is none.
-     *
-     * @deprecated Unused. Use {@link #authenticate(String, String, String,
-     * String, String, String, String, String, String)}. Will be removed in
-     * Tomcat 11.
-     */
-    @Deprecated
-    Principal authenticate(String username, String digest,
-                                  String nonce, String nc, String cnonce,
-                                  String qop, String realm,
-                                  String digestA2);
-
-
     /**
      * Try to authenticate with the specified username, which
      * matches the digest calculated using the given parameters using the
      * method described in RFC 7616.
-     * <p>
-     * The default implementation calls {@link #authenticate(String, String,
-     * String, String, String, String, String, String)} for backwards
-     * compatibility which effectively forces the use of MD5 regardless of the
-     * algorithm specified in the call to this method.
-     * <p>
-     * Implementations are expected to override the default implementation and
-     * take account of the algorithm parameter.
      *
      * @param username Username of the Principal to look up
      * @param digest Digest which has been submitted by the client
@@ -140,12 +103,10 @@ public interface Realm extends Contained {
      *
      * @return the associated principal, or {@code null} if there is none.
      */
-    default Principal authenticate(String username, String digest,
+    Principal authenticate(String username, String digest,
                                   String nonce, String nc, String cnonce,
                                   String qop, String realm,
-                                  String digestA2, String algorithm) {
-        return authenticate(username, digest, nonce, nc, cnonce, qop, realm, digestA2);
-    }
+                                  String digestA2, String algorithm);
 
 
     /**

==================================================
RealmBase.java
index f80f2181e9..2843abdbe0 100644
--- a/java/org/apache/catalina/authenticator/DigestAuthenticator.java
+++ b/java/org/apache/catalina/authenticator/DigestAuthenticator.java
@@ -558,12 +558,6 @@ public class DigestAuthenticator extends AuthenticatorBase {
             return true;
         }
 
-        @Deprecated
-        public boolean validate(Request request) {
-            List<AuthDigest> fallbackList = Arrays.asList(FALLBACK_DIGEST);
-            return validate(request, fallbackList);
-        }
-
         public boolean validate(Request request, List<AuthDigest> algorithms) {
             if ((userName == null) || (realmName == null) || (nonce == null) || (uri == null) || (response == null)) {
                 return false;

==================================================
