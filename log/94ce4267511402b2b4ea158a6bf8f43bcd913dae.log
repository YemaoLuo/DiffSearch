94ce4267511402b2b4ea158a6bf8f43bcd913dae
==================================================
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=57540
==================================================
Christopher Schultz
==================================================
Thu Feb 19 16:21:27 2015 +0000
==================================================
Request.java
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=57540
Add SSL protocol to request attributes ("org.apache.tomcat.util.net.secure_protocol_version").
Note that this feature requires mod_jk 1.2.41 or later, or manual configuration of a JkEnvVar to set and send an AJP_SSL_PROTOCOL environment variable.


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1660924 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AjpProcessor.java
index 7cf3ada1eb..95bbb86fa6 100644
--- a/java/org/apache/catalina/connector/Request.java
+++ b/java/org/apache/catalina/connector/Request.java
@@ -98,6 +98,7 @@ import org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory;
 import org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload;
 import org.apache.tomcat.util.http.fileupload.servlet.ServletRequestContext;
 import org.apache.tomcat.util.http.parser.AcceptLanguage;
+import org.apache.tomcat.util.net.SSLSupport;
 import org.apache.tomcat.util.res.StringManager;
 import org.ietf.jgss.GSSCredential;
 import org.ietf.jgss.GSSException;
@@ -853,7 +854,7 @@ public class Request
         if(attr != null) {
             return attr;
         }
-        if( isSSLAttribute(name) ) {
+        if( isSSLAttribute(name) || name.equals(SSLSupport.PROTOCOL_VERSION_KEY)) {
             coyoteRequest.action(ActionCode.REQ_SSL_ATTRIBUTE,
                                  coyoteRequest);
             attr = coyoteRequest.getAttribute(Globals.CERTIFICATES_ATTR);
@@ -876,6 +877,10 @@ public class Request
             if(attr != null) {
                 attributes.put(Globals.SSL_SESSION_MGR_ATTR, attr);
             }
+            attr = coyoteRequest.getAttribute(SSLSupport.PROTOCOL_VERSION_KEY);
+            if(attr != null) {
+                attributes.put(SSLSupport.PROTOCOL_VERSION_KEY, attr);
+            }
             attr = attributes.get(name);
             sslAttributesParsed = true;
         }

==================================================
Constants.java
index a8e9c8a340..e8ac663f46 100644
--- a/java/org/apache/coyote/ajp/AjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpProcessor.java
@@ -1140,6 +1140,8 @@ public class AjpProcessor extends AbstractProcessor {
                     } catch (NumberFormatException nfe) {
                         // Ignore invalid value
                     }
+                } else if(n.equals(Constants.SC_A_SSL_PROTOCOL)) {
+                    request.setAttribute(SSLSupport.PROTOCOL_VERSION_KEY, v);
                 } else {
                     request.setAttribute(n, v );
                 }

==================================================
Http11Processor.java
index bf12f80581..2fb6c34358 100644
--- a/java/org/apache/coyote/ajp/Constants.java
+++ b/java/org/apache/coyote/ajp/Constants.java
@@ -76,6 +76,7 @@ public final class Constants {
      */
     public static final String SC_A_REQ_LOCAL_ADDR  = "AJP_LOCAL_ADDR";
     public static final String SC_A_REQ_REMOTE_PORT = "AJP_REMOTE_PORT";
+    public static final String SC_A_SSL_PROTOCOL    = "AJP_SSL_PROTOCOL";
 
     // Terminates list of attributes
     public static final byte SC_A_ARE_DONE      = (byte)0xFF;

==================================================
AprSSLSupport.java
index 10b3517668..b37b688496 100644
--- a/java/org/apache/coyote/http11/Http11Processor.java
+++ b/java/org/apache/coyote/http11/Http11Processor.java
@@ -975,6 +975,11 @@ public class Http11Processor extends AbstractProcessor {
                         request.setAttribute
                             (SSLSupport.SESSION_ID_KEY, sslO);
                     }
+                    sslO = sslSupport.getProtocol();
+                    if (sslO != null) {
+                        request.setAttribute
+                            (SSLSupport.PROTOCOL_VERSION_KEY, sslO);
+                    }
                     request.setAttribute(SSLSupport.SESSION_MGR, sslSupport);
                 }
             } catch (Exception e) {

==================================================
SSLSupport.java
index c3e11bf059..b620ce9017 100644
--- a/java/org/apache/tomcat/util/net/AprSSLSupport.java
+++ b/java/org/apache/tomcat/util/net/AprSSLSupport.java
@@ -117,4 +117,18 @@ public class AprSSLSupport implements SSLSupport {
             throw new IOException(e);
         }
     }
+
+    @Override
+    public String getProtocol() throws IOException {
+        long socketRef = socketWrapper.getSocket().longValue();
+        if (socketRef == 0) {
+            return null;
+        }
+
+        try {
+            return SSLSocket.getInfoS(socketRef, SSL.SSL_INFO_PROTOCOL);
+        } catch (Exception e) {
+            throw new IOException(e);
+        }
+   }
 }

==================================================
JSSESupport.java
index 372590b537..ebaf3b3686 100644
--- a/java/org/apache/tomcat/util/net/SSLSupport.java
+++ b/java/org/apache/tomcat/util/net/SSLSupport.java
@@ -55,6 +55,12 @@ public interface SSLSupport {
     public static final String SESSION_MGR =
             "javax.servlet.request.ssl_session_mgr";
 
+    /**
+     * The request attribute key under which the String indicating the protocol
+     * that created the SSL socket is recorded - e.g. TLSv1 or TLSv1.2 etc.
+     */
+    public static final String PROTOCOL_VERSION_KEY =
+            "org.apache.tomcat.util.net.secure_protocol_version";
 
     /**
      * The cipher suite being used on this connection.
@@ -106,5 +112,11 @@ public interface SSLSupport {
      * @throws IOException If an error occurs trying to obtain the session ID
      */
     public String getSessionId() throws IOException;
+
+    /**
+     * @return the protocol String indicating how the SSL socket was created
+     *  e.g. TLSv1 or TLSv1.2 etc.
+     */
+    public String getProtocol() throws IOException;
 }
 

==================================================
