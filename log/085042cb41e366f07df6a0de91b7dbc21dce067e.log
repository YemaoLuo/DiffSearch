085042cb41e366f07df6a0de91b7dbc21dce067e
==================================================
Compress outgoing response headers according to the
==================================================
Mladen Turk
==================================================
Sun Nov 26 09:29:15 2006 +0000
==================================================
AjpAprProcessor.java
Compress outgoing response headers according to the
AJP13 protocol specification.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk@479317 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AjpProcessor.java
index dda1cef4c0..3ce901d519 100644
--- a/java/org/apache/coyote/ajp/AjpAprProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpAprProcessor.java
@@ -960,9 +960,15 @@ public class AjpAprProcessor implements ActionHook {
         // Other headers
         int numHeaders = headers.size();
         responseHeaderMessage.appendInt(numHeaders);
-        for (int i = 0; i < numHeaders; i++) {
+        for (int i = 0; i < numHeaders; i++) {            
             MessageBytes hN = headers.getName(i);
-            responseHeaderMessage.appendBytes(hN);
+            int hC = Constants.getResponseAjpIndex(hN.toString());
+            if (hC > 0) {
+                responseHeaderMessage.appendInt(hC);
+            }
+            else {
+                responseHeaderMessage.appendBytes(hN);
+            }
             MessageBytes hV=headers.getValue(i);
             responseHeaderMessage.appendBytes(hV);
         }

==================================================
Constants.java
index b06d216cbe..2161f2e4e7 100644
--- a/java/org/apache/coyote/ajp/AjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpProcessor.java
@@ -929,7 +929,13 @@ public class AjpProcessor implements ActionHook {
         responseHeaderMessage.appendInt(numHeaders);
         for (int i = 0; i < numHeaders; i++) {
             MessageBytes hN = headers.getName(i);
-            responseHeaderMessage.appendBytes(hN);
+            int hC = Constants.getResponseAjpIndex(hN.toString());
+            if (hC > 0) {
+                responseHeaderMessage.appendInt(hC);
+            }
+            else {
+                responseHeaderMessage.appendBytes(hN);
+            }
             MessageBytes hV=headers.getValue(i);
             responseHeaderMessage.appendBytes(hV);
         }

==================================================
