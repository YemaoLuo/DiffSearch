0f4798157a2e7de7c542b41788288fd9bbb43fd7
==================================================
Javadoc
==================================================
Mark Thomas
==================================================
Sat Jan 16 15:16:25 2016 +0000
==================================================
ExpressionParseTree.java
Javadoc

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1724988 13f79535-47bb-0310-9956-ffa450edef68



==================================================
WebappServiceLoader.java
index 7bde84848f..8d0c7a17fd 100644
--- a/java/org/apache/catalina/ssi/ExpressionParseTree.java
+++ b/java/org/apache/catalina/ssi/ExpressionParseTree.java
@@ -211,7 +211,7 @@ public class ExpressionParseTree {
      */
     private abstract class Node {
         /**
-         * Return true if the node evaluates to true.
+         * @return {@code true} if the node evaluates to true.
          */
         public abstract boolean evaluate();
     }
@@ -230,6 +230,8 @@ public class ExpressionParseTree {
 
         /**
          * Resolves any variable references and returns the value string.
+         *
+         * @return the value string
          */
         public String getValue() {
             if (resolved == null)
@@ -272,7 +274,7 @@ public class ExpressionParseTree {
 
 
         /**
-         * Returns a preference level suitable for comparison to other OppNode
+         * @return a precedence level suitable for comparison to other OppNode
          * preference levels.
          */
         public abstract int getPrecedence();
@@ -281,6 +283,8 @@ public class ExpressionParseTree {
         /**
          * Lets the node pop its own branch nodes off the front of the
          * specified list. The default pulls two.
+         *
+         * @param values The list from which to pop the values
          */
         public void popValues(List<Node> values) {
             right = values.remove(0);

==================================================
AbstractReplicatedMap.java
index 82db35e733..220baac8b7 100644
--- a/java/org/apache/catalina/startup/WebappServiceLoader.java
+++ b/java/org/apache/catalina/startup/WebappServiceLoader.java
@@ -52,6 +52,8 @@ import org.apache.tomcat.util.scan.JarFactory;
  * <p>
  * Provider classes will be loaded using the context's ClassLoader.
  *
+ * @param <T> The type of service to load
+ *
  * @see javax.servlet.ServletContainerInitializer
  * @see java.util.ServiceLoader
  */

==================================================
LazyReplicatedMap.java
index 2bf001fff8..2e0b0d57f4 100644
--- a/java/org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java
+++ b/java/org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java
@@ -47,8 +47,8 @@ import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 
 /**
- *
- * @version 1.0
+ * @param <K> The type of Key
+ * @param <V> The type of Value
  */
 public abstract class AbstractReplicatedMap<K,V>
         implements Map<K,V>, Serializable, RpcCallback, ChannelListener,

==================================================
ReplicatedMap.java
index fbbe3986f7..421c2b47a9 100644
--- a/java/org/apache/catalina/tribes/tipis/LazyReplicatedMap.java
+++ b/java/org/apache/catalina/tribes/tipis/LazyReplicatedMap.java
@@ -60,7 +60,9 @@ import org.apache.juli.logging.LogFactory;
  * <br><br><b>REMBER TO CALL</b> <code>breakdown()</code> or <code>finalize()</code> when you are done with the map to
  * avoid memory leaks.<br><br>
  * TODO implement periodic sync/transfer thread
- * @version 1.0
+ *
+ * @param <K> The type of Key
+ * @param <V> The type of Value
  */
 public class LazyReplicatedMap<K,V> extends AbstractReplicatedMap<K,V> {
     private static final long serialVersionUID = 1L;

==================================================
ParameterMap.java
index e69e9fa270..49142261c7 100644
--- a/java/org/apache/catalina/tribes/tipis/ReplicatedMap.java
+++ b/java/org/apache/catalina/tribes/tipis/ReplicatedMap.java
@@ -51,7 +51,8 @@ import org.apache.juli.logging.LogFactory;
  * TODO memberDisappeared, should do nothing except change map membership
  *       by default it relocates the primary objects
  *
- * @version 1.0
+ * @param <K> The type of Key
+ * @param <V> The type of Value
  */
 public class ReplicatedMap<K,V> extends AbstractReplicatedMap<K,V> {
 

==================================================
ResourceSet.java
index 996fdba61f..a166818861 100644
--- a/java/org/apache/catalina/util/ParameterMap.java
+++ b/java/org/apache/catalina/util/ParameterMap.java
@@ -28,6 +28,9 @@ import org.apache.tomcat.util.res.StringManager;
  * to clone them in order to avoid modifications.  When first created, a
  * <code>ParmaeterMap</code> instance is not locked.
  *
+ * @param <K> The type of Key
+ * @param <V> The type of Value
+ *
  * @author Craig R. McClanahan
  */
 public final class ParameterMap<K,V> extends LinkedHashMap<K,V> {

==================================================
XMLWriter.java
index d6d04d2abe..40f86dbb56 100644
--- a/java/org/apache/catalina/util/ResourceSet.java
+++ b/java/org/apache/catalina/util/ResourceSet.java
@@ -32,6 +32,8 @@ import org.apache.tomcat.util.res.StringManager;
  * to avoid modifications.  When first created, a <code>ResourceMap</code>
  * is not locked.
  *
+ * @param <T> The type of elements in the Set
+ *
  * @author Craig R. McClanahan
  */
 public final class ResourceSet<T> extends HashSet<T> {

==================================================
