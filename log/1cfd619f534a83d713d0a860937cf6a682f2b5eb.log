1cfd619f534a83d713d0a860937cf6a682f2b5eb
==================================================
Alternative implementation for r1196212 that covers all HTTP connectors.
==================================================
Konstantin Kolinko
==================================================
Tue Nov 1 19:17:39 2011 +0000
==================================================
InternalAprInputBuffer.java
Alternative implementation for r1196212 that covers all HTTP connectors.
Self-guard against unexpected call to parseHeaders() after the parsing has already been completed
without a prior call to recycle() or nextRequest().

There is already a flag variable (parsingHeader), so no need for additional state in InternalNioInputBuffer.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1196223 13f79535-47bb-0310-9956-ffa450edef68



==================================================
InternalInputBuffer.java
index 3abde0fee0..2f49ea3508 100644
--- a/java/org/apache/coyote/http11/InternalAprInputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalAprInputBuffer.java
@@ -304,6 +304,10 @@ public class InternalAprInputBuffer extends AbstractInputBuffer<Long> {
     @Override
     public boolean parseHeaders()
         throws IOException {
+        if (!parsingHeader) {
+            throw new IllegalStateException(
+                    sm.getString("iib.parseheaders.ise.error"));
+        }
 
         while (parseHeader()) {
             // Loop until there are no more headers

==================================================
InternalNioInputBuffer.java
index 5a7f16d240..d8152b7432 100644
--- a/java/org/apache/coyote/http11/InternalInputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalInputBuffer.java
@@ -260,6 +260,10 @@ public class InternalInputBuffer extends AbstractInputBuffer<Socket> {
     @Override
     public boolean parseHeaders()
         throws IOException {
+        if (!parsingHeader) {
+            throw new IllegalStateException(
+                    sm.getString("iib.parseheaders.ise.error"));
+        }
 
         while (parseHeader()) {
             // Loop until we run out of headers

==================================================
