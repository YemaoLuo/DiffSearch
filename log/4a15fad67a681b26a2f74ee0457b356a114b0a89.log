4a15fad67a681b26a2f74ee0457b356a114b0a89
==================================================
Whitespace police after merges
==================================================
Mark Emlyn
==================================================
Thu Jul 10 07:22:24 2014 +0000
==================================================
BaseGenericObjectPool.java
Whitespace police after merges

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1609411 13f79535-47bb-0310-9956-ffa450edef68



==================================================
BaseObjectPoolConfig.java
index 1d91ca3e60..fec39c4543 100644
--- a/java/org/apache/tomcat/dbcp/pool2/impl/BaseGenericObjectPool.java
+++ b/java/org/apache/tomcat/dbcp/pool2/impl/BaseGenericObjectPool.java
@@ -249,7 +249,7 @@ public abstract class BaseGenericObjectPool<T> {
     public final boolean getLifo() {
         return lifo;
     }
-    
+
     /**
      * Returns whether or not the pool serves threads waiting to borrow objects fairly.
      * True means that waiting threads are served as if waiting in a FIFO queue.

==================================================
GenericObjectPoolMXBean.java
index 2786efa775..fe106279b5 100644
--- a/java/org/apache/tomcat/dbcp/pool2/impl/BaseObjectPoolConfig.java
+++ b/java/org/apache/tomcat/dbcp/pool2/impl/BaseObjectPoolConfig.java
@@ -33,7 +33,7 @@ public abstract class BaseObjectPoolConfig implements Cloneable {
      * @see GenericKeyedObjectPool#getLifo()
      */
     public static final boolean DEFAULT_LIFO = true;
-    
+
     /**
      * The default value for the {@code fairness} configuration attribute.
      * @see GenericObjectPool#getFairness()
@@ -153,7 +153,7 @@ public abstract class BaseObjectPoolConfig implements Cloneable {
 
 
     private boolean lifo = DEFAULT_LIFO;
-    
+
     private boolean fairness = DEFAULT_FAIRNESS;
 
     private long maxWaitMillis = DEFAULT_MAX_WAIT_MILLIS;
@@ -203,7 +203,7 @@ public abstract class BaseObjectPoolConfig implements Cloneable {
     public boolean getLifo() {
         return lifo;
     }
-    
+
     /**
      * Get the value for the {@code fairness} configuration attribute for pools
      * created with this configuration instance.
@@ -231,7 +231,7 @@ public abstract class BaseObjectPoolConfig implements Cloneable {
     public void setLifo(boolean lifo) {
         this.lifo = lifo;
     }
-    
+
     /**
      * Set the value for the {@code fairness} configuration attribute for pools
      * created with this configuration instance.

==================================================
InterruptibleReentrantLock.java
index 064220a433..d2517a4ff3 100644
--- a/java/org/apache/tomcat/dbcp/pool2/impl/GenericObjectPoolMXBean.java
+++ b/java/org/apache/tomcat/dbcp/pool2/impl/GenericObjectPoolMXBean.java
@@ -41,7 +41,7 @@ public interface GenericObjectPoolMXBean {
      * See {@link GenericObjectPool#getLifo()}
      * @return See {@link GenericObjectPool#getLifo()}
      */
-    boolean getFairness();  
+    boolean getFairness();
     /**
      * See {@link GenericObjectPool#getFairness()}
      * @return See {@link GenericObjectPool#getFairness()}

==================================================
LinkedBlockingDeque.java
index dbd22f482f..b328ac7afc 100644
--- a/java/org/apache/tomcat/dbcp/pool2/impl/InterruptibleReentrantLock.java
+++ b/java/org/apache/tomcat/dbcp/pool2/impl/InterruptibleReentrantLock.java
@@ -35,7 +35,7 @@ class InterruptibleReentrantLock extends ReentrantLock {
 
     /**
      * Create a new InterruptibleReentrantLock with the given fairness policy.
-     * 
+     *
      * @param fairness true means threads should acquire contended locks as if
      * waiting in a FIFO queue
      */

==================================================
