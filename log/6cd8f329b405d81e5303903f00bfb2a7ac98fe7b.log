6cd8f329b405d81e5303903f00bfb2a7ac98fe7b
==================================================
Move methods that interact with OpenSSL binary to a separate class as they will be useful to other tests.
==================================================
Mark Emlyn
==================================================
Thu Jul 31 12:39:49 2014 +0000
==================================================
TestCipher.java
Move methods that interact with OpenSSL binary to a separate class as they will be useful to other tests.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1614869 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TesterOpenSSL.java
index 0563dcfcf2..a84fcb37da 100644
--- a/test/org/apache/tomcat/util/net/jsse/openssl/TestCipher.java
+++ b/test/org/apache/tomcat/util/net/jsse/openssl/TestCipher.java
@@ -16,8 +16,6 @@
  */
 package org.apache.tomcat.util.net.jsse.openssl;
 
-import java.io.InputStream;
-import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collections;
 import java.util.HashSet;
@@ -27,9 +25,6 @@ import java.util.Set;
 import org.junit.Assert;
 import org.junit.Test;
 
-import org.apache.catalina.util.IOTools;
-import org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream;
-
 public class TestCipher {
 
     /**
@@ -39,7 +34,7 @@ public class TestCipher {
      */
     @Test
     public void testAllOpenSSLCiphersMapped() throws Exception {
-        Set<String> openSSLCipherSuites = getOpenSSLCiphersAsSet("ALL:eNULL");
+        Set<String> openSSLCipherSuites = TesterOpenSSL.getOpenSSLCiphersAsSet("ALL:eNULL");
 
         for (String openSSLCipherSuite : openSSLCipherSuites) {
             List<String> jsseCipherSuites =
@@ -75,7 +70,7 @@ public class TestCipher {
      */
     @Test
     public void testOpenSSLCipherAvailability() throws Exception {
-        Set<String> availableCipherSuites = getOpenSSLCiphersAsSet("ALL:eNULL");
+        Set<String> availableCipherSuites = TesterOpenSSL.getOpenSSLCiphersAsSet("ALL:eNULL");
         Set<String> expectedCipherSuites = new HashSet<>();
         for (Cipher cipher : Cipher.values()) {
             String openSSLAlias = cipher.getOpenSSLAlias();
@@ -162,43 +157,6 @@ public class TestCipher {
     }
 
 
-    private static Set<String> getOpenSSLCiphersAsSet(String specification) throws Exception {
-        String[] ciphers = getOpenSSLCiphersAsExpression(specification).trim().split(":");
-        Set<String> result = new HashSet<>(ciphers.length);
-        for (String cipher : ciphers) {
-            result.add(cipher);
-        }
-        return result;
-
-    }
-
-
-    private static String getOpenSSLCiphersAsExpression(String specification) throws Exception {
-        String openSSLPath = System.getProperty("tomcat.test.openssl.path");
-        if (openSSLPath == null || openSSLPath.length() == 0) {
-            openSSLPath = "openssl";
-        }
-        List<String> cmd = new ArrayList<>();
-        cmd.add(openSSLPath);
-        cmd.add("ciphers");
-        if (specification != null) {
-            cmd.add(specification);
-        }
-        Process process = Runtime.getRuntime().exec(cmd.toArray(new String[cmd.size()]));
-        InputStream stderr = process.getErrorStream();
-        InputStream stdout = process.getInputStream();
-
-        ByteArrayOutputStream stderrBytes = new ByteArrayOutputStream();
-        IOTools.flow(stderr, stderrBytes);
-        //String errorText = stderrBytes.toString();
-        //Assert.assertTrue(errorText, errorText.length() == 0);
-
-        ByteArrayOutputStream stdoutBytes = new ByteArrayOutputStream();
-        IOTools.flow(stdout, stdoutBytes);
-        return stdoutBytes.toString();
-    }
-
-
     /**
      * These are all the Oracle standard Java names for cipher suites taken from
      * http://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#ciphersuites

==================================================
