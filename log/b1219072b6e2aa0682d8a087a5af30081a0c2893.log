b1219072b6e2aa0682d8a087a5af30081a0c2893
==================================================
Make host header / request line consistency check configurable since it is a new requirement in RFC 7230
==================================================
Mark Thomas
==================================================
Fri Sep 22 14:06:39 2017 +0000
==================================================
AbstractHttp11Protocol.java
Make host header / request line consistency check configurable since it is a new requirement in RFC 7230

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1809317 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http11Processor.java
index 94845919df..7499958c5b 100644
--- a/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
+++ b/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
@@ -91,6 +91,29 @@ public abstract class AbstractHttp11Protocol<S> extends AbstractProtocol<S> {
     // ------------------------------------------------ HTTP specific properties
     // ------------------------------------------ managed in the ProtocolHandler
 
+    private boolean allowHostHeaderMismatch = false;
+    /**
+     * Will Tomcat accept an HTTP 1.1 request where the host header does not
+     * agree with the host specified (if any) in the request line?
+     *
+     * @return {@code true} if Tomcat will allow such requests, otherwise
+     *         {@code false}
+     */
+    public boolean getAllowHostHeaderMismatch() {
+        return allowHostHeaderMismatch;
+    }
+    /**
+     * Will Tomcat accept an HTTP 1.1 request where the host header does not
+     * agree with the host specified (if any) in the request line?
+     *
+     * @param allowHostHeaderMismatch {@code true} to allow such requests,
+     *                                {@code false} to reject them with a 400
+     */
+    public void setAllowHostHeaderMismatch(boolean allowHostHeaderMismatch) {
+        this.allowHostHeaderMismatch = allowHostHeaderMismatch;
+    }
+
+
     private boolean rejectIllegalHeaderName = true;
     /**
      * If an HTTP request is received that contains an illegal header name (i.e.

==================================================
