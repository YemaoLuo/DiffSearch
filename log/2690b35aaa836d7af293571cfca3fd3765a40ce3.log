2690b35aaa836d7af293571cfca3fd3765a40ce3
==================================================
No longer need implementation specific upgrade processors. Collapse
==================================================
Mark Emlyn
==================================================
Mon Nov 10 16:48:03 2014 +0000
==================================================
Http11AprProtocol.java
No longer need implementation specific upgrade processors. Collapse
class hierarchy into single implementation.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1637941 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http11Nio2Protocol.java
index add0040083..4df534fa34 100644
--- a/java/org/apache/coyote/http11/Http11AprProtocol.java
+++ b/java/org/apache/coyote/http11/Http11AprProtocol.java
@@ -23,7 +23,7 @@ import javax.servlet.http.HttpUpgradeHandler;
 
 import org.apache.coyote.AbstractProtocol;
 import org.apache.coyote.Processor;
-import org.apache.coyote.http11.upgrade.AprProcessor;
+import org.apache.coyote.http11.upgrade.UpgradeProcessor;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.net.AbstractEndpoint;
@@ -325,7 +325,7 @@ public class Http11AprProtocol extends AbstractHttp11Protocol<Long> {
                 SocketWrapperBase<Long> socket, ByteBuffer leftoverInput,
                 HttpUpgradeHandler httpUpgradeProcessor)
                 throws IOException {
-            return new AprProcessor(socket, leftoverInput, httpUpgradeProcessor,
+            return new UpgradeProcessor<>(socket, leftoverInput, httpUpgradeProcessor,
                     proto.getUpgradeAsyncWriteBufferSize());
         }
     }

==================================================
Http11NioProtocol.java
index 8a8a04801d..22edae67b7 100644
--- a/java/org/apache/coyote/http11/Http11Nio2Protocol.java
+++ b/java/org/apache/coyote/http11/Http11Nio2Protocol.java
@@ -25,7 +25,7 @@ import javax.servlet.http.HttpUpgradeHandler;
 
 import org.apache.coyote.AbstractProtocol;
 import org.apache.coyote.Processor;
-import org.apache.coyote.http11.upgrade.Nio2Processor;
+import org.apache.coyote.http11.upgrade.UpgradeProcessor;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.net.AbstractEndpoint;
@@ -264,7 +264,7 @@ public class Http11Nio2Protocol extends AbstractHttp11JsseProtocol<Nio2Channel>
                 SocketWrapperBase<Nio2Channel> socket, ByteBuffer leftoverInput,
                 HttpUpgradeHandler httpUpgradeProcessor)
                 throws IOException {
-            return new Nio2Processor(socket, leftoverInput,
+            return new UpgradeProcessor<>(socket, leftoverInput,
                     httpUpgradeProcessor, proto.getUpgradeAsyncWriteBufferSize());
         }
 

==================================================
AprProcessor.java
index 00515eee76..58f3ad8544 100644
--- a/java/org/apache/coyote/http11/Http11NioProtocol.java
+++ b/java/org/apache/coyote/http11/Http11NioProtocol.java
@@ -26,7 +26,7 @@ import javax.servlet.http.HttpUpgradeHandler;
 
 import org.apache.coyote.AbstractProtocol;
 import org.apache.coyote.Processor;
-import org.apache.coyote.http11.upgrade.NioProcessor;
+import org.apache.coyote.http11.upgrade.UpgradeProcessor;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.net.AbstractEndpoint;
@@ -296,7 +296,7 @@ public class Http11NioProtocol extends AbstractHttp11JsseProtocol<NioChannel> {
                 SocketWrapperBase<NioChannel> socket, ByteBuffer leftoverInput,
                 HttpUpgradeHandler httpUpgradeProcessor)
                 throws IOException {
-            return new NioProcessor(socket, leftoverInput, httpUpgradeProcessor,
+            return new UpgradeProcessor<>(socket, leftoverInput, httpUpgradeProcessor,
                     proto.getUpgradeAsyncWriteBufferSize());
         }
 

==================================================
Nio2Processor.java
deleted file mode 100644
index f023ab5d4d..0000000000
--- a/java/org/apache/coyote/http11/upgrade/AprProcessor.java
+++ /dev/null
@@ -1,43 +0,0 @@
-/*
- *  Licensed to the Apache Software Foundation (ASF) under one or more
- *  contributor license agreements.  See the NOTICE file distributed with
- *  this work for additional information regarding copyright ownership.
- *  The ASF licenses this file to You under the Apache License, Version 2.0
- *  (the "License"); you may not use this file except in compliance with
- *  the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.apache.coyote.http11.upgrade;
-
-import java.nio.ByteBuffer;
-
-import javax.servlet.http.HttpUpgradeHandler;
-
-import org.apache.juli.logging.Log;
-import org.apache.juli.logging.LogFactory;
-import org.apache.tomcat.util.net.SocketWrapperBase;
-
-public class AprProcessor extends AbstractProcessor<Long> {
-
-    private static final Log log = LogFactory.getLog(AprProcessor.class);
-    @Override
-    protected Log getLog() {return log;}
-
-    private static final int INFINITE_TIMEOUT = -1;
-
-    public AprProcessor(SocketWrapperBase<Long> wrapper, ByteBuffer leftOverInput,
-            HttpUpgradeHandler httpUpgradeHandler, int asyncWriteBufferSize) {
-        super(httpUpgradeHandler,
-                new UpgradeServletInputStream(wrapper),
-                new UpgradeServletOutputStream(wrapper, asyncWriteBufferSize));
-        wrapper.unRead(leftOverInput);
-        wrapper.setTimeout(INFINITE_TIMEOUT);
-    }
-}

==================================================
NioProcessor.java
deleted file mode 100644
index 0aa9c22fbe..0000000000
--- a/java/org/apache/coyote/http11/upgrade/Nio2Processor.java
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- *  Licensed to the Apache Software Foundation (ASF) under one or more
- *  contributor license agreements.  See the NOTICE file distributed with
- *  this work for additional information regarding copyright ownership.
- *  The ASF licenses this file to You under the Apache License, Version 2.0
- *  (the "License"); you may not use this file except in compliance with
- *  the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.apache.coyote.http11.upgrade;
-
-import java.nio.ByteBuffer;
-
-import javax.servlet.http.HttpUpgradeHandler;
-
-import org.apache.juli.logging.Log;
-import org.apache.juli.logging.LogFactory;
-import org.apache.tomcat.util.net.Nio2Channel;
-import org.apache.tomcat.util.net.SocketWrapperBase;
-
-public class Nio2Processor extends AbstractProcessor<Nio2Channel> {
-
-    private static final Log log = LogFactory.getLog(Nio2Processor.class);
-    @Override
-    protected Log getLog() {return log;}
-
-    private static final int INFINITE_TIMEOUT = -1;
-
-    public Nio2Processor(SocketWrapperBase<Nio2Channel> wrapper, ByteBuffer leftoverInput,
-            HttpUpgradeHandler httpUpgradeHandler, int asyncWriteBufferSize) {
-        super(httpUpgradeHandler,
-                new UpgradeServletInputStream(wrapper),
-                new UpgradeServletOutputStream(wrapper, asyncWriteBufferSize));
-        wrapper.unRead(leftoverInput);
-        wrapper.setTimeout(INFINITE_TIMEOUT);
-    }
-}

==================================================
UpgradeProcessor.java
deleted file mode 100644
index 60c8140d9e..0000000000
--- a/java/org/apache/coyote/http11/upgrade/NioProcessor.java
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- *  Licensed to the Apache Software Foundation (ASF) under one or more
- *  contributor license agreements.  See the NOTICE file distributed with
- *  this work for additional information regarding copyright ownership.
- *  The ASF licenses this file to You under the Apache License, Version 2.0
- *  (the "License"); you may not use this file except in compliance with
- *  the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.apache.coyote.http11.upgrade;
-
-import java.nio.ByteBuffer;
-
-import javax.servlet.http.HttpUpgradeHandler;
-
-import org.apache.juli.logging.Log;
-import org.apache.juli.logging.LogFactory;
-import org.apache.tomcat.util.net.NioChannel;
-import org.apache.tomcat.util.net.SocketWrapperBase;
-
-public class NioProcessor extends AbstractProcessor<NioChannel> {
-
-    private static final Log log = LogFactory.getLog(NioProcessor.class);
-    @Override
-    protected Log getLog() {return log;}
-
-    private static final int INFINITE_TIMEOUT = -1;
-
-    public NioProcessor(SocketWrapperBase<NioChannel> wrapper, ByteBuffer leftoverInput,
-            HttpUpgradeHandler httpUpgradeHandler, int asyncWriteBufferSize) {
-        super(httpUpgradeHandler,
-                new UpgradeServletInputStream(wrapper),
-                new UpgradeServletOutputStream(wrapper, asyncWriteBufferSize));
-        wrapper.unRead(leftoverInput);
-        wrapper.setTimeout(INFINITE_TIMEOUT);
-    }
-}

==================================================
