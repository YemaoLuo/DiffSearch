a6cbdb59983d50bb79dc8356a0d2d48ebe6bddd7
==================================================
Handle component failure without throwing a whole stack of exceptions
==================================================
Mark Emlyn
==================================================
Mon Mar 8 12:39:57 2010 +0000
==================================================
Lifecycle.java
Handle component failure without throwing a whole stack of exceptions
Adds a new permitted transition from NEW to STOPPED that does not fire any events

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@920297 13f79535-47bb-0310-9956-ffa450edef68



==================================================
LifecycleBase.java
index d92cfb4162..7fac3c2d2d 100644
--- a/java/org/apache/catalina/Lifecycle.java
+++ b/java/org/apache/catalina/Lifecycle.java
@@ -27,23 +27,25 @@ package org.apache.catalina;
  * <br>
  * The valid state transitions for components that support Lifecycle are:
  * <pre>
- *                  --------------------<--------------------------
- *                  |                                             |
- *     start()      |        auto          auto         stop()    |       
- * NEW --->--- STARTING_PREP -->- STARTING -->- STARTED -->---    |
- *                                                 |         |    |
- *                                     auto        |         |    |
- *      ---------<----- MUST_STOP --<---------------         |    |
- *      |                                                    |    |
- *      ---------------------------<--------------------------    ^
- *      |                                                         |
- *      |        auto          auto                start()        |
- * STOPPING_PREP -->- STOPPING -->- STOPPED -------------->--------
- *      ^
- *      |stop()
- *      |
- *   FAILED
- * 
+ *                            --------------------<--------------------------
+ *                            |                                             |
+ *               start()      |        auto          auto         stop()    |       
+ * NEW ------------->--- STARTING_PREP -->- STARTING -->- STARTED -->---    |
+ *  |                                                        |         |    |
+ *  |                                            auto        |         |    |
+ *  |stop()       ---------<----- MUST_STOP --<---------------         |    |
+ *  |             |                                                    |    |
+ *  |             ---------------------------<--------------------------    ^
+ *  |             |                                                         |
+ *  |             |        auto          auto                start()        |
+ *  |        STOPPING_PREP -->- STOPPING -->- STOPPED -------------->--------
+ *  |             ^                              ^
+ *  |             |stop()                        |
+ *  |             |                              |
+ *  |          FAILED                            |
+ *  |                                            |
+ *  --->------------------------------>-----------
+ *   
  * Any state can transition to FAILED.
  * 
  * Calling start() while a component is in states STARTING_PREP, STARTING or
@@ -52,6 +54,11 @@ package org.apache.catalina;
  * Calling stop() while a component is in states STOPPING_PREP, STOPPING or
  * STOPPED has no effect.
  * 
+ * Calling stop() while a component is in state NEW transitions the component
+ * to STOPPED. This is typically encountered when a component fails to start and
+ * does not start all its sub-components. When the component is stopped, it will
+ * try to stop all sub-components - even those it didn't start.
+ * 
  * MUST_STOP is used to indicate that the {@link #stop()} should be called on
  * the component as soon as {@link start()} exits.
  * 

==================================================
