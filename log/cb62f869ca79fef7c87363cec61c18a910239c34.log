cb62f869ca79fef7c87363cec61c18a910239c34
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=55772
==================================================
Mark Emlyn
==================================================
Fri Nov 15 13:39:52 2013 +0000
==================================================
CoyoteAdapter.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=55772
Ensure that the request and response are recycled after an error during async processing.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1542267 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ActionCode.java
index 4bd100110d..62350bb8e2 100644
--- a/java/org/apache/catalina/connector/CoyoteAdapter.java
+++ b/java/org/apache/catalina/connector/CoyoteAdapter.java
@@ -20,6 +20,7 @@ import java.io.IOException;
 import java.io.UnsupportedEncodingException;
 import java.nio.charset.Charset;
 import java.util.EnumSet;
+import java.util.concurrent.atomic.AtomicBoolean;
 
 import javax.servlet.ReadListener;
 import javax.servlet.RequestDispatcher;
@@ -574,8 +575,10 @@ public class CoyoteAdapter implements Adapter {
             // Ignore
         } finally {
             req.getRequestProcessor().setWorkerThreadName(null);
+            AtomicBoolean error = new AtomicBoolean(false);
+            res.action(ActionCode.IS_ERROR, error);
             // Recycle the wrapper request and response
-            if (!comet && !async) {
+            if (!comet && !async || error.get()) {
                 request.recycle();
                 response.recycle();
             } else {

==================================================
AbstractAjpProcessor.java
index 9598143520..5ae885a540 100644
--- a/java/org/apache/coyote/ActionCode.java
+++ b/java/org/apache/coyote/ActionCode.java
@@ -40,6 +40,12 @@ public enum ActionCode {
 
     RESET,
 
+    /**
+     * Has the processor been placed into the error state? Note that the
+     * response may not have an appropriate error code set.
+     */
+    IS_ERROR,
+
     /**
      * Hook called if swallowing request input should be disabled.
      * Example: Cancel a large file upload.

==================================================
AbstractHttp11Processor.java
index 577486ecc3..832f8eb1ab 100644
--- a/java/org/apache/coyote/ajp/AbstractAjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AbstractAjpProcessor.java
@@ -421,6 +421,9 @@ public abstract class AbstractAjpProcessor<S> extends AbstractProcessor<S> {
                 error = true;
             }
 
+        } else if (actionCode == ActionCode.IS_ERROR) {
+            ((AtomicBoolean) param).set(error);
+
         } else if (actionCode == ActionCode.DISABLE_SWALLOW_INPUT) {
             // TODO: Do not swallow request input but
             // make sure we are closing the connection

==================================================
SpdyProcessor.java
index 76fc2c18e1..f0a82b295c 100644
--- a/java/org/apache/coyote/http11/AbstractHttp11Processor.java
+++ b/java/org/apache/coyote/http11/AbstractHttp11Processor.java
@@ -768,6 +768,9 @@ public abstract class AbstractHttp11Processor<S> extends AbstractProcessor<S> {
                 response.setErrorException(e);
             }
 
+        } else if (actionCode == ActionCode.IS_ERROR) {
+            ((AtomicBoolean) param).set(error);
+
         } else if (actionCode == ActionCode.DISABLE_SWALLOW_INPUT) {
             // Do not swallow request input but
             // make sure we are closing the connection

==================================================
TestAbstractHttp11Processor.java
index 63ba7300ac..89ed2433d0 100644
--- a/java/org/apache/coyote/spdy/SpdyProcessor.java
+++ b/java/org/apache/coyote/spdy/SpdyProcessor.java
@@ -237,6 +237,9 @@ public class SpdyProcessor<S> extends AbstractProcessor<S> implements
             // error = true;
             // }
 
+        } else if (actionCode == ActionCode.IS_ERROR) {
+            ((AtomicBoolean) param).set(error);
+
         } else if (actionCode == ActionCode.DISABLE_SWALLOW_INPUT) {
             // TODO: Do not swallow request input but
             // make sure we are closing the connection

==================================================
