c95560ad973ba2adaf3bb88e4f451d4bacc45841
==================================================
Ensure that the toString() method behaves consistently for ByteChunk and CharChunk and that null is returned when toString() is called both on newly created objects and immediately after a call to recycle().
==================================================
Mark Thomas
==================================================
Sun Jan 28 21:33:53 2018 +0000
==================================================
ByteChunk.java
Ensure that the toString() method behaves consistently for ByteChunk and CharChunk and that null is returned when toString() is called both on newly created objects and immediately after a call to recycle().
This should not impact typical Tomcat users.
It may impact users who use these classes directly in their own code.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1822482 13f79535-47bb-0310-9956-ffa450edef68



==================================================
CharChunk.java
index 43d7cb0044..78ef639dac 100644
--- a/java/org/apache/tomcat/util/buf/ByteChunk.java
+++ b/java/org/apache/tomcat/util/buf/ByteChunk.java
@@ -529,7 +529,7 @@ public final class ByteChunk extends AbstractChunk {
 
     @Override
     public String toString() {
-        if (null == buff) {
+        if (isNull()) {
             return null;
         } else if (end - start == 0) {
             return "";

==================================================
TestByteChunk.java
index 7cd73e95cf..d831b14d6a 100644
--- a/java/org/apache/tomcat/util/buf/CharChunk.java
+++ b/java/org/apache/tomcat/util/buf/CharChunk.java
@@ -396,7 +396,7 @@ public final class CharChunk extends AbstractChunk implements CharSequence {
 
     @Override
     public String toString() {
-        if (null == buff) {
+        if (isNull()) {
             return null;
         } else if (end - start == 0) {
             return "";

==================================================
TestCharChunk.java
index 27f2e45965..49167f7a94 100644
--- a/test/org/apache/tomcat/util/buf/TestByteChunk.java
+++ b/test/org/apache/tomcat/util/buf/TestByteChunk.java
@@ -201,4 +201,18 @@ public class TestByteChunk {
             // NO-OP
         }
     }
+
+
+    @Test
+    public void testToString() {
+        ByteChunk bc = new ByteChunk();
+        Assert.assertNull(bc.toString());
+        byte[] data = new byte[8];
+        bc.setBytes(data, 0, data.length);
+        Assert.assertNotNull(bc.toString());
+        bc.recycle();
+        // toString() should behave consistently for new ByteChunk and
+        // immediately after a call to recycle().
+        Assert.assertNull(bc.toString());
+    }
 }

==================================================
TestCustomSsl.java
index 36f67bb0ee..8a6f8e1144 100644
--- a/test/org/apache/tomcat/util/buf/TestCharChunk.java
+++ b/test/org/apache/tomcat/util/buf/TestCharChunk.java
@@ -93,4 +93,19 @@ public class TestCharChunk {
             // NO-OP
         }
     }
+
+
+    @Test
+    public void testToString() {
+        CharChunk cc = new CharChunk();
+        Assert.assertNull(cc.toString());
+        char[] data = new char[8];
+        cc.setChars(data, 0, data.length);
+        Assert.assertNotNull(cc.toString());
+        cc.recycle();
+        // toString() should behave consistently for new ByteChunk and
+        // immediately after a call to recycle().
+        Assert.assertNull(cc.toString());
+    }
+
 }

==================================================
