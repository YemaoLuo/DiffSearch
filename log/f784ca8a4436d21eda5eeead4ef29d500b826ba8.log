f784ca8a4436d21eda5eeead4ef29d500b826ba8
==================================================
Use a return value of -1 rather than exceptions to signal end of stream.
==================================================
Mark Thomas
==================================================
Tue Feb 24 12:20:49 2015 +0000
==================================================
NioBlockingSelector.java
Use a return value of -1 rather than exceptions to signal end of stream.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1661917 13f79535-47bb-0310-9956-ffa450edef68



==================================================
NioEndpoint.java
index 737ff23a28..418fd0a5fa 100644
--- a/java/org/apache/tomcat/util/net/NioBlockingSelector.java
+++ b/java/org/apache/tomcat/util/net/NioBlockingSelector.java
@@ -171,10 +171,9 @@ public class NioBlockingSelector {
             while(!timedout) {
                 if (keycount > 0) { //only read if we were registered for a read
                     read = socket.read(buf);
-                    if (read == -1)
-                        throw new EOFException();
-                    if (read > 0)
+                    if (read != 0) {
                         break;
+                    }
                 }
                 try {
                     if ( att.getReadLatch()==null || att.getReadLatch().getCount()==0) att.startReadLatch(1);

==================================================
NioSelectorPool.java
index 69a74990e4..98e445d296 100644
--- a/java/org/apache/tomcat/util/net/NioEndpoint.java
+++ b/java/org/apache/tomcat/util/net/NioEndpoint.java
@@ -17,7 +17,6 @@
 
 package org.apache.tomcat.util.net;
 
-import java.io.EOFException;
 import java.io.File;
 import java.io.FileInputStream;
 import java.io.IOException;
@@ -1484,8 +1483,6 @@ public class NioEndpoint extends AbstractEndpoint<NioChannel> {
                     }
                     nRead = pool.read(socketBufferHandler.getReadBuffer(),
                             channel, selector, att.getReadTimeout());
-                } catch (EOFException eof) {
-                    nRead = -1;
                 } finally {
                     if (selector != null) {
                         pool.put(selector);

==================================================
