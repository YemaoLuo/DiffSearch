0a07f5d49c1b6f96efb7047dfdd5255959330ac2
==================================================
Fix various Eclipse warnings
==================================================
Mark Emlyn
==================================================
Sun Feb 10 20:43:21 2013 +0000
==================================================
StandardContextSF.java
Fix various Eclipse warnings

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1444609 13f79535-47bb-0310-9956-ffa450edef68



==================================================
StandardServerSF.java
index 8724d0137d..c5cbeeeb04 100644
--- a/java/org/apache/catalina/storeconfig/StandardContextSF.java
+++ b/java/org/apache/catalina/storeconfig/StandardContextSF.java
@@ -129,12 +129,12 @@ public class StandardContextSF extends StoreFactoryBase {
                     try {
                         writer.flush();
                     } catch (Exception e) {
-                        ;
+                        // Ignore
                     }
                     try {
                         writer.close();
                     } catch (Throwable t) {
-                        ;
+                        // Ignore
                     }
                 }
             }

==================================================
StoreConfigLifecycleListener.java
index d1267ad9e0..9c1e6edfa1 100644
--- a/java/org/apache/catalina/storeconfig/StandardServerSF.java
+++ b/java/org/apache/catalina/storeconfig/StandardServerSF.java
@@ -68,25 +68,23 @@ public class StandardServerSF extends StoreFactoryBase {
         if (aObject instanceof StandardServer) {
             StandardServer server = (StandardServer) aObject;
             // Store nested <Listener> elements
-            if (server instanceof Lifecycle) {
-                LifecycleListener listeners[] = ((Lifecycle) server)
-                        .findLifecycleListeners();
-                storeElementArray(aWriter, indent, listeners);
-                /*LifecycleListener listener = null;
-                for (int i = 0; listener == null && i < listeners.length; i++)
-                    if (listeners[i] instanceof ServerLifecycleListener)
-                        listener = listeners[i];
-                if (listener != null) {
-                    StoreDescription elementDesc = getRegistry()
-                            .findDescription(
-                                    StandardServer.class.getName()
-                                            + ".[ServerLifecycleListener]");
-                    if (elementDesc != null) {
-                        elementDesc.getStoreFactory().store(aWriter, indent,
-                                listener);
-                    }
-                }*/
-            }
+            LifecycleListener listeners[] = ((Lifecycle) server)
+                    .findLifecycleListeners();
+            storeElementArray(aWriter, indent, listeners);
+            /*LifecycleListener listener = null;
+            for (int i = 0; listener == null && i < listeners.length; i++)
+                if (listeners[i] instanceof ServerLifecycleListener)
+                    listener = listeners[i];
+            if (listener != null) {
+                StoreDescription elementDesc = getRegistry()
+                        .findDescription(
+                                StandardServer.class.getName()
+                                        + ".[ServerLifecycleListener]");
+                if (elementDesc != null) {
+                    elementDesc.getStoreFactory().store(aWriter, indent,
+                            listener);
+                }
+            }*/
             // Store nested <GlobalNamingResources> element
             NamingResources globalNamingResources = server
                     .getGlobalNamingResources();

==================================================
StoreLoader.java
index 1a23612330..1358930697 100644
--- a/java/org/apache/catalina/storeconfig/StoreConfigLifecycleListener.java
+++ b/java/org/apache/catalina/storeconfig/StoreConfigLifecycleListener.java
@@ -16,8 +16,6 @@
  */
 package org.apache.catalina.storeconfig;
 
-import java.io.InputStream;
-
 import javax.management.DynamicMBean;
 import javax.management.MBeanServer;
 import javax.management.ObjectName;
@@ -89,7 +87,6 @@ public class StoreConfigLifecycleListener implements LifecycleListener {
             return;
         }
         MBeanServer mserver = MBeanUtils.createServer();
-        InputStream descriptor = null;
         try {
             ObjectName objectName = new ObjectName("Catalina:type=StoreConfig" );
             if (!mserver.isRegistered(objectName)) {
@@ -97,16 +94,6 @@ public class StoreConfigLifecycleListener implements LifecycleListener {
             }
         } catch (Exception ex) {
             log.error("createMBean register MBean", ex);
-
-        } finally {
-            if (descriptor != null) {
-                try {
-                    descriptor.close();
-                    descriptor = null;
-                } catch (Exception ex) {
-                    log.error("createMBean register MBean", ex);
-                }
-            }
         }
     }
 

==================================================
