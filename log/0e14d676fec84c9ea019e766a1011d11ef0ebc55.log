0e14d676fec84c9ea019e766a1011d11ef0ebc55
==================================================
Use constants for encoding types
==================================================
Mark Thomas
==================================================
Mon Mar 11 11:42:45 2019 +0000
==================================================
SSIEcho.java
Use constants for encoding types



==================================================
SSIMediator.java
index c4f948914b..59eb42648e 100644
--- a/java/org/apache/catalina/ssi/SSIEcho.java
+++ b/java/org/apache/catalina/ssi/SSIEcho.java
@@ -30,7 +30,7 @@ import org.apache.tomcat.util.res.StringManager;
  */
 public class SSIEcho implements SSICommand {
     private static final StringManager sm = StringManager.getManager(SSIEcho.class);
-    protected static final String DEFAULT_ENCODING = "entity";
+    protected static final String DEFAULT_ENCODING = SSIMediator.ENCODING_ENTITY;
     protected static final String MISSING_VARIABLE_VALUE = "(none)";
 
 
@@ -53,11 +53,11 @@ public class SSIEcho implements SSICommand {
                     encoding = paramValue;
                 } else {
                     ssiMediator.log(sm.getString("ssiEcho.invalidEncoding", paramValue));
-                    writer.write(ssiMediator.encode(errorMessage, "entity"));
+                    writer.write(ssiMediator.encode(errorMessage, SSIMediator.ENCODING_ENTITY));
                 }
             } else {
                 ssiMediator.log(sm.getString("ssiCommand.invalidAttribute", paramName));
-                writer.write(ssiMediator.encode(errorMessage, "entity"));
+                writer.write(ssiMediator.encode(errorMessage, SSIMediator.ENCODING_ENTITY));
             }
         }
         String variableValue = ssiMediator.getVariableValue(originalValue, encoding);
@@ -70,8 +70,8 @@ public class SSIEcho implements SSICommand {
 
 
     protected boolean isValidEncoding(String encoding) {
-        return encoding.equalsIgnoreCase("url")
-                || encoding.equalsIgnoreCase("entity")
-                || encoding.equalsIgnoreCase("none");
+        return encoding.equalsIgnoreCase(SSIMediator.ENCODING_URL)
+                || encoding.equalsIgnoreCase(SSIMediator.ENCODING_ENTITY)
+                || encoding.equalsIgnoreCase(SSIMediator.ENCODING_NONE);
     }
 }
\ No newline at end of file

==================================================
SSIPrintenv.java
index ff4a0cf43e..1a1c892511 100644
--- a/java/org/apache/catalina/ssi/SSIMediator.java
+++ b/java/org/apache/catalina/ssi/SSIMediator.java
@@ -44,9 +44,15 @@ import org.apache.tomcat.util.security.Escape;
  */
 public class SSIMediator {
     private static final StringManager sm = StringManager.getManager(SSIMediator.class);
+
+    protected static final String ENCODING_NONE = "none";
+    protected static final String ENCODING_ENTITY = "entity";
+    protected static final String ENCODING_URL = "url";
+
     protected static final String DEFAULT_CONFIG_ERR_MSG = "[an error occurred while processing this directive]";
     protected static final String DEFAULT_CONFIG_TIME_FMT = "%A, %d-%b-%Y %T %Z";
     protected static final String DEFAULT_CONFIG_SIZE_FMT = "abbrev";
+
     protected String configErrMsg = DEFAULT_CONFIG_ERR_MSG;
     protected String configTimeFmt = DEFAULT_CONFIG_TIME_FMT;
     protected String configSizeFmt = DEFAULT_CONFIG_SIZE_FMT;
@@ -154,7 +160,7 @@ public class SSIMediator {
 
 
     public String getVariableValue(String variableName) {
-        return getVariableValue(variableName, "none");
+        return getVariableValue(variableName, ENCODING_NONE);
     }
 
 
@@ -283,11 +289,11 @@ public class SSIMediator {
 
     protected String encode(String value, String encoding) {
         String retVal = null;
-        if (encoding.equalsIgnoreCase("url")) {
+        if (encoding.equalsIgnoreCase(ENCODING_URL)) {
             retVal = URLEncoder.DEFAULT.encode(value, StandardCharsets.UTF_8);
-        } else if (encoding.equalsIgnoreCase("none")) {
+        } else if (encoding.equalsIgnoreCase(ENCODING_NONE)) {
             retVal = value;
-        } else if (encoding.equalsIgnoreCase("entity")) {
+        } else if (encoding.equalsIgnoreCase(ENCODING_ENTITY)) {
             retVal = Escape.htmlElementContent(value);
         } else {
             //This shouldn't be possible

==================================================
