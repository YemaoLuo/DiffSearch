cc26dfc276f6425bef7e1d644a2f027ce5d192b9
==================================================
Add back the getters and setters and arrange the Listener so that it works in tomcat9.
==================================================
Jean-Frederic Clere
==================================================
Thu Nov 29 09:14:27 2018 +0000
==================================================
CollectedInfo.java
Add back the getters and setters and arrange the Listener so that it works in tomcat9.


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1847702 13f79535-47bb-0310-9956-ffa450edef68



==================================================
HeartbeatListener.java
index 6cb05c72a9..b92bd0b70b 100644
--- a/java/org/apache/catalina/ha/backend/CollectedInfo.java
+++ b/java/org/apache/catalina/ha/backend/CollectedInfo.java
@@ -59,25 +59,36 @@ public class CollectedInfo {
         Set<ObjectInstance> set = mBeanServer.queryMBeans(objectName, null);
         for (ObjectInstance oi : set) {
             objName = oi.getObjectName();
+            String subtype = objName.getKeyProperty("subType");
+            if (subtype != null && subtype.equals("SocketProperties")) {
+                objName = null;
+                continue;
+            }
             String name = objName.getKeyProperty("name");
+            name = name.replace("\"", "");
 
             /* Name are:
-             * http-8080
-             * jk-10.33.144.3-8009
-             * jk-jfcpc%2F10.33.144.3-8009
+             * ajp-nio-8009
+             * ajp-nio-127.0.0.1-8009
+             * ajp-nio-0:0:0:0:0:0:0:1-8009
+             * ajp-nio-10.36.116.209-8009
              */
             String [] elenames = name.split("-");
             String sport = elenames[elenames.length-1];
             iport = Integer.parseInt(sport);
-            String [] shosts = elenames[1].split("%2F");
-            shost = shosts[0];
+            if (elenames.length == 4)
+                shost = elenames[2];
 
             if (port==0 && host==null)
-                  break; /* Take the first one */
-            if (host==null && iport==port)
-                break; /* Only port done */
-            if (shost.compareTo(host) == 0)
-                break; /* Done port and host are the expected ones */
+                break; /* Done: take the first one */
+            if (iport==port) {
+                if (host == null)
+                    break; /* Done: return the first with the right port */
+                else if (shost != null && shost.compareTo(host) == 0)
+                    break; /* Done port and host are the expected ones */
+            }
+            objName = null;
+            shost = null;
         }
         if (objName == null)
             throw new Exception("Can't find connector for " + host + ":" + port);

==================================================
