1f31cf1e192ddd530cc1e5c0383f8fa1d35a3f40
==================================================
Remove fragment from RequestDispatcher target if (incorrectly) present
==================================================
Mark Thomas
==================================================
Fri May 31 20:30:08 2019 +0100
==================================================
Request.java
index bb018d9d94..ad14b81750 100644
--- a/java/org/apache/catalina/connector/LocalStrings.properties
+++ b/java/org/apache/catalina/connector/LocalStrings.properties
@@ -80,6 +80,7 @@ inputBuffer.streamClosed=Stream closed
 outputBuffer.writeNull=The String argument to write(String,int,int) may not be null
 
 request.asyncNotSupported=A filter or servlet of the current chain does not support asynchronous operations.
+request.fragmentInDispatchPath=The fragment in dispatch path [{0}] has been removed
 request.illegalWrap=The request wrapper must wrap the request obtained from getRequest()
 request.notAsync=It is illegal to call this method if the current request is not in asynchronous mode (i.e. isAsyncStarted() returns false)
 

==================================================
ApplicationHttpRequest.java
index ec38789dc7..8a4a459c5d 100644
--- a/java/org/apache/catalina/connector/Request.java
+++ b/java/org/apache/catalina/connector/Request.java
@@ -1371,10 +1371,18 @@ public class Request implements HttpServletRequest {
             return null;
         }
 
-        // If the path is already context-relative, just pass it through
         if (path == null) {
             return null;
-        } else if (path.startsWith("/")) {
+        }
+
+        int fragmentPos = path.indexOf('#');
+        if (fragmentPos > -1) {
+            log.warn(sm.getString("request.fragmentInDispatchPath", path));
+            path = path.substring(0, fragmentPos);
+        }
+
+        // If the path is already context-relative, just pass it through
+        if (path.startsWith("/")) {
             return context.getServletContext().getRequestDispatcher(path);
         }
 

==================================================
