2db4d9ea76602166914dd29ef6a2f870cb975001
==================================================
First pass at a state machine for tracking stream state.
==================================================
Mark Thomas
==================================================
Tue Jun 2 21:38:07 2015 +0000
==================================================
Http2UpgradeHandler.java
First pass at a state machine for tracking stream state.
Lots of TODOs and not yet fully integrated into the processing.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1683191 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Stream.java
index 43b9aea914..2609022bcf 100644
--- a/java/org/apache/coyote/http2/Http2UpgradeHandler.java
+++ b/java/org/apache/coyote/http2/Http2UpgradeHandler.java
@@ -737,9 +737,10 @@ public class Http2UpgradeHandler extends AbstractStream implements InternalHttpU
 
     @Override
     public void headersEnd(int streamId) {
+        Stream stream = getStream(streamId);
+        stream.headersEnd();
         // Process this stream on a container thread
-        StreamProcessor streamProcessor = new StreamProcessor(
-                getStream(streamId), adapter, socketWrapper);
+        StreamProcessor streamProcessor = new StreamProcessor(stream, adapter, socketWrapper);
         streamProcessor.setSslSupport(sslSupport);
         socketWrapper.getEndpoint().getExecutor().execute(streamProcessor);
     }

==================================================
StreamStateMachine.java
index 6d748b19c8..3ebeca9689 100644
--- a/java/org/apache/coyote/http2/Stream.java
+++ b/java/org/apache/coyote/http2/Stream.java
@@ -42,6 +42,7 @@ public class Stream extends AbstractStream implements HeaderEmitter {
     private final Response coyoteResponse = new Response();
     private final StreamInputBuffer inputBuffer = new StreamInputBuffer();
     private final StreamOutputBuffer outputBuffer = new StreamOutputBuffer();
+    private final StreamStateMachine state = new StreamStateMachine();
 
 
     public Stream(Integer identifier, Http2UpgradeHandler handler) {
@@ -58,6 +59,11 @@ public class Stream extends AbstractStream implements HeaderEmitter {
         this.coyoteRequest.setInputBuffer(inputBuffer);
         this.coyoteResponse.setOutputBuffer(outputBuffer);
         this.coyoteRequest.setResponse(coyoteResponse);
+        if (coyoteRequest.isFinished()) {
+            // Update the state machine
+            state.receiveHeaders();
+            state.recieveEndOfStream();
+        }
     }
 
 
@@ -213,6 +219,11 @@ public class Stream extends AbstractStream implements HeaderEmitter {
     }
 
 
+    void headersEnd() {
+        state.receiveHeaders();
+    }
+
+
     void setEndOfStream() {
         // TODO This is temporary until the state machine for a stream is
         // implemented

==================================================
