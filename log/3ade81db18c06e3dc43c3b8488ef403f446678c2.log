3ade81db18c06e3dc43c3b8488ef403f446678c2
==================================================
Fix some of the remaining issues with the AJP/APR connector post async refactoring. Still does not pass the TCK.
==================================================
Mark Emlyn
==================================================
Thu Sep 30 13:44:11 2010 +0000
==================================================
AbstractAjpProcessor.java
Fix some of the remaining issues with the AJP/APR connector post async refactoring. Still does not pass the TCK.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1003065 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AjpAprProcessor.java
index 12113ecc22..c5dd0b3ce2 100644
--- a/java/org/apache/coyote/ajp/AbstractAjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AbstractAjpProcessor.java
@@ -232,6 +232,13 @@ public abstract class AbstractAjpProcessor implements ActionHook, Processor {
                error = true;
            }
 
+           try {
+               flush();
+           } catch (IOException e) {
+               // Set error flag
+               error = true;
+           }
+
        } else if (actionCode == ActionCode.CLIENT_FLUSH) {
 
            if (!response.isCommitted()) {

==================================================
AjpAprProtocol.java
index 5c15127687..b50d3e5f41 100644
--- a/java/org/apache/coyote/ajp/AjpAprProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpAprProcessor.java
@@ -218,7 +218,6 @@ public class AjpAprProcessor extends AbstractAjpProcessor {
         // Error flag
         error = false;
 
-        boolean openSocket = true;
         boolean keptAlive = false;
 
         while (!error && !endpoint.isPaused()) {
@@ -320,15 +319,6 @@ public class AjpAprProcessor extends AbstractAjpProcessor {
 
         }
 
-        // Add the socket to the poller
-        if (!error && !endpoint.isPaused()) {
-            if (!isAsync()) {
-                ((AprEndpoint)endpoint).getPoller().add(socketRef);
-            }
-        } else {
-            openSocket = false;
-        }
-
         rp.setStage(org.apache.coyote.Constants.STAGE_ENDED);
         
         if (error || endpoint.isPaused()) {
@@ -338,7 +328,7 @@ public class AjpAprProcessor extends AbstractAjpProcessor {
             return SocketState.LONG;
         } else {
             recycle();
-            return (openSocket) ? SocketState.OPEN : SocketState.CLOSED;
+            return SocketState.OPEN;
         }
     }
 

==================================================
