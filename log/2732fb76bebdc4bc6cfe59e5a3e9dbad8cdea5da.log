2732fb76bebdc4bc6cfe59e5a3e9dbad8cdea5da
==================================================
Code clean up prompted by Eclipse:
==================================================
Mark Emlyn
==================================================
Tue Apr 14 17:46:23 2009 +0000
==================================================
ApplicationDispatcher.java
Code clean up prompted by Eclipse:
 - mark unused parameters as unused
 - remove code that doesn't do anything

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@764898 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ApplicationHttpRequest.java
index 6ed03f9bca..1a50b754a7 100644
--- a/java/org/apache/catalina/core/ApplicationDispatcher.java
+++ b/java/org/apache/catalina/core/ApplicationDispatcher.java
@@ -620,7 +620,6 @@ final class ApplicationDispatcher
             wrapper.getLogger().error(sm.getString("applicationDispatcher.allocateException",
                              wrapper.getName()), StandardWrapper.getRootCause(e));
             servletException = e;
-            servlet = null;
         } catch (Throwable e) {
             wrapper.getLogger().error(sm.getString("applicationDispatcher.allocateException",
                              wrapper.getName()), e);

==================================================
DummyRequest.java
index 8857cb15b2..cc90c09f8d 100644
--- a/java/org/apache/catalina/core/ApplicationHttpRequest.java
+++ b/java/org/apache/catalina/core/ApplicationHttpRequest.java
@@ -570,7 +570,7 @@ class ApplicationHttpRequest extends HttpServletRequestWrapper {
             try {
                 session = manager.findSession(requestedSessionId);
             } catch (IOException e) {
-                session = null;
+                // Ignore
             }
             if ((session != null) && session.isValid()) {
                 return (true);
@@ -819,9 +819,9 @@ class ApplicationHttpRequest extends HttpServletRequestWrapper {
 
         ArrayList<Object> results = new ArrayList<Object>();
 
-        if (values1 == null)
-            ;
-        else if (values1 instanceof String)
+        if (values1 == null) {
+            // Skip - nothing to merge
+        } else if (values1 instanceof String)
             results.add(values1);
         else if (values1 instanceof String[]) {
             String values[] = (String[]) values1;
@@ -830,9 +830,9 @@ class ApplicationHttpRequest extends HttpServletRequestWrapper {
         } else
             results.add(values1.toString());
 
-        if (values2 == null)
-            ;
-        else if (values2 instanceof String)
+        if (values2 == null) {
+            // Skip - nothing to merge
+        } else if (values2 instanceof String)
             results.add(values2);
         else if (values2 instanceof String[]) {
             String values[] = (String[]) values2;

==================================================
DummyResponse.java
index f108203dec..64ba14bc1a 100644
--- a/java/org/apache/catalina/core/DummyRequest.java
+++ b/java/org/apache/catalina/core/DummyRequest.java
@@ -163,41 +163,45 @@ public class DummyRequest
     }
 
     public String getAuthorization() { return null; }
-    public void setAuthorization(String authorization) {}
+    public void setAuthorization(
+            @SuppressWarnings("unused") String authorization) {}
     public Connector getConnector() { return null; }
-    public void setConnector(Connector connector) {}
+    public void setConnector(@SuppressWarnings("unused") Connector connector) {}
     public Context getContext() { return null; }
-    public void setContext(Context context) {}
+    public void setContext(@SuppressWarnings("unused") Context context) {}
     public Host getHost() { return null; }
-    public void setHost(Host host) {}
+    public void setHost(@SuppressWarnings("unused") Host host) {}
     public String getInfo() { return null; }
     public Response getResponse() { return null; }
-    public void setResponse(Response response) {}
+    public void setResponse(@SuppressWarnings("unused") Response response) {}
     public Socket getSocket() { return null; }
-    public void setSocket(Socket socket) {}
+    public void setSocket(@SuppressWarnings("unused") Socket socket) {}
     public InputStream getStream() { return null; }
-    public void setStream(InputStream input) {}
-    public void addLocale(Locale locale) {}
+    public void setStream(@SuppressWarnings("unused") InputStream input) {}
+    public void addLocale(@SuppressWarnings("unused") Locale locale) {}
     public ServletInputStream createInputStream() throws IOException {
         return null;
     }
     public void finishRequest() throws IOException {}
-    public Object getNote(String name) { return null; }
+    public Object getNote(@SuppressWarnings("unused") String name) {
+        return null;
+    }
     public Iterator<String> getNoteNames() { return null; }
-    public void removeNote(String name) {}
-    public void setContentType(String type) {}
-    public void setNote(String name, Object value) {}
-    public void setProtocol(String protocol) {}
-    public void setRemoteAddr(String remoteAddr) {}
-    public void setRemoteHost(String remoteHost) {}
-    public void setScheme(String scheme) {}
-    public void setServerName(String name) {}
-    public void setServerPort(int port) {}
+    public void removeNote(@SuppressWarnings("unused") String name) {}
+    public void setContentType(@SuppressWarnings("unused") String type) {}
+    public void setNote(@SuppressWarnings("unused") String name,
+            @SuppressWarnings("unused") Object value) {}
+    public void setProtocol(@SuppressWarnings("unused") String protocol) {}
+    public void setRemoteAddr(@SuppressWarnings("unused") String remoteAddr) {}
+    public void setRemoteHost(@SuppressWarnings("unused") String remoteHost) {}
+    public void setScheme(@SuppressWarnings("unused") String scheme) {}
+    public void setServerName(@SuppressWarnings("unused") String name) {}
+    public void setServerPort(@SuppressWarnings("unused") int port) {}
     public Object getAttribute(String name) { return null; }
     public Enumeration<String> getAttributeNames() { return null; }
     public String getCharacterEncoding() { return null; }
     public int getContentLength() { return -1; }
-    public void setContentLength(int length) {}
+    public void setContentLength(@SuppressWarnings("unused") int length) {}
     public String getContentType() { return null; }
     public ServletInputStream getInputStream() throws IOException {
         return null;
@@ -218,23 +222,28 @@ public class DummyRequest
     public void setAttribute(String name, Object value) {}
     public void setCharacterEncoding(String enc)
         throws UnsupportedEncodingException {}
-    public void addCookie(Cookie cookie) {}
-    public void addHeader(String name, String value) {}
-    public void addParameter(String name, String values[]) {}
+    public void addCookie(@SuppressWarnings("unused") Cookie cookie) {}
+    public void addHeader(@SuppressWarnings("unused") String name,
+            @SuppressWarnings("unused") String value) {}
+    public void addParameter(@SuppressWarnings("unused") String name,
+            @SuppressWarnings("unused") String values[]) {}
     public void clearCookies() {}
     public void clearHeaders() {}
     public void clearLocales() {}
     public void clearParameters() {}
     public void recycle() {}
-    public void setAuthType(String authType) {}
-    public void setContextPath(String path) {}
-    public void setMethod(String method) {}
-    public void setRequestedSessionCookie(boolean flag) {}
-    public void setRequestedSessionId(String id) {}
-    public void setRequestedSessionURL(boolean flag) {}
-    public void setRequestURI(String uri) {}
-    public void setSecure(boolean secure) {}
-    public void setUserPrincipal(Principal principal) {}
+    public void setAuthType(@SuppressWarnings("unused") String authType) {}
+    public void setContextPath(@SuppressWarnings("unused") String path) {}
+    public void setMethod(@SuppressWarnings("unused") String method) {}
+    public void setRequestedSessionCookie(
+            @SuppressWarnings("unused") boolean flag) {}
+    public void setRequestedSessionId(@SuppressWarnings("unused") String id) {}
+    public void setRequestedSessionURL(
+            @SuppressWarnings("unused") boolean flag) {}
+    public void setRequestURI(@SuppressWarnings("unused") String uri) {}
+    public void setSecure(@SuppressWarnings("unused") boolean secure) {}
+    public void setUserPrincipal(
+            @SuppressWarnings("unused") Principal principal) {}
     public String getParameter(String name) { return null; }
     public Map<String,String[]> getParameterMap() { return null; }
     public Enumeration<String> getParameterNames() { return dummyEnum; }
@@ -254,7 +263,7 @@ public class DummyRequest
     public String getRemoteUser() { return null; }
     public String getRequestedSessionId() { return null; }
     public String getRequestURI() { return null; }
-    public void setDecodedRequestURI(String uri) {}
+    public void setDecodedRequestURI(@SuppressWarnings("unused") String uri) {}
     public StringBuffer getRequestURL() { return null; }
     public HttpSession getSession() { return null; }
     public HttpSession getSession(boolean create) { return null; }

==================================================
NamingContextListener.java
index c167687281..ef9105e0bb 100644
--- a/java/org/apache/catalina/core/DummyResponse.java
+++ b/java/org/apache/catalina/core/DummyResponse.java
@@ -48,22 +48,23 @@ public class DummyResponse
     }
 
 
-    public void setAppCommitted(boolean appCommitted) {}
+    public void setAppCommitted(
+            @SuppressWarnings("unused") boolean appCommitted) {}
     public boolean isAppCommitted() { return false; }
     public Connector getConnector() { return null; }
-    public void setConnector(Connector connector) {}
+    public void setConnector(@SuppressWarnings("unused") Connector connector) {}
     public int getContentCount() { return -1; }
     public Context getContext() { return null; }
-    public void setContext(Context context) {}
+    public void setContext(@SuppressWarnings("unused") Context context) {}
     public boolean getIncluded() { return false; }
-    public void setIncluded(boolean included) {}
+    public void setIncluded(@SuppressWarnings("unused") boolean included) {}
     public String getInfo() { return null; }
     public Request getRequest() { return null; }
-    public void setRequest(Request request) {}
+    public void setRequest(@SuppressWarnings("unused") Request request) {}
     public ServletResponse getResponse() { return null; }
     public OutputStream getStream() { return null; }
-    public void setStream(OutputStream stream) {}
-    public void setSuspended(boolean suspended) {}
+    public void setStream(@SuppressWarnings("unused") OutputStream stream) {}
+    public void setSuspended(@SuppressWarnings("unused") boolean suspended) {}
     public boolean isSuspended() { return false; }
     public void setError() {}
     public boolean isError() { return false; }
@@ -75,9 +76,12 @@ public class DummyResponse
     public String getContentType() { return null; }
     public PrintWriter getReporter() { return null; }
     public void recycle() {}
-    public void write(int b) throws IOException {}
-    public void write(byte b[]) throws IOException {}
-    public void write(byte b[], int off, int len) throws IOException {}
+    public void write(@SuppressWarnings("unused") int b) throws IOException {}
+    public void write(@SuppressWarnings("unused") byte b[]) throws IOException {
+    }
+    public void write(@SuppressWarnings("unused") byte b[],
+            @SuppressWarnings("unused") int off,
+            @SuppressWarnings("unused") int len) throws IOException {}
     public void flushBuffer() throws IOException {}
     public int getBufferSize() { return -1; }
     public String getCharacterEncoding() { return null; }
@@ -96,12 +100,17 @@ public class DummyResponse
     public void setLocale(Locale locale) {}
 
     public Cookie[] getCookies() { return null; }
-    public String getHeader(String name) { return null; }
+    public String getHeader(@SuppressWarnings("unused") String name) {
+        return null;
+    }
     public String[] getHeaderNames() { return null; }
-    public String[] getHeaderValues(String name) { return null; }
+    public String[] getHeaderValues(@SuppressWarnings("unused") String name) {
+        return null;
+    }
     public String getMessage() { return null; }
     public int getStatus() { return -1; }
-    public void reset(int status, String message) {}
+    public void reset(@SuppressWarnings("unused") int status,
+            @SuppressWarnings("unused") String message) {}
     public void addCookie(Cookie cookie) {}
     public void addDateHeader(String name, long value) {}
     public void addHeader(String name, String value) {}

==================================================
StandardWrapper.java
index 271df8c7e8..d6c3ad4f92 100644
--- a/java/org/apache/catalina/core/NamingContextListener.java
+++ b/java/org/apache/catalina/core/NamingContextListener.java
@@ -868,7 +868,7 @@ public class NamingContextListener
             try {
                 wsdlURL = new URL(service.getWsdlfile());
             } catch (MalformedURLException e) {
-                wsdlURL = null;
+                // Ignore and carry on
             }
             if (wsdlURL == null) {
                 try {
@@ -876,7 +876,7 @@ public class NamingContextListener
                                                     getServletContext().
                                                     getResource(service.getWsdlfile());
                 } catch (MalformedURLException e) {
-                    wsdlURL = null;
+                    // Ignore and carry on
                 }
             }
             if (wsdlURL == null) {
@@ -902,7 +902,7 @@ public class NamingContextListener
             try {
                 jaxrpcURL = new URL(service.getJaxrpcmappingfile());
             } catch (MalformedURLException e) {
-                jaxrpcURL = null;
+                // Ignore and carry on
             }
             if (jaxrpcURL == null) {
                 try {
@@ -910,7 +910,7 @@ public class NamingContextListener
                                                     getServletContext().
                                                     getResource(service.getJaxrpcmappingfile());
                 } catch (MalformedURLException e) {
-                    jaxrpcURL = null;
+                    // Ignore and carry on
                 }
             }
             if (jaxrpcURL == null) {

==================================================
StandardWrapperValve.java
index df7bd41ead..3b80b39d71 100644
--- a/java/org/apache/catalina/core/StandardWrapper.java
+++ b/java/org/apache/catalina/core/StandardWrapper.java
@@ -1482,7 +1482,8 @@ public class StandardWrapper
      *
      * @param mapperClass Java class name of the default Mapper
      */
-    protected void addDefaultMapper(String mapperClass) {
+    protected void addDefaultMapper(
+            @SuppressWarnings("unused") String mapperClass) {
 
         // No need for a default Mapper on a Wrapper
 

==================================================
