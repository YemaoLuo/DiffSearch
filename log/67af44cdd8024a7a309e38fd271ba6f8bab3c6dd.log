67af44cdd8024a7a309e38fd271ba6f8bab3c6dd
==================================================
Refactor to reduce code duplication
==================================================
Mark Thomas
==================================================
Thu Nov 24 21:11:22 2016 +0000
==================================================
Request.java
Refactor to reduce code duplication

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1771230 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ApplicationHttpRequest.java
index 9d988d60a3..75c9b7f082 100644
--- a/java/org/apache/catalina/connector/Request.java
+++ b/java/org/apache/catalina/connector/Request.java
@@ -83,6 +83,7 @@ import org.apache.catalina.core.ApplicationSessionCookieConfig;
 import org.apache.catalina.core.AsyncContextImpl;
 import org.apache.catalina.mapper.MappingData;
 import org.apache.catalina.util.ParameterMap;
+import org.apache.catalina.util.RequestUtil;
 import org.apache.catalina.util.URLEncoder;
 import org.apache.coyote.ActionCode;
 import org.apache.coyote.UpgradeToken;
@@ -2288,44 +2289,9 @@ public class Request implements HttpServletRequest {
     }
 
 
-    /**
-     * Reconstructs the URL the client used to make the request.
-     * The returned URL contains a protocol, server name, port
-     * number, and server path, but it does not include query
-     * string parameters.
-     * <p>
-     * Because this method returns a <code>StringBuffer</code>,
-     * not a <code>String</code>, you can modify the URL easily,
-     * for example, to append query parameters.
-     * <p>
-     * This method is useful for creating redirect messages and
-     * for reporting errors.
-     *
-     * @return A <code>StringBuffer</code> object containing the
-     *  reconstructed URL
-     */
     @Override
     public StringBuffer getRequestURL() {
-
-        StringBuffer url = new StringBuffer();
-        String scheme = getScheme();
-        int port = getServerPort();
-        if (port < 0)
-         {
-            port = 80; // Work around java.net.URL bug
-        }
-
-        url.append(scheme);
-        url.append("://");
-        url.append(getServerName());
-        if ((scheme.equals("http") && (port != 80))
-            || (scheme.equals("https") && (port != 443))) {
-            url.append(':');
-            url.append(port);
-        }
-        url.append(getRequestURI());
-
-        return url;
+        return RequestUtil.getRequestURL(this);
     }
 
 

==================================================
RemoteIpFilter.java
index a26b997809..4bf4cef97e 100644
--- a/java/org/apache/catalina/core/ApplicationHttpRequest.java
+++ b/java/org/apache/catalina/core/ApplicationHttpRequest.java
@@ -41,6 +41,7 @@ import org.apache.catalina.Globals;
 import org.apache.catalina.Manager;
 import org.apache.catalina.Session;
 import org.apache.catalina.util.ParameterMap;
+import org.apache.catalina.util.RequestUtil;
 import org.apache.tomcat.util.buf.B2CConverter;
 import org.apache.tomcat.util.buf.MessageBytes;
 import org.apache.tomcat.util.http.Parameters;
@@ -488,25 +489,7 @@ class ApplicationHttpRequest extends HttpServletRequestWrapper {
      */
     @Override
     public StringBuffer getRequestURL() {
-
-        StringBuffer url = new StringBuffer();
-        String scheme = getScheme();
-        int port = getServerPort();
-        if (port < 0)
-            port = 80; // Work around java.net.URL bug
-
-        url.append(scheme);
-        url.append("://");
-        url.append(getServerName());
-        if ((scheme.equals("http") && (port != 80))
-            || (scheme.equals("https") && (port != 443))) {
-            url.append(':');
-            url.append(port);
-        }
-        url.append(getRequestURI());
-
-        return (url);
-
+        return RequestUtil.getRequestURL(this);
     }
 
 

==================================================
RequestUtil.java
index a77c860c7f..1ad0381ec2 100644
--- a/java/org/apache/catalina/filters/RemoteIpFilter.java
+++ b/java/org/apache/catalina/filters/RemoteIpFilter.java
@@ -44,6 +44,7 @@ import javax.servlet.http.PushBuilder;
 import org.apache.catalina.AccessLog;
 import org.apache.catalina.Globals;
 import org.apache.catalina.core.ApplicationPushBuilder;
+import org.apache.catalina.util.RequestUtil;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 
@@ -621,23 +622,7 @@ public class RemoteIpFilter extends GenericFilter {
 
         @Override
         public StringBuffer getRequestURL() {
-            StringBuffer url = new StringBuffer();
-            String scheme = getScheme();
-            int port = getServerPort();
-            if (port < 0) {
-                port = 80; // Work around java.net.URL bug
-            }
-            url.append(scheme);
-            url.append("://");
-            url.append(getServerName());
-            if ((scheme.equals("http") && (port != 80))
-                || (scheme.equals("https") && (port != 443))) {
-                url.append(':');
-                url.append(port);
-            }
-            url.append(getRequestURI());
-
-            return url;
+            return RequestUtil.getRequestURL(this);
         }
 
         @Override

==================================================
