cb79f0ee62717b6140a3fa541d3a7b7634c78806
==================================================
Rename descriptor representations to avoid name clashes with
==================================================
Mark Emlyn
==================================================
Thu Nov 14 16:24:37 2013 +0000
==================================================
TagFileXml.java
Rename descriptor representations to avoid name clashes with
implementations.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1541952 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TagXml.java
similarity index 98%
rename from java/org/apache/tomcat/util/descriptor/tld/TagFile.java
rename to java/org/apache/tomcat/util/descriptor/tld/TagFileXml.java
index 9fafdc5107..9cbf9846a3 100644
--- a/java/org/apache/tomcat/util/descriptor/tld/TagFile.java
+++ b/java/org/apache/tomcat/util/descriptor/tld/TagFileXml.java
@@ -21,7 +21,7 @@ package org.apache.tomcat.util.descriptor.tld;
  * This does not contain the tag-specific attributes that requiring parsing
  * the actual tag file to derive.
  */
-public class TagFile {
+public class TagFileXml {
     private String name;
     private String path;
     private String displayName;

==================================================
TaglibXml.java
similarity index 99%
rename from java/org/apache/tomcat/util/descriptor/tld/Tag.java
rename to java/org/apache/tomcat/util/descriptor/tld/TagXml.java
index 255b0f4217..a7b245dade 100644
--- a/java/org/apache/tomcat/util/descriptor/tld/Tag.java
+++ b/java/org/apache/tomcat/util/descriptor/tld/TagXml.java
@@ -29,7 +29,7 @@ import javax.servlet.jsp.tagext.TagVariableInfo;
  * TagInfo in that is does not provide a link back to the tag library that
  * defined it.
  */
-public class Tag {
+public class TagXml {
     private String name;
     private String tagClass;
     private String teiClass;

==================================================
TldRuleSet.java
index 80b8443e13..d7c2800d63 100644
--- a/java/org/apache/tomcat/util/descriptor/tld/TaglibXml.java
+++ b/java/org/apache/tomcat/util/descriptor/tld/TaglibXml.java
@@ -36,9 +36,9 @@ public class TaglibXml {
     private String shortName;
     private String uri;
     private String info;
-    private Validator validator;
-    private List<Tag> tags;
-    private List<TagFile> tagFiles;
+    private ValidatorXml validator;
+    private List<TagXml> tags;
+    private List<TagFileXml> tagFiles;
     private List<String> listeners;
     private List<FunctionInfo> functions;
 
@@ -82,33 +82,33 @@ public class TaglibXml {
         this.info = info;
     }
 
-    public Validator getValidator() {
+    public ValidatorXml getValidator() {
         return validator;
     }
 
-    public void setValidator(Validator validator) {
+    public void setValidator(ValidatorXml validator) {
         this.validator = validator;
     }
 
-    public void addTag(Tag tag) {
+    public void addTag(TagXml tag) {
         if (tags == null) {
             tags = new ArrayList<>();
         }
         tags.add(tag);
     }
 
-    public List<Tag> getTags() {
+    public List<TagXml> getTags() {
         return tags;
     }
 
-    public void addTagFile(TagFile tag) {
+    public void addTagFile(TagFileXml tag) {
         if (tagFiles == null) {
             tagFiles = new ArrayList<>();
         }
         tagFiles.add(tag);
     }
 
-    public List<TagFile> getTagFiles() {
+    public List<TagFileXml> getTagFiles() {
         return tagFiles;
     }
 

==================================================
ValidatorXml.java
index 4393cdb727..d5c1d2b1bc 100644
--- a/java/org/apache/tomcat/util/descriptor/tld/TldRuleSet.java
+++ b/java/org/apache/tomcat/util/descriptor/tld/TldRuleSet.java
@@ -62,16 +62,16 @@ public class TldRuleSet extends RuleSetBase {
         digester.addCallMethod(PREFIX + "/listener/listener-class", "addListener", 0);
 
         // validator
-        digester.addObjectCreate(VALIDATOR_PREFIX, Validator.class.getName());
+        digester.addObjectCreate(VALIDATOR_PREFIX, ValidatorXml.class.getName());
         digester.addCallMethod(VALIDATOR_PREFIX + "/validator-class", "setValidatorClass", 0);
         digester.addCallMethod(VALIDATOR_PREFIX + "/init-param", "addInitParam", 2);
         digester.addCallParam(VALIDATOR_PREFIX + "/init-param/param-name", 0);
         digester.addCallParam(VALIDATOR_PREFIX + "/init-param/param-value", 1);
-        digester.addSetNext(VALIDATOR_PREFIX, "setValidator", Validator.class.getName());
+        digester.addSetNext(VALIDATOR_PREFIX, "setValidator", ValidatorXml.class.getName());
 
 
         // tag
-        digester.addObjectCreate(TAG_PREFIX, Tag.class.getName());
+        digester.addObjectCreate(TAG_PREFIX, TagXml.class.getName());
         addDescriptionGroup(digester, TAG_PREFIX);
         digester.addCallMethod(TAG_PREFIX + "/name", "setName", 0);
         digester.addCallMethod(TAG_PREFIX + "/tagclass", "setTagClass", 0);
@@ -108,15 +108,15 @@ public class TldRuleSet extends RuleSetBase {
                 new GenericBooleanRule(Attribute.class, "setFragment"));
 
         digester.addRule(TAG_PREFIX + "/dynamic-attributes",
-                new GenericBooleanRule(Tag.class, "setDynamicAttributes"));
-        digester.addSetNext(TAG_PREFIX, "addTag", Tag.class.getName());
+                new GenericBooleanRule(TagXml.class, "setDynamicAttributes"));
+        digester.addSetNext(TAG_PREFIX, "addTag", TagXml.class.getName());
 
         // tag-file
-        digester.addObjectCreate(TAGFILE_PREFIX, TagFile.class.getName());
+        digester.addObjectCreate(TAGFILE_PREFIX, TagFileXml.class.getName());
         addDescriptionGroup(digester, TAGFILE_PREFIX);
         digester.addCallMethod(TAGFILE_PREFIX + "/name", "setName", 0);
         digester.addCallMethod(TAGFILE_PREFIX + "/path", "setPath", 0);
-        digester.addSetNext(TAGFILE_PREFIX, "addTagFile", TagFile.class.getName());
+        digester.addSetNext(TAGFILE_PREFIX, "addTagFile", TagFileXml.class.getName());
 
         // function
         digester.addCallMethod(FUNCTION_PREFIX, "addFunction", 3);
@@ -146,7 +146,7 @@ public class TldRuleSet extends RuleSetBase {
         @Override
         public void end(String namespace, String name) throws Exception {
             Attribute attribute = (Attribute) digester.pop();
-            Tag tag = (Tag) digester.peek();
+            TagXml tag = (TagXml) digester.peek();
             tag.getAttributes().add(attribute.toTagAttributeInfo());
         }
     }
@@ -292,7 +292,7 @@ public class TldRuleSet extends RuleSetBase {
         @Override
         public void end(String namespace, String name) throws Exception {
             Variable variable = (Variable) digester.pop();
-            Tag tag = (Tag) digester.peek();
+            TagXml tag = (TagXml) digester.peek();
             tag.getVariables().add(variable.toTagVariableInfo());
         }
     }

==================================================
TestTldParser.java
similarity index 98%
rename from java/org/apache/tomcat/util/descriptor/tld/Validator.java
rename to java/org/apache/tomcat/util/descriptor/tld/ValidatorXml.java
index 2174b5d3f6..deee134465 100644
--- a/java/org/apache/tomcat/util/descriptor/tld/Validator.java
+++ b/java/org/apache/tomcat/util/descriptor/tld/ValidatorXml.java
@@ -22,7 +22,7 @@ import java.util.Map;
 /**
  * Model of a Tag Library Validator from the XML descriptor.
  */
-public class Validator {
+public class ValidatorXml {
     private String validatorClass;
     private Map<String, String> initParams;
 

==================================================
