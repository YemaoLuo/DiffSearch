26624528a508269ee625cd03baaa045c07b62bde
==================================================
As part of 57799, also remove the sendfile flag. It is used to ensure expand capability on the buffer, but expand can only happen in rare cases during handshake so the check is not useful.
==================================================
Remy Maucherat
==================================================
Tue Sep 22 08:29:17 2015 +0000
==================================================
NioChannel.java
As part of 57799, also remove the sendfile flag. It is used to ensure expand capability on the buffer, but expand can only happen in rare cases during handshake so the check is not useful.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1704477 13f79535-47bb-0310-9956-ffa450edef68



==================================================
NioEndpoint.java
index 8b5a3e9b1a..9813380a14 100644
--- a/java/org/apache/tomcat/util/net/NioChannel.java
+++ b/java/org/apache/tomcat/util/net/NioChannel.java
@@ -48,8 +48,6 @@ public class NioChannel implements ByteChannel {
 
     protected Poller poller;
 
-    protected volatile boolean sendFile = false;
-
     public NioChannel(SocketChannel channel, SocketBufferHandler bufHandler) {
         this.sc = channel;
         this.bufHandler = bufHandler;
@@ -62,7 +60,6 @@ public class NioChannel implements ByteChannel {
      */
     public void reset() throws IOException {
         bufHandler.reset();
-        this.sendFile = false;
     }
 
 
@@ -217,15 +214,6 @@ public class NioChannel implements ByteChannel {
         return false;
     }
 
-    public boolean isSendFile() {
-        return sendFile;
-    }
-
-    public void setSendFile(boolean s) {
-        this.sendFile = s;
-    }
-
-
     /**
      * This method should be used to check the interrupt status before
      * attempting a write.

==================================================
SecureNioChannel.java
index 9956087641..a74567d338 100644
--- a/java/org/apache/tomcat/util/net/NioEndpoint.java
+++ b/java/org/apache/tomcat/util/net/NioEndpoint.java
@@ -958,9 +958,6 @@ public class NioEndpoint extends AbstractJsseEndpoint<NioChannel> {
 
                 // Configure output channel
                 sc = socketWrapper.getSocket();
-                if (calledByProcessor) {
-                    sc.setSendFile(true);
-                }
                 // TLS/SSL channel is slightly different
                 WritableByteChannel wc = ((sc instanceof SecureNioChannel)?sc:sc.getIOChannel());
 
@@ -989,7 +986,6 @@ public class NioEndpoint extends AbstractJsseEndpoint<NioChannel> {
                         log.debug("Send file complete for: "+sd.fileName);
                     }
                     socketWrapper.setSendfileData(null);
-                    sc.setSendFile(false);
                     try {
                         sd.fchannel.close();
                     } catch (Exception ignore) {

==================================================
