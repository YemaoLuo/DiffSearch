0b4951cf9d9cc43504554e6abf65c6de0f79df2b
==================================================
Remove jsp:plugin support - align with JSP 4.0
==================================================
Mark Thomas
==================================================
Wed Oct 19 12:19:37 2022 +0100
==================================================
Collector.java
Remove jsp:plugin support - align with JSP 4.0



==================================================
ELFunctionMapper.java
index 9ba669a35f..58c42b82bb 100644
--- a/java/org/apache/jasper/compiler/Collector.java
+++ b/java/org/apache/jasper/compiler/Collector.java
@@ -83,17 +83,6 @@ class Collector {
                 visitBody(n);
         }
 
-        @Override
-        public void visit(Node.PlugIn n) throws JasperException {
-            if (n.getHeight() != null && n.getHeight().isExpression()) {
-                scriptingElementSeen = true;
-            }
-            if (n.getWidth() != null && n.getWidth().isExpression()) {
-                scriptingElementSeen = true;
-            }
-            visitBody(n);
-        }
-
         @Override
         public void visit(Node.CustomTag n) throws JasperException {
             // Check to see what kinds of element we see as child elements

==================================================
Generator.java
index 7da9b947f0..a4ad003cee 100644
--- a/java/org/apache/jasper/compiler/ELFunctionMapper.java
+++ b/java/org/apache/jasper/compiler/ELFunctionMapper.java
@@ -113,13 +113,6 @@ public class ELFunctionMapper {
             visitBody(n);
         }
 
-        @Override
-        public void visit(Node.PlugIn n) throws JasperException {
-            doMap(n.getHeight());
-            doMap(n.getWidth());
-            visitBody(n);
-        }
-
         @Override
         public void visit(Node.JspElement n) throws JasperException {
 

==================================================
JspDocumentParser.java
index 158cfb5f1e..d092141d7c 100644
--- a/java/org/apache/jasper/compiler/Generator.java
+++ b/java/org/apache/jasper/compiler/Generator.java
@@ -1523,14 +1523,6 @@ class Generator {
             n.setEndJavaLine(out.getJavaLine());
         }
 
-        @Override
-        public void visit(Node.PlugIn n) throws JasperException {
-
-            // As of JSP 3.1, jsp:plugin must not generate any output
-            n.setBeginJavaLine(out.getJavaLine());
-            n.setEndJavaLine(out.getJavaLine());
-        }
-
         @Override
         public void visit(Node.NamedAttribute n) throws JasperException {
             // Don't visit body of this tag - we already did earlier.

==================================================
Node.java
index cb8f42df4e..f3ffe9bbbd 100644
--- a/java/org/apache/jasper/compiler/JspDocumentParser.java
+++ b/java/org/apache/jasper/compiler/JspDocumentParser.java
@@ -1029,23 +1029,6 @@ class JspDocumentParser
                     taglibAttrs,
                     start,
                     current);
-        } else if (localName.equals(PARAMS_ACTION)) {
-            node =
-                new Node.ParamsAction(
-                    qName,
-                    nonTaglibXmlnsAttrs,
-                    taglibAttrs,
-                    start,
-                    current);
-        } else if (localName.equals(PLUGIN_ACTION)) {
-            node =
-                new Node.PlugIn(
-                    qName,
-                    nonTaglibAttrs,
-                    nonTaglibXmlnsAttrs,
-                    taglibAttrs,
-                    start,
-                    current);
         } else if (localName.equals(TEXT_ACTION)) {
             node =
                 new Node.JspText(
@@ -1174,14 +1157,6 @@ class JspDocumentParser
                     taglibAttrs,
                     start,
                     current);
-        } else if (localName.equals(FALLBACK_ACTION)) {
-            node =
-                new Node.FallBackAction(
-                    qName,
-                    nonTaglibXmlnsAttrs,
-                    taglibAttrs,
-                    start,
-                    current);
         } else {
             throw new SAXParseException(
                 Localizer.getMessage(

==================================================
PageDataImpl.java
index bfa9b60260..d138b55f5b 100644
--- a/java/org/apache/jasper/compiler/Node.java
+++ b/java/org/apache/jasper/compiler/Node.java
@@ -1005,48 +1005,6 @@ abstract class Node implements TagConstants {
         }
     }
 
-    /**
-     * Represents a params action
-     */
-    public static class ParamsAction extends Node {
-
-        public ParamsAction(Mark start, Node parent) {
-            this(JSP_PARAMS_ACTION, null, null, start, parent);
-        }
-
-        public ParamsAction(String qName, Attributes nonTaglibXmlnsAttrs,
-                Attributes taglibAttrs, Mark start, Node parent) {
-            super(qName, PARAMS_ACTION, null, nonTaglibXmlnsAttrs, taglibAttrs,
-                    start, parent);
-        }
-
-        @Override
-        public void accept(Visitor v) throws JasperException {
-            v.visit(this);
-        }
-    }
-
-    /**
-     * Represents a fallback action
-     */
-    public static class FallBackAction extends Node {
-
-        public FallBackAction(Mark start, Node parent) {
-            this(JSP_FALLBACK_ACTION, null, null, start, parent);
-        }
-
-        public FallBackAction(String qName, Attributes nonTaglibXmlnsAttrs,
-                Attributes taglibAttrs, Mark start, Node parent) {
-            super(qName, FALLBACK_ACTION, null, nonTaglibXmlnsAttrs,
-                    taglibAttrs, start, parent);
-        }
-
-        @Override
-        public void accept(Visitor v) throws JasperException {
-            v.visit(this);
-        }
-    }
-
     /**
      * Represents an include action
      */
@@ -1197,48 +1155,6 @@ abstract class Node implements TagConstants {
         }
     }
 
-    /**
-     * Represents a plugin action
-     */
-    public static class PlugIn extends Node {
-
-        private JspAttribute width;
-
-        private JspAttribute height;
-
-        public PlugIn(Attributes attrs, Mark start, Node parent) {
-            this(JSP_PLUGIN_ACTION, attrs, null, null, start, parent);
-        }
-
-        public PlugIn(String qName, Attributes attrs,
-                Attributes nonTaglibXmlnsAttrs, Attributes taglibAttrs,
-                Mark start, Node parent) {
-            super(qName, PLUGIN_ACTION, attrs, nonTaglibXmlnsAttrs,
-                    taglibAttrs, start, parent);
-        }
-
-        @Override
-        public void accept(Visitor v) throws JasperException {
-            v.visit(this);
-        }
-
-        public void setHeight(JspAttribute height) {
-            this.height = height;
-        }
-
-        public void setWidth(JspAttribute width) {
-            this.width = width;
-        }
-
-        public JspAttribute getHeight() {
-            return height;
-        }
-
-        public JspAttribute getWidth() {
-            return width;
-        }
-    }
-
     /**
      * Represents an uninterpreted tag, from a Jsp document
      */
@@ -2519,26 +2435,11 @@ abstract class Node implements TagConstants {
             visitBody(n);
         }
 
-        public void visit(ParamsAction n) throws JasperException {
-            doVisit(n);
-            visitBody(n);
-        }
-
-        public void visit(FallBackAction n) throws JasperException {
-            doVisit(n);
-            visitBody(n);
-        }
-
         public void visit(UseBean n) throws JasperException {
             doVisit(n);
             visitBody(n);
         }
 
-        public void visit(PlugIn n) throws JasperException {
-            doVisit(n);
-            visitBody(n);
-        }
-
         public void visit(CustomTag n) throws JasperException {
             doVisit(n);
             visitBody(n);

==================================================
Parser.java
index 4b9a3df5fa..0fd952a4a5 100644
--- a/java/org/apache/jasper/compiler/PageDataImpl.java
+++ b/java/org/apache/jasper/compiler/PageDataImpl.java
@@ -364,26 +364,11 @@ class PageDataImpl extends PageData implements TagConstants {
             appendTag(n);
         }
 
-        @Override
-    public void visit(Node.ParamsAction n) throws JasperException {
-            appendTag(n);
-        }
-
-        @Override
-    public void visit(Node.FallBackAction n) throws JasperException {
-            appendTag(n);
-        }
-
         @Override
     public void visit(Node.UseBean n) throws JasperException {
             appendTag(n);
         }
 
-        @Override
-    public void visit(Node.PlugIn n) throws JasperException {
-            appendTag(n);
-        }
-
         @Override
         public void visit(Node.NamedAttribute n) throws JasperException {
             appendTag(n);

==================================================
SmapUtil.java
index c05ce36979..3d4714daaa 100644
--- a/java/org/apache/jasper/compiler/Parser.java
+++ b/java/org/apache/jasper/compiler/Parser.java
@@ -70,9 +70,6 @@ class Parser implements TagConstants {
     private static final String JAVAX_BODY_CONTENT_PARAM =
         "JAVAX_BODY_CONTENT_PARAM";
 
-    private static final String JAVAX_BODY_CONTENT_PLUGIN =
-        "JAVAX_BODY_CONTENT_PLUGIN";
-
     private static final String JAVAX_BODY_CONTENT_TEMPLATE_TEXT =
         "JAVAX_BODY_CONTENT_TEMPLATE_TEXT";
 
@@ -971,7 +968,7 @@ class Parser implements TagConstants {
     }
 
     /*
-     * Parses OptionalBody, but also reused to parse bodies for plugin and param
+     * Parses OptionalBody, but also reused to parse bodies for param
      * since the syntax is identical (the only thing that differs substantially
      * is how to process the body, and thus we accept the body type as a
      * parameter).
@@ -1056,64 +1053,6 @@ class Parser implements TagConstants {
         return result;
     }
 
-    /*
-     * Params ::= `>' S? ( ( `<jsp:body>' ( ( S? Param+ S? `</jsp:body>' ) |
-     * <TRANSLATION_ERROR> ) ) | Param+ ) '</jsp:params>'
-     */
-    private void parseJspParams(Node parent) throws JasperException {
-        Node jspParamsNode = new Node.ParamsAction(start, parent);
-        parseOptionalBody(jspParamsNode, "jsp:params", JAVAX_BODY_CONTENT_PARAM);
-    }
-
-    /*
-     * Fallback ::= '/>' | ( `>' S? `<jsp:body>' ( ( S? ( Char* - ( Char* `</jsp:body>' ) ) `</jsp:body>'
-     * S? ) | <TRANSLATION_ERROR> ) `</jsp:fallback>' ) | ( '>' ( Char* - (
-     * Char* '</jsp:fallback>' ) ) '</jsp:fallback>' )
-     */
-    private void parseFallBack(Node parent) throws JasperException {
-        Node fallBackNode = new Node.FallBackAction(start, parent);
-        parseOptionalBody(fallBackNode, "jsp:fallback",
-                JAVAX_BODY_CONTENT_TEMPLATE_TEXT);
-    }
-
-    /*
-     * For Plugin: StdActionContent ::= Attributes PluginBody
-     *
-     * PluginBody ::= EmptyBody | ( '>' S? ( '<jsp:attribute' NamedAttributes )? '<jsp:body' (
-     * JspBodyPluginTags | <TRANSLATION_ERROR> ) S? ETag ) | ( '>' S? PluginTags
-     * ETag )
-     *
-     * EmptyBody ::= '/>' | ( '>' ETag ) | ( '>' S? '<jsp:attribute'
-     * NamedAttributes ETag )
-     *
-     */
-    private void parsePlugin(Node parent) throws JasperException {
-        Attributes attrs = parseAttributes();
-        reader.skipSpaces();
-
-        Node pluginNode = new Node.PlugIn(attrs, start, parent);
-
-        parseOptionalBody(pluginNode, "jsp:plugin", JAVAX_BODY_CONTENT_PLUGIN);
-    }
-
-    /*
-     * PluginTags ::= ( '<jsp:params' Params S? )? ( '<jsp:fallback' Fallback?
-     * S? )?
-     */
-    private void parsePluginTags(Node parent) throws JasperException {
-        reader.skipSpaces();
-
-        if (reader.matches("<jsp:params")) {
-            parseJspParams(parent);
-            reader.skipSpaces();
-        }
-
-        if (reader.matches("<jsp:fallback")) {
-            parseFallBack(parent);
-            reader.skipSpaces();
-        }
-    }
-
     /*
      * StandardAction ::= 'include' StdActionContent | 'forward'
      * StdActionContent | 'invoke' StdActionContent | 'doBody' StdActionContent |
@@ -1146,18 +1085,12 @@ class Parser implements TagConstants {
             parseSetProperty(parent);
         } else if (reader.matches(USE_BEAN_ACTION)) {
             parseUseBean(parent);
-        } else if (reader.matches(PLUGIN_ACTION)) {
-            parsePlugin(parent);
         } else if (reader.matches(ELEMENT_ACTION)) {
             parseElement(parent);
         } else if (reader.matches(ATTRIBUTE_ACTION)) {
             err.jspError(start, "jsp.error.namedAttribute.invalidUse");
         } else if (reader.matches(BODY_ACTION)) {
             err.jspError(start, "jsp.error.jspbody.invalidUse");
-        } else if (reader.matches(FALLBACK_ACTION)) {
-            err.jspError(start, "jsp.error.fallback.invalidUse");
-        } else if (reader.matches(PARAMS_ACTION)) {
-            err.jspError(start, "jsp.error.params.invalidUse");
         } else if (reader.matches(PARAM_ACTION)) {
             err.jspError(start, "jsp.error.param.invalidUse");
         } else if (reader.matches(OUTPUT_ACTION)) {
@@ -1651,14 +1584,6 @@ class Parser implements TagConstants {
                 err.jspError(start, "jasper.error.emptybodycontent.nonempty",
                         tag);
             }
-        } else if (bodyType == JAVAX_BODY_CONTENT_PLUGIN) {
-            // (note the == since we won't recognize JAVAX_*
-            // from outside this module).
-            parsePluginTags(parent);
-            if (!reader.matchesETag(tag)) {
-                err.jspError(reader.mark(), "jsp.error.unterminated", "&lt;"
-                        + tag);
-            }
         } else if (bodyType.equalsIgnoreCase(TagInfo.BODY_CONTENT_JSP)
                 || bodyType.equalsIgnoreCase(TagInfo.BODY_CONTENT_SCRIPTLESS)
                 || (bodyType == JAVAX_BODY_CONTENT_PARAM)
@@ -1770,10 +1695,6 @@ class Parser implements TagConstants {
             if ("beanName".equals(name)) {
                 return TagInfo.BODY_CONTENT_JSP;
             }
-        } else if (n instanceof Node.PlugIn) {
-            if ("width".equals(name) || "height".equals(name)) {
-                return TagInfo.BODY_CONTENT_JSP;
-            }
         } else if (n instanceof Node.ParamAction) {
             if ("value".equals(name)) {
                 return TagInfo.BODY_CONTENT_JSP;

==================================================
TagConstants.java
index c3e5b4c14e..281abdea04 100644
--- a/java/org/apache/jasper/compiler/SmapUtil.java
+++ b/java/org/apache/jasper/compiler/SmapUtil.java
@@ -529,12 +529,6 @@ public class SmapUtil {
             visitBody(n);
         }
 
-        @Override
-        public void visit(Node.PlugIn n) throws JasperException {
-            doSmap(n);
-            visitBody(n);
-        }
-
         @Override
         public void visit(Node.CustomTag n) throws JasperException {
             doSmap(n);

==================================================
Validator.java
index 88157a171e..25564ffac4 100644
--- a/java/org/apache/jasper/compiler/TagConstants.java
+++ b/java/org/apache/jasper/compiler/TagConstants.java
@@ -58,15 +58,6 @@ public interface TagConstants {
     public static final String PARAM_ACTION = "param";
     public static final String JSP_PARAM_ACTION = "jsp:param";
 
-    public static final String PARAMS_ACTION = "params";
-    public static final String JSP_PARAMS_ACTION = "jsp:params";
-
-    public static final String PLUGIN_ACTION = "plugin";
-    public static final String JSP_PLUGIN_ACTION = "jsp:plugin";
-
-    public static final String FALLBACK_ACTION = "fallback";
-    public static final String JSP_FALLBACK_ACTION = "jsp:fallback";
-
     public static final String TEXT_ACTION = "text";
     public static final String JSP_TEXT_ACTION = "jsp:text";
     public static final String JSP_TEXT_ACTION_END = "</jsp:text>";

==================================================
Dumper.java
index ab341603ce..3665f3042b 100644
--- a/java/org/apache/jasper/resources/LocalStrings_zh_CN.properties
+++ b/java/org/apache/jasper/resources/LocalStrings_zh_CN.properties
@@ -72,7 +72,6 @@ jsp.error.dynamic.attributes.not.implemented=[{0}]标记声明它接受动态属
 jsp.error.el.parse=[{0}]：[{1}]
 jsp.error.el.template.deferred=#{...} 不允许出现在模板文本中
 jsp.error.el_interpreter_class.instantiation=加载或实例化ELInterpreter类[{0}]失败
-jsp.error.fallback.invalidUse=jsp:fallback必须是jsp:plugin的直接子代
 jsp.error.file.already.registered=文件[{0}]的递归包含
 jsp.error.file.cannot.read=无法读取文件 [{0}]
 jsp.error.file.not.found=文.件[{0}] 未找到
@@ -166,17 +165,12 @@ jsp.error.page.multi.pageencoding=页指令不能有多次出现的页编码
 jsp.error.page.noSession=无法访问不参与任何会话的页中的会话作用域
 jsp.error.page.nullThrowable=空异常
 jsp.error.page.sessionRequired=页面需要会话，但没有可用的会话
-jsp.error.param.invalidUse=jsp:param 不能在jsp:include、jsp:forward或jsp:params等元素外使用
+jsp.error.param.invalidUse=jsp:param 不能在jsp:include或jsp:forward等元素外使用
 jsp.error.paramexpected=使用“name”和“value”属性期望“jsp:param”标准操作
-jsp.error.params.emptyBody=jsp:params必须至少包含一个嵌套的jsp:param
-jsp.error.params.invalidUse=参数jsp:params必须是jsp:plugin的直接孩子参数
 jsp.error.parse.error.in.TLD=标记库描述符中的分析错误：[{0}]
 jsp.error.parse.xml=无法解析 XML 文件 [{0}]
 jsp.error.parse.xml.line=文件[{0}]上的XML解析错误：（第[{1}]行，第[{2}]行）
 jsp.error.parse.xml.scripting.invalid.body=[{0}]元素的主体不能包含任何XML元素
-jsp.error.plugin.badtype=jsp:plugin中“type”属性的值非法：必须是“bean”或“applet”
-jsp.error.plugin.nocode=代码未定义在jsp:plugin中
-jsp.error.plugin.notype=jsp:plugin中未声明type
 jsp.error.precompilation=无法预编译JSP[{0}]
 jsp.error.precompilation.parameter=不能将预编译请求参数[{0}]设置为[{1}]
 jsp.error.prefix.refined=尝试将前缀[{0}]重新定义为[{1}]，但当前作用域中已将其定义为[{2}]。
@@ -350,7 +344,6 @@ jsp.文件在哪\n\
 \                          文件 (默认是 UTF-8)\n\
 \    -addwebxmlmappings    将生成的.Web.xml片段合并到Web.xml文件中网络应用\n\
 \                          , 我们正在处理哪个.JSP页面\n\
-\    -ieplugin <clsid>     IE浏览器.Java插件的类id\n\
 \    -classpath <path>     重写.java.class.path环境变量参数\n\
 \    -xpoweredBy           添加.X-Powered-By 响应头\n\
 \    -trimSpaces [single]  移除.完全由空格组成的模板文本\n\

==================================================
TestGenerator.java
index 9bc49170c6..afa55bbaa3 100644
--- a/test/org/apache/jasper/compiler/Dumper.java
+++ b/test/org/apache/jasper/compiler/Dumper.java
@@ -134,20 +134,6 @@ class Dumper {
             printString("</jsp:useBean>");
         }
 
-        @Override
-        public void visit(Node.PlugIn n) throws JasperException {
-            printAttributes("<jsp:plugin", n.getAttributes(), ">");
-            dumpBody(n);
-            printString("</jsp:plugin>");
-        }
-
-        @Override
-        public void visit(Node.ParamsAction n) throws JasperException {
-            printAttributes("<jsp:params", n.getAttributes(), ">");
-            dumpBody(n);
-            printString("</jsp:params>");
-        }
-
         @Override
         public void visit(Node.ParamAction n) throws JasperException {
             printAttributes("<jsp:param", n.getAttributes(), ">");

==================================================
TestJspDocumentParser.java
index 65fb6d6785..192a4fca17 100644
--- a/test/org/apache/jasper/compiler/TestGenerator.java
+++ b/test/org/apache/jasper/compiler/TestGenerator.java
@@ -749,11 +749,6 @@ public class TestGenerator extends TomcatBaseTest {
         doTestJsp("xml-doctype-02.jspx");
     }
 
-    @Test
-    public void testPlugin01() throws Exception {
-        doTestJsp("plugin-01.jspx");
-    }
-
     @Test
     public void testForward01() throws Exception {
         doTestJsp("forward-01.jsp");

==================================================
