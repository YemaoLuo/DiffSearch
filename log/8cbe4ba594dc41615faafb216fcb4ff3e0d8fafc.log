8cbe4ba594dc41615faafb216fcb4ff3e0d8fafc
==================================================
Remove apparent Registry code duplication
==================================================
remm remm@apache.org
==================================================
Thu Mar 28 15:31:09 2019 +0100
==================================================
StandardServer.java
Remove apparent Registry code duplication

mserver field seems useless overall, so deprecate it. Use the resgistry
register/unregister rather than duplicated code.


==================================================
LifecycleMBeanBase.java
index 5c38e19a70..2bf87a1f89 100644
--- a/java/org/apache/catalina/core/StandardServer.java
+++ b/java/org/apache/catalina/core/StandardServer.java
@@ -38,6 +38,7 @@ import java.util.concurrent.TimeUnit;
 
 import javax.management.InstanceNotFoundException;
 import javax.management.MBeanException;
+import javax.management.MBeanServer;
 import javax.management.ObjectName;
 
 import org.apache.catalina.Context;
@@ -56,6 +57,7 @@ import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.ExceptionUtils;
 import org.apache.tomcat.util.buf.StringCache;
+import org.apache.tomcat.util.modeler.Registry;
 import org.apache.tomcat.util.res.StringManager;
 import org.apache.tomcat.util.threads.TaskThreadFactory;
 
@@ -849,8 +851,9 @@ public final class StandardServer extends LifecycleMBeanBase implements Server {
         try {
             // Note: Hard-coded domain used since this object is per Server/JVM
             ObjectName sname = new ObjectName("Catalina:type=StoreConfig");
-            if (mserver.isRegistered(sname)) {
-                mserver.invoke(sname, "storeConfig", null, null);
+            MBeanServer server = Registry.getRegistry(null, null).getMBeanServer();
+            if (server.isRegistered(sname)) {
+                server.invoke(sname, "storeConfig", null, null);
             } else {
                 log.error(sm.getString("standardServer.storeConfig.notAvailable", sname));
             }
@@ -878,8 +881,9 @@ public final class StandardServer extends LifecycleMBeanBase implements Server {
         try {
             // Note: Hard-coded domain used since this object is per Server/JVM
             ObjectName sname = new ObjectName("Catalina:type=StoreConfig");
-            if (mserver.isRegistered(sname)) {
-                mserver.invoke(sname, "store",
+            MBeanServer server = Registry.getRegistry(null, null).getMBeanServer();
+            if (server.isRegistered(sname)) {
+                server.invoke(sname, "store",
                     new Object[] {context},
                     new String [] { "java.lang.String"});
             } else {

==================================================
