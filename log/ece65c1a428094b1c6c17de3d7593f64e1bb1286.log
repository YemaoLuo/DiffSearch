ece65c1a428094b1c6c17de3d7593f64e1bb1286
==================================================
CVE-2011-1088
==================================================
Mark Emlyn
==================================================
Fri Mar 4 15:17:22 2011 +0000
==================================================
Wrapper.java
CVE-2011-1088
@ServletSecurity
Servlets added via addServlet() should not be processed unless created via craeteServlet. Need to delay scanning until urlPatterns are known

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1077995 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AuthenticatorBase.java
index b761a4ae32..cc67b4cc1e 100644
--- a/java/org/apache/catalina/Wrapper.java
+++ b/java/org/apache/catalina/Wrapper.java
@@ -371,4 +371,19 @@ public interface Wrapper extends Container {
      */
     public void setEnabled(boolean enabled);
 
+    /**
+     * Set the flag that indicates
+     * {@link javax.servlet.annotation.ServletSecurity} annotations must be
+     * scanned when the Servlet is first used.
+     * 
+     * @param b The new value of the flag
+     */
+    public void setServletSecurityAnnotationScanRequired(boolean b);
+    
+    /**
+     * Scan for (if necessary) and process (if found) the
+     * {@link javax.servlet.annotation.ServletSecurity} annotations for the
+     * Servlet associated with this wrapper.
+     */
+    public void servletSecurityAnnotationScan() throws ServletException;
 }

==================================================
StandardContext.java
index 1d87d3a6ad..a84f386133 100644
--- a/java/org/apache/catalina/authenticator/AuthenticatorBase.java
+++ b/java/org/apache/catalina/authenticator/AuthenticatorBase.java
@@ -482,9 +482,7 @@ public abstract class AuthenticatorBase extends ValveBase
         // The Servlet may specify security constraints through annotations.
         // Ensure that they have been processed before constraints are checked
         Wrapper wrapper = (Wrapper) request.getMappingData().wrapper; 
-        if (wrapper.getServlet() == null) {
-            wrapper.load();
-        }
+        wrapper.servletSecurityAnnotationScan();
 
         Realm realm = this.context.getRealm();
         // Is this request URI subject to a security constraint?

==================================================
StandardWrapper.java
index b0da03fa92..cc1e588ed8 100644
--- a/java/org/apache/catalina/core/StandardContext.java
+++ b/java/org/apache/catalina/core/StandardContext.java
@@ -837,6 +837,12 @@ public class StandardContext extends ContainerBase
     
     private boolean fireRequestListenersOnForwards = false;
 
+    /**
+     * Servlets created via {@link ApplicationContext#createServlet(Class)} for
+     * tracking purposes.
+     */
+    private Set<Servlet> createdServlets = new HashSet<Servlet>();
+
     // ----------------------------------------------------- Context Properties
 
 
@@ -4364,6 +4370,11 @@ public class StandardContext extends ContainerBase
      * @param wrapper   The wrapper for the Servlet that was added
      */
     public ServletRegistration.Dynamic dynamicServletAdded(Wrapper wrapper) {
+        Servlet s = wrapper.getServlet();
+        if (s != null && createdServlets.contains(s)) {
+            // Mark the wrapper to indicate annotations need to be scanned
+            wrapper.setServletSecurityAnnotationScanRequired(true);
+        }
         return new ApplicationServletRegistration(wrapper, this);
     }
 
@@ -4372,7 +4383,7 @@ public class StandardContext extends ContainerBase
      * @param servlet
      */
     public void dynamicServletCreated(Servlet servlet) {
-        // NOOP - Hook for JACC implementations
+        createdServlets.add(servlet);
     }
 
 
@@ -5530,6 +5541,8 @@ public class StandardContext extends ContainerBase
         
         initializers.clear();
         
+        createdServlets.clear();
+
         if(log.isDebugEnabled())
             log.debug("resetContext " + getObjectName());
     }

==================================================
TestStandardWrapper.java
index 5e57643f81..ded6b26b4e 100644
--- a/java/org/apache/catalina/core/StandardWrapper.java
+++ b/java/org/apache/catalina/core/StandardWrapper.java
@@ -273,6 +273,8 @@ public class StandardWrapper extends ContainerBase
      */
     protected boolean enabled = true;
 
+    protected volatile boolean servletSecurityAnnotationScanRequired = false;
+
     /**
      * Static class array used when the SecurityManager is turned on and 
      * <code>Servlet.init</code> is invoked.
@@ -643,6 +645,15 @@ public class StandardWrapper extends ContainerBase
         instance = servlet;
     }
 
+    
+    /**
+     * {@inheritDoc}
+     */
+    @Override
+    public void setServletSecurityAnnotationScanRequired(boolean b) {
+        this.servletSecurityAnnotationScanRequired = b;
+    }
+
     // --------------------------------------------------------- Public Methods
 
 
@@ -1077,20 +1088,12 @@ public class StandardWrapper extends ContainerBase
                 }
             }
 
-            ServletSecurity secAnnotation =
-                servlet.getClass().getAnnotation(ServletSecurity.class);
-            Context ctxt = (Context) getParent();
-            if (secAnnotation != null) {
-                ctxt.addServletSecurity(
-                        new ApplicationServletRegistration(this, ctxt),
-                        new ServletSecurityElement(secAnnotation));
-            }
-            
+            processServletSecurityAnnotation(servlet);
 
             // Special handling for ContainerServlet instances
             if ((servlet instanceof ContainerServlet) &&
-                  (isContainerProvidedServlet(servletClass) ||
-                    ctxt.getPrivileged() )) {
+                    (isContainerProvidedServlet(servletClass) ||
+                            ((Context) getParent()).getPrivileged() )) {
                 ((ContainerServlet) servlet).setWrapper(this);
             }
 
@@ -1123,6 +1126,34 @@ public class StandardWrapper extends ContainerBase
 
     }
 
+    /**
+     * {@inheritDoc}
+     */
+    @Override
+    public void servletSecurityAnnotationScan() throws ServletException {
+        if (instance == null) {
+            load();
+        } else {
+            if (servletSecurityAnnotationScanRequired) {
+                processServletSecurityAnnotation(instance);
+            }
+        }
+    }
+
+    private void processServletSecurityAnnotation(Servlet servlet) {
+        // Calling this twice isn't harmful so no syncs
+        servletSecurityAnnotationScanRequired = false;
+
+        ServletSecurity secAnnotation =
+            servlet.getClass().getAnnotation(ServletSecurity.class);
+        Context ctxt = (Context) getParent();
+        if (secAnnotation != null) {
+            ctxt.addServletSecurity(
+                    new ApplicationServletRegistration(this, ctxt),
+                    new ServletSecurityElement(secAnnotation));
+        }
+    }
+
     private synchronized void initServlet(Servlet servlet)
             throws ServletException {
         

==================================================
