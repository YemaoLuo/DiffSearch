baa3ca159c8cac93328c72c5955989e45f405cbf
==================================================
Remove unused dump() methods
==================================================
Mark Emlyn
==================================================
Sun Oct 14 18:11:49 2012 +0000
==================================================
AnnotationElementValue.java
Remove unused dump() methods

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1398109 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AnnotationEntry.java
index 9e55ec7554..44cad4c665 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/AnnotationElementValue.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/AnnotationElementValue.java
@@ -17,9 +17,6 @@
  */
 package org.apache.tomcat.util.bcel.classfile;
 
-import java.io.DataOutputStream;
-import java.io.IOException;
-
 public class AnnotationElementValue extends ElementValue
 {
     // For annotation element values, this is the annotation
@@ -35,13 +32,6 @@ public class AnnotationElementValue extends ElementValue
         this.annotationEntry = annotationEntry;
     }
 
-    @Override
-    public void dump(DataOutputStream dos) throws IOException
-    {
-        dos.writeByte(type); // u1 type of value (ANNOTATION == '@')
-        annotationEntry.dump(dos);
-    }
-
     @Override
     public String stringifyValue()
     {

==================================================
ArrayElementValue.java
index a6ed2b4b42..35695756e3 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/AnnotationEntry.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/AnnotationEntry.java
@@ -18,7 +18,6 @@
 package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInputStream;
-import java.io.DataOutputStream;
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.List;
@@ -79,14 +78,4 @@ public class AnnotationEntry implements Constants {
         // TODO return List
         return element_value_pairs.toArray(new ElementValuePair[element_value_pairs.size()]);
     }
-
-    public void dump(DataOutputStream dos) throws IOException {
-        dos.writeShort(type_index); // u2 index of type name in cpool
-        dos.writeShort(element_value_pairs.size()); // u2 element_value pair
-        // count
-        for (int i = 0; i < element_value_pairs.size(); i++) {
-            final ElementValuePair envp = element_value_pairs.get(i);
-            envp.dump(dos);
-        }
-    }
 }

==================================================
ClassElementValue.java
index 9bed239ffe..a891a4c81f 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ArrayElementValue.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ArrayElementValue.java
@@ -17,9 +17,6 @@
  */
 package org.apache.tomcat.util.bcel.classfile;
 
-import java.io.DataOutputStream;
-import java.io.IOException;
-
 public class ArrayElementValue extends ElementValue
 {
     // For array types, this is the array
@@ -34,17 +31,6 @@ public class ArrayElementValue extends ElementValue
         this.evalues = datums;
     }
 
-    @Override
-    public void dump(DataOutputStream dos) throws IOException
-    {
-        dos.writeByte(type); // u1 type of value (ARRAY == '[')
-        dos.writeShort(evalues.length);
-        for (int i = 0; i < evalues.length; i++)
-        {
-            evalues[i].dump(dos);
-        }
-    }
-
     @Override
     public String stringifyValue()
     {

==================================================
ElementValue.java
index 0008796186..09d272f673 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ClassElementValue.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ClassElementValue.java
@@ -17,9 +17,6 @@
  */
 package org.apache.tomcat.util.bcel.classfile;
 
-import java.io.DataOutputStream;
-import java.io.IOException;
-
 import org.apache.tomcat.util.bcel.Constants;
 
 public class ClassElementValue extends ElementValue
@@ -43,11 +40,4 @@ public class ClassElementValue extends ElementValue
                 Constants.CONSTANT_Utf8);
         return cu8.getBytes();
     }
-
-    @Override
-    public void dump(DataOutputStream dos) throws IOException
-    {
-        dos.writeByte(type); // u1 kind of value
-        dos.writeShort(idx);
-    }
 }

==================================================
ElementValuePair.java
index 8921a2c21f..a83f5cc0ba 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ElementValue.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ElementValue.java
@@ -18,7 +18,6 @@
 package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInputStream;
-import java.io.DataOutputStream;
 import java.io.IOException;
 
 /**
@@ -42,8 +41,6 @@ public abstract class ElementValue
 
     public abstract String stringifyValue();
 
-    public abstract void dump(DataOutputStream dos) throws IOException;
-
     public static final int STRING = 's';
 
     public static final int ENUM_CONSTANT = 'e';

==================================================
EnumElementValue.java
index 8ff7c04cb6..267c86590d 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ElementValuePair.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ElementValuePair.java
@@ -17,9 +17,6 @@
  */
 package org.apache.tomcat.util.bcel.classfile;
 
-import java.io.DataOutputStream;
-import java.io.IOException;
-
 import org.apache.tomcat.util.bcel.Constants;
 
 /**
@@ -56,9 +53,4 @@ public class ElementValuePair
     {
         return elementValue;
     }
-
-    protected void dump(DataOutputStream dos) throws IOException {
-        dos.writeShort(elementNameIndex); // u2 name of the element
-        elementValue.dump(dos);
-    }
 }

==================================================
SimpleElementValue.java
index d91561c4f9..ea63cdf1e3 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/EnumElementValue.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/EnumElementValue.java
@@ -17,9 +17,6 @@
  */
 package org.apache.tomcat.util.bcel.classfile;
 
-import java.io.DataOutputStream;
-import java.io.IOException;
-
 import org.apache.tomcat.util.bcel.Constants;
 
 public class EnumElementValue extends ElementValue
@@ -40,14 +37,6 @@ public class EnumElementValue extends ElementValue
         this.valueIdx = valueIdx;
     }
 
-    @Override
-    public void dump(DataOutputStream dos) throws IOException
-    {
-        dos.writeByte(type); // u1 type of value (ENUM_CONSTANT == 'e')
-        dos.writeShort(typeIdx); // u2
-        dos.writeShort(valueIdx); // u2
-    }
-
     @Override
     public String stringifyValue()
     {

==================================================
