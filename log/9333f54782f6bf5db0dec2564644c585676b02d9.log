9333f54782f6bf5db0dec2564644c585676b02d9
==================================================
Switch MapperListener to the new Lifecycle
==================================================
Mark Emlyn
==================================================
Tue Nov 30 16:11:23 2010 +0000
==================================================
Connector.java
Switch MapperListener to the new Lifecycle

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1040609 13f79535-47bb-0310-9956-ffa450edef68



==================================================
MapperListener.java
index a3c9efe52b..aeb17bd99a 100644
--- a/java/org/apache/catalina/connector/Connector.java
+++ b/java/org/apache/catalina/connector/Connector.java
@@ -879,11 +879,9 @@ public class Connector extends LifecycleMBeanBase  {
 
         onameProtocolHandler = register(protocolHandler,
                 createObjectNameKeyProperties("ProtocolHandler"));
-        
-        mapperListener.setDomain(getDomain());
 
-        onameMapper = register(mapperListener,
-                createObjectNameKeyProperties("Mapper"));
+        // Initialize mapper listener
+        mapperListener.init();
     }
 
 
@@ -910,8 +908,7 @@ public class Connector extends LifecycleMBeanBase  {
                  ("coyoteConnector.protocolHandlerStartFailed", e));
         }
 
-        // MapperListener doesn't follow Lifecycle conventions
-        mapperListener.init();
+        mapperListener.start();
     }
 
 
@@ -933,14 +930,13 @@ public class Connector extends LifecycleMBeanBase  {
                  ("coyoteConnector.protocolHandlerStopFailed", e));
         }
 
-        // MapperListener doesn't follow Lifecycle conventions
-        mapperListener.destroy();
+        mapperListener.stop();
     }
 
 
     @Override
     protected void destroyInternal() throws LifecycleException {
-        unregister(onameMapper);
+        mapperListener.destroy();
         unregister(onameProtocolHandler);
         
         try {
@@ -977,7 +973,6 @@ public class Connector extends LifecycleMBeanBase  {
     // -------------------- JMX registration  --------------------
 
     private ObjectName onameProtocolHandler;
-    private ObjectName onameMapper;
     
     @Override
     protected String getDomainInternal() {

==================================================
