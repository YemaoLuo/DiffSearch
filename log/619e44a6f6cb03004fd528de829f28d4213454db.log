619e44a6f6cb03004fd528de829f28d4213454db
==================================================
Fix more warnings
==================================================
Mark Emlyn
==================================================
Thu Jul 12 10:18:20 2012 +0000
==================================================
AbstractHttp11JsseProtocol.java
Fix more warnings
 - More generics for npn
 - Use final where appropriate

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1360615 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AbstractHttp11Protocol.java
index 47d1baeaba..e8a3a505bc 100644
--- a/java/org/apache/coyote/http11/AbstractHttp11JsseProtocol.java
+++ b/java/org/apache/coyote/http11/AbstractHttp11JsseProtocol.java
@@ -18,8 +18,8 @@ package org.apache.coyote.http11;
 
 import org.apache.tomcat.util.net.SSLImplementation;
 
-public abstract class AbstractHttp11JsseProtocol
-        extends AbstractHttp11Protocol {
+public abstract class AbstractHttp11JsseProtocol<S>
+        extends AbstractHttp11Protocol<S> {
 
     protected SSLImplementation sslImplementation = null;
 

==================================================
Http11AprProtocol.java
index 257eea0471..62cf74bc0d 100644
--- a/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
+++ b/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
@@ -18,16 +18,8 @@ package org.apache.coyote.http11;
 
 
 import org.apache.coyote.AbstractProtocol;
-import org.apache.tomcat.util.res.StringManager;
-
-public abstract class AbstractHttp11Protocol extends AbstractProtocol {
-
-    /**
-     * The string manager for this package.
-     */
-    protected static final StringManager sm =
-        StringManager.getManager(Constants.Package);
 
+public abstract class AbstractHttp11Protocol<S> extends AbstractProtocol {
 
     @Override
     protected String getProtocolName() {
@@ -184,11 +176,12 @@ public abstract class AbstractHttp11Protocol extends AbstractProtocol {
         endpoint.setMaxKeepAliveRequests(mkar);
     }
 
-    protected NpnHandler npnHandler;
+    protected NpnHandler<S> npnHandler;
+    @SuppressWarnings("unchecked")
     public void setNpnHandler(String impl) {
         try {
             Class<?> c = Class.forName(impl);
-            npnHandler = (NpnHandler) c.newInstance();
+            npnHandler = (NpnHandler<S>) c.newInstance();
         } catch (Exception ex) {
             getLog().warn("Failed to init light protocol " + impl, ex);
         }

==================================================
Http11NioProtocol.java
index 8d3c36ddc7..eafffd5027 100644
--- a/java/org/apache/coyote/http11/Http11AprProtocol.java
+++ b/java/org/apache/coyote/http11/Http11AprProtocol.java
@@ -39,7 +39,7 @@ import org.apache.tomcat.util.net.SocketWrapper;
  * @author Remy Maucherat
  * @author Costin Manolache
  */
-public class Http11AprProtocol extends AbstractHttp11Protocol {
+public class Http11AprProtocol extends AbstractHttp11Protocol<Long> {
 
     private static final Log log = LogFactory.getLog(Http11AprProtocol.class);
 

==================================================
Http11Protocol.java
index ab411db6ae..2ee3c39879 100644
--- a/java/org/apache/coyote/http11/Http11NioProtocol.java
+++ b/java/org/apache/coyote/http11/Http11NioProtocol.java
@@ -47,7 +47,7 @@ import org.apache.tomcat.util.net.SocketWrapper;
  * @author Costin Manolache
  * @author Filip Hanik
  */
-public class Http11NioProtocol extends AbstractHttp11JsseProtocol {
+public class Http11NioProtocol extends AbstractHttp11JsseProtocol<NioChannel> {
 
     private static final Log log = LogFactory.getLog(Http11NioProtocol.class);
 
@@ -86,7 +86,7 @@ public class Http11NioProtocol extends AbstractHttp11JsseProtocol {
 
     // -------------------- Properties--------------------
 
-    private Http11ConnectionHandler cHandler;
+    private final Http11ConnectionHandler cHandler;
 
     // -------------------- Pool setup --------------------
 

==================================================
NpnHandler.java
index 0d11bd6a98..ee92dacd37 100644
--- a/java/org/apache/coyote/http11/Http11Protocol.java
+++ b/java/org/apache/coyote/http11/Http11Protocol.java
@@ -40,7 +40,7 @@ import org.apache.tomcat.util.net.SocketWrapper;
  * @author Remy Maucherat
  * @author Costin Manolache
  */
-public class Http11Protocol extends AbstractHttp11JsseProtocol {
+public class Http11Protocol extends AbstractHttp11JsseProtocol<Socket> {
 
 
     private static final org.apache.juli.logging.Log log
@@ -71,7 +71,7 @@ public class Http11Protocol extends AbstractHttp11JsseProtocol {
 
     // ----------------------------------------------------------------- Fields
 
-    protected Http11ConnectionHandler cHandler;
+    private final Http11ConnectionHandler cHandler;
 
 
     // ------------------------------------------------ HTTP specific properties

==================================================
