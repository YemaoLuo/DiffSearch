86a129af5c60445e8caf2fcc46d5081b46925140
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49600
==================================================
Mark Emlyn
==================================================
Wed Jul 21 20:30:53 2010 +0000
==================================================
BaseDirContext.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49600
Return a consistent exception for 'Not Found' resources.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@966404 13f79535-47bb-0310-9956-ffa450edef68



==================================================
FileDirContext.java
index e8fe554d10..cb7901b0fc 100644
--- a/java/org/apache/naming/resources/BaseDirContext.java
+++ b/java/org/apache/naming/resources/BaseDirContext.java
@@ -36,6 +36,7 @@ import javax.naming.Binding;
 import javax.naming.Context;
 import javax.naming.Name;
 import javax.naming.NameClassPair;
+import javax.naming.NameNotFoundException;
 import javax.naming.NameParser;
 import javax.naming.NamingEnumeration;
 import javax.naming.NamingException;
@@ -475,7 +476,8 @@ public abstract class BaseDirContext implements DirContext {
         }
         
         // Really not found
-        throw new NamingException(sm.getString("resources.notFound", name));
+        throw new NameNotFoundException(
+                sm.getString("resources.notFound", name));
     }
 
     /**
@@ -702,7 +704,8 @@ public abstract class BaseDirContext implements DirContext {
         }
 
         // Really not found
-        throw new NamingException(sm.getString("resources.notFound", name));
+        throw new NameNotFoundException(
+                sm.getString("resources.notFound", name));
     }
 
 
@@ -1058,7 +1061,8 @@ public abstract class BaseDirContext implements DirContext {
         }
         
         // Really not found
-        throw new NamingException(sm.getString("resources.notFound", name));
+        throw new NameNotFoundException(
+                sm.getString("resources.notFound", name));
     }
 
     /**

==================================================
ProxyDirContext.java
index 22cdfc89f2..d5e09e4deb 100644
--- a/java/org/apache/naming/resources/FileDirContext.java
+++ b/java/org/apache/naming/resources/FileDirContext.java
@@ -31,6 +31,7 @@ import java.util.Hashtable;
 import javax.naming.Binding;
 import javax.naming.NameAlreadyBoundException;
 import javax.naming.NameClassPair;
+import javax.naming.NameNotFoundException;
 import javax.naming.NamingEnumeration;
 import javax.naming.NamingException;
 import javax.naming.OperationNotSupportedException;
@@ -237,8 +238,8 @@ public class FileDirContext extends BaseDirContext {
         File file = file(name);
 
         if (file == null)
-            throw new NamingException
-                (sm.getString("resources.notFound", name));
+            throw new NameNotFoundException(
+                    sm.getString("resources.notFound", name));
 
         if (!file.delete())
             throw new NamingException
@@ -265,7 +266,7 @@ public class FileDirContext extends BaseDirContext {
         File file = file(oldName);
 
         if (file == null)
-            throw new NamingException
+            throw new NameNotFoundException
                 (sm.getString("resources.notFound", oldName));
 
         File newFile = new File(base, newName);
@@ -295,7 +296,7 @@ public class FileDirContext extends BaseDirContext {
         File file = file(name);
 
         if (file == null)
-            throw new NamingException
+            throw new NameNotFoundException
                 (sm.getString("resources.notFound", name));
 
         return new NamingContextEnumeration(list(file).iterator());

==================================================
WARDirContext.java
index 88bf40da65..3c9339fe23 100644
--- a/java/org/apache/naming/resources/ProxyDirContext.java
+++ b/java/org/apache/naming/resources/ProxyDirContext.java
@@ -56,6 +56,13 @@ public class ProxyDirContext implements DirContext {
     public static final String HOST = "host";
 
 
+    /**
+     * Immutable name not found exception.
+     */
+    protected static final NameNotFoundException NOT_FOUND_EXCEPTION =
+        new ImmutableNameNotFoundException();
+
+
     // ----------------------------------------------------------- Constructors
 
 
@@ -134,7 +141,8 @@ public class ProxyDirContext implements DirContext {
     /**
      * The string manager for this package.
      */
-    protected static final StringManager sm = StringManager.getManager(Constants.Package);
+    protected static final StringManager sm =
+        StringManager.getManager(Constants.Package);
 
 
     /**
@@ -186,13 +194,6 @@ public class ProxyDirContext implements DirContext {
     protected int cacheObjectMaxSize = 512; // 512 KB
 
 
-    /**
-     * Immutable name not found exception.
-     */
-    protected NameNotFoundException notFoundException =
-        new ImmutableNameNotFoundException();
-
-
     /**
      * Non cacheable resources.
      */
@@ -263,7 +264,7 @@ public class ProxyDirContext implements DirContext {
         CacheEntry entry = cacheLookup(name.toString());
         if (entry != null) {
             if (!entry.exists) {
-                throw notFoundException;
+                throw NOT_FOUND_EXCEPTION;
             }
             if (entry.resource != null) {
                 // Check content caching.
@@ -292,7 +293,7 @@ public class ProxyDirContext implements DirContext {
         CacheEntry entry = cacheLookup(name);
         if (entry != null) {
             if (!entry.exists) {
-                throw notFoundException;
+                throw NOT_FOUND_EXCEPTION;
             }
             if (entry.resource != null) {
                 return entry.resource;
@@ -813,7 +814,7 @@ public class ProxyDirContext implements DirContext {
         CacheEntry entry = cacheLookup(name.toString());
         if (entry != null) {
             if (!entry.exists) {
-                throw notFoundException;
+                throw NOT_FOUND_EXCEPTION;
             }
             return entry.attributes;
         }
@@ -837,7 +838,7 @@ public class ProxyDirContext implements DirContext {
         CacheEntry entry = cacheLookup(name);
         if (entry != null) {
             if (!entry.exists) {
-                throw notFoundException;
+                throw NOT_FOUND_EXCEPTION;
             }
             return entry.attributes;
         }

==================================================
