e03da0f2245af6381fd5081ef5f7436a740b8dec
==================================================
Add support for the new TLS configuration API for client connections
==================================================
Mark Thomas
==================================================
Tue Dec 21 14:42:50 2021 +0000
==================================================
ClientEndpointConfig.java
Add support for the new TLS configuration API for client connections


==================================================
DefaultClientEndpointConfig.java
index a56af4bf3d..fbf752b82f 100644
--- a/java/jakarta/websocket/ClientEndpointConfig.java
+++ b/java/jakarta/websocket/ClientEndpointConfig.java
@@ -20,12 +20,16 @@ import java.util.Collections;
 import java.util.List;
 import java.util.Map;
 
+import javax.net.ssl.SSLContext;
+
 public interface ClientEndpointConfig extends EndpointConfig {
 
     List<String> getPreferredSubprotocols();
 
     List<Extension> getExtensions();
 
+    SSLContext getSSLContext();
+
     public Configurator getConfigurator();
 
     public final class Builder {
@@ -46,15 +50,13 @@ public interface ClientEndpointConfig extends EndpointConfig {
         private Configurator configurator = DEFAULT_CONFIGURATOR;
         private List<String> preferredSubprotocols = Collections.emptyList();
         private List<Extension> extensions = Collections.emptyList();
-        private List<Class<? extends Encoder>> encoders =
-                Collections.emptyList();
-        private List<Class<? extends Decoder>> decoders =
-                Collections.emptyList();
-
+        private List<Class<? extends Encoder>> encoders = Collections.emptyList();
+        private List<Class<? extends Decoder>> decoders = Collections.emptyList();
+        private SSLContext sslContext = null;
 
         public ClientEndpointConfig build() {
             return new DefaultClientEndpointConfig(preferredSubprotocols,
-                    extensions, encoders, decoders, configurator);
+                    extensions, encoders, decoders, sslContext, configurator);
         }
 
 
@@ -110,6 +112,12 @@ public interface ClientEndpointConfig extends EndpointConfig {
             }
             return this;
         }
+
+
+        public Builder sslContext(SSLContext sslContext) {
+            this.sslContext = sslContext;
+            return this;
+        }
     }
 
 

==================================================
WsWebSocketContainer.java
index e166925121..cf2980937d 100644
--- a/java/jakarta/websocket/DefaultClientEndpointConfig.java
+++ b/java/jakarta/websocket/DefaultClientEndpointConfig.java
@@ -20,12 +20,15 @@ import java.util.List;
 import java.util.Map;
 import java.util.concurrent.ConcurrentHashMap;
 
+import javax.net.ssl.SSLContext;
+
 final class DefaultClientEndpointConfig implements ClientEndpointConfig {
 
     private final List<String> preferredSubprotocols;
     private final List<Extension> extensions;
     private final List<Class<? extends Encoder>> encoders;
     private final List<Class<? extends Decoder>> decoders;
+    private final SSLContext sslContext;
     private final Map<String,Object> userProperties = new ConcurrentHashMap<>();
     private final Configurator configurator;
 
@@ -34,11 +37,13 @@ final class DefaultClientEndpointConfig implements ClientEndpointConfig {
             List<Extension> extensions,
             List<Class<? extends Encoder>> encoders,
             List<Class<? extends Decoder>> decoders,
+            SSLContext sslContext,
             Configurator configurator) {
         this.preferredSubprotocols = preferredSubprotocols;
         this.extensions = extensions;
-        this.decoders = decoders;
         this.encoders = encoders;
+        this.decoders = decoders;
+        this.sslContext = sslContext;
         this.configurator = configurator;
     }
 
@@ -67,6 +72,12 @@ final class DefaultClientEndpointConfig implements ClientEndpointConfig {
     }
 
 
+    @Override
+    public SSLContext getSSLContext() {
+        return sslContext;
+    }
+
+
     @Override
     public final Map<String, Object> getUserProperties() {
         return userProperties;

==================================================
TestWsWebSocketContainerSSL.java
index 4ac0792a40..9034aa9589 100644
--- a/res/checkstyle/jakarta-import-control.xml
+++ b/res/checkstyle/jakarta-import-control.xml
@@ -72,5 +72,6 @@
   </subpackage>
   <subpackage name="websocket">
     <allow pkg="jakarta.websocket"/>
+    <allow pkg="javax.net.ssl"/>
   </subpackage>
 </import-control>
\ No newline at end of file

==================================================
