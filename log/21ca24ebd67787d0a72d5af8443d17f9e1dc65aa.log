21ca24ebd67787d0a72d5af8443d17f9e1dc65aa
==================================================
remove more code not needed
==================================================
Filip Hanik
==================================================
Thu Dec 11 03:51:10 2008 +0000
==================================================
ConnectionPool.java
remove more code not needed


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@725565 13f79535-47bb-0310-9956-ffa450edef68



==================================================
JdbcInterceptor.java
index c4eaa99895..d9240a2e37 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/ConnectionPool.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/ConnectionPool.java
@@ -64,6 +64,7 @@ public class ConnectionPool {
     //===============================================================================
     //         INSTANCE/QUICK ACCESS VARIABLE
     //===============================================================================
+    
     /**
      * All the information about the connection pool
      */

==================================================
ProxyConnection.java
index bf32659c62..f28e95ec04 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/JdbcInterceptor.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/JdbcInterceptor.java
@@ -74,7 +74,7 @@ public abstract class JdbcInterceptor implements InvocationHandler {
      * @param con - the pooled connection
      */
     public abstract void reset(ConnectionPool parent, PooledConnection con);
-
+    
     public List<InterceptorProperty> getProperties() {
         return properties;
     }

==================================================
SlowQueryReport.java
index 8d14279b48..a3094da3bf 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/ProxyConnection.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/ProxyConnection.java
@@ -84,7 +84,7 @@ public class ProxyConnection extends JdbcInterceptor {
         if (isClosed()) throw new SQLException("Connection has already been closed.");
         return method.invoke(connection.getConnection(),args);
     }
-
+    
     public boolean isClosed() {
         return connection==null || connection.isDiscarded();
     }

==================================================
