7849435b25c5b6c2e2afed8e0b35d50513de4401
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=48150
==================================================
Mark Emlyn
==================================================
Tue Nov 17 22:35:41 2009 +0000
==================================================
GenericServlet.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=48150
Correct JavaDoc typos. Patch provided by gingyang.xu

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@881582 13f79535-47bb-0310-9956-ffa450edef68



==================================================
HttpServlet.java
index a9a98360ae..5e7519e732 100644
--- a/java/javax/servlet/GenericServlet.java
+++ b/java/javax/servlet/GenericServlet.java
@@ -197,7 +197,7 @@ public abstract class GenericServlet
      * <code>super.init(config)</code>.
      *
      * @param config 			the <code>ServletConfig</code> object
-     *					that contains configutation
+     *					that contains configuration
      *					information for this servlet
      *
      * @exception ServletException 	if an exception occurs that

==================================================
JspWriter.java
index b363a567f4..fc713abce6 100644
--- a/java/javax/servlet/http/HttpServlet.java
+++ b/java/javax/servlet/http/HttpServlet.java
@@ -228,7 +228,7 @@ public abstract class HttpServlet extends GenericServlet {
      * @param req   the request object that is passed to the servlet
      *
      * @param resp  the response object that the servlet
-     *                  uses to return the headers to the clien
+     *                  uses to return the headers to the client
      *
      * @exception IOException   if an input or output error occurs
      *

==================================================
PageContext.java
index 1f25043e29..c50558d650 100644
--- a/java/javax/servlet/jsp/JspWriter.java
+++ b/java/javax/servlet/jsp/JspWriter.java
@@ -132,7 +132,7 @@ abstract public class JspWriter extends java.io.Writer {
      * underlying writer.
      *
      * @param      b   The <code>boolean</code> to be printed
-     * @throws	   java.io.IOException If an error occured while writing
+     * @throws	   java.io.IOException If an error occurred while writing
      */
 
     abstract public void print(boolean b) throws IOException;
@@ -143,7 +143,7 @@ abstract public class JspWriter extends java.io.Writer {
      * underlying writer.
      *
      * @param      c   The <code>char</code> to be printed
-     * @throws	   java.io.IOException If an error occured while writing
+     * @throws	   java.io.IOException If an error occurred while writing
      */
 
     abstract public void print(char c) throws IOException;
@@ -156,7 +156,7 @@ abstract public class JspWriter extends java.io.Writer {
      *
      * @param      i   The <code>int</code> to be printed
      * @see        java.lang.Integer#toString(int)
-     * @throws	   java.io.IOException If an error occured while writing
+     * @throws	   java.io.IOException If an error occurred while writing
      */
 
     abstract public void print(int i) throws IOException;
@@ -169,7 +169,7 @@ abstract public class JspWriter extends java.io.Writer {
      *
      * @param      l   The <code>long</code> to be printed
      * @see        java.lang.Long#toString(long)
-     * @throws	   java.io.IOException If an error occured while writing
+     * @throws	   java.io.IOException If an error occurred while writing
      */
 
     abstract public void print(long l) throws IOException;
@@ -182,7 +182,7 @@ abstract public class JspWriter extends java.io.Writer {
      *
      * @param      f   The <code>float</code> to be printed
      * @see        java.lang.Float#toString(float)
-     * @throws	   java.io.IOException If an error occured while writing
+     * @throws	   java.io.IOException If an error occurred while writing
      */
 
     abstract public void print(float f) throws IOException;
@@ -195,7 +195,7 @@ abstract public class JspWriter extends java.io.Writer {
      *
      * @param      d   The <code>double</code> to be printed
      * @see        java.lang.Double#toString(double)
-     * @throws	   java.io.IOException If an error occured while writing
+     * @throws	   java.io.IOException If an error occurred while writing
      */
 
     abstract public void print(double d) throws IOException;
@@ -208,7 +208,7 @@ abstract public class JspWriter extends java.io.Writer {
      * @param      s   The array of chars to be printed
      *
      * @throws  NullPointerException  If <code>s</code> is <code>null</code>
-     * @throws	   java.io.IOException If an error occured while writing
+     * @throws	   java.io.IOException If an error occurred while writing
      */
 
     abstract public void print(char s[]) throws IOException;
@@ -220,7 +220,7 @@ abstract public class JspWriter extends java.io.Writer {
      * to the underlying writer.
      *
      * @param      s   The <code>String</code> to be printed
-     * @throws	   java.io.IOException If an error occured while writing
+     * @throws	   java.io.IOException If an error occurred while writing
      */
 
     abstract public void print(String s) throws IOException;
@@ -233,7 +233,7 @@ abstract public class JspWriter extends java.io.Writer {
      *
      * @param      obj   The <code>Object</code> to be printed
      * @see        java.lang.Object#toString()
-     * @throws	   java.io.IOException If an error occured while writing
+     * @throws	   java.io.IOException If an error occurred while writing
      */
 
     abstract public void print(Object obj) throws IOException;
@@ -243,7 +243,7 @@ abstract public class JspWriter extends java.io.Writer {
      * line separator string is defined by the system property
      * <code>line.separator</code>, and is not necessarily a single newline
      * character (<code>'\n'</code>).
-     * @throws	   java.io.IOException If an error occured while writing
+     * @throws	   java.io.IOException If an error occurred while writing
      */
 
     abstract public void println() throws IOException;
@@ -254,7 +254,7 @@ abstract public class JspWriter extends java.io.Writer {
      * <code>{@link #println()}</code>.
      *
      * @param      x the boolean to write
-     * @throws	   java.io.IOException If an error occured while writing
+     * @throws	   java.io.IOException If an error occurred while writing
      */
 
     abstract public void println(boolean x) throws IOException;
@@ -265,7 +265,7 @@ abstract public class JspWriter extends java.io.Writer {
      * #println()}</code>.
      *
      * @param      x the char to write
-     * @throws	   java.io.IOException If an error occured while writing
+     * @throws	   java.io.IOException If an error occurred while writing
      */
 
     abstract public void println(char x) throws IOException;
@@ -276,7 +276,7 @@ abstract public class JspWriter extends java.io.Writer {
      * #println()}</code>.
      *
      * @param      x the int to write
-     * @throws	   java.io.IOException If an error occured while writing
+     * @throws	   java.io.IOException If an error occurred while writing
      */
 
     abstract public void println(int x) throws IOException;
@@ -287,7 +287,7 @@ abstract public class JspWriter extends java.io.Writer {
      * <code>{@link #println()}</code>.
      *
      * @param      x the long to write
-     * @throws	   java.io.IOException If an error occured while writing
+     * @throws	   java.io.IOException If an error occurred while writing
      */
 
     abstract public void println(long x) throws IOException;
@@ -298,7 +298,7 @@ abstract public class JspWriter extends java.io.Writer {
      * <code>{@link #println()}</code>.
      *
      * @param      x the float to write
-     * @throws	   java.io.IOException If an error occured while writing
+     * @throws	   java.io.IOException If an error occurred while writing
      */
 
     abstract public void println(float x) throws IOException;
@@ -309,7 +309,7 @@ abstract public class JspWriter extends java.io.Writer {
      * #print(double)}</code> and then <code>{@link #println()}</code>.
      *
      * @param      x the double to write
-     * @throws	   java.io.IOException If an error occured while writing
+     * @throws	   java.io.IOException If an error occurred while writing
      */
 
     abstract public void println(double x) throws IOException;
@@ -320,7 +320,7 @@ abstract public class JspWriter extends java.io.Writer {
      * <code>println()</code>.
      *
      * @param      x the char[] to write
-     * @throws	   java.io.IOException If an error occured while writing
+     * @throws	   java.io.IOException If an error occurred while writing
      */
 
     abstract public void println(char x[]) throws IOException;
@@ -331,7 +331,7 @@ abstract public class JspWriter extends java.io.Writer {
      * <code>{@link #println()}</code>.
      *
      * @param      x the String to write
-     * @throws	   java.io.IOException If an error occured while writing
+     * @throws	   java.io.IOException If an error occurred while writing
      */
 
     abstract public void println(String x) throws IOException;
@@ -342,7 +342,7 @@ abstract public class JspWriter extends java.io.Writer {
      * <code>{@link #println()}</code>.
      *
      * @param      x the Object to write
-     * @throws	   java.io.IOException If an error occured while writing
+     * @throws	   java.io.IOException If an error occurred while writing
      */
 
     abstract public void println(Object x) throws IOException;

==================================================
SkipPageException.java
index 68d71cb59e..0232ef38cf 100644
--- a/java/javax/servlet/jsp/PageContext.java
+++ b/java/javax/servlet/jsp/PageContext.java
@@ -433,7 +433,7 @@ abstract public class PageContext
      * ServletResponse state after invoking this call.
      *
      * <p>
-     * This method is kept for backwards compatiblity reasons.  Newly
+     * This method is kept for backwards compatibility reasons.  Newly
      * generated code should use PageContext.handlePageException(Throwable).
      *
      * @param e the exception to be handled

==================================================
JspFragment.java
index a8001f8ade..8dfcc13663 100644
--- a/java/javax/servlet/jsp/SkipPageException.java
+++ b/java/javax/servlet/jsp/SkipPageException.java
@@ -20,7 +20,7 @@ package javax.servlet.jsp;
  * Exception to indicate the calling page must cease evaluation.
  * Thrown by a simple tag handler to indicate that the remainder of 
  * the page must not be evaluated.  The result is propagated back to
- * the pagein the case where one tag invokes another (as can be
+ * the page in the case where one tag invokes another (as can be
  * the case with tag files).  The effect is similar to that of a 
  * Classic Tag Handler returning Tag.SKIP_PAGE from doEndTag().
  * Jsp Fragments may also throw this exception.  This exception

==================================================
PageData.java
index 7e46e98863..5182c6c870 100644
--- a/java/javax/servlet/jsp/tagext/JspFragment.java
+++ b/java/javax/servlet/jsp/tagext/JspFragment.java
@@ -60,7 +60,7 @@ public abstract class JspFragment {
      *
      * @param out The Writer to output the fragment to, or null if 
      *     output should be sent to JspContext.getOut().
-     * @throws javax.servlet.jsp.JspException Thrown if an error occured
+     * @throws javax.servlet.jsp.JspException Thrown if an error occurred
      *     while invoking this fragment.
      * @throws javax.servlet.jsp.SkipPageException Thrown if the page
      *     that (either directly or indirectly) invoked the tag handler that

==================================================
SimpleTagSupport.java
index 0cf5ca906f..286b781de1 100644
--- a/java/javax/servlet/jsp/tagext/PageData.java
+++ b/java/javax/servlet/jsp/tagext/PageData.java
@@ -26,7 +26,7 @@ import java.io.InputStream;
  *
  * <p>
  * Objects of this type are generated by the JSP translator, e.g.
- * when being pased to a TagLibraryValidator instance.
+ * when being passed to a TagLibraryValidator instance.
  */
 
 abstract public class PageData {
@@ -41,7 +41,7 @@ abstract public class PageData {
     
     /**
      * Returns an input stream on the XML view of a JSP page.
-     * The stream is encoded in UTF-8.  Recall tht the XML view of a 
+     * The stream is encoded in UTF-8.  Recall that the XML view of a 
      * JSP page has the include directives expanded.
      * 
      * @return An input stream on the document.

==================================================
TagLibraryInfo.java
index 3132acadd3..63ee122f48 100644
--- a/java/javax/servlet/jsp/tagext/SimpleTagSupport.java
+++ b/java/javax/servlet/jsp/tagext/SimpleTagSupport.java
@@ -156,7 +156,7 @@ public class SimpleTagSupport implements SimpleTag {
      * indicate in the description subelement an observable type.
      * The type should be a subtype of the tag handler implementation
      * class or void.
-     * This addititional constraint can be exploited by a
+     * This additional constraint can be exploited by a
      * specialized container that knows about that specific tag library,
      * as in the case of the JSP standard tag library.
      *

==================================================
TagLibraryValidator.java
index 0c0b9e0c55..4d97c7fdbf 100644
--- a/java/javax/servlet/jsp/tagext/TagLibraryInfo.java
+++ b/java/javax/servlet/jsp/tagext/TagLibraryInfo.java
@@ -230,7 +230,7 @@ abstract public class TagLibraryInfo {
      * Returns an array of TagLibraryInfo objects representing the entire set 
      * of tag libraries (including this TagLibraryInfo) imported by taglib 
      * directives in the translation unit that references this TagLibraryInfo. 
-     * If a tag library is imported more than once and bound to different prefices, 
+     * If a tag library is imported more than once and bound to different prefixes, 
      * only the TagLibraryInfo bound to the first prefix must be included 
      * in the returned array.
      * 

==================================================
TagSupport.java
index e98909c684..7ac588004d 100644
--- a/java/javax/servlet/jsp/tagext/TagLibraryValidator.java
+++ b/java/javax/servlet/jsp/tagext/TagLibraryValidator.java
@@ -28,7 +28,7 @@ import java.util.Map;
  * arguments with a tag library.
  *
  * <p>
- * The JSP container is reponsible for locating an appropriate
+ * The JSP container is responsible for locating an appropriate
  * instance of the appropriate subclass by
  *
  * <ul>

==================================================
