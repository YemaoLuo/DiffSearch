cd34d1e0e5c7e48dce61fc7841a3ab1b0b9b44c3
==================================================
Remove unused code
==================================================
Mark Thomas
==================================================
Thu Oct 13 09:55:19 2016 +0000
==================================================
HeaderSink.java
Remove unused code

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1764643 13f79535-47bb-0310-9956-ffa450edef68



==================================================
HpackDecoder.java
index 7a9693273a..603c5ecf4c 100644
--- a/java/org/apache/coyote/http2/HeaderSink.java
+++ b/java/org/apache/coyote/http2/HeaderSink.java
@@ -26,7 +26,7 @@ import org.apache.coyote.http2.HpackDecoder.HeaderEmitter;
 class HeaderSink implements HeaderEmitter {
 
     @Override
-    public void emitHeader(String name, String value, boolean neverIndex) {
+    public void emitHeader(String name, String value) {
         // NO-OP
     }
 }

==================================================
Stream.java
index ab5c3677e3..09938d817d 100644
--- a/java/org/apache/coyote/http2/HpackDecoder.java
+++ b/java/org/apache/coyote/http2/HpackDecoder.java
@@ -109,7 +109,7 @@ public class HpackDecoder {
                     buffer.position(originalPos);
                     return;
                 }
-                headerEmitter.emitHeader(headerName, headerValue, false);
+                headerEmitter.emitHeader(headerName, headerValue);
                 addEntryToHeaderTable(new Hpack.HeaderField(headerName, headerValue));
             } else if ((b & 0b11110000) == 0) {
                 //Literal Header Field without Indexing
@@ -123,7 +123,7 @@ public class HpackDecoder {
                     buffer.position(originalPos);
                     return;
                 }
-                headerEmitter.emitHeader(headerName, headerValue, false);
+                headerEmitter.emitHeader(headerName, headerValue);
             } else if ((b & 0b11110000) == 0b00010000) {
                 //Literal Header Field never indexed
                 String headerName = readHeaderName(buffer, 4);
@@ -136,7 +136,7 @@ public class HpackDecoder {
                     buffer.position(originalPos);
                     return;
                 }
-                headerEmitter.emitHeader(headerName, headerValue, true);
+                headerEmitter.emitHeader(headerName, headerValue);
             } else if ((b & 0b11100000) == 0b00100000) {
                 //context update max table size change
                 if (!handleMaxMemorySizeChange(buffer, originalPos)) {
@@ -246,7 +246,7 @@ public class HpackDecoder {
         } else {
             int adjustedIndex = getRealIndex(index - Hpack.STATIC_TABLE_LENGTH);
             Hpack.HeaderField headerField = headerTable[adjustedIndex];
-            headerEmitter.emitHeader(headerField.name, headerField.value, false);
+            headerEmitter.emitHeader(headerField.name, headerField.value);
         }
     }
 
@@ -273,7 +273,7 @@ public class HpackDecoder {
         if (entry.value == null) {
             throw new HpackException();
         }
-        headerEmitter.emitHeader(entry.name, entry.value, false);
+        headerEmitter.emitHeader(entry.name, entry.value);
     }
 
     private void addEntryToHeaderTable(Hpack.HeaderField entry) {
@@ -327,7 +327,7 @@ public class HpackDecoder {
      * Interface that can be used to immediately validate headers (ex: uppercase detection).
      */
     interface HeaderEmitter {
-        void emitHeader(String name, String value, boolean neverIndex);
+        void emitHeader(String name, String value);
     }
 
 

==================================================
Http2TestBase.java
index 445872ae6f..c7299ed908 100644
--- a/java/org/apache/coyote/http2/Stream.java
+++ b/java/org/apache/coyote/http2/Stream.java
@@ -189,7 +189,7 @@ class Stream extends AbstractStream implements HeaderEmitter {
 
 
     @Override
-    public final void emitHeader(String name, String value, boolean neverIndex) {
+    public final void emitHeader(String name, String value) {
         if (log.isDebugEnabled()) {
             log.debug(sm.getString("stream.header.debug", getConnectionId(), getIdentifier(),
                     name, value));

==================================================
TestHpack.java
index e2b096e2c9..5272eec587 100644
--- a/test/org/apache/coyote/http2/Http2TestBase.java
+++ b/test/org/apache/coyote/http2/Http2TestBase.java
@@ -791,7 +791,7 @@ public abstract class Http2TestBase extends TomcatBaseTest {
 
 
         @Override
-        public void emitHeader(String name, String value, boolean neverIndex) {
+        public void emitHeader(String name, String value) {
             // Date headers will always change so use a hard-coded default
             if ("date".equals(name)) {
                 value = DEFAULT_DATE;

==================================================
