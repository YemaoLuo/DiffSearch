0894128be7134417dd56daa893bba62d540cd602
==================================================
SpotBugs
==================================================
Mark Thomas
==================================================
Wed Dec 6 15:35:29 2017 +0000
==================================================
PEMFile.java
SpotBugs
Avoid implicit use of platform default encoding

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1817302 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestDigestAuthenticator.java
index 0087d9c405..cb36759bed 100644
--- a/java/org/apache/tomcat/util/net/jsse/PEMFile.java
+++ b/java/org/apache/tomcat/util/net/jsse/PEMFile.java
@@ -18,8 +18,10 @@ package org.apache.tomcat.util.net.jsse;
 
 import java.io.BufferedReader;
 import java.io.ByteArrayInputStream;
-import java.io.FileReader;
+import java.io.FileInputStream;
 import java.io.IOException;
+import java.io.InputStreamReader;
+import java.nio.charset.StandardCharsets;
 import java.security.GeneralSecurityException;
 import java.security.InvalidKeyException;
 import java.security.KeyFactory;
@@ -71,7 +73,8 @@ class PEMFile {
         this.filename = filename;
 
         List<Part> parts = new ArrayList<>();
-        try (BufferedReader in = new BufferedReader(new FileReader(filename))) {
+        try (BufferedReader in = new BufferedReader(new InputStreamReader(
+                new FileInputStream(filename), StandardCharsets.US_ASCII))) {
             Part part = null;
             String line;
             while ((line = in.readLine()) != null) {

==================================================
TestSSOnonLoginAndDigestAuthenticator.java
index d558757198..b119b443d3 100644
--- a/test/org/apache/catalina/authenticator/TestDigestAuthenticator.java
+++ b/test/org/apache/catalina/authenticator/TestDigestAuthenticator.java
@@ -383,7 +383,6 @@ public class TestDigestAuthenticator extends TomcatBaseTest {
     }
 
     private static String digest(String input) {
-        return MD5Encoder.encode(
-                ConcurrentMessageDigest.digestMD5(input.getBytes()));
+        return MD5Encoder.encode(ConcurrentMessageDigest.digestMD5(input.getBytes()));
     }
 }

==================================================
TesterDigestAuthenticatorPerformance.java
index dafc71bd83..ba7bdae55b 100644
--- a/test/org/apache/catalina/authenticator/TestSSOnonLoginAndDigestAuthenticator.java
+++ b/test/org/apache/catalina/authenticator/TestSSOnonLoginAndDigestAuthenticator.java
@@ -16,6 +16,7 @@
  */
 package org.apache.catalina.authenticator;
 
+import java.nio.charset.StandardCharsets;
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
@@ -458,8 +459,8 @@ public class TestSSOnonLoginAndDigestAuthenticator extends TomcatBaseTest {
     }
 
     private static String digest(String input) {
-        return MD5Encoder.encode(
-                ConcurrentMessageDigest.digestMD5(input.getBytes()));
+        return MD5Encoder.encode(ConcurrentMessageDigest.digestMD5(
+                input.getBytes(StandardCharsets.UTF_8)));
     }
 
     /*

==================================================
TestRequest.java
index 13c3ec6962..1ec9429352 100644
--- a/test/org/apache/catalina/authenticator/TesterDigestAuthenticatorPerformance.java
+++ b/test/org/apache/catalina/authenticator/TesterDigestAuthenticatorPerformance.java
@@ -17,6 +17,7 @@
 package org.apache.catalina.authenticator;
 
 import java.io.IOException;
+import java.nio.charset.StandardCharsets;
 import java.util.concurrent.atomic.AtomicInteger;
 
 import javax.servlet.http.HttpServletResponse;
@@ -160,9 +161,9 @@ public class TesterDigestAuthenticatorPerformance {
         private static final String A2 = METHOD + ":" + CONTEXT_PATH + URI;
 
         private static final String MD5A1 = MD5Encoder.encode(
-                ConcurrentMessageDigest.digest("MD5", A1.getBytes()));
+                ConcurrentMessageDigest.digest("MD5", A1.getBytes(StandardCharsets.UTF_8)));
         private static final String MD5A2 = MD5Encoder.encode(
-                ConcurrentMessageDigest.digest("MD5", A2.getBytes()));
+                ConcurrentMessageDigest.digest("MD5", A2.getBytes(StandardCharsets.UTF_8)));
 
 
 
@@ -214,8 +215,8 @@ public class TesterDigestAuthenticatorPerformance {
             String response = MD5A1 + ":" + nonce + ":" + ncString + ":" +
                     cnonce + ":" + QOP + ":" + MD5A2;
 
-            String md5response = MD5Encoder.encode(
-                    ConcurrentMessageDigest.digest("MD5", response.getBytes()));
+            String md5response = MD5Encoder.encode(ConcurrentMessageDigest.digest(
+                    "MD5", response.getBytes(StandardCharsets.UTF_8)));
 
             StringBuilder auth = new StringBuilder();
             auth.append("Digest username=\"");

==================================================
TestSendFile.java
index 5c6b909678..c0850ed4e6 100644
--- a/test/org/apache/catalina/connector/TestRequest.java
+++ b/test/org/apache/catalina/connector/TestRequest.java
@@ -931,7 +931,7 @@ public class TestRequest extends TomcatBaseTest {
 
         tomcat.start();
 
-        byte[] body = "Test".getBytes();
+        byte[] body = "Test".getBytes(userAgentCharaceterEncoding);
         ByteChunk bc = new ByteChunk();
         Map<String,List<String>> reqHeaders = new HashMap<>();
         reqHeaders.put("Content-Type",

==================================================
TestNonBlockingAPI.java
index 0301ea48a6..2a2e9e6a3c 100644
--- a/test/org/apache/catalina/connector/TestSendFile.java
+++ b/test/org/apache/catalina/connector/TestSendFile.java
@@ -105,8 +105,8 @@ public class TestSendFile extends TomcatBaseTest {
             }
             w.flush();
         }
-        System.out
-                .println("Created file:" + f.getAbsolutePath() + " with " + f.length() + " bytes.");
+        System.out.println(
+                "Created file:" + f.getAbsolutePath() + " with " + f.length() + " bytes.");
         return f;
 
     }

==================================================
EchoRpcTest.java
index 166d8172a8..835bd17dfb 100644
--- a/test/org/apache/catalina/nonblocking/TestNonBlockingAPI.java
+++ b/test/org/apache/catalina/nonblocking/TestNonBlockingAPI.java
@@ -412,8 +412,8 @@ public class TestNonBlockingAPI extends TomcatBaseTest {
         final int max = 5;
         int count = 0;
         long delay = 0;
-        byte[] b = "WANTMORE".getBytes();
-        byte[] f = "FINISHED".getBytes();
+        byte[] b = "WANTMORE".getBytes(StandardCharsets.ISO_8859_1);
+        byte[] f = "FINISHED".getBytes(StandardCharsets.ISO_8859_1);
 
         public DataWriter(long delay) {
             this.delay = delay;

==================================================
TestUpgrade.java
index 39de1dbf0f..59f10033ce 100644
--- a/test/org/apache/catalina/tribes/demos/EchoRpcTest.java
+++ b/test/org/apache/catalina/tribes/demos/EchoRpcTest.java
@@ -17,6 +17,7 @@
 package org.apache.catalina.tribes.demos;
 
 import java.io.Serializable;
+import java.nio.charset.StandardCharsets;
 
 import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.ManagedChannel;
@@ -42,7 +43,7 @@ public class EchoRpcTest implements RpcCallback, Runnable {
         this.message = message;
         this.pause = pause;
         this.options = options;
-        this.rpc = new RpcChannel(name.getBytes(),channel,this);
+        this.rpc = new RpcChannel(name.getBytes(StandardCharsets.UTF_8),channel,this);
         this.timeout = timeout;
         this.name = name;
     }

==================================================
TestUpgradeInternalHandler.java
index a137268a45..94729592a0 100644
--- a/test/org/apache/coyote/http11/upgrade/TestUpgrade.java
+++ b/test/org/apache/coyote/http11/upgrade/TestUpgrade.java
@@ -26,6 +26,7 @@ import java.io.PrintWriter;
 import java.io.Reader;
 import java.io.Writer;
 import java.net.Socket;
+import java.nio.charset.StandardCharsets;
 
 import javax.net.SocketFactory;
 import javax.servlet.ReadListener;
@@ -228,8 +229,9 @@ public class TestUpgrade extends TomcatBaseTest {
                 throw new IllegalArgumentException(ioe);
             }
 
-            BufferedReader reader = new BufferedReader(new InputStreamReader(is));
-            Writer writer = new OutputStreamWriter(os);
+            BufferedReader reader =
+                    new BufferedReader(new InputStreamReader(is, StandardCharsets.UTF_8));
+            Writer writer = new OutputStreamWriter(os, StandardCharsets.UTF_8);
 
             this.writer = writer;
             this.reader = reader;

==================================================
TestWsPingPongMessages.java
index a6b53f6d0e..367f06f5b3 100644
--- a/test/org/apache/coyote/http11/upgrade/TestUpgradeInternalHandler.java
+++ b/test/org/apache/coyote/http11/upgrade/TestUpgradeInternalHandler.java
@@ -27,6 +27,7 @@ import java.io.Writer;
 import java.net.Socket;
 import java.nio.ByteBuffer;
 import java.nio.channels.CompletionHandler;
+import java.nio.charset.StandardCharsets;
 import java.util.concurrent.TimeUnit;
 
 import javax.net.SocketFactory;
@@ -159,8 +160,9 @@ public class TestUpgradeInternalHandler extends TomcatBaseTest {
                 throw new IllegalArgumentException(ioe);
             }
 
-            BufferedReader reader = new BufferedReader(new InputStreamReader(is));
-            Writer writer = new OutputStreamWriter(os);
+            BufferedReader reader =
+                    new BufferedReader(new InputStreamReader(is, StandardCharsets.UTF_8));
+            Writer writer = new OutputStreamWriter(os, StandardCharsets.UTF_8);
 
             this.writer = writer;
             this.reader = reader;

==================================================
CompressionServletResponseWrapper.java
index 32af691d77..faa892c6ae 100644
--- a/test/org/apache/tomcat/websocket/TestWsPingPongMessages.java
+++ b/test/org/apache/tomcat/websocket/TestWsPingPongMessages.java
@@ -18,6 +18,7 @@ package org.apache.tomcat.websocket;
 
 import java.net.URI;
 import java.nio.ByteBuffer;
+import java.nio.charset.StandardCharsets;
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.TimeUnit;
 
@@ -39,8 +40,8 @@ import org.apache.tomcat.websocket.TesterMessageCountClient.TesterProgrammaticEn
 
 public class TestWsPingPongMessages extends WebSocketBaseTest {
 
-    ByteBuffer applicationData = ByteBuffer.wrap(new String("mydata")
-            .getBytes());
+    ByteBuffer applicationData =
+            ByteBuffer.wrap(new String("mydata").getBytes(StandardCharsets.UTF_8));
 
     @Test
     public void testPingPongMessages() throws Exception {

==================================================
