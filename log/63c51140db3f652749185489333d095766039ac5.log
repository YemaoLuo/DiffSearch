63c51140db3f652749185489333d095766039ac5
==================================================
Fix Eclipse warnings prior to working on bz49884 refactoring
==================================================
Mark Emlyn
==================================================
Sun Sep 12 08:05:35 2010 +0000
==================================================
Http11Processor.java
Fix Eclipse warnings prior to working on bz49884 refactoring

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@996261 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AbstractEndpoint.java
index 5b6a41fac3..7a31c9b527 100644
--- a/java/org/apache/coyote/http11/Http11Processor.java
+++ b/java/org/apache/coyote/http11/Http11Processor.java
@@ -325,7 +325,7 @@ public class Http11Processor extends AbstractHttp11Processor implements ActionHo
     }
     
     
-    public SocketState asyncDispatch(SocketStatus status) throws IOException {
+    public SocketState asyncDispatch(SocketStatus status) {
 
         RequestInfo rp = request.getRequestProcessor();
         try {
@@ -405,6 +405,7 @@ public class Http11Processor extends AbstractHttp11Processor implements ActionHo
      * @param actionCode Type of the action
      * @param param Action parameter
      */
+    @Override
     public void action(ActionCode actionCode, Object param) {
 
         if (actionCode == ActionCode.ACTION_COMMIT) {

==================================================
JIoEndpoint.java
index d2bd6b6005..b97e8e3e6e 100644
--- a/java/org/apache/tomcat/util/net/AbstractEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AbstractEndpoint.java
@@ -462,15 +462,16 @@ public abstract class AbstractEndpoint {
     public abstract void destroy() throws Exception;
     
     public String adjustRelativePath(String path, String relativeTo) {
-        File f = new File(path);
+        String newPath = path;
+        File f = new File(newPath);
         if ( !f.isAbsolute()) {
-            path = relativeTo + File.separator + path;
-            f = new File(path);
+            newPath = relativeTo + File.separator + newPath;
+            f = new File(newPath);
         }
         if (!f.exists()) {
-            getLog().warn("configured file:["+path+"] does not exist.");
+            getLog().warn("configured file:["+newPath+"] does not exist.");
         }
-        return path;
+        return newPath;
     }
     
     public String defaultIfNull(String val, String defaultValue) {

==================================================
