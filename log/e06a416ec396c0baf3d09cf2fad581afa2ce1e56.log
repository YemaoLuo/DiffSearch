e06a416ec396c0baf3d09cf2fad581afa2ce1e56
==================================================
Fix the redundant superinterface warnings. Just cleanup, No functional change.
==================================================
Mark Emlyn
==================================================
Fri Dec 18 17:23:00 2009 +0000
==================================================
FileMessage.java
Fix the redundant superinterface warnings. Just cleanup, No functional change.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@892320 13f79535-47bb-0310-9956-ffa450edef68



==================================================
SessionIDMessage.java
index 01ce00e57b..c8b694a03a 100644
--- a/java/org/apache/catalina/ha/deploy/FileMessage.java
+++ b/java/org/apache/catalina/ha/deploy/FileMessage.java
@@ -17,9 +17,6 @@
 
 package org.apache.catalina.ha.deploy;
 
-import java.io.Serializable;
-
-import org.apache.catalina.ha.ClusterMessage;
 import org.apache.catalina.tribes.Member;
 import org.apache.catalina.ha.ClusterMessageBase;
 
@@ -30,7 +27,7 @@ import org.apache.catalina.ha.ClusterMessageBase;
  * @version 1.0
  */
 
-public class FileMessage extends ClusterMessageBase implements ClusterMessage, Serializable {
+public class FileMessage extends ClusterMessageBase {
     private int messageNumber;
     private byte[] data;
     private int dataLength;

==================================================
SessionMessageImpl.java
index f698c2b71a..52d80addd6 100644
--- a/java/org/apache/catalina/ha/session/SessionIDMessage.java
+++ b/java/org/apache/catalina/ha/session/SessionIDMessage.java
@@ -16,7 +16,6 @@
  */
 package org.apache.catalina.ha.session;
 
-import org.apache.catalina.ha.ClusterMessage;
 import org.apache.catalina.ha.ClusterMessageBase;
 
 /**
@@ -26,7 +25,7 @@ import org.apache.catalina.ha.ClusterMessageBase;
  * 
  * @version $Revision$ $Date$
  */
-public class SessionIDMessage extends ClusterMessageBase implements ClusterMessage {
+public class SessionIDMessage extends ClusterMessageBase {
 
 	private int messageNumber;
 

==================================================
LazyReplicatedMap.java
index a23e31b33e..6550bc25ce 100644
--- a/java/org/apache/catalina/ha/session/SessionMessageImpl.java
+++ b/java/org/apache/catalina/ha/session/SessionMessageImpl.java
@@ -27,7 +27,7 @@ import org.apache.catalina.ha.ClusterMessageBase;
  * 
  * @version $Revision$ $Date$
  */
-public class SessionMessageImpl extends ClusterMessageBase implements SessionMessage, java.io.Serializable {
+public class SessionMessageImpl extends ClusterMessageBase implements SessionMessage {
     
     public SessionMessageImpl() {
     }

==================================================
ReplicatedMap.java
index 19e6f2a871..f3a5fd92d6 100644
--- a/java/org/apache/catalina/tribes/tipis/LazyReplicatedMap.java
+++ b/java/org/apache/catalina/tribes/tipis/LazyReplicatedMap.java
@@ -20,10 +20,7 @@ import java.io.Serializable;
 
 import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.ChannelException;
-import org.apache.catalina.tribes.ChannelListener;
 import org.apache.catalina.tribes.Member;
-import org.apache.catalina.tribes.MembershipListener;
-import org.apache.catalina.tribes.group.RpcCallback;
 import org.apache.catalina.tribes.util.Arrays;
 import org.apache.catalina.tribes.UniqueId;
 
@@ -67,8 +64,7 @@ import org.apache.juli.logging.LogFactory;
  * @author Filip Hanik
  * @version 1.0
  */
-public class LazyReplicatedMap extends AbstractReplicatedMap 
-    implements RpcCallback, ChannelListener, MembershipListener {
+public class LazyReplicatedMap extends AbstractReplicatedMap {
     private static final Log log = LogFactory.getLog(LazyReplicatedMap.class);
     
 

==================================================
BioReceiver.java
index 8e544e7e88..776a10df15 100644
--- a/java/org/apache/catalina/tribes/tipis/ReplicatedMap.java
+++ b/java/org/apache/catalina/tribes/tipis/ReplicatedMap.java
@@ -20,12 +20,7 @@ import java.io.Serializable;
 
 import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.ChannelException;
-import org.apache.catalina.tribes.ChannelListener;
 import org.apache.catalina.tribes.Member;
-import org.apache.catalina.tribes.MembershipListener;
-import org.apache.catalina.tribes.group.RpcCallback;
-import org.apache.juli.logging.Log;
-import org.apache.juli.logging.LogFactory;
 
 /**
  * All-to-all replication for a hash map implementation. Each node in the cluster will carry an identical 
@@ -51,9 +46,7 @@ import org.apache.juli.logging.LogFactory;
  * @todo memberDisappeared, should do nothing except change map membership
  *       by default it relocates the primary objects
  */
-public class ReplicatedMap extends AbstractReplicatedMap implements RpcCallback, ChannelListener, MembershipListener {
-
-    private static final Log log = LogFactory.getLog(ReplicatedMap.class);
+public class ReplicatedMap extends AbstractReplicatedMap {
 
 //------------------------------------------------------------------------------
 //              CONSTRUCTORS / DESTRUCTORS

==================================================
BioSender.java
index daae2fd8f2..25a626efc4 100644
--- a/java/org/apache/catalina/tribes/transport/bio/BioReceiver.java
+++ b/java/org/apache/catalina/tribes/transport/bio/BioReceiver.java
@@ -20,8 +20,6 @@ import java.io.IOException;
 import java.net.ServerSocket;
 import java.net.Socket;
 
-import org.apache.catalina.tribes.ChannelReceiver;
-import org.apache.catalina.tribes.io.ListenCallback;
 import org.apache.catalina.tribes.io.ObjectReader;
 import org.apache.catalina.tribes.transport.ReceiverBase;
 import org.apache.catalina.tribes.transport.RxTaskPool;
@@ -35,7 +33,7 @@ import org.apache.juli.logging.LogFactory;
  * @author Filip Hanik
  * @version $Revision$ $Date$
  */
-public class BioReceiver extends ReceiverBase implements Runnable, ChannelReceiver, ListenCallback {
+public class BioReceiver extends ReceiverBase implements Runnable {
 
     private static final Log log = LogFactory.getLog(BioReceiver.class);
 

==================================================
NioReceiver.java
index 240b920b81..dbf7769132 100644
--- a/java/org/apache/catalina/tribes/transport/bio/BioSender.java
+++ b/java/org/apache/catalina/tribes/transport/bio/BioSender.java
@@ -41,7 +41,7 @@ import org.apache.catalina.tribes.util.StringManager;
  * @version $Revision$ $Date$
  * @since 5.5.16
  */
-public class BioSender extends AbstractSender implements DataSender {
+public class BioSender extends AbstractSender {
 
     private static final org.apache.juli.logging.Log log = org.apache.juli.logging.LogFactory.getLog(BioSender.class);
 

==================================================
NioSender.java
index 4a9cdbf9ee..3c805a8600 100644
--- a/java/org/apache/catalina/tribes/transport/nio/NioReceiver.java
+++ b/java/org/apache/catalina/tribes/transport/nio/NioReceiver.java
@@ -27,8 +27,6 @@ import java.nio.channels.ServerSocketChannel;
 import java.nio.channels.SocketChannel;
 import java.util.Iterator;
 
-import org.apache.catalina.tribes.ChannelReceiver;
-import org.apache.catalina.tribes.io.ListenCallback;
 import org.apache.catalina.tribes.io.ObjectReader;
 import org.apache.catalina.tribes.transport.Constants;
 import org.apache.catalina.tribes.transport.ReceiverBase;
@@ -47,7 +45,7 @@ import java.nio.channels.ClosedSelectorException;
  * @author Filip Hanik
  * @version $Revision$ $Date$
  */
-public class NioReceiver extends ReceiverBase implements Runnable, ChannelReceiver, ListenCallback {
+public class NioReceiver extends ReceiverBase implements Runnable {
 
     private static final Log log = LogFactory.getLog(NioReceiver.class);
 

==================================================
PooledParallelSender.java
index b734bf4145..16813f94da 100644
--- a/java/org/apache/catalina/tribes/transport/nio/NioSender.java
+++ b/java/org/apache/catalina/tribes/transport/nio/NioSender.java
@@ -28,7 +28,6 @@ import java.util.Arrays;
 
 import org.apache.catalina.tribes.io.XByteBuffer;
 import org.apache.catalina.tribes.transport.AbstractSender;
-import org.apache.catalina.tribes.transport.DataSender;
 import org.apache.catalina.tribes.RemoteProcessException;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
@@ -50,7 +49,7 @@ import java.net.*;
  * @author Filip Hanik
  * @version 1.0
  */
-public class NioSender extends AbstractSender implements DataSender{
+public class NioSender extends AbstractSender {
 
     private static final Log log = LogFactory.getLog(NioSender.class);
 

==================================================
ExtendedAccessLogValve.java
index 1e9490be0f..d016ee8968 100644
--- a/java/org/apache/catalina/tribes/transport/nio/PooledParallelSender.java
+++ b/java/org/apache/catalina/tribes/transport/nio/PooledParallelSender.java
@@ -23,7 +23,6 @@ import org.apache.catalina.tribes.ChannelMessage;
 import org.apache.catalina.tribes.Member;
 import org.apache.catalina.tribes.transport.AbstractSender;
 import org.apache.catalina.tribes.transport.DataSender;
-import org.apache.catalina.tribes.transport.MultiPointSender;
 import org.apache.catalina.tribes.transport.PooledSender;
 
 /**
@@ -36,7 +35,7 @@ import org.apache.catalina.tribes.transport.PooledSender;
  * @author not attributable
  * @version 1.0
  */
-public class PooledParallelSender extends PooledSender implements MultiPointSender {
+public class PooledParallelSender extends PooledSender {
     protected boolean connected = true;
     public PooledParallelSender() {
         super();

==================================================
AttributeInfo.java
index 5908948427..6229aafef6 100644
--- a/java/org/apache/catalina/valves/ExtendedAccessLogValve.java
+++ b/java/org/apache/catalina/valves/ExtendedAccessLogValve.java
@@ -33,7 +33,6 @@ import java.util.TimeZone;
 import javax.servlet.http.Cookie;
 import javax.servlet.http.HttpSession;
 
-import org.apache.catalina.Lifecycle;
 import org.apache.catalina.connector.Request;
 import org.apache.catalina.connector.Response;
 import org.apache.catalina.util.ServerInfo;
@@ -129,9 +128,7 @@ import org.apache.juli.logging.LogFactory;
  * @version $Revision$ $Date$
  */
 
-public class ExtendedAccessLogValve
-    extends AccessLogValve
-    implements Lifecycle {
+public class ExtendedAccessLogValve extends AccessLogValve {
 
     private static final Log log = LogFactory.getLog(ExtendedAccessLogValve.class);
 

==================================================
ConstructorInfo.java
index 808267dd82..21d65d9f1c 100644
--- a/java/org/apache/tomcat/util/modeler/AttributeInfo.java
+++ b/java/org/apache/tomcat/util/modeler/AttributeInfo.java
@@ -15,12 +15,8 @@
  * limitations under the License.
  */
 
-
 package org.apache.tomcat.util.modeler;
 
-
-import java.io.Serializable;
-
 import javax.management.MBeanAttributeInfo;
 
 
@@ -30,7 +26,7 @@ import javax.management.MBeanAttributeInfo;
  *
  * @author Craig R. McClanahan
  */
-public class AttributeInfo extends FeatureInfo implements Serializable {
+public class AttributeInfo extends FeatureInfo {
     static final long serialVersionUID = -2511626862303972143L;
 
     // ----------------------------------------------------- Instance Variables

==================================================
NotificationInfo.java
index 61e472e481..9cb27149ed 100644
--- a/java/org/apache/tomcat/util/modeler/ConstructorInfo.java
+++ b/java/org/apache/tomcat/util/modeler/ConstructorInfo.java
@@ -15,12 +15,9 @@
  * limitations under the License.
  */
 
-
 package org.apache.tomcat.util.modeler;
 
 
-import java.io.Serializable;
-
 import javax.management.MBeanConstructorInfo;
 
 
@@ -30,7 +27,7 @@ import javax.management.MBeanConstructorInfo;
  *
  * @author Craig R. McClanahan
  */
-public class ConstructorInfo extends OperationInfo implements Serializable {
+public class ConstructorInfo extends OperationInfo {
     static final long serialVersionUID = -5735336213417238238L;
     // ------------------------------------------------------------- Properties
 

==================================================
OperationInfo.java
index 8d02338f36..1767f96753 100644
--- a/java/org/apache/tomcat/util/modeler/NotificationInfo.java
+++ b/java/org/apache/tomcat/util/modeler/NotificationInfo.java
@@ -19,8 +19,6 @@
 package org.apache.tomcat.util.modeler;
 
 
-import java.io.Serializable;
-
 import javax.management.MBeanNotificationInfo;
 
 
@@ -32,7 +30,7 @@ import javax.management.MBeanNotificationInfo;
  * @version $Revision$ $Date$
  */
 
-public class NotificationInfo extends FeatureInfo implements Serializable {
+public class NotificationInfo extends FeatureInfo {
     static final long serialVersionUID = -6319885418912650856L;
 
     // ----------------------------------------------------- Instance Variables

==================================================
ParameterInfo.java
index cf9ec62eee..d1a71caf1d 100644
--- a/java/org/apache/tomcat/util/modeler/OperationInfo.java
+++ b/java/org/apache/tomcat/util/modeler/OperationInfo.java
@@ -19,8 +19,6 @@
 package org.apache.tomcat.util.modeler;
 
 
-import java.io.Serializable;
-
 import javax.management.MBeanOperationInfo;
 import javax.management.MBeanParameterInfo;
 
@@ -31,7 +29,7 @@ import javax.management.MBeanParameterInfo;
  *
  * @author Craig R. McClanahan
  */
-public class OperationInfo extends FeatureInfo implements Serializable {
+public class OperationInfo extends FeatureInfo {
     static final long serialVersionUID = 4418342922072614875L;
     // ----------------------------------------------------------- Constructors
 

==================================================
