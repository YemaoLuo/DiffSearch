1c250a35a8367905bdebd5f2a900ab1262e4dcc1
==================================================
After a few wrong turns, take another stab at some debug logging for the ocassional NIO2 failure in the CI build. I don't expect this to find the problem, just point us in the right direction.
==================================================
Mark Thomas
==================================================
Tue Feb 17 19:25:07 2015 +0000
==================================================
UpgradeProcessor.java
index 0c1985f9da..085e0a9629 100644
--- a/java/org/apache/coyote/http11/upgrade/LocalStrings.properties
+++ b/java/org/apache/coyote/http11/upgrade/LocalStrings.properties
@@ -15,6 +15,9 @@
 
 upgradeProcessor.isCloseFail=Failed to close input stream associated with upgraded connection
 upgradeProcessor.osCloseFail=Failed to close output stream associated with upgraded connection
+upgradeProcessor.requiredClose=Closing upgraded connection due to closeRequired state of streams: Input [{0}], Output [{1}]
+upgradeProcessor.stop=Closing upgraded connection as incoming socket status was STOP
+upgradeProcessor.unexpectedState=Closing upgraded connection unexpectedly as incoming socket status was [{0}]
 
 upgrade.sis.errorCloseFail=Failed to close InputStream cleanly after a previous error
 upgrade.sis.isFinished.ise=It is illegal to call isFinished() when the ServletInputStream is not in non-blocking mode (i.e. setReadListener() must be called first)

==================================================
TestWebSocketFrameClientSSL.java
index 90bd3080c5..49aba002d0 100644
--- a/java/org/apache/coyote/http11/upgrade/UpgradeProcessor.java
+++ b/java/org/apache/coyote/http11/upgrade/UpgradeProcessor.java
@@ -103,6 +103,9 @@ public class UpgradeProcessor implements Processor, WebConnection {
         } else if (status == SocketStatus.OPEN_WRITE) {
             upgradeServletOutputStream.onWritePossible();
         } else if (status == SocketStatus.STOP) {
+            if (log.isDebugEnabled()) {
+                log.debug(sm.getString("upgradeProcessor.stop"));
+            }
             try {
                 upgradeServletInputStream.close();
             } catch (IOException ioe) {
@@ -116,10 +119,18 @@ public class UpgradeProcessor implements Processor, WebConnection {
             return SocketState.CLOSED;
         } else {
             // Unexpected state
+            if (log.isDebugEnabled()) {
+                log.debug(sm.getString("upgradeProcessor.unexpectedState"));
+            }
             return SocketState.CLOSED;
         }
         if (upgradeServletInputStream.isCloseRequired() ||
                 upgradeServletOutputStream.isCloseRequired()) {
+            if (log.isDebugEnabled()) {
+                log.debug(sm.getString("upgradeProcessor.requiredClose",
+                        Boolean.valueOf(upgradeServletInputStream.isCloseRequired()),
+                        Boolean.valueOf(upgradeServletOutputStream.isCloseRequired())));
+            }
             return SocketState.CLOSED;
         }
         return SocketState.UPGRADED;

==================================================
