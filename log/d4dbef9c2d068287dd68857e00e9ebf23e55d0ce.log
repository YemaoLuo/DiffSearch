d4dbef9c2d068287dd68857e00e9ebf23e55d0ce
==================================================
- Call onClose before actually closing anything (sending a close message closes the endpoint).
==================================================
Remy Maucherat
==================================================
Thu Jan 23 14:42:21 2014 +0000
==================================================
WsRemoteEndpointImplBase.java
- Call onClose before actually closing anything (sending a close message closes the endpoint).
- If onClose throws an exception, call onError.
- After using a blocking send, clear the client buffer in case it gets reused (I have no idea why this is needed ...).

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1560702 13f79535-47bb-0310-9956-ffa450edef68



==================================================
WsSession.java
index 8831f2cc93..97d7a51147 100644
--- a/java/org/apache/tomcat/websocket/WsRemoteEndpointImplBase.java
+++ b/java/org/apache/tomcat/websocket/WsRemoteEndpointImplBase.java
@@ -234,6 +234,7 @@ public abstract class WsRemoteEndpointImplBase implements RemoteEndpoint {
             } else {
                 f2sh.get(timeout, TimeUnit.MILLISECONDS);
             }
+            payload.clear();
         } catch (InterruptedException | ExecutionException |
                 TimeoutException e) {
             throw new IOException(e);

==================================================
PojoEndpointBase.java
index d23a1f1858..922a141e64 100644
--- a/java/org/apache/tomcat/websocket/WsSession.java
+++ b/java/org/apache/tomcat/websocket/WsSession.java
@@ -45,6 +45,7 @@ import javax.websocket.WebSocketContainer;
 
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
+import org.apache.tomcat.util.ExceptionUtils;
 import org.apache.tomcat.util.res.StringManager;
 
 public class WsSession implements Session {
@@ -413,8 +414,8 @@ public class WsSession implements Session {
 
             state = State.CLOSING;
 
-            sendCloseMessage(closeReasonMessage);
             fireEndpointOnClose(closeReasonLocal);
+            sendCloseMessage(closeReasonMessage);
 
             state = State.CLOSED;
         }
@@ -436,8 +437,8 @@ public class WsSession implements Session {
 
         synchronized (stateLock) {
             if (state == State.OPEN) {
-                sendCloseMessage(closeReason);
                 fireEndpointOnClose(closeReason);
+                sendCloseMessage(closeReason);
                 state = State.CLOSED;
             }
 
@@ -455,6 +456,9 @@ public class WsSession implements Session {
         t.setContextClassLoader(applicationClassLoader);
         try {
             localEndpoint.onClose(this, closeReason);
+        } catch (Throwable throwable) {
+            ExceptionUtils.handleThrowable(throwable);
+            localEndpoint.onError(this, throwable);
         } finally {
             t.setContextClassLoader(cl);
         }

==================================================
