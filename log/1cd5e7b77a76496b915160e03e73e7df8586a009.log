1cd5e7b77a76496b915160e03e73e7df8586a009
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51226
==================================================
Mark Emlyn
==================================================
Tue May 24 16:04:08 2011 +0000
==================================================
FindLeaksTask.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51226
Add a findleaks Ant task for the Manager app.
Based on a patch by Eiji Takahashi

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1127122 13f79535-47bb-0310-9956-ffa450edef68



==================================================
HTMLManagerServlet.java
new file mode 100644
index 0000000000..7eda625b9b
--- /dev/null
+++ b/java/org/apache/catalina/ant/FindLeaksTask.java
@@ -0,0 +1,57 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ * 
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.catalina.ant;
+
+import org.apache.tools.ant.BuildException;
+
+/**
+ * Ant task that implements the <code>/findleaks</code> command, supported by
+ * the Tomcat manager application.
+ */
+public class FindLeaksTask extends AbstractCatalinaTask {
+
+    private boolean statusLine = true;
+
+    /**
+     * Sets the statusLine parameter that controls if the response includes a
+     * status line or not.
+     */
+    public void setStatusLine(boolean statusLine) {
+        this.statusLine = statusLine;
+    }
+
+    /**
+     * Returns the statusLine parameter that controls if the response includes a
+     * status line or not.
+     */
+    public boolean getStatusLine() {
+        return statusLine;
+    }
+
+    /**
+     * Execute the requested operation.
+     *
+     * @exception BuildException if an error occurs
+     */
+    @Override
+    public void execute() throws BuildException {
+
+        super.execute();
+        execute("/findleaks?statusLine=" + Boolean.toString(statusLine));
+    }
+
+}

==================================================
ManagerServlet.java
index 8e1f50aae7..ae0a83f35f 100644
--- a/java/org/apache/catalina/manager/LocalStrings.properties
+++ b/java/org/apache/catalina/manager/LocalStrings.properties
@@ -75,6 +75,8 @@ managerServlet.deployFailed=FAIL - Failed to deploy application at context path
 managerServlet.deployedButNotStarted=FAIL - Deployed application at context path {0} but context failed to start
 managerServlet.exception=FAIL - Encountered exception {0}
 managerServlet.findleaksFail=FAIL - Find leaks failed: Host not instance of StandardHost
+managerServlet.findleaksList=OK - Found potential memory leaks in the following applications:
+managerServlet.findleaksNone=OK - No memory leaks found
 managerServlet.invalidPath=FAIL - Invalid context path {0} was specified
 managerServlet.invalidWar=FAIL - Invalid application URL {0} was specified
 managerServlet.listed=OK - Listed applications for virtual host {0}

==================================================
