1e25a6731a0d1d4f0ef24cb6214de5a21a771ae4
==================================================
A new configuration property 'crawlerIps' is added to the 'o.a.catalina.valves.CrawlerSessionManagerValve'. Using this property one can specify a regular expression that will be used to identify crawlers based on their IP address. Based on a patch provided by Tetradeus via GitHub.
==================================================
Violeta Georgieva
==================================================
Mon Jun 12 21:04:53 2017 +0000
==================================================
CrawlerSessionManagerValve.java
A new configuration property 'crawlerIps' is added to the 'o.a.catalina.valves.CrawlerSessionManagerValve'. Using this property one can specify a regular expression that will be used to identify crawlers based on their IP address. Based on a patch provided by Tetradeus via GitHub.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1798533 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestCrawlerSessionManagerValve.java
index 49816df080..e3f12ff2ce 100644
--- a/java/org/apache/catalina/valves/CrawlerSessionManagerValve.java
+++ b/java/org/apache/catalina/valves/CrawlerSessionManagerValve.java
@@ -49,6 +49,10 @@ public class CrawlerSessionManagerValve extends ValveBase implements HttpSession
 
     private String crawlerUserAgents = ".*[bB]ot.*|.*Yahoo! Slurp.*|.*Feedfetcher-Google.*";
     private Pattern uaPattern = null;
+
+    private String crawlerIps = null;
+    private Pattern ipPattern = null;
+
     private int sessionInactiveInterval = 60;
 
 
@@ -85,6 +89,31 @@ public class CrawlerSessionManagerValve extends ValveBase implements HttpSession
     }
 
 
+    /**
+     * Specify the regular expression (using {@link Pattern}) that will be used
+     * to identify crawlers based on their IP address. The default is no crawler
+     * IPs.
+     *
+     * @param crawlerIps The regular expression using {@link Pattern}
+     */
+    public void setCrawlerIps(String crawlerIps) {
+        this.crawlerIps = crawlerIps;
+        if (crawlerIps == null || crawlerIps.length() == 0) {
+            ipPattern = null;
+        } else {
+            ipPattern = Pattern.compile(crawlerIps);
+        }
+    }
+
+    /**
+     * @see #setCrawlerIps(String)
+     * @return The current regular expression being used to match IP addresses.
+     */
+    public String getCrawlerIps() {
+        return crawlerIps;
+    }
+
+
     /**
      * Specify the session timeout (in seconds) for a crawler's session. This is
      * typically lower than that for a user session. The default is 60 seconds.
@@ -122,11 +151,11 @@ public class CrawlerSessionManagerValve extends ValveBase implements HttpSession
 
         boolean isBot = false;
         String sessionId = null;
-        String clientIp = null;
+        String clientIp = request.getRemoteAddr();
 
         if (log.isDebugEnabled()) {
-            log.debug(request.hashCode() + ": ClientIp=" + request.getRemoteAddr()
-                    + ", RequestedSessionId=" + request.getRequestedSessionId());
+            log.debug(request.hashCode() + ": ClientIp=" + clientIp + ", RequestedSessionId="
+                    + request.getRequestedSessionId());
         }
 
         // If the incoming request has a valid session ID, no action is required
@@ -155,9 +184,16 @@ public class CrawlerSessionManagerValve extends ValveBase implements HttpSession
                 }
             }
 
+            if (ipPattern != null && ipPattern.matcher(clientIp).matches()) {
+                isBot = true;
+
+                if (log.isDebugEnabled()) {
+                    log.debug(request.hashCode() + ": Bot found. IP=" + clientIp);
+                }
+            }
+
             // If this is a bot, is the session ID known?
             if (isBot) {
-                clientIp = request.getRemoteAddr();
                 sessionId = clientIpSessionId.get(clientIp);
                 if (sessionId != null) {
                     request.setRequestedSessionId(sessionId);

==================================================
