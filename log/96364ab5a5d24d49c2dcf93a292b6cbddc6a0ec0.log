96364ab5a5d24d49c2dcf93a292b6cbddc6a0ec0
==================================================
Push creation of the SendfileData into the SocketWrapper
==================================================
Mark Thomas
==================================================
Fri Jan 23 19:03:32 2015 +0000
==================================================
Http11AprProcessor.java
Push creation of the SendfileData into the SocketWrapper

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1654327 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http11Nio2Processor.java
index 5bd0359b57..3febb2fc39 100644
--- a/java/org/apache/coyote/http11/Http11AprProcessor.java
+++ b/java/org/apache/coyote/http11/Http11AprProcessor.java
@@ -324,12 +324,11 @@ public class Http11AprProcessor extends AbstractHttp11Processor<Long> {
             // No entity body sent here
             getOutputBuffer().addActiveFilter(outputFilters[Constants.VOID_FILTER]);
             contentDelimitation = true;
-            sendfileData = new AprEndpoint.SendfileData();
-            sendfileData.fileName = fileName;
-            sendfileData.pos = ((Long) request.getAttribute(
-                    org.apache.coyote.Constants.SENDFILE_FILE_START_ATTR)).longValue();
-            sendfileData.length = ((Long) request.getAttribute(
-                    org.apache.coyote.Constants.SENDFILE_FILE_END_ATTR)).longValue() - sendfileData.pos;
+            sendfileData = socketWrapper.createSendfileData(fileName,
+                    ((Long) request.getAttribute(
+                            org.apache.coyote.Constants.SENDFILE_FILE_START_ATTR)).longValue(),
+                    ((Long) request.getAttribute(
+                            org.apache.coyote.Constants.SENDFILE_FILE_END_ATTR)).longValue() - sendfileData.pos);
             return true;
         }
         return false;

==================================================
Http11NioProcessor.java
index 75f08dbdd7..c6b4dbec3f 100644
--- a/java/org/apache/coyote/http11/Http11Nio2Processor.java
+++ b/java/org/apache/coyote/http11/Http11Nio2Processor.java
@@ -318,12 +318,11 @@ public class Http11Nio2Processor extends AbstractHttp11Processor<Nio2Channel> {
             // No entity body sent here
             getOutputBuffer().addActiveFilter(outputFilters[Constants.VOID_FILTER]);
             contentDelimitation = true;
-            sendfileData = new Nio2Endpoint.SendfileData();
-            sendfileData.fileName = fileName;
-            sendfileData.pos = ((Long) request.getAttribute(
-                    org.apache.coyote.Constants.SENDFILE_FILE_START_ATTR)).longValue();
-            sendfileData.length = ((Long) request.getAttribute(
-                    org.apache.coyote.Constants.SENDFILE_FILE_END_ATTR)).longValue() - sendfileData.pos;
+            sendfileData = socketWrapper.createSendfileData(fileName,
+                    ((Long) request.getAttribute(
+                            org.apache.coyote.Constants.SENDFILE_FILE_START_ATTR)).longValue(),
+                    ((Long) request.getAttribute(
+                            org.apache.coyote.Constants.SENDFILE_FILE_END_ATTR)).longValue() - sendfileData.pos);
             return true;
         }
         return false;

==================================================
AprEndpoint.java
index 02d4b8bd2a..7db5151a8c 100644
--- a/java/org/apache/coyote/http11/Http11NioProcessor.java
+++ b/java/org/apache/coyote/http11/Http11NioProcessor.java
@@ -284,12 +284,11 @@ public class Http11NioProcessor extends AbstractHttp11Processor<NioChannel> {
             // No entity body sent here
             getOutputBuffer().addActiveFilter(outputFilters[Constants.VOID_FILTER]);
             contentDelimitation = true;
-            sendfileData = new NioEndpoint.SendfileData();
-            sendfileData.fileName = fileName;
-            sendfileData.pos = ((Long) request.getAttribute(
-                    org.apache.coyote.Constants.SENDFILE_FILE_START_ATTR)).longValue();
-            sendfileData.length = ((Long) request.getAttribute(
-                    org.apache.coyote.Constants.SENDFILE_FILE_END_ATTR)).longValue() - sendfileData.pos;
+            sendfileData = socketWrapper.createSendfileData(fileName,
+                    ((Long) request.getAttribute(
+                            org.apache.coyote.Constants.SENDFILE_FILE_START_ATTR)).longValue(),
+                    ((Long) request.getAttribute(
+                            org.apache.coyote.Constants.SENDFILE_FILE_END_ATTR)).longValue() - sendfileData.pos);
             return true;
         }
         return false;

==================================================
Nio2Endpoint.java
index 8c6511a770..984074d112 100644
--- a/java/org/apache/tomcat/util/net/AprEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AprEndpoint.java
@@ -1913,7 +1913,6 @@ public class AprEndpoint extends AbstractEndpoint<Long> {
 
     // ----------------------------------------------- SendfileData Inner Class
 
-
     /**
      * SendfileData class.
      */
@@ -1923,12 +1922,15 @@ public class AprEndpoint extends AbstractEndpoint<Long> {
         protected long fdpool;
         // Socket and socket pool
         protected long socket;
+
+        public SendfileData(String filename, long pos, long length) {
+            super(filename, pos, length);
+        }
     }
 
 
     // --------------------------------------------------- Sendfile Inner Class
 
-
     public class Sendfile implements Runnable {
 
         protected long sendfilePollset = 0;
@@ -2644,6 +2646,12 @@ public class AprEndpoint extends AbstractEndpoint<Long> {
         }
 
 
+        @Override
+        public SendfileDataBase createSendfileData(String filename, long pos, long length) {
+            return new SendfileData(filename, pos, length);
+        }
+
+
         @Override
         public SendfileState processSendfile(SendfileDataBase sendfileData) {
             ((SendfileData) sendfileData).socket = getSocket().longValue();

==================================================
NioEndpoint.java
index 0ded6d04f4..d9c566e103 100644
--- a/java/org/apache/tomcat/util/net/Nio2Endpoint.java
+++ b/java/org/apache/tomcat/util/net/Nio2Endpoint.java
@@ -1306,6 +1306,12 @@ public class Nio2Endpoint extends AbstractEndpoint<Nio2Channel> {
         }
 
 
+        @Override
+        public SendfileDataBase createSendfileData(String filename, long pos, long length) {
+            return new SendfileData(filename, pos, length);
+        }
+
+
         @Override
         public SendfileState processSendfile(SendfileDataBase sendfileData) {
             setSendfileData((SendfileData) sendfileData);
@@ -1625,5 +1631,9 @@ public class Nio2Endpoint extends AbstractEndpoint<Nio2Channel> {
         private ByteBuffer buffer;
         private boolean doneInline = false;
         private boolean error = false;
+
+        public SendfileData(String filename, long pos, long length) {
+            super(filename, pos, length);
+        }
     }
 }

==================================================
SendfileDataBase.java
index b6f6e221f1..160c21cd43 100644
--- a/java/org/apache/tomcat/util/net/NioEndpoint.java
+++ b/java/org/apache/tomcat/util/net/NioEndpoint.java
@@ -1585,6 +1585,12 @@ public class NioEndpoint extends AbstractEndpoint<NioChannel> {
         }
 
 
+
+        @Override
+        public SendfileDataBase createSendfileData(String filename, long pos, long length) {
+            return new SendfileData(filename, pos, length);
+        }
+
         @Override
         public SendfileState processSendfile(SendfileDataBase sendfileData) {
             setSendfileData((SendfileData) sendfileData);
@@ -1774,6 +1780,11 @@ public class NioEndpoint extends AbstractEndpoint<NioChannel> {
      * SendfileData class.
      */
     public static class SendfileData extends SendfileDataBase {
+
+        public SendfileData(String filename, long pos, long length) {
+            super(filename, pos, length);
+        }
+
         protected volatile FileChannel fchannel;
     }
 }

==================================================
SocketWrapperBase.java
index e14a736a66..fc89b11936 100644
--- a/java/org/apache/tomcat/util/net/SendfileDataBase.java
+++ b/java/org/apache/tomcat/util/net/SendfileDataBase.java
@@ -30,7 +30,7 @@ public abstract class SendfileDataBase {
      * The full path to the file that contains the data to be written to the
      * socket.
      */
-    public String fileName;
+    public final String fileName;
 
     /**
      * The position of the next byte in the file to be written to the socket.
@@ -45,4 +45,10 @@ public abstract class SendfileDataBase {
      * point and then updated as the file is written.
      */
     public long length;
+
+    public SendfileDataBase(String filename, long pos, long length) {
+        this.fileName = filename;
+        this.pos = pos;
+        this.length = length;
+    }
 }

==================================================
