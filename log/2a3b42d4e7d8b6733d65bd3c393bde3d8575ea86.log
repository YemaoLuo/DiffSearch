2a3b42d4e7d8b6733d65bd3c393bde3d8575ea86
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=53701
==================================================
Mark Emlyn
==================================================
Tue Aug 14 18:14:42 2012 +0000
==================================================
ServletInputStream.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=53701
Javadoc fixes provided by Sebb.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1373003 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ServletOutputStream.java
index f2752f5c0d..030595c791 100644
--- a/java/javax/servlet/ServletInputStream.java
+++ b/java/javax/servlet/ServletInputStream.java
@@ -105,7 +105,6 @@ public abstract class ServletInputStream extends InputStream {
 
     /**
      * TODO SERVLET 3.1
-     * @return
      */
     public abstract void setReadListener(javax.servlet.ReadListener listener);
 }

==================================================
JspException.java
index 9488e9c955..c3c6541cc2 100644
--- a/java/javax/servlet/ServletOutputStream.java
+++ b/java/javax/servlet/ServletOutputStream.java
@@ -282,6 +282,5 @@ public abstract class ServletOutputStream extends OutputStream {
 
     /**
      * TODO SERVLET 3.1
-     * @return
      */
     public abstract void setWriteListener(javax.servlet.WriteListener listener);}

==================================================
Executor.java
index 7e378ee6a7..67671f52a3 100644
--- a/java/javax/servlet/jsp/JspException.java
+++ b/java/javax/servlet/jsp/JspException.java
@@ -53,7 +53,7 @@ public class JspException extends Exception {
      * <code>java.lang.Throwable.getCause()</code> and {@link #getRootCause()}
      * methods.
      *
-     * @see <code>java.lang.Exception.Exception(String, Throwable)</code>
+     * @see java.lang.Exception#Exception(String, Throwable)
      *
      * @param message       a <code>String</code> containing the text of the
      *                      exception message
@@ -74,7 +74,7 @@ public class JspException extends Exception {
      * <code>java.lang.Throwable.getCause()</code> and {@link #getRootCause()}
      * methods.
      *
-     * @see <code>java.lang.Exception.Exception(Throwable)</code>
+     * @see java.lang.Exception#Exception(Throwable)
      *
      * @param cause         the <code>Throwable</code> exception that
      *                      interfered with the JSP's normal operation, making

==================================================
Manager.java
index 0f7d49ac03..5f323c70b1 100644
--- a/java/org/apache/catalina/Executor.java
+++ b/java/org/apache/catalina/Executor.java
@@ -31,7 +31,7 @@ public interface Executor extends java.util.concurrent.Executor, Lifecycle {
      * time until it throws a RejectedExecutionException
      *
      * @param command the runnable task
-     * @throws org.apache.catalina.util.RejectedExecutionException if this task
+     * @throws java.util.concurrent.RejectedExecutionException if this task
      * cannot be accepted for execution - the queue is full
      * @throws NullPointerException if command or unit is null
      */

==================================================
ErrorHandler.java
index ab54a829d7..42cdbfcf76 100644
--- a/java/org/apache/catalina/Manager.java
+++ b/java/org/apache/catalina/Manager.java
@@ -64,7 +64,7 @@ public interface Manager {
      *
      * @param container The newly associated Container
      *
-     * @deprecated Use {@link #setContext()}. This method will be removed in
+     * @deprecated Use {@link #setContext(Context)}. This method will be removed in
      *             Tomcat 9 onwards.
      */
     @Deprecated
@@ -80,7 +80,7 @@ public interface Manager {
     /**
      * Set the Container with which this Manager is associated.
      *
-     * @param container The newly associated Context
+     * @param context The newly associated Context
      */
     public void setContext(Context context);
 

==================================================
SelectorContext.java
index 6ea95a6d1b..c5e80fe892 100644
--- a/java/org/apache/catalina/tribes/ErrorHandler.java
+++ b/java/org/apache/catalina/tribes/ErrorHandler.java
@@ -32,14 +32,14 @@ public interface ErrorHandler {
      * Invoked if the message is dispatched asynch, and an error occurs
      * @param x ChannelException - the error that happened
      * @param id - the unique id for the message
-     * @see Channel#send(Member[], Serializable, int, ErrorHandler)
+     * @see Channel#send(Member[], java.io.Serializable, int, ErrorHandler)
      */
     public void handleError(ChannelException x, UniqueId id);
 
     /**
      * Invoked when the message has been sent successfully.
      * @param id - the unique id for the message
-     * @see Channel#send(Member[], Serializable, int, ErrorHandler)
+     * @see Channel#send(Member[], java.io.Serializable, int, ErrorHandler)
      */
     public void handleCompletion(UniqueId id);
 

==================================================
FileItem.java
index 93d867459f..f0abbbad7e 100644
--- a/java/org/apache/naming/SelectorContext.java
+++ b/java/org/apache/naming/SelectorContext.java
@@ -169,7 +169,7 @@ public class SelectorContext implements Context {
      * @param obj the object to bind; possibly null
      * @exception javax.naming.NameAlreadyBoundException if name is already
      * bound
-     * @exception javax.naming.InvalidAttributesException if object did not
+     * @exception javax.naming.directory.InvalidAttributesException if object did not
      * supply all mandatory attributes
      * @exception NamingException if a naming exception is encountered
      */
@@ -187,7 +187,7 @@ public class SelectorContext implements Context {
      * @param obj the object to bind; possibly null
      * @exception javax.naming.NameAlreadyBoundException if name is already
      * bound
-     * @exception javax.naming.InvalidAttributesException if object did not
+     * @exception javax.naming.directory.InvalidAttributesException if object did not
      * supply all mandatory attributes
      * @exception NamingException if a naming exception is encountered
      */
@@ -209,7 +209,7 @@ public class SelectorContext implements Context {
      *
      * @param name the name to bind; may not be empty
      * @param obj the object to bind; possibly null
-     * @exception javax.naming.InvalidAttributesException if object did not
+     * @exception javax.naming.directory.InvalidAttributesException if object did not
      * supply all mandatory attributes
      * @exception NamingException if a naming exception is encountered
      */
@@ -225,7 +225,7 @@ public class SelectorContext implements Context {
      *
      * @param name the name to bind; may not be empty
      * @param obj the object to bind; possibly null
-     * @exception javax.naming.InvalidAttributesException if object did not
+     * @exception javax.naming.directory.InvalidAttributesException if object did not
      * supply all mandatory attributes
      * @exception NamingException if a naming exception is encountered
      */
@@ -462,7 +462,7 @@ public class SelectorContext implements Context {
      * @return the newly created context
      * @exception javax.naming.NameAlreadyBoundException if name is already
      * bound
-     * @exception javax.naming.InvalidAttributesException if creation of the
+     * @exception javax.naming.directory.InvalidAttributesException if creation of the
      * sub-context requires specification of mandatory attributes
      * @exception NamingException if a naming exception is encountered
      */
@@ -480,7 +480,7 @@ public class SelectorContext implements Context {
      * @return the newly created context
      * @exception javax.naming.NameAlreadyBoundException if name is already
      * bound
-     * @exception javax.naming.InvalidAttributesException if creation of the
+     * @exception javax.naming.directory.InvalidAttributesException if creation of the
      * sub-context requires specification of mandatory attributes
      * @exception NamingException if a naming exception is encountered
      */

==================================================
CompressionResponseStream.java
index 3ca227a30c..f452c5708c 100644
--- a/java/org/apache/tomcat/util/http/fileupload/FileItem.java
+++ b/java/org/apache/tomcat/util/http/fileupload/FileItem.java
@@ -30,7 +30,7 @@ import java.io.UnsupportedEncodingException;
  * <p> After retrieving an instance of this class from a {@link
  * org.apache.tomcat.util.http.fileupload.FileUpload FileUpload} instance (see
  * {@link org.apache.tomcat.util.http.fileupload.FileUpload
- * #parseRequest(javax.servlet.http.HttpServletRequest)}), you may
+ * #parseRequest(RequestContext)}), you may
  * either request all contents of the file at once using {@link #get()} or
  * request an {@link java.io.InputStream InputStream} with
  * {@link #getInputStream()} and process the file without attempting to load

==================================================
