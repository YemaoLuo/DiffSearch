73c91a108d6938c188befe132363f9c314740f0a
==================================================
Trailing whitespace removal from /webapps
==================================================
Mark Emlyn
==================================================
Sat Oct 22 21:26:20 2011 +0000
==================================================
Hello.java
index 294b8f9d81..a316a23af4 100644
--- a/webapps/docs/appdev/sample/index.html
+++ b/webapps/docs/appdev/sample/index.html
@@ -21,22 +21,22 @@
 </head>
 <body>
 <h2>Sample Application</h2>
-      <p> 
-        The example app has been packaged as a war file and can be downloaded 
-        <a href="sample.war">here</a> (Note: make sure your browser doesn't 
+      <p>
+        The example app has been packaged as a war file and can be downloaded
+        <a href="sample.war">here</a> (Note: make sure your browser doesn't
         change file extension or append a new one).
       </p>
-      <p> 
-        The easiest way to run this application is simply to move the war file 
-        to your <b>CATALINA_HOME/webapps</b> directory. Tomcat will automatically 
-        expand and deploy the application for you. You can view it with the 
-        following URL (assuming that you're running tomcat on port 8080 
+      <p>
+        The easiest way to run this application is simply to move the war file
+        to your <b>CATALINA_HOME/webapps</b> directory. Tomcat will automatically
+        expand and deploy the application for you. You can view it with the
+        following URL (assuming that you're running tomcat on port 8080
         as is the default):
         <br />
         <a href="http://localhost:8080/sample">http://localhost:8080/sample</a>
       </p>
       <p>
-        If you just want to browse the contents, you can unpack the war file 
+        If you just want to browse the contents, you can unpack the war file
         with the <b>jar</b> command.
       </p>
       <pre>

==================================================
CookieExample.java
index ad5596c7d4..bb6a5ea092 100644
--- a/webapps/docs/windows-service-howto.xml
+++ b/webapps/docs/windows-service-howto.xml
@@ -42,9 +42,9 @@
 <p>
     <b>Tomcat7w</b> is a GUI application for monitoring and configuring Tomcat
     services.
-</p>    
+</p>
     <p>The available command line options are:</p>
-<p> 
+<p>
     <table>
     <tr><th>//ES//</th>
         <td>Edit service configuration</td>
@@ -63,7 +63,7 @@
     Each command line directive is in the form of <b>//XX//ServiceName</b>
 </p>
     <p>The available command line options are:</p>
-<p> 
+<p>
     <table>
     <tr><th>//TS//</th>
         <td>Run the service as console application</td>
@@ -90,9 +90,9 @@
     <tr><th>//DS//</th>
         <td>Delete service</td>
         <td>Stops the service if running</td>
-    </tr>        
+    </tr>
     </table>
-</p> 
+</p>
 </section>
 <section name="Command line parameters">
 <p>
@@ -103,7 +103,7 @@
     prefixed with <code>PR_</code> exists it will take precedence.
     For example:
 <source>set PR_CLASSPATH=xx.jar</source>
-</p>    
+</p>
 <p>is equivalent to providing
 <source>--Classpath=xx.jar</source>
 </p>
@@ -112,13 +112,13 @@
     PR_JVMMS, PR_JVMMX, PR_JVMSS, PR_STARTPARAMS, PR_STOPPARAMS and
     PR_STOPTIMEOUT will not work until this bug is fixed:
     <a href="http://issues.apache.org/jira/browse/DAEMON-49">DAEMON-49</a></p>
-<p> 
+<p>
     <table>
     <tr>
     <th>ParameterName</th>
     <th>Default</th>
     <th>Description</th>
-    </tr> 
+    </tr>
     <tr>
     <td>--Description</td>
     <td></td>
@@ -298,9 +298,9 @@
     <td>--StdError</td>
     <td></td>
     <td>Redirected stderr filename</td>
-    </tr>    
+    </tr>
     </table>
-</p> 
+</p>
 </section>
 <section name="Installing services">
 <p>
@@ -314,7 +314,7 @@ a user to use for the installation of the service.
 Account Control (UAC) you must either disable UAC or right-click on cmd.exe and
 select "Run as administrator" in order to run this script. If UAC is enabled
 neither being logged on with an Administrator account, nor using the
-<code>/user</code> switch is sufficient.  
+<code>/user</code> switch is sufficient.
 </p>
 <p>
 <source>
@@ -378,4 +378,4 @@ C:\> tomcat7
 </p>
 </section>
 </body>
-</document> 
+</document>

==================================================
RequestHeaderExample.java
index 00b5b899af..538c101ea9 100644
--- a/webapps/examples/WEB-INF/classes/CookieExample.java
+++ b/webapps/examples/WEB-INF/classes/CookieExample.java
@@ -41,13 +41,13 @@ public class CookieExample extends HttpServlet {
     private static final long serialVersionUID = 1L;
 
     private static final ResourceBundle RB = ResourceBundle.getBundle("LocalStrings");
-    
+
     @Override
     public void doGet(HttpServletRequest request,
                       HttpServletResponse response)
         throws IOException, ServletException
     {
-        
+
         String cookieName = request.getParameter("cookiename");
         String cookieValue = request.getParameter("cookievalue");
         Cookie aCookie = null;
@@ -72,7 +72,7 @@ public class CookieExample extends HttpServlet {
 
         // XXX
         // making these absolute till we work out the
-        // addition of a PathInfo issue 
+        // addition of a PathInfo issue
 
         out.println("<a href=\"../cookies.html\">");
         out.println("<img src=\"../images/code.gif\" height=24 " +
@@ -90,7 +90,7 @@ public class CookieExample extends HttpServlet {
                 Cookie cookie = cookies[i];
                 out.print("Cookie Name: " + HTMLFilter.filter(cookie.getName())
                           + "<br>");
-                out.println("  Cookie Value: " 
+                out.println("  Cookie Value: "
                             + HTMLFilter.filter(cookie.getValue())
                             + "<br><br>");
             }
@@ -101,12 +101,12 @@ public class CookieExample extends HttpServlet {
         if (aCookie != null) {
             out.println("<P>");
             out.println(RB.getString("cookies.set") + "<br>");
-            out.print(RB.getString("cookies.name") + "  " 
+            out.print(RB.getString("cookies.name") + "  "
                       + HTMLFilter.filter(cookieName) + "<br>");
-            out.print(RB.getString("cookies.value") + "  " 
+            out.print(RB.getString("cookies.value") + "  "
                       + HTMLFilter.filter(cookieValue));
         }
-        
+
         out.println("<P>");
         out.println(RB.getString("cookies.make-cookie") + "<br>");
         out.print("<form action=\"");
@@ -116,8 +116,8 @@ public class CookieExample extends HttpServlet {
         out.print(RB.getString("cookies.value") + "  ");
         out.println("<input type=text length=20 name=cookievalue><br>");
         out.println("<input type=submit></form>");
-            
-            
+
+
         out.println("</body>");
         out.println("</html>");
     }

==================================================
RequestInfoExample.java
index b42da02b4b..778350e3f7 100644
--- a/webapps/examples/WEB-INF/classes/RequestHeaderExample.java
+++ b/webapps/examples/WEB-INF/classes/RequestHeaderExample.java
@@ -41,7 +41,7 @@ public class RequestHeaderExample extends HttpServlet {
     private static final long serialVersionUID = 1L;
 
     private static final ResourceBundle RB = ResourceBundle.getBundle("LocalStrings");
-    
+
     @Override
     public void doGet(HttpServletRequest request,
                       HttpServletResponse response)
@@ -63,7 +63,7 @@ public class RequestHeaderExample extends HttpServlet {
 
         // XXX
         // making these absolute till we work out the
-        // addition of a PathInfo issue 
+        // addition of a PathInfo issue
 
         out.println("<a href=\"../reqheaders.html\">");
         out.println("<img src=\"../images/code.gif\" height=24 " +

==================================================
RequestParamExample.java
index ecb31316b5..922270368a 100644
--- a/webapps/examples/WEB-INF/classes/RequestInfoExample.java
+++ b/webapps/examples/WEB-INF/classes/RequestInfoExample.java
@@ -79,30 +79,30 @@ public class RequestInfoExample extends HttpServlet {
         out.println(request.getMethod());
         out.println("</td></tr><tr><td>");
         out.println(RB.getString("requestinfo.label.requesturi"));
-        out.println("</td><td>");        
+        out.println("</td><td>");
         out.println(HTMLFilter.filter(request.getRequestURI()));
-        out.println("</td></tr><tr><td>");        
+        out.println("</td></tr><tr><td>");
         out.println(RB.getString("requestinfo.label.protocol"));
-        out.println("</td><td>");        
+        out.println("</td><td>");
         out.println(request.getProtocol());
         out.println("</td></tr><tr><td>");
         out.println(RB.getString("requestinfo.label.pathinfo"));
-        out.println("</td><td>");        
+        out.println("</td><td>");
         out.println(HTMLFilter.filter(request.getPathInfo()));
         out.println("</td></tr><tr><td>");
         out.println(RB.getString("requestinfo.label.remoteaddr"));
 
         String cipherSuite=
             (String)request.getAttribute("javax.servlet.request.cipher_suite");
-        out.println("</td><td>");                
+        out.println("</td><td>");
         out.println(request.getRemoteAddr());
         out.println("</table>");
-        
+
         if(cipherSuite!=null){
             out.println("</td></tr><tr><td>");
             out.println("SSLCipherSuite:");
             out.println("</td>");
-            out.println("<td>");    
+            out.println("<td>");
             out.println(request.getAttribute("javax.servlet.request.cipher_suite"));
             out.println("</td>");
         }

==================================================
SessionExample.java
index aceea086fa..7d1f159fe3 100644
--- a/webapps/examples/WEB-INF/classes/RequestParamExample.java
+++ b/webapps/examples/WEB-INF/classes/RequestParamExample.java
@@ -40,7 +40,7 @@ public class RequestParamExample extends HttpServlet {
     private static final long serialVersionUID = 1L;
 
     private static final ResourceBundle RB = ResourceBundle.getBundle("LocalStrings");
-    
+
     @Override
     public void doGet(HttpServletRequest request,
                       HttpServletResponse response)
@@ -64,7 +64,7 @@ public class RequestParamExample extends HttpServlet {
 
         // XXX
         // making these absolute till we work out the
-        // addition of a PathInfo issue 
+        // addition of a PathInfo issue
 
         out.println("<a href=\"../reqparams.html\">");
         out.println("<img src=\"../images/code.gif\" height=24 " +

==================================================
Async1.java
index 34b393ec41..b2574c68f8 100644
--- a/webapps/examples/WEB-INF/classes/SessionExample.java
+++ b/webapps/examples/WEB-INF/classes/SessionExample.java
@@ -43,7 +43,7 @@ public class SessionExample extends HttpServlet {
     private static final long serialVersionUID = 1L;
 
     private static final ResourceBundle RB = ResourceBundle.getBundle("LocalStrings");
-    
+
     @Override
     public void doGet(HttpServletRequest request,
                       HttpServletResponse response)
@@ -66,8 +66,8 @@ public class SessionExample extends HttpServlet {
 
         // XXX
         // making these absolute till we work out the
-        // addition of a PathInfo issue 
-        
+        // addition of a PathInfo issue
+
         out.println("<a href=\"../sessions.html\">");
         out.println("<img src=\"../images/code.gif\" height=24 " +
                     "width=24 align=right border=0 alt=\"view code\"></a>");
@@ -95,9 +95,9 @@ public class SessionExample extends HttpServlet {
         out.println(RB.getString("sessions.data") + "<br>");
         Enumeration<String> names = session.getAttributeNames();
         while (names.hasMoreElements()) {
-            String name = names.nextElement(); 
+            String name = names.nextElement();
             String value = session.getAttribute(name).toString();
-            out.println(HTMLFilter.filter(name) + " = " 
+            out.println(HTMLFilter.filter(name) + " = "
                         + HTMLFilter.filter(value) + "<br>");
         }
 
@@ -132,10 +132,10 @@ public class SessionExample extends HttpServlet {
         out.print("<p><a href=\"");
         out.print(response.encodeURL("SessionExample?dataname=foo&datavalue=bar"));
         out.println("\" >URL encoded </a>");
-        
+
         out.println("</body>");
         out.println("</html>");
-        
+
         out.println("</body>");
         out.println("</html>");
     }

==================================================
Async2.java
index a2a3e462ae..dc0dc5912e 100644
--- a/webapps/examples/WEB-INF/classes/async/Async1.java
+++ b/webapps/examples/WEB-INF/classes/async/Async1.java
@@ -57,6 +57,6 @@ public class Async1 extends HttpServlet {
         Thread t = new Thread(run);
         t.start();
     }
-    
+
 
 }

==================================================
Async3.java
index ac37e506af..736da93b1e 100644
--- a/webapps/examples/WEB-INF/classes/async/Async2.java
+++ b/webapps/examples/WEB-INF/classes/async/Async2.java
@@ -59,6 +59,6 @@ public class Async2 extends HttpServlet {
         Thread t = new Thread(run);
         t.start();
     }
-    
+
 
 }

==================================================
AsyncStockServlet.java
index 37b7ed1b31..e1ff5e0411 100644
--- a/webapps/examples/WEB-INF/classes/async/Async3.java
+++ b/webapps/examples/WEB-INF/classes/async/Async3.java
@@ -34,6 +34,6 @@ public class Async3 extends HttpServlet {
         actx.setTimeout(30*1000);
         actx.dispatch("/jsp/async/async3.jsp");
     }
-    
+
 
 }

==================================================
Stockticker.java
index f21ba56c2f..0d8280e2af 100644
--- a/webapps/examples/WEB-INF/classes/async/AsyncStockServlet.java
+++ b/webapps/examples/WEB-INF/classes/async/AsyncStockServlet.java
@@ -41,12 +41,12 @@ public class AsyncStockServlet extends HttpServlet implements TickListener, Asyn
     public static final String POLL = "POLL";
     public static final String LONG_POLL = "LONG-POLL";
     public static final String STREAM = "STREAM";
-    
+
     static ArrayList<Stock> ticks = new ArrayList<Stock>();
     static ConcurrentLinkedQueue<AsyncContext> clients = new ConcurrentLinkedQueue<AsyncContext>();
     static AtomicInteger clientcount = new AtomicInteger(0);
     static Stockticker ticker = new Stockticker();
-    
+
     public AsyncStockServlet() {
         System.out.println("AsyncStockServlet created");
     }
@@ -81,7 +81,7 @@ public class AsyncStockServlet extends HttpServlet implements TickListener, Asyn
             writeStock(actx, stock);
         }
     }
-    
+
     public void writeStock(AsyncContext actx, Stock stock) {
         HttpServletResponse response = (HttpServletResponse)actx.getResponse();
         try {

==================================================
JspCalendar.java
index 889d06f593..97687d7325 100644
--- a/webapps/examples/WEB-INF/classes/async/Stockticker.java
+++ b/webapps/examples/WEB-INF/classes/async/Stockticker.java
@@ -27,14 +27,14 @@ public class Stockticker implements Runnable {
         ArrayList<TickListener> listeners = new ArrayList<TickListener>();
         protected volatile Thread ticker = null;
         protected volatile int ticknr = 0;
-        
+
         public synchronized void start() {
             run = true;
             ticker = new Thread(this);
             ticker.setName("Ticker Thread");
             ticker.start();
         }
-        
+
         public synchronized void stop() {
             run = false;
             try {
@@ -42,15 +42,15 @@ public class Stockticker implements Runnable {
             }catch (InterruptedException x) {
                 Thread.interrupted();
             }
-            
+
             ticker = null;
         }
-        
+
         public void addTickListener(TickListener listener) {
             if (listeners.add(listener)) {
                 if (counter.incrementAndGet()==1) start();
             }
-                
+
         }
 
         public void removeTickListener(TickListener listener) {
@@ -83,7 +83,7 @@ public class Stockticker implements Runnable {
                         for (TickListener l : listeners) {
                             l.tick(stock);
                         }
-                        
+
                     }
                     Thread.sleep(850);
                 }
@@ -93,12 +93,12 @@ public class Stockticker implements Runnable {
                 x.printStackTrace();
             }
         }
-    
-    
+
+
     public static interface TickListener {
         public void tick(Stock stock);
     }
-    
+
     public static final class Stock implements Cloneable {
         protected static DecimalFormat df = new DecimalFormat("0.00");
         protected String symbol = "";
@@ -159,7 +159,7 @@ public class Stockticker implements Runnable {
             if (other instanceof Stock) {
                 return this.symbol.equals(((Stock) other).symbol);
             }
-            
+
             return false;
         }
 

==================================================
ChatServlet.java
index 1109443409..96da046b76 100644
--- a/webapps/examples/WEB-INF/classes/cal/JspCalendar.java
+++ b/webapps/examples/WEB-INF/classes/cal/JspCalendar.java
@@ -33,7 +33,7 @@ public class JspCalendar {
     public int getYear() {
         return calendar.get(Calendar.YEAR);
     }
-    
+
     public String getMonth() {
         int m = getMonthInt();
         String[] months = new String [] { "January", "February", "March",
@@ -42,14 +42,14 @@ public class JspCalendar {
                                         "October", "November", "December" };
         if (m > 12)
             return "Unknown to Man";
-        
+
         return months[m - 1];
 
     }
 
     public String getDay() {
         int x = getDayOfWeek();
-        String[] days = new String[] {"Sunday", "Monday", "Tuesday", "Wednesday", 
+        String[] days = new String[] {"Sunday", "Monday", "Tuesday", "Wednesday",
                                       "Thursday", "Friday", "Saturday"};
 
         if (x > 7)
@@ -58,7 +58,7 @@ public class JspCalendar {
         return days[x - 1];
 
     }
-    
+
     public int getMonthInt() {
         return 1 + calendar.get(Calendar.MONTH);
     }
@@ -107,11 +107,11 @@ public class JspCalendar {
     public int getDayOfWeek() {
         return calendar.get(Calendar.DAY_OF_WEEK);
     }
-     
+
     public int getHour() {
         return calendar.get(Calendar.HOUR_OF_DAY);
     }
-    
+
     public int getMinute() {
         return calendar.get(Calendar.MINUTE);
     }
@@ -121,7 +121,7 @@ public class JspCalendar {
         return calendar.get(Calendar.SECOND);
     }
 
-  
+
     public int getEra() {
         return calendar.get(Calendar.ERA);
     }
@@ -129,7 +129,7 @@ public class JspCalendar {
     public String getUSTimeZone() {
         String[] zones = new String[] {"Hawaii", "Alaskan", "Pacific",
                                        "Mountain", "Central", "Eastern"};
-        
+
         return zones[10 + getZoneOffset()];
     }
 
@@ -142,7 +142,7 @@ public class JspCalendar {
         return calendar.get(Calendar.DST_OFFSET)/(60*60*1000);
     }
 
-    
+
     public int getAMPM() {
         return calendar.get(Calendar.AM_PM);
     }

==================================================
ColorGameBean.java
index 3cf518867f..07121c22c2 100644
--- a/webapps/examples/WEB-INF/classes/chat/ChatServlet.java
+++ b/webapps/examples/WEB-INF/classes/chat/ChatServlet.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -43,14 +43,14 @@ public class ChatServlet
 
     private static final String CHARSET = "UTF-8";
 
-    protected ArrayList<HttpServletResponse> connections = 
+    protected ArrayList<HttpServletResponse> connections =
         new ArrayList<HttpServletResponse>();
     protected transient MessageSender messageSender = null;
-    
+
     @Override
     public void init() throws ServletException {
         messageSender = new MessageSender();
-        Thread messageSenderThread = 
+        Thread messageSenderThread =
             new Thread(messageSender, "MessageSender[" + getServletContext().getContextPath() + "]");
         messageSenderThread.setDaemon(true);
         messageSenderThread.start();
@@ -65,7 +65,7 @@ public class ChatServlet
 
     /**
      * Process the given Comet event.
-     * 
+     *
      * @param event The Comet event that will be processed
      * @throws IOException
      * @throws ServletException
@@ -78,7 +78,7 @@ public class ChatServlet
         // mixing Comet stuff with regular connection processing
         HttpServletRequest request = event.getHttpServletRequest();
         HttpServletResponse response = event.getHttpServletResponse();
-        
+
         if (event.getEventType() == CometEvent.EventType.BEGIN) {
             String action = request.getParameter("action");
             if (action != null) {
@@ -132,20 +132,20 @@ public class ChatServlet
 
         messageSender.send("Tomcat", request.getSession(true).getAttribute("nickname") + " joined the chat.");
     }
-    
+
     protected void end(CometEvent event, HttpServletRequest request, HttpServletResponse response)
         throws IOException {
         log("End for session: " + request.getSession(true).getId());
         synchronized(connections) {
             connections.remove(response);
         }
-        
+
         PrintWriter writer = response.getWriter();
         writer.println("</body></html>");
-        
+
         event.close();
     }
-    
+
     protected void error(CometEvent event, HttpServletRequest request, HttpServletResponse response)
         throws IOException {
         log("Error for session: " + request.getSession(true).getId());
@@ -154,7 +154,7 @@ public class ChatServlet
         }
         event.close();
     }
-    
+
     protected void read(CometEvent event, HttpServletRequest request, HttpServletResponse response)
         throws IOException {
         InputStream is = request.getInputStream();
@@ -163,7 +163,7 @@ public class ChatServlet
             log("Available: " + is.available());
             int n = is.read(buf);
             if (n > 0) {
-                log("Read " + n + " bytes: " + new String(buf, 0, n) 
+                log("Read " + n + " bytes: " + new String(buf, 0, n)
                         + " for session: " + request.getSession(true).getId());
             } else if (n < 0) {
                 log("End of file: " + n);
@@ -185,7 +185,7 @@ public class ChatServlet
         writer.println("Configure a connector that supports Comet and try again.");
         writer.println("</body></html>");
     }
-    
+
 
     /**
      * Poller class.
@@ -194,11 +194,11 @@ public class ChatServlet
 
         protected boolean running = true;
         protected ArrayList<String> messages = new ArrayList<String>();
-        
+
         public MessageSender() {
             // Default contructor
         }
-        
+
         public void stop() {
             running = false;
             synchronized (messages) {
@@ -260,7 +260,7 @@ public class ChatServlet
      * in HTML.
      *
      * @param message The message string to be filtered
-     * @author Copied from org.apache.catalina.util.RequestUtil#filter(String) 
+     * @author Copied from org.apache.catalina.util.RequestUtil#filter(String)
      */
     protected static String filter(String message) {
         if (message == null)

==================================================
CompressionFilter.java
index 20b85d8125..7c64d94c3b 100644
--- a/webapps/examples/WEB-INF/classes/colors/ColorGameBean.java
+++ b/webapps/examples/WEB-INF/classes/colors/ColorGameBean.java
@@ -82,7 +82,7 @@ public class ColorGameBean {
     public boolean getSuccess() {
         if (background.equalsIgnoreCase("black") ||
             background.equalsIgnoreCase("cyan")) {
-        
+
             if (foreground.equalsIgnoreCase("black") ||
                 foreground.equalsIgnoreCase("cyan")) {
                 return true;

==================================================
CompressionServletResponseWrapper.java
index b1081630bb..e2a0c67656 100644
--- a/webapps/examples/WEB-INF/classes/compressionFilters/CompressionFilter.java
+++ b/webapps/examples/WEB-INF/classes/compressionFilters/CompressionFilter.java
@@ -182,8 +182,8 @@ public class CompressionFilter implements Filter{
             }
             chain.doFilter(request, response);
             return;
-        } 
-        
+        }
+
         if (response instanceof HttpServletResponse) {
             CompressionServletResponseWrapper wrappedResponse =
                 new CompressionServletResponseWrapper((HttpServletResponse)response);

==================================================
JspCalendar.java
index 417d4e1d51..a9c69ee2bb 100644
--- a/webapps/examples/WEB-INF/classes/compressionFilters/CompressionServletResponseWrapper.java
+++ b/webapps/examples/WEB-INF/classes/compressionFilters/CompressionServletResponseWrapper.java
@@ -231,7 +231,7 @@ public class CompressionServletResponseWrapper extends HttpServletResponseWrappe
         } else {
             writer = new PrintWriter(stream);
         }
-        
+
         return (writer);
 
     }

==================================================
ExampleTagBase.java
index 77ad2a3b0b..2e5e7b93c0 100644
--- a/webapps/examples/WEB-INF/classes/dates/JspCalendar.java
+++ b/webapps/examples/WEB-INF/classes/dates/JspCalendar.java
@@ -31,7 +31,7 @@ public class JspCalendar {
     public int getYear() {
         return calendar.get(Calendar.YEAR);
     }
-    
+
     public String getMonth() {
         int m = getMonthInt();
         String[] months = new String [] { "January", "February", "March",
@@ -40,14 +40,14 @@ public class JspCalendar {
                                         "October", "November", "December" };
         if (m > 12)
             return "Unknown to Man";
-        
+
         return months[m - 1];
 
     }
 
     public String getDay() {
         int x = getDayOfWeek();
-        String[] days = new String[] {"Sunday", "Monday", "Tuesday", "Wednesday", 
+        String[] days = new String[] {"Sunday", "Monday", "Tuesday", "Wednesday",
                                       "Thursday", "Friday", "Saturday"};
 
         if (x > 7)
@@ -56,7 +56,7 @@ public class JspCalendar {
         return days[x - 1];
 
     }
-    
+
     public int getMonthInt() {
         return 1 + calendar.get(Calendar.MONTH);
     }
@@ -89,11 +89,11 @@ public class JspCalendar {
     public int getDayOfWeek() {
         return calendar.get(Calendar.DAY_OF_WEEK);
     }
-     
+
     public int getHour() {
         return calendar.get(Calendar.HOUR_OF_DAY);
     }
-    
+
     public int getMinute() {
         return calendar.get(Calendar.MINUTE);
     }
@@ -132,7 +132,7 @@ public class JspCalendar {
     public String getUSTimeZone() {
         String[] zones = new String[] {"Hawaii", "Alaskan", "Pacific",
                                        "Mountain", "Central", "Eastern"};
-        
+
         return zones[10 + getZoneOffset()];
     }
 
@@ -145,7 +145,7 @@ public class JspCalendar {
         return calendar.get(Calendar.DST_OFFSET)/(60*60*1000);
     }
 
-    
+
     public int getAMPM() {
         return calendar.get(Calendar.AM_PM);
     }

==================================================
FooTag.java
index f96d9134f6..127eddf655 100644
--- a/webapps/examples/WEB-INF/classes/examples/ExampleTagBase.java
+++ b/webapps/examples/WEB-INF/classes/examples/ExampleTagBase.java
@@ -39,7 +39,7 @@ public abstract class ExampleTagBase extends BodyTagSupport {
     public Tag getParent() {
         return this.parent;
     }
-    
+
     @Override
     public int doStartTag() throws JspException {
         return SKIP_BODY;
@@ -49,7 +49,7 @@ public abstract class ExampleTagBase extends BodyTagSupport {
     public int doEndTag() throws JspException {
         return EVAL_PAGE;
     }
-    
+
 
     @Override
     public void doInitBody() throws JspException {
@@ -68,7 +68,7 @@ public abstract class ExampleTagBase extends BodyTagSupport {
         pageContext = null;
         parent = null;
     }
-    
+
     protected BodyContent bodyOut;
     protected Tag parent;
 }

==================================================
FooTagExtraInfo.java
index a8bba6a9a5..6255b65261 100644
--- a/webapps/examples/WEB-INF/classes/examples/FooTag.java
+++ b/webapps/examples/WEB-INF/classes/examples/FooTag.java
@@ -34,15 +34,15 @@ public class FooTag extends ExampleTagBase {
 
     private String atts[] = new String[3];
     int i = 0;
-    
+
     private final void setAtt(int index, String value) {
         atts[index] = value;
     }
-    
+
     public void setAtt1(String value) {
         setAtt(0, value);
     }
-    
+
     public void setAtt2(String value) {
         setAtt(1, value);
     }
@@ -50,7 +50,7 @@ public class FooTag extends ExampleTagBase {
     public void setAtt3(String value) {
         setAtt(2, value);
     }
-    
+
     /**
      * Process start tag
      *
@@ -67,7 +67,7 @@ public class FooTag extends ExampleTagBase {
         pageContext.setAttribute("member", atts[i]);
         i++;
     }
-    
+
     @Override
     public int doAfterBody() throws JspException {
         try {
@@ -75,7 +75,7 @@ public class FooTag extends ExampleTagBase {
                 bodyOut.writeOut(bodyOut.getEnclosingWriter());
                 return SKIP_BODY;
             }
-            
+
             pageContext.setAttribute("member", atts[i]);
             i++;
             return EVAL_BODY_BUFFERED;

==================================================
LogTag.java
index 470bfcda11..e3fe37118b 100644
--- a/webapps/examples/WEB-INF/classes/examples/FooTagExtraInfo.java
+++ b/webapps/examples/WEB-INF/classes/examples/FooTagExtraInfo.java
@@ -23,7 +23,7 @@ import javax.servlet.jsp.tagext.VariableInfo;
 public class FooTagExtraInfo extends TagExtraInfo {
     @Override
     public VariableInfo[] getVariableInfo(TagData data) {
-        return new VariableInfo[] 
+        return new VariableInfo[]
             {
                 new VariableInfo("member",
                                  "String",
@@ -33,4 +33,4 @@ public class FooTagExtraInfo extends TagExtraInfo {
     }
 }
 
-        
+

==================================================
ShowSource.java
index bb0289e24c..0f382804f3 100644
--- a/webapps/examples/WEB-INF/classes/examples/LogTag.java
+++ b/webapps/examples/WEB-INF/classes/examples/LogTag.java
@@ -22,14 +22,14 @@ import javax.servlet.jsp.JspException;
 import javax.servlet.jsp.JspTagException;
 
 /**
- * Log the contents of the body. Could be used to handle errors etc. 
+ * Log the contents of the body. Could be used to handle errors etc.
  */
 public class LogTag extends ExampleTagBase {
 
     private static final long serialVersionUID = 1L;
 
     boolean toBrowser = false;
-    
+
     public void setToBrowser(String value) {
         if (value == null)
             toBrowser = false;
@@ -43,7 +43,7 @@ public class LogTag extends ExampleTagBase {
     public int doStartTag() throws JspException {
         return EVAL_BODY_BUFFERED;
     }
-    
+
     @Override
     public int doAfterBody() throws JspException {
         try {

==================================================
BookBean.java
index 9194bda5eb..c7d8037392 100644
--- a/webapps/examples/WEB-INF/classes/examples/ShowSource.java
+++ b/webapps/examples/WEB-INF/classes/examples/ShowSource.java
@@ -33,7 +33,7 @@ public class ShowSource extends TagSupport {
     private static final long serialVersionUID = 1L;
 
     String jspFile;
-    
+
     public void setJspFile(String jspFile) {
         this.jspFile = jspFile;
     }

==================================================
FooBean.java
index 0f7b514cfd..01f9280954 100644
--- a/webapps/examples/WEB-INF/classes/jsp2/examples/BookBean.java
+++ b/webapps/examples/WEB-INF/classes/jsp2/examples/BookBean.java
@@ -22,7 +22,7 @@ public class BookBean {
     private String title;
     private String author;
     private String isbn;
-    
+
     public BookBean( String title, String author, String isbn ) {
         this.title = title;
         this.author = author;
@@ -32,13 +32,13 @@ public class BookBean {
     public String getTitle() {
         return this.title;
     }
-    
+
     public String getAuthor() {
         return this.author;
     }
-    
+
     public String getIsbn() {
         return this.isbn;
     }
-    
+
 }

==================================================
Functions.java
index 330511f714..4dc0a78030 100644
--- a/webapps/examples/WEB-INF/classes/jsp2/examples/FooBean.java
+++ b/webapps/examples/WEB-INF/classes/jsp2/examples/FooBean.java
@@ -20,17 +20,17 @@ package jsp2.examples;
 
 public class FooBean {
     private String bar;
-    
+
     public FooBean() {
         bar = "Initial value";
     }
-    
+
     public String getBar() {
         return this.bar;
     }
-    
+
     public void setBar(String bar) {
         this.bar = bar;
     }
-    
+
 }

==================================================
EchoAttributesTag.java
index e8ccb8271c..77fdb9cff7 100644
--- a/webapps/examples/WEB-INF/classes/jsp2/examples/el/Functions.java
+++ b/webapps/examples/WEB-INF/classes/jsp2/examples/el/Functions.java
@@ -20,7 +20,7 @@ import java.util.Locale;
 
 /**
  * Defines the functions for the jsp2 example tag library.
- * 
+ *
  * <p>Each function is defined as a static method.</p>
  */
 public class Functions {

==================================================
FindBookSimpleTag.java
index c6186af17c..8f62e6715d 100644
--- a/webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/EchoAttributesTag.java
+++ b/webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/EchoAttributesTag.java
@@ -27,9 +27,9 @@ import javax.servlet.jsp.tagext.DynamicAttributes;
 import javax.servlet.jsp.tagext.SimpleTagSupport;
 
 /**
- * SimpleTag handler that echoes all its attributes 
+ * SimpleTag handler that echoes all its attributes
  */
-public class EchoAttributesTag 
+public class EchoAttributesTag
     extends SimpleTagSupport
     implements DynamicAttributes
 {
@@ -47,8 +47,8 @@ public class EchoAttributesTag
     }
 
     @Override
-    public void setDynamicAttribute( String uri, String localName, 
-        Object value ) 
+    public void setDynamicAttribute( String uri, String localName,
+        Object value )
         throws JspException
     {
         keys.add( localName );

==================================================
RepeatSimpleTag.java
index db7f2b8f21..e44d4e2fd8 100644
--- a/webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/FindBookSimpleTag.java
+++ b/webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/FindBookSimpleTag.java
@@ -29,7 +29,7 @@ import jsp2.examples.BookBean;
  */
 public class FindBookSimpleTag extends SimpleTagSupport {
     private String var;
-    
+
     private static final String BOOK_TITLE = "The Lord of the Rings";
     private static final String BOOK_AUTHOR = "J. R. R. Tolkein";
     private static final String BOOK_ISBN = "0618002251";

==================================================
ShuffleSimpleTag.java
index d1dadcc759..41a9f3c72a 100644
--- a/webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/RepeatSimpleTag.java
+++ b/webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/RepeatSimpleTag.java
@@ -24,7 +24,7 @@ import javax.servlet.jsp.JspException;
 import javax.servlet.jsp.tagext.SimpleTagSupport;
 
 /**
- * SimpleTag handler that accepts a num attribute and 
+ * SimpleTag handler that accepts a num attribute and
  * invokes its body 'num' times.
  */
 public class RepeatSimpleTag extends SimpleTagSupport {

==================================================
TileSimpleTag.java
index 69d7ed20e9..d0374b2f8a 100644
--- a/webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/ShuffleSimpleTag.java
+++ b/webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/ShuffleSimpleTag.java
@@ -32,7 +32,7 @@ import javax.servlet.jsp.tagext.SimpleTagSupport;
 public class ShuffleSimpleTag extends SimpleTagSupport {
     // No need for this to use SecureRandom
     private static Random random = new Random();
-    
+
     private JspFragment fragment1;
     private JspFragment fragment2;
     private JspFragment fragment3;
@@ -76,11 +76,11 @@ public class ShuffleSimpleTag extends SimpleTagSupport {
     public void setFragment1( JspFragment fragment1 ) {
         this.fragment1 = fragment1;
     }
-    
+
     public void setFragment2( JspFragment fragment2 ) {
         this.fragment2 = fragment2;
     }
-    
+
     public void setFragment3( JspFragment fragment3 ) {
         this.fragment3 = fragment3;
     }

==================================================
SessionListener.java
index 31989b4591..2d5db92bac 100644
--- a/webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/TileSimpleTag.java
+++ b/webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/TileSimpleTag.java
@@ -32,16 +32,16 @@ public class TileSimpleTag extends SimpleTagSupport {
 
     @Override
     public void doTag() throws JspException, IOException {
-        getJspContext().getOut().write( 
-                "<td width=\"32\" height=\"32\" bgcolor=\"" + this.color + 
-                "\"><font color=\"#ffffff\"><center>" + this.label + 
+        getJspContext().getOut().write(
+                "<td width=\"32\" height=\"32\" bgcolor=\"" + this.color +
+                "\"><font color=\"#ffffff\"><center>" + this.label +
                 "</center></font></td>" );
     }
 
     public void setColor( String color ) {
         this.color = color;
     }
-    
+
     public void setLabel( String label ) {
         this.label = label;
     }

==================================================
DummyCart.java
index f0ed532771..f75c817ce5 100644
--- a/webapps/examples/WEB-INF/classes/listeners/SessionListener.java
+++ b/webapps/examples/WEB-INF/classes/listeners/SessionListener.java
@@ -29,7 +29,7 @@ import javax.servlet.http.HttpSessionListener;
  * introduced in the 2.3 version of the Servlet API. This listener merely
  * documents the occurrence of such events in the application log associated
  * with our servlet context.
- * 
+ *
  * @author Craig R. McClanahan
  * @version $Id$
  */
@@ -48,7 +48,7 @@ public final class SessionListener implements ServletContextListener,
 
     /**
      * Record the fact that a servlet context attribute was added.
-     * 
+     *
      * @param event
      *            The session attribute event
      */
@@ -62,7 +62,7 @@ public final class SessionListener implements ServletContextListener,
 
     /**
      * Record the fact that a servlet context attribute was removed.
-     * 
+     *
      * @param event
      *            The session attribute event
      */
@@ -76,7 +76,7 @@ public final class SessionListener implements ServletContextListener,
 
     /**
      * Record the fact that a servlet context attribute was replaced.
-     * 
+     *
      * @param event
      *            The session attribute event
      */
@@ -90,7 +90,7 @@ public final class SessionListener implements ServletContextListener,
 
     /**
      * Record the fact that this web application has been destroyed.
-     * 
+     *
      * @param event
      *            The servlet context event
      */
@@ -104,7 +104,7 @@ public final class SessionListener implements ServletContextListener,
 
     /**
      * Record the fact that this web application has been initialized.
-     * 
+     *
      * @param event
      *            The servlet context event
      */
@@ -118,7 +118,7 @@ public final class SessionListener implements ServletContextListener,
 
     /**
      * Record the fact that a session has been created.
-     * 
+     *
      * @param event
      *            The session event
      */
@@ -131,7 +131,7 @@ public final class SessionListener implements ServletContextListener,
 
     /**
      * Record the fact that a session has been destroyed.
-     * 
+     *
      * @param event
      *            The session event
      */
@@ -146,7 +146,7 @@ public final class SessionListener implements ServletContextListener,
 
     /**
      * Log a message to the servlet context application log.
-     * 
+     *
      * @param message
      *            Message to be logged
      */

==================================================
Clock2.java
index 3e5023a9d5..2beda8e662 100644
--- a/webapps/examples/WEB-INF/classes/sessions/DummyCart.java
+++ b/webapps/examples/WEB-INF/classes/sessions/DummyCart.java
@@ -22,7 +22,7 @@ public class DummyCart {
     Vector<String> v = new Vector<String>();
     String submit = null;
     String item = null;
-    
+
     private void addItem(String name) {
         v.addElement(name);
     }
@@ -34,7 +34,7 @@ public class DummyCart {
     public void setItem(String name) {
         item = name;
     }
-    
+
     public void setSubmit(String s) {
         submit = s;
     }
@@ -44,15 +44,15 @@ public class DummyCart {
         v.copyInto(s);
         return s;
     }
-    
+
     public void processRequest() {
-        // null value for submit - user hit enter instead of clicking on 
+        // null value for submit - user hit enter instead of clicking on
         // "add" or "remove"
         if (submit == null || submit.equals("add"))
             addItem(item);
-        else if (submit.equals("remove")) 
+        else if (submit.equals("remove"))
             removeItem(item);
-        
+
         // reset at the end of the request
         reset();
     }

==================================================
