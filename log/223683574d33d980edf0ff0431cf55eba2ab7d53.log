223683574d33d980edf0ff0431cf55eba2ab7d53
==================================================
Fix one potential cause of multiple threads processing a connection.
==================================================
Mark Thomas
==================================================
Tue Jun 4 12:30:33 2019 +0100
==================================================
AbstractProtocol.java
Fix one potential cause of multiple threads processing a connection.

If an InternalUpgradeHandler supports async I/O it will initiate further
I/O so ensure the Protocol loop exists and the socket is put into the
long poll state.


==================================================
InternalHttpUpgradeHandler.java
index c6df8d61c2..174c899eb6 100644
--- a/java/org/apache/coyote/AbstractProtocol.java
+++ b/java/org/apache/coyote/AbstractProtocol.java
@@ -39,6 +39,7 @@ import javax.management.ObjectName;
 import javax.servlet.http.HttpUpgradeHandler;
 import javax.servlet.http.WebConnection;
 
+import org.apache.coyote.http11.upgrade.InternalHttpUpgradeHandler;
 import org.apache.juli.logging.Log;
 import org.apache.tomcat.InstanceManager;
 import org.apache.tomcat.util.ExceptionUtils;
@@ -904,6 +905,12 @@ public abstract class AbstractProtocol<S> implements ProtocolHandler,
                                     upgradeToken.getContextBind().unbind(false, oldCL);
                                 }
                             }
+                            if (httpUpgradeHandler instanceof InternalHttpUpgradeHandler) {
+                                if (((InternalHttpUpgradeHandler) httpUpgradeHandler).hasAsyncIO()) {
+                                    // The handler will initiate all further I/O
+                                    state = SocketState.LONG;
+                                }
+                            }
                         }
                     }
                 } while ( state == SocketState.UPGRADING);

==================================================
Http2AsyncUpgradeHandler.java
index 936784e20c..8c5ce39ed9 100644
--- a/java/org/apache/coyote/http11/upgrade/InternalHttpUpgradeHandler.java
+++ b/java/org/apache/coyote/http11/upgrade/InternalHttpUpgradeHandler.java
@@ -37,4 +37,8 @@ public interface InternalHttpUpgradeHandler extends HttpUpgradeHandler {
     void setSslSupport(SSLSupport sslSupport);
 
     void pause();
+
+    default boolean hasAsyncIO() {
+        return false;
+    }
 }
\ No newline at end of file

==================================================
Http2UpgradeHandler.java
index fde2bb6d38..969bfda7ca 100644
--- a/java/org/apache/coyote/http2/Http2AsyncUpgradeHandler.java
+++ b/java/org/apache/coyote/http2/Http2AsyncUpgradeHandler.java
@@ -80,11 +80,13 @@ public class Http2AsyncUpgradeHandler extends Http2UpgradeHandler {
         return new AsyncPingManager();
     }
 
+
     @Override
-    boolean hasAsyncIO() {
+    public boolean hasAsyncIO() {
         return true;
     }
 
+
     @Override
     protected void processConnection(WebConnection webConnection,
             Stream stream) {

==================================================
