263a7c5ce3d83d481b6ba09a3c7a48820237d324
==================================================
Change parameter name to make meaning more obvious and consistent with connector settings
==================================================
Mark Thomas
==================================================
Wed Jun 29 10:28:15 2016 +0000
==================================================
UpgradeProtocol.java
Change parameter name to make meaning more obvious and consistent with connector settings

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1750617 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AbstractHttp11Protocol.java
index 83e00c8d06..807e903871 100644
--- a/java/org/apache/coyote/UpgradeProtocol.java
+++ b/java/org/apache/coyote/UpgradeProtocol.java
@@ -22,14 +22,14 @@ import org.apache.tomcat.util.net.SocketWrapperBase;
 public interface UpgradeProtocol {
 
     /**
-     * @param isSecure Is this for a connector that is configured to support
-     *                 TLS. Some protocols (e.g. HTTP/2) only support HTTP
-     *                 upgrade over non-secure connections.
+     * @param isSSLEnabled Is this for a connector that is configured to support
+     *                     TLS. Some protocols (e.g. HTTP/2) only support HTTP
+     *                     upgrade over non-secure connections.
      * @return The name that clients will use to request an upgrade to this
      *         protocol via an HTTP/1.1 upgrade request or <code>null</code> if
      *         upgrade via an HTTP/1.1 upgrade request is not supported.
      */
-    public String getHttpUpgradeName(boolean isSecure);
+    public String getHttpUpgradeName(boolean isSSLEnabled);
 
     /**
      * @return The byte sequence as listed in the IANA registry for this

==================================================
Http2Protocol.java
index de67cf5ed5..b7717e8e0b 100644
--- a/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
+++ b/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
@@ -322,9 +322,9 @@ public abstract class AbstractHttp11Protocol<S> extends AbstractProtocol<S> {
      */
     private final Map<String,UpgradeProtocol> negotiatedProtocols = new HashMap<>();
     private void configureUpgradeProtocol(UpgradeProtocol upgradeProtocol) {
-        boolean secure = getEndpoint().isSSLEnabled();
+        boolean isSSLEnabled = getEndpoint().isSSLEnabled();
         // HTTP Upgrade
-        String httpUpgradeName = upgradeProtocol.getHttpUpgradeName(secure);
+        String httpUpgradeName = upgradeProtocol.getHttpUpgradeName(isSSLEnabled);
         boolean httpUpgradeConfigured = false;
         if (httpUpgradeName != null && httpUpgradeName.length() > 0) {
             httpUpgradeProtocols.put(httpUpgradeName, upgradeProtocol);
@@ -337,7 +337,7 @@ public abstract class AbstractHttp11Protocol<S> extends AbstractProtocol<S> {
         String alpnName = upgradeProtocol.getAlpnName();
         if (alpnName != null && alpnName.length() > 0) {
             // ALPN requires SSL
-            if (secure) {
+            if (isSSLEnabled) {
                 negotiatedProtocols.put(alpnName, upgradeProtocol);
                 getEndpoint().addNegotiatedProtocol(alpnName);
                 getLog().info(sm.getString("abstractHttp11Protocol.alpnConfigured",

==================================================
