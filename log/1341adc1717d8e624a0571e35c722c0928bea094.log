1341adc1717d8e624a0571e35c722c0928bea094
==================================================
implement useEquals for the connection pool itself, does not apply to interceptors, they can manage that on their own
==================================================
Filip Hanik
==================================================
Mon Nov 24 20:33:17 2008 +0000
==================================================
ConnectionPool.java
index 9b67fa4a4f..40ec6b34d4 100644
--- a/modules/jdbc-pool/doc/jdbc-pool.xml
+++ b/modules/jdbc-pool/doc/jdbc-pool.xml
@@ -324,7 +324,11 @@
          implementation for the list of the idle connections. The default value is <code>false</code>.
       </p>
     </attribute>
-
+    <attribute name="useEquals" required="false">
+      <p>(boolean) Set to true if you wish the <code>ProxyConnection</code> class to use <code>String.equals</code> instead of 
+         <code>==</code> when comparing method names. This property does not apply to added interceptors as those are configured individually.
+         The default value is <code>false</code>.
+      </p>   
   </attributes>  
   </subsection>
 </section>

==================================================
DataSourceFactory.java
index c345ab9109..bcb6cc50fa 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/ConnectionPool.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/ConnectionPool.java
@@ -131,7 +131,7 @@ public class ConnectionPool {
         JdbcInterceptor handler = con.getHandler();
         if (handler==null) {
             //build the proxy handler
-            handler = new ProxyConnection(this,con);
+            handler = new ProxyConnection(this,con,getPoolProperties().isUseEquals());
             //set up the interceptor chain
             PoolProperties.InterceptorDefinition[] proxies = getPoolProperties().getJdbcInterceptorsAsArray();
             for (int i=proxies.length-1; i>=0; i--) {

==================================================
DataSourceProxy.java
index 0d2753e5e1..d319d3ad31 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/DataSourceFactory.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/DataSourceFactory.java
@@ -102,6 +102,8 @@ public class DataSourceFactory implements ObjectFactory {
     protected final static String PROP_JMX_ENABLED = "jmxEnabled";
     protected final static String PROP_FAIR_QUEUE = "fairQueue";
     
+    protected static final String PROP_USE_EQUALS = "useEquals";
+    
     public static final int UNKNOWN_TRANSACTIONISOLATION = -1;
 
 
@@ -138,7 +140,8 @@ public class DataSourceFactory implements ObjectFactory {
         PROP_INITSQL,
         PROP_INTERCEPTORS,
         PROP_JMX_ENABLED,
-        PROP_FAIR_QUEUE
+        PROP_FAIR_QUEUE,
+        PROP_USE_EQUALS
     };
 
     // -------------------------------------------------- ObjectFactory Methods
@@ -389,6 +392,11 @@ public class DataSourceFactory implements ObjectFactory {
             dataSource.getPoolProperties().setFairQueue(Boolean.parseBoolean(value));
         }
         
+        value = properties.getProperty(PROP_USE_EQUALS);
+        if (value != null) {
+            dataSource.getPoolProperties().setUseEquals(Boolean.parseBoolean(value));
+        }
+        
 
         // Return the configured DataSource instance
         DataSource ds = getDataSource(dataSource);

==================================================
PoolProperties.java
index 78b266341a..c5bb1fc129 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/DataSourceProxy.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/DataSourceProxy.java
@@ -316,5 +316,9 @@ public class DataSourceProxy  {
             throw new RuntimeException(x);
         }
     }
+    
+    public void setUseEquals(boolean useEquals) {
+        this.getPoolProperties().setUseEquals(useEquals);
+    }
 
 }

==================================================
ProxyConnection.java
index 5ce697002b..57a0d1bf8b 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/PoolProperties.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/PoolProperties.java
@@ -63,6 +63,7 @@ public class PoolProperties {
     protected boolean testOnConnect =false;
     private String jdbcInterceptors=null;
     private boolean fairQueue = false;
+    private boolean useEquals = false;
 
     private InterceptorDefinition[] interceptors = null;
     
@@ -425,6 +426,8 @@ public class PoolProperties {
         return result;
     }
     
+    
+    
     public static class InterceptorDefinition {
         protected String className;
         protected List<InterceptorProperty> properties = new ArrayList<InterceptorProperty>();
@@ -465,4 +468,12 @@ public class PoolProperties {
         }
     }
 
+    public boolean isUseEquals() {
+        return useEquals;
+    }
+
+    public void setUseEquals(boolean useEquals) {
+        this.useEquals = useEquals;
+    }
+
 }

==================================================
