dd86b5af0db4638d81906de99ac6de051c71b2be
==================================================
Performance improvements for service loader look-ups (and look-ups of other class loader resources) when the web application is deployed in a packed WAR file.
==================================================
Mark Thomas
==================================================
Wed Jul 19 15:39:49 2017 +0000
==================================================
CachedResource.java
Performance improvements for service loader look-ups (and look-ups of other class loader resources) when the web application is deployed in a packed WAR file.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1802403 13f79535-47bb-0310-9956-ffa450edef68



==================================================
StandardRoot.java
index eab461ca85..aaba6f68f8 100644
--- a/java/org/apache/catalina/webresources/CachedResource.java
+++ b/java/org/apache/catalina/webresources/CachedResource.java
@@ -92,23 +92,26 @@ public class CachedResource implements WebResource {
             return true;
         }
 
-        WebResource webResourceInternal = root.getResourceInternal(
-                webAppPath, useClassLoaderResources);
-        if (!webResource.exists() && webResourceInternal.exists()) {
-            return false;
-        }
+        // Assume resources inside WARs will not change
+        if (!root.isPackedWarFile()) {
+            WebResource webResourceInternal = root.getResourceInternal(
+                    webAppPath, useClassLoaderResources);
+            if (!webResource.exists() && webResourceInternal.exists()) {
+                return false;
+            }
 
-        // If modified date or length change - resource has changed / been
-        // removed etc.
-        if (webResource.getLastModified() != getLastModified() ||
-                webResource.getContentLength() != getContentLength()) {
-            return false;
-        }
+            // If modified date or length change - resource has changed / been
+            // removed etc.
+            if (webResource.getLastModified() != getLastModified() ||
+                    webResource.getContentLength() != getContentLength()) {
+                return false;
+            }
 
-        // Has a resource been inserted / removed in a different resource set
-        if (webResource.getLastModified() != webResourceInternal.getLastModified() ||
-                webResource.getContentLength() != webResourceInternal.getContentLength()) {
-            return false;
+            // Has a resource been inserted / removed in a different resource set
+            if (webResource.getLastModified() != webResourceInternal.getLastModified() ||
+                    webResource.getContentLength() != webResourceInternal.getContentLength()) {
+                return false;
+            }
         }
 
         nextCheck = ttl + now;
@@ -133,9 +136,15 @@ public class CachedResource implements WebResource {
             return true;
         }
 
-        // At this point, always expire the entry as re-populating it is likely
-        // to be as expensive as validating it.
-        return false;
+        // Assume resources inside WARs will not change
+        if (root.isPackedWarFile()) {
+            nextCheck = ttl + now;
+            return true;
+        } else {
+            // At this point, always expire the entry and re-populating it is
+            // likely to be as expensive as validating it.
+            return false;
+        }
     }
 
     protected long getNextCheck() {

==================================================
