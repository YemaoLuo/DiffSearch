6155a8b1ed0176c52be0c4ccc2357e0089dba311
==================================================
https://issues.apache.org/bugzilla/show_bug.cgi?id=49876
==================================================
Mark Emlyn
==================================================
Fri Sep 3 18:50:57 2010 +0000
==================================================
AnnotationEntry.java
https://issues.apache.org/bugzilla/show_bug.cgi?id=49876
Generics warnings in the copied Apache Jakarta BCEL code. Based on a patch by GÃ¡bor. (markt) 

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@992416 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Attribute.java
index 4125fdf18a..980c74dee0 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/AnnotationEntry.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/AnnotationEntry.java
@@ -40,7 +40,7 @@ public class AnnotationEntry implements Constants, Serializable {
     private int type_index;
     private ConstantPool constant_pool;
 
-    private List element_value_pairs;
+    private List<ElementValuePair> element_value_pairs;
     
     /**
      * Factory method to create an AnnotionEntry from a DataInputStream
@@ -54,7 +54,7 @@ public class AnnotationEntry implements Constants, Serializable {
         
         final AnnotationEntry annotationEntry = new AnnotationEntry(file.readUnsignedShort(), constant_pool);
         final int num_element_value_pairs = (file.readUnsignedShort());
-        annotationEntry.element_value_pairs = new ArrayList();
+        annotationEntry.element_value_pairs = new ArrayList<ElementValuePair>();
         for (int i = 0; i < num_element_value_pairs; i++) {
             annotationEntry.element_value_pairs.add(new ElementValuePair(file.readUnsignedShort(), ElementValue.readElementValue(file, constant_pool),
                     constant_pool));
@@ -80,7 +80,7 @@ public class AnnotationEntry implements Constants, Serializable {
      */
     public ElementValuePair[] getElementValuePairs() {
         // TOFO return List
-        return (ElementValuePair[]) element_value_pairs.toArray(new ElementValuePair[element_value_pairs.size()]);
+        return element_value_pairs.toArray(new ElementValuePair[element_value_pairs.size()]);
     }
 
 
@@ -89,7 +89,7 @@ public class AnnotationEntry implements Constants, Serializable {
         dos.writeShort(type_index);    // u2 index of type name in cpool
         dos.writeShort(element_value_pairs.size()); // u2 element_value pair count
         for (int i = 0 ; i<element_value_pairs.size();i++) {
-            ElementValuePair envp = (ElementValuePair) element_value_pairs.get(i);
+            ElementValuePair envp = element_value_pairs.get(i);
             envp.dump(dos);
         }
     }

==================================================
JavaClass.java
index d0f781547d..0a3d3c0986 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Attribute.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Attribute.java
@@ -82,7 +82,8 @@ public abstract class Attribute implements Cloneable, Serializable
         file.writeInt(length);
     }
 
-    private static final Map readers = new HashMap();
+    private static final Map<String,AttributeReader> readers =
+            new HashMap<String,AttributeReader>();
 
     /*
      * Class method reads one attribute from the input data stream. This method
@@ -124,7 +125,7 @@ public abstract class Attribute implements Cloneable, Serializable
         switch (tag)
         {
         case Constants.ATTR_UNKNOWN:
-            AttributeReader r = (AttributeReader) readers.get(name);
+            AttributeReader r = readers.get(name);
             if (r != null)
             {
                 return r.createAttribute(name_index, length, file,

==================================================
Unknown.java
index fd354ff5dd..2032e7175c 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/JavaClass.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/JavaClass.java
@@ -35,7 +35,8 @@ import org.apache.tomcat.util.bcel.util.BCELComparator;
  * @version $Id$
  * @author  <A HREF="mailto:m.dahm@gmx.de">M. Dahm</A>
  */
-public class JavaClass extends AccessFlags implements Cloneable, Comparable {
+public class JavaClass extends AccessFlags
+        implements Cloneable, Comparable<JavaClass> {
 
     private static final long serialVersionUID = 7029227708237523236L;
     private String file_name;
@@ -155,7 +156,7 @@ public class JavaClass extends AccessFlags implements Cloneable, Comparable {
         if (annotationsOutOfDate) { 
             // Find attributes that contain annotation data
             Attribute[] attrs = getAttributes();
-            List accumulatedAnnotations = new ArrayList();
+            List<AnnotationEntry> accumulatedAnnotations = new ArrayList<AnnotationEntry>();
             for (int i = 0; i < attrs.length; i++) {
                 Attribute attribute = attrs[i];
                 if (attribute instanceof Annotations) {
@@ -164,7 +165,7 @@ public class JavaClass extends AccessFlags implements Cloneable, Comparable {
                         accumulatedAnnotations.add(runtimeAnnotations.getAnnotationEntries()[j]);
                 }
             }
-            annotations = (AnnotationEntry[])accumulatedAnnotations.toArray(new AnnotationEntry[accumulatedAnnotations.size()]);
+            annotations = accumulatedAnnotations.toArray(new AnnotationEntry[accumulatedAnnotations.size()]);
             annotationsOutOfDate = false;
         }
         return annotations;
@@ -266,8 +267,8 @@ public class JavaClass extends AccessFlags implements Cloneable, Comparable {
      * This ordering is based on the class name
      */
     @Override
-    public int compareTo( Object obj ) {
-        return getClassName().compareTo(((JavaClass) obj).getClassName());
+    public int compareTo(JavaClass obj) {
+        return getClassName().compareTo(obj.getClassName());
     }
 
 

==================================================
Utility.java
index a1aea565a8..aae39578df 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Unknown.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Unknown.java
@@ -46,7 +46,8 @@ public final class Unknown extends Attribute {
     private static final long serialVersionUID = -4152422704743201314L;
     private byte[] bytes;
     private String name;
-    private static final Map unknown_attributes = new HashMap();
+    private static final Map<String, Unknown> unknown_attributes =
+            new HashMap<String, Unknown>();
 
 
     /**

==================================================
