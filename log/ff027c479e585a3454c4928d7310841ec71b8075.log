ff027c479e585a3454c4928d7310841ec71b8075
==================================================
Refactor for more consistent error code after client sends stream reset
==================================================
Mark Thomas
==================================================
Tue Aug 18 20:24:53 2020 +0100
==================================================
Http2UpgradeHandler.java
Refactor for more consistent error code after client sends stream reset


==================================================
TestHttp2Section_5_1.java
index c5c36df047..bb5e0386c7 100644
--- a/java/org/apache/coyote/http2/Http2UpgradeHandler.java
+++ b/java/org/apache/coyote/http2/Http2UpgradeHandler.java
@@ -36,7 +36,6 @@ import java.util.concurrent.atomic.AtomicReference;
 import jakarta.servlet.http.WebConnection;
 
 import org.apache.coyote.Adapter;
-import org.apache.coyote.CloseNowException;
 import org.apache.coyote.ProtocolException;
 import org.apache.coyote.Request;
 import org.apache.coyote.http11.upgrade.InternalHttpUpgradeHandler;
@@ -839,9 +838,7 @@ class Http2UpgradeHandler extends AbstractStream implements InternalHttpUpgradeH
             do {
                 synchronized (this) {
                     if (!stream.canWrite()) {
-                        throw new CloseNowException(
-                                sm.getString("upgradeHandler.stream.notWritable",
-                                        stream.getConnectionId(), stream.getIdentifier()));
+                        stream.doStreamCancel(sm.getString("upgradeHandler.stream.notWritable"), Http2Error.STREAM_CLOSED);
                     }
                     long windowSize = getWindowSize();
                     if (windowSize < 1 || backLogSize > 0) {
@@ -913,7 +910,7 @@ class Http2UpgradeHandler extends AbstractStream implements InternalHttpUpgradeH
                                     error = Http2Error.ENHANCE_YOUR_CALM;
                                 } else {
                                     msg = sm.getString("stream.clientCancel");
-                                    error = Http2Error.CANCEL;
+                                    error = Http2Error.STREAM_CLOSED;
                                 }
                                 // Close the stream
                                 // This thread is in application code so need

==================================================
