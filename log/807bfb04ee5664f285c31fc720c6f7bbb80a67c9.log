807bfb04ee5664f285c31fc720c6f7bbb80a67c9
==================================================
Align endRequest() implementations and pull-up changes in over-riding methods
==================================================
Mark Emlyn
==================================================
Wed May 1 16:46:47 2013 +0000
==================================================
AbstractOutputBuffer.java
Align endRequest() implementations and pull-up changes in over-riding methods

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1478089 13f79535-47bb-0310-9956-ffa450edef68



==================================================
InternalAprOutputBuffer.java
index aedb4f9aae..edafa14a6f 100644
--- a/java/org/apache/coyote/http11/AbstractOutputBuffer.java
+++ b/java/org/apache/coyote/http11/AbstractOutputBuffer.java
@@ -310,21 +310,19 @@ public abstract class AbstractOutputBuffer<S> implements OutputBuffer {
         byteCount = 0;
     }
 
+
     /**
      * End request.
      *
      * @throws IOException an underlying I/O error occurred
      */
-    public void endRequest()
-        throws IOException {
+    public void endRequest() throws IOException {
 
         if (!committed) {
-
             // Send the connector a request for commit. The connector should
             // then validate the headers, send them (using sendHeader) and
             // set the filters accordingly.
             response.action(ActionCode.COMMIT, null);
-
         }
 
         if (finished)
@@ -332,6 +330,9 @@ public abstract class AbstractOutputBuffer<S> implements OutputBuffer {
 
         if (lastActiveFilter != -1)
             activeFilters[lastActiveFilter].end();
+
+        flushBuffer(true);
+
         finished = true;
     }
 

==================================================
InternalNioOutputBuffer.java
index 9c2d3fa7f8..9a76d5a535 100644
--- a/java/org/apache/coyote/http11/InternalAprOutputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalAprOutputBuffer.java
@@ -20,7 +20,6 @@ package org.apache.coyote.http11;
 import java.io.IOException;
 import java.nio.ByteBuffer;
 
-import org.apache.coyote.ActionCode;
 import org.apache.coyote.OutputBuffer;
 import org.apache.coyote.Response;
 import org.apache.tomcat.jni.Socket;
@@ -107,37 +106,6 @@ public class InternalAprOutputBuffer extends AbstractOutputBuffer<Long> {
     }
 
 
-    /**
-     * End request.
-     *
-     * @throws IOException an underlying I/O error occurred
-     */
-    @Override
-    public void endRequest()
-        throws IOException {
-
-        if (!committed) {
-
-            // Send the connector a request for commit. The connector should
-            // then validate the headers, send them (using sendHeader) and
-            // set the filters accordingly.
-            response.action(ActionCode.COMMIT, null);
-
-        }
-
-        if (finished)
-            return;
-
-        if (lastActiveFilter != -1)
-            activeFilters[lastActiveFilter].end();
-
-        flushBuffer(true);
-
-        finished = true;
-
-    }
-
-
     // ------------------------------------------------ HTTP/1.1 Output Methods
 
 

==================================================
InternalOutputBuffer.java
index 96d7bdf130..4c9a8f58c9 100644
--- a/java/org/apache/coyote/http11/InternalNioOutputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalNioOutputBuffer.java
@@ -162,20 +162,8 @@ public class InternalNioOutputBuffer extends AbstractOutputBuffer<NioChannel> {
     }
 
 
-    /**
-     * End request.
-     *
-     * @throws IOException an underlying I/O error occurred
-     */
-    @Override
-    public void endRequest() throws IOException {
-        super.endRequest();
-        flushBuffer(true);
-    }
-
     // ------------------------------------------------ HTTP/1.1 Output Methods
 
-
     /**
      * Send an acknowledgment.
      */

==================================================
