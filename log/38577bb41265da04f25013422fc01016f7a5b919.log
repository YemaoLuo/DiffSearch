38577bb41265da04f25013422fc01016f7a5b919
==================================================
Avoid overriding non-abstract methods
==================================================
Mark Thomas
==================================================
Wed Oct 12 16:42:23 2022 +0100
==================================================
AbstractHttp11Protocol.java
Avoid overriding non-abstract methods

Longer term, consider making more methods in AbstractHttp11Protocol
final


==================================================
Http11Nio2Protocol.java
index e03a256638..422943ddab 100644
--- a/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
+++ b/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
@@ -719,9 +719,7 @@ public abstract class AbstractHttp11Protocol<S> extends AbstractProtocol<S> {
     // ------------------------------------------------------------- Common code
 
     @Override
-    protected Processor createProcessor() {
-        return new Http11Processor(this, adapter);
-    }
+    protected abstract Processor createProcessor();
 
 
     @Override

==================================================
Http11NioProtocol.java
index c5754b6222..da91eb3581 100644
--- a/java/org/apache/coyote/http11/Http11Nio2Protocol.java
+++ b/java/org/apache/coyote/http11/Http11Nio2Protocol.java
@@ -16,6 +16,7 @@
  */
 package org.apache.coyote.http11;
 
+import org.apache.coyote.Processor;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.net.Nio2Channel;
@@ -39,7 +40,11 @@ public class Http11Nio2Protocol extends AbstractHttp11Protocol<Nio2Channel> {
     protected Log getLog() { return log; }
 
 
-    // ----------------------------------------------------- JMX related methods
+    @Override
+    protected Processor createProcessor() {
+        return new Http11Processor(this, adapter);
+    }
+
 
     @Override
     protected String getNamePrefix() {

==================================================
