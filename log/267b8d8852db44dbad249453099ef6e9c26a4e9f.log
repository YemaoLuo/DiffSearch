267b8d8852db44dbad249453099ef6e9c26a4e9f
==================================================
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=63206
==================================================
Mark Thomas
==================================================
Tue Mar 5 13:15:23 2019 +0000
==================================================
Context.java
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=63206

Add createUploadTargets to Context



==================================================
Request.java
index a7b5fee5d5..bb018d9d94 100644
--- a/java/org/apache/catalina/connector/LocalStrings.properties
+++ b/java/org/apache/catalina/connector/LocalStrings.properties
@@ -60,6 +60,8 @@ coyoteRequest.sessionCreateCommitted=Cannot create a session after the response
 coyoteRequest.sessionEndAccessFail=Exception triggered ending access to session while recycling request
 coyoteRequest.setAttribute.namenull=Cannot call setAttribute with a null name
 coyoteRequest.trailersNotReady=It is illegal to call getTrailerFields() before isTrailerFieldsReady() has returned true
+coyoteRequest.uploadCreate=Creating the temporary upload location [{0}] as it is required by the servlet [{1}]
+coyoteRequest.uploadCreateFail=Failed to create the upload location [{0}]
 coyoteRequest.uploadLocationInvalid=The temporary upload location [{0}] is not valid
 
 coyoteResponse.encoding.invalid=The encoding [{0}] is not recognised by the JRE

==================================================
StandardContext.java
index 2cb29fcc78..db511822da 100644
--- a/java/org/apache/catalina/connector/Request.java
+++ b/java/org/apache/catalina/connector/Request.java
@@ -2815,6 +2815,15 @@ public class Request implements HttpServletRequest {
                 }
             }
 
+            if (!location.exists() && context.getCreateUploadTargets()) {
+                log.warn(sm.getString("coyoteRequest.uploadCreate",
+                        location.getAbsolutePath(), getMappingData().wrapper.getName()));
+                if (!location.mkdirs()) {
+                    log.warn(sm.getString("coyoteRequest.uploadCreateFail",
+                            location.getAbsolutePath()));
+                }
+            }
+
             if (!location.isDirectory()) {
                 parameters.setParseFailedReason(FailReason.MULTIPART_CONFIG_INVALID);
                 partsParseException = new IOException(

==================================================
FailedContext.java
index a61130c1bd..5885b02be5 100644
--- a/java/org/apache/catalina/core/StandardContext.java
+++ b/java/org/apache/catalina/core/StandardContext.java
@@ -822,9 +822,23 @@ public class StandardContext extends ContainerBase
 
     private final AtomicLong inProgressAsyncCount = new AtomicLong(0);
 
+    private boolean createUploadTargets = false;
+
 
     // ----------------------------------------------------- Context Properties
 
+    @Override
+    public void setCreateUploadTargets(boolean createUploadTargets) {
+        this.createUploadTargets = createUploadTargets;
+    }
+
+
+    @Override
+    public boolean getCreateUploadTargets() {
+        return createUploadTargets;
+    }
+
+
     @Override
     public void incrementInProgressAsyncCount() {
         inProgressAsyncCount.incrementAndGet();

==================================================
TesterContext.java
index 83f9c455a6..02f58472b6 100644
--- a/java/org/apache/catalina/startup/FailedContext.java
+++ b/java/org/apache/catalina/startup/FailedContext.java
@@ -814,4 +814,9 @@ public class FailedContext extends LifecycleMBeanBase implements Context {
     public void incrementInProgressAsyncCount() { /* NO-OP */ }
     @Override
     public void decrementInProgressAsyncCount() { /* NO-OP */ }
+
+    @Override
+    public void setCreateUploadTargets(boolean createUploadTargets) { /* NO-OP */}
+    @Override
+    public boolean getCreateUploadTargets() { return false; }
 }
\ No newline at end of file

==================================================
