f35ad0237e2f151e6b65f9eeea4daaa27e4f75f6
==================================================
implement CALLBACK and WRITE events
==================================================
Filip Hanik
==================================================
Thu May 31 09:09:04 2007 +0000
==================================================
CoyoteAdapter.java
implement CALLBACK and WRITE events


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@543091 13f79535-47bb-0310-9956-ffa450edef68



==================================================
NioEndpoint.java
index 2c58582eee..61c41b8c6a 100644
--- a/java/org/apache/catalina/connector/CoyoteAdapter.java
+++ b/java/org/apache/catalina/connector/CoyoteAdapter.java
@@ -169,6 +169,26 @@ public class CoyoteAdapter
                             request.getEvent().setEventSubType(null);
                         }
                     }
+                } else if (status == SocketStatus.OPEN_WRITE) {
+                    if (response.isClosed()) {
+                        // The event has been closed asynchronously, so call end instead of
+                        // read to cleanup the pipeline
+                        request.getEvent().setEventType(CometEvent.EventType.END);
+                        request.getEvent().setEventSubType(null);
+                    } else {
+                        request.getEvent().setEventType(CometEvent.EventType.WRITE);
+                        request.getEvent().setEventSubType(null);
+                    }
+                } else if (status == SocketStatus.OPEN_CALLBACK) {
+                    if (response.isClosed()) {
+                        // The event has been closed asynchronously, so call end instead of
+                        // read to cleanup the pipeline
+                        request.getEvent().setEventType(CometEvent.EventType.END);
+                        request.getEvent().setEventSubType(null);
+                    } else {
+                        request.getEvent().setEventType(CometEvent.EventType.CALLBACK);
+                        request.getEvent().setEventSubType(null);
+                    }
                 } else if (status == SocketStatus.DISCONNECT) {
                     request.getEvent().setEventType(CometEvent.EventType.ERROR);
                     request.getEvent().setEventSubType(CometEvent.EventSubType.CLIENT_DISCONNECT);

==================================================
