6b7c31dc6619c7ab836e780877c87c1cae6fcffe
==================================================
Servlet 4.0
==================================================
Mark Thomas
==================================================
Fri Oct 9 22:42:51 2015 +0000
==================================================
HttpServletRequest.java
Servlet 4.0
Add some PushBuilder plumbing. Doesn't do anything yet.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1707827 13f79535-47bb-0310-9956-ffa450edef68



==================================================
PushBuilder.java
index 0f0b26fae3..a7c82f5016 100644
--- a/java/javax/servlet/http/HttpServletRequest.java
+++ b/java/javax/servlet/http/HttpServletRequest.java
@@ -214,6 +214,21 @@ public interface HttpServletRequest extends ServletRequest {
      */
     public String getPathTranslated();
 
+    /**
+     * Obtain a builder for generating push requests. {@link PushBuilder}
+     * documents how this request will be used as the basis for a push request.
+     * Each call to this method will return a new instance, independent of any
+     * previous instance obtained.
+     *
+     * @return A builder than can be used to generate push requests based on
+     *         this request.
+     *
+     * @since Servlet 4.0
+     */
+    public default PushBuilder getPushBuilder() {
+        return null;
+    }
+
     /**
      * Returns the portion of the request URI that indicates the context of the
      * request. The context path always comes first in a request URI. The path

==================================================
Request.java
new file mode 100644
index 0000000000..c4c49895e8
--- /dev/null
+++ b/java/javax/servlet/http/PushBuilder.java
@@ -0,0 +1,26 @@
+/*
+* Licensed to the Apache Software Foundation (ASF) under one or more
+* contributor license agreements.  See the NOTICE file distributed with
+* this work for additional information regarding copyright ownership.
+* The ASF licenses this file to You under the Apache License, Version 2.0
+* (the "License"); you may not use this file except in compliance with
+* the License.  You may obtain a copy of the License at
+*
+*     http://www.apache.org/licenses/LICENSE-2.0
+*
+* Unless required by applicable law or agreed to in writing, software
+* distributed under the License is distributed on an "AS IS" BASIS,
+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+* See the License for the specific language governing permissions and
+* limitations under the License.
+*/
+package javax.servlet.http;
+
+/**
+ * Builds a push request based on the {@link HttpServletRequest} from which this
+ * builder was obtained.
+ *
+ * @since Servlet 4.0
+ */
+public interface PushBuilder {
+}

==================================================
RequestFacade.java
index 948c0526f5..ce5ba86dbd 100644
--- a/java/org/apache/catalina/connector/Request.java
+++ b/java/org/apache/catalina/connector/Request.java
@@ -16,7 +16,6 @@
  */
 package org.apache.catalina.connector;
 
-
 import java.io.BufferedReader;
 import java.io.File;
 import java.io.IOException;
@@ -64,6 +63,7 @@ import javax.servlet.http.HttpServletResponse;
 import javax.servlet.http.HttpSession;
 import javax.servlet.http.HttpUpgradeHandler;
 import javax.servlet.http.Part;
+import javax.servlet.http.PushBuilder;
 
 import org.apache.catalina.Context;
 import org.apache.catalina.Globals;
@@ -74,6 +74,7 @@ import org.apache.catalina.Session;
 import org.apache.catalina.TomcatPrincipal;
 import org.apache.catalina.Wrapper;
 import org.apache.catalina.core.ApplicationPart;
+import org.apache.catalina.core.ApplicationPushBuilder;
 import org.apache.catalina.core.ApplicationSessionCookieConfig;
 import org.apache.catalina.core.AsyncContextImpl;
 import org.apache.catalina.mapper.MappingData;
@@ -105,15 +106,13 @@ import org.apache.tomcat.util.res.StringManager;
 import org.ietf.jgss.GSSCredential;
 import org.ietf.jgss.GSSException;
 
-
 /**
  * Wrapper object for the Coyote request.
  *
  * @author Remy Maucherat
  * @author Craig R. McClanahan
  */
-public class Request
-    implements HttpServletRequest {
+public class Request implements HttpServletRequest {
 
     private static final Log log = LogFactory.getLog(Request.class);
 
@@ -1835,6 +1834,16 @@ public class Request
 
     // --------------------------------------------- HttpServletRequest Methods
 
+    /**
+     * {@inheritDoc}
+     *
+     * @since Servlet 4.0
+     */
+    @Override
+    public PushBuilder getPushBuilder() {
+        return new ApplicationPushBuilder(this);
+    }
+
     /**
      * {@inheritDoc}
      *

==================================================
ApplicationHttpRequest.java
index 98d2eb2990..188bd10264 100644
--- a/java/org/apache/catalina/connector/RequestFacade.java
+++ b/java/org/apache/catalina/connector/RequestFacade.java
@@ -39,6 +39,7 @@ import javax.servlet.http.HttpServletResponse;
 import javax.servlet.http.HttpSession;
 import javax.servlet.http.HttpUpgradeHandler;
 import javax.servlet.http.Part;
+import javax.servlet.http.PushBuilder;
 
 import org.apache.catalina.Globals;
 import org.apache.catalina.security.SecurityUtil;
@@ -1112,4 +1113,15 @@ public class RequestFacade implements HttpServletRequest {
             Class<T> httpUpgradeHandlerClass) throws java.io.IOException, ServletException {
         return request.upgrade(httpUpgradeHandlerClass);
     }
+
+
+    /**
+     * {@inheritDoc}
+     *
+     * @since Servlet 4.0
+     */
+    @Override
+    public PushBuilder getPushBuilder() {
+        return request.getPushBuilder();
+    }
 }

==================================================
RemoteIpFilter.java
index ef80f9b759..53aca1aba9 100644
--- a/java/org/apache/catalina/core/ApplicationHttpRequest.java
+++ b/java/org/apache/catalina/core/ApplicationHttpRequest.java
@@ -34,6 +34,7 @@ import javax.servlet.ServletContext;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletRequestWrapper;
 import javax.servlet.http.HttpSession;
+import javax.servlet.http.PushBuilder;
 
 import org.apache.catalina.Context;
 import org.apache.catalina.Globals;
@@ -609,9 +610,14 @@ class ApplicationHttpRequest extends HttpServletRequestWrapper {
     }
 
 
-    // -------------------------------------------------------- Package Methods
+    @Override
+    public PushBuilder getPushBuilder() {
+        return new ApplicationPushBuilder(this);
+    }
 
 
+    // -------------------------------------------------------- Package Methods
+
     /**
      * Recycle this request
      */

==================================================
TesterHttpServletRequest.java
index f705b661e5..9e2a9b123e 100644
--- a/java/org/apache/catalina/filters/RemoteIpFilter.java
+++ b/java/org/apache/catalina/filters/RemoteIpFilter.java
@@ -42,9 +42,11 @@ import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletRequestWrapper;
 import javax.servlet.http.HttpServletResponse;
 import javax.servlet.http.HttpServletResponseWrapper;
+import javax.servlet.http.PushBuilder;
 
 import org.apache.catalina.AccessLog;
 import org.apache.catalina.Globals;
+import org.apache.catalina.core.ApplicationPushBuilder;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.res.StringManager;
@@ -621,6 +623,11 @@ public class RemoteIpFilter extends GenericFilter {
         public void setServerPort(int serverPort) {
             this.serverPort = serverPort;
         }
+
+        @Override
+        public PushBuilder getPushBuilder() {
+            return new ApplicationPushBuilder(this);
+        }
     }
 
     public static class XForwardedResponse extends HttpServletResponseWrapper {

==================================================
