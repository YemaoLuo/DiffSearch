b21ace90b36f210cac9dba8f348e8ea0e48a04c1
==================================================
Servlet 4.0
==================================================
Mark Thomas
==================================================
Fri Oct 9 13:50:54 2015 +0000
==================================================
ServletContextAttributeListener.java
Servlet 4.0
Default methods for listeners

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1707727 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ServletContextListener.java
index 0138b9835d..61ef61564e 100644
--- a/java/javax/servlet/ServletContextAttributeListener.java
+++ b/java/javax/servlet/ServletContextAttributeListener.java
@@ -32,21 +32,27 @@ public interface ServletContextAttributeListener extends EventListener {
     /**
      * Notification that a new attribute was added to the servlet context.
      * Called after the attribute is added.
+     * The default implementation is a NO-OP.
      * @param scae Information about the new attribute
      */
-    public void attributeAdded(ServletContextAttributeEvent scae);
+    public default void attributeAdded(ServletContextAttributeEvent scae) {
+    }
 
     /**
      * Notification that an existing attribute has been removed from the servlet
      * context. Called after the attribute is removed.
+     * The default implementation is a NO-OP.
      * @param scae Information about the removed attribute
      */
-    public void attributeRemoved(ServletContextAttributeEvent scae);
+    public default void attributeRemoved(ServletContextAttributeEvent scae) {
+    }
 
     /**
      * Notification that an attribute on the servlet context has been replaced.
      * Called after the attribute is replaced.
+     * The default implementation is a NO-OP.
      * @param scae Information about the replaced attribute
      */
-    public void attributeReplaced(ServletContextAttributeEvent scae);
+    public default void attributeReplaced(ServletContextAttributeEvent scae) {
+    }
 }

==================================================
ServletRequestAttributeListener.java
index db542e2ed1..2300aa7148 100644
--- a/java/javax/servlet/ServletContextListener.java
+++ b/java/javax/servlet/ServletContextListener.java
@@ -34,15 +34,19 @@ public interface ServletContextListener extends EventListener {
      ** Notification that the web application initialization process is starting.
      * All ServletContextListeners are notified of context initialization before
      * any filter or servlet in the web application is initialized.
+     * The default implementation is a NO-OP.
      * @param sce Information about the ServletContext that was initialized
      */
-    public void contextInitialized(ServletContextEvent sce);
+    public default void contextInitialized(ServletContextEvent sce) {
+    }
 
     /**
      ** Notification that the servlet context is about to be shut down. All
      * servlets and filters have been destroy()ed before any
      * ServletContextListeners are notified of context destruction.
+     * The default implementation is a NO-OP.
      * @param sce Information about the ServletContext that was destroyed
      */
-    public void contextDestroyed(ServletContextEvent sce);
+    public default void contextDestroyed(ServletContextEvent sce) {
+    }
 }

==================================================
ServletRequestListener.java
index 44e91eb7e4..b310c67685 100644
--- a/java/javax/servlet/ServletRequestAttributeListener.java
+++ b/java/javax/servlet/ServletRequestAttributeListener.java
@@ -34,22 +34,28 @@ public interface ServletRequestAttributeListener extends EventListener {
     /**
      * Notification that a new attribute was added to the
      * servlet request. Called after the attribute is added.
+     * The default implementation is a NO-OP.
      * @param srae Information about the new request attribute
      */
-    public void attributeAdded(ServletRequestAttributeEvent srae);
+    public default void attributeAdded(ServletRequestAttributeEvent srae) {
+    }
 
     /**
      * Notification that an existing attribute has been removed from the
      * servlet request. Called after the attribute is removed.
+     * The default implementation is a NO-OP.
      * @param srae Information about the removed request attribute
      */
-    public void attributeRemoved(ServletRequestAttributeEvent srae);
+    public default void attributeRemoved(ServletRequestAttributeEvent srae) {
+    }
 
     /**
      * Notification that an attribute was replaced on the
      * servlet request. Called after the attribute is replaced.
+     * The default implementation is a NO-OP.
      * @param srae Information about the replaced request attribute
      */
-    public void attributeReplaced(ServletRequestAttributeEvent srae);
+    public default void attributeReplaced(ServletRequestAttributeEvent srae) {
+    }
 }
 

==================================================
HttpSessionActivationListener.java
index 108e4bc22e..86c1ae164a 100644
--- a/java/javax/servlet/ServletRequestListener.java
+++ b/java/javax/servlet/ServletRequestListener.java
@@ -32,13 +32,17 @@ public interface ServletRequestListener extends EventListener {
 
     /**
      * The request is about to go out of scope of the web application.
+     * The default implementation is a NO-OP.
      * @param sre Information about the request
      */
-    public void requestDestroyed (ServletRequestEvent sre);
+    public default void requestDestroyed (ServletRequestEvent sre) {
+    }
 
     /**
      * The request is about to come into scope of the web application.
+     * The default implementation is a NO-OP.
      * @param sre Information about the request
      */
-    public void requestInitialized (ServletRequestEvent sre);
+    public default void requestInitialized (ServletRequestEvent sre) {
+    }
 }

==================================================
HttpSessionAttributeListener.java
index 6caa070bf3..1c13b4c62e 100644
--- a/java/javax/servlet/http/HttpSessionActivationListener.java
+++ b/java/javax/servlet/http/HttpSessionActivationListener.java
@@ -31,16 +31,20 @@ public interface HttpSessionActivationListener extends EventListener {
 
     /**
      * Notification that the session is about to be passivated.
+     * The default implementation is a NO-OP.
      *
      * @param se Information about the session this is about to be passivated
      */
-    public void sessionWillPassivate(HttpSessionEvent se);
+    public default void sessionWillPassivate(HttpSessionEvent se) {
+    }
 
     /**
      * Notification that the session has just been activated.
+     * The default implementation is a NO-OP.
      *
      * @param se Information about the session this has just been activated
      */
-    public void sessionDidActivate(HttpSessionEvent se);
+    public default void sessionDidActivate(HttpSessionEvent se) {
+    }
 }
 

==================================================
HttpSessionBindingListener.java
index a44dd0de58..4f2f4562be 100644
--- a/java/javax/servlet/http/HttpSessionAttributeListener.java
+++ b/java/javax/servlet/http/HttpSessionAttributeListener.java
@@ -29,24 +29,30 @@ public interface HttpSessionAttributeListener extends EventListener {
     /**
      * Notification that an attribute has been added to a session. Called after
      * the attribute is added.
+     * The default implementation is a NO-OP.
      *
      * @param se Information about the added attribute
      */
-    public void attributeAdded(HttpSessionBindingEvent se);
+    public default void attributeAdded(HttpSessionBindingEvent se) {
+    }
 
     /**
      * Notification that an attribute has been removed from a session. Called
      * after the attribute is removed.
+     * The default implementation is a NO-OP.
      *
      * @param se Information about the removed attribute
      */
-    public void attributeRemoved(HttpSessionBindingEvent se);
+    public default void attributeRemoved(HttpSessionBindingEvent se) {
+    }
 
     /**
      * Notification that an attribute has been replaced in a session. Called
      * after the attribute is replaced.
+     * The default implementation is a NO-OP.
      *
      * @param se Information about the replaced attribute
      */
-    public void attributeReplaced(HttpSessionBindingEvent se);
+    public default void attributeReplaced(HttpSessionBindingEvent se) {
+    }
 }

==================================================
HttpSessionListener.java
index a09845e51b..2e6a80ce8b 100644
--- a/java/javax/servlet/http/HttpSessionBindingListener.java
+++ b/java/javax/servlet/http/HttpSessionBindingListener.java
@@ -34,20 +34,24 @@ public interface HttpSessionBindingListener extends EventListener {
     /**
      * Notifies the object that it is being bound to a session and identifies
      * the session.
+     * The default implementation is a NO-OP.
      *
      * @param event
      *            the event that identifies the session
      * @see #valueUnbound
      */
-    public void valueBound(HttpSessionBindingEvent event);
+    public default void valueBound(HttpSessionBindingEvent event) {
+    }
 
     /**
      * Notifies the object that it is being unbound from a session and
      * identifies the session.
+     * The default implementation is a NO-OP.
      *
      * @param event
      *            the event that identifies the session
      * @see #valueBound
      */
-    public void valueUnbound(HttpSessionBindingEvent event);
+    public default void valueUnbound(HttpSessionBindingEvent event) {
+    }
 }

==================================================
