bd003e12c50fc51b92ade7f5c43c9bd74e6e1e0f
==================================================
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=60446
==================================================
Mark Thomas
==================================================
Mon Dec 12 10:03:35 2016 +0000
==================================================
DigestCredentialHandlerBase.java
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=60446
Handle the case where the stored user credential uses a different key length than the length currently configured for the CredentialHandler.
Based on a patch by Niklas Holm.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1773756 13f79535-47bb-0310-9956-ffa450edef68



==================================================
MessageDigestCredentialHandler.java
index 1f8df0de3e..7eb65844ed 100644
--- a/java/org/apache/catalina/realm/LocalStrings.properties
+++ b/java/org/apache/catalina/realm/LocalStrings.properties
@@ -93,5 +93,6 @@ combinedRealm.realmStartFail=Failed to start "{0}" realm
 lockOutRealm.authLockedUser=An attempt was made to authenticate the locked user "{0}"
 lockOutRealm.removeWarning=User "{0}" was removed from the failed users cache after {1} seconds to keep the cache size within the limit set
 credentialHandler.invalidStoredCredential=The invalid stored credential string [{0}] was provided by the Realm to match with the user provided credentials
+credentialHandler.unableToMutateUserCredential=Failed to mutate user provided credentials. This typically means the CredentialHandler configuration is invalid
 mdCredentialHandler.unknownEncoding=The encoding [{0}] is not supported so the current setting of [{1}] will still be used
 pbeCredentialHandler.invalidKeySpec=Unable to generate a password based key
\ No newline at end of file

==================================================
SecretKeyCredentialHandler.java
index 7c3a073b64..720fc0e02d 100644
--- a/java/org/apache/catalina/realm/MessageDigestCredentialHandler.java
+++ b/java/org/apache/catalina/realm/MessageDigestCredentialHandler.java
@@ -148,6 +148,11 @@ public class MessageDigestCredentialHandler extends DigestCredentialHandlerBase
             } else {
                 // Hex hashes should be compared case-insensitively
                 String userDigest = mutate(inputCredentials, null, 1);
+                if (userDigest == null) {
+                    // Failed to mutate user credentials. Automatic fail.
+                    // Root cause should be logged by mutate()
+                    return false;
+                }
                 return storedCredentials.equalsIgnoreCase(userDigest);
             }
         }

==================================================
TestMessageDigestCredentialHandler.java
index af9ba97d47..de81d474b8 100644
--- a/java/org/apache/catalina/realm/SecretKeyCredentialHandler.java
+++ b/java/org/apache/catalina/realm/SecretKeyCredentialHandler.java
@@ -76,12 +76,17 @@ public class SecretKeyCredentialHandler extends DigestCredentialHandlerBase {
 
     @Override
     protected String mutate(String inputCredentials, byte[] salt, int iterations) {
-        KeySpec spec = new PBEKeySpec(inputCredentials.toCharArray(), salt, iterations, getKeyLength());
+        return mutate(inputCredentials, salt, iterations, getKeyLength());
+    }
+
 
+    @Override
+    protected String mutate(String inputCredentials, byte[] salt, int iterations, int keyLength) {
         try {
+            KeySpec spec = new PBEKeySpec(inputCredentials.toCharArray(), salt, iterations, keyLength);
             return HexUtils.toHexString(secretKeyFactory.generateSecret(spec).getEncoded());
-        } catch (InvalidKeySpecException e) {
-            log.warn("pbeCredentialHandler.invalidKeySpec", e);
+        } catch (InvalidKeySpecException | IllegalArgumentException e) {
+            log.warn(sm.getString("pbeCredentialHandler.invalidKeySpec"), e);
             return null;
         }
     }

==================================================
TestSecretKeyCredentialHandler.java
index 6f02cca851..3371b6bc92 100644
--- a/test/org/apache/catalina/realm/TestMessageDigestCredentialHandler.java
+++ b/test/org/apache/catalina/realm/TestMessageDigestCredentialHandler.java
@@ -49,10 +49,12 @@ public class TestMessageDigestCredentialHandler {
 
     private void doTest(String digest, int saltLength, int iterations) throws NoSuchAlgorithmException {
         MessageDigestCredentialHandler mdch = new MessageDigestCredentialHandler();
+        MessageDigestCredentialHandler verifier = new MessageDigestCredentialHandler();
         mdch.setAlgorithm(digest);
         mdch.setIterations(iterations);
         mdch.setSaltLength(saltLength);
+        verifier.setAlgorithm(digest);
         String storedCredential = mdch.mutate(PWD);
-        Assert.assertTrue(mdch.matches(PWD, storedCredential));
+        Assert.assertTrue(verifier.matches(PWD, storedCredential));
     }
 }

==================================================
