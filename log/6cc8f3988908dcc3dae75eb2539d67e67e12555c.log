6cc8f3988908dcc3dae75eb2539d67e67e12555c
==================================================
Update DBCP2 to r1757164
==================================================
Mark Thomas
==================================================
Mon Aug 22 13:48:09 2016 +0000
==================================================
BasicDataSourceFactory.java
Update DBCP2 to r1757164

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1757167 13f79535-47bb-0310-9956-ffa450edef68



==================================================
DelegatingConnection.java
index 83b2e1157e..fb07e2e365 100644
--- a/java/org/apache/tomcat/dbcp/dbcp2/BasicDataSourceFactory.java
+++ b/java/org/apache/tomcat/dbcp/dbcp2/BasicDataSourceFactory.java
@@ -236,7 +236,7 @@ public class BasicDataSourceFactory implements ObjectFactory {
      * @param environment The possibly null environment that is used in
      *  creating this object
      *
-     * @exception Exception if an exception occurs creating the instance
+     * @throws Exception if an exception occurs creating the instance
      */
     @Override
     public Object getObjectInstance(final Object obj, final Name name, final Context nameCtx, final Hashtable<?,?> environment)

==================================================
ConnectionImpl.java
index a6108cb1f5..3a19a7d594 100644
--- a/java/org/apache/tomcat/dbcp/dbcp2/DelegatingConnection.java
+++ b/java/org/apache/tomcat/dbcp/dbcp2/DelegatingConnection.java
@@ -598,10 +598,9 @@ public class DelegatingConnection<C extends Connection> extends AbandonedTrace
         }
     }
 
-
     @Override
     public boolean isClosed() throws SQLException {
-        return _closed || _conn.isClosed();
+        return _closed || _conn == null || _conn.isClosed();
     }
 
     protected void checkOpen() throws SQLException {

==================================================
PooledConnectionImpl.java
index ae05e419e6..5e1af7e444 100644
--- a/java/org/apache/tomcat/dbcp/dbcp2/cpdsadapter/ConnectionImpl.java
+++ b/java/org/apache/tomcat/dbcp/dbcp2/cpdsadapter/ConnectionImpl.java
@@ -69,7 +69,7 @@ class ConnectionImpl extends DelegatingConnection<Connection> {
      * be used after closed() is called.  Any further usage will result in an
      * SQLException.
      *
-     * @exception SQLException The database connection couldn't be closed.
+     * @throws SQLException The database connection couldn't be closed.
      */
     @Override
     public void close() throws SQLException {
@@ -90,7 +90,7 @@ class ConnectionImpl extends DelegatingConnection<Connection> {
      *
      * @param sql SQL statement to be prepared
      * @return the prepared statement
-     * @exception SQLException if this connection is closed or an error occurs
+     * @throws SQLException if this connection is closed or an error occurs
      * in the wrapped connection.
      */
     @Override
@@ -111,7 +111,7 @@ class ConnectionImpl extends DelegatingConnection<Connection> {
      * {@link DriverAdapterCPDS}, a pooled object may be returned, otherwise
      * delegate to the wrapped JDBC 1.x {@link java.sql.Connection}.
      *
-     * @exception SQLException if this connection is closed or an error occurs
+     * @throws SQLException if this connection is closed or an error occurs
      * in the wrapped connection.
      */
     @Override

==================================================
PerUserPoolDataSource.java
index 7a87cc2bf2..ba48a9ac55 100644
--- a/java/org/apache/tomcat/dbcp/dbcp2/cpdsadapter/PooledConnectionImpl.java
+++ b/java/org/apache/tomcat/dbcp/dbcp2/cpdsadapter/PooledConnectionImpl.java
@@ -130,7 +130,7 @@ class PooledConnectionImpl
      * <code>PooledConnection</code> so that it may not be used
      * to generate any more logical <code>Connection</code>s.
      *
-     * @exception SQLException if an error occurs or the connection is already closed
+     * @throws SQLException if an error occurs or the connection is already closed
      */
     @Override
     public void close() throws SQLException {

==================================================
SharedPoolDataSource.java
index b537320df3..87ae16f315 100644
--- a/java/org/apache/tomcat/dbcp/dbcp2/datasources/PerUserPoolDataSource.java
+++ b/java/org/apache/tomcat/dbcp/dbcp2/datasources/PerUserPoolDataSource.java
@@ -1129,8 +1129,8 @@ public class PerUserPoolDataSource extends InstanceKeyDataSource {
      * Supports Serialization interface.
      *
      * @param in a <code>java.io.ObjectInputStream</code> value
-     * @exception IOException if an error occurs
-     * @exception ClassNotFoundException if an error occurs
+     * @throws IOException if an error occurs
+     * @throws ClassNotFoundException if an error occurs
      */
     private void readObject(final ObjectInputStream in)
         throws IOException, ClassNotFoundException {

==================================================
