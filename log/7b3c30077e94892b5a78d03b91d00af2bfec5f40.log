7b3c30077e94892b5a78d03b91d00af2bfec5f40
==================================================
Async processingdoesn't change the timeouts so no need to reset them.
==================================================
Mark Thomas
==================================================
Thu Jan 29 19:11:52 2015 +0000
==================================================
AbstractHttp11Processor.java
Async processingdoesn't change the timeouts so no need to reset them.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1655808 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http11AprProcessor.java
index 7722dc2288..55c4b30197 100644
--- a/java/org/apache/coyote/http11/AbstractHttp11Processor.java
+++ b/java/org/apache/coyote/http11/AbstractHttp11Processor.java
@@ -1715,7 +1715,6 @@ public abstract class AbstractHttp11Processor<S> extends AbstractProcessor<S> {
             if (!getAdapter().asyncDispatch(request, response, status)) {
                 setErrorState(ErrorState.CLOSE_NOW, null);
             }
-            resetTimeouts();
         } catch (InterruptedIOException e) {
             setErrorState(ErrorState.CLOSE_NOW, e);
         } catch (Throwable t) {
@@ -1763,14 +1762,6 @@ public abstract class AbstractHttp11Processor<S> extends AbstractProcessor<S> {
     }
 
 
-    /**
-     * Provides a mechanism for those connector implementations (currently only
-     * NIO) that need to reset timeouts from Async timeouts to standard HTTP
-     * timeouts once async processing completes.
-     */
-    protected abstract void resetTimeouts();
-
-
     public void endRequest() {
 
         // Finish the handling of the request

==================================================
Http11Nio2Processor.java
index d7f49929d9..b79fa4d25a 100644
--- a/java/org/apache/coyote/http11/Http11AprProcessor.java
+++ b/java/org/apache/coyote/http11/Http11AprProcessor.java
@@ -74,12 +74,6 @@ public class Http11AprProcessor extends AbstractHttp11Processor<Long> {
 
     // --------------------------------------------------------- Public Methods
 
-    @Override
-    protected void resetTimeouts() {
-        // NO-OP for APR
-    }
-
-
     @Override
     public void setSslSupport(SSLSupport sslSupport) {
         // NOOP for APR

==================================================
Http11NioProcessor.java
index 991f72dd69..3ec7ddf51c 100644
--- a/java/org/apache/coyote/http11/Http11Nio2Processor.java
+++ b/java/org/apache/coyote/http11/Http11Nio2Processor.java
@@ -62,6 +62,15 @@ public class Http11Nio2Processor extends AbstractHttp11Processor<Nio2Channel> {
 
     // --------------------------------------------------------- Public Methods
 
+    /**
+     * Set the SSL information for this HTTP connection.
+     */
+    @Override
+    public void setSslSupport(SSLSupport sslSupport) {
+        this.sslSupport = sslSupport;
+    }
+
+
     @Override
     public SocketState asyncDispatch(SocketStatus status) {
         SocketState state = super.asyncDispatch(status);
@@ -75,21 +84,6 @@ public class Http11Nio2Processor extends AbstractHttp11Processor<Nio2Channel> {
     }
 
 
-    @Override
-    protected void resetTimeouts() {
-        if (!getErrorState().isError() && socketWrapper != null &&
-                asyncStateMachine.isAsyncDispatching()) {
-
-            // Reset the timeout
-            if (keepAlive) {
-                socketWrapper.setReadTimeout(endpoint.getKeepAliveTimeout());
-            } else {
-                socketWrapper.setReadTimeout(endpoint.getSoTimeout());
-            }
-        }
-    }
-
-
     // ----------------------------------------------------- ActionHook Methods
 
     /**
@@ -175,15 +169,4 @@ public class Http11Nio2Processor extends AbstractHttp11Processor<Nio2Channel> {
         }
         }
     }
-
-
-    // ------------------------------------------------------ Protected Methods
-
-    /**
-     * Set the SSL information for this HTTP connection.
-     */
-    @Override
-    public void setSslSupport(SSLSupport sslSupport) {
-        this.sslSupport = sslSupport;
-    }
 }

==================================================
