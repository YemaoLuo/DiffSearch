a30a46a09916c51a9da6299e2149e83ad1298505
==================================================
Code clean-up. Run UCDetector over o.a.el
==================================================
Mark Emlyn
==================================================
Thu Dec 29 08:06:24 2011 +0000
==================================================
ExpressionBuilder.java
Code clean-up. Run UCDetector over o.a.el

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1225464 13f79535-47bb-0310-9956-ffa450edef68



==================================================
FunctionMapperFactory.java
index 53161ddee9..8e48ecebe7 100644
--- a/java/org/apache/el/lang/ExpressionBuilder.java
+++ b/java/org/apache/el/lang/ExpressionBuilder.java
@@ -78,7 +78,7 @@ public final class ExpressionBuilder implements NodeVisitor {
 
     private VariableMapper varMapper;
 
-    private String expression;
+    private final String expression;
 
     /**
      *

==================================================
AstMethodParameters.java
index 3e54d64eb3..cae7843c02 100644
--- a/java/org/apache/el/lang/FunctionMapperFactory.java
+++ b/java/org/apache/el/lang/FunctionMapperFactory.java
@@ -28,7 +28,7 @@ import javax.el.FunctionMapper;
 public class FunctionMapperFactory extends FunctionMapper {
 
     protected FunctionMapperImpl memento = null;
-    protected FunctionMapper target;
+    protected final FunctionMapper target;
 
     public FunctionMapperFactory(FunctionMapper mapper) {
         if (mapper == null) {

==================================================
SimpleNode.java
index 0e2f82a29a..6b59090233 100644
--- a/java/org/apache/el/parser/AstMethodParameters.java
+++ b/java/org/apache/el/parser/AstMethodParameters.java
@@ -37,12 +37,4 @@ public final class AstMethodParameters extends SimpleNode {
         }
         return params.toArray(new Object[params.size()]);
     }
-
-    public Class<?>[] getParameterTypes(EvaluationContext ctx) {
-        ArrayList<Class<?>> paramTypes = new ArrayList<Class<?>>();
-        for (int i = 0; i < this.jjtGetNumChildren(); i++) {
-            paramTypes.add(this.jjtGetChild(i).getType(ctx));
-        }
-        return paramTypes.toArray(new Class<?>[paramTypes.size()]);
-    }
 }

==================================================
