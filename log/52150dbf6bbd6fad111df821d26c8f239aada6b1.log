52150dbf6bbd6fad111df821d26c8f239aada6b1
==================================================
Variable cannot be null
==================================================
Violeta Georgieva
==================================================
Tue Dec 22 19:16:32 2015 +0000
==================================================
JMXAccessorSetTask.java
Variable cannot be null

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1721447 13f79535-47bb-0310-9956-ffa450edef68



==================================================
NamingResourcesImpl.java
index bafaa268af..53082fb3f9 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorSetTask.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorSetTask.java
@@ -190,11 +190,9 @@ public class JMXAccessorSetTask extends JMXAccessorTask {
         String mattrType = null;
         MBeanInfo minfo = jmxServerConnection.getMBeanInfo(oname);
         MBeanAttributeInfo attrs[] = minfo.getAttributes();
-        if (attrs != null) {
-            for (int i = 0; mattrType == null && i < attrs.length; i++) {
-                if (attribute.equals(attrs[i].getName()))
-                    mattrType = attrs[i].getType();
-            }
+        for (int i = 0; mattrType == null && i < attrs.length; i++) {
+            if (attribute.equals(attrs[i].getName()))
+                mattrType = attrs[i].getType();
         }
         return mattrType;
     }

==================================================
DeltaManager.java
index 9fdcb1a123..8fef4e8d49 100644
--- a/java/org/apache/catalina/deploy/NamingResourcesImpl.java
+++ b/java/org/apache/catalina/deploy/NamingResourcesImpl.java
@@ -1039,18 +1039,16 @@ public class NamingResourcesImpl extends LifecycleMBeanBase
                     name, container, closeMethod));
             return;
         }
-        if (m != null) {
-            try {
-                m.invoke(resource, (Object[]) null);
-            } catch (IllegalArgumentException | IllegalAccessException e) {
-                log.warn(sm.getString("namingResources.cleanupCloseFailed",
-                        closeMethod, name, container), e);
-            } catch (InvocationTargetException e) {
-                Throwable t = ExceptionUtils.unwrapInvocationTargetException(e);
-                ExceptionUtils.handleThrowable(t);
-                log.warn(sm.getString("namingResources.cleanupCloseFailed",
-                        closeMethod, name, container), t);
-            }
+        try {
+            m.invoke(resource, (Object[]) null);
+        } catch (IllegalArgumentException | IllegalAccessException e) {
+            log.warn(sm.getString("namingResources.cleanupCloseFailed",
+                    closeMethod, name, container), e);
+        } catch (InvocationTargetException e) {
+            Throwable t = ExceptionUtils.unwrapInvocationTargetException(e);
+            ExceptionUtils.handleThrowable(t);
+            log.warn(sm.getString("namingResources.cleanupCloseFailed",
+                    closeMethod, name, container), t);
         }
     }
 

==================================================
WebappLoader.java
index b68cbc2c54..d2a3c01b5c 100644
--- a/java/org/apache/catalina/ha/session/DeltaManager.java
+++ b/java/org/apache/catalina/ha/session/DeltaManager.java
@@ -1187,9 +1187,7 @@ public class DeltaManager extends ClusterManagerBase{
         try {
 
             ClassLoader[] loaders = getClassLoaders();
-            if ( loaders != null && loaders.length > 0) {
-                Thread.currentThread().setContextClassLoader(loaders[0]);
-            }
+            Thread.currentThread().setContextClassLoader(loaders[0]);
             if (log.isDebugEnabled()) {
                 log.debug(sm.getString("deltaManager.receiveMessage.eventType",
                         getName(), msg.getEventTypeString(), sender));

==================================================
SessionUtils.java
index 52aca0e54c..7c1eefc67e 100644
--- a/java/org/apache/catalina/loader/WebappLoader.java
+++ b/java/org/apache/catalina/loader/WebappLoader.java
@@ -650,7 +650,6 @@ public class WebappLoader extends LifecycleMBeanBase
             Method m=loader.getClass().getMethod("getClasspath", new Class[] {});
             if( log.isTraceEnabled())
                 log.trace("getClasspath " + m );
-            if( m==null ) return null;
             Object o=m.invoke( loader, new Object[] {} );
             if( log.isDebugEnabled() )
                 log.debug("gotClasspath " + o);

==================================================
RewriteValve.java
index 121c4df69a..8336ed89c8 100644
--- a/java/org/apache/catalina/manager/util/SessionUtils.java
+++ b/java/org/apache/catalina/manager/util/SessionUtils.java
@@ -122,12 +122,10 @@ public class SessionUtils {
                 if (null != probableEngine) {
                     try {
                         Method readMethod = probableEngine.getClass().getMethod("getLocale", (Class<?>[])null);//$NON-NLS-1$
-                        if (null != readMethod) {
-                            // Call the property getter and return the value
-                            Object possibleLocale = readMethod.invoke(probableEngine, (Object[]) null);
-                            if (possibleLocale instanceof Locale) {
-                                locale = (Locale) possibleLocale;
-                            }
+                        // Call the property getter and return the value
+                        Object possibleLocale = readMethod.invoke(probableEngine, (Object[]) null);
+                        if (possibleLocale instanceof Locale) {
+                            locale = (Locale) possibleLocale;
                         }
                     } catch (Exception e) {
                         Throwable t = ExceptionUtils

==================================================
Compiler.java
index 18f51091e2..bb57f8bba8 100644
--- a/java/org/apache/catalina/valves/rewrite/RewriteValve.java
+++ b/java/org/apache/catalina/valves/rewrite/RewriteValve.java
@@ -122,13 +122,11 @@ public class RewriteValve extends ValveBase {
             File file = new File(getConfigBase(), resourceName);
             try {
                 if (!file.exists()) {
-                    if (resourceName != null) {
-                        // Use getResource and getResourceAsStream
-                        is = getClass().getClassLoader()
-                            .getResourceAsStream(resourceName);
-                        if (is != null && container.getLogger().isDebugEnabled()) {
-                            container.getLogger().debug("Read configuration from CL at " + resourceName);
-                        }
+                    // Use getResource and getResourceAsStream
+                    is = getClass().getClassLoader()
+                        .getResourceAsStream(resourceName);
+                    if (is != null && container.getLogger().isDebugEnabled()) {
+                        container.getLogger().debug("Read configuration from CL at " + resourceName);
                     }
                 } else {
                     if (container.getLogger().isDebugEnabled()) {

==================================================
