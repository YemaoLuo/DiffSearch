6336f1392213f1a19d2f5f0a4d9543873b952417
==================================================
Fix tests broken after addition of further validation on the server
==================================================
Mark Thomas
==================================================
Sat Mar 25 08:24:38 2017 +0000
==================================================
Http2TestBase.java
Fix tests broken after addition of further validation on the server

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1788647 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestHttp2Limits.java
index 4e13266eed..5b7c1a3102 100644
--- a/test/org/apache/coyote/http2/Http2TestBase.java
+++ b/test/org/apache/coyote/http2/Http2TestBase.java
@@ -177,6 +177,7 @@ public abstract class Http2TestBase extends TomcatBaseTest {
             int streamId, String url) {
         List<Header> headers = new ArrayList<>(3);
         headers.add(new Header(":method", "GET"));
+        headers.add(new Header(":scheme", "http"));
         headers.add(new Header(":path", url));
         headers.add(new Header(":authority", "localhost:" + getPort()));
 
@@ -215,6 +216,7 @@ public abstract class Http2TestBase extends TomcatBaseTest {
             int streamId) {
         List<Header> headers = new ArrayList<>(3);
         headers.add(new Header(":method", "GET"));
+        headers.add(new Header(":scheme", "http"));
         headers.add(new Header(":path", "/simple"));
 
         buildSimpleGetRequestPart1(frameHeader, headersPayload, headers, streamId);
@@ -306,6 +308,7 @@ public abstract class Http2TestBase extends TomcatBaseTest {
             byte[] trailersFrameHeader, ByteBuffer trailersPayload, int streamId) {
         MimeHeaders headers = new MimeHeaders();
         headers.addValue(":method").setString("POST");
+        headers.addValue(":scheme").setString("http");
         headers.addValue(":path").setString("/simple");
         headers.addValue(":authority").setString("localhost:" + getPort());
         if (useExpectation) {

==================================================
TestHttp2Section_8_1.java
index 9af34a3796..817dcfb70a 100644
--- a/test/org/apache/coyote/http2/TestHttp2Limits.java
+++ b/test/org/apache/coyote/http2/TestHttp2Limits.java
@@ -41,15 +41,15 @@ public class TestHttp2Limits extends Http2TestBase {
     @Test
     public void testHeaderLimits100x32() throws Exception {
         // Just within default maxHeaderCount
-        // Note request has 3 standard headers
-        doTestHeaderLimits(97, 32, 0);
+        // Note request has 4 standard headers
+        doTestHeaderLimits(96, 32, 0);
     }
 
 
     @Test
     public void testHeaderLimits101x32() throws Exception {
         // Just above default maxHeaderCount
-        doTestHeaderLimits(98, 32, 1);
+        doTestHeaderLimits(97, 32, 1);
     }
 
 
@@ -61,17 +61,17 @@ public class TestHttp2Limits extends Http2TestBase {
 
 
     @Test
-    public void testHeaderLimits8x1001() throws Exception {
+    public void testHeaderLimits8x1144() throws Exception {
         // Just within default maxHttpHeaderSize
-        // per header overhead plus standard 2 headers
-        doTestHeaderLimits(8, 1001, 0);
+        // per header overhead plus standard 3 headers
+        doTestHeaderLimits(7, 1144, 0);
     }
 
 
     @Test
-    public void testHeaderLimits8x1002() throws Exception {
+    public void testHeaderLimits8x1145() throws Exception {
         // Just above default maxHttpHeaderSize
-        doTestHeaderLimits(8, 1002, 1);
+        doTestHeaderLimits(7, 1145, 1);
     }
 
 
@@ -263,6 +263,7 @@ public class TestHttp2Limits extends Http2TestBase {
             String path) throws Exception {
         MimeHeaders headers = new MimeHeaders();
         headers.addValue(":method").setString("GET");
+        headers.addValue(":scheme").setString("http");
         headers.addValue(":path").setString(path);
         headers.addValue(":authority").setString("localhost:" + getPort());
         for (String[] customHeader : customHeaders) {

==================================================
