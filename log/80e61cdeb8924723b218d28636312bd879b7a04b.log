80e61cdeb8924723b218d28636312bd879b7a04b
==================================================
Refactor to reduce code duplication
==================================================
Mark Emlyn
==================================================
Thu Aug 15 14:25:30 2013 +0000
==================================================
HTMLManagerServlet.java
Refactor to reduce code duplication

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1514291 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ManagerServlet.java
index 86c8f62742..fb77ac5761 100644
--- a/java/org/apache/catalina/manager/HTMLManagerServlet.java
+++ b/java/org/apache/catalina/manager/HTMLManagerServlet.java
@@ -118,7 +118,8 @@ public final class HTMLManagerServlet extends ManagerServlet {
                       HttpServletResponse response)
         throws IOException, ServletException {
 
-        StringManager smClient = getStringManager(request);
+        StringManager smClient = StringManager.getManager(
+                Constants.Package, request.getLocales());
 
         // Identify the request parameters that we need
         // By obtaining the command from the pathInfo, per-command security can
@@ -179,7 +180,8 @@ public final class HTMLManagerServlet extends ManagerServlet {
                       HttpServletResponse response)
         throws IOException, ServletException {
 
-        StringManager smClient = getStringManager(request);
+        StringManager smClient = StringManager.getManager(
+                Constants.Package, request.getLocales());
 
         // Identify the request parameters that we need
         // By obtaining the command from the pathInfo, per-command security can

==================================================
HTMLHostManagerServlet.java
index 5d067fa7cc..a4a81aae48 100644
--- a/java/org/apache/catalina/manager/ManagerServlet.java
+++ b/java/org/apache/catalina/manager/ManagerServlet.java
@@ -306,7 +306,8 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
                       HttpServletResponse response)
         throws IOException, ServletException {
 
-        StringManager smClient = getStringManager(request);
+        StringManager smClient = StringManager.getManager(
+                Constants.Package, request.getLocales());
 
         // Identify the request parameters that we need
         String command = request.getPathInfo();
@@ -399,7 +400,8 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
                       HttpServletResponse response)
         throws IOException, ServletException {
 
-        StringManager smClient = getStringManager(request);
+        StringManager smClient = StringManager.getManager(
+                Constants.Package, request.getLocales());
 
         // Identify the request parameters that we need
         String command = request.getPathInfo();
@@ -1558,21 +1560,6 @@ public class ManagerServlet extends HttpServlet implements ContainerServlet {
     }
 
 
-    protected StringManager getStringManager(HttpServletRequest req) {
-        Enumeration<Locale> requestedLocales = req.getLocales();
-        while (requestedLocales.hasMoreElements()) {
-            Locale locale = requestedLocales.nextElement();
-            StringManager result = StringManager.getManager(Constants.Package,
-                    locale);
-            if (result.getLocale().equals(locale)) {
-                return result;
-            }
-        }
-        // Return the default
-        return sm;
-    }
-
-
     protected static boolean validateContextName(ContextName cn,
             PrintWriter writer, StringManager sm) {
 

==================================================
HostManagerServlet.java
index 34130fc365..f337df98b3 100644
--- a/java/org/apache/catalina/manager/host/HTMLHostManagerServlet.java
+++ b/java/org/apache/catalina/manager/host/HTMLHostManagerServlet.java
@@ -80,7 +80,8 @@ public final class HTMLHostManagerServlet extends HostManagerServlet {
                       HttpServletResponse response)
         throws IOException, ServletException {
 
-        StringManager smClient = getStringManager(request);
+        StringManager smClient = StringManager.getManager(
+                Constants.Package, request.getLocales());
 
         // Identify the request parameters that we need
         String command = request.getPathInfo();
@@ -120,7 +121,8 @@ public final class HTMLHostManagerServlet extends HostManagerServlet {
     public void doPost(HttpServletRequest request, HttpServletResponse response)
             throws ServletException, IOException {
 
-        StringManager smClient = getStringManager(request);
+        StringManager smClient = StringManager.getManager(
+                Constants.Package, request.getLocales());
 
         // Identify the request parameters that we need
         String command = request.getPathInfo();

==================================================
Diagnostics.java
index 848a096bbb..a101feb5c7 100644
--- a/java/org/apache/catalina/manager/host/HostManagerServlet.java
+++ b/java/org/apache/catalina/manager/host/HostManagerServlet.java
@@ -22,8 +22,6 @@ import java.io.IOException;
 import java.io.InputStream;
 import java.io.OutputStream;
 import java.io.PrintWriter;
-import java.util.Enumeration;
-import java.util.Locale;
 import java.util.StringTokenizer;
 
 import javax.servlet.ServletException;
@@ -196,7 +194,8 @@ public class HostManagerServlet
                       HttpServletResponse response)
         throws IOException, ServletException {
 
-        StringManager smClient = getStringManager(request);
+        StringManager smClient = StringManager.getManager(
+                Constants.Package, request.getLocales());
 
         // Identify the request parameters that we need
         String command = request.getPathInfo();
@@ -690,19 +689,4 @@ public class HostManagerServlet
         }
         return configBase;
     }
-
-
-    protected StringManager getStringManager(HttpServletRequest req) {
-        Enumeration<Locale> requestedLocales = req.getLocales();
-        while (requestedLocales.hasMoreElements()) {
-            Locale locale = requestedLocales.nextElement();
-            StringManager result = StringManager.getManager(Constants.Package,
-                    locale);
-            if (result.getLocale().equals(locale)) {
-                return result;
-            }
-        }
-        // Return the default
-        return sm;
-    }
 }

==================================================
StringManager.java
index 9032e27429..8d61e22a1d 100644
--- a/java/org/apache/tomcat/util/Diagnostics.java
+++ b/java/org/apache/tomcat/util/Diagnostics.java
@@ -387,27 +387,6 @@ public class Diagnostics {
         return "";
     }
 
-    /**
-     * Retrieve the StringManager for a list of Locales.
-     * The first StringManager found will be returned.
-     *
-     * @param requestedLocales the list of locales
-     * @return the found StringManager or the default
-     *         StringManager
-     */
-    private static StringManager getStringManager(
-            Enumeration<Locale> requestedLocales) {
-        while (requestedLocales.hasMoreElements()) {
-            Locale locale = requestedLocales.nextElement();
-            StringManager result = StringManager.getManager(PACKAGE, locale);
-            if (result.getLocale().equals(locale)) {
-                return result;
-            }
-        }
-        // Return the default
-        return sm;
-    }
-
     /**
      * Retrieves a formatted JVM thread dump.
      * The default StringManager will be used.
@@ -427,7 +406,8 @@ public class Diagnostics {
      * @return the formatted JVM thread dump
      */
     public static String getThreadDump(Enumeration<Locale> requestedLocales) {
-        return getThreadDump(getStringManager(requestedLocales));
+        return getThreadDump(
+                StringManager.getManager(PACKAGE, requestedLocales));
     }
 
     /**
@@ -501,7 +481,7 @@ public class Diagnostics {
      * @return the formatted JVM information text
      */
     public static String getVMInfo(Enumeration<Locale> requestedLocales) {
-        return getVMInfo(getStringManager(requestedLocales));
+        return getVMInfo(StringManager.getManager(PACKAGE, requestedLocales));
     }
 
     /**

==================================================
