99df5a9ae315abfa2d1e5e603725003dddb78fc3
==================================================
Code clean-up for o.a.el
==================================================
Mark Emlyn
==================================================
Thu Aug 16 20:59:25 2012 +0000
==================================================
EvaluationContext.java
Code clean-up for o.a.el
 - Remove unnecessary warnings
 - Java 7 <>

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1374052 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ExpressionBuilder.java
index 3e3841a243..657577d83c 100644
--- a/java/org/apache/el/lang/EvaluationContext.java
+++ b/java/org/apache/el/lang/EvaluationContext.java
@@ -55,7 +55,7 @@ public final class EvaluationContext extends ELContext {
 
     @Override
     // Can't use Class<?> because API needs to match specification in superclass
-    public Object getContext(@SuppressWarnings("rawtypes") Class key) {
+    public Object getContext(Class key) {
         return this.elContext.getContext(key);
     }
 
@@ -71,8 +71,7 @@ public final class EvaluationContext extends ELContext {
 
     @Override
     // Can't use Class<?> because API needs to match specification in superclass
-    public void putContext(@SuppressWarnings("rawtypes") Class key,
-            Object contextObject) {
+    public void putContext(Class key, Object contextObject) {
         this.elContext.putContext(key, contextObject);
     }
 

==================================================
FunctionMapperImpl.java
index 8e48ecebe7..765d1a163b 100644
--- a/java/org/apache/el/lang/ExpressionBuilder.java
+++ b/java/org/apache/el/lang/ExpressionBuilder.java
@@ -72,7 +72,7 @@ public final class ExpressionBuilder implements NodeVisitor {
     }
 
     private static final ConcurrentCache<String, Node> cache =
-        new ConcurrentCache<String, Node>(CACHE_SIZE);
+            new ConcurrentCache<>(CACHE_SIZE);
 
     private FunctionMapper fnMapper;
 

==================================================
VariableMapperImpl.java
index 1b0e36228d..141c378281 100644
--- a/java/org/apache/el/lang/FunctionMapperImpl.java
+++ b/java/org/apache/el/lang/FunctionMapperImpl.java
@@ -58,7 +58,7 @@ public class FunctionMapperImpl extends FunctionMapper implements
 
     public void addFunction(String prefix, String localName, Method m) {
         if (this.functions == null) {
-            this.functions = new HashMap<String, Function>();
+            this.functions = new HashMap<>();
         }
         Function f = new Function(prefix, localName, m);
         synchronized (this) {
@@ -81,7 +81,6 @@ public class FunctionMapperImpl extends FunctionMapper implements
      *
      * @see java.io.Externalizable#readExternal(java.io.ObjectInput)
      */
-    @SuppressWarnings("unchecked")
     @Override
     public void readExternal(ObjectInput in) throws IOException,
             ClassNotFoundException {

==================================================
AstMethodParameters.java
index 629a90f386..90071e01a3 100644
--- a/java/org/apache/el/lang/VariableMapperImpl.java
+++ b/java/org/apache/el/lang/VariableMapperImpl.java
@@ -31,7 +31,7 @@ public class VariableMapperImpl extends VariableMapper implements Externalizable
 
     private static final long serialVersionUID = 1L;
 
-    private Map<String, ValueExpression> vars = new HashMap<String, ValueExpression>();
+    private Map<String, ValueExpression> vars = new HashMap<>();
 
     public VariableMapperImpl() {
         super();
@@ -48,9 +48,9 @@ public class VariableMapperImpl extends VariableMapper implements Externalizable
         return this.vars.put(variable, expression);
     }
 
-    @SuppressWarnings("unchecked")
     @Override
-    public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException {
+    public void readExternal(ObjectInput in) throws IOException,
+            ClassNotFoundException {
         this.vars = (Map<String, ValueExpression>) in.readObject();
     }
 

==================================================
ConcurrentCache.java
index 6b59090233..5b7fc54809 100644
--- a/java/org/apache/el/parser/AstMethodParameters.java
+++ b/java/org/apache/el/parser/AstMethodParameters.java
@@ -31,7 +31,7 @@ public final class AstMethodParameters extends SimpleNode {
     }
 
     public Object[] getParameters(EvaluationContext ctx) {
-        ArrayList<Object> params = new ArrayList<Object>();
+        ArrayList<Object> params = new ArrayList<>();
         for (int i = 0; i < this.jjtGetNumChildren(); i++) {
             params.add(this.jjtGetChild(i).getValue(ctx));
         }

==================================================
ReflectionUtil.java
index 26029bbc1f..1be17abaa8 100644
--- a/java/org/apache/el/util/ConcurrentCache.java
+++ b/java/org/apache/el/util/ConcurrentCache.java
@@ -30,8 +30,8 @@ public final class ConcurrentCache<K,V> {
 
     public ConcurrentCache(int size) {
         this.size = size;
-        this.eden = new ConcurrentHashMap<K,V>(size);
-        this.longterm = new WeakHashMap<K,V>(size);
+        this.eden = new ConcurrentHashMap<>(size);
+        this.longterm = new WeakHashMap<>(size);
     }
 
     public V get(K k) {

==================================================
