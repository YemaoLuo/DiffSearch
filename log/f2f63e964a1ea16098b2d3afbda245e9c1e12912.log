f2f63e964a1ea16098b2d3afbda245e9c1e12912
==================================================
Javadoc fixes
==================================================
Mark Thomas
==================================================
Fri Apr 17 21:33:09 2015 +0000
==================================================
Engine.java
Javadoc fixes

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1674408 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Executor.java
index 9fe4096ffe..66b4411411 100644
--- a/java/org/apache/catalina/Engine.java
+++ b/java/org/apache/catalina/Engine.java
@@ -14,8 +14,6 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-
-
 package org.apache.catalina;
 
 /**
@@ -44,12 +42,8 @@ package org.apache.catalina;
  */
 public interface Engine extends Container {
 
-
-    // ------------------------------------------------------------- Properties
-
-
     /**
-     * Return the default hostname for this Engine.
+     * @return the default host name for this Engine.
      */
     public String getDefaultHost();
 
@@ -63,7 +57,7 @@ public interface Engine extends Container {
 
 
     /**
-     * Retrieve the JvmRouteId for this engine.
+     * @return the JvmRouteId for this engine.
      */
     public String getJvmRoute();
 
@@ -78,7 +72,7 @@ public interface Engine extends Container {
 
 
     /**
-     * Return the <code>Service</code> with which we are associated (if any).
+     * @return the <code>Service</code> with which we are associated (if any).
      */
     public Service getService();
 
@@ -89,6 +83,4 @@ public interface Engine extends Container {
      * @param service The service that owns this Engine
      */
     public void setService(Service service);
-
-
 }

==================================================
Group.java
index 5f323c70b1..16b3bbb74d 100644
--- a/java/org/apache/catalina/Executor.java
+++ b/java/org/apache/catalina/Executor.java
@@ -18,8 +18,8 @@ package org.apache.catalina;
 
 import java.util.concurrent.TimeUnit;
 
-
 public interface Executor extends java.util.concurrent.Executor, Lifecycle {
+
     public String getName();
 
     /**
@@ -31,6 +31,9 @@ public interface Executor extends java.util.concurrent.Executor, Lifecycle {
      * time until it throws a RejectedExecutionException
      *
      * @param command the runnable task
+     * @param timeout the length of time to wait for the task to complete
+     * @param unit    the units in which timeout is expressed
+     *
      * @throws java.util.concurrent.RejectedExecutionException if this task
      * cannot be accepted for execution - the queue is full
      * @throws NullPointerException if command or unit is null

==================================================
