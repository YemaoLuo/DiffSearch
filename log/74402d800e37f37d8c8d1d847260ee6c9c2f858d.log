74402d800e37f37d8c8d1d847260ee6c9c2f858d
==================================================
Remove redundant imports
==================================================
Mark Emlyn
==================================================
Wed Aug 4 22:29:39 2010 +0000
==================================================
PersistenceUnits.java
index 17e1ed97dd..5af6d24c69 100644
--- a/checkstyle.xml
+++ b/checkstyle.xml
@@ -31,8 +31,18 @@
     <module name="IllegalInstantiation"/>
     
     <!-- Imports -->
-    <module name="IllegalImport"/>
     <module name="AvoidStarImport"/>
+    <module name="AvoidStaticImport"/>
+    <module name="IllegalImport"/>
+    <!-- Will trigger ~600 errors
+    <module name="ImportOrder">
+        <property name="groups" value="java,javax,async,jsp2,junit,org,util"/>
+        <property name="ordered" value="true"/>
+        <property name="separated" value="true"/>
+        <property name="option" value="above"/>
+    </module>
+    -->
+    <module name="RedundantImport"/>
     <!--
     Do not use - does not take account of imports required for Javadocs
     <module name="UnusedImports"/>

==================================================
JspFactory.java
index 0d3cf24170..3f5184566b 100644
--- a/java/javax/persistence/PersistenceUnits.java
+++ b/java/javax/persistence/PersistenceUnits.java
@@ -22,7 +22,6 @@ import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
-import javax.persistence.PersistenceUnit;
 
 @Target({ElementType.TYPE})
 @Retention(RetentionPolicy.RUNTIME)

==================================================
TagLibraryInfo.java
index 248f8c5f70..278c528326 100644
--- a/java/javax/servlet/jsp/JspFactory.java
+++ b/java/javax/servlet/jsp/JspFactory.java
@@ -20,7 +20,6 @@ import javax.servlet.Servlet;
 import javax.servlet.ServletContext;
 import javax.servlet.ServletRequest;
 import javax.servlet.ServletResponse;
-import javax.servlet.jsp.PageContext;
 
 /**
  * <p>

==================================================
SingleSignOnEntry.java
index c382b76343..8ed8225795 100644
--- a/java/javax/servlet/jsp/tagext/TagLibraryInfo.java
+++ b/java/javax/servlet/jsp/tagext/TagLibraryInfo.java
@@ -16,8 +16,6 @@
  */
 package javax.servlet.jsp.tagext;
 
-import javax.servlet.jsp.tagext.TagInfo;
-import javax.servlet.jsp.tagext.TagFileInfo;
 
 /**
  * Translation-time information associated with a taglib directive, and its

==================================================
DefaultInstanceManager.java
index af2a02c77f..cb2526b0eb 100644
--- a/java/org/apache/catalina/authenticator/SingleSignOnEntry.java
+++ b/java/org/apache/catalina/authenticator/SingleSignOnEntry.java
@@ -19,7 +19,6 @@ package org.apache.catalina.authenticator;
 import java.security.Principal;
 
 import org.apache.catalina.Session;
-import org.apache.catalina.authenticator.Constants;
 
 /**
  * A class that represents entries in the cache of authenticated users.

==================================================
JvmRouteBinderValve.java
index 068f6c15ad..8b3c6b1fa8 100644
--- a/java/org/apache/catalina/core/DefaultInstanceManager.java
+++ b/java/org/apache/catalina/core/DefaultInstanceManager.java
@@ -19,18 +19,18 @@
 package org.apache.catalina.core;
 
 
+import java.io.IOException;
+import java.io.InputStream;
 import java.lang.reflect.Field;
 import java.lang.reflect.InvocationTargetException;
 import java.lang.reflect.Method;
 import java.lang.reflect.Modifier;
-import java.util.Map;
-import java.util.Properties;
 import java.security.AccessController;
 import java.security.PrivilegedAction;
-import java.security.PrivilegedExceptionAction;
 import java.security.PrivilegedActionException;
-import java.io.InputStream;
-import java.io.IOException;
+import java.security.PrivilegedExceptionAction;
+import java.util.Map;
+import java.util.Properties;
 
 import javax.annotation.PostConstruct;
 import javax.annotation.PreDestroy;
@@ -40,16 +40,15 @@ import javax.naming.Context;
 import javax.naming.NamingException;
 import javax.persistence.PersistenceContext;
 import javax.persistence.PersistenceUnit;
-import javax.xml.ws.WebServiceRef;
 import javax.servlet.Filter;
 import javax.servlet.Servlet;
+import javax.xml.ws.WebServiceRef;
 
-import org.apache.catalina.security.SecurityUtil;
 import org.apache.catalina.ContainerServlet;
 import org.apache.catalina.Globals;
-import org.apache.catalina.core.Constants;
-import org.apache.tomcat.util.res.StringManager;
+import org.apache.catalina.security.SecurityUtil;
 import org.apache.tomcat.InstanceManager;
+import org.apache.tomcat.util.res.StringManager;
 
 /**
  * @version $Id$

==================================================
SimpleCoordinator.java
index d3312cf8c5..a504eedc58 100644
--- a/java/org/apache/catalina/ha/session/JvmRouteBinderValve.java
+++ b/java/org/apache/catalina/ha/session/JvmRouteBinderValve.java
@@ -27,18 +27,17 @@ import org.apache.catalina.Host;
 import org.apache.catalina.LifecycleException;
 import org.apache.catalina.Manager;
 import org.apache.catalina.Session;
+import org.apache.catalina.connector.Request;
+import org.apache.catalina.connector.Response;
 import org.apache.catalina.ha.CatalinaCluster;
 import org.apache.catalina.ha.ClusterManager;
 import org.apache.catalina.ha.ClusterMessage;
 import org.apache.catalina.ha.ClusterValve;
-import org.apache.catalina.ha.session.DeltaSession;
-import org.apache.catalina.connector.Request;
-import org.apache.catalina.connector.Response;
 import org.apache.catalina.session.ManagerBase;
 import org.apache.catalina.session.PersistentManager;
 import org.apache.catalina.util.LifecycleBase;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.catalina.valves.ValveBase;
+import org.apache.tomcat.util.res.StringManager;
 
 /**
  * Valve to handle Tomcat jvmRoute takeover using mod_jk module after node

==================================================
RemoteIpValve.java
index 9b0b178c9d..8679cc3cab 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/SimpleCoordinator.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/SimpleCoordinator.java
@@ -15,9 +15,8 @@
  */
 package org.apache.catalina.tribes.group.interceptors;
 
-import static java.util.concurrent.TimeUnit.MILLISECONDS;
-
 import java.util.Arrays;
+import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicBoolean;
 
 import org.apache.catalina.tribes.ChannelException;
@@ -79,7 +78,7 @@ public class SimpleCoordinator extends ChannelInterceptorBase {
                 stableCount++;
             }
             try {
-                MILLISECONDS.sleep(250);
+                TimeUnit.MILLISECONDS.sleep(250);
             } catch (final InterruptedException e) {
                 Thread.currentThread().interrupt();
             }

==================================================
SSLValve.java
index f8d533b507..9c8dfd0de5 100644
--- a/java/org/apache/catalina/valves/RemoteIpValve.java
+++ b/java/org/apache/catalina/valves/RemoteIpValve.java
@@ -28,14 +28,11 @@ import java.util.regex.PatternSyntaxException;
 import javax.servlet.ServletException;
 import javax.servlet.ServletRequest;
 
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.catalina.connector.Request;
 import org.apache.catalina.connector.Response;
-import org.apache.catalina.valves.Constants;
-import org.apache.catalina.valves.RequestFilterValve;
-import org.apache.catalina.valves.ValveBase;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
+import org.apache.tomcat.util.res.StringManager;
 
 /**
  * <p>

==================================================
DirContextURLConnection.java
index 5f0d346186..8d6294003b 100644
--- a/java/org/apache/catalina/valves/SSLValve.java
+++ b/java/org/apache/catalina/valves/SSLValve.java
@@ -17,15 +17,13 @@
 
 package org.apache.catalina.valves;
 
-import java.io.IOException;
 import java.io.ByteArrayInputStream;
-
+import java.io.IOException;
 import java.security.cert.CertificateFactory;
 import java.security.cert.X509Certificate;
 
 import javax.servlet.ServletException;
 
-import org.apache.catalina.valves.ValveBase;
 import org.apache.catalina.connector.Request;
 import org.apache.catalina.connector.Response;
 

==================================================
Attribute.java
index 428ec0223d..1af14d2b3a 100644
--- a/java/org/apache/naming/resources/DirContextURLConnection.java
+++ b/java/org/apache/naming/resources/DirContextURLConnection.java
@@ -17,11 +17,11 @@
 
 package org.apache.naming.resources;
 
-import java.net.URL;
-import java.net.URLConnection;
+import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.io.InputStream;
-import java.io.FileNotFoundException;
+import java.net.URL;
+import java.net.URLConnection;
 import java.security.Permission;
 import java.util.ArrayList;
 import java.util.Collections;
@@ -31,15 +31,15 @@ import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.Vector;
-import javax.naming.NamingException;
-import javax.naming.NamingEnumeration;
+
 import javax.naming.NameClassPair;
-import javax.naming.directory.DirContext;
+import javax.naming.NamingEnumeration;
+import javax.naming.NamingException;
 import javax.naming.directory.Attribute;
 import javax.naming.directory.Attributes;
+import javax.naming.directory.DirContext;
+
 import org.apache.naming.JndiPermission;
-import org.apache.naming.resources.Resource;
-import org.apache.naming.resources.ResourceAttributes;
 import org.apache.tomcat.util.http.FastHttpDateFormat;
 
 /**

==================================================
FieldOrMethod.java
index 0a4b0a962f..e5d943c20d 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Attribute.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Attribute.java
@@ -23,8 +23,8 @@ import java.io.IOException;
 import java.io.Serializable;
 import java.util.HashMap;
 import java.util.Map;
+
 import org.apache.tomcat.util.bcel.Constants;
-import org.apache.tomcat.util.bcel.classfile.ConstantUtf8;
 
 /**
  * Abstract super class for <em>Attribute</em> objects. Currently the

==================================================
TestStandardContextAliases.java
index 141b58d50c..979b013bc8 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/FieldOrMethod.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/FieldOrMethod.java
@@ -19,8 +19,8 @@ package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInputStream;
 import java.io.IOException;
+
 import org.apache.tomcat.util.bcel.Constants;
-import org.apache.tomcat.util.bcel.classfile.Attribute;
 
 /** 
  * Abstract super class for fields and methods.

==================================================
TestWebXmlOrdering.java
index 7a2451802e..7bb8a143e3 100644
--- a/test/org/apache/catalina/core/TestStandardContextAliases.java
+++ b/test/org/apache/catalina/core/TestStandardContextAliases.java
@@ -28,7 +28,6 @@ import javax.servlet.http.HttpServlet;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
 
-import org.apache.catalina.core.StandardContext;
 import org.apache.catalina.startup.Tomcat;
 import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;

==================================================
TestRemoteIpValve.java
index 64b59c7121..bbaa698ad8 100644
--- a/test/org/apache/catalina/deploy/TestWebXmlOrdering.java
+++ b/test/org/apache/catalina/deploy/TestWebXmlOrdering.java
@@ -23,8 +23,6 @@ import java.util.Iterator;
 import java.util.Map;
 import java.util.Set;
 
-import org.apache.catalina.deploy.WebXml;
-
 import junit.framework.TestCase;
 
 /**

==================================================
TestELEvaluation.java
index 324294187e..c03dbc5df9 100644
--- a/test/org/apache/catalina/valves/TestRemoteIpValve.java
+++ b/test/org/apache/catalina/valves/TestRemoteIpValve.java
@@ -28,7 +28,6 @@ import junit.framework.TestCase;
 
 import org.apache.catalina.connector.Request;
 import org.apache.catalina.connector.Response;
-import org.apache.catalina.valves.ValveBase;
 
 /**
  * {@link RemoteIpValve} Tests

==================================================
TestProxyDirContext.java
index d394c2d4ac..33e231be6d 100644
--- a/test/org/apache/el/TestELEvaluation.java
+++ b/test/org/apache/el/TestELEvaluation.java
@@ -22,16 +22,15 @@ import java.lang.reflect.Method;
 import java.util.Date;
 
 import javax.el.ELException;
-import javax.el.ValueExpression;
 import javax.el.FunctionMapper;
+import javax.el.ValueExpression;
+
+import junit.framework.TestCase;
 
-import org.apache.el.ExpressionFactoryImpl;
 import org.apache.el.lang.ELSupport;
 import org.apache.jasper.compiler.TestAttributeParser;
 import org.apache.jasper.el.ELContextImpl;
 
-import junit.framework.TestCase;
-
 /**
  * Tests the EL engine directly. Similar tests may be found in
  * {@link TestAttributeParser} and {@link TestELInJsp}.

==================================================
TestCookies.java
index a858ba8ece..64954bc181 100644
--- a/test/org/apache/naming/resources/TestProxyDirContext.java
+++ b/test/org/apache/naming/resources/TestProxyDirContext.java
@@ -21,7 +21,6 @@ import javax.naming.NameNotFoundException;
 import org.apache.catalina.core.StandardContext;
 import org.apache.catalina.startup.Tomcat;
 import org.apache.catalina.startup.TomcatBaseTest;
-import org.apache.naming.resources.ProxyDirContext;
 
 /**
  * Unit test for the {@link ProxyDirContext}.

==================================================
