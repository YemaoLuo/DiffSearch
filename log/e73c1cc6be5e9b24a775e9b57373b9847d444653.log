e73c1cc6be5e9b24a775e9b57373b9847d444653
==================================================
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61210
==================================================
Mark Thomas
==================================================
Mon Aug 21 09:48:09 2017 +0000
==================================================
WebappClassLoaderBase.java
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61210
When running under a SecurityManager, do not print a warning about not being able to read a logging configuration file when that file does not exist.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1805613 13f79535-47bb-0310-9956-ffa450edef68



==================================================
SecurityClassLoad.java
index 019c4b207f..cf184cd30f 100644
--- a/java/org/apache/catalina/loader/WebappClassLoaderBase.java
+++ b/java/org/apache/catalina/loader/WebappClassLoaderBase.java
@@ -2485,4 +2485,24 @@ public abstract class WebappClassLoaderBase extends URLClassLoader
         }
         return null;
     }
+
+
+    @Override
+    public boolean hasLoggingConfig() {
+        if (Globals.IS_SECURITY_ENABLED) {
+            Boolean result = AccessController.doPrivileged(new PrivilegedHasLoggingConfig());
+            return result.booleanValue();
+        } else {
+            return findResource("logging.properties") != null;
+        }
+    }
+
+
+    private class PrivilegedHasLoggingConfig implements PrivilegedAction<Boolean> {
+
+        @Override
+        public Boolean run() {
+            return Boolean.valueOf(findResource("logging.properties") != null);
+        }
+    }
 }

==================================================
ClassLoaderLogManager.java
index e6600d3948..b9678ef20b 100644
--- a/java/org/apache/catalina/security/SecurityClassLoad.java
+++ b/java/org/apache/catalina/security/SecurityClassLoad.java
@@ -74,6 +74,7 @@ public final class SecurityClassLoad {
     private static final void loadLoaderPackage(ClassLoader loader) throws Exception {
         final String basePackage = "org.apache.catalina.loader.";
         loader.loadClass(basePackage + "WebappClassLoaderBase$PrivilegedFindClassByName");
+        loader.loadClass(basePackage + "WebappClassLoaderBase$PrivilegedHasLoggingConfig");
     }
 
 

==================================================
WebappProperties.java
index d31b865846..bfb01f3085 100644
--- a/java/org/apache/juli/ClassLoaderLogManager.java
+++ b/java/org/apache/juli/ClassLoaderLogManager.java
@@ -426,7 +426,11 @@ public class ClassLoaderLogManager extends LogManager {
         // Special case for URL classloaders which are used in containers:
         // only look in the local repositories to avoid redefining loggers 20 times
         try {
-            if (classLoader instanceof URLClassLoader) {
+            if (classLoader instanceof WebappProperties) {
+                if (((WebappProperties) classLoader).hasLoggingConfig()) {
+                    is = classLoader.getResourceAsStream("logging.properties");
+                }
+            } else if (classLoader instanceof URLClassLoader) {
                 URL logConfig = ((URLClassLoader)classLoader).findResource("logging.properties");
 
                 if(null != logConfig) {

==================================================
