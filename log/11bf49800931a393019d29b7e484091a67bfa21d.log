11bf49800931a393019d29b7e484091a67bfa21d
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=55267
==================================================
Mark Emlyn
==================================================
Tue Jul 23 14:21:38 2013 +0000
==================================================
AjpNioProcessor.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=55267
Separate read and write timeout for NIO and ensure that the write timeout is always the connection timeout configured in the connector. This prevents long Comet timeouts (which are intended for read operations) being used for writes which - particularly in error conditions - can cause long delays.
Since only NIO supports comet timeouts this change is only required in NIO.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1506053 13f79535-47bb-0310-9956-ffa450edef68



==================================================
InternalNioOutputBuffer.java
index b9b0026a2e..cb59cf9a39 100644
--- a/java/org/apache/coyote/ajp/AjpNioProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpNioProcessor.java
@@ -283,7 +283,7 @@ public class AjpNioProcessor extends AbstractAjpProcessor<NioChannel> {
 
         writeBuffer.flip();
 
-        long writeTimeout = att.getTimeout();
+        long writeTimeout = att.getWriteTimeout();
         Selector selector = null;
         try {
             selector = pool.get();

==================================================
NioServletOutputStream.java
index 17ad5d2bca..13334cce89 100644
--- a/java/org/apache/coyote/http11/InternalNioOutputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalNioOutputBuffer.java
@@ -119,7 +119,7 @@ public class InternalNioOutputBuffer extends AbstractOutputBuffer<NioChannel> {
         int written = 0;
         NioEndpoint.KeyAttachment att = (NioEndpoint.KeyAttachment)socket.getAttachment(false);
         if ( att == null ) throw new IOException("Key must be cancelled");
-        long writeTimeout = att.getTimeout();
+        long writeTimeout = att.getWriteTimeout();
         Selector selector = null;
         try {
             selector = pool.get();

==================================================
NioEndpoint.java
index a7b59a9704..f41c44644f 100644
--- a/java/org/apache/coyote/http11/upgrade/NioServletOutputStream.java
+++ b/java/org/apache/coyote/http11/upgrade/NioServletOutputStream.java
@@ -81,7 +81,7 @@ public class NioServletOutputStream extends AbstractServletOutputStream {
         if (att == null) {
             throw new IOException("Key must be cancelled");
         }
-        long writeTimeout = att.getTimeout();
+        long writeTimeout = att.getWriteTimeout();
         Selector selector = null;
         try {
             selector = pool.get();
@@ -110,7 +110,7 @@ public class NioServletOutputStream extends AbstractServletOutputStream {
         if (att == null) {
             throw new IOException("Key must be cancelled");
         }
-        long writeTimeout = att.getTimeout();
+        long writeTimeout = att.getWriteTimeout();
         Selector selector = null;
         try {
             selector = pool.get();

==================================================
