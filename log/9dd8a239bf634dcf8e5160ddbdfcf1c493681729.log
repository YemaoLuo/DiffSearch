9dd8a239bf634dcf8e5160ddbdfcf1c493681729
==================================================
Port fix for bug 34399 - disable the undeploy option if the webapp has not been 'deployed'
==================================================
Mark Emlyn
==================================================
Thu Sep 21 02:21:19 2006 +0000
==================================================
HTMLManagerServlet.java
Port fix for bug 34399 - disable the undeploy option if the webapp has not been 'deployed'
This occurs, for example, if the webapp is defined in server.xml


git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk@448434 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ManagerServlet.java
index feeabb1314..31363a4c8e 100644
--- a/java/org/apache/catalina/manager/LocalStrings.properties
+++ b/java/org/apache/catalina/manager/LocalStrings.properties
@@ -58,6 +58,7 @@ managerServlet.noRename=FAIL - Cannot deploy uploaded WAR for path {0}
 managerServlet.noRole=FAIL - User does not possess role {0}
 managerServlet.noSelf=FAIL - The manager can not reload, undeploy, stop, or undeploy itself
 managerServlet.noWrapper=Container has not called setWrapper() for this servlet
+managerServlet.notDeployed=FAIL - Context {0} is defined in server.xml and may not be undeployed
 managerServlet.reloaded=OK - Reloaded application at context path {0}
 managerServlet.undeployd=OK - Undeployed application at context path {0}
 managerServlet.resourcesAll=OK - Listed global resources of all types

==================================================
HostConfig.java
index d71ed0c2fb..d7dffceb3a 100644
--- a/java/org/apache/catalina/manager/ManagerServlet.java
+++ b/java/org/apache/catalina/manager/ManagerServlet.java
@@ -1277,6 +1277,12 @@ public class ManagerServlet
                 }
             }
 
+            if (!isDeployed(path)) {
+                writer.println(sm.getString("managerServlet.notDeployed",
+                        RequestUtil.filter(displayPath)));
+                return;
+            }
+
             if (!isServiced(path)) {
                 addServiced(path);
                 try {
@@ -1368,6 +1374,19 @@ public class ManagerServlet
     }
 
 
+    /**
+     * Invoke the isDeployed method on the deployer.
+     */
+    protected boolean isDeployed(String name) 
+        throws Exception {
+        String[] params = { name };
+        String[] signature = { "java.lang.String" };
+        Boolean result = 
+            (Boolean) mBeanServer.invoke(oname, "isDeployed", params, signature);
+        return result.booleanValue();
+    }
+    
+
     /**
      * Invoke the check method on the deployer.
      */
@@ -1380,7 +1399,7 @@ public class ManagerServlet
     
 
     /**
-     * Invoke the check method on the deployer.
+     * Invoke the isServiced method on the deployer.
      */
     protected boolean isServiced(String name) 
         throws Exception {
@@ -1393,7 +1412,7 @@ public class ManagerServlet
     
 
     /**
-     * Invoke the check method on the deployer.
+     * Invoke the addServiced method on the deployer.
      */
     protected void addServiced(String name) 
         throws Exception {
@@ -1404,7 +1423,7 @@ public class ManagerServlet
     
 
     /**
-     * Invoke the check method on the deployer.
+     * Invoke the removeServiced method on the deployer.
      */
     protected void removeServiced(String name) 
         throws Exception {

==================================================
