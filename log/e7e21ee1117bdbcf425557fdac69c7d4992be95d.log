e7e21ee1117bdbcf425557fdac69c7d4992be95d
==================================================
Tighten up UTF-8 handling
==================================================
Mark Emlyn
==================================================
Thu Feb 23 00:42:05 2012 +0000
==================================================
MessageInbound.java
Tighten up UTF-8 handling

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1292602 13f79535-47bb-0310-9956-ffa450edef68



==================================================
StreamInbound.java
index 842cf0f433..049bfe51a9 100644
--- a/java/org/apache/catalina/websocket/MessageInbound.java
+++ b/java/org/apache/catalina/websocket/MessageInbound.java
@@ -54,6 +54,7 @@ public abstract class MessageInbound extends StreamInbound {
             if (cb.remaining() == 0) {
                 resizeCharBuffer();
             }
+            // TODO This should fail on invalid UTF-8 input but doesn't
             read = r.read(cb.array(), cb.position(), cb.remaining());
         }
         cb.flip();

==================================================
WsOutbound.java
index a78d781d4f..a3e3c59aa9 100644
--- a/java/org/apache/catalina/websocket/StreamInbound.java
+++ b/java/org/apache/catalina/websocket/StreamInbound.java
@@ -20,6 +20,9 @@ import java.io.IOException;
 import java.io.InputStream;
 import java.io.InputStreamReader;
 import java.io.Reader;
+import java.nio.charset.CodingErrorAction;
+import java.nio.charset.MalformedInputException;
+import java.nio.charset.UnmappableCharacterException;
 
 import org.apache.coyote.http11.upgrade.UpgradeInbound;
 import org.apache.coyote.http11.upgrade.UpgradeOutbound;
@@ -68,8 +71,10 @@ public abstract class StreamInbound implements UpgradeInbound {
                 onBinaryData(wsIs);
                 return SocketState.UPGRADED;
             } else if (opCode == Constants.OPCODE_TEXT) {
-                InputStreamReader r =
-                        new InputStreamReader(wsIs, B2CConverter.UTF_8);
+                InputStreamReader r = new InputStreamReader(wsIs,
+                        B2CConverter.UTF_8.newDecoder()
+                            .onMalformedInput(CodingErrorAction.REPORT)
+                            .onUnmappableCharacter(CodingErrorAction.REPORT));
                 onTextData(r);
                 return SocketState.UPGRADED;
             }
@@ -88,6 +93,14 @@ public abstract class StreamInbound implements UpgradeInbound {
             // Unknown OpCode
             getOutbound().close(1002, null);
             return SocketState.CLOSED;
+        } catch (MalformedInputException mie) {
+            // Invalid UTF-8
+            getOutbound().close(1007, null);
+            return SocketState.CLOSED;
+        } catch (UnmappableCharacterException uce) {
+            // Invalid UTF-8
+            getOutbound().close(1007, null);
+            return SocketState.CLOSED;
         } catch (IOException ioe) {
             // Given something must have gone to reach this point, this might
             // not work but try it anyway.

==================================================
