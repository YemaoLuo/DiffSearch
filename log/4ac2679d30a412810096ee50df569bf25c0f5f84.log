4ac2679d30a412810096ee50df569bf25c0f5f84
==================================================
Refactor to always use the CustomObjectInputStream
==================================================
Mark Thomas
==================================================
Mon Jan 4 10:31:54 2016 +0000
==================================================
FileStore.java
Refactor to always use the CustomObjectInputStream

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1722831 13f79535-47bb-0310-9956-ffa450edef68



==================================================
JDBCStore.java
index 8608c5174e..c55091fbd1 100644
--- a/java/org/apache/catalina/session/FileStore.java
+++ b/java/org/apache/catalina/session/FileStore.java
@@ -235,12 +235,12 @@ public final class FileStore extends StoreBase {
             if (loader != null) {
                 classLoader = loader.getClassLoader();
             }
-            if (classLoader != null) {
-                Thread.currentThread().setContextClassLoader(classLoader);
-                ois = new CustomObjectInputStream(bis, classLoader);
+            if (classLoader == null) {
+                classLoader = getClass().getClassLoader();
             } else {
-                ois = new ObjectInputStream(bis);
+                Thread.currentThread().setContextClassLoader(classLoader);
             }
+            ois = new CustomObjectInputStream(bis, classLoader);
 
             StandardSession session = (StandardSession) manager.createEmptySession();
             session.readObjectData(ois);

==================================================
StandardManager.java
index df76085d25..7f06bcc82b 100644
--- a/java/org/apache/catalina/session/JDBCStore.java
+++ b/java/org/apache/catalina/session/JDBCStore.java
@@ -627,13 +627,12 @@ public class JDBCStore extends StoreBase {
                             if (loader != null) {
                                 classLoader = loader.getClassLoader();
                             }
-                            if (classLoader != null) {
-                                Thread.currentThread().setContextClassLoader(classLoader);
-                                ois = new CustomObjectInputStream(bis,
-                                        classLoader);
+                            if (classLoader == null) {
+                                classLoader = getClass().getClassLoader();
                             } else {
-                                ois = new ObjectInputStream(bis);
+                                Thread.currentThread().setContextClassLoader(classLoader);
                             }
+                            ois = new CustomObjectInputStream(bis, classLoader);
 
                             if (manager.getContext().getLogger().isDebugEnabled()) {
                                 manager.getContext().getLogger().debug(sm.getString(getStoreName() + ".loading",

==================================================
