5d79f51fdc7ff717d25066d590b3294b8f674abc
==================================================
UCDetector
==================================================
Mark Emlyn
==================================================
Wed Feb 20 11:48:02 2013 +0000
==================================================
CaptureLog.java
UCDetector
 - use final
 - reduce visibility
 - remove unused code

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1448103 13f79535-47bb-0310-9956-ffa450edef68



==================================================
SystemLogHandler.java
index 5e5be43aaa..5c56b5535c 100644
--- a/java/org/apache/tomcat/util/log/CaptureLog.java
+++ b/java/org/apache/tomcat/util/log/CaptureLog.java
@@ -14,7 +14,6 @@
  *  See the License for the specific language governing permissions and
  *  limitations under the License.
  */
-
 package org.apache.tomcat.util.log;
 
 import java.io.ByteArrayOutputStream;
@@ -33,8 +32,8 @@ class CaptureLog {
         ps = new PrintStream(baos);
     }
 
-    private ByteArrayOutputStream baos;
-    private PrintStream ps;
+    private final ByteArrayOutputStream baos;
+    private final PrintStream ps;
 
     protected PrintStream getStream() {
         return ps;

==================================================
UserDataHelper.java
index 2e1d0c1f44..f2dd1c654b 100644
--- a/java/org/apache/tomcat/util/log/SystemLogHandler.java
+++ b/java/org/apache/tomcat/util/log/SystemLogHandler.java
@@ -14,7 +14,6 @@
  *  See the License for the specific language governing permissions and
  *  limitations under the License.
  */
-
 package org.apache.tomcat.util.log;
 
 import java.io.IOException;
@@ -53,19 +52,19 @@ public class SystemLogHandler extends PrintStream {
     /**
      * Wrapped PrintStream.
      */
-    protected PrintStream out = null;
+    private final PrintStream out;
 
 
     /**
      * Thread <-> CaptureLog associations.
      */
-    protected static ThreadLocal<Stack<CaptureLog>> logs = new ThreadLocal<>();
+    private final static ThreadLocal<Stack<CaptureLog>> logs = new ThreadLocal<>();
 
 
     /**
      * Spare CaptureLog ready for reuse.
      */
-    protected static Stack<CaptureLog> reuse = new Stack<>();
+    private final static Stack<CaptureLog> reuse = new Stack<>();
 
 
     // --------------------------------------------------------- Public Methods

==================================================
