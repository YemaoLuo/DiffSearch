bc782575de0aa9487861d26fe3994b49d57f6106
==================================================
With async and non block unit tests we need a way to stream data up to the client, byte streamer offers an easy way to do that
==================================================
Filip Hanik
==================================================
Tue Jul 3 17:55:09 2012 +0000
==================================================
BytesStreamer.java
With async and non block unit tests we need a way to stream data up to the client, byte streamer offers an easy way to do that


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1356852 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TomcatBaseTest.java
new file mode 100644
index 0000000000..30e57a5697
--- /dev/null
+++ b/test/org/apache/catalina/startup/BytesStreamer.java
@@ -0,0 +1,45 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.catalina.startup;
+
+/**
+ *
+ * Used by {@link TomcatBaseTest}
+ *
+ *
+ */
+public interface BytesStreamer {
+    /**
+     * Returns the length of the content about to be streamed.
+     * Return -1 if length is unknown and chunked encoding should be used
+     * @return the length if known - otherwise -1
+     */
+    int getLength();
+
+    /**
+     * return the number of bytes available in next chunk
+     * @return
+     */
+    int available();
+
+    /**
+     * returns the next byte to write.
+     * if {@link #available()} method returns >0
+     * @return
+     */
+    byte[] next();
+}

==================================================
