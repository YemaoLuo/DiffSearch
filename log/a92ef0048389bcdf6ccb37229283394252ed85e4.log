a92ef0048389bcdf6ccb37229283394252ed85e4
==================================================
Make fill() consistent with other read methods
==================================================
Mark Thomas
==================================================
Mon Jun 1 20:15:46 2015 +0000
==================================================
Http2Parser.java
Make fill() consistent with other read methods

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1682991 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http2UpgradeHandler.java
index 565ad27e0d..6dda0b1d22 100644
--- a/java/org/apache/coyote/http2/Http2Parser.java
+++ b/java/org/apache/coyote/http2/Http2Parser.java
@@ -51,7 +51,7 @@ class Http2Parser {
      * @throws IOException If an IO error occurs while trying to read a frame
      */
     public void readFrame(boolean block) throws IOException {
-        input.fill(frameHeaderBuffer, block);
+        input.fill(block, frameHeaderBuffer);
 
         // TODO: This is incomplete
     }
@@ -69,7 +69,7 @@ class Http2Parser {
 
         byte[] data = new byte[CLIENT_PREFACE_START.length];
         try {
-            input.fill(data, true);
+            input.fill(true, data);
         } catch (IOException ioe) {
             if (log.isDebugEnabled()) {
                 log.debug(sm.getString("http2Parser.preface.io"), ioe);
@@ -102,9 +102,9 @@ class Http2Parser {
          * no data is available. If any data is available then the buffer will
          * be filled with blocking I/O.
          *
-         * @param data  Buffer to fill
          * @param block Should the first read into the provided buffer be a
          *              blocking read or not.
+         * @param data  Buffer to fill
          *
          * @return <code>true</code> if the buffer was filled otherwise
          *         <code>false</code>
@@ -112,6 +112,6 @@ class Http2Parser {
          * @throws IOException If an I/O occurred while obtaining data with
          *                     which to fill the buffer
          */
-        boolean fill(byte[] data, boolean block) throws IOException;
+        boolean fill(boolean block, byte[] data) throws IOException;
     }
 }

==================================================
Http2TestBase.java
index ddf8afdf3b..6bb1d9d32c 100644
--- a/java/org/apache/coyote/http2/Http2UpgradeHandler.java
+++ b/java/org/apache/coyote/http2/Http2UpgradeHandler.java
@@ -1077,7 +1077,7 @@ public class Http2UpgradeHandler extends AbstractStream implements InternalHttpU
     // ----------------------------------------------- Http2Parser.Input methods
 
     @Override
-    public boolean fill(byte[] data, boolean block) throws IOException {
+    public boolean fill(boolean block, byte[] data) throws IOException {
         int len = data.length;
         int pos = 0;
         boolean nextReadBlock = block;

==================================================
TestHttp2Section_3_2.java
index cf54892d3b..842f56dc98 100644
--- a/test/org/apache/coyote/http2/Http2TestBase.java
+++ b/test/org/apache/coyote/http2/Http2TestBase.java
@@ -140,7 +140,7 @@ public abstract class Http2TestBase extends TomcatBaseTest {
         // Looking for \r\n\r\n
         int seen = 0;
         while (seen < 4) {
-            input.fill(singleByte, true);
+            input.fill(true, singleByte);
             switch (seen) {
             case 0:
             case 2: {
@@ -186,7 +186,7 @@ public abstract class Http2TestBase extends TomcatBaseTest {
 
 
         @Override
-        public boolean fill(byte[] data, boolean block) throws IOException {
+        public boolean fill(boolean block, byte[] data) throws IOException {
             // Note: Block is ignored for this test class. Reads always block.
             int off = 0;
             int len = data.length;

==================================================
