16a35aa5e11909965e71876ad639041cad477dec
==================================================
Fix some unchecked conversion warnings.
==================================================
Mark Emlyn
==================================================
Sun Aug 4 15:08:37 2013 +0000
==================================================
ClientEndpointConfig.java
Fix some unchecked conversion warnings.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1510200 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ServerEndpointConfig.java
index 347d705107..13b6cba583 100644
--- a/java/javax/websocket/ClientEndpointConfig.java
+++ b/java/javax/websocket/ClientEndpointConfig.java
@@ -44,12 +44,12 @@ public interface ClientEndpointConfig extends EndpointConfig {
         }
 
         private Configurator configurator = DEFAULT_CONFIGURATOR;
-        private List<String> preferredSubprotocols = Collections.EMPTY_LIST;
-        private List<Extension> extensions = Collections.EMPTY_LIST;
+        private List<String> preferredSubprotocols = Collections.emptyList();
+        private List<Extension> extensions = Collections.emptyList();
         private List<Class<? extends Encoder>> encoders =
-                Collections.EMPTY_LIST;
+                Collections.emptyList();
         private List<Class<? extends Decoder>> decoders =
-                Collections.EMPTY_LIST;
+                Collections.emptyList();
 
 
         public ClientEndpointConfig build() {
@@ -72,7 +72,7 @@ public interface ClientEndpointConfig extends EndpointConfig {
                 List<String> preferredSubprotocols) {
             if (preferredSubprotocols == null ||
                     preferredSubprotocols.size() == 0) {
-                this.preferredSubprotocols = Collections.EMPTY_LIST;
+                this.preferredSubprotocols = Collections.emptyList();
             } else {
                 this.preferredSubprotocols =
                         Collections.unmodifiableList(preferredSubprotocols);
@@ -84,7 +84,7 @@ public interface ClientEndpointConfig extends EndpointConfig {
         public Builder extensions(
                 List<Extension> extensions) {
             if (extensions == null || extensions.size() == 0) {
-                this.extensions = Collections.EMPTY_LIST;
+                this.extensions = Collections.emptyList();
             } else {
                 this.extensions = Collections.unmodifiableList(extensions);
             }
@@ -94,7 +94,7 @@ public interface ClientEndpointConfig extends EndpointConfig {
 
         public Builder encoders(List<Class<? extends Encoder>> encoders) {
             if (encoders == null || encoders.size() == 0) {
-                this.encoders = Collections.EMPTY_LIST;
+                this.encoders = Collections.emptyList();
             } else {
                 this.encoders = Collections.unmodifiableList(encoders);
             }
@@ -104,7 +104,7 @@ public interface ClientEndpointConfig extends EndpointConfig {
 
         public Builder decoders(List<Class<? extends Decoder>> decoders) {
             if (decoders == null || decoders.size() == 0) {
-                this.decoders = Collections.EMPTY_LIST;
+                this.decoders = Collections.emptyList();
             } else {
                 this.decoders = Collections.unmodifiableList(decoders);
             }

==================================================
WsSession.java
index 974f394b0a..ee5408f6d1 100644
--- a/java/javax/websocket/server/ServerEndpointConfig.java
+++ b/java/javax/websocket/server/ServerEndpointConfig.java
@@ -59,10 +59,12 @@ public interface ServerEndpointConfig extends EndpointConfig {
 
         private final Class<?> endpointClass;
         private final String path;
-        private List<Class<? extends Encoder>> encoders = Collections.EMPTY_LIST;
-        private List<Class<? extends Decoder>> decoders = Collections.EMPTY_LIST;
-        private List<String> subprotocols = Collections.EMPTY_LIST;
-        private List<Extension> extensions = Collections.EMPTY_LIST;
+        private List<Class<? extends Encoder>> encoders =
+                Collections.emptyList();
+        private List<Class<? extends Decoder>> decoders =
+                Collections.emptyList();
+        private List<String> subprotocols = Collections.emptyList();
+        private List<Extension> extensions = Collections.emptyList();
         private Configurator configurator =
                 Configurator.fetchContainerDefaultConfigurator();
 
@@ -82,7 +84,7 @@ public interface ServerEndpointConfig extends EndpointConfig {
         public Builder encoders(
                 List<Class<? extends Encoder>> encoders) {
             if (encoders == null || encoders.size() == 0) {
-                this.encoders = Collections.EMPTY_LIST;
+                this.encoders = Collections.emptyList();
             } else {
                 this.encoders = Collections.unmodifiableList(encoders);
             }
@@ -93,7 +95,7 @@ public interface ServerEndpointConfig extends EndpointConfig {
         public Builder decoders(
                 List<Class<? extends Decoder>> decoders) {
             if (decoders == null || decoders.size() == 0) {
-                this.decoders = Collections.EMPTY_LIST;
+                this.decoders = Collections.emptyList();
             } else {
                 this.decoders = Collections.unmodifiableList(decoders);
             }
@@ -104,7 +106,7 @@ public interface ServerEndpointConfig extends EndpointConfig {
         public Builder subprotocols(
                 List<String> subprotocols) {
             if (subprotocols == null || subprotocols.size() == 0) {
-                this.subprotocols = Collections.EMPTY_LIST;
+                this.subprotocols = Collections.emptyList();
             } else {
                 this.subprotocols = Collections.unmodifiableList(subprotocols);
             }
@@ -115,7 +117,7 @@ public interface ServerEndpointConfig extends EndpointConfig {
         public Builder extensions(
                 List<Extension> extensions) {
             if (extensions == null || extensions.size() == 0) {
-                this.extensions = Collections.EMPTY_LIST;
+                this.extensions = Collections.emptyList();
             } else {
                 this.extensions = Collections.unmodifiableList(extensions);
             }

==================================================
WsWebSocketContainer.java
index e473bd7471..9c0301ec8e 100644
--- a/java/org/apache/tomcat/websocket/WsSession.java
+++ b/java/org/apache/tomcat/websocket/WsSession.java
@@ -128,7 +128,7 @@ public class WsSession implements Session {
                 webSocketContainer.getDefaultMaxSessionIdleTimeout();
         this.requestUri = requestUri;
         if (requestParameterMap == null) {
-            this.requestParameterMap = Collections.EMPTY_MAP;
+            this.requestParameterMap = Collections.emptyMap();
         } else {
             this.requestParameterMap = requestParameterMap;
         }
@@ -299,7 +299,7 @@ public class WsSession implements Session {
     @Override
     public List<Extension> getNegotiatedExtensions() {
         checkState();
-        return Collections.EMPTY_LIST;
+        return Collections.emptyList();
     }
 
 

==================================================
PojoEndpointClient.java
index 92fa7816a7..2d6b6d0f0f 100644
--- a/java/org/apache/tomcat/websocket/WsWebSocketContainer.java
+++ b/java/org/apache/tomcat/websocket/WsWebSocketContainer.java
@@ -331,7 +331,7 @@ public class WsWebSocketContainer
 
         WsSession wsSession = new WsSession(endpoint, wsRemoteEndpointClient,
                 this, null, null, null, null, null, subProtocol,
-                Collections.EMPTY_MAP, false,
+                Collections.<String, String> emptyMap(), false,
                 clientEndpointConfiguration);
         endpoint.onOpen(wsSession, clientEndpointConfiguration);
         registerSession(endpoint, wsSession);
@@ -715,7 +715,7 @@ public class WsWebSocketContainer
      */
     @Override
     public Set<Extension> getInstalledExtensions() {
-        return Collections.EMPTY_SET;
+        return Collections.emptySet();
     }
 
 

==================================================
WsServerContainer.java
index bd828a7496..4fb9918fa1 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoEndpointClient.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoEndpointClient.java
@@ -36,7 +36,7 @@ public class PojoEndpointClient extends PojoEndpointBase {
         setPojo(pojo);
         setMethodMapping(
                 new PojoMethodMapping(pojo.getClass(), decoders, null));
-        setPathParameters(Collections.EMPTY_MAP);
+        setPathParameters(Collections.<String, String> emptyMap());
     }
 
     @Override

==================================================
