008ce976b85648d1d80b4c602b94067b6f0a72dd
==================================================
Code clean-up
==================================================
Mark Emlyn
==================================================
Fri Mar 4 16:49:14 2011 +0000
==================================================
ApplicationHttpResponse.java
Code clean-up
 - fix FindBugs warnings
 - remove unused code

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1078049 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ApplicationRequest.java
index 17f300fbf9..690bd0dcd5 100644
--- a/java/org/apache/catalina/core/ApplicationHttpResponse.java
+++ b/java/org/apache/catalina/core/ApplicationHttpResponse.java
@@ -14,11 +14,8 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-
-
 package org.apache.catalina.core;
 
-
 import java.io.IOException;
 import java.util.Locale;
 
@@ -26,8 +23,6 @@ import javax.servlet.http.Cookie;
 import javax.servlet.http.HttpServletResponse;
 import javax.servlet.http.HttpServletResponseWrapper;
 
-import org.apache.tomcat.util.res.StringManager;
-
 
 /**
  * Wrapper around a <code>javax.servlet.http.HttpServletResponse</code>
@@ -96,13 +91,6 @@ class ApplicationHttpResponse extends HttpServletResponseWrapper {
         "org.apache.catalina.core.ApplicationHttpResponse/1.0";
 
 
-    /**
-     * The string manager for this package.
-     */
-    protected static final StringManager sm =
-        StringManager.getManager(Constants.Package);
-
-
     // ------------------------------------------------ ServletResponse Methods
 
 

==================================================
ApplicationResponse.java
index 348b675927..6ebae47cd6 100644
--- a/java/org/apache/catalina/core/ApplicationRequest.java
+++ b/java/org/apache/catalina/core/ApplicationRequest.java
@@ -27,7 +27,6 @@ import javax.servlet.ServletRequest;
 import javax.servlet.ServletRequestWrapper;
 
 import org.apache.catalina.util.Enumerator;
-import org.apache.tomcat.util.res.StringManager;
 
 
 /**
@@ -95,13 +94,6 @@ class ApplicationRequest extends ServletRequestWrapper {
         new HashMap<String, Object>();
 
 
-    /**
-     * The string manager for this package.
-     */
-    protected static final StringManager sm =
-        StringManager.getManager(Constants.Package);
-
-
     // ------------------------------------------------- ServletRequest Methods
 
 

==================================================
AsyncContextImpl.java
index 3c40b200ed..5e88879353 100644
--- a/java/org/apache/catalina/core/ApplicationResponse.java
+++ b/java/org/apache/catalina/core/ApplicationResponse.java
@@ -14,18 +14,13 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-
-
 package org.apache.catalina.core;
 
-
 import java.util.Locale;
 
 import javax.servlet.ServletResponse;
 import javax.servlet.ServletResponseWrapper;
 
-import org.apache.tomcat.util.res.StringManager;
-
 
 /**
  * Wrapper around a <code>javax.servlet.ServletResponse</code>
@@ -86,13 +81,6 @@ class ApplicationResponse extends ServletResponseWrapper {
     protected boolean included = false;
 
 
-    /**
-     * The string manager for this package.
-     */
-    protected static final StringManager sm =
-        StringManager.getManager(Constants.Package);
-
-
     // ------------------------------------------------ ServletResponse Methods
 
 

==================================================
Constants.java
index c5b0e3cff4..807b7f0ae7 100644
--- a/java/org/apache/catalina/core/AsyncContextImpl.java
+++ b/java/org/apache/catalina/core/AsyncContextImpl.java
@@ -83,6 +83,7 @@ public class AsyncContextImpl implements AsyncContext, AsyncContextCallback {
         request.getCoyoteRequest().action(ActionCode.ASYNC_COMPLETE, null);
     }
 
+    @Override
     public void fireOnComplete() {
         List<AsyncListenerWrapper> listenersCopy =
             new ArrayList<AsyncListenerWrapper>();
@@ -383,7 +384,7 @@ public class AsyncContextImpl implements AsyncContext, AsyncContextCallback {
                 "Req: %1$8s  CReq: %2$8s  RP: %3$8s  Stage: %4$s  " +
                 "Thread: %5$20s  State: %6$20s  Method: %7$11s  URI: %8$s",
                 rHashCode, crHashCode, rpHashCode, stage,
-                Thread.currentThread().getName(), "N/A", method, uri);
+                threadName, "N/A", method, uri);
         if (log.isTraceEnabled()) {
             log.trace(msg, new DebugException());
         } else {

==================================================
