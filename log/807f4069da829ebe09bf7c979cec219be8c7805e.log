807f4069da829ebe09bf7c979cec219be8c7805e
==================================================
Some generics fixes
==================================================
Mark Emlyn
==================================================
Sat Mar 7 19:50:34 2009 +0000
==================================================
AbstractQueryReport.java
Some generics fixes

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@751315 13f79535-47bb-0310-9956-ffa450edef68



==================================================
SlowQueryReport.java
index 340061179c..fe8b26eaf1 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/interceptor/AbstractQueryReport.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/interceptor/AbstractQueryReport.java
@@ -43,7 +43,8 @@ public abstract class AbstractQueryReport extends AbstractCreateStatementInterce
     /**
      * the constructors that are used to create statement proxies 
      */
-    protected static final Constructor[] constructors = new Constructor[AbstractCreateStatementInterceptor.statements.length];
+    protected static final Constructor<?>[] constructors =
+        new Constructor[AbstractCreateStatementInterceptor.statements.length];
 
     
     public AbstractQueryReport() {
@@ -147,9 +148,9 @@ public abstract class AbstractQueryReport extends AbstractCreateStatementInterce
      * @return - returns a constructor used to create new instances
      * @throws NoSuchMethodException
      */
-    protected Constructor getConstructor(int idx, Class clazz) throws NoSuchMethodException {
+    protected Constructor<?> getConstructor(int idx, Class<?> clazz) throws NoSuchMethodException {
         if (constructors[idx]==null) {
-            Class proxyClass = Proxy.getProxyClass(SlowQueryReport.class.getClassLoader(), new Class[] {clazz});
+            Class<?> proxyClass = Proxy.getProxyClass(SlowQueryReport.class.getClassLoader(), new Class[] {clazz});
             constructors[idx] = proxyClass.getConstructor(new Class[] { InvocationHandler.class });
         }
         return constructors[idx];
@@ -164,7 +165,7 @@ public abstract class AbstractQueryReport extends AbstractCreateStatementInterce
             Object result = null;
             String name = method.getName();
             String sql = null;
-            Constructor constructor = null;
+            Constructor<?> constructor = null;
             if (compare(statements[0],name)) {
                 //createStatement
                 constructor = getConstructor(0,Statement.class);

==================================================
StatementFinalizer.java
index a6be343fe0..289c5b7073 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/interceptor/SlowQueryReport.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/interceptor/SlowQueryReport.java
@@ -224,7 +224,7 @@ public class SlowQueryReport extends AbstractQueryReport  {
             "The date and time of the last invocation"
         };
         
-        static final OpenType[] FIELD_TYPES = new OpenType[] { 
+        static final OpenType<?>[] FIELD_TYPES = new OpenType[] { 
             SimpleType.STRING,
             SimpleType.INTEGER,
             SimpleType.LONG,
@@ -258,7 +258,7 @@ public class SlowQueryReport extends AbstractQueryReport  {
             return FIELD_DESCRIPTIONS;
         }
         
-        public static OpenType[] getFieldTypes() {
+        public static OpenType<?>[] getFieldTypes() {
             return FIELD_TYPES;
         }
         

==================================================
