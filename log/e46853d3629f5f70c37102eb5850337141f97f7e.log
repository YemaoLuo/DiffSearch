e46853d3629f5f70c37102eb5850337141f97f7e
==================================================
Remove length and constant_pool fields from Attribute class.
==================================================
Konstantin Kolinko
==================================================
Fri Sep 12 15:09:41 2014 +0000
==================================================
AnnotationDefault.java
Remove length and constant_pool fields from Attribute class.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1624565 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Annotations.java
index fc68c1b368..5c0ed0a15c 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/AnnotationDefault.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/AnnotationDefault.java
@@ -29,16 +29,13 @@ import java.io.IOException;
 public class AnnotationDefault extends Attribute {
 
     /**
-     * @param length
-     *            Content length in bytes
      * @param file
      *            Input stream
      * @param constant_pool
      *            Array of constants
      */
-    public AnnotationDefault(int length, DataInputStream file,
-            ConstantPool constant_pool) throws IOException {
-        super(length, constant_pool);
+    public AnnotationDefault(DataInputStream file, ConstantPool constant_pool)
+            throws IOException {
         // Default value
         ElementValue.readElementValue(file, constant_pool);
     }

==================================================
Attribute.java
index 60470fc28d..6803c9dd45 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Annotations.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Annotations.java
@@ -31,13 +31,11 @@ public abstract class Annotations extends Attribute {
     private final AnnotationEntry[] annotation_table;
 
     /**
-     * @param length Content length in bytes
      * @param file Input stream
      * @param constant_pool Array of constants
      */
-    public Annotations(int length, DataInputStream file,
-            ConstantPool constant_pool) throws IOException {
-        super(length, constant_pool);
+    public Annotations(DataInputStream file, ConstantPool constant_pool)
+            throws IOException {
         final int annotation_table_length = (file.readUnsignedShort());
         annotation_table = new AnnotationEntry[annotation_table_length];
         for (int i = 0; i < annotation_table_length; i++) {

==================================================
ParameterAnnotations.java
index be8000e4d0..3387f1007e 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Attribute.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Attribute.java
@@ -34,15 +34,6 @@ import org.apache.tomcat.util.bcel.Constants;
  */
 public abstract class Attribute {
 
-    protected int length; // Content length of attribute field
-
-    protected ConstantPool constant_pool;
-
-    protected Attribute(int length, ConstantPool constant_pool) {
-        this.length = length;
-        this.constant_pool = constant_pool;
-    }
-
     /*
      * Class method reads one attribute from the input data stream. This method
      * must not be accessible from the outside. It is called by the Field and
@@ -83,12 +74,11 @@ public abstract class Attribute {
         switch (tag)
         {
         case Constants.ATTR_RUNTIME_VISIBLE_ANNOTATIONS:
-            return new RuntimeVisibleAnnotations(length, file, constant_pool);
+            return new RuntimeVisibleAnnotations(file, constant_pool);
         case Constants.ATTR_RUNTIME_VISIBLE_PARAMETER_ANNOTATIONS:
-            return new RuntimeVisibleParameterAnnotations(length, file,
-                    constant_pool);
+            return new RuntimeVisibleParameterAnnotations(file, constant_pool);
         case Constants.ATTR_ANNOTATION_DEFAULT:
-            return new AnnotationDefault(length, file, constant_pool);
+            return new AnnotationDefault(file, constant_pool);
         default: // All other attributes are skipped
             Utility.skipFully(file, length);
             return null;

==================================================
RuntimeVisibleAnnotations.java
index e4409d8b4f..ff75adc1b8 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ParameterAnnotations.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ParameterAnnotations.java
@@ -33,13 +33,11 @@ public abstract class ParameterAnnotations extends Attribute {
 
 
     /**
-     * @param length Content length in bytes
      * @param file Input stream
      * @param constant_pool Array of constants
      */
-    ParameterAnnotations(int length, DataInputStream file,
-            ConstantPool constant_pool) throws IOException {
-        super(length, constant_pool);
+    ParameterAnnotations(DataInputStream file, ConstantPool constant_pool)
+            throws IOException {
         num_parameters = (file.readUnsignedByte());
         parameter_annotation_table = new ParameterAnnotationEntry[num_parameters];
         for (int i = 0; i < num_parameters; i++) {

==================================================
RuntimeVisibleParameterAnnotations.java
index 8d8c1eba1a..2ae22b4317 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/RuntimeVisibleAnnotations.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/RuntimeVisibleAnnotations.java
@@ -30,15 +30,13 @@ import java.io.IOException;
 public class RuntimeVisibleAnnotations extends Annotations {
 
     /**
-     * @param length
-     *            Content length in bytes
      * @param file
      *            Input stream
      * @param constant_pool
      *            Array of constants
      */
-    public RuntimeVisibleAnnotations(int length, DataInputStream file,
+    public RuntimeVisibleAnnotations(DataInputStream file,
             ConstantPool constant_pool) throws IOException {
-        super(length, file, constant_pool);
+        super(file, constant_pool);
     }
 }

==================================================
