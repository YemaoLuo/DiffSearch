126e4b4d034da849606a1456d3974024997c9c08
==================================================
Refactor to a) reduce duplication and b) enable JSSE style config to be
==================================================
Mark Thomas
==================================================
Mon Feb 25 17:38:35 2019 +0000
==================================================
AbstractEndpoint.java
Refactor to a) reduce duplication and b) enable JSSE style config to be
used with APR

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1854326 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AbstractJsseEndpoint.java
index 21f9530a8d..c4a4583599 100644
--- a/java/org/apache/tomcat/util/net/AbstractEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AbstractEndpoint.java
@@ -314,13 +314,34 @@ public abstract class AbstractEndpoint<S,U> {
      */
     protected abstract void createSSLContext(SSLHostConfig sslHostConfig) throws Exception;
 
+
+    protected void destroySsl() throws Exception {
+        if (isSSLEnabled()) {
+            for (SSLHostConfig sslHostConfig : sslHostConfigs.values()) {
+                releaseSSLContext(sslHostConfig);
+            }
+        }
+    }
+
+
     /**
      * Release the SSLContext, if any, associated with the SSLHostConfig.
      *
      * @param sslHostConfig The SSLHostConfig for which the SSLContext should be
      *                      released
      */
-    protected abstract void releaseSSLContext(SSLHostConfig sslHostConfig);
+    protected void releaseSSLContext(SSLHostConfig sslHostConfig) {
+        for (SSLHostConfigCertificate certificate : sslHostConfig.getCertificates(true)) {
+            if (certificate.getSslContext() != null) {
+                SSLContext sslContext = certificate.getSslContext();
+                if (sslContext != null) {
+                    sslContext.destroy();
+                }
+            }
+        }
+    }
+
+
 
     protected SSLHostConfig getSSLHostConfig(String sniHostName) {
         SSLHostConfig result = null;

==================================================
AprEndpoint.java
index d3b5951106..dba6c4c772 100644
--- a/java/org/apache/tomcat/util/net/AbstractJsseEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AbstractJsseEndpoint.java
@@ -117,28 +117,6 @@ public abstract class AbstractJsseEndpoint<S,U> extends AbstractEndpoint<S,U> {
     }
 
 
-    protected void destroySsl() throws Exception {
-        if (isSSLEnabled()) {
-            for (SSLHostConfig sslHostConfig : sslHostConfigs.values()) {
-                releaseSSLContext(sslHostConfig);
-            }
-        }
-    }
-
-
-    @Override
-    protected void releaseSSLContext(SSLHostConfig sslHostConfig) {
-        for (SSLHostConfigCertificate certificate : sslHostConfig.getCertificates(true)) {
-            if (certificate.getSslContext() != null) {
-                SSLContext sslContext = certificate.getSslContext();
-                if (sslContext != null) {
-                    sslContext.destroy();
-                }
-            }
-        }
-    }
-
-
     protected SSLEngine createSSLEngine(String sniHostName, List<Cipher> clientRequestedCiphers,
             List<String> clientRequestedApplicationProtocols) {
         SSLHostConfig sslHostConfig = getSSLHostConfig(sniHostName);

==================================================
OpenSSLContext.java
index 9fe5497231..100efd39d5 100644
--- a/java/org/apache/tomcat/util/net/LocalStrings.properties
+++ b/java/org/apache/tomcat/util/net/LocalStrings.properties
@@ -56,7 +56,6 @@ endpoint.apr.makeConf=Creating OpenSSLConf context
 endpoint.apr.maxConnections.running=The APR endpoint does not support the setting of maxConnections while it is running. The existing value of [{0}] will continue to be used.
 endpoint.apr.maxConnections.unlimited=The APR endpoint does not support unlimited connections. The existing value of [{0}] will continue to be used.
 endpoint.apr.noSendfileWithSSL=Sendfile is not supported for the APR/native connector when SSL is enabled
-endpoint.apr.noSslCertFile=Connector attribute SSLCertificateFile must be defined when using SSL with APR
 endpoint.apr.pollAddInvalid=Invalid attempt to add a socket [{0}] to the poller
 endpoint.apr.pollError=Poller failed with error [{0}] : [{1}]
 endpoint.apr.pollMergeEvents=Merge poller event [{1}] for socket [{0}] to create merged event [{2}]

==================================================
TestSSLHostConfigCompat.java
index 9035edcf19..3e6f833ca5 100644
--- a/java/org/apache/tomcat/util/net/openssl/OpenSSLContext.java
+++ b/java/org/apache/tomcat/util/net/openssl/OpenSSLContext.java
@@ -151,9 +151,8 @@ public class OpenSSLContext implements org.apache.tomcat.util.net.SSLContext {
                 } else if (Constants.SSL_PROTO_ALL.equalsIgnoreCase(protocol)) {
                     value |= SSL.SSL_PROTOCOL_ALL;
                 } else {
-                    // Protocol not recognized, fail to start as it is safer than
-                    // continuing with the default which might enable more than the
-                    // is required
+                    // Should not happen since filtering to build
+                    // enabled protocols removes invalid values.
                     throw new Exception(netSm.getString(
                             "endpoint.apr.invalidSslProtocol", protocol));
                 }

==================================================
