9b3094081ada23a3727ac215b92d2d3d2ffd4188
==================================================
Code cleanup
==================================================
Mark Emlyn
==================================================
Mon Mar 7 14:55:22 2011 +0000
==================================================
FileDirContext.java
Code cleanup
- remove unused code
- fix FindBugs warnings
- fix Eclipse warnings

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1078798 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ProxyDirContext.java
index abc1843c8f..4cc7cff337 100644
--- a/java/org/apache/naming/resources/LocalStrings.properties
+++ b/java/org/apache/naming/resources/LocalStrings.properties
@@ -22,10 +22,12 @@ resources.addResourcesJarFail=Failed to add resources jar [{0}]
 resources.alreadyStarted=Resources has already been started
 resources.connect=Cannot connect to document base {0}
 resources.input=Cannot create input stream for resource {0}
+resources.invalidCache=Unable to create a resource cache of type [{0}]
 resources.notStarted=Resources has not yet been started
 resources.null=Document base cannot be null
 resources.notFound=Resource {0} not found
 resources.path=Context relative path {0} must start with ''/''
+resources.renameFail=Failed to rename [{0}] to [{1}]
 resources.alreadyBound=Name {0} is already bound in this Context
 resources.bindFailed=Bind failed: {0}
 resources.unbindFailed=Unbind failed: {0}

==================================================
ResourceCache.java
index fa3ca3a11f..8a85508130 100644
--- a/java/org/apache/naming/resources/ProxyDirContext.java
+++ b/java/org/apache/naming/resources/ProxyDirContext.java
@@ -82,8 +82,8 @@ public class ProxyDirContext implements DirContext {
                     cache = (ResourceCache) 
                         Class.forName(cacheClassName).newInstance();
                 } catch (Exception e) {
-                    //FIXME
-                    e.printStackTrace();
+                    throw new IllegalArgumentException(sm.getString(
+                            "resources.invalidCache", cacheClassName), e);
                 }
                 cache.setCacheMaxSize(baseDirContext.getCacheMaxSize());
                 cacheTTL = baseDirContext.getCacheTTL();

==================================================
WARDirContext.java
index cc79f41d7b..497db02509 100644
--- a/java/org/apache/naming/resources/ResourceCache.java
+++ b/java/org/apache/naming/resources/ResourceCache.java
@@ -362,7 +362,7 @@ public class ResourceCache {
 
         int i = 0;
         while (true) {
-            i = (b + a) / 2;
+            i = (b + a) >>> 1;
             int result = name.compareTo(map[i].name);
             if (result > 0) {
                 a = i;

==================================================
Handler.java
index 82652ba2f2..8106fd1a7c 100644
--- a/java/org/apache/naming/resources/WARDirContext.java
+++ b/java/org/apache/naming/resources/WARDirContext.java
@@ -896,7 +896,19 @@ public class WARDirContext extends BaseDirContext {
         public int compareTo(Object o) {
             if (!(o instanceof Entry))
                 return (+1);
-            return (name.compareTo(((Entry) o).getName()));
+            return name.compareTo(((Entry) o).getName());
+        }
+
+        @Override
+        public boolean equals(Object o) {
+            if (!(o instanceof Entry))
+                return false;
+            return name.equals(((Entry) o).getName());
+        }
+        
+        @Override
+        public int hashCode() {
+            return name.hashCode();
         }
 
         public ZipEntry getEntry() {

==================================================
