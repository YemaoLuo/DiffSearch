e498a7dc8e6d3db852199288013ac58d6263f93d
==================================================
Refactor passing of path parameters to POJO end points
==================================================
Mark Thomas
==================================================
Fri Apr 30 11:13:35 2021 +0100
==================================================
Constants.java
Refactor passing of path parameters to POJO end points

I don't recall why path parameters were originally passed via user
properties (possibly so the wrapper had a 0-arg constructor?) but the
refactoring removes the need for this and simplifies the code.
This is technically a public API change but it is primarily Tomcat
internals and I can't see a reason that users or frameworks would be
using it therefore I have made a breaking change.


==================================================
PojoEndpointBase.java
index 686443a488..762ac9fe3f 100644
--- a/java/org/apache/tomcat/websocket/pojo/Constants.java
+++ b/java/org/apache/tomcat/websocket/pojo/Constants.java
@@ -21,8 +21,6 @@ package org.apache.tomcat.websocket.pojo;
  */
 public class Constants {
 
-    public static final String POJO_PATH_PARAM_KEY =
-            "org.apache.tomcat.websocket.pojo.PojoEndpoint.pathParams";
     public static final String POJO_METHOD_MAPPING_KEY =
             "org.apache.tomcat.websocket.pojo.PojoEndpoint.methodMapping";
 

==================================================
PojoEndpointClient.java
index 41ddd0d5a4..98e45cc0e1 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoEndpointBase.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoEndpointBase.java
@@ -43,14 +43,18 @@ public abstract class PojoEndpointBase extends Endpoint {
     private static final StringManager sm = StringManager.getManager(PojoEndpointBase.class);
 
     private Object pojo;
-    private Map<String,String> pathParameters;
+    private final Map<String,String> pathParameters;
     private PojoMethodMapping methodMapping;
 
 
+    protected PojoEndpointBase(Map<String,String> pathParameters) {
+        this.pathParameters = pathParameters;
+    }
+
+
     protected final void doOnOpen(Session session, EndpointConfig config) {
         PojoMethodMapping methodMapping = getMethodMapping();
         Object pojo = getPojo();
-        Map<String,String> pathParameters = getPathParameters();
 
         // Add message handlers before calling onOpen since that may trigger a
         // message which in turn could trigger a response and/or close the
@@ -143,12 +147,6 @@ public abstract class PojoEndpointBase extends Endpoint {
     protected void setPojo(Object pojo) { this.pojo = pojo; }
 
 
-    protected Map<String,String> getPathParameters() { return pathParameters; }
-    protected void setPathParameters(Map<String,String> pathParameters) {
-        this.pathParameters = pathParameters;
-    }
-
-
     protected PojoMethodMapping getMethodMapping() { return methodMapping; }
     protected void setMethodMapping(PojoMethodMapping methodMapping) {
         this.methodMapping = methodMapping;

==================================================
PojoEndpointServer.java
index 2d9e224cf7..66033f35aa 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoEndpointClient.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoEndpointClient.java
@@ -24,7 +24,6 @@ import jakarta.websocket.DeploymentException;
 import jakarta.websocket.EndpointConfig;
 import jakarta.websocket.Session;
 
-
 /**
  * Wrapper class for instances of POJOs annotated with
  * {@link jakarta.websocket.ClientEndpoint} so they appear as standard
@@ -34,10 +33,9 @@ public class PojoEndpointClient extends PojoEndpointBase {
 
     public PojoEndpointClient(Object pojo,
             List<Class<? extends Decoder>> decoders) throws DeploymentException {
+        super(Collections.<String,String>emptyMap());
         setPojo(pojo);
-        setMethodMapping(
-                new PojoMethodMapping(pojo.getClass(), decoders, null));
-        setPathParameters(Collections.<String,String>emptyMap());
+        setMethodMapping(new PojoMethodMapping(pojo.getClass(), decoders, null));
     }
 
     @Override

==================================================
UpgradeUtil.java
index b41145c09e..2549d55845 100644
--- a/java/org/apache/tomcat/websocket/pojo/PojoEndpointServer.java
+++ b/java/org/apache/tomcat/websocket/pojo/PojoEndpointServer.java
@@ -31,8 +31,13 @@ import org.apache.tomcat.util.res.StringManager;
  */
 public class PojoEndpointServer extends PojoEndpointBase {
 
-    private static final StringManager sm =
-            StringManager.getManager(PojoEndpointServer.class);
+    private static final StringManager sm = StringManager.getManager(PojoEndpointServer.class);
+
+
+    public PojoEndpointServer(Map<String,String> pathParameters) {
+        super(pathParameters);
+    }
+
 
     @Override
     public void onOpen(Session session, EndpointConfig endpointConfig) {
@@ -50,12 +55,6 @@ public class PojoEndpointServer extends PojoEndpointBase {
         }
         setPojo(pojo);
 
-        @SuppressWarnings("unchecked")
-        Map<String,String> pathParameters =
-                (Map<String, String>) sec.getUserProperties().get(
-                        Constants.POJO_PATH_PARAM_KEY);
-        setPathParameters(pathParameters);
-
         PojoMethodMapping methodMapping =
                 (PojoMethodMapping) sec.getUserProperties().get(
                         Constants.POJO_METHOD_MAPPING_KEY);

==================================================
