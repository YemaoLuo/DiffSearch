d5ea4aeada2456d4216dace9c78151f622cba891
==================================================
Remove domainReplication attribute from ClusterManager. 
==================================================
Keiichi Fujino
==================================================
Wed Aug 4 08:59:48 2010 +0000
==================================================
CatalinaCluster.java
Remove domainReplication attribute from ClusterManager. 

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@982165 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ClusterManager.java
index 5c629e0ff5..e3cb88e47b 100644
--- a/java/org/apache/catalina/ha/CatalinaCluster.java
+++ b/java/org/apache/catalina/ha/CatalinaCluster.java
@@ -77,13 +77,6 @@ public interface CatalinaCluster extends Cluster {
      * @param dest Member
      */
     public void send(ClusterMessage msg, Member dest);
-    
-    /**
-     * Sends a message to a all members at local cluster domain
-     *
-     * @param msg ClusterMessage
-     */
-    public void sendClusterDomain(ClusterMessage msg);
 
     /**
      * Returns that cluster has members.

==================================================
ClusterSingleSignOn.java
index a98495533e..5efd9452a1 100644
--- a/java/org/apache/catalina/ha/ClusterManager.java
+++ b/java/org/apache/catalina/ha/ClusterManager.java
@@ -78,18 +78,6 @@ public interface ClusterManager extends Manager {
    public CatalinaCluster getCluster();
 
    public void setCluster(CatalinaCluster cluster);
-   
-   /**
-    * @return Manager send only to same cluster domain.
-    * @since 5.5.10
-    */
-   public boolean doDomainReplication();
-
-   /**
-    * @param domainReplication Flag value.
-    * @since 5.5.10
-    */
-   public void setDomainReplication(boolean domainReplication);
 
    public ReplicationStream getReplicationStream(byte[] data) throws IOException;
 

==================================================
BackupManager.java
index 1181d67ed6..d64eab8cab 100644
--- a/java/org/apache/catalina/ha/authenticator/ClusterSingleSignOn.java
+++ b/java/org/apache/catalina/ha/authenticator/ClusterSingleSignOn.java
@@ -201,7 +201,7 @@ public class ClusterSingleSignOn
 
             msg.setAction(SingleSignOnMessage.ADD_SESSION);
 
-            cluster.sendClusterDomain(msg);
+            cluster.send(msg);
 
             if (containerLog.isDebugEnabled())
                 containerLog.debug("SingleSignOnMessage Send with action "
@@ -241,7 +241,7 @@ public class ClusterSingleSignOn
 
             msg.setAction(SingleSignOnMessage.DEREGISTER_SESSION);
 
-            cluster.sendClusterDomain(msg);
+            cluster.send(msg);
             if (containerLog.isDebugEnabled())
                 containerLog.debug("SingleSignOnMessage Send with action "
                                    + msg.getAction());
@@ -275,7 +275,7 @@ public class ClusterSingleSignOn
                                         ssoId, null);
             msg.setAction(SingleSignOnMessage.LOGOUT_SESSION);
 
-            cluster.sendClusterDomain(msg);
+            cluster.send(msg);
             if (containerLog.isDebugEnabled())
                 containerLog.debug("SingleSignOnMessage Send with action "
                                    + msg.getAction());
@@ -317,7 +317,7 @@ public class ClusterSingleSignOn
             msg.setUsername(username);
             msg.setPassword(password);
 
-            cluster.sendClusterDomain(msg);
+            cluster.send(msg);
             if (containerLog.isDebugEnabled())
                 containerLog.debug("SingleSignOnMessage Send with action "
                                    + msg.getAction());
@@ -375,7 +375,7 @@ public class ClusterSingleSignOn
             msg.setUsername(username);
             msg.setPassword(password);
 
-            cluster.sendClusterDomain(msg);
+            cluster.send(msg);
             if (containerLog.isDebugEnabled())
                 containerLog.debug("SingleSignOnMessage Send with action "
                                    + msg.getAction());
@@ -415,7 +415,7 @@ public class ClusterSingleSignOn
 
             msg.setAction(SingleSignOnMessage.REMOVE_SESSION);
 
-            cluster.sendClusterDomain(msg);
+            cluster.send(msg);
             if (containerLog.isDebugEnabled())
                 containerLog.debug("SingleSignOnMessage Send with action "
                                    + msg.getAction());

==================================================
DeltaManager.java
index 69136e2592..95d9c6c1fa 100644
--- a/java/org/apache/catalina/ha/session/BackupManager.java
+++ b/java/org/apache/catalina/ha/session/BackupManager.java
@@ -82,16 +82,6 @@ public class BackupManager extends ClusterManagerBase implements MapOwner {
     public void messageDataReceived(ClusterMessage msg) {
     }
 
-    public boolean doDomainReplication() {
-        return false;
-    }
-
-    /**
-     * @param sendClusterDomainOnly The sendClusterDomainOnly to set.
-     */
-    public void setDomainReplication(boolean sendClusterDomainOnly) {
-    }
-
     public void setExpireSessionsOnShutdown(boolean expireSessionsOnShutdown)
     {
         mExpireSessionsOnShutdown = expireSessionsOnShutdown;

==================================================
DeltaSession.java
index e6b8eb7ea0..90c28f1d6f 100644
--- a/java/org/apache/catalina/ha/session/DeltaManager.java
+++ b/java/org/apache/catalina/ha/session/DeltaManager.java
@@ -100,7 +100,6 @@ public class DeltaManager extends ClusterManagerBase{
     private volatile boolean stateTransfered = false ;
     private int stateTransferTimeout = 60;
     private boolean sendAllSessions = true;
-    private boolean sendClusterDomainOnly = true ;
     private int sendAllSessionsSize = 1000 ;
     
     /**
@@ -345,20 +344,6 @@ public class DeltaManager extends ClusterManagerBase{
         this.sendAllSessionsWaitTime = sendAllSessionsWaitTime;
     }
     
-    /**
-     * @return Returns the sendClusterDomainOnly.
-     */
-    public boolean doDomainReplication() {
-        return sendClusterDomainOnly;
-    }
-    
-    /**
-     * @param sendClusterDomainOnly The sendClusterDomainOnly to set.
-     */
-    public void setDomainReplication(boolean sendClusterDomainOnly) {
-        this.sendClusterDomainOnly = sendClusterDomainOnly;
-    }
-
     /**
      * @return Returns the stateTimestampDrop.
      */
@@ -511,10 +496,7 @@ public class DeltaManager extends ClusterManagerBase{
      */
     protected void send(SessionMessage msg) {
         if(cluster != null) {
-            if(doDomainReplication())
-                cluster.sendClusterDomain(msg);
-            else
-                cluster.send(msg);
+            cluster.send(msg);
         }
     }
 
@@ -1234,7 +1216,7 @@ public class DeltaManager extends ClusterManagerBase{
      *            requesting node
      */
     protected void messageReceived(SessionMessage msg, Member sender) {
-        if(doDomainReplication() && !checkSenderDomain(msg,sender)) {
+        if(!checkSenderDomain(msg,sender)) {
             return;
         }
         ClassLoader contextLoader = Thread.currentThread().getContextClassLoader();
@@ -1492,7 +1474,6 @@ public class DeltaManager extends ClusterManagerBase{
         result.notifySessionListenersOnReplication = notifySessionListenersOnReplication;
         result.stateTransferTimeout = stateTransferTimeout;
         result.sendAllSessions = sendAllSessions;
-        result.sendClusterDomainOnly = sendClusterDomainOnly ;
         result.sendAllSessionsSize = sendAllSessionsSize;
         result.sendAllSessionsWaitTime = sendAllSessionsWaitTime ; 
         result.receiverQueue = receiverQueue ;

==================================================
JvmRouteBinderValve.java
index d05141e39a..7456e4a40a 100644
--- a/java/org/apache/catalina/ha/session/DeltaSession.java
+++ b/java/org/apache/catalina/ha/session/DeltaSession.java
@@ -402,11 +402,7 @@ public class DeltaSession extends StandardSession implements Externalizable,Clus
             CatalinaCluster cluster = dmanager.getCluster();
             ClusterMessage msg = dmanager.requestCompleted(expiredId, true);
             if (msg != null) {
-                if(dmanager.doDomainReplication()) {
-                    cluster.sendClusterDomain(msg);
-                } else {
-                    cluster.send(msg);
-                }
+                cluster.send(msg);
             }
         }
 

==================================================
ReplicationValve.java
index ba50f5224f..8c73b7e527 100644
--- a/java/org/apache/catalina/ha/session/mbeans-descriptors.xml
+++ b/java/org/apache/catalina/ha/session/mbeans-descriptors.xml
@@ -274,11 +274,6 @@
       name="sessionCounter"
       description="Total number of sessions created by this manager"
       type="long"/>
-    <attribute
-      name="sendClusterDomainOnly"
-      is="true"
-      description="The sendClusterDomainOnly flag send sessions only to members as same cluster domain"
-      type="boolean"/>
     <attribute
       name="sessionIdLength"
       description="The session id length (in bytes) of Sessions created by this Manager"

==================================================
SimpleTcpCluster.java
index e3a8434388..eed1d2e34c 100644
--- a/java/org/apache/catalina/ha/tcp/ReplicationValve.java
+++ b/java/org/apache/catalina/ha/tcp/ReplicationValve.java
@@ -539,11 +539,7 @@ public class ReplicationValve
     protected void send(ClusterManager manager, CatalinaCluster cluster, String sessionId) {
         ClusterMessage msg = manager.requestCompleted(sessionId);
         if (msg != null) {
-            if(manager.doDomainReplication()) {
-                cluster.sendClusterDomain(msg);
-            } else {
-                cluster.send(msg);
-            }
+            cluster.send(msg);
             if(doStatistics())
                 nrOfSendRequests++;
         }

==================================================
