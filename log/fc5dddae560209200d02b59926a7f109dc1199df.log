fc5dddae560209200d02b59926a7f109dc1199df
==================================================
Made some variable names more consistent with the other parts.
==================================================
Yusuke Shinyama
==================================================
Mon Oct 21 17:35:02 2019 +0900
==================================================
GenericServlet.java
Made some variable names more consistent with the other parts.



==================================================
AddDefaultCharsetFilter.java
index f040cb7a08..da70a61a6e 100644
--- a/java/javax/servlet/GenericServlet.java
+++ b/java/javax/servlet/GenericServlet.java
@@ -180,12 +180,12 @@ public abstract class GenericServlet implements Servlet, ServletConfig,
      * Writes the specified message to a servlet log file, prepended by the
      * servlet's name. See {@link ServletContext#log(String)}.
      *
-     * @param msg
+     * @param message
      *            a <code>String</code> specifying the message to be written to
      *            the log file
      */
-    public void log(String msg) {
-        getServletContext().log(getServletName() + ": " + msg);
+    public void log(String message) {
+        getServletContext().log(getServletName() + ": " + message);
     }
 
     /**

==================================================
JspCompilationContext.java
index b146764b12..98adb4fe52 100644
--- a/java/org/apache/catalina/filters/AddDefaultCharsetFilter.java
+++ b/java/org/apache/catalina/filters/AddDefaultCharsetFilter.java
@@ -106,17 +106,17 @@ public class AddDefaultCharsetFilter extends FilterBase {
         }
 
         @Override
-        public void setContentType(String ct) {
+        public void setContentType(String contentType) {
 
-            if (ct != null && ct.startsWith("text/")) {
-                if (!ct.contains("charset=")) {
-                    super.setContentType(ct + ";charset=" + encoding);
+            if (contentType != null && contentType.startsWith("text/")) {
+                if (!contentType.contains("charset=")) {
+                    super.setContentType(contentType + ";charset=" + encoding);
                 } else {
-                    super.setContentType(ct);
+                    super.setContentType(contentType);
                     encoding = getCharacterEncoding();
                 }
             } else {
-                super.setContentType(ct);
+                super.setContentType(contentType);
             }
 
         }

==================================================
Generator.java
index 9f602be320..bdf669b7ac 100644
--- a/java/org/apache/jasper/JspCompilationContext.java
+++ b/java/org/apache/jasper/JspCompilationContext.java
@@ -454,11 +454,11 @@ public class JspCompilationContext {
         if (isTagFile()) {
             String className = tagInfo.getTagClassName();
             int lastIndex = className.lastIndexOf('.');
-            String pkgName = "";
+            String packageName = "";
             if (lastIndex != -1) {
-                pkgName = className.substring(0, lastIndex);
+                packageName = className.substring(0, lastIndex);
             }
-            return pkgName;
+            return packageName;
         } else {
             String dPackageName = getDerivedPackageName();
             if (dPackageName.length() == 0) {
@@ -767,4 +767,3 @@ public class JspCompilationContext {
         return result.toString();
     }
 }
-

==================================================
CharChunk.java
index 72a40ffdf9..c5678ec630 100644
--- a/java/org/apache/jasper/compiler/Generator.java
+++ b/java/org/apache/jasper/compiler/Generator.java
@@ -3695,8 +3695,8 @@ class Generator {
         String className = tagInfo.getTagClassName();
         int lastIndex = className.lastIndexOf('.');
         if (lastIndex != -1) {
-            String pkgName = className.substring(0, lastIndex);
-            genPreamblePackage(pkgName);
+            String packageName = className.substring(0, lastIndex);
+            genPreamblePackage(packageName);
             className = className.substring(lastIndex + 1);
         }
 

==================================================
ConcurrentMessageDigest.java
index 75b1ede60a..70818dff62 100644
--- a/java/org/apache/tomcat/util/buf/CharChunk.java
+++ b/java/org/apache/tomcat/util/buf/CharChunk.java
@@ -165,7 +165,7 @@ public final class CharChunk extends AbstractChunk implements CharSequence {
 
     // -------------------- Adding data to the buffer --------------------
 
-    public void append(char b) throws IOException {
+    public void append(char c) throws IOException {
         makeSpace(1);
         int limit = getLimitInternal();
 
@@ -173,7 +173,7 @@ public final class CharChunk extends AbstractChunk implements CharSequence {
         if (end >= limit) {
             flushBuffer();
         }
-        buff[end++] = b;
+        buff[end++] = c;
     }
 
 

==================================================
