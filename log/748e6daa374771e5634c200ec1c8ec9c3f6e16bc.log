748e6daa374771e5634c200ec1c8ec9c3f6e16bc
==================================================
Partial code clean-up for o.a.catalina.tribes
==================================================
Mark Emlyn
==================================================
Sun Jul 22 19:46:16 2012 +0000
==================================================
FragmentationInterceptor.java
Partial code clean-up for o.a.catalina.tribes
 - Add final prompted by UCDetector
 - Java 7 use of <>

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1364411 13f79535-47bb-0310-9956-ffa450edef68



==================================================
MessageDispatch15Interceptor.java
index b1291efab3..e951401d51 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/FragmentationInterceptor.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/FragmentationInterceptor.java
@@ -44,10 +44,10 @@ import org.apache.catalina.tribes.io.XByteBuffer;
 public class FragmentationInterceptor extends ChannelInterceptorBase {
     private static final org.apache.juli.logging.Log log = org.apache.juli.logging.LogFactory.getLog( FragmentationInterceptor.class );
 
-    protected HashMap<FragKey, FragCollection> fragpieces = new HashMap<FragKey, FragCollection>();
+    protected final HashMap<FragKey, FragCollection> fragpieces = new HashMap<>();
     private int maxSize = 1024*100;
     private long expire = 1000 * 60; //one minute expiration
-    protected boolean deepclone = true;
+    protected final boolean deepclone = true;
 
 
     @Override
@@ -172,9 +172,9 @@ public class FragmentationInterceptor extends ChannelInterceptorBase {
     }
 
     public static class FragCollection {
-        private long received = System.currentTimeMillis();
-        private ChannelMessage msg;
-        private XByteBuffer[] frags;
+        private final long received = System.currentTimeMillis();
+        private final ChannelMessage msg;
+        private final XByteBuffer[] frags;
         public FragCollection(ChannelMessage msg) {
             //get the total messages
             int count = XByteBuffer.toInt(msg.getMessage().getBytesDirect(),msg.getMessage().getLength()-4);
@@ -214,13 +214,11 @@ public class FragmentationInterceptor extends ChannelInterceptorBase {
         public boolean expired(long expire) {
             return (System.currentTimeMillis()-received)>expire;
         }
-
-
     }
 
     public static class FragKey {
-        private byte[] uniqueId;
-        private long received = System.currentTimeMillis();
+        private final byte[] uniqueId;
+        private final long received = System.currentTimeMillis();
         public FragKey(byte[] id ) {
             this.uniqueId = id;
         }

==================================================
MessageDispatchInterceptor.java
index 4256219361..5cd9ca8c77 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/MessageDispatch15Interceptor.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/MessageDispatch15Interceptor.java
@@ -39,12 +39,13 @@ import org.apache.catalina.tribes.util.TcclThreadFactory;
 
 public class MessageDispatch15Interceptor extends MessageDispatchInterceptor {
 
-    protected AtomicLong currentSize = new AtomicLong(0);
+    protected final AtomicLong currentSize = new AtomicLong(0);
     protected ThreadPoolExecutor executor = null;
     protected int maxThreads = 10;
     protected int maxSpareThreads = 2;
     protected long keepAliveTime = 5000;
-    protected LinkedBlockingQueue<Runnable> runnablequeue = new LinkedBlockingQueue<Runnable>();
+    protected final LinkedBlockingQueue<Runnable> runnablequeue =
+            new LinkedBlockingQueue<>();
 
     @Override
     public long getCurrentSize() {

==================================================
NonBlockingCoordinator.java
index bcf6814ee2..287e6f4c22 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/MessageDispatchInterceptor.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/MessageDispatchInterceptor.java
@@ -44,7 +44,7 @@ public class MessageDispatchInterceptor extends ChannelInterceptorBase implement
     private static final Log log = LogFactory.getLog(MessageDispatchInterceptor.class);
 
     protected long maxQueueSize = 1024*1024*64; //64MB
-    protected FastQueue queue = new FastQueue();
+    protected final FastQueue queue = new FastQueue();
     protected volatile boolean run = false;
     protected Thread msgDispatchThread = null;
     protected long currentSize = 0;
@@ -217,6 +217,4 @@ public class MessageDispatchInterceptor extends ChannelInterceptorBase implement
     public void setAlwaysSend(boolean alwaysSend) {
         this.alwaysSend = alwaysSend;
     }
-
-
 }

==================================================
