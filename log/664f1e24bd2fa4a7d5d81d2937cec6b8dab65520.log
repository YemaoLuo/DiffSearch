664f1e24bd2fa4a7d5d81d2937cec6b8dab65520
==================================================
Add the statistics for reconnect connection.
==================================================
Keiichi Fujino
==================================================
Tue Nov 22 06:15:43 2016 +0000
==================================================
ConnectionPool.java
Add the statistics for reconnect connection.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1770800 13f79535-47bb-0310-9956-ffa450edef68



==================================================
DataSourceProxy.java
index 65cc16721e..b03da8f1a9 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/ConnectionPool.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/ConnectionPool.java
@@ -135,6 +135,7 @@ public class ConnectionPool {
     private final AtomicLong returnedCount = new AtomicLong(0);
     private final AtomicLong createdCount = new AtomicLong(0);
     private final AtomicLong releasedCount = new AtomicLong(0);
+    private final AtomicLong reconnectedCount = new AtomicLong(0);
 
     //===============================================================================
     //         PUBLIC METHODS
@@ -812,6 +813,7 @@ public class ConnectionPool {
             //the connection shouldn't have to poll again.
             try {
                 con.reconnect();
+                reconnectedCount.incrementAndGet();
                 int validationMode = getPoolProperties().isTestOnConnect() || getPoolProperties().getInitSQL()!=null ?
                     PooledConnection.VALIDATE_INIT :
                     PooledConnection.VALIDATE_BORROW;
@@ -1220,6 +1222,14 @@ public class ConnectionPool {
         return releasedCount.get();
     }
 
+    /**
+     * The total number of connections reconnected by this pool.
+     * @return the reconnected connection count
+     */
+    public long getReconnectedCount() {
+        return reconnectedCount.get();
+    }
+
     /**
      * Tread safe wrapper around a future for the regular queue
      * This one retrieves the pooled connection object

==================================================
ConnectionPool.java
index 68f26c8668..e3acd70472 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/DataSourceProxy.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/DataSourceProxy.java
@@ -801,6 +801,18 @@ public class DataSourceProxy implements PoolConfiguration {
         }
     }
 
+    /**
+     * The total number of connections reconnected by this pool.
+     * @return the reconnected connection count
+     */
+    public long getReconnectedCount() {
+        try {
+            return createPool().getReconnectedCount();
+        } catch (SQLException x) {
+            throw new RuntimeException(x);
+        }
+    }
+
     //=========================================================
     //  PROPERTIES / CONFIGURATION
     //=========================================================

==================================================
ConnectionPoolMBean.java
index 3756ec7517..7c2aedd322 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/jmx/ConnectionPool.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/jmx/ConnectionPool.java
@@ -186,6 +186,11 @@ public class ConnectionPool extends NotificationBroadcasterSupport implements Co
         return pool.getReleasedCount();
     }
 
+    @Override
+    public long getReconnectedCount() {
+        return pool.getReconnectedCount();
+    }
+
     //=================================================================
     //       POOL OPERATIONS
     //=================================================================

==================================================
