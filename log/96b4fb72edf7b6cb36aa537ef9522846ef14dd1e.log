96b4fb72edf7b6cb36aa537ef9522846ef14dd1e
==================================================
Pull up output method
==================================================
Mark Emlyn
==================================================
Wed Nov 12 10:49:34 2014 +0000
==================================================
AbstractAjpProcessor.java
Pull up output method

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1638755 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AjpAprProcessor.java
index a8729d3028..f1d68417ab 100644
--- a/java/org/apache/coyote/ajp/AbstractAjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AbstractAjpProcessor.java
@@ -922,10 +922,6 @@ public abstract class AbstractAjpProcessor<S> extends AbstractProcessor<S> {
 
     // ------------------------------------------------------ Protected Methods
 
-    // Methods called by prepareResponse()
-    protected abstract int output(byte[] src, int offset, int length,
-            boolean block) throws IOException;
-
     // Methods called by process()
     protected abstract void setupSocket(SocketWrapperBase<S> socketWrapper)
             throws IOException;
@@ -1537,6 +1533,15 @@ public abstract class AbstractAjpProcessor<S> extends AbstractProcessor<S> {
     }
 
 
+    private int output(byte[] src, int offset, int length,
+            boolean block) throws IOException {
+        if (socketWrapper == null || socketWrapper.getSocket() == null)
+            return -1;
+
+        return socketWrapper.write(block, src, offset, length);
+    }
+
+
     private boolean available() {
         if (endOfStream) {
             return false;

==================================================
AjpNio2Processor.java
index d3b25f5558..362fb68351 100644
--- a/java/org/apache/coyote/ajp/AjpAprProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpAprProcessor.java
@@ -80,14 +80,6 @@ public class AjpAprProcessor extends AbstractAjpProcessor<Long> {
     }
 
 
-    @Override
-    protected int output(byte[] src, int offset, int length, boolean block)
-            throws IOException {
-
-        return socketWrapper.write(block, src, offset, length);
-    }
-
-
     @Override
     protected boolean read(byte[] buf, int pos, int n, boolean block)
             throws IOException {

==================================================
AjpNioProcessor.java
index 6e0cc01703..c17384017e 100644
--- a/java/org/apache/coyote/ajp/AjpNio2Processor.java
+++ b/java/org/apache/coyote/ajp/AjpNio2Processor.java
@@ -69,16 +69,6 @@ public class AjpNio2Processor extends AbstractAjpProcessor<Nio2Channel> {
     }
 
 
-    @Override
-    protected int output(byte[] src, int offset, int length, boolean block) throws IOException {
-
-        if (socketWrapper == null || socketWrapper.getSocket() == null)
-            return -1;
-
-        return socketWrapper.write(block, src, offset, length);
-    }
-
-
     @Override
     protected boolean read(byte[] buf, int pos, int n, boolean blockFirstRead)
         throws IOException {

==================================================
