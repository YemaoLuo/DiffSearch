406f681dffe02af464a5b34bbba69a4ca6c8292a
==================================================
Code clean-up. No functional change.
==================================================
Mark Emlyn
==================================================
Sun Aug 22 15:34:34 2010 +0000
==================================================
ServletRequest.java
index 3ae5d7bc70..754b8b4950 100644
--- a/checkstyle.xml
+++ b/checkstyle.xml
@@ -34,14 +34,12 @@
     <module name="AvoidStarImport"/>
     <module name="AvoidStaticImport"/>
     <module name="IllegalImport"/>
-    <!-- Will trigger ~600 errors
     <module name="ImportOrder">
         <property name="groups" value="java,javax,async,jsp2,junit,org,util"/>
         <property name="ordered" value="true"/>
         <property name="separated" value="true"/>
         <property name="option" value="above"/>
     </module>
-    -->
     <module name="RedundantImport"/>
     <!--
     Do not use - does not take account of imports required for Javadocs

==================================================
ServletResponse.java
index 767e80afde..f4051795f4 100644
--- a/java/javax/servlet/ServletRequest.java
+++ b/java/javax/servlet/ServletRequest.java
@@ -18,6 +18,7 @@ package javax.servlet;
 
 import java.io.BufferedReader;
 import java.io.IOException;
+import java.io.UnsupportedEncodingException;
 import java.util.Enumeration;
 import java.util.Locale;
 import java.util.Map;

==================================================
PageContext.java
index 7859fc4011..b8bbe654a4 100644
--- a/java/javax/servlet/ServletResponse.java
+++ b/java/javax/servlet/ServletResponse.java
@@ -18,6 +18,7 @@ package javax.servlet;
 
 import java.io.IOException;
 import java.io.PrintWriter;
+import java.io.UnsupportedEncodingException;
 import java.util.Locale;
 
 /**

==================================================
Container.java
index b3507fa7ff..fee5117542 100644
--- a/java/javax/servlet/jsp/PageContext.java
+++ b/java/javax/servlet/jsp/PageContext.java
@@ -25,9 +25,7 @@ import javax.servlet.ServletContext;
 import javax.servlet.ServletException;
 import javax.servlet.ServletRequest;
 import javax.servlet.ServletResponse;
-
 import javax.servlet.http.HttpSession;
-
 import javax.servlet.jsp.tagext.BodyContent;
 
 /**

==================================================
Context.java
index 8e730be6a3..113030f524 100644
--- a/java/org/apache/catalina/Container.java
+++ b/java/org/apache/catalina/Container.java
@@ -21,9 +21,10 @@ package org.apache.catalina;
 
 import java.beans.PropertyChangeListener;
 import java.io.IOException;
-import javax.servlet.ServletException;
+
 import javax.management.ObjectName;
 import javax.naming.directory.DirContext;
+import javax.servlet.ServletException;
 
 import org.apache.catalina.connector.Request;
 import org.apache.catalina.connector.Response;

==================================================
InstanceEvent.java
index a3fd7fb89b..66cd427685 100644
--- a/java/org/apache/catalina/Context.java
+++ b/java/org/apache/catalina/Context.java
@@ -26,9 +26,6 @@ import javax.servlet.ServletContainerInitializer;
 import javax.servlet.ServletContext;
 import javax.servlet.descriptor.JspConfigDescriptor;
 
-import org.apache.tomcat.JarScanner;
-import org.apache.tomcat.util.http.mapper.Mapper;
-
 import org.apache.catalina.deploy.ApplicationParameter;
 import org.apache.catalina.deploy.ErrorPage;
 import org.apache.catalina.deploy.FilterDef;
@@ -37,6 +34,8 @@ import org.apache.catalina.deploy.LoginConfig;
 import org.apache.catalina.deploy.NamingResources;
 import org.apache.catalina.deploy.SecurityConstraint;
 import org.apache.catalina.util.CharsetMapper;
+import org.apache.tomcat.JarScanner;
+import org.apache.tomcat.util.http.mapper.Mapper;
 
 
 /**

==================================================
Valve.java
index 4338b5b233..ecd6502651 100644
--- a/java/org/apache/catalina/InstanceEvent.java
+++ b/java/org/apache/catalina/InstanceEvent.java
@@ -20,6 +20,7 @@ package org.apache.catalina;
 
 
 import java.util.EventObject;
+
 import javax.servlet.Filter;
 import javax.servlet.Servlet;
 import javax.servlet.ServletRequest;

==================================================
AbstractCatalinaTask.java
index af2ef85aa5..be4e1e773a 100644
--- a/java/org/apache/catalina/Valve.java
+++ b/java/org/apache/catalina/Valve.java
@@ -20,6 +20,7 @@ package org.apache.catalina;
 
 
 import java.io.IOException;
+
 import javax.servlet.ServletException;
 
 import org.apache.catalina.comet.CometEvent;

==================================================
BaseRedirectorHelperTask.java
index 480bacce30..c514ce3deb 100644
--- a/java/org/apache/catalina/ant/AbstractCatalinaTask.java
+++ b/java/org/apache/catalina/ant/AbstractCatalinaTask.java
@@ -25,6 +25,7 @@ import java.io.InputStreamReader;
 import java.net.HttpURLConnection;
 import java.net.URL;
 import java.net.URLConnection;
+
 import org.apache.catalina.util.Base64;
 import org.apache.tomcat.util.ExceptionUtils;
 import org.apache.tools.ant.BuildException;

==================================================
AuthenticatorBase.java
index 5faa67258c..807dda92ca 100644
--- a/java/org/apache/catalina/ant/BaseRedirectorHelperTask.java
+++ b/java/org/apache/catalina/ant/BaseRedirectorHelperTask.java
@@ -23,6 +23,7 @@ import java.io.File;
 import java.io.IOException;
 import java.io.OutputStream;
 import java.io.PrintStream;
+
 import org.apache.tools.ant.BuildException;
 import org.apache.tools.ant.Project;
 import org.apache.tools.ant.Task;

==================================================
DigestAuthenticator.java
index 3ac735f80b..a21c577742 100644
--- a/java/org/apache/catalina/authenticator/AuthenticatorBase.java
+++ b/java/org/apache/catalina/authenticator/AuthenticatorBase.java
@@ -47,10 +47,10 @@ import org.apache.catalina.deploy.LoginConfig;
 import org.apache.catalina.deploy.SecurityConstraint;
 import org.apache.catalina.util.DateTool;
 import org.apache.catalina.util.LifecycleBase;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.catalina.valves.ValveBase;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
+import org.apache.tomcat.util.res.StringManager;
 
 
 /**

==================================================
SSLAuthenticator.java
index 4886c657e6..67ce74e639 100644
--- a/java/org/apache/catalina/authenticator/DigestAuthenticator.java
+++ b/java/org/apache/catalina/authenticator/DigestAuthenticator.java
@@ -28,7 +28,6 @@ import java.util.StringTokenizer;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
 
-
 import org.apache.catalina.Realm;
 import org.apache.catalina.connector.Request;
 import org.apache.catalina.deploy.LoginConfig;

==================================================
SingleSignOn.java
index e703c752eb..fb5dc654ef 100644
--- a/java/org/apache/catalina/authenticator/SSLAuthenticator.java
+++ b/java/org/apache/catalina/authenticator/SSLAuthenticator.java
@@ -25,10 +25,10 @@ import java.security.cert.X509Certificate;
 
 import javax.servlet.http.HttpServletResponse;
 
-import org.apache.coyote.ActionCode;
 import org.apache.catalina.Globals;
 import org.apache.catalina.connector.Request;
 import org.apache.catalina.deploy.LoginConfig;
+import org.apache.coyote.ActionCode;
 
 
 

==================================================
CometProcessor.java
index 431b6b9bbb..af060b965f 100644
--- a/java/org/apache/catalina/authenticator/SingleSignOn.java
+++ b/java/org/apache/catalina/authenticator/SingleSignOn.java
@@ -33,8 +33,8 @@ import org.apache.catalina.SessionEvent;
 import org.apache.catalina.SessionListener;
 import org.apache.catalina.connector.Request;
 import org.apache.catalina.connector.Response;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.catalina.valves.ValveBase;
+import org.apache.tomcat.util.res.StringManager;
 
 
 /**

==================================================
Connector.java
index a652129a47..ad4a3ddaec 100644
--- a/java/org/apache/catalina/comet/CometProcessor.java
+++ b/java/org/apache/catalina/comet/CometProcessor.java
@@ -20,8 +20,8 @@ package org.apache.catalina.comet;
 
 import java.io.IOException;
 
-import javax.servlet.ServletException;
 import javax.servlet.Servlet;
+import javax.servlet.ServletException;
 
 /**
  * This interface should be implemented by servlets which would like to handle

==================================================
CoyoteAdapter.java
index 08155ab3c4..42976c4665 100644
--- a/java/org/apache/catalina/connector/Connector.java
+++ b/java/org/apache/catalina/connector/Connector.java
@@ -28,13 +28,13 @@ import org.apache.catalina.Service;
 import org.apache.catalina.core.AprLifecycleListener;
 import org.apache.catalina.mbeans.MBeanUtils;
 import org.apache.catalina.util.LifecycleMBeanBase;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.coyote.Adapter;
 import org.apache.coyote.ProtocolHandler;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.IntrospectionUtils;
 import org.apache.tomcat.util.http.mapper.Mapper;
+import org.apache.tomcat.util.res.StringManager;
 
 
 /**

==================================================
InputBuffer.java
index 708cd9d117..fbda3870ee 100644
--- a/java/org/apache/catalina/connector/CoyoteAdapter.java
+++ b/java/org/apache/catalina/connector/CoyoteAdapter.java
@@ -27,7 +27,6 @@ import javax.servlet.SessionTrackingMode;
 import org.apache.catalina.Context;
 import org.apache.catalina.Globals;
 import org.apache.catalina.Wrapper;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.catalina.comet.CometEvent;
 import org.apache.catalina.core.ApplicationSessionCookieConfig;
 import org.apache.catalina.core.AsyncContextImpl;
@@ -45,6 +44,7 @@ import org.apache.tomcat.util.http.Cookies;
 import org.apache.tomcat.util.http.ServerCookie;
 import org.apache.tomcat.util.net.SSLSupport;
 import org.apache.tomcat.util.net.SocketStatus;
+import org.apache.tomcat.util.res.StringManager;
 
 
 /**

==================================================
MapperListener.java
index 7f65f80843..f6f656d2a8 100644
--- a/java/org/apache/catalina/connector/InputBuffer.java
+++ b/java/org/apache/catalina/connector/InputBuffer.java
@@ -25,12 +25,12 @@ import java.security.PrivilegedExceptionAction;
 import java.util.HashMap;
 
 import org.apache.catalina.security.SecurityUtil;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.coyote.ActionCode;
 import org.apache.coyote.Request;
 import org.apache.tomcat.util.buf.B2CConverter;
 import org.apache.tomcat.util.buf.ByteChunk;
 import org.apache.tomcat.util.buf.CharChunk;
+import org.apache.tomcat.util.res.StringManager;
 
 
 /**

==================================================
OutputBuffer.java
index e9464988c5..32c99a33b7 100644
--- a/java/org/apache/catalina/connector/MapperListener.java
+++ b/java/org/apache/catalina/connector/MapperListener.java
@@ -29,9 +29,7 @@ import org.apache.catalina.LifecycleState;
 import org.apache.catalina.Wrapper;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
-
 import org.apache.tomcat.util.http.mapper.Mapper;
-
 import org.apache.tomcat.util.res.StringManager;
 
 

==================================================
Request.java
index db94c30a70..25e78928e1 100644
--- a/java/org/apache/catalina/connector/OutputBuffer.java
+++ b/java/org/apache/catalina/connector/OutputBuffer.java
@@ -25,9 +25,9 @@ import java.security.PrivilegedActionException;
 import java.security.PrivilegedExceptionAction;
 import java.util.HashMap;
 
+import org.apache.catalina.Globals;
 import org.apache.coyote.ActionCode;
 import org.apache.coyote.Response;
-import org.apache.catalina.Globals;
 import org.apache.tomcat.util.buf.ByteChunk;
 import org.apache.tomcat.util.buf.C2BConverter;
 

==================================================
RequestFacade.java
index 6d5283268b..c0d0ebdaa1 100644
--- a/java/org/apache/catalina/connector/Request.java
+++ b/java/org/apache/catalina/connector/Request.java
@@ -65,9 +65,9 @@ import org.apache.catalina.Manager;
 import org.apache.catalina.Realm;
 import org.apache.catalina.Session;
 import org.apache.catalina.Wrapper;
+import org.apache.catalina.core.ApplicationPart;
 import org.apache.catalina.core.ApplicationSessionCookieConfig;
 import org.apache.catalina.core.AsyncContextImpl;
-import org.apache.catalina.core.ApplicationPart;
 import org.apache.catalina.deploy.LoginConfig;
 import org.apache.catalina.realm.GenericPrincipal;
 import org.apache.catalina.util.Enumerator;
@@ -84,8 +84,8 @@ import org.apache.tomcat.util.http.Parameters;
 import org.apache.tomcat.util.http.ServerCookie;
 import org.apache.tomcat.util.http.fileupload.FileItem;
 import org.apache.tomcat.util.http.fileupload.FileUploadBase;
-import org.apache.tomcat.util.http.fileupload.FileUploadException;
 import org.apache.tomcat.util.http.fileupload.FileUploadBase.InvalidContentTypeException;
+import org.apache.tomcat.util.http.fileupload.FileUploadException;
 import org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory;
 import org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload;
 import org.apache.tomcat.util.http.mapper.MappingData;

==================================================
Response.java
index 3ea8890748..f99f2e9270 100644
--- a/java/org/apache/catalina/connector/RequestFacade.java
+++ b/java/org/apache/catalina/connector/RequestFacade.java
@@ -42,10 +42,8 @@ import javax.servlet.http.HttpSession;
 import javax.servlet.http.Part;
 
 import org.apache.catalina.Globals;
-import org.apache.tomcat.util.res.StringManager;
-
-
 import org.apache.catalina.security.SecurityUtil;
+import org.apache.tomcat.util.res.StringManager;
 
 /**
  * Facade class that wraps a Coyote request object.  

==================================================
ResponseFacade.java
index 2064ea53d5..e76ab4aa06 100644
--- a/java/org/apache/catalina/connector/Response.java
+++ b/java/org/apache/catalina/connector/Response.java
@@ -49,13 +49,13 @@ import org.apache.catalina.core.ApplicationSessionCookieConfig;
 import org.apache.catalina.security.SecurityUtil;
 import org.apache.catalina.util.CharsetMapper;
 import org.apache.catalina.util.DateTool;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.tomcat.util.buf.CharChunk;
 import org.apache.tomcat.util.buf.UEncoder;
 import org.apache.tomcat.util.http.FastHttpDateFormat;
 import org.apache.tomcat.util.http.MimeHeaders;
 import org.apache.tomcat.util.http.ServerCookie;
 import org.apache.tomcat.util.net.URL;
+import org.apache.tomcat.util.res.StringManager;
 
 /**
  * Wrapper object for the Coyote response.

==================================================
ApplicationContext.java
index e7394deab7..723b02a0f3 100644
--- a/java/org/apache/catalina/connector/ResponseFacade.java
+++ b/java/org/apache/catalina/connector/ResponseFacade.java
@@ -32,8 +32,8 @@ import javax.servlet.http.Cookie;
 import javax.servlet.http.HttpServletResponse;
 
 import org.apache.catalina.Globals;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.catalina.security.SecurityUtil;
+import org.apache.tomcat.util.res.StringManager;
 
 /**
  * Facade class that wraps a Coyote response object. 

==================================================
ApplicationFilterConfig.java
index ac180562b2..7f2751f3b4 100644
--- a/java/org/apache/catalina/core/ApplicationContext.java
+++ b/java/org/apache/catalina/core/ApplicationContext.java
@@ -60,6 +60,7 @@ import javax.servlet.http.HttpSessionListener;
 import org.apache.catalina.Container;
 import org.apache.catalina.Context;
 import org.apache.catalina.Engine;
+import org.apache.catalina.Globals;
 import org.apache.catalina.Host;
 import org.apache.catalina.LifecycleState;
 import org.apache.catalina.Service;
@@ -71,13 +72,12 @@ import org.apache.catalina.util.Enumerator;
 import org.apache.catalina.util.RequestUtil;
 import org.apache.catalina.util.ResourceSet;
 import org.apache.catalina.util.ServerInfo;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.naming.resources.DirContextURLStreamHandler;
 import org.apache.naming.resources.Resource;
 import org.apache.tomcat.util.buf.CharChunk;
 import org.apache.tomcat.util.buf.MessageBytes;
 import org.apache.tomcat.util.http.mapper.MappingData;
-import org.apache.catalina.Globals;
+import org.apache.tomcat.util.res.StringManager;
 
 
 /**

==================================================
ApplicationHttpRequest.java
index 283af96169..0984740563 100644
--- a/java/org/apache/catalina/core/ApplicationFilterConfig.java
+++ b/java/org/apache/catalina/core/ApplicationFilterConfig.java
@@ -40,10 +40,10 @@ import org.apache.catalina.deploy.FilterDef;
 import org.apache.catalina.security.SecurityUtil;
 import org.apache.catalina.util.Enumerator;
 import org.apache.juli.logging.LogFactory;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.tomcat.InstanceManager;
 import org.apache.tomcat.util.log.SystemLogHandler;
 import org.apache.tomcat.util.modeler.Registry;
+import org.apache.tomcat.util.res.StringManager;
 
 
 /**

==================================================
ApplicationJspPropertyGroupDescriptor.java
index 1abfef85ff..21501120bc 100644
--- a/java/org/apache/catalina/core/ApplicationHttpRequest.java
+++ b/java/org/apache/catalina/core/ApplicationHttpRequest.java
@@ -35,8 +35,8 @@ import javax.servlet.http.HttpSession;
 
 import org.apache.catalina.Context;
 import org.apache.catalina.Globals;
-import org.apache.catalina.Session;
 import org.apache.catalina.Manager;
+import org.apache.catalina.Session;
 import org.apache.catalina.util.Enumerator;
 import org.apache.catalina.util.RequestUtil;
 import org.apache.tomcat.util.res.StringManager;

==================================================
AprLifecycleListener.java
index 498a0e90da..f3671eb566 100644
--- a/java/org/apache/catalina/core/ApplicationJspPropertyGroupDescriptor.java
+++ b/java/org/apache/catalina/core/ApplicationJspPropertyGroupDescriptor.java
@@ -21,6 +21,7 @@ import java.util.Collection;
 import java.util.HashSet;
 
 import javax.servlet.descriptor.JspPropertyGroupDescriptor;
+
 import org.apache.catalina.deploy.JspPropertyGroup;
 
 

==================================================
ContainerBase.java
index 02e37a30c0..b8ecd73da1 100644
--- a/java/org/apache/catalina/core/AprLifecycleListener.java
+++ b/java/org/apache/catalina/core/AprLifecycleListener.java
@@ -24,11 +24,11 @@ import java.lang.reflect.Method;
 import org.apache.catalina.Lifecycle;
 import org.apache.catalina.LifecycleEvent;
 import org.apache.catalina.LifecycleListener;
-import org.apache.tomcat.util.ExceptionUtils;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.jni.Library;
+import org.apache.tomcat.util.ExceptionUtils;
+import org.apache.tomcat.util.res.StringManager;
 
 
 

==================================================
JasperListener.java
index 33e4900022..21c08acceb 100644
--- a/java/org/apache/catalina/core/ContainerBase.java
+++ b/java/org/apache/catalina/core/ContainerBase.java
@@ -51,10 +51,10 @@ import org.apache.catalina.connector.Response;
 import org.apache.catalina.mbeans.MBeanUtils;
 import org.apache.catalina.util.LifecycleBase;
 import org.apache.catalina.util.LifecycleMBeanBase;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.naming.resources.ProxyDirContext;
+import org.apache.tomcat.util.res.StringManager;
 
 
 /**

==================================================
NamingContextListener.java
index e2e34285ed..dcb31eeefe 100644
--- a/java/org/apache/catalina/core/JasperListener.java
+++ b/java/org/apache/catalina/core/JasperListener.java
@@ -21,9 +21,9 @@ package org.apache.catalina.core;
 import org.apache.catalina.Lifecycle;
 import org.apache.catalina.LifecycleEvent;
 import org.apache.catalina.LifecycleListener;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
+import org.apache.tomcat.util.res.StringManager;
 
 
 /**

==================================================
StandardContextValve.java
index 8d5640ee03..669739b72b 100644
--- a/java/org/apache/catalina/core/NamingContextListener.java
+++ b/java/org/apache/catalina/core/NamingContextListener.java
@@ -54,7 +54,6 @@ import org.apache.catalina.deploy.ContextResourceLink;
 import org.apache.catalina.deploy.ContextService;
 import org.apache.catalina.deploy.ContextTransaction;
 import org.apache.catalina.deploy.NamingResources;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.naming.ContextAccessController;
@@ -68,6 +67,7 @@ import org.apache.naming.ResourceRef;
 import org.apache.naming.ServiceRef;
 import org.apache.naming.TransactionRef;
 import org.apache.tomcat.util.modeler.Registry;
+import org.apache.tomcat.util.res.StringManager;
 
 
 /**

==================================================
StandardEngineValve.java
index 71aeaa1deb..22d076a05c 100644
--- a/java/org/apache/catalina/core/StandardContextValve.java
+++ b/java/org/apache/catalina/core/StandardContextValve.java
@@ -33,9 +33,9 @@ import org.apache.catalina.Wrapper;
 import org.apache.catalina.comet.CometEvent;
 import org.apache.catalina.connector.Request;
 import org.apache.catalina.connector.Response;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.catalina.valves.ValveBase;
 import org.apache.tomcat.util.buf.MessageBytes;
+import org.apache.tomcat.util.res.StringManager;
 
 /**
  * Valve that implements the default basic behavior for the

==================================================
StandardHostValve.java
index ebc00ccaf8..b4cf808f7a 100644
--- a/java/org/apache/catalina/core/StandardEngineValve.java
+++ b/java/org/apache/catalina/core/StandardEngineValve.java
@@ -28,8 +28,8 @@ import org.apache.catalina.Host;
 import org.apache.catalina.comet.CometEvent;
 import org.apache.catalina.connector.Request;
 import org.apache.catalina.connector.Response;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.catalina.valves.ValveBase;
+import org.apache.tomcat.util.res.StringManager;
 
 
 /**

==================================================
StandardServer.java
index b893b1f211..76ac93cdfa 100644
--- a/java/org/apache/catalina/core/StandardHostValve.java
+++ b/java/org/apache/catalina/core/StandardHostValve.java
@@ -37,10 +37,10 @@ import org.apache.catalina.connector.ClientAbortException;
 import org.apache.catalina.connector.Request;
 import org.apache.catalina.connector.Response;
 import org.apache.catalina.deploy.ErrorPage;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.catalina.valves.ValveBase;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
+import org.apache.tomcat.util.res.StringManager;
 
 
 /**

==================================================
StandardService.java
index 854d0f4407..8d2d01699b 100644
--- a/java/org/apache/catalina/core/StandardServer.java
+++ b/java/org/apache/catalina/core/StandardServer.java
@@ -32,9 +32,9 @@ import java.util.Random;
 import javax.management.ObjectName;
 
 import org.apache.catalina.Context;
+import org.apache.catalina.Engine;
 import org.apache.catalina.LifecycleException;
 import org.apache.catalina.LifecycleState;
-import org.apache.catalina.Engine;
 import org.apache.catalina.Server;
 import org.apache.catalina.Service;
 import org.apache.catalina.deploy.NamingResources;
@@ -42,11 +42,11 @@ import org.apache.catalina.mbeans.MBeanFactory;
 import org.apache.catalina.mbeans.MBeanUtils;
 import org.apache.catalina.util.LifecycleBase;
 import org.apache.catalina.util.LifecycleMBeanBase;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.catalina.util.ServerInfo;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.buf.StringCache;
+import org.apache.tomcat.util.res.StringManager;
 
 
 /**

==================================================
StandardWrapper.java
index 36c09d5100..13f97400a9 100644
--- a/java/org/apache/catalina/core/StandardService.java
+++ b/java/org/apache/catalina/core/StandardService.java
@@ -21,9 +21,13 @@ package org.apache.catalina.core;
 
 import java.beans.PropertyChangeListener;
 import java.beans.PropertyChangeSupport;
+import java.util.ArrayList;
+
 import javax.management.ObjectName;
+
 import org.apache.catalina.Container;
 import org.apache.catalina.Engine;
+import org.apache.catalina.Executor;
 import org.apache.catalina.LifecycleException;
 import org.apache.catalina.LifecycleState;
 import org.apache.catalina.Server;
@@ -32,11 +36,9 @@ import org.apache.catalina.connector.Connector;
 import org.apache.catalina.mbeans.MBeanUtils;
 import org.apache.catalina.util.LifecycleBase;
 import org.apache.catalina.util.LifecycleMBeanBase;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
-import java.util.ArrayList;
-import org.apache.catalina.Executor;
+import org.apache.tomcat.util.res.StringManager;
 
 
 /**

==================================================
StandardWrapperValve.java
index 1a42ff6849..3c7daeaf4b 100644
--- a/java/org/apache/catalina/core/StandardWrapper.java
+++ b/java/org/apache/catalina/core/StandardWrapper.java
@@ -59,15 +59,14 @@ import org.apache.catalina.security.SecurityUtil;
 import org.apache.catalina.util.Enumerator;
 import org.apache.catalina.util.InstanceSupport;
 import org.apache.catalina.util.LifecycleBase;
+import org.apache.juli.logging.Log;
+import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.InstanceManager;
 import org.apache.tomcat.PeriodicEventListener;
 import org.apache.tomcat.util.ExceptionUtils;
 import org.apache.tomcat.util.log.SystemLogHandler;
 import org.apache.tomcat.util.modeler.Registry;
 
-import org.apache.juli.logging.Log;
-import org.apache.juli.logging.LogFactory;
-
 /**
  * Standard implementation of the <b>Wrapper</b> interface that represents
  * an individual servlet definition.  No child Containers are allowed, and

==================================================
ContextHandler.java
index 067b85862c..f4dc07cfd4 100644
--- a/java/org/apache/catalina/core/StandardWrapperValve.java
+++ b/java/org/apache/catalina/core/StandardWrapperValve.java
@@ -35,10 +35,10 @@ import org.apache.catalina.comet.CometProcessor;
 import org.apache.catalina.connector.ClientAbortException;
 import org.apache.catalina.connector.Request;
 import org.apache.catalina.connector.Response;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.catalina.valves.ValveBase;
 import org.apache.tomcat.util.buf.MessageBytes;
 import org.apache.tomcat.util.log.SystemLogHandler;
+import org.apache.tomcat.util.res.StringManager;
 
 /**
  * Valve that implements the default basic behavior for the

==================================================
ContextService.java
index 5fbf14aece..ddf9be5007 100644
--- a/java/org/apache/catalina/deploy/ContextHandler.java
+++ b/java/org/apache/catalina/deploy/ContextHandler.java
@@ -19,8 +19,8 @@
 package org.apache.catalina.deploy;
 
 import java.util.ArrayList;
-import java.util.Iterator;
 import java.util.HashMap;
+import java.util.Iterator;
 
 /**
  * Representation of a handler reference for a web service, as

==================================================
ErrorPage.java
index c61cd5b090..2e55c1e74c 100644
--- a/java/org/apache/catalina/deploy/ContextService.java
+++ b/java/org/apache/catalina/deploy/ContextService.java
@@ -18,8 +18,8 @@
 
 package org.apache.catalina.deploy;
 
-import java.util.Iterator;
 import java.util.HashMap;
+import java.util.Iterator;
 
 /**
  * Representation of a web service reference for a web application, as

==================================================
FilterDef.java
index 8c90403d3d..db4943fbaf 100644
--- a/java/org/apache/catalina/deploy/ErrorPage.java
+++ b/java/org/apache/catalina/deploy/ErrorPage.java
@@ -19,9 +19,10 @@
 package org.apache.catalina.deploy;
 
 
-import org.apache.catalina.util.RequestUtil;
 import java.io.Serializable;
 
+import org.apache.catalina.util.RequestUtil;
+
 
 /**
  * Representation of an error page element for a web application,

==================================================
FilterMap.java
index 4b9a32f0f8..3dc6fde758 100644
--- a/java/org/apache/catalina/deploy/FilterDef.java
+++ b/java/org/apache/catalina/deploy/FilterDef.java
@@ -19,9 +19,9 @@
 package org.apache.catalina.deploy;
 
 
+import java.io.Serializable;
 import java.util.HashMap;
 import java.util.Map;
-import java.io.Serializable;
 
 import javax.servlet.Filter;
 

==================================================
LoginConfig.java
index c8022904d9..ad98987742 100644
--- a/java/org/apache/catalina/deploy/FilterMap.java
+++ b/java/org/apache/catalina/deploy/FilterMap.java
@@ -19,13 +19,14 @@
 package org.apache.catalina.deploy;
 
 
-import org.apache.catalina.util.RequestUtil;
 import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.Locale;
 
 import javax.servlet.DispatcherType;
 
+import org.apache.catalina.util.RequestUtil;
+
 
 /**
  * Representation of a filter mapping for a web application, as represented

==================================================
NamingResources.java
index 1f8e28cd4c..76bcc81a15 100644
--- a/java/org/apache/catalina/deploy/LoginConfig.java
+++ b/java/org/apache/catalina/deploy/LoginConfig.java
@@ -19,9 +19,10 @@
 package org.apache.catalina.deploy;
 
 
-import org.apache.catalina.util.RequestUtil;
 import java.io.Serializable;
 
+import org.apache.catalina.util.RequestUtil;
+
 
 /**
  * Representation of a login configuration element for a web application,

==================================================
ResourceBase.java
index 770f3ebe5d..6a83920a50 100644
--- a/java/org/apache/catalina/deploy/NamingResources.java
+++ b/java/org/apache/catalina/deploy/NamingResources.java
@@ -21,9 +21,9 @@ package org.apache.catalina.deploy;
 
 import java.beans.PropertyChangeListener;
 import java.beans.PropertyChangeSupport;
+import java.io.Serializable;
 import java.util.HashMap;
 import java.util.Hashtable;
-import java.io.Serializable;
 
 import org.apache.catalina.Context;
 import org.apache.catalina.Engine;

==================================================
SecurityCollection.java
index cb7b74c343..660f475349 100644
--- a/java/org/apache/catalina/deploy/ResourceBase.java
+++ b/java/org/apache/catalina/deploy/ResourceBase.java
@@ -19,10 +19,10 @@
 package org.apache.catalina.deploy;
 
 import java.io.Serializable;
-import java.util.Iterator;
+import java.util.ArrayList;
 import java.util.HashMap;
+import java.util.Iterator;
 import java.util.List;
-import java.util.ArrayList;
 
 
 /**

==================================================
ServletDef.java
index 05fa12b78e..d41d419d67 100644
--- a/java/org/apache/catalina/deploy/SecurityCollection.java
+++ b/java/org/apache/catalina/deploy/SecurityCollection.java
@@ -19,10 +19,10 @@
 package org.apache.catalina.deploy;
 
 
-import org.apache.catalina.util.RequestUtil;
-
 import java.io.Serializable;
 
+import org.apache.catalina.util.RequestUtil;
+
 
 /**
  * Representation of a web resource collection for a web application's security

==================================================
WebXml.java
index a6d3997c59..7b410b7af6 100644
--- a/java/org/apache/catalina/deploy/ServletDef.java
+++ b/java/org/apache/catalina/deploy/ServletDef.java
@@ -19,11 +19,11 @@
 package org.apache.catalina.deploy;
 
 
+import java.io.Serializable;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.Map;
 import java.util.Set;
-import java.io.Serializable;
 
 
 /**

==================================================
ExpiresFilter.java
index 06d2c139e5..8f8cdf9841 100644
--- a/java/org/apache/catalina/deploy/WebXml.java
+++ b/java/org/apache/catalina/deploy/WebXml.java
@@ -28,8 +28,8 @@ import java.util.LinkedHashSet;
 import java.util.LinkedList;
 import java.util.List;
 import java.util.Map;
-import java.util.Set;
 import java.util.Map.Entry;
+import java.util.Set;
 
 import javax.servlet.MultipartConfigElement;
 import javax.servlet.SessionCookieConfig;

==================================================
ClusterDeployer.java
index 9ba2aa8b54..be16ea9041 100644
--- a/java/org/apache/catalina/filters/ExpiresFilter.java
+++ b/java/org/apache/catalina/filters/ExpiresFilter.java
@@ -41,6 +41,7 @@ import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
 import javax.servlet.http.HttpServletResponseWrapper;
 
+import org.apache.catalina.filters.ExpiresFilter.XHttpServletResponse;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 

==================================================
ClusterManager.java
index 9bfaf9602a..d5df1bfcc2 100644
--- a/java/org/apache/catalina/ha/ClusterDeployer.java
+++ b/java/org/apache/catalina/ha/ClusterDeployer.java
@@ -24,9 +24,10 @@ package org.apache.catalina.ha;
  * @author Filip Hanik
  * @version $Id$
  */
-import org.apache.catalina.LifecycleException;
 import java.io.IOException;
 import java.net.URL;
+
+import org.apache.catalina.LifecycleException;
 import org.apache.catalina.tribes.ChannelListener;
 
 public interface ClusterDeployer extends ChannelListener {

==================================================
ClusterMessage.java
index 5efd9452a1..1fca879f4d 100644
--- a/java/org/apache/catalina/ha/ClusterManager.java
+++ b/java/org/apache/catalina/ha/ClusterManager.java
@@ -18,8 +18,9 @@
 package org.apache.catalina.ha;
 
 
-import org.apache.catalina.Manager;
 import java.io.IOException;
+
+import org.apache.catalina.Manager;
 import org.apache.catalina.tribes.io.ReplicationStream;
 
 

==================================================
ClusterSession.java
index 5762a80617..2faf20cfef 100644
--- a/java/org/apache/catalina/ha/ClusterMessage.java
+++ b/java/org/apache/catalina/ha/ClusterMessage.java
@@ -17,6 +17,7 @@
 package org.apache.catalina.ha;
 
 import java.io.Serializable;
+
 import org.apache.catalina.tribes.Member;
 
 

==================================================
ClusterSingleSignOn.java
index 40e3c931de..742c19ee87 100644
--- a/java/org/apache/catalina/ha/ClusterSession.java
+++ b/java/org/apache/catalina/ha/ClusterSession.java
@@ -18,9 +18,10 @@
 
 package org.apache.catalina.ha;
 
-import org.apache.catalina.Session;
 import javax.servlet.http.HttpSession;
 
+import org.apache.catalina.Session;
+
 public interface ClusterSession extends Session, HttpSession {
    /**
     * returns true if this session is the primary session, if that is the

==================================================
ClusterSingleSignOnListener.java
index d64eab8cab..dd9d715795 100644
--- a/java/org/apache/catalina/ha/authenticator/ClusterSingleSignOn.java
+++ b/java/org/apache/catalina/ha/authenticator/ClusterSingleSignOn.java
@@ -21,8 +21,8 @@ package org.apache.catalina.ha.authenticator;
 
 import java.security.Principal;
 
-import org.apache.catalina.Container;
 import org.apache.catalina.Cluster;
+import org.apache.catalina.Container;
 import org.apache.catalina.Engine;
 import org.apache.catalina.Host;
 import org.apache.catalina.LifecycleException;

==================================================
CollectedInfo.java
index 154cd25d89..e14a38ed71 100644
--- a/java/org/apache/catalina/ha/authenticator/ClusterSingleSignOnListener.java
+++ b/java/org/apache/catalina/ha/authenticator/ClusterSingleSignOnListener.java
@@ -17,13 +17,13 @@
 
 package org.apache.catalina.ha.authenticator;
 
-import java.util.Map;
 import java.io.IOException;
+import java.util.Map;
 
 import org.apache.catalina.Session;
+import org.apache.catalina.ha.ClusterListener;
 import org.apache.catalina.ha.ClusterManager;
 import org.apache.catalina.ha.ClusterMessage;
-import org.apache.catalina.ha.ClusterListener;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 

==================================================
MultiCastSender.java
index 13bf826058..c335492399 100644
--- a/java/org/apache/catalina/ha/backend/CollectedInfo.java
+++ b/java/org/apache/catalina/ha/backend/CollectedInfo.java
@@ -20,12 +20,13 @@ package org.apache.catalina.ha.backend;
 
 /* for MBean to read ready and busy */
 
-import javax.management.MBeanServer;
-import javax.management.ObjectName;
-import javax.management.ObjectInstance;
 import java.util.Iterator;
 import java.util.Set;
 
+import javax.management.MBeanServer;
+import javax.management.ObjectInstance;
+import javax.management.ObjectName;
+
 import org.apache.tomcat.util.modeler.Registry;
 
 /*

==================================================
TcpSender.java
index fee60f34d6..9ce2f558b2 100644
--- a/java/org/apache/catalina/ha/backend/MultiCastSender.java
+++ b/java/org/apache/catalina/ha/backend/MultiCastSender.java
@@ -18,14 +18,14 @@
 
 package org.apache.catalina.ha.backend;
 
-import org.apache.juli.logging.Log;
-import org.apache.juli.logging.LogFactory;
-
-import java.net.MulticastSocket;
+import java.io.UnsupportedEncodingException;
+import java.net.DatagramPacket;
 import java.net.InetAddress;
 import java.net.InetSocketAddress;
-import java.net.DatagramPacket;
-import java.io.UnsupportedEncodingException;
+import java.net.MulticastSocket;
+
+import org.apache.juli.logging.Log;
+import org.apache.juli.logging.LogFactory;
 
 /*
  * Sender to proxies using multicast socket.

==================================================
ReplicatedContext.java
index 8a1160fe9b..8ce18d800e 100644
--- a/java/org/apache/catalina/ha/backend/TcpSender.java
+++ b/java/org/apache/catalina/ha/backend/TcpSender.java
@@ -18,9 +18,6 @@
 
 package org.apache.catalina.ha.backend;
 
-import org.apache.juli.logging.Log;
-import org.apache.juli.logging.LogFactory;
-
 import java.io.BufferedReader;
 import java.io.BufferedWriter;
 import java.io.IOException;
@@ -31,6 +28,9 @@ import java.net.InetSocketAddress;
 import java.net.Socket;
 import java.util.StringTokenizer;
 
+import org.apache.juli.logging.Log;
+import org.apache.juli.logging.LogFactory;
+
 /*
  * Sender to proxies using multicast socket.
  */

==================================================
FarmWarDeployer.java
index c71a933c2c..6c7a48ae1f 100644
--- a/java/org/apache/catalina/ha/context/ReplicatedContext.java
+++ b/java/org/apache/catalina/ha/context/ReplicatedContext.java
@@ -16,22 +16,23 @@
  */
 package org.apache.catalina.ha.context;
 
-import org.apache.catalina.core.StandardContext;
-import org.apache.catalina.LifecycleException;
-import org.apache.catalina.ha.CatalinaCluster;
-import org.apache.catalina.tribes.tipis.ReplicatedMap;
-import org.apache.catalina.tribes.Channel;
-import org.apache.catalina.Loader;
-import org.apache.catalina.core.ApplicationContext;
-import org.apache.catalina.Globals;
-import javax.servlet.ServletContext;
 import java.util.AbstractMap;
 import java.util.Enumeration;
 import java.util.concurrent.ConcurrentHashMap;
+
+import javax.servlet.ServletContext;
+
+import org.apache.catalina.Globals;
+import org.apache.catalina.LifecycleException;
+import org.apache.catalina.Loader;
+import org.apache.catalina.core.ApplicationContext;
+import org.apache.catalina.core.StandardContext;
+import org.apache.catalina.ha.CatalinaCluster;
+import org.apache.catalina.tribes.Channel;
+import org.apache.catalina.tribes.tipis.AbstractReplicatedMap.MapOwner;
+import org.apache.catalina.tribes.tipis.ReplicatedMap;
 import org.apache.catalina.util.Enumerator;
 import org.apache.catalina.util.LifecycleBase;
-import org.apache.catalina.tribes.tipis.AbstractReplicatedMap.MapOwner;
-
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 

==================================================
FileMessage.java
index 4aa31af80a..43cd4824a6 100644
--- a/java/org/apache/catalina/ha/deploy/FarmWarDeployer.java
+++ b/java/org/apache/catalina/ha/deploy/FarmWarDeployer.java
@@ -21,6 +21,7 @@ import java.io.File;
 import java.io.IOException;
 import java.net.URL;
 import java.util.HashMap;
+
 import javax.management.MBeanServer;
 import javax.management.ObjectName;
 
@@ -34,10 +35,9 @@ import org.apache.catalina.ha.ClusterDeployer;
 import org.apache.catalina.ha.ClusterListener;
 import org.apache.catalina.ha.ClusterMessage;
 import org.apache.catalina.tribes.Member;
-import org.apache.tomcat.util.modeler.Registry;
-
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
+import org.apache.tomcat.util.modeler.Registry;
 
 
 /**

==================================================
FileMessageFactory.java
index c8b694a03a..65bc5ee9ca 100644
--- a/java/org/apache/catalina/ha/deploy/FileMessage.java
+++ b/java/org/apache/catalina/ha/deploy/FileMessage.java
@@ -17,8 +17,8 @@
 
 package org.apache.catalina.ha.deploy;
 
-import org.apache.catalina.tribes.Member;
 import org.apache.catalina.ha.ClusterMessageBase;
+import org.apache.catalina.tribes.Member;
 
 /**
  * Contains the data for a file being transferred over TCP, this is 

==================================================
UndeployMessage.java
index 11c73e147d..7a6b27671b 100644
--- a/java/org/apache/catalina/ha/deploy/FileMessageFactory.java
+++ b/java/org/apache/catalina/ha/deploy/FileMessageFactory.java
@@ -18,10 +18,10 @@
 package org.apache.catalina.ha.deploy;
 
 import java.io.File;
-import java.io.IOException;
 import java.io.FileInputStream;
-import java.io.FileOutputStream;
 import java.io.FileNotFoundException;
+import java.io.FileOutputStream;
+import java.io.IOException;
 import java.util.Map;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.atomic.AtomicLong;

==================================================
WarWatcher.java
index 3cd284a2e5..c5848c75bc 100644
--- a/java/org/apache/catalina/ha/deploy/UndeployMessage.java
+++ b/java/org/apache/catalina/ha/deploy/UndeployMessage.java
@@ -17,9 +17,10 @@
 
 package org.apache.catalina.ha.deploy;
 
+import java.io.Serializable;
+
 import org.apache.catalina.ha.ClusterMessage;
 import org.apache.catalina.tribes.Member;
-import java.io.Serializable;
 public class UndeployMessage implements ClusterMessage,Serializable {
     private Member address;
     private long timestamp;

==================================================
BackupManager.java
index 51e12bb410..1c0cd56373 100644
--- a/java/org/apache/catalina/ha/deploy/WarWatcher.java
+++ b/java/org/apache/catalina/ha/deploy/WarWatcher.java
@@ -19,8 +19,8 @@ package org.apache.catalina.ha.deploy;
 
 import java.io.File;
 import java.util.HashMap;
-import java.util.Map;
 import java.util.Iterator;
+import java.util.Map;
 
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;

==================================================
ClusterManagerBase.java
index 95d9c6c1fa..01b7b0efff 100644
--- a/java/org/apache/catalina/ha/session/BackupManager.java
+++ b/java/org/apache/catalina/ha/session/BackupManager.java
@@ -27,10 +27,9 @@ import org.apache.catalina.ha.CatalinaCluster;
 import org.apache.catalina.ha.ClusterManager;
 import org.apache.catalina.ha.ClusterMessage;
 import org.apache.catalina.tribes.Channel;
-import org.apache.catalina.tribes.tipis.LazyReplicatedMap;
 import org.apache.catalina.tribes.tipis.AbstractReplicatedMap.MapOwner;
+import org.apache.catalina.tribes.tipis.LazyReplicatedMap;
 import org.apache.catalina.util.LifecycleBase;
-
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 

==================================================
DeltaManager.java
index 901a090ac6..2e442c324d 100644
--- a/java/org/apache/catalina/ha/session/ClusterManagerBase.java
+++ b/java/org/apache/catalina/ha/session/ClusterManagerBase.java
@@ -17,15 +17,15 @@
 
 package org.apache.catalina.ha.session;
 
-import org.apache.catalina.ha.ClusterManager;
-import org.apache.catalina.session.ManagerBase;
-import org.apache.catalina.Loader;
-import org.apache.catalina.Manager;
-
 import java.io.ByteArrayInputStream;
 import java.io.IOException;
-import org.apache.catalina.tribes.io.ReplicationStream;
+
 import org.apache.catalina.Container;
+import org.apache.catalina.Loader;
+import org.apache.catalina.Manager;
+import org.apache.catalina.ha.ClusterManager;
+import org.apache.catalina.session.ManagerBase;
+import org.apache.catalina.tribes.io.ReplicationStream;
 
 /**
  * 

==================================================
DeltaRequest.java
index 59f0ecc34d..dc36148035 100644
--- a/java/org/apache/catalina/ha/session/DeltaManager.java
+++ b/java/org/apache/catalina/ha/session/DeltaManager.java
@@ -37,6 +37,7 @@ import org.apache.catalina.Session;
 import org.apache.catalina.Valve;
 import org.apache.catalina.core.StandardContext;
 import org.apache.catalina.ha.CatalinaCluster;
+import org.apache.catalina.ha.ClusterManager;
 import org.apache.catalina.ha.ClusterMessage;
 import org.apache.catalina.ha.tcp.ReplicationValve;
 import org.apache.catalina.tribes.Member;
@@ -44,7 +45,6 @@ import org.apache.catalina.tribes.io.ReplicationStream;
 import org.apache.catalina.util.LifecycleBase;
 import org.apache.tomcat.util.ExceptionUtils;
 import org.apache.tomcat.util.res.StringManager;
-import org.apache.catalina.ha.ClusterManager;
 
 /**
  * The DeltaManager manages replicated sessions by only replicating the deltas

==================================================
DeltaSession.java
index 9a2ec5b39c..00ddc0b13c 100644
--- a/java/org/apache/catalina/ha/session/DeltaRequest.java
+++ b/java/org/apache/catalina/ha/session/DeltaRequest.java
@@ -27,15 +27,15 @@ package org.apache.catalina.ha.session;
  * @version 1.0
  */
 
+import java.io.ByteArrayOutputStream;
 import java.io.Externalizable;
+import java.io.IOException;
+import java.io.ObjectOutputStream;
 import java.security.Principal;
 import java.util.LinkedList;
 
 import org.apache.catalina.realm.GenericPrincipal;
 import org.apache.tomcat.util.res.StringManager;
-import java.io.ByteArrayOutputStream;
-import java.io.IOException;
-import java.io.ObjectOutputStream;
 
 
 public class DeltaRequest implements Externalizable {

==================================================
JvmRouteSessionIDBinderListener.java
index 7456e4a40a..9eb9708365 100644
--- a/java/org/apache/catalina/ha/session/DeltaSession.java
+++ b/java/org/apache/catalina/ha/session/DeltaSession.java
@@ -21,8 +21,8 @@ import java.io.Externalizable;
 import java.io.IOException;
 import java.io.NotSerializableException;
 import java.io.ObjectInput;
-import java.io.ObjectOutput;
 import java.io.ObjectInputStream;
+import java.io.ObjectOutput;
 import java.io.ObjectOutputStream;
 import java.io.Serializable;
 import java.security.Principal;
@@ -30,26 +30,27 @@ import java.util.ArrayList;
 import java.util.Enumeration;
 import java.util.HashMap;
 import java.util.Hashtable;
+import java.util.concurrent.atomic.AtomicInteger;
 import java.util.concurrent.locks.Lock;
 import java.util.concurrent.locks.ReentrantReadWriteLock;
+
 import javax.servlet.http.HttpSession;
 import javax.servlet.http.HttpSessionContext;
 
 import org.apache.catalina.Manager;
 import org.apache.catalina.SessionListener;
-import org.apache.catalina.ha.ClusterManager;
 import org.apache.catalina.ha.CatalinaCluster;
-import org.apache.catalina.ha.ClusterSession;
+import org.apache.catalina.ha.ClusterManager;
 import org.apache.catalina.ha.ClusterMessage;
+import org.apache.catalina.ha.ClusterSession;
 import org.apache.catalina.realm.GenericPrincipal;
+import org.apache.catalina.session.ManagerBase;
+import org.apache.catalina.session.StandardManager;
 import org.apache.catalina.session.StandardSession;
 import org.apache.catalina.tribes.io.ReplicationStream;
 import org.apache.catalina.tribes.tipis.ReplicatedMapEntry;
 import org.apache.catalina.util.Enumerator;
 import org.apache.tomcat.util.res.StringManager;
-import org.apache.catalina.session.StandardManager;
-import org.apache.catalina.session.ManagerBase;
-import java.util.concurrent.atomic.AtomicInteger;
 
 /**
  *

==================================================
SerializablePrincipal.java
index 908703728e..880d3363ce 100644
--- a/java/org/apache/catalina/ha/session/JvmRouteSessionIDBinderListener.java
+++ b/java/org/apache/catalina/ha/session/JvmRouteSessionIDBinderListener.java
@@ -24,9 +24,9 @@ import org.apache.catalina.Context;
 import org.apache.catalina.Engine;
 import org.apache.catalina.LifecycleException;
 import org.apache.catalina.Session;
+import org.apache.catalina.core.StandardEngine;
 import org.apache.catalina.ha.ClusterListener;
 import org.apache.catalina.ha.ClusterMessage;
-import org.apache.catalina.core.StandardEngine;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.res.StringManager;

==================================================
ReplicationValve.java
index f56ada6122..c30126d3e6 100644
--- a/java/org/apache/catalina/ha/session/SerializablePrincipal.java
+++ b/java/org/apache/catalina/ha/session/SerializablePrincipal.java
@@ -23,9 +23,7 @@ import java.io.IOException;
 import java.io.ObjectInput;
 import java.io.ObjectOutput;
 import java.io.Serializable;
-
 import java.security.Principal;
-
 import java.util.Arrays;
 import java.util.List;
 

==================================================
SimpleTcpCluster.java
index eed1d2e34c..163127736c 100644
--- a/java/org/apache/catalina/ha/tcp/ReplicationValve.java
+++ b/java/org/apache/catalina/ha/tcp/ReplicationValve.java
@@ -18,16 +18,19 @@
 package org.apache.catalina.ha.tcp;
 
 import java.io.IOException;
-import java.util.StringTokenizer;
-import java.util.regex.Pattern;
 import java.util.ArrayList;
-import java.util.List;
 import java.util.Iterator;
+import java.util.List;
+import java.util.StringTokenizer;
+import java.util.regex.Pattern;
+
 import javax.servlet.ServletException;
 
+import org.apache.catalina.Context;
 import org.apache.catalina.Manager;
 import org.apache.catalina.Session;
-import org.apache.catalina.Context;
+import org.apache.catalina.connector.Request;
+import org.apache.catalina.connector.Response;
 import org.apache.catalina.core.StandardContext;
 import org.apache.catalina.ha.CatalinaCluster;
 import org.apache.catalina.ha.ClusterManager;
@@ -36,10 +39,8 @@ import org.apache.catalina.ha.ClusterSession;
 import org.apache.catalina.ha.ClusterValve;
 import org.apache.catalina.ha.session.DeltaManager;
 import org.apache.catalina.ha.session.DeltaSession;
-import org.apache.catalina.connector.Request;
-import org.apache.catalina.connector.Response;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.catalina.valves.ValveBase;
+import org.apache.tomcat.util.res.StringManager;
 
 /**
  * <p>Implementation of a Valve that logs interesting contents from the

==================================================
WebappClassLoader.java
index 1558cf622c..63e16a07d7 100644
--- a/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java
+++ b/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java
@@ -40,24 +40,24 @@ import org.apache.catalina.ha.ClusterListener;
 import org.apache.catalina.ha.ClusterManager;
 import org.apache.catalina.ha.ClusterMessage;
 import org.apache.catalina.ha.ClusterValve;
+import org.apache.catalina.ha.jmx.ClusterJmxHelper;
+import org.apache.catalina.ha.session.ClusterSessionListener;
 import org.apache.catalina.ha.session.DeltaManager;
+import org.apache.catalina.ha.session.JvmRouteBinderValve;
+import org.apache.catalina.ha.session.JvmRouteSessionIDBinderListener;
 import org.apache.catalina.ha.util.IDynamicProperty;
 import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.ChannelListener;
 import org.apache.catalina.tribes.Member;
 import org.apache.catalina.tribes.MembershipListener;
 import org.apache.catalina.tribes.group.GroupChannel;
+import org.apache.catalina.tribes.group.interceptors.MessageDispatch15Interceptor;
+import org.apache.catalina.tribes.group.interceptors.TcpFailureDetector;
 import org.apache.catalina.util.LifecycleBase;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.IntrospectionUtils;
-import org.apache.catalina.ha.session.ClusterSessionListener;
-import org.apache.catalina.tribes.group.interceptors.MessageDispatch15Interceptor;
-import org.apache.catalina.tribes.group.interceptors.TcpFailureDetector;
-import org.apache.catalina.ha.session.JvmRouteBinderValve;
-import org.apache.catalina.ha.session.JvmRouteSessionIDBinderListener;
-import org.apache.catalina.ha.jmx.ClusterJmxHelper;
+import org.apache.tomcat.util.res.StringManager;
 
 /**
  * A <b>Cluster </b> implementation using simple multicast. Responsible for

==================================================
WebappLoader.java
index 8090e905d4..e298360dd6 100644
--- a/java/org/apache/catalina/loader/WebappClassLoader.java
+++ b/java/org/apache/catalina/loader/WebappClassLoader.java
@@ -53,10 +53,10 @@ import java.util.Set;
 import java.util.Vector;
 import java.util.concurrent.ThreadPoolExecutor;
 import java.util.jar.Attributes;
+import java.util.jar.Attributes.Name;
 import java.util.jar.JarEntry;
 import java.util.jar.JarFile;
 import java.util.jar.Manifest;
-import java.util.jar.Attributes.Name;
 
 import javax.naming.Binding;
 import javax.naming.NameClassPair;
@@ -69,13 +69,13 @@ import org.apache.catalina.Lifecycle;
 import org.apache.catalina.LifecycleException;
 import org.apache.catalina.LifecycleListener;
 import org.apache.catalina.LifecycleState;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.jasper.servlet.JasperLoader;
 import org.apache.naming.JndiPermission;
 import org.apache.naming.resources.ProxyDirContext;
 import org.apache.naming.resources.Resource;
 import org.apache.naming.resources.ResourceAttributes;
 import org.apache.tomcat.util.IntrospectionUtils;
+import org.apache.tomcat.util.res.StringManager;
 
 /**
  * Specialized web application class loader.

==================================================
JMXProxyServlet.java
index f5bcac311d..eb060ae0b0 100644
--- a/java/org/apache/catalina/loader/WebappLoader.java
+++ b/java/org/apache/catalina/loader/WebappLoader.java
@@ -55,11 +55,11 @@ import org.apache.catalina.core.StandardContext;
 import org.apache.catalina.mbeans.MBeanUtils;
 import org.apache.catalina.util.LifecycleBase;
 import org.apache.catalina.util.LifecycleMBeanBase;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.naming.resources.DirContextURLStreamHandler;
 import org.apache.naming.resources.DirContextURLStreamHandlerFactory;
 import org.apache.naming.resources.Resource;
 import org.apache.tomcat.util.modeler.Registry;
+import org.apache.tomcat.util.res.StringManager;
 
 
 /**

==================================================
ManagerServlet.java
index a882e6dce4..ae0787bdcb 100644
--- a/java/org/apache/catalina/manager/JMXProxyServlet.java
+++ b/java/org/apache/catalina/manager/JMXProxyServlet.java
@@ -24,11 +24,12 @@ import java.io.PrintWriter;
 import java.lang.reflect.Array;
 import java.util.Iterator;
 import java.util.Set;
+
+import javax.management.Attribute;
+import javax.management.MBeanAttributeInfo;
+import javax.management.MBeanInfo;
 import javax.management.MBeanServer;
 import javax.management.ObjectName;
-import javax.management.MBeanInfo;
-import javax.management.MBeanAttributeInfo;
-import javax.management.Attribute;
 import javax.servlet.ServletException;
 import javax.servlet.http.HttpServlet;
 import javax.servlet.http.HttpServletRequest;

==================================================
StatusManagerServlet.java
index 29ee747d9e..1855ef245b 100644
--- a/java/org/apache/catalina/manager/ManagerServlet.java
+++ b/java/org/apache/catalina/manager/ManagerServlet.java
@@ -57,8 +57,8 @@ import org.apache.catalina.core.StandardServer;
 import org.apache.catalina.util.RequestUtil;
 import org.apache.catalina.util.ServerInfo;
 import org.apache.tomcat.util.ExceptionUtils;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.tomcat.util.modeler.Registry;
+import org.apache.tomcat.util.res.StringManager;
 
 
 /**

==================================================
HostManagerServlet.java
index 088f52fb62..29e64e43c1 100644
--- a/java/org/apache/catalina/manager/StatusManagerServlet.java
+++ b/java/org/apache/catalina/manager/StatusManagerServlet.java
@@ -38,8 +38,8 @@ import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
 
 import org.apache.catalina.util.ServerInfo;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.tomcat.util.modeler.Registry;
+import org.apache.tomcat.util.res.StringManager;
 
 /**
  * This servlet will display a complete status of the HTTP/1.1 connector.

==================================================
GlobalResourcesLifecycleListener.java
index d820d98a9b..07d5305eec 100644
--- a/java/org/apache/catalina/manager/host/HostManagerServlet.java
+++ b/java/org/apache/catalina/manager/host/HostManagerServlet.java
@@ -40,12 +40,12 @@ import org.apache.catalina.Context;
 import org.apache.catalina.Engine;
 import org.apache.catalina.Host;
 import org.apache.catalina.Wrapper;
+import org.apache.catalina.core.ContainerBase;
 import org.apache.catalina.core.StandardHost;
 import org.apache.catalina.startup.HostConfig;
 import org.apache.tomcat.util.ExceptionUtils;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.tomcat.util.modeler.Registry;
-import org.apache.catalina.core.ContainerBase;
+import org.apache.tomcat.util.res.StringManager;
 
 
 /**

==================================================
JmxRemoteLifecycleListener.java
index 1406d85ce6..e9a79a0d36 100644
--- a/java/org/apache/catalina/mbeans/GlobalResourcesLifecycleListener.java
+++ b/java/org/apache/catalina/mbeans/GlobalResourcesLifecycleListener.java
@@ -19,12 +19,14 @@ package org.apache.catalina.mbeans;
 
 
 import java.util.Iterator;
+
 import javax.naming.Binding;
 import javax.naming.Context;
 import javax.naming.InitialContext;
 import javax.naming.NamingEnumeration;
 import javax.naming.NamingException;
 import javax.naming.OperationNotSupportedException;
+
 import org.apache.catalina.Group;
 import org.apache.catalina.Lifecycle;
 import org.apache.catalina.LifecycleEvent;

==================================================
ServerLifecycleListener.java
index 43328796a4..00bc156bec 100644
--- a/java/org/apache/catalina/mbeans/JmxRemoteLifecycleListener.java
+++ b/java/org/apache/catalina/mbeans/JmxRemoteLifecycleListener.java
@@ -39,9 +39,9 @@ import javax.rmi.ssl.SslRMIServerSocketFactory;
 import org.apache.catalina.Lifecycle;
 import org.apache.catalina.LifecycleEvent;
 import org.apache.catalina.LifecycleListener;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
+import org.apache.tomcat.util.res.StringManager;
 
 /**
  * This listener fixes the port used by JMX/RMI Server making things much

==================================================
CombinedRealm.java
index f68e3a02bc..aaccccae1b 100644
--- a/java/org/apache/catalina/mbeans/ServerLifecycleListener.java
+++ b/java/org/apache/catalina/mbeans/ServerLifecycleListener.java
@@ -20,6 +20,7 @@ package org.apache.catalina.mbeans;
 
 import java.beans.PropertyChangeEvent;
 import java.beans.PropertyChangeListener;
+
 import javax.management.MBeanException;
 
 import org.apache.catalina.Container;

==================================================
DataSourceRealm.java
index 59cc21d0e8..07426f834b 100644
--- a/java/org/apache/catalina/realm/CombinedRealm.java
+++ b/java/org/apache/catalina/realm/CombinedRealm.java
@@ -18,7 +18,6 @@
 package org.apache.catalina.realm;
 
 import java.security.Principal;
-
 import java.security.cert.X509Certificate;
 import java.util.Iterator;
 import java.util.LinkedList;

==================================================
JAASCallbackHandler.java
index b8f85a0064..2e2c35942d 100644
--- a/java/org/apache/catalina/realm/DataSourceRealm.java
+++ b/java/org/apache/catalina/realm/DataSourceRealm.java
@@ -29,10 +29,10 @@ import java.util.ArrayList;
 import javax.naming.Context;
 import javax.sql.DataSource;
 
-import org.apache.naming.ContextBindings;
 import org.apache.catalina.LifecycleException;
 import org.apache.catalina.core.StandardServer;
 import org.apache.catalina.util.LifecycleBase;
+import org.apache.naming.ContextBindings;
 
 /**
 *

==================================================
JNDIRealm.java
index 56a48945e8..f7c74e4532 100644
--- a/java/org/apache/catalina/realm/JAASCallbackHandler.java
+++ b/java/org/apache/catalina/realm/JAASCallbackHandler.java
@@ -20,6 +20,7 @@ package org.apache.catalina.realm;
 
 
 import java.io.IOException;
+
 import javax.security.auth.callback.Callback;
 import javax.security.auth.callback.CallbackHandler;
 import javax.security.auth.callback.NameCallback;

==================================================
MemoryRealm.java
index abfc05bf93..65f978c674 100644
--- a/java/org/apache/catalina/realm/JNDIRealm.java
+++ b/java/org/apache/catalina/realm/JNDIRealm.java
@@ -30,19 +30,19 @@ import java.util.Hashtable;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
-import java.util.Set;
 import java.util.Map.Entry;
+import java.util.Set;
 
-import javax.naming.Context;
+import javax.naming.AuthenticationException;
 import javax.naming.CommunicationException;
 import javax.naming.CompositeName;
+import javax.naming.Context;
 import javax.naming.InvalidNameException;
+import javax.naming.Name;
 import javax.naming.NameNotFoundException;
+import javax.naming.NameParser;
 import javax.naming.NamingEnumeration;
 import javax.naming.NamingException;
-import javax.naming.NameParser;
-import javax.naming.Name;
-import javax.naming.AuthenticationException;
 import javax.naming.PartialResultException;
 import javax.naming.ServiceUnavailableException;
 import javax.naming.directory.Attribute;
@@ -51,6 +51,7 @@ import javax.naming.directory.DirContext;
 import javax.naming.directory.InitialDirContext;
 import javax.naming.directory.SearchControls;
 import javax.naming.directory.SearchResult;
+
 import org.apache.catalina.LifecycleException;
 import org.apache.catalina.util.Base64;
 import org.apache.catalina.util.LifecycleBase;

==================================================
RealmBase.java
index dea62c9989..a9edd18c4e 100644
--- a/java/org/apache/catalina/realm/MemoryRealm.java
+++ b/java/org/apache/catalina/realm/MemoryRealm.java
@@ -19,11 +19,12 @@
 package org.apache.catalina.realm;
 
 
-import java.security.Principal;
 import java.io.File;
+import java.security.Principal;
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.Map;
+
 import org.apache.catalina.LifecycleException;
 import org.apache.catalina.util.LifecycleBase;
 import org.apache.juli.logging.Log;

==================================================
SecurityConfig.java
index a1b14cc941..a6d8838cd6 100644
--- a/java/org/apache/catalina/realm/RealmBase.java
+++ b/java/org/apache/catalina/realm/RealmBase.java
@@ -44,16 +44,16 @@ import org.apache.catalina.connector.Request;
 import org.apache.catalina.connector.Response;
 import org.apache.catalina.core.ApplicationSessionCookieConfig;
 import org.apache.catalina.deploy.LoginConfig;
-import org.apache.catalina.deploy.SecurityConstraint;
 import org.apache.catalina.deploy.SecurityCollection;
+import org.apache.catalina.deploy.SecurityConstraint;
 import org.apache.catalina.mbeans.MBeanUtils;
 import org.apache.catalina.util.HexUtils;
 import org.apache.catalina.util.LifecycleBase;
 import org.apache.catalina.util.LifecycleMBeanBase;
 import org.apache.catalina.util.MD5Encoder;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
+import org.apache.tomcat.util.res.StringManager;
 
 /**
  * Simple implementation of <b>Realm</b> that reads an XML file to configure

==================================================
DefaultServlet.java
index 206c27bfe9..06d0774eb9 100644
--- a/java/org/apache/catalina/security/SecurityConfig.java
+++ b/java/org/apache/catalina/security/SecurityConfig.java
@@ -17,6 +17,7 @@
 package org.apache.catalina.security;
 
 import java.security.Security;
+
 import org.apache.catalina.startup.CatalinaProperties;
 
 /**

==================================================
JDBCStore.java
index 463bc467b5..c614c4729e 100644
--- a/java/org/apache/catalina/servlets/DefaultServlet.java
+++ b/java/org/apache/catalina/servlets/DefaultServlet.java
@@ -61,12 +61,12 @@ import org.apache.catalina.Globals;
 import org.apache.catalina.connector.RequestFacade;
 import org.apache.catalina.util.RequestUtil;
 import org.apache.catalina.util.ServerInfo;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.catalina.util.URLEncoder;
 import org.apache.naming.resources.CacheEntry;
 import org.apache.naming.resources.ProxyDirContext;
 import org.apache.naming.resources.Resource;
 import org.apache.naming.resources.ResourceAttributes;
+import org.apache.tomcat.util.res.StringManager;
 
 
 /**

==================================================
ManagerBase.java
index 0d009d53de..5bcdc23391 100644
--- a/java/org/apache/catalina/session/JDBCStore.java
+++ b/java/org/apache/catalina/session/JDBCStore.java
@@ -17,14 +17,6 @@
 
 package org.apache.catalina.session;
 
-import org.apache.catalina.Container;
-import org.apache.catalina.LifecycleException;
-import org.apache.catalina.Loader;
-import org.apache.catalina.Session;
-import org.apache.catalina.util.CustomObjectInputStream;
-import org.apache.catalina.util.LifecycleBase;
-import org.apache.tomcat.util.ExceptionUtils;
-
 import java.io.BufferedInputStream;
 import java.io.BufferedOutputStream;
 import java.io.ByteArrayInputStream;
@@ -41,6 +33,14 @@ import java.sql.SQLException;
 import java.util.ArrayList;
 import java.util.Properties;
 
+import org.apache.catalina.Container;
+import org.apache.catalina.LifecycleException;
+import org.apache.catalina.Loader;
+import org.apache.catalina.Session;
+import org.apache.catalina.util.CustomObjectInputStream;
+import org.apache.catalina.util.LifecycleBase;
+import org.apache.tomcat.util.ExceptionUtils;
+
 /**
  * Implementation of the <code>Store</code> interface that stores
  * serialized session objects in a database.  Sessions that are

==================================================
PersistentManagerBase.java
index 6174c1b797..1436f41d45 100644
--- a/java/org/apache/catalina/session/ManagerBase.java
+++ b/java/org/apache/catalina/session/ManagerBase.java
@@ -47,12 +47,12 @@ import org.apache.catalina.LifecycleException;
 import org.apache.catalina.Manager;
 import org.apache.catalina.Session;
 import org.apache.catalina.mbeans.MBeanUtils;
-import org.apache.catalina.util.LifecycleMBeanBase;
 import org.apache.catalina.util.Base64;
-import org.apache.tomcat.util.ExceptionUtils;
-import org.apache.tomcat.util.res.StringManager;
+import org.apache.catalina.util.LifecycleMBeanBase;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
+import org.apache.tomcat.util.ExceptionUtils;
+import org.apache.tomcat.util.res.StringManager;
 
 
 /**

==================================================
StandardManager.java
index 14d1300568..21004d0b18 100644
--- a/java/org/apache/catalina/session/PersistentManagerBase.java
+++ b/java/org/apache/catalina/session/PersistentManagerBase.java
@@ -30,9 +30,8 @@ import org.apache.catalina.LifecycleException;
 import org.apache.catalina.LifecycleState;
 import org.apache.catalina.Session;
 import org.apache.catalina.Store;
-import org.apache.catalina.util.LifecycleBase;
-
 import org.apache.catalina.security.SecurityUtil;
+import org.apache.catalina.util.LifecycleBase;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 /**

==================================================
StandardSession.java
index b479e7f6eb..93e2858b9c 100644
--- a/java/org/apache/catalina/session/StandardManager.java
+++ b/java/org/apache/catalina/session/StandardManager.java
@@ -32,16 +32,17 @@ import java.security.PrivilegedActionException;
 import java.security.PrivilegedExceptionAction;
 import java.util.ArrayList;
 import java.util.Iterator;
+
 import javax.servlet.ServletContext;
+
 import org.apache.catalina.Context;
 import org.apache.catalina.LifecycleException;
 import org.apache.catalina.LifecycleState;
 import org.apache.catalina.Loader;
 import org.apache.catalina.Session;
+import org.apache.catalina.security.SecurityUtil;
 import org.apache.catalina.util.CustomObjectInputStream;
 import org.apache.catalina.util.LifecycleBase;
-
-import org.apache.catalina.security.SecurityUtil;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.ExceptionUtils;

==================================================
ByteArrayServletOutputStream.java
index 9e1c61e944..166becdeb4 100644
--- a/java/org/apache/catalina/session/StandardSession.java
+++ b/java/org/apache/catalina/session/StandardSession.java
@@ -53,12 +53,11 @@ import org.apache.catalina.Manager;
 import org.apache.catalina.Session;
 import org.apache.catalina.SessionEvent;
 import org.apache.catalina.SessionListener;
-import org.apache.catalina.util.Enumerator;
-import org.apache.tomcat.util.res.StringManager;
-
 import org.apache.catalina.core.StandardContext;
 import org.apache.catalina.realm.GenericPrincipal;
 import org.apache.catalina.security.SecurityUtil;
+import org.apache.catalina.util.Enumerator;
+import org.apache.tomcat.util.res.StringManager;
 
 /**
  * Standard implementation of the <b>Session</b> interface.  This object is

==================================================
SSIExec.java
index 0f9b2281d9..2f9294c012 100644
--- a/java/org/apache/catalina/ssi/ByteArrayServletOutputStream.java
+++ b/java/org/apache/catalina/ssi/ByteArrayServletOutputStream.java
@@ -18,6 +18,7 @@
 package org.apache.catalina.ssi;
 
 import java.io.ByteArrayOutputStream;
+
 import javax.servlet.ServletOutputStream;
 
 

==================================================
SSIFlastmod.java
index 2070dfec0d..683167c5d2 100644
--- a/java/org/apache/catalina/ssi/SSIExec.java
+++ b/java/org/apache/catalina/ssi/SSIExec.java
@@ -21,6 +21,7 @@ import java.io.BufferedReader;
 import java.io.IOException;
 import java.io.InputStreamReader;
 import java.io.PrintWriter;
+
 import org.apache.catalina.util.IOTools;
 /**
  * Implements the Server-side #exec command

==================================================
SSIMediator.java
index 40d1cb6c28..84b1cf84d8 100644
--- a/java/org/apache/catalina/ssi/SSIFlastmod.java
+++ b/java/org/apache/catalina/ssi/SSIFlastmod.java
@@ -20,6 +20,7 @@ package org.apache.catalina.ssi;
 import java.io.IOException;
 import java.io.PrintWriter;
 import java.util.Date;
+
 import org.apache.catalina.util.DateTool;
 import org.apache.catalina.util.Strftime;
 /**

==================================================
SSIProcessor.java
index ede98aee86..2da24fe5f5 100644
--- a/java/org/apache/catalina/ssi/SSIMediator.java
+++ b/java/org/apache/catalina/ssi/SSIMediator.java
@@ -25,6 +25,7 @@ import java.util.Iterator;
 import java.util.Locale;
 import java.util.Set;
 import java.util.TimeZone;
+
 import org.apache.catalina.util.DateTool;
 import org.apache.catalina.util.Strftime;
 import org.apache.catalina.util.URLEncoder;

==================================================
SSIServlet.java
index 6dd72a7030..b9ed306816 100644
--- a/java/org/apache/catalina/ssi/SSIProcessor.java
+++ b/java/org/apache/catalina/ssi/SSIProcessor.java
@@ -24,6 +24,7 @@ import java.io.StringWriter;
 import java.util.HashMap;
 import java.util.Locale;
 import java.util.StringTokenizer;
+
 import org.apache.catalina.util.IOTools;
 /**
  * The entry point to SSI processing. This class does the actual parsing,

==================================================
SSIServletExternalResolver.java
index 119a5aa287..0b275d3926 100644
--- a/java/org/apache/catalina/ssi/SSIServlet.java
+++ b/java/org/apache/catalina/ssi/SSIServlet.java
@@ -32,6 +32,7 @@ import javax.servlet.ServletException;
 import javax.servlet.http.HttpServlet;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
+
 import org.apache.catalina.Globals;
 /**
  * Servlet to process SSI requests within a webpage. Mapped to a path from

==================================================
SSIServletRequestUtil.java
index 582aae532e..c5aa02ba27 100644
--- a/java/org/apache/catalina/ssi/SSIServletExternalResolver.java
+++ b/java/org/apache/catalina/ssi/SSIServletExternalResolver.java
@@ -32,6 +32,7 @@ import javax.servlet.ServletContext;
 import javax.servlet.ServletException;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
+
 import org.apache.catalina.connector.Request;
 import org.apache.catalina.util.RequestUtil;
 import org.apache.coyote.Constants;

==================================================
ClusterRuleSetFactory.java
index ed3d7db2d8..2a91be58a3 100644
--- a/java/org/apache/catalina/ssi/SSIServletRequestUtil.java
+++ b/java/org/apache/catalina/ssi/SSIServletRequestUtil.java
@@ -18,6 +18,7 @@ package org.apache.catalina.ssi;
 
 
 import javax.servlet.http.HttpServletRequest;
+
 import org.apache.catalina.util.RequestUtil;
 public class SSIServletRequestUtil {
     /**

==================================================
ConnectorCreateRule.java
index 6e0a4c83c8..542ca7f72d 100644
--- a/java/org/apache/catalina/startup/ClusterRuleSetFactory.java
+++ b/java/org/apache/catalina/startup/ClusterRuleSetFactory.java
@@ -19,14 +19,13 @@
 package org.apache.catalina.startup;
 
 
-import org.apache.tomcat.util.digester.Digester;
-import org.apache.tomcat.util.digester.RuleSetBase;
 import java.lang.reflect.Constructor;
+import java.lang.reflect.InvocationTargetException;
 
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
-
-import java.lang.reflect.InvocationTargetException;
+import org.apache.tomcat.util.digester.Digester;
+import org.apache.tomcat.util.digester.RuleSetBase;
 public class ClusterRuleSetFactory {
     
     public static final Log log = LogFactory.getLog(ClusterRuleSetFactory.class);

==================================================
ContextConfig.java
index c24a2eb311..9f60bf65f6 100644
--- a/java/org/apache/catalina/startup/ConnectorCreateRule.java
+++ b/java/org/apache/catalina/startup/ConnectorCreateRule.java
@@ -20,15 +20,16 @@
 package org.apache.catalina.startup;
 
 
+import java.lang.reflect.Method;
+
+import org.apache.catalina.Executor;
+import org.apache.catalina.Service;
 import org.apache.catalina.connector.Connector;
+import org.apache.juli.logging.Log;
+import org.apache.juli.logging.LogFactory;
+import org.apache.tomcat.util.IntrospectionUtils;
 import org.apache.tomcat.util.digester.Rule;
 import org.xml.sax.Attributes;
-import org.apache.catalina.Service;
-import org.apache.catalina.Executor;
-import org.apache.tomcat.util.IntrospectionUtils;
-import java.lang.reflect.Method;
-import org.apache.juli.logging.LogFactory;
-import org.apache.juli.logging.Log;
 
 
 /**

==================================================
CopyParentClassLoaderRule.java
index 79f375bc41..ad63834bcb 100644
--- a/java/org/apache/catalina/startup/ContextConfig.java
+++ b/java/org/apache/catalina/startup/ContextConfig.java
@@ -49,15 +49,6 @@ import javax.servlet.ServletContainerInitializer;
 import javax.servlet.ServletContext;
 import javax.servlet.annotation.HandlesTypes;
 
-import org.apache.tomcat.util.ExceptionUtils;
-import org.apache.tomcat.util.bcel.classfile.AnnotationElementValue;
-import org.apache.tomcat.util.bcel.classfile.AnnotationEntry;
-import org.apache.tomcat.util.bcel.classfile.ArrayElementValue;
-import org.apache.tomcat.util.bcel.classfile.ClassFormatException;
-import org.apache.tomcat.util.bcel.classfile.ClassParser;
-import org.apache.tomcat.util.bcel.classfile.ElementValue;
-import org.apache.tomcat.util.bcel.classfile.ElementValuePair;
-import org.apache.tomcat.util.bcel.classfile.JavaClass;
 import org.apache.catalina.Authenticator;
 import org.apache.catalina.Container;
 import org.apache.catalina.Context;
@@ -87,9 +78,18 @@ import org.apache.naming.resources.DirContextURLConnection;
 import org.apache.naming.resources.ResourceAttributes;
 import org.apache.tomcat.JarScanner;
 import org.apache.tomcat.JarScannerCallback;
-import org.apache.tomcat.util.res.StringManager;
+import org.apache.tomcat.util.ExceptionUtils;
+import org.apache.tomcat.util.bcel.classfile.AnnotationElementValue;
+import org.apache.tomcat.util.bcel.classfile.AnnotationEntry;
+import org.apache.tomcat.util.bcel.classfile.ArrayElementValue;
+import org.apache.tomcat.util.bcel.classfile.ClassFormatException;
+import org.apache.tomcat.util.bcel.classfile.ClassParser;
+import org.apache.tomcat.util.bcel.classfile.ElementValue;
+import org.apache.tomcat.util.bcel.classfile.ElementValuePair;
+import org.apache.tomcat.util.bcel.classfile.JavaClass;
 import org.apache.tomcat.util.digester.Digester;
 import org.apache.tomcat.util.digester.RuleSet;
+import org.apache.tomcat.util.res.StringManager;
 import org.xml.sax.InputSource;
 import org.xml.sax.SAXParseException;
 

==================================================
Embedded.java
index dcb70392ab..10e52e9bbb 100644
--- a/java/org/apache/catalina/startup/CopyParentClassLoaderRule.java
+++ b/java/org/apache/catalina/startup/CopyParentClassLoaderRule.java
@@ -20,6 +20,7 @@ package org.apache.catalina.startup;
 
 
 import java.lang.reflect.Method;
+
 import org.apache.catalina.Container;
 import org.apache.tomcat.util.digester.Rule;
 import org.xml.sax.Attributes;

==================================================
ExpandWar.java
index 17ed01cd21..26c1cbdf95 100644
--- a/java/org/apache/catalina/startup/Embedded.java
+++ b/java/org/apache/catalina/startup/Embedded.java
@@ -45,11 +45,11 @@ import org.apache.catalina.loader.WebappLoader;
 import org.apache.catalina.security.SecurityConfig;
 import org.apache.catalina.util.LifecycleBase;
 import org.apache.catalina.util.LifecycleSupport;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.IntrospectionUtils;
 import org.apache.tomcat.util.log.SystemLogHandler;
+import org.apache.tomcat.util.res.StringManager;
 
 
 /**

==================================================
HomesUserDatabase.java
index 51acf892b8..de3e051496 100644
--- a/java/org/apache/catalina/startup/ExpandWar.java
+++ b/java/org/apache/catalina/startup/ExpandWar.java
@@ -22,8 +22,8 @@ import java.io.BufferedOutputStream;
 import java.io.File;
 import java.io.FileInputStream;
 import java.io.FileOutputStream;
-import java.io.InputStream;
 import java.io.IOException;
+import java.io.InputStream;
 import java.net.JarURLConnection;
 import java.net.URL;
 import java.nio.channels.FileChannel;
@@ -32,10 +32,10 @@ import java.util.jar.JarEntry;
 import java.util.jar.JarFile;
 
 import org.apache.catalina.Host;
-import org.apache.tomcat.util.ExceptionUtils;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
+import org.apache.tomcat.util.ExceptionUtils;
+import org.apache.tomcat.util.res.StringManager;
 
 /**
  * Expand out a WAR in a Host's appBase.

==================================================
HostConfig.java
index ce4073999a..685e816a5a 100644
--- a/java/org/apache/catalina/startup/HomesUserDatabase.java
+++ b/java/org/apache/catalina/startup/HomesUserDatabase.java
@@ -20,8 +20,8 @@ package org.apache.catalina.startup;
 
 
 import java.io.File;
-import java.util.Hashtable;
 import java.util.Enumeration;
+import java.util.Hashtable;
 
 
 /**

==================================================
PasswdUserDatabase.java
index 03c8846317..4bc6bfa9c5 100644
--- a/java/org/apache/catalina/startup/HostConfig.java
+++ b/java/org/apache/catalina/startup/HostConfig.java
@@ -51,9 +51,9 @@ import org.apache.catalina.util.IOTools;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.ExceptionUtils;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.tomcat.util.digester.Digester;
 import org.apache.tomcat.util.modeler.Registry;
+import org.apache.tomcat.util.res.StringManager;
 
 
 /**

==================================================
SetAllPropertiesRule.java
index 4b8ea101da..23fe20397f 100644
--- a/java/org/apache/catalina/startup/PasswdUserDatabase.java
+++ b/java/org/apache/catalina/startup/PasswdUserDatabase.java
@@ -22,8 +22,8 @@ package org.apache.catalina.startup;
 import java.io.BufferedReader;
 import java.io.FileReader;
 import java.io.IOException;
-import java.util.Hashtable;
 import java.util.Enumeration;
+import java.util.Hashtable;
 
 
 /**

==================================================
SetContextPropertiesRule.java
index a87c1adf0e..976765d588 100644
--- a/java/org/apache/catalina/startup/SetAllPropertiesRule.java
+++ b/java/org/apache/catalina/startup/SetAllPropertiesRule.java
@@ -18,11 +18,11 @@
 
 package org.apache.catalina.startup;
 
-import org.xml.sax.Attributes;
+import java.util.HashMap;
 
 import org.apache.tomcat.util.IntrospectionUtils;
 import org.apache.tomcat.util.digester.Rule;
-import java.util.HashMap;
+import org.xml.sax.Attributes;
 
 /**
  * Rule that uses the introspection utils to set properties.

==================================================
TldConfig.java
index 5e044f25a8..97d7df3617 100644
--- a/java/org/apache/catalina/startup/SetContextPropertiesRule.java
+++ b/java/org/apache/catalina/startup/SetContextPropertiesRule.java
@@ -18,10 +18,9 @@
 
 package org.apache.catalina.startup;
 
-import org.xml.sax.Attributes;
-
 import org.apache.tomcat.util.IntrospectionUtils;
 import org.apache.tomcat.util.digester.Rule;
+import org.xml.sax.Attributes;
 
 /**
  * Rule that uses the introspection utils to set properties of a context 

==================================================
ByteMessage.java
index 0f8bffda12..5ee777afb6 100644
--- a/java/org/apache/catalina/startup/TldConfig.java
+++ b/java/org/apache/catalina/startup/TldConfig.java
@@ -42,8 +42,8 @@ import org.apache.catalina.core.StandardContext;
 import org.apache.tomcat.JarScanner;
 import org.apache.tomcat.JarScannerCallback;
 import org.apache.tomcat.util.ExceptionUtils;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.tomcat.util.digester.Digester;
+import org.apache.tomcat.util.res.StringManager;
 import org.xml.sax.InputSource;
 import org.xml.sax.SAXException;
 

==================================================
ChannelMessage.java
index 58551874f9..469e746207 100644
--- a/java/org/apache/catalina/tribes/ByteMessage.java
+++ b/java/org/apache/catalina/tribes/ByteMessage.java
@@ -16,11 +16,11 @@
  */
 package org.apache.catalina.tribes;
 
-import java.io.Serializable;
 import java.io.Externalizable;
-import java.io.ObjectInput;
 import java.io.IOException;
+import java.io.ObjectInput;
 import java.io.ObjectOutput;
+import java.io.Serializable;
 
 /**
  * A byte message is not serialized and deserialized by the channel

==================================================
ChannelSender.java
index 1efedd95cb..15af289785 100644
--- a/java/org/apache/catalina/tribes/ChannelMessage.java
+++ b/java/org/apache/catalina/tribes/ChannelMessage.java
@@ -17,6 +17,7 @@
 package org.apache.catalina.tribes;
 
 import java.io.Serializable;
+
 import org.apache.catalina.tribes.io.XByteBuffer;
 
 /**

==================================================
UniqueId.java
index 412a10044f..17d23f3aae 100644
--- a/java/org/apache/catalina/tribes/ChannelSender.java
+++ b/java/org/apache/catalina/tribes/ChannelSender.java
@@ -17,6 +17,8 @@
 
 package org.apache.catalina.tribes;
 
+import java.io.IOException;
+
 
 /**
  * ChannelReceiver Interface<br>

==================================================
AbsoluteOrder.java
index 799c2c5a07..62e67fb73e 100644
--- a/java/org/apache/catalina/tribes/UniqueId.java
+++ b/java/org/apache/catalina/tribes/UniqueId.java
@@ -16,9 +16,10 @@
  */
 package org.apache.catalina.tribes;
 
-import org.apache.catalina.tribes.util.Arrays;
 import java.io.Serializable;
 
+import org.apache.catalina.tribes.util.Arrays;
+
 /**
  * <p>Title: Represents a globally unique Id</p>
  *

==================================================
ChannelCoordinator.java
index c0c36b0512..9f48f90b1f 100644
--- a/java/org/apache/catalina/tribes/group/AbsoluteOrder.java
+++ b/java/org/apache/catalina/tribes/group/AbsoluteOrder.java
@@ -16,9 +16,10 @@
  */
 package org.apache.catalina.tribes.group;
 
-import org.apache.catalina.tribes.Member;
-import java.util.Comparator;
 import java.util.Arrays;
+import java.util.Comparator;
+
+import org.apache.catalina.tribes.Member;
 
 /**
  * <p>Title: Membership - Absolute Order</p>

==================================================
GroupChannel.java
index a352c457f5..3a35ba74e0 100644
--- a/java/org/apache/catalina/tribes/group/ChannelCoordinator.java
+++ b/java/org/apache/catalina/tribes/group/ChannelCoordinator.java
@@ -16,22 +16,21 @@
  */
 package org.apache.catalina.tribes.group;
 
+import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.ChannelException;
 import org.apache.catalina.tribes.ChannelMessage;
 import org.apache.catalina.tribes.ChannelReceiver;
 import org.apache.catalina.tribes.ChannelSender;
-
 import org.apache.catalina.tribes.Member;
 import org.apache.catalina.tribes.MembershipService;
 import org.apache.catalina.tribes.MessageListener;
-import org.apache.catalina.tribes.transport.SenderState;
-import org.apache.catalina.tribes.transport.ReplicationTransmitter;
+import org.apache.catalina.tribes.UniqueId;
 import org.apache.catalina.tribes.membership.McastService;
+import org.apache.catalina.tribes.transport.ReplicationTransmitter;
+import org.apache.catalina.tribes.transport.SenderState;
 import org.apache.catalina.tribes.transport.nio.NioReceiver;
-import org.apache.catalina.tribes.Channel;
-import org.apache.catalina.tribes.util.Logs;
-import org.apache.catalina.tribes.UniqueId;
 import org.apache.catalina.tribes.util.Arrays;
+import org.apache.catalina.tribes.util.Logs;
 
 
 /**

==================================================
RpcMessage.java
index 4f572d14eb..935ad4a469 100644
--- a/java/org/apache/catalina/tribes/group/GroupChannel.java
+++ b/java/org/apache/catalina/tribes/group/GroupChannel.java
@@ -30,19 +30,19 @@ import org.apache.catalina.tribes.ChannelMessage;
 import org.apache.catalina.tribes.ChannelReceiver;
 import org.apache.catalina.tribes.ChannelSender;
 import org.apache.catalina.tribes.ErrorHandler;
+import org.apache.catalina.tribes.Heartbeat;
 import org.apache.catalina.tribes.ManagedChannel;
 import org.apache.catalina.tribes.Member;
 import org.apache.catalina.tribes.MembershipListener;
 import org.apache.catalina.tribes.MembershipService;
+import org.apache.catalina.tribes.RemoteProcessException;
+import org.apache.catalina.tribes.UniqueId;
 import org.apache.catalina.tribes.group.interceptors.MessageDispatchInterceptor;
+import org.apache.catalina.tribes.io.BufferPool;
 import org.apache.catalina.tribes.io.ChannelData;
 import org.apache.catalina.tribes.io.XByteBuffer;
-import org.apache.catalina.tribes.UniqueId;
-import org.apache.catalina.tribes.Heartbeat;
-import org.apache.catalina.tribes.io.BufferPool;
-import org.apache.catalina.tribes.RemoteProcessException;
-import org.apache.catalina.tribes.util.Logs;
 import org.apache.catalina.tribes.util.Arrays;
+import org.apache.catalina.tribes.util.Logs;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 

==================================================
DomainFilterInterceptor.java
index b294d72f53..3e48d86875 100644
--- a/java/org/apache/catalina/tribes/group/RpcMessage.java
+++ b/java/org/apache/catalina/tribes/group/RpcMessage.java
@@ -17,11 +17,12 @@
 
 package org.apache.catalina.tribes.group;
 
-import java.io.ObjectInput;
-import java.io.Serializable;
 import java.io.Externalizable;
 import java.io.IOException;
+import java.io.ObjectInput;
 import java.io.ObjectOutput;
+import java.io.Serializable;
+
 import org.apache.catalina.tribes.util.Arrays;
 
 /**

==================================================
MessageDispatch15Interceptor.java
index 245ef9207c..be9094cc03 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/DomainFilterInterceptor.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/DomainFilterInterceptor.java
@@ -15,12 +15,13 @@
  */
 package org.apache.catalina.tribes.group.interceptors;
 
+import java.util.Arrays;
+
 import org.apache.catalina.tribes.ChannelMessage;
 import org.apache.catalina.tribes.Member;
 import org.apache.catalina.tribes.group.ChannelInterceptorBase;
 import org.apache.catalina.tribes.membership.MemberImpl;
 import org.apache.catalina.tribes.membership.Membership;
-import java.util.Arrays;
 
 /**
  * <p>Title: Member domain filter interceptor </p>

==================================================
MessageDispatchInterceptor.java
index aa1a005c14..d819d66bfa 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/MessageDispatch15Interceptor.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/MessageDispatch15Interceptor.java
@@ -17,13 +17,13 @@ package org.apache.catalina.tribes.group.interceptors;
 
 import java.util.concurrent.LinkedBlockingQueue;
 import java.util.concurrent.ThreadPoolExecutor;
+import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicLong;
 
 import org.apache.catalina.tribes.ChannelMessage;
 import org.apache.catalina.tribes.Member;
 import org.apache.catalina.tribes.group.InterceptorPayload;
 import org.apache.catalina.tribes.transport.bio.util.LinkObject;
-import java.util.concurrent.TimeUnit;
 
 /**
  * 

==================================================
OrderInterceptor.java
index 0908409a9e..1e23028d65 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/MessageDispatchInterceptor.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/MessageDispatchInterceptor.java
@@ -20,11 +20,11 @@ import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.ChannelException;
 import org.apache.catalina.tribes.ChannelMessage;
 import org.apache.catalina.tribes.Member;
+import org.apache.catalina.tribes.UniqueId;
 import org.apache.catalina.tribes.group.ChannelInterceptorBase;
 import org.apache.catalina.tribes.group.InterceptorPayload;
 import org.apache.catalina.tribes.transport.bio.util.FastQueue;
 import org.apache.catalina.tribes.transport.bio.util.LinkObject;
-import org.apache.catalina.tribes.UniqueId;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 

==================================================
StaticMembershipInterceptor.java
index 219b5344ea..71c771937e 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/OrderInterceptor.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/OrderInterceptor.java
@@ -17,6 +17,8 @@
 package org.apache.catalina.tribes.group.interceptors;
 
 import java.util.HashMap;
+import java.util.concurrent.atomic.AtomicInteger;
+import java.util.concurrent.locks.ReentrantReadWriteLock;
 
 import org.apache.catalina.tribes.ChannelException;
 import org.apache.catalina.tribes.ChannelMessage;
@@ -24,8 +26,6 @@ import org.apache.catalina.tribes.Member;
 import org.apache.catalina.tribes.group.ChannelInterceptorBase;
 import org.apache.catalina.tribes.group.InterceptorPayload;
 import org.apache.catalina.tribes.io.XByteBuffer;
-import java.util.concurrent.atomic.AtomicInteger;
-import java.util.concurrent.locks.ReentrantReadWriteLock;
 
 
 

==================================================
TwoPhaseCommitInterceptor.java
index 41aaed4cf2..0103964e8f 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/StaticMembershipInterceptor.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/StaticMembershipInterceptor.java
@@ -16,12 +16,13 @@
  */
 package org.apache.catalina.tribes.group.interceptors;
 
-import org.apache.catalina.tribes.group.ChannelInterceptorBase;
-import org.apache.catalina.tribes.Member;
 import java.util.ArrayList;
-import org.apache.catalina.tribes.group.AbsoluteOrder;
-import org.apache.catalina.tribes.ChannelException;
+
 import org.apache.catalina.tribes.Channel;
+import org.apache.catalina.tribes.ChannelException;
+import org.apache.catalina.tribes.Member;
+import org.apache.catalina.tribes.group.AbsoluteOrder;
+import org.apache.catalina.tribes.group.ChannelInterceptorBase;
 
 public class StaticMembershipInterceptor
     extends ChannelInterceptorBase {

==================================================
ChannelData.java
index 1eb5054895..7c6b58498e 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/TwoPhaseCommitInterceptor.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/TwoPhaseCommitInterceptor.java
@@ -17,16 +17,16 @@
 package org.apache.catalina.tribes.group.interceptors;
 
 import java.util.HashMap;
+import java.util.Map;
 
 import org.apache.catalina.tribes.ChannelException;
 import org.apache.catalina.tribes.ChannelMessage;
 import org.apache.catalina.tribes.Member;
+import org.apache.catalina.tribes.UniqueId;
 import org.apache.catalina.tribes.group.ChannelInterceptorBase;
 import org.apache.catalina.tribes.group.InterceptorPayload;
-import org.apache.catalina.tribes.util.UUIDGenerator;
 import org.apache.catalina.tribes.util.Arrays;
-import org.apache.catalina.tribes.UniqueId;
-import java.util.Map;
+import org.apache.catalina.tribes.util.UUIDGenerator;
 
 /**
  * <p>Title: </p>

==================================================
Membership.java
index f5dcbead3f..085c2f81e0 100644
--- a/java/org/apache/catalina/tribes/io/ChannelData.java
+++ b/java/org/apache/catalina/tribes/io/ChannelData.java
@@ -16,14 +16,14 @@
  */
 package org.apache.catalina.tribes.io;
 
+import java.sql.Timestamp;
 import java.util.Arrays;
 
+import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.ChannelMessage;
 import org.apache.catalina.tribes.Member;
 import org.apache.catalina.tribes.membership.MemberImpl;
 import org.apache.catalina.tribes.util.UUIDGenerator;
-import org.apache.catalina.tribes.Channel;
-import java.sql.Timestamp;
 
 /**
  * The <code>ChannelData</code> object is used to transfer a message through the 

==================================================
StaticMember.java
index f4039e23e9..86268ecd29 100644
--- a/java/org/apache/catalina/tribes/membership/Membership.java
+++ b/java/org/apache/catalina/tribes/membership/Membership.java
@@ -20,12 +20,12 @@ package org.apache.catalina.tribes.membership;
 
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.Comparator;
 import java.util.HashMap;
 import java.util.Iterator;
 import java.util.Map;
 
 import org.apache.catalina.tribes.Member;
-import java.util.Comparator;
 
 /**
  * A <b>membership</b> implementation using simple multicast.

==================================================
AbstractReplicatedMap.java
index fb625c56d1..fc4663801d 100644
--- a/java/org/apache/catalina/tribes/membership/StaticMember.java
+++ b/java/org/apache/catalina/tribes/membership/StaticMember.java
@@ -18,6 +18,7 @@
 package org.apache.catalina.tribes.membership;
 
 import java.io.IOException;
+
 import org.apache.catalina.tribes.util.Arrays;
 
 /**

==================================================
LazyReplicatedMap.java
index 6bf564104c..0a5e695ed0 100644
--- a/java/org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java
+++ b/java/org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java
@@ -30,6 +30,7 @@ import java.util.Iterator;
 import java.util.LinkedHashSet;
 import java.util.Map;
 import java.util.Set;
+import java.util.concurrent.ConcurrentHashMap;
 
 import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.ChannelException;
@@ -45,7 +46,6 @@ import org.apache.catalina.tribes.membership.MemberImpl;
 import org.apache.catalina.tribes.util.Arrays;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
-import java.util.concurrent.ConcurrentHashMap;
 
 /**
  *

==================================================
MultiPointSender.java
index 4ee963a70a..bbe508d0a3 100644
--- a/java/org/apache/catalina/tribes/tipis/LazyReplicatedMap.java
+++ b/java/org/apache/catalina/tribes/tipis/LazyReplicatedMap.java
@@ -21,9 +21,8 @@ import java.io.Serializable;
 import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.ChannelException;
 import org.apache.catalina.tribes.Member;
-import org.apache.catalina.tribes.util.Arrays;
 import org.apache.catalina.tribes.UniqueId;
-
+import org.apache.catalina.tribes.util.Arrays;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 

==================================================
PooledSender.java
index 77288c2030..fe56a5099d 100644
--- a/java/org/apache/catalina/tribes/transport/MultiPointSender.java
+++ b/java/org/apache/catalina/tribes/transport/MultiPointSender.java
@@ -16,8 +16,8 @@
  */
 
 package org.apache.catalina.tribes.transport;
-import org.apache.catalina.tribes.ChannelMessage;
 import org.apache.catalina.tribes.ChannelException;
+import org.apache.catalina.tribes.ChannelMessage;
 import org.apache.catalina.tribes.Member;
 
 /**

==================================================
ReplicationTransmitter.java
index e541df61f4..8df3c0ead3 100644
--- a/java/org/apache/catalina/tribes/transport/PooledSender.java
+++ b/java/org/apache/catalina/tribes/transport/PooledSender.java
@@ -18,6 +18,7 @@ package org.apache.catalina.tribes.transport;
 
 import java.io.IOException;
 import java.util.List;
+
 import org.apache.catalina.tribes.Member;
 
 /**

==================================================
SenderState.java
index 95f159a52f..85e8d6ef0c 100644
--- a/java/org/apache/catalina/tribes/transport/ReplicationTransmitter.java
+++ b/java/org/apache/catalina/tribes/transport/ReplicationTransmitter.java
@@ -21,8 +21,8 @@ import org.apache.catalina.tribes.ChannelException;
 import org.apache.catalina.tribes.ChannelMessage;
 import org.apache.catalina.tribes.ChannelSender;
 import org.apache.catalina.tribes.Member;
-import org.apache.catalina.tribes.util.StringManager;
 import org.apache.catalina.tribes.transport.nio.PooledParallelSender;
+import org.apache.catalina.tribes.util.StringManager;
 
 /**
  * Transmit message to other cluster members

==================================================
BioReceiver.java
index 9e9ce907d7..6c74e40855 100644
--- a/java/org/apache/catalina/tribes/transport/SenderState.java
+++ b/java/org/apache/catalina/tribes/transport/SenderState.java
@@ -17,9 +17,10 @@
 
 package org.apache.catalina.tribes.transport;
 
-import org.apache.catalina.tribes.Member;
 import java.util.HashMap;
 
+import org.apache.catalina.tribes.Member;
+
 
 /**
  * 

==================================================
BioReplicationTask.java
index ff4359f062..6fa722c3ef 100644
--- a/java/org/apache/catalina/tribes/transport/bio/BioReceiver.java
+++ b/java/org/apache/catalina/tribes/transport/bio/BioReceiver.java
@@ -21,10 +21,9 @@ import java.net.ServerSocket;
 import java.net.Socket;
 
 import org.apache.catalina.tribes.io.ObjectReader;
+import org.apache.catalina.tribes.transport.AbstractRxTask;
 import org.apache.catalina.tribes.transport.ReceiverBase;
 import org.apache.catalina.tribes.transport.RxTaskPool;
-import org.apache.catalina.tribes.transport.AbstractRxTask;
-
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 

==================================================
MultipointBioSender.java
index 6ae02c9559..c95f3fdb65 100644
--- a/java/org/apache/catalina/tribes/transport/bio/BioReplicationTask.java
+++ b/java/org/apache/catalina/tribes/transport/bio/BioReplicationTask.java
@@ -17,16 +17,17 @@
 
 package org.apache.catalina.tribes.transport.bio;
 
-import org.apache.catalina.tribes.io.ObjectReader;
-import org.apache.catalina.tribes.transport.Constants;
-import org.apache.catalina.tribes.transport.AbstractRxTask;
-import java.net.Socket;
 import java.io.InputStream;
 import java.io.OutputStream;
-import org.apache.catalina.tribes.io.ListenCallback;
+import java.net.Socket;
+
 import org.apache.catalina.tribes.ChannelMessage;
-import org.apache.catalina.tribes.io.ChannelData;
 import org.apache.catalina.tribes.io.BufferPool;
+import org.apache.catalina.tribes.io.ChannelData;
+import org.apache.catalina.tribes.io.ListenCallback;
+import org.apache.catalina.tribes.io.ObjectReader;
+import org.apache.catalina.tribes.transport.AbstractRxTask;
+import org.apache.catalina.tribes.transport.Constants;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 

==================================================
PooledMultiSender.java
index d7f7752d74..101a00e0c0 100644
--- a/java/org/apache/catalina/tribes/transport/bio/MultipointBioSender.java
+++ b/java/org/apache/catalina/tribes/transport/bio/MultipointBioSender.java
@@ -21,14 +21,14 @@ import java.io.IOException;
 import java.util.HashMap;
 import java.util.Map;
 
+import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.ChannelException;
 import org.apache.catalina.tribes.ChannelMessage;
 import org.apache.catalina.tribes.Member;
 import org.apache.catalina.tribes.io.ChannelData;
 import org.apache.catalina.tribes.io.XByteBuffer;
-import org.apache.catalina.tribes.transport.MultiPointSender;
 import org.apache.catalina.tribes.transport.AbstractSender;
-import org.apache.catalina.tribes.Channel;
+import org.apache.catalina.tribes.transport.MultiPointSender;
 
 /**
  *

==================================================
NioReceiver.java
index 362eb53770..b67f5261b6 100644
--- a/java/org/apache/catalina/tribes/transport/bio/PooledMultiSender.java
+++ b/java/org/apache/catalina/tribes/transport/bio/PooledMultiSender.java
@@ -16,13 +16,13 @@
  */
 package org.apache.catalina.tribes.transport.bio;
 
+import org.apache.catalina.tribes.ChannelException;
+import org.apache.catalina.tribes.ChannelMessage;
+import org.apache.catalina.tribes.Member;
 import org.apache.catalina.tribes.transport.AbstractSender;
 import org.apache.catalina.tribes.transport.DataSender;
-import org.apache.catalina.tribes.transport.PooledSender;
-import org.apache.catalina.tribes.Member;
-import org.apache.catalina.tribes.ChannelException;
 import org.apache.catalina.tribes.transport.MultiPointSender;
-import org.apache.catalina.tribes.ChannelMessage;
+import org.apache.catalina.tribes.transport.PooledSender;
 
 /**
  * <p>Title: </p>

==================================================
NioReplicationTask.java
index 4cb96a762d..f19383574d 100644
--- a/java/org/apache/catalina/tribes/transport/nio/NioReceiver.java
+++ b/java/org/apache/catalina/tribes/transport/nio/NioReceiver.java
@@ -19,6 +19,8 @@ package org.apache.catalina.tribes.transport.nio;
 
 import java.io.IOException;
 import java.net.ServerSocket;
+import java.nio.channels.CancelledKeyException;
+import java.nio.channels.ClosedSelectorException;
 import java.nio.channels.DatagramChannel;
 import java.nio.channels.SelectableChannel;
 import java.nio.channels.SelectionKey;
@@ -26,21 +28,18 @@ import java.nio.channels.Selector;
 import java.nio.channels.ServerSocketChannel;
 import java.nio.channels.SocketChannel;
 import java.util.Iterator;
+import java.util.LinkedList;
+import java.util.Set;
 
 import org.apache.catalina.tribes.io.ObjectReader;
+import org.apache.catalina.tribes.transport.AbstractRxTask;
 import org.apache.catalina.tribes.transport.Constants;
 import org.apache.catalina.tribes.transport.ReceiverBase;
 import org.apache.catalina.tribes.transport.RxTaskPool;
-import org.apache.catalina.tribes.transport.AbstractRxTask;
 import org.apache.catalina.tribes.util.StringManager;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 
-import java.util.LinkedList;
-import java.util.Set;
-import java.nio.channels.CancelledKeyException;
-import java.nio.channels.ClosedSelectorException;
-
 /**
  * @author Filip Hanik
  * @version $Id$

==================================================
NioSender.java
index 067622fb1e..2b26e99c4f 100644
--- a/java/org/apache/catalina/tribes/transport/nio/NioReplicationTask.java
+++ b/java/org/apache/catalina/tribes/transport/nio/NioReplicationTask.java
@@ -19,24 +19,23 @@ package org.apache.catalina.tribes.transport.nio;
 import java.io.IOException;
 import java.net.SocketAddress;
 import java.nio.ByteBuffer;
+import java.nio.channels.CancelledKeyException;
 import java.nio.channels.DatagramChannel;
 import java.nio.channels.ReadableByteChannel;
-import java.nio.channels.WritableByteChannel;
 import java.nio.channels.SelectionKey;
 import java.nio.channels.SocketChannel;
+import java.nio.channels.WritableByteChannel;
 
-import org.apache.catalina.tribes.io.ObjectReader;
-import org.apache.catalina.tribes.transport.Constants;
-import org.apache.catalina.tribes.transport.AbstractRxTask;
 import org.apache.catalina.tribes.ChannelMessage;
-import org.apache.catalina.tribes.io.ListenCallback;
-import org.apache.catalina.tribes.io.ChannelData;
-import org.apache.catalina.tribes.io.BufferPool;
-import java.nio.channels.CancelledKeyException;
-
 import org.apache.catalina.tribes.ChannelReceiver;
-import org.apache.catalina.tribes.UniqueId;
 import org.apache.catalina.tribes.RemoteProcessException;
+import org.apache.catalina.tribes.UniqueId;
+import org.apache.catalina.tribes.io.BufferPool;
+import org.apache.catalina.tribes.io.ChannelData;
+import org.apache.catalina.tribes.io.ListenCallback;
+import org.apache.catalina.tribes.io.ObjectReader;
+import org.apache.catalina.tribes.transport.AbstractRxTask;
+import org.apache.catalina.tribes.transport.Constants;
 import org.apache.catalina.tribes.util.Logs;
 
 /**

==================================================
ParallelNioSender.java
index b5f1251ad8..8cedb54198 100644
--- a/java/org/apache/catalina/tribes/transport/nio/NioSender.java
+++ b/java/org/apache/catalina/tribes/transport/nio/NioSender.java
@@ -17,6 +17,7 @@
 
 package org.apache.catalina.tribes.transport.nio;
 
+import java.io.EOFException;
 import java.io.IOException;
 import java.net.InetSocketAddress;
 import java.net.SocketException;
@@ -27,14 +28,12 @@ import java.nio.channels.Selector;
 import java.nio.channels.SocketChannel;
 import java.util.Arrays;
 
+import org.apache.catalina.tribes.RemoteProcessException;
 import org.apache.catalina.tribes.io.XByteBuffer;
 import org.apache.catalina.tribes.transport.AbstractSender;
-import org.apache.catalina.tribes.RemoteProcessException;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 
-import java.io.EOFException;
-
 /**
  * This class is NOT thread safe and should never be used with more than one thread at a time
  *

==================================================
Arrays.java
index c14ba6e3d4..89980e55f7 100644
--- a/java/org/apache/catalina/tribes/transport/nio/ParallelNioSender.java
+++ b/java/org/apache/catalina/tribes/transport/nio/ParallelNioSender.java
@@ -18,6 +18,7 @@ package org.apache.catalina.tribes.transport.nio;
 
 
 import java.io.IOException;
+import java.net.UnknownHostException;
 import java.nio.channels.SelectionKey;
 import java.nio.channels.Selector;
 import java.util.HashMap;
@@ -25,18 +26,17 @@ import java.util.Iterator;
 import java.util.Map;
 import java.util.Map.Entry;
 
+import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.ChannelException;
 import org.apache.catalina.tribes.ChannelMessage;
 import org.apache.catalina.tribes.Member;
+import org.apache.catalina.tribes.UniqueId;
 import org.apache.catalina.tribes.io.ChannelData;
 import org.apache.catalina.tribes.io.XByteBuffer;
+import org.apache.catalina.tribes.transport.AbstractSender;
 import org.apache.catalina.tribes.transport.MultiPointSender;
 import org.apache.catalina.tribes.transport.SenderState;
-import org.apache.catalina.tribes.transport.AbstractSender;
-import java.net.UnknownHostException;
-import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.util.Logs;
-import org.apache.catalina.tribes.UniqueId;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 

==================================================
AbstractUser.java
index 52b90d4322..7f51df5507 100644
--- a/java/org/apache/catalina/tribes/util/Arrays.java
+++ b/java/org/apache/catalina/tribes/util/Arrays.java
@@ -16,8 +16,10 @@
  */
 package org.apache.catalina.tribes.util;
 
+import java.io.UnsupportedEncodingException;
 import java.util.ArrayList;
 import java.util.List;
+import java.util.StringTokenizer;
 
 import org.apache.catalina.tribes.ChannelMessage;
 import org.apache.catalina.tribes.Member;
@@ -25,10 +27,8 @@ import org.apache.catalina.tribes.UniqueId;
 import org.apache.catalina.tribes.group.AbsoluteOrder;
 import org.apache.catalina.tribes.membership.MemberImpl;
 import org.apache.catalina.tribes.membership.Membership;
-import java.io.UnsupportedEncodingException;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
-import java.util.StringTokenizer;
 
 /**
  * @author Filip Hanik

==================================================
MemoryUserDatabase.java
index 58c0ecd8b2..4b59fef9c0 100644
--- a/java/org/apache/catalina/users/AbstractUser.java
+++ b/java/org/apache/catalina/users/AbstractUser.java
@@ -20,6 +20,7 @@ package org.apache.catalina.users;
 
 
 import java.util.Iterator;
+
 import org.apache.catalina.Group;
 import org.apache.catalina.Role;
 import org.apache.catalina.User;

==================================================
CustomObjectInputStream.java
index 30a9616631..43989e28cb 100644
--- a/java/org/apache/catalina/users/MemoryUserDatabase.java
+++ b/java/org/apache/catalina/users/MemoryUserDatabase.java
@@ -27,16 +27,17 @@ import java.io.OutputStreamWriter;
 import java.io.PrintWriter;
 import java.util.HashMap;
 import java.util.Iterator;
+
 import org.apache.catalina.Group;
 import org.apache.catalina.Role;
 import org.apache.catalina.User;
 import org.apache.catalina.UserDatabase;
-import org.apache.tomcat.util.ExceptionUtils;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
+import org.apache.tomcat.util.ExceptionUtils;
 import org.apache.tomcat.util.digester.Digester;
 import org.apache.tomcat.util.digester.ObjectCreationFactory;
+import org.apache.tomcat.util.res.StringManager;
 import org.xml.sax.Attributes;
 
 

==================================================
Enumerator.java
index 41130297aa..c81040242f 100644
--- a/java/org/apache/catalina/util/CustomObjectInputStream.java
+++ b/java/org/apache/catalina/util/CustomObjectInputStream.java
@@ -17,8 +17,8 @@
 
 package org.apache.catalina.util;
 
-import java.io.InputStream;
 import java.io.IOException;
+import java.io.InputStream;
 import java.io.ObjectInputStream;
 import java.io.ObjectStreamClass;
 import java.lang.reflect.Proxy;

==================================================
IOTools.java
index acc555bbfa..678e9fe60e 100644
--- a/java/org/apache/catalina/util/Enumerator.java
+++ b/java/org/apache/catalina/util/Enumerator.java
@@ -19,11 +19,11 @@
 package org.apache.catalina.util;
 
 
+import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Enumeration;
 import java.util.Iterator;
 import java.util.List;
-import java.util.ArrayList;
 import java.util.Map;
 import java.util.NoSuchElementException;
 

==================================================
InstanceSupport.java
index ae4c9748df..1838bd29ec 100644
--- a/java/org/apache/catalina/util/IOTools.java
+++ b/java/org/apache/catalina/util/IOTools.java
@@ -16,8 +16,8 @@
  */
 package org.apache.catalina.util;
 
-import java.io.InputStream;
 import java.io.IOException;
+import java.io.InputStream;
 import java.io.OutputStream;
 import java.io.Reader;
 import java.io.Writer;

==================================================
ManifestResource.java
index c3dcd3885b..42038d1985 100644
--- a/java/org/apache/catalina/util/InstanceSupport.java
+++ b/java/org/apache/catalina/util/InstanceSupport.java
@@ -23,6 +23,7 @@ import javax.servlet.Filter;
 import javax.servlet.Servlet;
 import javax.servlet.ServletRequest;
 import javax.servlet.ServletResponse;
+
 import org.apache.catalina.InstanceEvent;
 import org.apache.catalina.InstanceListener;
 import org.apache.catalina.Wrapper;

==================================================
SchemaResolver.java
index bf09d485fb..eea96d92ba 100644
--- a/java/org/apache/catalina/util/ManifestResource.java
+++ b/java/org/apache/catalina/util/ManifestResource.java
@@ -16,10 +16,10 @@
  */
 package org.apache.catalina.util;
 
+import java.util.ArrayList;
 import java.util.Iterator;
-import java.util.jar.Manifest;
 import java.util.jar.Attributes;
-import java.util.ArrayList;
+import java.util.jar.Manifest;
 
 /**
  *  Representation of a Manifest file and its available extensions and

==================================================
Strftime.java
index 553f371805..d178290b11 100644
--- a/java/org/apache/catalina/util/SchemaResolver.java
+++ b/java/org/apache/catalina/util/SchemaResolver.java
@@ -20,8 +20,8 @@ package org.apache.catalina.util;
 import java.util.HashMap;
 
 import org.apache.tomcat.util.digester.Digester;
-import org.xml.sax.InputSource;
 import org.xml.sax.EntityResolver;
+import org.xml.sax.InputSource;
 import org.xml.sax.SAXException;
 
 /**

==================================================
AccessLogValve.java
index a6ecdedd9b..22e847f2cd 100644
--- a/java/org/apache/catalina/util/Strftime.java
+++ b/java/org/apache/catalina/util/Strftime.java
@@ -18,9 +18,9 @@
 package org.apache.catalina.util;
 
 import java.text.SimpleDateFormat;
-import java.util.Properties;
 import java.util.Date;
 import java.util.Locale;
+import java.util.Properties;
 import java.util.TimeZone;
 
 /**

==================================================
RemoteAddrValve.java
index e60f710447..2513b2110f 100644
--- a/java/org/apache/catalina/valves/AccessLogValve.java
+++ b/java/org/apache/catalina/valves/AccessLogValve.java
@@ -42,10 +42,10 @@ import org.apache.catalina.LifecycleState;
 import org.apache.catalina.connector.Request;
 import org.apache.catalina.connector.Response;
 import org.apache.catalina.util.LifecycleBase;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.coyote.RequestInfo;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
+import org.apache.tomcat.util.res.StringManager;
 
 
 /**

==================================================
RemoteHostValve.java
index a3775488a7..63058f43af 100644
--- a/java/org/apache/catalina/valves/RemoteAddrValve.java
+++ b/java/org/apache/catalina/valves/RemoteAddrValve.java
@@ -20,7 +20,9 @@ package org.apache.catalina.valves;
 
 
 import java.io.IOException;
+
 import javax.servlet.ServletException;
+
 import org.apache.catalina.connector.Request;
 import org.apache.catalina.connector.Response;
 

==================================================
ValveBase.java
index 0ff7e4c1b6..20c664ea11 100644
--- a/java/org/apache/catalina/valves/RemoteHostValve.java
+++ b/java/org/apache/catalina/valves/RemoteHostValve.java
@@ -20,7 +20,9 @@ package org.apache.catalina.valves;
 
 
 import java.io.IOException;
+
 import javax.servlet.ServletException;
+
 import org.apache.catalina.connector.Request;
 import org.apache.catalina.connector.Response;
 

==================================================
Processor.java
index 5784eea571..5c4e2bcaf1 100644
--- a/java/org/apache/catalina/valves/ValveBase.java
+++ b/java/org/apache/catalina/valves/ValveBase.java
@@ -34,8 +34,8 @@ import org.apache.catalina.connector.Response;
 import org.apache.catalina.mbeans.MBeanUtils;
 import org.apache.catalina.util.LifecycleBase;
 import org.apache.catalina.util.LifecycleMBeanBase;
-import org.apache.tomcat.util.res.StringManager;
 import org.apache.juli.logging.Log;
+import org.apache.tomcat.util.res.StringManager;
 
 
 /**

==================================================
Request.java
index 9258f57a9d..35b2567ec0 100644
--- a/java/org/apache/coyote/Processor.java
+++ b/java/org/apache/coyote/Processor.java
@@ -17,8 +17,8 @@
 
 package org.apache.coyote;
 
-import java.io.InputStream;
 import java.io.IOException;
+import java.io.InputStream;
 import java.io.OutputStream;
 
 

==================================================
AjpAprProcessor.java
index f9fdec836e..f90c95fc00 100644
--- a/java/org/apache/coyote/Request.java
+++ b/java/org/apache/coyote/Request.java
@@ -23,11 +23,10 @@ import java.util.HashMap;
 import org.apache.tomcat.util.buf.ByteChunk;
 import org.apache.tomcat.util.buf.MessageBytes;
 import org.apache.tomcat.util.buf.UDecoder;
-
-import org.apache.tomcat.util.http.MimeHeaders;
-import org.apache.tomcat.util.http.Parameters;
 import org.apache.tomcat.util.http.ContentType;
 import org.apache.tomcat.util.http.Cookies;
+import org.apache.tomcat.util.http.MimeHeaders;
+import org.apache.tomcat.util.http.Parameters;
 
 /**
  * This is a low-level, efficient representation of a server request. Most 

==================================================
AjpAprProtocol.java
index b8c773cf9a..8eec76e363 100644
--- a/java/org/apache/coyote/ajp/AjpAprProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpAprProcessor.java
@@ -22,9 +22,9 @@ import java.io.IOException;
 import java.io.InterruptedIOException;
 import java.net.InetAddress;
 import java.nio.ByteBuffer;
-import java.util.concurrent.atomic.AtomicBoolean;
 import java.security.cert.CertificateFactory;
 import java.security.cert.X509Certificate;
+import java.util.concurrent.atomic.AtomicBoolean;
 
 import org.apache.coyote.ActionCode;
 import org.apache.coyote.ActionHook;
@@ -44,9 +44,9 @@ import org.apache.tomcat.util.buf.MessageBytes;
 import org.apache.tomcat.util.http.HttpMessages;
 import org.apache.tomcat.util.http.MimeHeaders;
 import org.apache.tomcat.util.net.AbstractEndpoint;
+import org.apache.tomcat.util.net.AbstractEndpoint.Handler.SocketState;
 import org.apache.tomcat.util.net.AprEndpoint;
 import org.apache.tomcat.util.net.SocketStatus;
-import org.apache.tomcat.util.net.AbstractEndpoint.Handler.SocketState;
 import org.apache.tomcat.util.res.StringManager;
 
 

==================================================
AjpProcessor.java
index cc1410e89c..7c639368fc 100644
--- a/java/org/apache/coyote/ajp/AjpAprProtocol.java
+++ b/java/org/apache/coyote/ajp/AjpAprProtocol.java
@@ -40,8 +40,8 @@ import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.modeler.Registry;
 import org.apache.tomcat.util.net.AprEndpoint;
-import org.apache.tomcat.util.net.SocketStatus;
 import org.apache.tomcat.util.net.AprEndpoint.Handler;
+import org.apache.tomcat.util.net.SocketStatus;
 import org.apache.tomcat.util.res.StringManager;
 
 

==================================================
AjpProtocol.java
index 7ffb1dd97d..2bb7eea418 100644
--- a/java/org/apache/coyote/ajp/AjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpProcessor.java
@@ -44,10 +44,10 @@ import org.apache.tomcat.util.buf.MessageBytes;
 import org.apache.tomcat.util.http.HttpMessages;
 import org.apache.tomcat.util.http.MimeHeaders;
 import org.apache.tomcat.util.net.AbstractEndpoint;
+import org.apache.tomcat.util.net.AbstractEndpoint.Handler.SocketState;
 import org.apache.tomcat.util.net.JIoEndpoint;
 import org.apache.tomcat.util.net.SocketStatus;
 import org.apache.tomcat.util.net.SocketWrapper;
-import org.apache.tomcat.util.net.AbstractEndpoint.Handler.SocketState;
 import org.apache.tomcat.util.res.StringManager;
 
 

==================================================
Http11AprProcessor.java
index 0ea3ebed4d..2304de9ebd 100644
--- a/java/org/apache/coyote/ajp/AjpProtocol.java
+++ b/java/org/apache/coyote/ajp/AjpProtocol.java
@@ -40,11 +40,11 @@ import org.apache.coyote.RequestInfo;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.modeler.Registry;
+import org.apache.tomcat.util.net.AbstractEndpoint.Handler.SocketState;
 import org.apache.tomcat.util.net.JIoEndpoint;
+import org.apache.tomcat.util.net.JIoEndpoint.Handler;
 import org.apache.tomcat.util.net.SocketStatus;
 import org.apache.tomcat.util.net.SocketWrapper;
-import org.apache.tomcat.util.net.AbstractEndpoint.Handler.SocketState;
-import org.apache.tomcat.util.net.JIoEndpoint.Handler;
 import org.apache.tomcat.util.res.StringManager;
 
 

==================================================
Http11AprProtocol.java
index 95b96c4599..d7840a74cd 100644
--- a/java/org/apache/coyote/http11/Http11AprProcessor.java
+++ b/java/org/apache/coyote/http11/Http11AprProcessor.java
@@ -20,18 +20,18 @@ package org.apache.coyote.http11;
 import java.io.ByteArrayInputStream;
 import java.io.IOException;
 import java.io.InterruptedIOException;
-import java.util.Locale;
-import java.util.concurrent.atomic.AtomicBoolean;
 import java.security.cert.CertificateFactory;
 import java.security.cert.X509Certificate;
+import java.util.Locale;
+import java.util.concurrent.atomic.AtomicBoolean;
 
 import org.apache.coyote.ActionCode;
 import org.apache.coyote.ActionHook;
 import org.apache.coyote.Request;
 import org.apache.coyote.RequestInfo;
 import org.apache.coyote.Response;
-import org.apache.coyote.http11.filters.SavedRequestInputFilter;
 import org.apache.coyote.http11.filters.BufferedInputFilter;
+import org.apache.coyote.http11.filters.SavedRequestInputFilter;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.jni.Address;
@@ -45,9 +45,9 @@ import org.apache.tomcat.util.buf.MessageBytes;
 import org.apache.tomcat.util.http.FastHttpDateFormat;
 import org.apache.tomcat.util.http.MimeHeaders;
 import org.apache.tomcat.util.net.AbstractEndpoint;
+import org.apache.tomcat.util.net.AbstractEndpoint.Handler.SocketState;
 import org.apache.tomcat.util.net.AprEndpoint;
 import org.apache.tomcat.util.net.SocketStatus;
-import org.apache.tomcat.util.net.AbstractEndpoint.Handler.SocketState;
 
 
 /**

==================================================
Http11NioProcessor.java
index 835a46377b..b09e86e510 100644
--- a/java/org/apache/coyote/http11/Http11AprProtocol.java
+++ b/java/org/apache/coyote/http11/Http11AprProtocol.java
@@ -40,8 +40,8 @@ import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.modeler.Registry;
 import org.apache.tomcat.util.net.AprEndpoint;
-import org.apache.tomcat.util.net.SocketStatus;
 import org.apache.tomcat.util.net.AprEndpoint.Handler;
+import org.apache.tomcat.util.net.SocketStatus;
 import org.apache.tomcat.util.res.StringManager;
 
 

==================================================
Http11NioProtocol.java
index 7eca737c2e..8421173e83 100644
--- a/java/org/apache/coyote/http11/Http11NioProcessor.java
+++ b/java/org/apache/coyote/http11/Http11NioProcessor.java
@@ -38,12 +38,12 @@ import org.apache.tomcat.util.buf.HexUtils;
 import org.apache.tomcat.util.buf.MessageBytes;
 import org.apache.tomcat.util.http.FastHttpDateFormat;
 import org.apache.tomcat.util.http.MimeHeaders;
+import org.apache.tomcat.util.net.AbstractEndpoint.Handler.SocketState;
 import org.apache.tomcat.util.net.NioChannel;
 import org.apache.tomcat.util.net.NioEndpoint;
+import org.apache.tomcat.util.net.NioEndpoint.KeyAttachment;
 import org.apache.tomcat.util.net.SSLSupport;
 import org.apache.tomcat.util.net.SocketStatus;
-import org.apache.tomcat.util.net.AbstractEndpoint.Handler.SocketState;
-import org.apache.tomcat.util.net.NioEndpoint.KeyAttachment;
 
 
 /**

==================================================
Http11Processor.java
index 2ba1d2abac..364830521a 100644
--- a/java/org/apache/coyote/http11/Http11NioProtocol.java
+++ b/java/org/apache/coyote/http11/Http11NioProtocol.java
@@ -33,9 +33,9 @@ import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.modeler.Registry;
 import org.apache.tomcat.util.net.NioChannel;
 import org.apache.tomcat.util.net.NioEndpoint;
+import org.apache.tomcat.util.net.NioEndpoint.Handler;
 import org.apache.tomcat.util.net.SecureNioChannel;
 import org.apache.tomcat.util.net.SocketStatus;
-import org.apache.tomcat.util.net.NioEndpoint.Handler;
 import org.apache.tomcat.util.net.jsse.JSSEImplementation;
 
 

==================================================
Http11Protocol.java
index 3fdbad0b19..5867177351 100644
--- a/java/org/apache/coyote/http11/Http11Processor.java
+++ b/java/org/apache/coyote/http11/Http11Processor.java
@@ -38,11 +38,11 @@ import org.apache.tomcat.util.buf.HexUtils;
 import org.apache.tomcat.util.buf.MessageBytes;
 import org.apache.tomcat.util.http.FastHttpDateFormat;
 import org.apache.tomcat.util.http.MimeHeaders;
+import org.apache.tomcat.util.net.AbstractEndpoint.Handler.SocketState;
 import org.apache.tomcat.util.net.JIoEndpoint;
 import org.apache.tomcat.util.net.SSLSupport;
 import org.apache.tomcat.util.net.SocketStatus;
 import org.apache.tomcat.util.net.SocketWrapper;
-import org.apache.tomcat.util.net.AbstractEndpoint.Handler.SocketState;
 
 
 /**

==================================================
InputFilter.java
index d394e08307..97a60b86b9 100644
--- a/java/org/apache/coyote/http11/Http11Protocol.java
+++ b/java/org/apache/coyote/http11/Http11Protocol.java
@@ -31,13 +31,13 @@ import org.apache.coyote.RequestGroupInfo;
 import org.apache.coyote.RequestInfo;
 import org.apache.juli.logging.Log;
 import org.apache.tomcat.util.modeler.Registry;
+import org.apache.tomcat.util.net.AbstractEndpoint.Handler.SocketState;
 import org.apache.tomcat.util.net.JIoEndpoint;
+import org.apache.tomcat.util.net.JIoEndpoint.Handler;
 import org.apache.tomcat.util.net.SSLImplementation;
 import org.apache.tomcat.util.net.ServerSocketFactory;
 import org.apache.tomcat.util.net.SocketStatus;
 import org.apache.tomcat.util.net.SocketWrapper;
-import org.apache.tomcat.util.net.AbstractEndpoint.Handler.SocketState;
-import org.apache.tomcat.util.net.JIoEndpoint.Handler;
 
 
 /**

==================================================
InternalAprInputBuffer.java
index 27aa013ab8..c880e9c79a 100644
--- a/java/org/apache/coyote/http11/InputFilter.java
+++ b/java/org/apache/coyote/http11/InputFilter.java
@@ -19,10 +19,9 @@ package org.apache.coyote.http11;
 
 import java.io.IOException;
 
-import org.apache.tomcat.util.buf.ByteChunk;
-
 import org.apache.coyote.InputBuffer;
 import org.apache.coyote.Request;
+import org.apache.tomcat.util.buf.ByteChunk;
 
 /**
  * Input filter interface.

==================================================
InternalAprOutputBuffer.java
index 536f5501f9..fafe13af09 100644
--- a/java/org/apache/coyote/http11/InternalAprInputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalAprInputBuffer.java
@@ -18,19 +18,18 @@
 
 package org.apache.coyote.http11;
 
-import java.io.IOException;
 import java.io.EOFException;
+import java.io.IOException;
 import java.net.SocketTimeoutException;
 import java.nio.ByteBuffer;
 
+import org.apache.coyote.InputBuffer;
+import org.apache.coyote.Request;
 import org.apache.tomcat.jni.Socket;
 import org.apache.tomcat.jni.Status;
 import org.apache.tomcat.util.buf.ByteChunk;
 import org.apache.tomcat.util.buf.MessageBytes;
 
-import org.apache.coyote.InputBuffer;
-import org.apache.coyote.Request;
-
 /**
  * Implementation of InputBuffer which provides HTTP request header parsing as
  * well as transfer decoding.

==================================================
OutputFilter.java
index 3334cbfa2b..10341704d6 100644
--- a/java/org/apache/coyote/http11/InternalAprOutputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalAprOutputBuffer.java
@@ -20,13 +20,12 @@ package org.apache.coyote.http11;
 import java.io.IOException;
 import java.nio.ByteBuffer;
 
-import org.apache.tomcat.jni.Socket;
-import org.apache.tomcat.util.buf.ByteChunk;
-import org.apache.tomcat.util.http.HttpMessages;
-
 import org.apache.coyote.ActionCode;
 import org.apache.coyote.OutputBuffer;
 import org.apache.coyote.Response;
+import org.apache.tomcat.jni.Socket;
+import org.apache.tomcat.util.buf.ByteChunk;
+import org.apache.tomcat.util.http.HttpMessages;
 
 /**
  * Output buffer.

==================================================
BufferedInputFilter.java
index c4efb61ce8..22bcc3e9dc 100644
--- a/java/org/apache/coyote/http11/OutputFilter.java
+++ b/java/org/apache/coyote/http11/OutputFilter.java
@@ -19,10 +19,9 @@ package org.apache.coyote.http11;
 
 import java.io.IOException;
 
-import org.apache.tomcat.util.buf.ByteChunk;
-
 import org.apache.coyote.OutputBuffer;
 import org.apache.coyote.Response;
+import org.apache.tomcat.util.buf.ByteChunk;
 
 /**
  * Output filter.

==================================================
ChunkedInputFilter.java
index 2b6c44c72b..36e212f88c 100644
--- a/java/org/apache/coyote/http11/filters/BufferedInputFilter.java
+++ b/java/org/apache/coyote/http11/filters/BufferedInputFilter.java
@@ -18,8 +18,9 @@
 package org.apache.coyote.http11.filters;
 
 import java.io.IOException;
-import org.apache.coyote.Request;
+
 import org.apache.coyote.InputBuffer;
+import org.apache.coyote.Request;
 import org.apache.coyote.http11.InputFilter;
 import org.apache.tomcat.util.buf.ByteChunk;
 

==================================================
ChunkedOutputFilter.java
index 1e4bfc5daa..17fff66415 100644
--- a/java/org/apache/coyote/http11/filters/ChunkedInputFilter.java
+++ b/java/org/apache/coyote/http11/filters/ChunkedInputFilter.java
@@ -19,13 +19,12 @@ package org.apache.coyote.http11.filters;
 
 import java.io.IOException;
 
-import org.apache.tomcat.util.buf.ByteChunk;
-import org.apache.tomcat.util.buf.HexUtils;
-
 import org.apache.coyote.InputBuffer;
 import org.apache.coyote.Request;
 import org.apache.coyote.http11.Constants;
 import org.apache.coyote.http11.InputFilter;
+import org.apache.tomcat.util.buf.ByteChunk;
+import org.apache.tomcat.util.buf.HexUtils;
 
 /**
  * Chunked input filter. Parses chunked data according to

==================================================
GzipOutputFilter.java
index 650781d690..1bf8f559ea 100644
--- a/java/org/apache/coyote/http11/filters/ChunkedOutputFilter.java
+++ b/java/org/apache/coyote/http11/filters/ChunkedOutputFilter.java
@@ -19,12 +19,11 @@ package org.apache.coyote.http11.filters;
 
 import java.io.IOException;
 
-import org.apache.tomcat.util.buf.ByteChunk;
-import org.apache.tomcat.util.buf.HexUtils;
-
 import org.apache.coyote.OutputBuffer;
 import org.apache.coyote.Response;
 import org.apache.coyote.http11.OutputFilter;
+import org.apache.tomcat.util.buf.ByteChunk;
+import org.apache.tomcat.util.buf.HexUtils;
 
 /**
  * Chunked output filter.

==================================================
IdentityInputFilter.java
index 01873db5a8..c353db76db 100644
--- a/java/org/apache/coyote/http11/filters/GzipOutputFilter.java
+++ b/java/org/apache/coyote/http11/filters/GzipOutputFilter.java
@@ -21,11 +21,10 @@ import java.io.IOException;
 import java.io.OutputStream;
 import java.util.zip.GZIPOutputStream;
 
-import org.apache.tomcat.util.buf.ByteChunk;
-
 import org.apache.coyote.OutputBuffer;
 import org.apache.coyote.Response;
 import org.apache.coyote.http11.OutputFilter;
+import org.apache.tomcat.util.buf.ByteChunk;
 
 /**
  * Gzip output filter.

==================================================
IdentityOutputFilter.java
index 5b13e85e3b..c2753381ed 100644
--- a/java/org/apache/coyote/http11/filters/IdentityInputFilter.java
+++ b/java/org/apache/coyote/http11/filters/IdentityInputFilter.java
@@ -19,11 +19,10 @@ package org.apache.coyote.http11.filters;
 
 import java.io.IOException;
 
-import org.apache.tomcat.util.buf.ByteChunk;
-
 import org.apache.coyote.InputBuffer;
 import org.apache.coyote.Request;
 import org.apache.coyote.http11.InputFilter;
+import org.apache.tomcat.util.buf.ByteChunk;
 
 /**
  * Identity input filter.

==================================================
VoidInputFilter.java
index 6366201c2b..1c3b16f372 100644
--- a/java/org/apache/coyote/http11/filters/IdentityOutputFilter.java
+++ b/java/org/apache/coyote/http11/filters/IdentityOutputFilter.java
@@ -19,11 +19,10 @@ package org.apache.coyote.http11.filters;
 
 import java.io.IOException;
 
-import org.apache.tomcat.util.buf.ByteChunk;
-
 import org.apache.coyote.OutputBuffer;
 import org.apache.coyote.Response;
 import org.apache.coyote.http11.OutputFilter;
+import org.apache.tomcat.util.buf.ByteChunk;
 
 /**
  * Identity output filter.

==================================================
VoidOutputFilter.java
index dec7fe6d48..e6249cd5d8 100644
--- a/java/org/apache/coyote/http11/filters/VoidInputFilter.java
+++ b/java/org/apache/coyote/http11/filters/VoidInputFilter.java
@@ -19,11 +19,10 @@ package org.apache.coyote.http11.filters;
 
 import java.io.IOException;
 
-import org.apache.tomcat.util.buf.ByteChunk;
-
 import org.apache.coyote.InputBuffer;
 import org.apache.coyote.Request;
 import org.apache.coyote.http11.InputFilter;
+import org.apache.tomcat.util.buf.ByteChunk;
 
 /**
  * Void input filter, which returns -1 when attempting a read. Used with a GET,

==================================================
ValueExpressionLiteral.java
index 5a3d3535d9..1febd35eb2 100644
--- a/java/org/apache/coyote/http11/filters/VoidOutputFilter.java
+++ b/java/org/apache/coyote/http11/filters/VoidOutputFilter.java
@@ -19,11 +19,10 @@ package org.apache.coyote.http11.filters;
 
 import java.io.IOException;
 
-import org.apache.tomcat.util.buf.ByteChunk;
-
 import org.apache.coyote.OutputBuffer;
 import org.apache.coyote.Response;
 import org.apache.coyote.http11.OutputFilter;
+import org.apache.tomcat.util.buf.ByteChunk;
 
 /**
  * Void output filter, which silently swallows bytes written. Used with a 204

==================================================
ELParser.java
index 72d88e355f..a05510049d 100644
--- a/java/org/apache/el/ValueExpressionLiteral.java
+++ b/java/org/apache/el/ValueExpressionLiteral.java
@@ -19,12 +19,11 @@ package org.apache.el;
 
 import java.io.Externalizable;
 import java.io.IOException;
-import javax.el.ELContext;
-import javax.el.PropertyNotWritableException;
-
 import java.io.ObjectInput;
 import java.io.ObjectOutput;
 
+import javax.el.ELContext;
+import javax.el.PropertyNotWritableException;
 import javax.el.ValueExpression;
 
 import org.apache.el.lang.ELSupport;

==================================================
ELParserTokenManager.java
index e4e260de41..c594ec0eb3 100644
--- a/java/org/apache/el/parser/ELParser.java
+++ b/java/org/apache/el/parser/ELParser.java
@@ -1,6 +1,7 @@
 /* Generated By:JJTree&JavaCC: Do not edit this line. ELParser.java */
 package org.apache.el.parser;
 import java.io.StringReader;
+
 import javax.el.ELException;
 public class ELParser/*@bgen(jjtree)*/implements ELParserTreeConstants, ELParserConstants {/*@bgen(jjtree)*/
   protected JJTELParserState jjtree = new JJTELParserState();public static Node parse(String ref) throws ELException

==================================================
EmbeddedServletOptions.java
index 8e5c0e583c..92fdae84c3 100644
--- a/java/org/apache/el/parser/ELParserTokenManager.java
+++ b/java/org/apache/el/parser/ELParserTokenManager.java
@@ -1,7 +1,5 @@
 /* Generated By:JJTree&JavaCC: Do not edit this line. ELParserTokenManager.java */
 package org.apache.el.parser;
-import java.io.StringReader;
-import javax.el.ELException;
 
 /** Token Manager. */
 public class ELParserTokenManager implements ELParserConstants

==================================================
JspC.java
index b75c005e8b..72d41d83e3 100644
--- a/java/org/apache/jasper/EmbeddedServletOptions.java
+++ b/java/org/apache/jasper/EmbeddedServletOptions.java
@@ -26,10 +26,10 @@ import javax.servlet.ServletConfig;
 import javax.servlet.ServletContext;
 import javax.servlet.jsp.tagext.TagLibraryInfo;
 
-import org.apache.jasper.compiler.TldLocationsCache;
 import org.apache.jasper.compiler.JspConfig;
-import org.apache.jasper.compiler.TagPluginManager;
 import org.apache.jasper.compiler.Localizer;
+import org.apache.jasper.compiler.TagPluginManager;
+import org.apache.jasper.compiler.TldLocationsCache;
 import org.apache.jasper.xmlparser.ParserUtils;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;

==================================================
Dumper.java
index 7eadb48630..150eb4483b 100644
--- a/java/org/apache/jasper/JspC.java
+++ b/java/org/apache/jasper/JspC.java
@@ -34,11 +34,11 @@ import java.net.MalformedURLException;
 import java.net.URL;
 import java.net.URLClassLoader;
 import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.HashSet;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
-import java.util.HashMap;
 import java.util.Set;
 import java.util.Stack;
 import java.util.StringTokenizer;
@@ -55,7 +55,6 @@ import org.apache.jasper.compiler.TldLocationsCache;
 import org.apache.jasper.servlet.JspCServletContext;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
-
 import org.apache.tools.ant.AntClassLoader;
 import org.apache.tools.ant.Project;
 import org.apache.tools.ant.util.FileUtils;

==================================================
ELNode.java
index 197bdcf6b7..beb55fc8b9 100644
--- a/java/org/apache/jasper/compiler/Dumper.java
+++ b/java/org/apache/jasper/compiler/Dumper.java
@@ -17,8 +17,8 @@
 
 package org.apache.jasper.compiler;
 
-import org.xml.sax.Attributes;
 import org.apache.jasper.JasperException;
+import org.xml.sax.Attributes;
 
 class Dumper {
 

==================================================
Generator.java
index 1ec4aca507..caf4011d72 100644
--- a/java/org/apache/jasper/compiler/ELNode.java
+++ b/java/org/apache/jasper/compiler/ELNode.java
@@ -22,6 +22,7 @@ import java.util.Iterator;
 import java.util.List;
 
 import javax.servlet.jsp.tagext.FunctionInfo;
+
 import org.apache.jasper.JasperException;
 
 /**

==================================================
JspDocumentParser.java
index 0d8ea733f4..b384777154 100644
--- a/java/org/apache/jasper/compiler/Generator.java
+++ b/java/org/apache/jasper/compiler/Generator.java
@@ -27,8 +27,8 @@ import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collections;
 import java.util.Enumeration;
-import java.util.Hashtable;
 import java.util.HashMap;
+import java.util.Hashtable;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Set;

==================================================
Mark.java
index 15b0fbfd4f..6b88cf7893 100644
--- a/java/org/apache/jasper/compiler/JspDocumentParser.java
+++ b/java/org/apache/jasper/compiler/JspDocumentParser.java
@@ -20,7 +20,6 @@ import java.io.CharArrayWriter;
 import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.io.InputStream;
-
 import java.util.Iterator;
 import java.util.List;
 import java.util.jar.JarFile;

==================================================
Node.java
index 3b8afc08ba..5cf66537b6 100644
--- a/java/org/apache/jasper/compiler/Mark.java
+++ b/java/org/apache/jasper/compiler/Mark.java
@@ -16,9 +16,10 @@
  */
 package org.apache.jasper.compiler;
 
-import java.util.Stack;
-import java.net.URL;
 import java.net.MalformedURLException;
+import java.net.URL;
+import java.util.Stack;
+
 import org.apache.jasper.JspCompilationContext;
 
 /**

==================================================
PageDataImpl.java
index d9327ccf2b..7ce8376b16 100644
--- a/java/org/apache/jasper/compiler/Node.java
+++ b/java/org/apache/jasper/compiler/Node.java
@@ -17,10 +17,10 @@
 
 package org.apache.jasper.compiler;
 
+import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Vector;
-import java.util.ArrayList;
 
 import javax.el.ELContext;
 import javax.el.ELException;

==================================================
PageInfo.java
index dfb72fb0d1..14592eeea5 100644
--- a/java/org/apache/jasper/compiler/PageDataImpl.java
+++ b/java/org/apache/jasper/compiler/PageDataImpl.java
@@ -16,15 +16,17 @@
  */
 package org.apache.jasper.compiler;
 
-import java.io.InputStream;
 import java.io.ByteArrayInputStream;
 import java.io.CharArrayWriter;
+import java.io.InputStream;
 import java.io.UnsupportedEncodingException;
 import java.util.ListIterator;
+
 import javax.servlet.jsp.tagext.PageData;
+
+import org.apache.jasper.JasperException;
 import org.xml.sax.Attributes;
 import org.xml.sax.helpers.AttributesImpl;
-import org.apache.jasper.JasperException;
 
 /**
  * An implementation of <tt>javax.servlet.jsp.tagext.PageData</tt> which

==================================================
SmapGenerator.java
index c2b4a308e2..f4274ba72a 100644
--- a/java/org/apache/jasper/compiler/PageInfo.java
+++ b/java/org/apache/jasper/compiler/PageInfo.java
@@ -24,12 +24,12 @@ import java.util.List;
 import java.util.Set;
 import java.util.Vector;
 
-import org.apache.jasper.Constants;
-import org.apache.jasper.JasperException;
-
 import javax.el.ExpressionFactory;
 import javax.servlet.jsp.tagext.TagLibraryInfo;
 
+import org.apache.jasper.Constants;
+import org.apache.jasper.JasperException;
+
 /**
  * A repository for various info about the translation unit under compilation.
  *

==================================================
SmapStratum.java
index 47746ae4c4..97d4f3912b 100644
--- a/java/org/apache/jasper/compiler/SmapGenerator.java
+++ b/java/org/apache/jasper/compiler/SmapGenerator.java
@@ -17,8 +17,8 @@
 
 package org.apache.jasper.compiler;
 
-import java.util.List;
 import java.util.ArrayList;
+import java.util.List;
 
 /**
  * Represents a source map (SMAP), which serves to associate lines

==================================================
TagFileProcessor.java
index 9b1fc09fbe..a737c02e3e 100644
--- a/java/org/apache/jasper/compiler/SmapStratum.java
+++ b/java/org/apache/jasper/compiler/SmapStratum.java
@@ -17,8 +17,8 @@
 
 package org.apache.jasper.compiler;
 
-import java.util.List;
 import java.util.ArrayList;
+import java.util.List;
 
 /**
  * Represents the line and file mappings associated with a JSR-045

==================================================
TagPluginManager.java
index 9b72624928..cd39877f94 100644
--- a/java/org/apache/jasper/compiler/TagFileProcessor.java
+++ b/java/org/apache/jasper/compiler/TagFileProcessor.java
@@ -19,9 +19,9 @@ package org.apache.jasper.compiler;
 
 import java.io.FileNotFoundException;
 import java.io.IOException;
+import java.util.HashMap;
 import java.util.Iterator;
 import java.util.Vector;
-import java.util.HashMap;
 
 import javax.el.MethodExpression;
 import javax.el.ValueExpression;
@@ -35,8 +35,8 @@ import javax.servlet.jsp.tagext.VariableInfo;
 
 import org.apache.jasper.JasperException;
 import org.apache.jasper.JspCompilationContext;
-import org.apache.jasper.servlet.JspServletWrapper;
 import org.apache.jasper.runtime.JspSourceDependent;
+import org.apache.jasper.servlet.JspServletWrapper;
 
 /**
  * 1. Processes and extracts the directive info in a tag file. 2. Compiles and

==================================================
TldLocationsCache.java
index d0e35fe3d4..dc86a8b81a 100644
--- a/java/org/apache/jasper/compiler/TagPluginManager.java
+++ b/java/org/apache/jasper/compiler/TagPluginManager.java
@@ -24,10 +24,10 @@ import java.util.Iterator;
 import javax.servlet.ServletContext;
 
 import org.apache.jasper.JasperException;
-import org.apache.jasper.xmlparser.ParserUtils;
-import org.apache.jasper.xmlparser.TreeNode;
 import org.apache.jasper.compiler.tagplugin.TagPlugin;
 import org.apache.jasper.compiler.tagplugin.TagPluginContext;
+import org.apache.jasper.xmlparser.ParserUtils;
+import org.apache.jasper.xmlparser.TreeNode;
 
 /**
  * Manages tag plugin optimizations.

==================================================
ProtectedFunctionMapper.java
index e4ba86cc01..0af0c8ad57 100644
--- a/java/org/apache/jasper/compiler/TldLocationsCache.java
+++ b/java/org/apache/jasper/compiler/TldLocationsCache.java
@@ -23,8 +23,8 @@ import java.io.IOException;
 import java.io.InputStream;
 import java.net.JarURLConnection;
 import java.util.Enumeration;
-import java.util.Hashtable;
 import java.util.HashSet;
+import java.util.Hashtable;
 import java.util.Iterator;
 import java.util.Set;
 import java.util.StringTokenizer;

==================================================
JspCServletContext.java
index 02d1713abf..d85fea2605 100644
--- a/java/org/apache/jasper/runtime/ProtectedFunctionMapper.java
+++ b/java/org/apache/jasper/runtime/ProtectedFunctionMapper.java
@@ -17,12 +17,13 @@
 
 package org.apache.jasper.runtime;
 
-import java.util.HashMap;
+import java.lang.reflect.Method;
 import java.security.AccessController;
 import java.security.PrivilegedAction;
-import java.security.PrivilegedExceptionAction;
 import java.security.PrivilegedActionException;
-import java.lang.reflect.Method;
+import java.security.PrivilegedExceptionAction;
+import java.util.HashMap;
+
 import javax.servlet.jsp.el.FunctionMapper;
 
 import org.apache.jasper.security.SecurityUtil;

==================================================
JspServlet.java
index 1e9c77c7d8..ea6e1a6825 100644
--- a/java/org/apache/jasper/servlet/JspCServletContext.java
+++ b/java/org/apache/jasper/servlet/JspCServletContext.java
@@ -34,6 +34,7 @@ import java.util.Vector;
 
 import javax.servlet.Filter;
 import javax.servlet.FilterRegistration;
+import javax.servlet.FilterRegistration.Dynamic;
 import javax.servlet.RequestDispatcher;
 import javax.servlet.Servlet;
 import javax.servlet.ServletContext;
@@ -41,7 +42,6 @@ import javax.servlet.ServletException;
 import javax.servlet.ServletRegistration;
 import javax.servlet.SessionCookieConfig;
 import javax.servlet.SessionTrackingMode;
-import javax.servlet.FilterRegistration.Dynamic;
 import javax.servlet.descriptor.JspConfigDescriptor;
 
 import org.apache.jasper.util.ExceptionUtils;

==================================================
Util.java
index 7c5b696ae3..969b5e1b3d 100644
--- a/java/org/apache/jasper/servlet/JspServlet.java
+++ b/java/org/apache/jasper/servlet/JspServlet.java
@@ -28,7 +28,6 @@ import javax.servlet.http.HttpServlet;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
 
-
 import org.apache.jasper.Constants;
 import org.apache.jasper.EmbeddedServletOptions;
 import org.apache.jasper.Options;

==================================================
Enumerator.java
index 4b034e2d81..a593fc6cdb 100644
--- a/java/org/apache/jasper/tagplugins/jstl/Util.java
+++ b/java/org/apache/jasper/tagplugins/jstl/Util.java
@@ -18,8 +18,6 @@
 
 package org.apache.jasper.tagplugins.jstl;
 
-import org.apache.jasper.Constants;
-
 import java.io.ByteArrayOutputStream;
 import java.io.IOException;
 import java.io.PrintWriter;
@@ -35,6 +33,8 @@ import javax.servlet.jsp.JspException;
 import javax.servlet.jsp.JspTagException;
 import javax.servlet.jsp.PageContext;
 
+import org.apache.jasper.Constants;
+
 /**
  * Util contains some often used consts, static methods and embedded class
  * to support the JSTL tag plugin.

==================================================
ASCIIReader.java
index 8f8e1e63e3..689cca9954 100644
--- a/java/org/apache/jasper/util/Enumerator.java
+++ b/java/org/apache/jasper/util/Enumerator.java
@@ -19,11 +19,11 @@
 package org.apache.jasper.util;
 
 
+import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Enumeration;
 import java.util.Iterator;
 import java.util.List;
-import java.util.ArrayList;
 import java.util.Map;
 import java.util.NoSuchElementException;
 

==================================================
TreeNode.java
index acb4c14af6..5ca1b492f9 100644
--- a/java/org/apache/jasper/xmlparser/ASCIIReader.java
+++ b/java/org/apache/jasper/xmlparser/ASCIIReader.java
@@ -17,9 +17,10 @@
 
 package org.apache.jasper.xmlparser;
 
-import java.io.InputStream;
 import java.io.IOException;
+import java.io.InputStream;
 import java.io.Reader;
+
 import org.apache.jasper.compiler.Localizer;
 
 /**

==================================================
UCSReader.java
index bb092fb041..6a71b69756 100644
--- a/java/org/apache/jasper/xmlparser/TreeNode.java
+++ b/java/org/apache/jasper/xmlparser/TreeNode.java
@@ -20,8 +20,8 @@ package org.apache.jasper.xmlparser;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.HashMap;
-import java.util.List;
 import java.util.Iterator;
+import java.util.List;
 
 
 /**

==================================================
UTF8Reader.java
index 2f483aa66a..bba4d12b82 100644
--- a/java/org/apache/jasper/xmlparser/UCSReader.java
+++ b/java/org/apache/jasper/xmlparser/UCSReader.java
@@ -17,8 +17,8 @@
 
 package org.apache.jasper.xmlparser;
 
-import java.io.InputStream;
 import java.io.IOException;
+import java.io.InputStream;
 import java.io.Reader;
 
 /** 

==================================================
XMLEncodingDetector.java
index 30e7415095..a09b60fb1c 100644
--- a/java/org/apache/jasper/xmlparser/UTF8Reader.java
+++ b/java/org/apache/jasper/xmlparser/UTF8Reader.java
@@ -17,10 +17,11 @@
 
 package org.apache.jasper.xmlparser;
 
-import java.io.InputStream;
 import java.io.IOException;
+import java.io.InputStream;
 import java.io.Reader;
 import java.io.UTFDataFormatException;
+
 import org.apache.jasper.compiler.Localizer;
 
 /**

==================================================
ContextBindings.java
index 0875348d8c..35c37b892b 100644
--- a/java/org/apache/jasper/xmlparser/XMLEncodingDetector.java
+++ b/java/org/apache/jasper/xmlparser/XMLEncodingDetector.java
@@ -26,9 +26,9 @@
 package org.apache.jasper.xmlparser;
 
 import java.io.EOFException;
+import java.io.IOException;
 import java.io.InputStream;
 import java.io.InputStreamReader;
-import java.io.IOException;
 import java.io.Reader;
 import java.util.Locale;
 import java.util.jar.JarFile;

==================================================
NameParserImpl.java
index d94d05653a..57af5de818 100644
--- a/java/org/apache/naming/ContextBindings.java
+++ b/java/org/apache/naming/ContextBindings.java
@@ -19,8 +19,9 @@
 package org.apache.naming;
 
 import java.util.Hashtable;
-import javax.naming.NamingException;
+
 import javax.naming.Context;
+import javax.naming.NamingException;
 
 /**
  * Handles the associations :

==================================================
NamingContext.java
index 377f05b355..6e8220d990 100644
--- a/java/org/apache/naming/NameParserImpl.java
+++ b/java/org/apache/naming/NameParserImpl.java
@@ -18,10 +18,10 @@
 
 package org.apache.naming;
 
-import javax.naming.NameParser;
+import javax.naming.CompositeName;
 import javax.naming.Name;
+import javax.naming.NameParser;
 import javax.naming.NamingException;
-import javax.naming.CompositeName;
 
 /**
  * Parses names.

==================================================
NamingService.java
index 63f9cc1f56..96315f08b1 100644
--- a/java/org/apache/naming/NamingContext.java
+++ b/java/org/apache/naming/NamingContext.java
@@ -18,26 +18,27 @@
 
 package org.apache.naming;
 
+import java.util.Enumeration;
 import java.util.HashMap;
 import java.util.Hashtable;
-import java.util.Enumeration;
 
 import javax.naming.Binding;
+import javax.naming.CompositeName;
 import javax.naming.Context;
-import javax.naming.Name;
+import javax.naming.InitialContext;
 import javax.naming.LinkRef;
-import javax.naming.CompositeName;
+import javax.naming.Name;
+import javax.naming.NameAlreadyBoundException;
 import javax.naming.NameClassPair;
+import javax.naming.NameNotFoundException;
 import javax.naming.NameParser;
-import javax.naming.Referenceable;
-import javax.naming.Reference;
 import javax.naming.NamingEnumeration;
 import javax.naming.NamingException;
-import javax.naming.NameAlreadyBoundException;
-import javax.naming.NameNotFoundException;
 import javax.naming.NotContextException;
-import javax.naming.InitialContext;
 import javax.naming.OperationNotSupportedException;
+import javax.naming.Reference;
+import javax.naming.Referenceable;
+import javax.naming.directory.InvalidAttributesException;
 import javax.naming.spi.NamingManager;
 
 /**

==================================================
SelectorContext.java
index b26911a20e..f995bb22ed 100644
--- a/java/org/apache/naming/NamingService.java
+++ b/java/org/apache/naming/NamingService.java
@@ -17,13 +17,13 @@
 
 package org.apache.naming;
 
-import javax.naming.Context;
-import javax.management.NotificationBroadcasterSupport;
-import javax.management.ObjectName;
-import javax.management.MBeanServer;
-import javax.management.MBeanRegistration;
 import javax.management.AttributeChangeNotification;
+import javax.management.MBeanRegistration;
+import javax.management.MBeanServer;
 import javax.management.Notification;
+import javax.management.NotificationBroadcasterSupport;
+import javax.management.ObjectName;
+import javax.naming.Context;
 
 /**
  * Implementation of the NamingService JMX MBean.

==================================================
BeanFactory.java
index 140a175762..4ef95bc39f 100644
--- a/java/org/apache/naming/SelectorContext.java
+++ b/java/org/apache/naming/SelectorContext.java
@@ -23,10 +23,15 @@ import java.util.Hashtable;
 import javax.naming.Binding;
 import javax.naming.Context;
 import javax.naming.Name;
+import javax.naming.NameAlreadyBoundException;
 import javax.naming.NameClassPair;
+import javax.naming.NameNotFoundException;
 import javax.naming.NameParser;
 import javax.naming.NamingEnumeration;
 import javax.naming.NamingException;
+import javax.naming.NotContextException;
+import javax.naming.OperationNotSupportedException;
+import javax.naming.directory.InvalidAttributesException;
 
 /**
  * Catalina JNDI Context implementation.

==================================================
EjbFactory.java
index b05c3f2bd6..8df8bb5f2b 100644
--- a/java/org/apache/naming/factory/BeanFactory.java
+++ b/java/org/apache/naming/factory/BeanFactory.java
@@ -17,21 +17,21 @@
 
 package org.apache.naming.factory;
 
-import java.util.Hashtable;
+import java.beans.BeanInfo;
+import java.beans.Introspector;
+import java.beans.PropertyDescriptor;
+import java.lang.reflect.Method;
 import java.util.Enumeration;
-import javax.naming.Name;
+import java.util.Hashtable;
+
 import javax.naming.Context;
+import javax.naming.Name;
 import javax.naming.NamingException;
-import javax.naming.Reference;
 import javax.naming.RefAddr;
+import javax.naming.Reference;
 import javax.naming.spi.ObjectFactory;
-import org.apache.naming.ResourceRef;
 
-import java.beans.Introspector;
-import java.beans.BeanInfo;
-import java.beans.PropertyDescriptor;
-
-import java.lang.reflect.Method;
+import org.apache.naming.ResourceRef;
 
 /**
  * Object factory for any Resource conforming to the JavaBean spec.

==================================================
MailSessionFactory.java
index 5e02a60dda..aec9497ca9 100644
--- a/java/org/apache/naming/factory/EjbFactory.java
+++ b/java/org/apache/naming/factory/EjbFactory.java
@@ -19,13 +19,15 @@
 package org.apache.naming.factory;
 
 import java.util.Hashtable;
-import javax.naming.Name;
+
 import javax.naming.Context;
 import javax.naming.InitialContext;
+import javax.naming.Name;
 import javax.naming.NamingException;
-import javax.naming.Reference;
 import javax.naming.RefAddr;
+import javax.naming.Reference;
 import javax.naming.spi.ObjectFactory;
+
 import org.apache.naming.EjbRef;
 
 /**

==================================================
OpenEjbFactory.java
index 69289bc65b..8df4240ebb 100644
--- a/java/org/apache/naming/factory/MailSessionFactory.java
+++ b/java/org/apache/naming/factory/MailSessionFactory.java
@@ -22,11 +22,12 @@ import java.security.PrivilegedAction;
 import java.util.Enumeration;
 import java.util.Hashtable;
 import java.util.Properties;
+
 import javax.mail.Authenticator;
 import javax.mail.PasswordAuthentication;
 import javax.mail.Session;
-import javax.naming.Name;
 import javax.naming.Context;
+import javax.naming.Name;
 import javax.naming.RefAddr;
 import javax.naming.Reference;
 import javax.naming.spi.ObjectFactory;

==================================================
ResourceEnvFactory.java
index f722c78b14..dc02894a5a 100644
--- a/java/org/apache/naming/factory/OpenEjbFactory.java
+++ b/java/org/apache/naming/factory/OpenEjbFactory.java
@@ -18,16 +18,17 @@
 
 package org.apache.naming.factory;
 
-import org.apache.naming.EjbRef;
+import java.util.Hashtable;
+import java.util.Properties;
 
 import javax.naming.Context;
 import javax.naming.InitialContext;
 import javax.naming.Name;
-import javax.naming.Reference;
 import javax.naming.RefAddr;
+import javax.naming.Reference;
 import javax.naming.spi.ObjectFactory;
-import java.util.Hashtable;
-import java.util.Properties;
+
+import org.apache.naming.EjbRef;
 
 /**
  * Object factory for EJBs.

==================================================
ResourceFactory.java
index b28fe4da4b..036c2ba1ce 100644
--- a/java/org/apache/naming/factory/ResourceEnvFactory.java
+++ b/java/org/apache/naming/factory/ResourceEnvFactory.java
@@ -19,12 +19,14 @@
 package org.apache.naming.factory;
 
 import java.util.Hashtable;
-import javax.naming.Name;
+
 import javax.naming.Context;
+import javax.naming.Name;
 import javax.naming.NamingException;
-import javax.naming.Reference;
 import javax.naming.RefAddr;
+import javax.naming.Reference;
 import javax.naming.spi.ObjectFactory;
+
 import org.apache.naming.ResourceEnvRef;
 
 /**

==================================================
SendMailFactory.java
index 1ce1c8acb3..d3f496766c 100644
--- a/java/org/apache/naming/factory/ResourceFactory.java
+++ b/java/org/apache/naming/factory/ResourceFactory.java
@@ -19,12 +19,14 @@
 package org.apache.naming.factory;
 
 import java.util.Hashtable;
-import javax.naming.Name;
+
 import javax.naming.Context;
+import javax.naming.Name;
 import javax.naming.NamingException;
-import javax.naming.Reference;
 import javax.naming.RefAddr;
+import javax.naming.Reference;
 import javax.naming.spi.ObjectFactory;
+
 import org.apache.naming.ResourceRef;
 
 /**

==================================================
TransactionFactory.java
index 3f57441f51..43554cb7c6 100644
--- a/java/org/apache/naming/factory/SendMailFactory.java
+++ b/java/org/apache/naming/factory/SendMailFactory.java
@@ -19,18 +19,19 @@ package org.apache.naming.factory;
 
 import java.security.AccessController;
 import java.security.PrivilegedAction;
+import java.util.Enumeration;
 import java.util.Hashtable;
 import java.util.Properties;
-import java.util.Enumeration;
+
 import javax.mail.Session;
 import javax.mail.internet.InternetAddress;
 import javax.mail.internet.MimeMessage;
 import javax.mail.internet.MimePart;
 import javax.mail.internet.MimePartDataSource;
-import javax.naming.Name;
 import javax.naming.Context;
-import javax.naming.Reference;
+import javax.naming.Name;
 import javax.naming.RefAddr;
+import javax.naming.Reference;
 import javax.naming.spi.ObjectFactory;
 
 /**

==================================================
ServiceRefFactory.java
index a9e1f73181..95b80aef81 100644
--- a/java/org/apache/naming/factory/TransactionFactory.java
+++ b/java/org/apache/naming/factory/TransactionFactory.java
@@ -19,12 +19,14 @@
 package org.apache.naming.factory;
 
 import java.util.Hashtable;
-import javax.naming.Name;
+
 import javax.naming.Context;
+import javax.naming.Name;
 import javax.naming.NamingException;
-import javax.naming.Reference;
 import javax.naming.RefAddr;
+import javax.naming.Reference;
 import javax.naming.spi.ObjectFactory;
+
 import org.apache.naming.TransactionRef;
 
 /**

==================================================
javaURLContextFactory.java
index 526c1049c4..c43a04df60 100644
--- a/java/org/apache/naming/factory/webservices/ServiceRefFactory.java
+++ b/java/org/apache/naming/factory/webservices/ServiceRefFactory.java
@@ -19,38 +19,36 @@
 
 package org.apache.naming.factory.webservices;
 
-import java.net.URL;
 import java.lang.reflect.Method;
 import java.lang.reflect.Proxy;
+import java.net.URL;
 import java.util.ArrayList;
 import java.util.Enumeration;
-import java.util.Properties;
 import java.util.Hashtable;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
+import java.util.Properties;
 
 import javax.naming.Context;
 import javax.naming.Name;
 import javax.naming.NamingException;
-import javax.naming.spi.ObjectFactory;
-import javax.naming.Reference;
 import javax.naming.RefAddr;
-
+import javax.naming.Reference;
+import javax.naming.spi.ObjectFactory;
 import javax.wsdl.Definition;
 import javax.wsdl.Port;
 import javax.wsdl.extensions.ExtensibilityElement;
 import javax.wsdl.extensions.soap.SOAPAddress;
 import javax.wsdl.factory.WSDLFactory;
 import javax.wsdl.xml.WSDLReader;
-
 import javax.xml.namespace.QName;
+import javax.xml.rpc.Service;
+import javax.xml.rpc.ServiceFactory;
 import javax.xml.rpc.handler.Handler;
 import javax.xml.rpc.handler.HandlerChain;
 import javax.xml.rpc.handler.HandlerInfo;
 import javax.xml.rpc.handler.HandlerRegistry;
-import javax.xml.rpc.Service;
-import javax.xml.rpc.ServiceFactory;
 
 import org.apache.naming.HandlerRef;
 import org.apache.naming.ServiceRef;

==================================================
BaseDirContext.java
index 7ddfc94686..c804b99400 100644
--- a/java/org/apache/naming/java/javaURLContextFactory.java
+++ b/java/org/apache/naming/java/javaURLContextFactory.java
@@ -19,14 +19,16 @@
 package org.apache.naming.java;
 
 import java.util.Hashtable;
-import javax.naming.Name;
+
 import javax.naming.Context;
+import javax.naming.Name;
 import javax.naming.NamingException;
-import javax.naming.spi.ObjectFactory;
 import javax.naming.spi.InitialContextFactory;
-import org.apache.naming.SelectorContext;
-import org.apache.naming.NamingContext;
+import javax.naming.spi.ObjectFactory;
+
 import org.apache.naming.ContextBindings;
+import org.apache.naming.NamingContext;
+import org.apache.naming.SelectorContext;
 
 /**
  * Context factory for the "java:" namespace.

==================================================
FileDirContext.java
index 88dc0a43a7..5ef40ff4bb 100644
--- a/java/org/apache/naming/resources/BaseDirContext.java
+++ b/java/org/apache/naming/resources/BaseDirContext.java
@@ -35,13 +35,20 @@ import java.util.zip.ZipEntry;
 import javax.naming.Binding;
 import javax.naming.Context;
 import javax.naming.Name;
+import javax.naming.NameAlreadyBoundException;
 import javax.naming.NameClassPair;
 import javax.naming.NameNotFoundException;
 import javax.naming.NameParser;
 import javax.naming.NamingEnumeration;
 import javax.naming.NamingException;
+import javax.naming.NotContextException;
+import javax.naming.OperationNotSupportedException;
+import javax.naming.directory.AttributeModificationException;
 import javax.naming.directory.Attributes;
 import javax.naming.directory.DirContext;
+import javax.naming.directory.InvalidAttributesException;
+import javax.naming.directory.InvalidSearchControlsException;
+import javax.naming.directory.InvalidSearchFilterException;
 import javax.naming.directory.ModificationItem;
 import javax.naming.directory.SearchControls;
 import javax.naming.directory.SearchResult;

==================================================
ProxyDirContext.java
index b69490871a..8981880f24 100644
--- a/java/org/apache/naming/resources/FileDirContext.java
+++ b/java/org/apache/naming/resources/FileDirContext.java
@@ -34,9 +34,14 @@ import javax.naming.NameClassPair;
 import javax.naming.NameNotFoundException;
 import javax.naming.NamingEnumeration;
 import javax.naming.NamingException;
+import javax.naming.NotContextException;
 import javax.naming.OperationNotSupportedException;
+import javax.naming.directory.AttributeModificationException;
 import javax.naming.directory.Attributes;
 import javax.naming.directory.DirContext;
+import javax.naming.directory.InvalidAttributesException;
+import javax.naming.directory.InvalidSearchControlsException;
+import javax.naming.directory.InvalidSearchFilterException;
 import javax.naming.directory.ModificationItem;
 import javax.naming.directory.SearchControls;
 import javax.naming.directory.SearchResult;

==================================================
Resource.java
index 3c9339fe23..7002013045 100644
--- a/java/org/apache/naming/resources/ProxyDirContext.java
+++ b/java/org/apache/naming/resources/ProxyDirContext.java
@@ -26,13 +26,20 @@ import java.util.Hashtable;
 import javax.naming.Binding;
 import javax.naming.Context;
 import javax.naming.Name;
+import javax.naming.NameAlreadyBoundException;
 import javax.naming.NameClassPair;
 import javax.naming.NameNotFoundException;
 import javax.naming.NameParser;
 import javax.naming.NamingEnumeration;
 import javax.naming.NamingException;
+import javax.naming.NotContextException;
+import javax.naming.OperationNotSupportedException;
+import javax.naming.directory.AttributeModificationException;
 import javax.naming.directory.Attributes;
 import javax.naming.directory.DirContext;
+import javax.naming.directory.InvalidAttributesException;
+import javax.naming.directory.InvalidSearchControlsException;
+import javax.naming.directory.InvalidSearchFilterException;
 import javax.naming.directory.ModificationItem;
 import javax.naming.directory.SearchControls;
 import javax.naming.directory.SearchResult;

==================================================
WARDirContext.java
index 4a6cec51ce..bdf321eddd 100644
--- a/java/org/apache/naming/resources/Resource.java
+++ b/java/org/apache/naming/resources/Resource.java
@@ -17,9 +17,9 @@
 
 package org.apache.naming.resources;
 
-import java.io.InputStream;
 import java.io.ByteArrayInputStream;
 import java.io.IOException;
+import java.io.InputStream;
 
 /**
  * Encapsulates the contents of a resource.

==================================================
Txt2Html.java
index b4e801c514..99bbdcdae3 100644
--- a/java/org/apache/naming/resources/WARDirContext.java
+++ b/java/org/apache/naming/resources/WARDirContext.java
@@ -34,13 +34,19 @@ import javax.naming.Binding;
 import javax.naming.CompositeName;
 import javax.naming.InvalidNameException;
 import javax.naming.Name;
+import javax.naming.NameAlreadyBoundException;
 import javax.naming.NameClassPair;
 import javax.naming.NameNotFoundException;
 import javax.naming.NamingEnumeration;
 import javax.naming.NamingException;
+import javax.naming.NotContextException;
 import javax.naming.OperationNotSupportedException;
+import javax.naming.directory.AttributeModificationException;
 import javax.naming.directory.Attributes;
 import javax.naming.directory.DirContext;
+import javax.naming.directory.InvalidAttributesException;
+import javax.naming.directory.InvalidSearchControlsException;
+import javax.naming.directory.InvalidSearchFilterException;
 import javax.naming.directory.ModificationItem;
 import javax.naming.directory.SearchControls;
 import javax.naming.directory.SearchResult;

==================================================
AnnotationDefault.java
index 0765fc3904..6f814307e4 100644
--- a/java/org/apache/tomcat/buildutil/Txt2Html.java
+++ b/java/org/apache/tomcat/buildutil/Txt2Html.java
@@ -26,6 +26,7 @@ import java.io.PrintWriter;
 import java.util.Iterator;
 import java.util.LinkedList;
 import java.util.List;
+
 import org.apache.tools.ant.BuildException;
 import org.apache.tools.ant.DirectoryScanner;
 import org.apache.tools.ant.Project;

==================================================
ClassElementValue.java
index b6d44614ed..b752ad0241 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/AnnotationDefault.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/AnnotationDefault.java
@@ -20,6 +20,7 @@ package org.apache.tomcat.util.bcel.classfile;
 import java.io.DataInputStream;
 import java.io.DataOutputStream;
 import java.io.IOException;
+
 import org.apache.tomcat.util.bcel.Constants;
 
 /**

==================================================
Code.java
index 1ede032d15..3449592797 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ClassElementValue.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ClassElementValue.java
@@ -19,6 +19,7 @@ package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataOutputStream;
 import java.io.IOException;
+
 import org.apache.tomcat.util.bcel.Constants;
 
 public class ClassElementValue extends ElementValue

==================================================
Constant.java
index 777baf26a1..ed3a43bb37 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Code.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Code.java
@@ -20,6 +20,7 @@ package org.apache.tomcat.util.bcel.classfile;
 import java.io.DataInputStream;
 import java.io.DataOutputStream;
 import java.io.IOException;
+
 import org.apache.tomcat.util.bcel.Constants;
 
 /** 

==================================================
ConstantFieldref.java
index 839afc4635..dd9282ce72 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Constant.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Constant.java
@@ -21,6 +21,7 @@ import java.io.DataInputStream;
 import java.io.DataOutputStream;
 import java.io.IOException;
 import java.io.Serializable;
+
 import org.apache.tomcat.util.bcel.Constants;
 import org.apache.tomcat.util.bcel.util.BCELComparator;
 

==================================================
ConstantInterfaceMethodref.java
index d9f0ff30a0..76b918cd34 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantFieldref.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ConstantFieldref.java
@@ -19,6 +19,7 @@ package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInputStream;
 import java.io.IOException;
+
 import org.apache.tomcat.util.bcel.Constants;
 
 /** 

==================================================
ConstantMethodref.java
index bb05fa5ad2..75d1b6c451 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantInterfaceMethodref.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ConstantInterfaceMethodref.java
@@ -19,6 +19,7 @@ package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInputStream;
 import java.io.IOException;
+
 import org.apache.tomcat.util.bcel.Constants;
 
 /** 

==================================================
ConstantPool.java
index ad7b04b8ce..6b16d73464 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantMethodref.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ConstantMethodref.java
@@ -19,6 +19,7 @@ package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInputStream;
 import java.io.IOException;
+
 import org.apache.tomcat.util.bcel.Constants;
 
 /** 

==================================================
Deprecated.java
index 5e4e302883..774a868165 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ConstantPool.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ConstantPool.java
@@ -20,6 +20,7 @@ package org.apache.tomcat.util.bcel.classfile;
 import java.io.DataInputStream;
 import java.io.IOException;
 import java.io.Serializable;
+
 import org.apache.tomcat.util.bcel.Constants;
 
 /**

==================================================
ElementValuePair.java
index 90302417fe..1e807c9b83 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Deprecated.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Deprecated.java
@@ -20,6 +20,7 @@ package org.apache.tomcat.util.bcel.classfile;
 import java.io.DataInputStream;
 import java.io.DataOutputStream;
 import java.io.IOException;
+
 import org.apache.tomcat.util.bcel.Constants;
 
 /**

==================================================
EnumElementValue.java
index 18a4d045ad..f9a3a95bff 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ElementValuePair.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ElementValuePair.java
@@ -19,6 +19,7 @@ package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataOutputStream;
 import java.io.IOException;
+
 import org.apache.tomcat.util.bcel.Constants;
 
 /**

==================================================
ExceptionTable.java
index f437d30959..697ef6d41d 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/EnumElementValue.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/EnumElementValue.java
@@ -19,6 +19,7 @@ package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataOutputStream;
 import java.io.IOException;
+
 import org.apache.tomcat.util.bcel.Constants;
 
 public class EnumElementValue extends ElementValue

==================================================
Field.java
index 3606c6e7f4..1a9d60e33a 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ExceptionTable.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ExceptionTable.java
@@ -20,6 +20,7 @@ package org.apache.tomcat.util.bcel.classfile;
 import java.io.DataInputStream;
 import java.io.DataOutputStream;
 import java.io.IOException;
+
 import org.apache.tomcat.util.bcel.Constants;
 
 /** 

==================================================
InnerClasses.java
index 44a052a41e..092727b514 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Field.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Field.java
@@ -19,6 +19,7 @@ package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInputStream;
 import java.io.IOException;
+
 import org.apache.tomcat.util.bcel.Constants;
 import org.apache.tomcat.util.bcel.util.BCELComparator;
 

==================================================
JavaClass.java
index 441154615e..808ea1e298 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/InnerClasses.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/InnerClasses.java
@@ -20,6 +20,7 @@ package org.apache.tomcat.util.bcel.classfile;
 import java.io.DataInputStream;
 import java.io.DataOutputStream;
 import java.io.IOException;
+
 import org.apache.tomcat.util.bcel.Constants;
 
 /**

==================================================
LineNumberTable.java
index 42d2aee4fe..dd0768f7a2 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/JavaClass.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/JavaClass.java
@@ -20,6 +20,7 @@ package org.apache.tomcat.util.bcel.classfile;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.StringTokenizer;
+
 import org.apache.tomcat.util.bcel.Constants;
 import org.apache.tomcat.util.bcel.util.BCELComparator;
 

==================================================
LocalVariableTable.java
index 1fa2ffec63..fec8e3e4ef 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/LineNumberTable.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/LineNumberTable.java
@@ -20,6 +20,7 @@ package org.apache.tomcat.util.bcel.classfile;
 import java.io.DataInputStream;
 import java.io.DataOutputStream;
 import java.io.IOException;
+
 import org.apache.tomcat.util.bcel.Constants;
 
 /**

==================================================
LocalVariableTypeTable.java
index e748f6653a..3bb5fc34c9 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/LocalVariableTable.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/LocalVariableTable.java
@@ -20,6 +20,7 @@ package org.apache.tomcat.util.bcel.classfile;
 import java.io.DataInputStream;
 import java.io.DataOutputStream;
 import java.io.IOException;
+
 import org.apache.tomcat.util.bcel.Constants;
 
 /**

==================================================
Method.java
index b7df253d41..3c52a7a9f0 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/LocalVariableTypeTable.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/LocalVariableTypeTable.java
@@ -20,7 +20,7 @@ import java.io.DataInputStream;
 import java.io.DataOutputStream;
 import java.io.IOException;
 
-import  org.apache.tomcat.util.bcel.Constants;
+import org.apache.tomcat.util.bcel.Constants;
 
 // The new table is used when generic types are about...
 

==================================================
ParameterAnnotationEntry.java
index c7d395f7e8..0ddcd84c51 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Method.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Method.java
@@ -19,6 +19,7 @@ package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInputStream;
 import java.io.IOException;
+
 import org.apache.tomcat.util.bcel.Constants;
 import org.apache.tomcat.util.bcel.util.BCELComparator;
 

==================================================
RuntimeInvisibleAnnotations.java
index 9ef0257380..eb3343817c 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ParameterAnnotationEntry.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ParameterAnnotationEntry.java
@@ -19,6 +19,7 @@ package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInputStream;
 import java.io.IOException;
+
 import org.apache.tomcat.util.bcel.Constants;
 
 /**

==================================================
RuntimeInvisibleParameterAnnotations.java
index 2d138f23cc..df79ce0f9a 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/RuntimeInvisibleAnnotations.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/RuntimeInvisibleAnnotations.java
@@ -20,6 +20,7 @@ package org.apache.tomcat.util.bcel.classfile;
 import java.io.DataInputStream;
 import java.io.DataOutputStream;
 import java.io.IOException;
+
 import org.apache.tomcat.util.bcel.Constants;
 
 /**

==================================================
RuntimeVisibleAnnotations.java
index 2fe5949e6c..d44a6b14b3 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/RuntimeInvisibleParameterAnnotations.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/RuntimeInvisibleParameterAnnotations.java
@@ -19,6 +19,7 @@ package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInputStream;
 import java.io.IOException;
+
 import org.apache.tomcat.util.bcel.Constants;
 
 /**

==================================================
RuntimeVisibleParameterAnnotations.java
index f1d684ec0d..5014d00b2e 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/RuntimeVisibleAnnotations.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/RuntimeVisibleAnnotations.java
@@ -20,6 +20,7 @@ package org.apache.tomcat.util.bcel.classfile;
 import java.io.DataInputStream;
 import java.io.DataOutputStream;
 import java.io.IOException;
+
 import org.apache.tomcat.util.bcel.Constants;
 
 /**

==================================================
SimpleElementValue.java
index cac919f8b7..a86f521343 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/RuntimeVisibleParameterAnnotations.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/RuntimeVisibleParameterAnnotations.java
@@ -19,6 +19,7 @@ package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataInputStream;
 import java.io.IOException;
+
 import org.apache.tomcat.util.bcel.Constants;
 
 /**

==================================================
StackMap.java
index ecd354a65c..216180ad6e 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/SimpleElementValue.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/SimpleElementValue.java
@@ -19,6 +19,7 @@ package org.apache.tomcat.util.bcel.classfile;
 
 import java.io.DataOutputStream;
 import java.io.IOException;
+
 import org.apache.tomcat.util.bcel.Constants;
 
 public class SimpleElementValue extends ElementValue

==================================================
StackMapTable.java
index b78cd8a457..ea7e05fdd5 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/StackMap.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/StackMap.java
@@ -20,6 +20,7 @@ package org.apache.tomcat.util.bcel.classfile;
 import java.io.DataInputStream;
 import java.io.DataOutputStream;
 import java.io.IOException;
+
 import org.apache.tomcat.util.bcel.Constants;
 
 /**

==================================================
Synthetic.java
index 84f602b824..291ca9d2e4 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/StackMapTable.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/StackMapTable.java
@@ -20,6 +20,7 @@ package org.apache.tomcat.util.bcel.classfile;
 import java.io.DataInputStream;
 import java.io.DataOutputStream;
 import java.io.IOException;
+
 import org.apache.tomcat.util.bcel.Constants;
 
 /**

==================================================
Unknown.java
index 298cbf6d0d..60e623b5b0 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Synthetic.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Synthetic.java
@@ -20,6 +20,7 @@ package org.apache.tomcat.util.bcel.classfile;
 import java.io.DataInputStream;
 import java.io.DataOutputStream;
 import java.io.IOException;
+
 import org.apache.tomcat.util.bcel.Constants;
 
 /**

==================================================
MessageBytes.java
index 6ce524a1fb..1949506946 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Unknown.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Unknown.java
@@ -22,6 +22,7 @@ import java.io.DataOutputStream;
 import java.io.IOException;
 import java.util.HashMap;
 import java.util.Map;
+
 import org.apache.tomcat.util.bcel.Constants;
 
 /**

==================================================
StringCache.java
index a11256911b..90fca3c25f 100644
--- a/java/org/apache/tomcat/util/buf/MessageBytes.java
+++ b/java/org/apache/tomcat/util/buf/MessageBytes.java
@@ -17,8 +17,8 @@
 
 package org.apache.tomcat.util.buf;
 
-import java.io.Serializable;
 import java.io.IOException;
+import java.io.Serializable;
 import java.util.Locale;
 
 /**

==================================================
FileUploadBase.java
index 28616ab007..ce74e2b61e 100644
--- a/java/org/apache/tomcat/util/buf/StringCache.java
+++ b/java/org/apache/tomcat/util/buf/StringCache.java
@@ -19,8 +19,8 @@ package org.apache.tomcat.util.buf;
 
 import java.util.ArrayList;
 import java.util.HashMap;
-import java.util.TreeMap;
 import java.util.Map.Entry;
+import java.util.TreeMap;
 
 /**
  * This class implements a String cache for ByteChunk and CharChunk.

==================================================
RequestContext.java
index e304d118b4..687204afe2 100644
--- a/java/org/apache/tomcat/util/http/fileupload/FileUploadBase.java
+++ b/java/org/apache/tomcat/util/http/fileupload/FileUploadBase.java
@@ -26,8 +26,6 @@ import java.util.Locale;
 import java.util.Map;
 import java.util.NoSuchElementException;
 
-import javax.servlet.http.HttpServletRequest;
-
 import org.apache.tomcat.util.http.fileupload.MultipartStream.ItemInputStream;
 import org.apache.tomcat.util.http.fileupload.util.Closeable;
 import org.apache.tomcat.util.http.fileupload.util.FileItemHeadersImpl;

==================================================
DiskFileItem.java
index 370d86a95f..76e1cbf9ba 100644
--- a/java/org/apache/tomcat/util/http/fileupload/RequestContext.java
+++ b/java/org/apache/tomcat/util/http/fileupload/RequestContext.java
@@ -16,8 +16,8 @@
  */
 package org.apache.tomcat.util.http.fileupload;
 
-import java.io.InputStream;
 import java.io.IOException;
+import java.io.InputStream;
 
 /**
  * <p>Abstracts access to the request information needed for file uploads. This

==================================================
ServletRequestContext.java
index c91dac3603..35a3f9bee4 100644
--- a/java/org/apache/tomcat/util/http/fileupload/disk/DiskFileItem.java
+++ b/java/org/apache/tomcat/util/http/fileupload/disk/DiskFileItem.java
@@ -35,8 +35,8 @@ import org.apache.tomcat.util.http.fileupload.FileItem;
 import org.apache.tomcat.util.http.fileupload.FileItemHeaders;
 import org.apache.tomcat.util.http.fileupload.FileItemHeadersSupport;
 import org.apache.tomcat.util.http.fileupload.FileUploadException;
-import org.apache.tomcat.util.http.fileupload.InvalidFileNameException;
 import org.apache.tomcat.util.http.fileupload.IOUtils;
+import org.apache.tomcat.util.http.fileupload.InvalidFileNameException;
 import org.apache.tomcat.util.http.fileupload.ParameterParser;
 import org.apache.tomcat.util.http.fileupload.RequestContext;
 import org.apache.tomcat.util.http.fileupload.util.Streams;

==================================================
Mapper.java
index 6db1d8e3f2..e97ef6d0cf 100644
--- a/java/org/apache/tomcat/util/http/fileupload/servlet/ServletRequestContext.java
+++ b/java/org/apache/tomcat/util/http/fileupload/servlet/ServletRequestContext.java
@@ -16,8 +16,9 @@
  */
 package org.apache.tomcat.util.http.fileupload.servlet;
 
-import java.io.InputStream;
 import java.io.IOException;
+import java.io.InputStream;
+
 import javax.servlet.http.HttpServletRequest;
 
 import org.apache.tomcat.util.http.fileupload.RequestContext;

==================================================
ManagedBean.java
index 9909ddaecb..271b09e984 100644
--- a/java/org/apache/tomcat/util/http/mapper/Mapper.java
+++ b/java/org/apache/tomcat/util/http/mapper/Mapper.java
@@ -17,17 +17,17 @@
 
 package org.apache.tomcat.util.http.mapper;
 
+import java.util.ArrayList;
+import java.util.List;
+
 import javax.naming.NamingException;
 import javax.naming.directory.DirContext;
 
+import org.apache.tomcat.util.buf.Ascii;
 import org.apache.tomcat.util.buf.CharChunk;
 import org.apache.tomcat.util.buf.MessageBytes;
-import org.apache.tomcat.util.buf.Ascii;
 import org.apache.tomcat.util.res.StringManager;
 
-import java.util.List;
-import java.util.ArrayList;
-
 /**
  * Mapper, which implements the servlet API mapping rules (which are derived
  * from the HTTP rules).

==================================================
MbeansDescriptorsDigesterSource.java
index 2e2bf14f81..98718f862c 100644
--- a/java/org/apache/tomcat/util/modeler/ManagedBean.java
+++ b/java/org/apache/tomcat/util/modeler/ManagedBean.java
@@ -35,7 +35,7 @@ import javax.management.MBeanOperationInfo;
 import javax.management.ReflectionException;
 import javax.management.RuntimeOperationsException;
 import javax.management.ServiceNotFoundException;
-//import javax.management.modelmbean.InvalidTargetObjectTypeException;
+import javax.management.modelmbean.InvalidTargetObjectTypeException;
 
 
 /**

==================================================
NioBlockingSelector.java
index 89e1716596..4e8d858ebf 100644
--- a/java/org/apache/tomcat/util/modeler/modules/MbeansDescriptorsDigesterSource.java
+++ b/java/org/apache/tomcat/util/modeler/modules/MbeansDescriptorsDigesterSource.java
@@ -26,11 +26,11 @@ import java.util.List;
 
 import javax.management.ObjectName;
 
+import org.apache.juli.logging.Log;
+import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.digester.Digester;
 import org.apache.tomcat.util.modeler.ManagedBean;
 import org.apache.tomcat.util.modeler.Registry;
-import org.apache.juli.logging.Log;
-import org.apache.juli.logging.LogFactory;
 
 public class MbeansDescriptorsDigesterSource extends ModelerSource
 {

==================================================
NioChannel.java
index 5bd10ac380..231259830b 100644
--- a/java/org/apache/tomcat/util/net/NioBlockingSelector.java
+++ b/java/org/apache/tomcat/util/net/NioBlockingSelector.java
@@ -29,12 +29,12 @@ import java.util.Iterator;
 import java.util.concurrent.ConcurrentLinkedQueue;
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.TimeUnit;
+import java.util.concurrent.atomic.AtomicInteger;
 
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.MutableInteger;
 import org.apache.tomcat.util.net.NioEndpoint.KeyAttachment;
-import java.util.concurrent.atomic.AtomicInteger;
 
 public class NioBlockingSelector {
     

==================================================
SecureNioChannel.java
index 7d714078b2..75de91e178 100644
--- a/java/org/apache/tomcat/util/net/NioChannel.java
+++ b/java/org/apache/tomcat/util/net/NioChannel.java
@@ -21,13 +21,13 @@ package org.apache.tomcat.util.net;
 import java.io.IOException;
 import java.nio.ByteBuffer;
 import java.nio.channels.ByteChannel;
+import java.nio.channels.SelectionKey;
+import java.nio.channels.Selector;
 import java.nio.channels.SocketChannel;
 
+import org.apache.tomcat.util.MutableInteger;
 import org.apache.tomcat.util.net.NioEndpoint.Poller;
 import org.apache.tomcat.util.net.SecureNioChannel.ApplicationBufferHandler;
-import java.nio.channels.Selector;
-import java.nio.channels.SelectionKey;
-import org.apache.tomcat.util.MutableInteger;
 
 /**
  * 

==================================================
TestKeepAliveCount.java
index 49af5703f5..a682b4b3e5 100644
--- a/java/org/apache/tomcat/util/net/SecureNioChannel.java
+++ b/java/org/apache/tomcat/util/net/SecureNioChannel.java
@@ -19,12 +19,14 @@ package org.apache.tomcat.util.net;
 import java.io.IOException;
 import java.nio.ByteBuffer;
 import java.nio.channels.SelectionKey;
+import java.nio.channels.Selector;
 import java.nio.channels.SocketChannel;
+
 import javax.net.ssl.SSLEngine;
 import javax.net.ssl.SSLEngineResult;
 import javax.net.ssl.SSLEngineResult.HandshakeStatus;
 import javax.net.ssl.SSLEngineResult.Status;
-import java.nio.channels.Selector;
+
 import org.apache.tomcat.util.MutableInteger;
 
 /**

==================================================
TestRequest.java
index fd10bb4e61..1a3829750d 100644
--- a/test/org/apache/catalina/connector/TestKeepAliveCount.java
+++ b/test/org/apache/catalina/connector/TestKeepAliveCount.java
@@ -25,8 +25,8 @@ import javax.servlet.http.HttpServletResponse;
 
 import org.apache.catalina.Context;
 import org.apache.catalina.startup.SimpleHttpClient;
-import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.catalina.startup.Tomcat;
+import org.apache.catalina.startup.TomcatBaseTest;
 
 public class TestKeepAliveCount extends TomcatBaseTest{
 

==================================================
TestResponse.java
index e43049543e..f444d886aa 100644
--- a/test/org/apache/catalina/connector/TestRequest.java
+++ b/test/org/apache/catalina/connector/TestRequest.java
@@ -33,9 +33,9 @@ import org.apache.catalina.Context;
 import org.apache.catalina.authenticator.BasicAuthenticator;
 import org.apache.catalina.deploy.LoginConfig;
 import org.apache.catalina.startup.SimpleHttpClient;
-import org.apache.catalina.startup.TomcatBaseTest;
-import org.apache.catalina.startup.Tomcat;
 import org.apache.catalina.startup.TestTomcat.MapRealm;
+import org.apache.catalina.startup.Tomcat;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
 
 /**

==================================================
TestNamingContextListener.java
index ec04c8bc33..3bdf8d3bb0 100644
--- a/test/org/apache/catalina/connector/TestResponse.java
+++ b/test/org/apache/catalina/connector/TestResponse.java
@@ -30,8 +30,8 @@ import javax.servlet.http.HttpServletResponse;
 import javax.servlet.http.HttpSession;
 
 import org.apache.catalina.Context;
-import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.catalina.startup.Tomcat;
+import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
 
 /**

==================================================
TestStandardContext.java
index 5be97831a6..5553282999 100644
--- a/test/org/apache/catalina/core/TestNamingContextListener.java
+++ b/test/org/apache/catalina/core/TestNamingContextListener.java
@@ -24,8 +24,8 @@ import javax.servlet.ServletContextListener;
 
 import org.apache.catalina.LifecycleState;
 import org.apache.catalina.deploy.ContextEnvironment;
-import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.catalina.startup.Tomcat;
+import org.apache.catalina.startup.TomcatBaseTest;
 
 public class TestNamingContextListener extends TomcatBaseTest {
 

==================================================
TestExpiresFilter.java
index 15da12baff..eefe83ce30 100644
--- a/test/org/apache/catalina/core/TestStandardContext.java
+++ b/test/org/apache/catalina/core/TestStandardContext.java
@@ -31,8 +31,8 @@ import org.apache.catalina.Context;
 import org.apache.catalina.deploy.FilterDef;
 import org.apache.catalina.deploy.FilterMap;
 import org.apache.catalina.startup.SimpleHttpClient;
-import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.catalina.startup.Tomcat;
+import org.apache.catalina.startup.TomcatBaseTest;
 
 public class TestStandardContext extends TomcatBaseTest {
 

==================================================
TestRemoteIpFilter.java
index 17e398889a..715c131b02 100644
--- a/test/org/apache/catalina/filters/TestExpiresFilter.java
+++ b/test/org/apache/catalina/filters/TestExpiresFilter.java
@@ -22,9 +22,9 @@ import java.net.HttpURLConnection;
 import java.net.URL;
 import java.util.Calendar;
 import java.util.List;
+import java.util.Map.Entry;
 import java.util.StringTokenizer;
 import java.util.TimeZone;
-import java.util.Map.Entry;
 
 import javax.servlet.ServletException;
 import javax.servlet.http.HttpServlet;

==================================================
TestSerializablePrincipal.java
index b7fbe0ab20..9edf92d2bf 100644
--- a/test/org/apache/catalina/filters/TestRemoteIpFilter.java
+++ b/test/org/apache/catalina/filters/TestRemoteIpFilter.java
@@ -37,6 +37,8 @@ import javax.servlet.http.HttpServlet;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
 
+import junit.framework.Assert;
+
 import org.apache.catalina.Context;
 import org.apache.catalina.LifecycleException;
 import org.apache.catalina.connector.Connector;
@@ -47,8 +49,6 @@ import org.apache.catalina.deploy.FilterMap;
 import org.apache.catalina.startup.Tomcat;
 import org.apache.catalina.startup.TomcatBaseTest;
 
-import junit.framework.Assert;
-
 public class TestRemoteIpFilter extends TomcatBaseTest {
 
     /**

==================================================
ParamFilter.java
index 02f74cd374..7edf83629c 100644
--- a/test/org/apache/catalina/ha/session/TestSerializablePrincipal.java
+++ b/test/org/apache/catalina/ha/session/TestSerializablePrincipal.java
@@ -27,10 +27,10 @@ import java.io.ObjectOutputStream;
 import java.util.ArrayList;
 import java.util.List;
 
-import org.apache.catalina.realm.GenericPrincipal;
-
 import junit.framework.TestCase;
 
+import org.apache.catalina.realm.GenericPrincipal;
+
 public class TestSerializablePrincipal extends TestCase {
 
     /**

==================================================
TomcatBaseTest.java
index 70a7f6c17a..54896edc7f 100644
--- a/test/org/apache/catalina/startup/ParamFilter.java
+++ b/test/org/apache/catalina/startup/ParamFilter.java
@@ -26,7 +26,7 @@ import javax.servlet.FilterConfig;
 import javax.servlet.ServletException;
 import javax.servlet.ServletRequest;
 import javax.servlet.ServletResponse;
-import javax.servlet.annotation.WebFilter; 
+import javax.servlet.annotation.WebFilter;
 import javax.servlet.annotation.WebInitParam;
 
 /**

==================================================
ChannelCreator.java
index 0d024b5d5b..c35b49bf52 100644
--- a/test/org/apache/catalina/startup/TomcatBaseTest.java
+++ b/test/org/apache/catalina/startup/TomcatBaseTest.java
@@ -31,15 +31,14 @@ import javax.servlet.http.HttpServlet;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
 
+import junit.framework.TestCase;
+
 import org.apache.catalina.LifecycleState;
 import org.apache.catalina.connector.Connector;
-import org.apache.catalina.core.StandardServer;
 import org.apache.catalina.core.AprLifecycleListener;
-
+import org.apache.catalina.core.StandardServer;
 import org.apache.tomcat.util.buf.ByteChunk;
 
-import junit.framework.TestCase;
-
 /**
  * Base test case that provides a Tomcat instance for each test - mainly so we
  * don't have to keep writing the cleanup code.

==================================================
EchoRpcTest.java
index c12d1a2da7..ff8be7dd15 100644
--- a/test/org/apache/catalina/tribes/demos/ChannelCreator.java
+++ b/test/org/apache/catalina/tribes/demos/ChannelCreator.java
@@ -16,28 +16,28 @@
  */
 package org.apache.catalina.tribes.demos;
 
+import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.Properties;
 
 import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.ManagedChannel;
+import org.apache.catalina.tribes.Member;
 import org.apache.catalina.tribes.group.GroupChannel;
+import org.apache.catalina.tribes.group.interceptors.DomainFilterInterceptor;
 import org.apache.catalina.tribes.group.interceptors.FragmentationInterceptor;
 import org.apache.catalina.tribes.group.interceptors.GzipInterceptor;
+import org.apache.catalina.tribes.group.interceptors.MessageDispatch15Interceptor;
 import org.apache.catalina.tribes.group.interceptors.MessageDispatchInterceptor;
 import org.apache.catalina.tribes.group.interceptors.OrderInterceptor;
+import org.apache.catalina.tribes.group.interceptors.StaticMembershipInterceptor;
+import org.apache.catalina.tribes.group.interceptors.TcpFailureDetector;
+import org.apache.catalina.tribes.group.interceptors.ThroughputInterceptor;
 import org.apache.catalina.tribes.membership.McastService;
+import org.apache.catalina.tribes.membership.MemberImpl;
 import org.apache.catalina.tribes.transport.MultiPointSender;
 import org.apache.catalina.tribes.transport.ReceiverBase;
 import org.apache.catalina.tribes.transport.ReplicationTransmitter;
-import org.apache.catalina.tribes.group.interceptors.ThroughputInterceptor;
-import org.apache.catalina.tribes.group.interceptors.MessageDispatch15Interceptor;
-import org.apache.catalina.tribes.group.interceptors.TcpFailureDetector;
-import org.apache.catalina.tribes.group.interceptors.DomainFilterInterceptor;
-import java.util.ArrayList;
-import org.apache.catalina.tribes.membership.MemberImpl;
-import org.apache.catalina.tribes.group.interceptors.StaticMembershipInterceptor;
-import org.apache.catalina.tribes.Member;
 
 /**
  * <p>Title: </p>

==================================================
LoadTest.java
index 8f4978969d..9105367e02 100644
--- a/test/org/apache/catalina/tribes/demos/EchoRpcTest.java
+++ b/test/org/apache/catalina/tribes/demos/EchoRpcTest.java
@@ -18,12 +18,12 @@ package org.apache.catalina.tribes.demos;
 
 import java.io.Serializable;
 
-import org.apache.catalina.tribes.Member;
-import org.apache.catalina.tribes.group.RpcCallback;
 import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.ManagedChannel;
-import org.apache.catalina.tribes.group.RpcChannel;
+import org.apache.catalina.tribes.Member;
 import org.apache.catalina.tribes.group.Response;
+import org.apache.catalina.tribes.group.RpcCallback;
+import org.apache.catalina.tribes.group.RpcChannel;
 
 
 /**

==================================================
MapDemo.java
index 288074e375..15cc09bf3f 100644
--- a/test/org/apache/catalina/tribes/demos/LoadTest.java
+++ b/test/org/apache/catalina/tribes/demos/LoadTest.java
@@ -20,12 +20,12 @@ import java.io.Serializable;
 import java.util.Random;
 
 import org.apache.catalina.tribes.ByteMessage;
+import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.ChannelException;
 import org.apache.catalina.tribes.ChannelListener;
 import org.apache.catalina.tribes.ManagedChannel;
 import org.apache.catalina.tribes.Member;
 import org.apache.catalina.tribes.MembershipListener;
-import org.apache.catalina.tribes.Channel;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 

==================================================
MembersWithProperties.java
index 6984be3808..f307694a17 100644
--- a/test/org/apache/catalina/tribes/demos/MapDemo.java
+++ b/test/org/apache/catalina/tribes/demos/MapDemo.java
@@ -16,14 +16,17 @@
  */
 package org.apache.catalina.tribes.demos;
 
-import java.io.Serializable;
-
+import java.awt.Color;
+import java.awt.Component;
 import java.awt.ComponentOrientation;
 import java.awt.Dimension;
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;
 import java.awt.event.MouseAdapter;
 import java.awt.event.MouseEvent;
+import java.io.Serializable;
+import java.util.Random;
+
 import javax.swing.BoxLayout;
 import javax.swing.JButton;
 import javax.swing.JFrame;
@@ -32,6 +35,8 @@ import javax.swing.JScrollPane;
 import javax.swing.JTable;
 import javax.swing.JTextField;
 import javax.swing.table.AbstractTableModel;
+import javax.swing.table.DefaultTableCellRenderer;
+import javax.swing.table.TableColumn;
 
 import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.ChannelListener;
@@ -39,11 +44,6 @@ import org.apache.catalina.tribes.ManagedChannel;
 import org.apache.catalina.tribes.Member;
 import org.apache.catalina.tribes.MembershipListener;
 import org.apache.catalina.tribes.tipis.LazyReplicatedMap;
-import javax.swing.table.DefaultTableCellRenderer;
-import java.awt.Color;
-import java.awt.Component;
-import javax.swing.table.TableColumn;
-import java.util.Random;
 
 /**
  * Example of how the lazy replicated map works, also shows how the BackupManager 

==================================================
NioSenderTest.java
index f02399db58..bac9f125c3 100644
--- a/test/org/apache/catalina/tribes/demos/MembersWithProperties.java
+++ b/test/org/apache/catalina/tribes/demos/MembersWithProperties.java
@@ -16,16 +16,17 @@
  */
 package org.apache.catalina.tribes.demos;
 
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.IOException;
+import java.util.Properties;
+
+import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.ManagedChannel;
 import org.apache.catalina.tribes.Member;
-import org.apache.catalina.tribes.Channel;
-import java.util.Properties;
 import org.apache.catalina.tribes.MembershipListener;
-import org.apache.catalina.tribes.util.UUIDGenerator;
 import org.apache.catalina.tribes.util.Arrays;
-import java.io.ByteArrayOutputStream;
-import java.io.ByteArrayInputStream;
-import java.io.IOException;
+import org.apache.catalina.tribes.util.UUIDGenerator;
 
 public class MembersWithProperties implements MembershipListener{
     Channel channel;

==================================================
TribesTestSuite.java
index 2ad6724566..3b7817b25e 100644
--- a/test/org/apache/catalina/tribes/test/NioSenderTest.java
+++ b/test/org/apache/catalina/tribes/test/NioSenderTest.java
@@ -17,14 +17,15 @@
 package org.apache.catalina.tribes.test;
 
 import java.nio.channels.SelectionKey;
-import java.util.Iterator;
 import java.nio.channels.Selector;
-import org.apache.catalina.tribes.transport.nio.NioSender;
-import org.apache.catalina.tribes.membership.MemberImpl;
+import java.util.Iterator;
+
+import org.apache.catalina.tribes.Channel;
+import org.apache.catalina.tribes.Member;
 import org.apache.catalina.tribes.io.ChannelData;
 import org.apache.catalina.tribes.io.XByteBuffer;
-import org.apache.catalina.tribes.Member;
-import org.apache.catalina.tribes.Channel;
+import org.apache.catalina.tribes.membership.MemberImpl;
+import org.apache.catalina.tribes.transport.nio.NioSender;
 
 /**
  * <p>Title: </p>

==================================================
TestChannelOptionFlag.java
index ee9dad43da..48b9eebd51 100644
--- a/test/org/apache/catalina/tribes/test/TribesTestSuite.java
+++ b/test/org/apache/catalina/tribes/test/TribesTestSuite.java
@@ -16,8 +16,12 @@
  */
 package org.apache.catalina.tribes.test;
 
-import org.apache.catalina.tribes.test.channel.TestChannelStartStop;
+import junit.framework.Test;
+import junit.framework.TestCase;
+import junit.framework.TestSuite;
+
 import org.apache.catalina.tribes.test.channel.TestChannelOptionFlag;
+import org.apache.catalina.tribes.test.channel.TestChannelStartStop;
 import org.apache.catalina.tribes.test.channel.TestDataIntegrity;
 import org.apache.catalina.tribes.test.channel.TestMulticastPackages;
 import org.apache.catalina.tribes.test.channel.TestRemoteProcessException;
@@ -26,15 +30,11 @@ import org.apache.catalina.tribes.test.interceptors.TestNonBlockingCoordinator;
 import org.apache.catalina.tribes.test.interceptors.TestOrderInterceptor;
 import org.apache.catalina.tribes.test.io.TestSenderConnections;
 import org.apache.catalina.tribes.test.io.TestSerialization;
-import org.apache.catalina.tribes.test.membership.TestMemberSerialization;
 import org.apache.catalina.tribes.test.membership.TestDomainFilter;
 import org.apache.catalina.tribes.test.membership.TestMemberArrival;
+import org.apache.catalina.tribes.test.membership.TestMemberSerialization;
 import org.apache.catalina.tribes.test.membership.TestTcpFailureDetector;
 
-import junit.framework.Test;
-import junit.framework.TestCase;
-import junit.framework.TestSuite;
-
 public class TribesTestSuite
     extends TestCase {
 

==================================================
TestChannelStartStop.java
index 3637723622..85324ec194 100644
--- a/test/org/apache/catalina/tribes/test/channel/TestChannelOptionFlag.java
+++ b/test/org/apache/catalina/tribes/test/channel/TestChannelOptionFlag.java
@@ -19,8 +19,8 @@ package org.apache.catalina.tribes.test.channel;
 import junit.framework.TestCase;
 
 import org.apache.catalina.tribes.Channel;
-import org.apache.catalina.tribes.ChannelInterceptor;
 import org.apache.catalina.tribes.ChannelException;
+import org.apache.catalina.tribes.ChannelInterceptor;
 import org.apache.catalina.tribes.group.ChannelInterceptorBase;
 import org.apache.catalina.tribes.group.GroupChannel;
 

==================================================
TestDataIntegrity.java
index 0bfbf011a5..0adf1f9d2e 100644
--- a/test/org/apache/catalina/tribes/test/channel/TestChannelStartStop.java
+++ b/test/org/apache/catalina/tribes/test/channel/TestChannelStartStop.java
@@ -15,9 +15,10 @@
  */
 package org.apache.catalina.tribes.test.channel;
 
+import junit.framework.TestCase;
+
 import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.group.GroupChannel;
-import junit.framework.TestCase;
 import org.apache.catalina.tribes.transport.ReceiverBase;
 
 /**

==================================================
TestMulticastPackages.java
index 3a2cacaf63..85bb946ed2 100644
--- a/test/org/apache/catalina/tribes/test/channel/TestDataIntegrity.java
+++ b/test/org/apache/catalina/tribes/test/channel/TestDataIntegrity.java
@@ -16,10 +16,11 @@
  */
 package org.apache.catalina.tribes.test.channel;
 
-import junit.framework.TestCase;
 import java.io.Serializable;
-import java.util.Random;
 import java.util.Arrays;
+import java.util.Random;
+
+import junit.framework.TestCase;
 
 import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.ChannelListener;

==================================================
TestRemoteProcessException.java
index 5babda02c8..e3d3178c11 100644
--- a/test/org/apache/catalina/tribes/test/channel/TestMulticastPackages.java
+++ b/test/org/apache/catalina/tribes/test/channel/TestMulticastPackages.java
@@ -16,24 +16,25 @@
  */
 package org.apache.catalina.tribes.test.channel;
 
-import junit.framework.TestCase;
 import java.io.Serializable;
-import java.util.Random;
 import java.util.Arrays;
+import java.util.Random;
 import java.util.concurrent.atomic.AtomicInteger;
 import java.util.concurrent.atomic.AtomicLong;
 
+import junit.framework.TestCase;
+
 import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.ChannelListener;
 import org.apache.catalina.tribes.ChannelReceiver;
 import org.apache.catalina.tribes.Member;
 import org.apache.catalina.tribes.group.GroupChannel;
-import org.apache.catalina.tribes.transport.AbstractSender;
-import org.apache.catalina.tribes.transport.ReceiverBase;
-import org.apache.catalina.tribes.transport.ReplicationTransmitter;
 import org.apache.catalina.tribes.group.interceptors.MessageDispatch15Interceptor;
 import org.apache.catalina.tribes.group.interceptors.ThroughputInterceptor;
 import org.apache.catalina.tribes.io.XByteBuffer;
+import org.apache.catalina.tribes.transport.AbstractSender;
+import org.apache.catalina.tribes.transport.ReceiverBase;
+import org.apache.catalina.tribes.transport.ReplicationTransmitter;
 
 /**
  */

==================================================
TestUdpPackages.java
index bc7591e073..20ff18f288 100644
--- a/test/org/apache/catalina/tribes/test/channel/TestRemoteProcessException.java
+++ b/test/org/apache/catalina/tribes/test/channel/TestRemoteProcessException.java
@@ -16,16 +16,17 @@
  */
 package org.apache.catalina.tribes.test.channel;
 
-import junit.framework.TestCase;
+import java.io.PrintStream;
 import java.io.Serializable;
-import java.util.Random;
 import java.util.Arrays;
+import java.util.Random;
+
+import junit.framework.TestCase;
 
 import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.ChannelListener;
 import org.apache.catalina.tribes.Member;
 import org.apache.catalina.tribes.group.GroupChannel;
-import java.io.PrintStream;
 
 /**
  * <p>Title: </p> 

==================================================
TestNonBlockingCoordinator.java
index acf0150328..2f29d190a7 100644
--- a/test/org/apache/catalina/tribes/test/channel/TestUdpPackages.java
+++ b/test/org/apache/catalina/tribes/test/channel/TestUdpPackages.java
@@ -16,24 +16,25 @@
  */
 package org.apache.catalina.tribes.test.channel;
 
-import junit.framework.TestCase;
 import java.io.Serializable;
-import java.util.Random;
 import java.util.Arrays;
+import java.util.Random;
 import java.util.concurrent.atomic.AtomicInteger;
 import java.util.concurrent.atomic.AtomicLong;
 
+import junit.framework.TestCase;
+
 import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.ChannelListener;
 import org.apache.catalina.tribes.ChannelReceiver;
 import org.apache.catalina.tribes.Member;
 import org.apache.catalina.tribes.group.GroupChannel;
-import org.apache.catalina.tribes.transport.AbstractSender;
-import org.apache.catalina.tribes.transport.ReceiverBase;
-import org.apache.catalina.tribes.transport.ReplicationTransmitter;
 import org.apache.catalina.tribes.group.interceptors.MessageDispatch15Interceptor;
 import org.apache.catalina.tribes.group.interceptors.ThroughputInterceptor;
 import org.apache.catalina.tribes.io.XByteBuffer;
+import org.apache.catalina.tribes.transport.AbstractSender;
+import org.apache.catalina.tribes.transport.ReceiverBase;
+import org.apache.catalina.tribes.transport.ReplicationTransmitter;
 
 /**
  */

==================================================
TestOrderInterceptor.java
index 104b1df143..9f2b0561d0 100644
--- a/test/org/apache/catalina/tribes/test/interceptors/TestNonBlockingCoordinator.java
+++ b/test/org/apache/catalina/tribes/test/interceptors/TestNonBlockingCoordinator.java
@@ -16,14 +16,15 @@
  */
 package org.apache.catalina.tribes.test.interceptors;
 
+import junit.framework.TestCase;
+import junit.framework.TestResult;
+import junit.framework.TestSuite;
+
 import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.Member;
 import org.apache.catalina.tribes.group.GroupChannel;
 import org.apache.catalina.tribes.group.interceptors.NonBlockingCoordinator;
 import org.apache.catalina.tribes.group.interceptors.TcpFailureDetector;
-import junit.framework.TestCase;
-import junit.framework.TestResult;
-import junit.framework.TestSuite;
 
 public class TestNonBlockingCoordinator extends TestCase {
 

==================================================
TestSenderConnections.java
index 2d502a32c1..d99deedecd 100644
--- a/test/org/apache/catalina/tribes/test/interceptors/TestOrderInterceptor.java
+++ b/test/org/apache/catalina/tribes/test/interceptors/TestOrderInterceptor.java
@@ -16,23 +16,24 @@
  */
 package org.apache.catalina.tribes.test.interceptors;
 
-import org.apache.catalina.tribes.Channel;
-import org.apache.catalina.tribes.Member;
-import org.apache.catalina.tribes.group.GroupChannel;
+import java.io.Serializable;
+import java.util.Queue;
+import java.util.concurrent.ConcurrentLinkedQueue;
+import java.util.concurrent.atomic.AtomicInteger;
+
 import junit.framework.TestCase;
 import junit.framework.TestResult;
 import junit.framework.TestSuite;
+
+import org.apache.catalina.tribes.Channel;
+import org.apache.catalina.tribes.ChannelException;
 import org.apache.catalina.tribes.ChannelListener;
-import java.io.Serializable;
-import org.apache.catalina.tribes.group.interceptors.OrderInterceptor;
-import org.apache.catalina.tribes.group.ChannelInterceptorBase;
 import org.apache.catalina.tribes.ChannelMessage;
+import org.apache.catalina.tribes.Member;
+import org.apache.catalina.tribes.group.ChannelInterceptorBase;
+import org.apache.catalina.tribes.group.GroupChannel;
 import org.apache.catalina.tribes.group.InterceptorPayload;
-import org.apache.catalina.tribes.ChannelException;
-
-import java.util.Queue;
-import java.util.concurrent.ConcurrentLinkedQueue;
-import java.util.concurrent.atomic.AtomicInteger;
+import org.apache.catalina.tribes.group.interceptors.OrderInterceptor;
 
 public class TestOrderInterceptor extends TestCase {
 

==================================================
TestSerialization.java
index 3a8f72f3a2..5c62db37f4 100644
--- a/test/org/apache/catalina/tribes/test/io/TestSenderConnections.java
+++ b/test/org/apache/catalina/tribes/test/io/TestSenderConnections.java
@@ -16,17 +16,18 @@
  */
 package org.apache.catalina.tribes.test.io;
 
+import java.io.Serializable;
 import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.Random;
+
+import junit.framework.TestCase;
 
 import org.apache.catalina.tribes.Channel;
+import org.apache.catalina.tribes.ChannelListener;
 import org.apache.catalina.tribes.ManagedChannel;
 import org.apache.catalina.tribes.Member;
 import org.apache.catalina.tribes.group.GroupChannel;
-import junit.framework.TestCase;
-import org.apache.catalina.tribes.ChannelListener;
-import java.io.Serializable;
-import java.util.Random;
-import java.util.HashMap;
 import org.apache.catalina.tribes.transport.ReplicationTransmitter;
 
 public class TestSenderConnections extends TestCase {

==================================================
TestDomainFilter.java
index 1c5933f47e..378bf8a185 100644
--- a/test/org/apache/catalina/tribes/test/io/TestSerialization.java
+++ b/test/org/apache/catalina/tribes/test/io/TestSerialization.java
@@ -16,9 +16,10 @@
  */
 package org.apache.catalina.tribes.test.io;
 
-import org.apache.catalina.tribes.io.XByteBuffer;
 import junit.framework.TestCase;
 
+import org.apache.catalina.tribes.io.XByteBuffer;
+
 public class TestSerialization extends TestCase {
     @Override
     protected void setUp() throws Exception {

==================================================
TestMemberArrival.java
index 62d6541289..59ecafda31 100644
--- a/test/org/apache/catalina/tribes/test/membership/TestDomainFilter.java
+++ b/test/org/apache/catalina/tribes/test/membership/TestDomainFilter.java
@@ -18,12 +18,13 @@ package org.apache.catalina.tribes.test.membership;
 
 import java.util.ArrayList;
 
+import junit.framework.TestCase;
+
 import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.ManagedChannel;
 import org.apache.catalina.tribes.Member;
 import org.apache.catalina.tribes.MembershipListener;
 import org.apache.catalina.tribes.group.GroupChannel;
-import junit.framework.TestCase;
 import org.apache.catalina.tribes.group.interceptors.DomainFilterInterceptor;
 import org.apache.catalina.tribes.util.UUIDGenerator;
 

==================================================
TestMemberSerialization.java
index b57fe054ca..3f2c960119 100644
--- a/test/org/apache/catalina/tribes/test/membership/TestMemberArrival.java
+++ b/test/org/apache/catalina/tribes/test/membership/TestMemberArrival.java
@@ -18,12 +18,13 @@ package org.apache.catalina.tribes.test.membership;
 
 import java.util.ArrayList;
 
+import junit.framework.TestCase;
+
 import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.ManagedChannel;
 import org.apache.catalina.tribes.Member;
 import org.apache.catalina.tribes.MembershipListener;
 import org.apache.catalina.tribes.group.GroupChannel;
-import junit.framework.TestCase;
 
 public class TestMemberArrival
     extends TestCase {

==================================================
TestTcpFailureDetector.java
index 2e5fd1eab7..4927051651 100644
--- a/test/org/apache/catalina/tribes/test/membership/TestMemberSerialization.java
+++ b/test/org/apache/catalina/tribes/test/membership/TestMemberSerialization.java
@@ -15,9 +15,11 @@
  */
 package org.apache.catalina.tribes.test.membership;
 
+import java.util.Arrays;
+
 import junit.framework.TestCase;
+
 import org.apache.catalina.tribes.membership.MemberImpl;
-import java.util.Arrays;
 
 /**
  * <p>Title: </p>

==================================================
SocketNioSend.java
index ded0be2834..1cb0fe806a 100644
--- a/test/org/apache/catalina/tribes/test/membership/TestTcpFailureDetector.java
+++ b/test/org/apache/catalina/tribes/test/membership/TestTcpFailureDetector.java
@@ -18,6 +18,8 @@ package org.apache.catalina.tribes.test.membership;
 
 import java.util.ArrayList;
 
+import junit.framework.TestCase;
+
 import org.apache.catalina.tribes.ByteMessage;
 import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.ChannelException;
@@ -26,7 +28,6 @@ import org.apache.catalina.tribes.Member;
 import org.apache.catalina.tribes.MembershipListener;
 import org.apache.catalina.tribes.group.GroupChannel;
 import org.apache.catalina.tribes.group.interceptors.TcpFailureDetector;
-import junit.framework.TestCase;
 
 /**
  * <p>Title: </p> 

==================================================
SocketNioValidateSend.java
index e16cfab76f..e865dd7412 100644
--- a/test/org/apache/catalina/tribes/test/transport/SocketNioSend.java
+++ b/test/org/apache/catalina/tribes/test/transport/SocketNioSend.java
@@ -16,17 +16,18 @@
  */
 package org.apache.catalina.tribes.test.transport;
 
-import java.text.DecimalFormat;
-import org.apache.catalina.tribes.transport.nio.NioSender;
-import org.apache.catalina.tribes.membership.MemberImpl;
-import java.nio.channels.Selector;
-import org.apache.catalina.tribes.io.XByteBuffer;
-import org.apache.catalina.tribes.Member;
+import java.math.BigDecimal;
 import java.nio.channels.SelectionKey;
+import java.nio.channels.Selector;
+import java.text.DecimalFormat;
 import java.util.Iterator;
+
 import org.apache.catalina.tribes.Channel;
+import org.apache.catalina.tribes.Member;
 import org.apache.catalina.tribes.io.ChannelData;
-import java.math.BigDecimal;
+import org.apache.catalina.tribes.io.XByteBuffer;
+import org.apache.catalina.tribes.membership.MemberImpl;
+import org.apache.catalina.tribes.transport.nio.NioSender;
 
 public class SocketNioSend {
 

==================================================
SocketReceive.java
index 9128a12e26..e6a65f791a 100644
--- a/test/org/apache/catalina/tribes/test/transport/SocketNioValidateSend.java
+++ b/test/org/apache/catalina/tribes/test/transport/SocketNioValidateSend.java
@@ -16,15 +16,16 @@
  */
 package org.apache.catalina.tribes.test.transport;
 
-import java.text.DecimalFormat;
-import org.apache.catalina.tribes.transport.nio.NioSender;
-import org.apache.catalina.tribes.membership.MemberImpl;
-import java.nio.channels.Selector;
-import org.apache.catalina.tribes.Member;
-import java.nio.channels.SelectionKey;
-import java.util.Iterator;
 import java.math.BigDecimal;
+import java.nio.channels.SelectionKey;
+import java.nio.channels.Selector;
+import java.text.DecimalFormat;
 import java.util.Arrays;
+import java.util.Iterator;
+
+import org.apache.catalina.tribes.Member;
+import org.apache.catalina.tribes.membership.MemberImpl;
+import org.apache.catalina.tribes.transport.nio.NioSender;
 
 public class SocketNioValidateSend {
 

==================================================
SocketSend.java
index bb90f4c066..e51b33fa52 100644
--- a/test/org/apache/catalina/tribes/test/transport/SocketReceive.java
+++ b/test/org/apache/catalina/tribes/test/transport/SocketReceive.java
@@ -16,11 +16,11 @@
  */
 package org.apache.catalina.tribes.test.transport;
 
+import java.io.InputStream;
+import java.math.BigDecimal;
 import java.net.ServerSocket;
 import java.net.Socket;
-import java.io.InputStream;
 import java.text.DecimalFormat;
-import java.math.BigDecimal;
 
 public class SocketReceive {
     static long start = 0;

==================================================
SocketTribesReceive.java
index aa2d6c9a71..f4e78ce92a 100644
--- a/test/org/apache/catalina/tribes/test/transport/SocketSend.java
+++ b/test/org/apache/catalina/tribes/test/transport/SocketSend.java
@@ -17,14 +17,15 @@
 package org.apache.catalina.tribes.test.transport;
 
 import java.io.OutputStream;
+import java.math.BigDecimal;
 import java.net.Socket;
 import java.text.DecimalFormat;
-import org.apache.catalina.tribes.membership.MemberImpl;
-import org.apache.catalina.tribes.io.XByteBuffer;
+
+import org.apache.catalina.tribes.Channel;
 import org.apache.catalina.tribes.Member;
 import org.apache.catalina.tribes.io.ChannelData;
-import org.apache.catalina.tribes.Channel;
-import java.math.BigDecimal;
+import org.apache.catalina.tribes.io.XByteBuffer;
+import org.apache.catalina.tribes.membership.MemberImpl;
 
 public class SocketSend {
 

==================================================
SocketValidateReceive.java
index 97f0099c1f..5349467802 100644
--- a/test/org/apache/catalina/tribes/test/transport/SocketTribesReceive.java
+++ b/test/org/apache/catalina/tribes/test/transport/SocketTribesReceive.java
@@ -16,11 +16,12 @@
  */
 package org.apache.catalina.tribes.test.transport;
 
+import java.io.InputStream;
+import java.math.BigDecimal;
 import java.net.ServerSocket;
 import java.net.Socket;
-import java.io.InputStream;
 import java.text.DecimalFormat;
-import java.math.BigDecimal;
+
 import org.apache.catalina.tribes.io.XByteBuffer;
 
 public class SocketTribesReceive {

==================================================
TestMethodExpressionImpl.java
index aa7113301c..440e28d917 100644
--- a/test/org/apache/catalina/tribes/test/transport/SocketValidateReceive.java
+++ b/test/org/apache/catalina/tribes/test/transport/SocketValidateReceive.java
@@ -16,11 +16,11 @@
  */
 package org.apache.catalina.tribes.test.transport;
 
+import java.io.InputStream;
+import java.math.BigDecimal;
 import java.net.ServerSocket;
 import java.net.Socket;
-import java.io.InputStream;
 import java.text.DecimalFormat;
-import java.math.BigDecimal;
 
 public class SocketValidateReceive {
     static long start = 0;

==================================================
TestValueExpressionImpl.java
index 4a917afea0..7e48873082 100644
--- a/test/org/apache/el/TestMethodExpressionImpl.java
+++ b/test/org/apache/el/TestMethodExpressionImpl.java
@@ -22,10 +22,10 @@ import javax.el.ExpressionFactory;
 import javax.el.MethodExpression;
 import javax.el.ValueExpression;
 
-import org.apache.jasper.el.ELContextImpl;
-
 import junit.framework.TestCase;
 
+import org.apache.jasper.el.ELContextImpl;
+
 public class TestMethodExpressionImpl extends TestCase {
 
     private ExpressionFactory factory;

==================================================
TestELParser.java
index 3238910516..0079f2c838 100644
--- a/test/org/apache/el/TestValueExpressionImpl.java
+++ b/test/org/apache/el/TestValueExpressionImpl.java
@@ -22,10 +22,10 @@ import javax.el.ExpressionFactory;
 import javax.el.ValueExpression;
 import javax.el.ValueReference;
 
-import org.apache.jasper.el.ELContextImpl;
-
 import junit.framework.TestCase;
 
+import org.apache.jasper.el.ELContextImpl;
+
 public class TestValueExpressionImpl extends TestCase {
 
     public void testGetValueReference() {

==================================================
TestAttributeParser.java
index e2216f971c..d1e5d1d7bc 100644
--- a/test/org/apache/el/parser/TestELParser.java
+++ b/test/org/apache/el/parser/TestELParser.java
@@ -22,10 +22,10 @@ import javax.el.ELException;
 import javax.el.ExpressionFactory;
 import javax.el.ValueExpression;
 
-import org.apache.jasper.el.ELContextImpl;
-
 import junit.framework.TestCase;
 
+import org.apache.jasper.el.ELContextImpl;
+
 public class TestELParser extends TestCase {
 
     public void testBug49081() {

==================================================
CookiesBaseTest.java
index 0d6e1a6c0d..3632175306 100644
--- a/test/org/apache/jasper/compiler/TestAttributeParser.java
+++ b/test/org/apache/jasper/compiler/TestAttributeParser.java
@@ -22,14 +22,14 @@ import java.lang.reflect.Method;
 import javax.el.FunctionMapper;
 import javax.el.ValueExpression;
 
+import junit.framework.TestCase;
+
 import org.apache.el.ExpressionFactoryImpl;
 import org.apache.el.TestELEvaluation;
 import org.apache.el.TestELInJsp;
 import org.apache.el.TesterFunctions;
 import org.apache.jasper.el.ELContextImpl;
 
-import junit.framework.TestCase;
-
 /**
  * Test the EL processing from JSP attributes. Similar tests may be found in
  * {@link TestELEvaluation} and {@link TestELInJsp}.

==================================================
TestCookiesAllowEquals.java
index 2e003dd0a4..40ea270402 100644
--- a/test/org/apache/tomcat/util/http/CookiesBaseTest.java
+++ b/test/org/apache/tomcat/util/http/CookiesBaseTest.java
@@ -25,8 +25,8 @@ import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
 
 import org.apache.catalina.Context;
-import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.catalina.startup.Tomcat;
+import org.apache.catalina.startup.TomcatBaseTest;
 
 /**
  * Base Test case for {@link Cookies}. <b>Note</b> because of the use of

==================================================
TestCookiesAllowHttpSeps.java
index 2d95a7bdcf..bc80d50bac 100644
--- a/test/org/apache/tomcat/util/http/TestCookiesAllowEquals.java
+++ b/test/org/apache/tomcat/util/http/TestCookiesAllowEquals.java
@@ -26,8 +26,8 @@ import javax.servlet.http.HttpServletResponse;
 
 import org.apache.catalina.Context;
 import org.apache.catalina.startup.SimpleHttpClient;
-import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.catalina.startup.Tomcat;
+import org.apache.catalina.startup.TomcatBaseTest;
 
 public class TestCookiesAllowEquals extends TomcatBaseTest{
 

==================================================
TestCookiesDisallowEquals.java
index 3331e0fe2e..cae9aef446 100644
--- a/test/org/apache/tomcat/util/http/TestCookiesAllowHttpSeps.java
+++ b/test/org/apache/tomcat/util/http/TestCookiesAllowHttpSeps.java
@@ -26,8 +26,8 @@ import javax.servlet.http.HttpServletResponse;
 
 import org.apache.catalina.Context;
 import org.apache.catalina.startup.SimpleHttpClient;
-import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.catalina.startup.Tomcat;
+import org.apache.catalina.startup.TomcatBaseTest;
 
 public class TestCookiesAllowHttpSeps extends TomcatBaseTest{
 

==================================================
Hello.java
index 9d6e1e5489..8123a84af9 100644
--- a/test/org/apache/tomcat/util/http/TestCookiesDisallowEquals.java
+++ b/test/org/apache/tomcat/util/http/TestCookiesDisallowEquals.java
@@ -26,8 +26,8 @@ import javax.servlet.http.HttpServletResponse;
 
 import org.apache.catalina.Context;
 import org.apache.catalina.startup.SimpleHttpClient;
-import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.catalina.startup.Tomcat;
+import org.apache.catalina.startup.TomcatBaseTest;
 
 public class TestCookiesDisallowEquals extends TomcatBaseTest{
 

==================================================
ChatServlet.java
index c7e4d31022..d3ac079ac4 100644
--- a/webapps/docs/changelog.xml
+++ b/webapps/docs/changelog.xml
@@ -93,6 +93,9 @@
       <fix>
         Correct the Eclipse compiler dependency in the Jasper POM. (markt)
       </fix>
+      <add>
+        Extend Checkstyle validation checks to check import order. (markt) 
+      </add>
     </changelog>
   </subsection>
 </section>

==================================================
CompressionFilter.java
index 1549c47aed..3cf518867f 100644
--- a/webapps/examples/WEB-INF/classes/chat/ChatServlet.java
+++ b/webapps/examples/WEB-INF/classes/chat/ChatServlet.java
@@ -24,14 +24,14 @@ import java.io.InputStream;
 import java.io.PrintWriter;
 import java.util.ArrayList;
 
-import org.apache.catalina.comet.CometEvent;
-import org.apache.catalina.comet.CometProcessor;
-
 import javax.servlet.ServletException;
 import javax.servlet.http.HttpServlet;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
 
+import org.apache.catalina.comet.CometEvent;
+import org.apache.catalina.comet.CometProcessor;
+
 
 /**
  * Helper class to implement Comet functionality.

==================================================
CompressionResponseStream.java
index 8a8465bb19..b1081630bb 100644
--- a/webapps/examples/WEB-INF/classes/compressionFilters/CompressionFilter.java
+++ b/webapps/examples/WEB-INF/classes/compressionFilters/CompressionFilter.java
@@ -19,6 +19,7 @@ package compressionFilters;
 
 import java.io.IOException;
 import java.util.Enumeration;
+
 import javax.servlet.Filter;
 import javax.servlet.FilterChain;
 import javax.servlet.FilterConfig;

==================================================
CompressionServletResponseWrapper.java
index 6aff0c2ff0..77610789b3 100644
--- a/webapps/examples/WEB-INF/classes/compressionFilters/CompressionResponseStream.java
+++ b/webapps/examples/WEB-INF/classes/compressionFilters/CompressionResponseStream.java
@@ -19,6 +19,7 @@ package compressionFilters;
 import java.io.IOException;
 import java.io.OutputStream;
 import java.util.zip.GZIPOutputStream;
+
 import javax.servlet.ServletOutputStream;
 import javax.servlet.http.HttpServletResponse;
 

==================================================
ExampleFilter.java
index c631b4b965..164390ae26 100644
--- a/webapps/examples/WEB-INF/classes/compressionFilters/CompressionServletResponseWrapper.java
+++ b/webapps/examples/WEB-INF/classes/compressionFilters/CompressionServletResponseWrapper.java
@@ -19,6 +19,7 @@ package compressionFilters;
 import java.io.IOException;
 import java.io.OutputStreamWriter;
 import java.io.PrintWriter;
+
 import javax.servlet.ServletOutputStream;
 import javax.servlet.http.HttpServletResponse;
 import javax.servlet.http.HttpServletResponseWrapper;

==================================================
SetCharacterEncodingFilter.java
index d782e4a0c7..004fda519f 100644
--- a/webapps/examples/WEB-INF/classes/filters/ExampleFilter.java
+++ b/webapps/examples/WEB-INF/classes/filters/ExampleFilter.java
@@ -19,6 +19,7 @@ package filters;
 
 
 import java.io.IOException;
+
 import javax.servlet.Filter;
 import javax.servlet.FilterChain;
 import javax.servlet.FilterConfig;

==================================================
EchoAttributesTag.java
index 81dbffcba6..ad74d058c2 100644
--- a/webapps/examples/WEB-INF/classes/filters/SetCharacterEncodingFilter.java
+++ b/webapps/examples/WEB-INF/classes/filters/SetCharacterEncodingFilter.java
@@ -19,6 +19,7 @@ package filters;
 
 
 import java.io.IOException;
+
 import javax.servlet.Filter;
 import javax.servlet.FilterChain;
 import javax.servlet.FilterConfig;

==================================================
FindBookSimpleTag.java
index 89cbec2f0e..c6186af17c 100644
--- a/webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/EchoAttributesTag.java
+++ b/webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/EchoAttributesTag.java
@@ -18,12 +18,13 @@
 
 package jsp2.examples.simpletag;
 
+import java.io.IOException;
+import java.util.ArrayList;
+
 import javax.servlet.jsp.JspException;
 import javax.servlet.jsp.JspWriter;
-import javax.servlet.jsp.tagext.SimpleTagSupport;
 import javax.servlet.jsp.tagext.DynamicAttributes;
-import java.util.ArrayList;
-import java.io.IOException;
+import javax.servlet.jsp.tagext.SimpleTagSupport;
 
 /**
  * SimpleTag handler that echoes all its attributes 

==================================================
HelloWorldSimpleTag.java
index c607f1cff1..db7f2b8f21 100644
--- a/webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/FindBookSimpleTag.java
+++ b/webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/FindBookSimpleTag.java
@@ -20,6 +20,7 @@ package jsp2.examples.simpletag;
 
 import javax.servlet.jsp.JspException;
 import javax.servlet.jsp.tagext.SimpleTagSupport;
+
 import jsp2.examples.BookBean;
 
 /**

==================================================
RepeatSimpleTag.java
index b63ef613de..f87736f9b7 100644
--- a/webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/HelloWorldSimpleTag.java
+++ b/webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/HelloWorldSimpleTag.java
@@ -18,9 +18,10 @@
 
 package jsp2.examples.simpletag;
 
+import java.io.IOException;
+
 import javax.servlet.jsp.JspException;
 import javax.servlet.jsp.tagext.SimpleTagSupport;
-import java.io.IOException;
 
 /**
  * SimpleTag handler that prints "Hello, world!"

==================================================
ShuffleSimpleTag.java
index 38633d9d76..d1dadcc759 100644
--- a/webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/RepeatSimpleTag.java
+++ b/webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/RepeatSimpleTag.java
@@ -18,9 +18,10 @@
 
 package jsp2.examples.simpletag;
 
+import java.io.IOException;
+
 import javax.servlet.jsp.JspException;
 import javax.servlet.jsp.tagext.SimpleTagSupport;
-import java.io.IOException;
 
 /**
  * SimpleTag handler that accepts a num attribute and 

==================================================
TileSimpleTag.java
index 896b3f8d30..d422d22c9e 100644
--- a/webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/ShuffleSimpleTag.java
+++ b/webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/ShuffleSimpleTag.java
@@ -18,10 +18,11 @@
 
 package jsp2.examples.simpletag;
 
+import java.io.IOException;
+
 import javax.servlet.jsp.JspException;
 import javax.servlet.jsp.tagext.JspFragment;
 import javax.servlet.jsp.tagext.SimpleTagSupport;
-import java.io.IOException;
 
 /**
  * SimpleTag handler that accepts takes three attributes of type

==================================================
DebugValidator.java
index 3a124fa830..31989b4591 100644
--- a/webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/TileSimpleTag.java
+++ b/webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/TileSimpleTag.java
@@ -18,9 +18,10 @@
 
 package jsp2.examples.simpletag;
 
+import java.io.IOException;
+
 import javax.servlet.jsp.JspException;
 import javax.servlet.jsp.tagext.SimpleTagSupport;
-import java.io.IOException;
 
 /**
  * Displays a tile as a single cell in a table.

==================================================
