427ec53fc29e6ab75da5c2e8ebe6cb1c5580efc1
==================================================
Tweak the message validation.
==================================================
Mark Emlyn
==================================================
Thu Aug 25 14:45:13 2011 +0000
==================================================
AjpAprProcessor.java
Tweak the message validation.
Body messages don't have terminators

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1161584 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AjpMessage.java
index 6ccbeab15e..078f2b6ab5 100644
--- a/java/org/apache/coyote/ajp/AjpAprProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpAprProcessor.java
@@ -372,7 +372,7 @@ public class AjpAprProcessor extends AbstractAjpProcessor<Long> {
             return false;
         }
 
-        bodyMessage.getBytes(bodyBytes);
+        bodyMessage.getBodyBytes(bodyBytes);
         empty = false;
         return true;
     }

==================================================
AjpNioProcessor.java
index 5bfd1a1b64..8986955a05 100644
--- a/java/org/apache/coyote/ajp/AjpMessage.java
+++ b/java/org/apache/coyote/ajp/AjpMessage.java
@@ -312,16 +312,30 @@ public class AjpMessage {
 
     
     public void getBytes(MessageBytes mb) {
+        doGetBytes(mb, true);
+    }
+    
+    public void getBodyBytes(MessageBytes mb) {
+        doGetBytes(mb, false);
+    }
+    
+    private void doGetBytes(MessageBytes mb, boolean terminated) {
         int length = getInt();
         if ((length == 0xFFFF) || (length == -1)) {
             mb.recycle();
             return;
         }
-        validatePos(pos + length + 1);
+        if (terminated) {
+            validatePos(pos + length + 1);
+        } else {
+            validatePos(pos + length);
+        }
         mb.setBytes(buf, pos, length);
         mb.getCharChunk().recycle(); // not valid anymore
         pos += length;
-        pos++; // Skip the terminating \0
+        if (terminated) {
+            pos++; // Skip the terminating \0
+        }
     }
     
     

==================================================
AjpProcessor.java
index f6500a1669..f1669dd96d 100644
--- a/java/org/apache/coyote/ajp/AjpNioProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpNioProcessor.java
@@ -378,7 +378,7 @@ public class AjpNioProcessor extends AbstractAjpProcessor<NioChannel> {
             return false;
         }
 
-        bodyMessage.getBytes(bodyBytes);
+        bodyMessage.getBodyBytes(bodyBytes);
         empty = false;
         return true;
     }

==================================================
