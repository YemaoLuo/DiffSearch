c47c3cf5f1d08405686ad893968dfe4235b6d9a5
==================================================
Fix BZ 57215. Ensure that the value returned by
==================================================
Mark Thomas
==================================================
Mon Nov 17 07:37:36 2014 +0000
==================================================
Request.java
Fix BZ 57215. Ensure that the value returned by
HttpServletRequest.getContextPath() is not decoded which also implies it
has not been normalized.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1640083 13f79535-47bb-0310-9956-ffa450edef68



==================================================
UDecoder.java
index 6903c2886f..6c4f6975b2 100644
--- a/java/org/apache/catalina/connector/Request.java
+++ b/java/org/apache/catalina/connector/Request.java
@@ -84,6 +84,7 @@ import org.apache.tomcat.util.ExceptionUtils;
 import org.apache.tomcat.util.buf.B2CConverter;
 import org.apache.tomcat.util.buf.ByteChunk;
 import org.apache.tomcat.util.buf.MessageBytes;
+import org.apache.tomcat.util.buf.UDecoder;
 import org.apache.tomcat.util.http.CookieProcessor;
 import org.apache.tomcat.util.http.FastHttpDateFormat;
 import org.apache.tomcat.util.http.Parameters;
@@ -1871,24 +1872,60 @@ public class Request
 
     /**
      * Return the portion of the request URI used to select the Context
-     * of the Request.
+     * of the Request. The value returned is not decoded which also implies it
+     * is not normalised.
      */
     @Override
     public String getContextPath() {
+        String canonicalContextPath = getServletContext().getContextPath();
         String uri = getRequestURI();
+        char[] uriChars = uri.toCharArray();
         int lastSlash = mappingData.contextSlashCount;
         int pos = 0;
+        // Need at least the number of slashed in the context path
         while (lastSlash > 0) {
-            pos = uri.indexOf('/', pos + 1);
+            pos = nextSlash(uriChars, pos + 1);
             if (pos == -1) {
                 return uri;
             }
             lastSlash--;
         }
+        // Now allow for normalization and/or encoding. Essentially, keep
+        // extending the candidate path up to the next slash until the decoded
+        //and normalized candidate path is the same as the canonical path.
+        String candidate = uri.substring(0, pos);
+        if (pos > 0) {
+            candidate = UDecoder.URLDecode(candidate);
+            candidate = org.apache.tomcat.util.http.RequestUtil.normalize(candidate);
+        }
+        while (!canonicalContextPath.equals(candidate)) {
+            pos = nextSlash(uriChars, pos + 1);
+            if (pos == -1) {
+                return uri;
+            }
+            candidate = uri.substring(0, pos);
+            candidate = UDecoder.URLDecode(candidate);
+            candidate = org.apache.tomcat.util.http.RequestUtil.normalize(candidate);
+        }
         return uri.substring(0, pos);
     }
 
 
+    private int nextSlash(char[] uri, int startPos) {
+        int len = uri.length;
+        int pos = startPos;
+        while (pos < len) {
+            if (uri[pos] == '/') {
+                return pos;
+            } else if (UDecoder.ALLOW_ENCODED_SLASH && uri[pos] == '%' && pos + 2 < len &&
+                    uri[pos+1] == '2' && (uri[pos + 2] == 'f' || uri[pos + 2] == 'F')) {
+                return pos;
+            }
+            pos++;
+        }
+        return -1;
+    }
+
     /**
      * Return the set of Cookies received with this Request. Triggers parsing of
      * the Cookie HTTP headers followed by conversion to Cookie objects if this

==================================================
TestRequest.java
index a6b23e46fc..3380d7afee 100644
--- a/java/org/apache/tomcat/util/buf/UDecoder.java
+++ b/java/org/apache/tomcat/util/buf/UDecoder.java
@@ -40,7 +40,7 @@ public final class UDecoder {
 
     private static final Log log = LogFactory.getLog(UDecoder.class);
 
-    private static final boolean ALLOW_ENCODED_SLASH =
+    public static final boolean ALLOW_ENCODED_SLASH =
         Boolean.valueOf(System.getProperty("org.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH", "false")).booleanValue();
 
     private static class DecodeException extends CharConversionException {

==================================================
