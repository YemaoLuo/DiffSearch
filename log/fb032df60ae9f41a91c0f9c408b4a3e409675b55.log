fb032df60ae9f41a91c0f9c408b4a3e409675b55
==================================================
javax.servlet.http.HttpServletRequest.upgrade(Class<T>) and javax.servlet.http.HttpServletRequestWrapper.upgrade(Class<T>) must throw ServletException when the instantiation of the provided class fails.
==================================================
Violeta Georgieva
==================================================
Thu Jul 4 04:03:09 2013 +0000
==================================================
HttpServletRequest.java
javax.servlet.http.HttpServletRequest.upgrade(Class<T>) and javax.servlet.http.HttpServletRequestWrapper.upgrade(Class<T>) must throw ServletException when the instantiation of the provided class fails.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1499642 13f79535-47bb-0310-9956-ffa450edef68



==================================================
HttpServletRequestWrapper.java
index 3ccda5d9e6..3f6d3b721f 100644
--- a/java/javax/servlet/http/HttpServletRequest.java
+++ b/java/javax/servlet/http/HttpServletRequest.java
@@ -510,8 +510,12 @@ public interface HttpServletRequest extends ServletRequest {
      * Protocol specific headers must have already been set before this method
      * is called.
      *
+     * @throws IOException
+     *             if an I/O error occurred during the upgrade
+     * @throws ServletException
+     *             if the given httpUpgradeHandlerClass fails to be instantiated
      * @since Servlet 3.1
      */
     public <T extends HttpUpgradeHandler> T upgrade(
-            Class<T> httpUpgradeHandlerClass) throws java.io.IOException;
+            Class<T> httpUpgradeHandlerClass) throws java.io.IOException, ServletException;
 }

==================================================
Request.java
index e7328901e2..a72a244047 100644
--- a/java/javax/servlet/http/HttpServletRequestWrapper.java
+++ b/java/javax/servlet/http/HttpServletRequestWrapper.java
@@ -370,7 +370,7 @@ public class HttpServletRequestWrapper extends ServletRequestWrapper implements
      */
     @Override
     public <T extends HttpUpgradeHandler> T upgrade(
-            Class<T> httpUpgradeHandlerClass) throws IOException {
+            Class<T> httpUpgradeHandlerClass) throws IOException, ServletException {
         return this._getHttpServletRequest().upgrade(httpUpgradeHandlerClass);
     }
 }

==================================================
RequestFacade.java
index 3830e84421..ff3875a84b 100644
--- a/java/org/apache/catalina/connector/Request.java
+++ b/java/org/apache/catalina/connector/Request.java
@@ -1878,13 +1878,13 @@ public class Request
      */
     @Override
     public <T extends HttpUpgradeHandler> T upgrade(
-            Class<T> httpUpgradeHandlerClass) throws java.io.IOException {
+            Class<T> httpUpgradeHandlerClass) throws java.io.IOException, ServletException {
 
         T handler;
         try {
             handler = (T) context.getInstanceManager().newInstance(httpUpgradeHandlerClass);
         } catch (InstantiationException | IllegalAccessException | InvocationTargetException | NamingException e) {
-            throw new IOException(e);
+            throw new ServletException(e);
         }
 
         coyoteRequest.action(ActionCode.UPGRADE, handler);

==================================================
TesterHttpServletRequest.java
index 9c440033cf..7cedf686f0 100644
--- a/java/org/apache/catalina/connector/RequestFacade.java
+++ b/java/org/apache/catalina/connector/RequestFacade.java
@@ -1113,7 +1113,7 @@ public class RequestFacade implements HttpServletRequest {
      */
     @Override
     public <T extends HttpUpgradeHandler> T upgrade(
-            Class<T> httpUpgradeHandlerClass) throws java.io.IOException {
+            Class<T> httpUpgradeHandlerClass) throws java.io.IOException, ServletException {
         return request.upgrade(httpUpgradeHandlerClass);
     }
 }

==================================================
