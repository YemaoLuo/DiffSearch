6b3701edd3d98b7932ca45cdcbafa5f40918a106
==================================================
Some more low(ish) hanging fruit from the allocation hit list. This accounts for ~8% due to the way Thread stores names.
==================================================
Mark Emlyn
==================================================
Sun Sep 23 21:09:22 2012 +0000
==================================================
CoyoteAdapter.java
Some more low(ish) hanging fruit from the allocation hit list. This accounts for ~8% due to the way Thread stores names.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1389145 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ConcurrentWeakHashMap.java
index a60045b989..e889e8f511 100644
--- a/java/org/apache/catalina/connector/CoyoteAdapter.java
+++ b/java/org/apache/catalina/connector/CoyoteAdapter.java
@@ -42,6 +42,7 @@ import org.apache.tomcat.util.buf.B2CConverter;
 import org.apache.tomcat.util.buf.ByteChunk;
 import org.apache.tomcat.util.buf.CharChunk;
 import org.apache.tomcat.util.buf.MessageBytes;
+import org.apache.tomcat.util.collections.ConcurrentWeakHashMap;
 import org.apache.tomcat.util.http.Cookies;
 import org.apache.tomcat.util.http.ServerCookie;
 import org.apache.tomcat.util.net.SSLSupport;
@@ -103,6 +104,9 @@ public class CoyoteAdapter implements Adapter {
     private final Connector connector;
 
 
+    private final ConcurrentWeakHashMap<Thread,String> threadNames =
+            new ConcurrentWeakHashMap<>();
+
     /**
      * The string manager for this package.
      */
@@ -427,7 +431,13 @@ public class CoyoteAdapter implements Adapter {
 
             // Parse and set Catalina and configuration specific
             // request parameters
-            req.getRequestProcessor().setWorkerThreadName(Thread.currentThread().getName());
+            Thread t = Thread.currentThread();
+            String threadName = threadNames.get(t);
+            if (threadName == null) {
+                threadName = t.getName();
+                threadNames.put(t, threadName);
+            }
+            req.getRequestProcessor().setWorkerThreadName(threadName);
             boolean postParseSuccess = postParseRequest(req, request, res, response);
             if (postParseSuccess) {
                 //check valves if we support async

==================================================
