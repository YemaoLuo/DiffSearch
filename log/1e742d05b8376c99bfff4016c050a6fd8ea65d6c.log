1e742d05b8376c99bfff4016c050a6fd8ea65d6c
==================================================
Fix possible small memory leak when investigating https://issues.apache.org/bugzilla/show_bug.cgi?id=52042
==================================================
Mark Emlyn
==================================================
Tue Oct 18 17:06:05 2011 +0000
==================================================
FastRemovalDequeue.java
Fix possible small memory leak when investigating https://issues.apache.org/bugzilla/show_bug.cgi?id=52042

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1185758 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestFastRemovalDequeue.java
index 60d729cba0..0c1180325e 100644
--- a/java/org/apache/jasper/util/FastRemovalDequeue.java
+++ b/java/org/apache/jasper/util/FastRemovalDequeue.java
@@ -50,9 +50,9 @@ public class FastRemovalDequeue<T> {
     /** Maximum size of the queue */
     private final int maxSize;
     /** First element of the queue. */
-    private Entry first;
+    protected Entry first;
     /** Last element of the queue. */
-    private Entry last;
+    protected Entry last;
     /** Size of the queue */
     private int size;
 
@@ -137,7 +137,9 @@ public class FastRemovalDequeue<T> {
             Entry element = first;
             first = first.getNext();
             content = element.getContent();
-            if (first != null) {
+            if (first == null) {
+                last =null;
+            } else {
                 first.setPrevious(null);
             }
             size--;
@@ -157,7 +159,9 @@ public class FastRemovalDequeue<T> {
             Entry element = last;
             last = last.getPrevious();
             content = element.getContent();
-            if (last != null) {
+            if (last == null) {
+                first = null;
+            } else {
                 last.setNext(null);
             }
             size--;

==================================================
