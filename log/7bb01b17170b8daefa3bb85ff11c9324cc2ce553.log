7bb01b17170b8daefa3bb85ff11c9324cc2ce553
==================================================
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=59220
==================================================
Mark Thomas
==================================================
Tue Apr 19 18:43:41 2016 +0000
==================================================
CoyoteAdapter.java
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=59220
Ensure that AsyncListener.onComplete() is called if the async request times out and the response is already committed.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1739975 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ActionCode.java
index 2421006e3f..70e2de81bc 100644
--- a/java/org/apache/catalina/connector/CoyoteAdapter.java
+++ b/java/org/apache/catalina/connector/CoyoteAdapter.java
@@ -253,6 +253,12 @@ public class CoyoteAdapter implements Adapter {
             AtomicBoolean error = new AtomicBoolean(false);
             res.action(ActionCode.IS_ERROR, error);
             if (error.get()) {
+                if (request.isAsyncCompleting()) {
+                    // Connection will be forcibly closed which will prevent
+                    // completion happening at the usual point. Need to trigger
+                    // call to onComplete() here.
+                    res.action(ActionCode.ASYNC_POST_PROCESS,  null);
+                }
                 success = false;
             }
         } catch (IOException e) {

==================================================
AjpProcessor.java
index ce33668de5..830624a928 100644
--- a/java/org/apache/coyote/ActionCode.java
+++ b/java/org/apache/coyote/ActionCode.java
@@ -188,6 +188,12 @@ public enum ActionCode {
     */
     ASYNC_IS_ERROR,
 
+    /**
+     * Callback to trigger post processing. Typically only used during error
+     * handling to trigger essential processing that otherwise would be skipped.
+     */
+    ASYNC_POST_PROCESS,
+
     /**
      * Callback to trigger the HTTP upgrade process.
      */

==================================================
Http11Processor.java
index 8965de161c..cfbaf7aa59 100644
--- a/java/org/apache/coyote/ajp/AjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpProcessor.java
@@ -596,6 +596,10 @@ public class AjpProcessor extends AbstractProcessor {
             result.set(asyncStateMachine.asyncTimeout());
             break;
         }
+        case ASYNC_POST_PROCESS: {
+            asyncStateMachine.asyncPostProcess();
+            break;
+        }
 
         // Servlet 3.1 non-blocking I/O
         case REQUEST_BODY_FULLY_READ: {

==================================================
StreamProcessor.java
index c0f0473098..8797efd333 100644
--- a/java/org/apache/coyote/http11/Http11Processor.java
+++ b/java/org/apache/coyote/http11/Http11Processor.java
@@ -901,6 +901,10 @@ public class Http11Processor extends AbstractProcessor {
             result.set(asyncStateMachine.asyncTimeout());
             break;
         }
+        case ASYNC_POST_PROCESS: {
+            asyncStateMachine.asyncPostProcess();
+            break;
+        }
 
         // Servlet 3.1 non-blocking I/O
         case REQUEST_BODY_FULLY_READ: {

==================================================
