69bcb14ea1222b2edd486b3b2fa83482de1b9e98
==================================================
Refactoring to remove unnecessary SET_WRITE_LISTENER action
==================================================
Mark Emlyn
==================================================
Thu May 9 20:18:50 2013 +0000
==================================================
ActionCode.java
Refactoring to remove unnecessary SET_WRITE_LISTENER action

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1480757 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Response.java
index c7baaab6b1..3decdd945a 100644
--- a/java/org/apache/coyote/ActionCode.java
+++ b/java/org/apache/coyote/ActionCode.java
@@ -200,11 +200,6 @@ public enum ActionCode {
      */
     UPGRADE,
 
-    /**
-     * Callback to trigger setting the WriteListener
-     */
-    SET_WRITE_LISTENER,
-
     /**
      * Indicator that Servlet is interested in being
      * notified when data is available to be read

==================================================
AbstractOutputBuffer.java
index f0205b4728..a07323dd5d 100644
--- a/java/org/apache/coyote/Response.java
+++ b/java/org/apache/coyote/Response.java
@@ -571,9 +571,6 @@ public final class Response {
                     sm.getString("response.notAsync"));
         }
 
-        this.listener = listener;
-        action(ActionCode.SET_WRITE_LISTENER, null);
-
         this.listener = listener;
     }
 }

==================================================
Http11NioProcessor.java
index 124670b2fd..77b718f85c 100644
--- a/java/org/apache/coyote/http11/AbstractOutputBuffer.java
+++ b/java/org/apache/coyote/http11/AbstractOutputBuffer.java
@@ -110,8 +110,8 @@ public abstract class AbstractOutputBuffer<S> implements OutputBuffer {
      * the possible need to write HTTP headers, there may be more than one write
      * to the OutputBuffer.
      */
-    protected volatile LinkedBlockingDeque<ByteBufferHolder> bufferedWrites =
-            null;
+    protected final LinkedBlockingDeque<ByteBufferHolder> bufferedWrites =
+            new LinkedBlockingDeque<>();
 
     /**
      * The max size of the buffered write buffer
@@ -619,17 +619,6 @@ public abstract class AbstractOutputBuffer<S> implements OutputBuffer {
     protected abstract boolean flushBuffer(boolean block) throws IOException;
 
 
-    /**
-     * Configure the blocking behaviour of the OutputBuffer.
-     */
-    public final void setBlocking(boolean blocking) {
-        if (blocking)
-            bufferedWrites = null;
-        else
-            bufferedWrites = new LinkedBlockingDeque<>();
-    }
-
-
     /**
      * Is standard Servlet blocking IO being used for output?
      */

==================================================
InternalNioOutputBuffer.java
index 858634d8ba..710eab75ec 100644
--- a/java/org/apache/coyote/http11/Http11NioProcessor.java
+++ b/java/org/apache/coyote/http11/Http11NioProcessor.java
@@ -520,8 +520,6 @@ public class Http11NioProcessor extends AbstractHttp11Processor<NioChannel> {
             if (asyncStateMachine.asyncDispatch()) {
                 ((NioEndpoint)endpoint).dispatchForEvent(this.socket.getSocket(),SocketStatus.OPEN_READ, true);
             }
-        } else if (actionCode == ActionCode.SET_WRITE_LISTENER) {
-            outputBuffer.setBlocking(false);
         }
     }
 

==================================================
