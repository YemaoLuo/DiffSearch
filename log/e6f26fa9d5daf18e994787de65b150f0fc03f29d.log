e6f26fa9d5daf18e994787de65b150f0fc03f29d
==================================================
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=64074
==================================================
Mark Thomas
==================================================
Tue Jan 14 17:09:01 2020 +0000
==================================================
CachedResource.java
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=64074

InputStreams for directories obtained from resource URLs now return a
directory listing consistent with the behaviour of FileURLConnection.
In addition to restoring the behaviour that was lost as a result of the
introduction of CachedResourceURLConnection, it expands the feature to
include packedWARs and to take account of resource JARs.


==================================================
TestCachedResource.java
index 712a463747..b77862aa25 100644
--- a/java/org/apache/catalina/webresources/CachedResource.java
+++ b/java/org/apache/catalina/webresources/CachedResource.java
@@ -24,8 +24,12 @@ import java.net.MalformedURLException;
 import java.net.URL;
 import java.net.URLConnection;
 import java.net.URLStreamHandler;
+import java.nio.charset.Charset;
 import java.security.Permission;
 import java.security.cert.Certificate;
+import java.text.Collator;
+import java.util.Arrays;
+import java.util.Locale;
 import java.util.jar.JarEntry;
 import java.util.jar.JarFile;
 import java.util.jar.Manifest;
@@ -412,6 +416,22 @@ public class CachedResource implements WebResource {
     }
 
 
+    /*
+     * Mimics the behaviour of FileURLConnection.getInputStream for a directory.
+     * Deliberately uses default locale.
+     */
+    private static InputStream buildInputStream(String[] files) {
+        Arrays.sort(files, Collator.getInstance(Locale.getDefault()));
+        StringBuilder result = new StringBuilder();
+        for (String file : files) {
+            result.append(file);
+            // Every entry is followed by \n including the last
+            result.append('\n');
+        }
+        return new ByteArrayInputStream(result.toString().getBytes(Charset.defaultCharset()));
+    }
+
+
     private static class CachedResourceURLStreamHandler extends URLStreamHandler {
 
         private final URL resourceURL;
@@ -480,7 +500,12 @@ public class CachedResource implements WebResource {
 
         @Override
         public InputStream getInputStream() throws IOException {
-            return getResource().getInputStream();
+            WebResource resource = getResource();
+            if (resource.isDirectory()) {
+                return buildInputStream(resource.getWebResourceRoot().list(webAppPath));
+            } else {
+                return getResource().getInputStream();
+            }
         }
 
         @Override
@@ -531,7 +556,12 @@ public class CachedResource implements WebResource {
 
         @Override
         public InputStream getInputStream() throws IOException {
-            return getResource().getInputStream();
+            WebResource resource = getResource();
+            if (resource.isDirectory()) {
+                return buildInputStream(resource.getWebResourceRoot().list(webAppPath));
+            } else {
+                return getResource().getInputStream();
+            }
         }
 
         @Override

==================================================
