0e0324a9f3a4ded831d80bc31dab82da51bc4d3c
==================================================
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=60035
==================================================
Mark Thomas
==================================================
Fri Aug 26 18:18:39 2016 +0000
==================================================
Nio2Endpoint.java
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=60035
Fix a potential connection leak if the client drops a TLS connection before the handshake completes.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1757903 13f79535-47bb-0310-9956-ffa450edef68



==================================================
NioEndpoint.java
index b486004e4a..65cfe0bf96 100644
--- a/java/org/apache/tomcat/util/net/Nio2Endpoint.java
+++ b/java/org/apache/tomcat/util/net/Nio2Endpoint.java
@@ -1608,14 +1608,15 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel> {
                 int handshake = -1;
 
                 try {
-                    // For STOP there is no point trying to handshake as the
-                    // Poller has been stopped.
-                    if (!socketWrapper.getSocket().isHandshakeComplete() && event == SocketEvent.ERROR) {
-                        handshake = -1;
-                    } else if (socketWrapper.getSocket().isHandshakeComplete() ||
-                            event == SocketEvent.STOP ||
-                            event == SocketEvent.ERROR) {
+                    if (socketWrapper.getSocket().isHandshakeComplete()) {
+                        // No TLS handshaking required. Let the handler
+                        // process this socket / event combination.
                         handshake = 0;
+                    } else if (event == SocketEvent.STOP || event == SocketEvent.DISCONNECT ||
+                            event == SocketEvent.ERROR) {
+                        // Unable to complete the TLS handshake. Treat it as
+                        // if the handshake failed.
+                        handshake = -1;
                     } else {
                         handshake = socketWrapper.getSocket().handshake();
                         // The handshake process reads/writes from/to the

==================================================
