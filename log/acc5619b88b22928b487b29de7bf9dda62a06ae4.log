acc5619b88b22928b487b29de7bf9dda62a06ae4
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51475
==================================================
Mark Emlyn
==================================================
Tue Jul 5 16:45:38 2011 +0000
==================================================
GzipInterceptor.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51475
Handle messages larger than the buffer size. Expand test cases to cover this.
Based on a patch by Christian StÃ¶ber.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1143134 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestGzipInterceptor.java
index d34d5394f2..dca44a1f51 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/GzipInterceptor.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/GzipInterceptor.java
@@ -77,18 +77,20 @@ public class GzipInterceptor extends ChannelInterceptorBase {
     }
     
     /**
-     * TODO Fix to create an automatically growing buffer.
-     * @param data byte[]
-     * @return byte[]
+     * @param data  Data to decompress
+     * @return      Decompressed data
      * @throws IOException
      */
     public static byte[] decompress(byte[] data) throws IOException {
+        ByteArrayOutputStream bout = new ByteArrayOutputStream();
         ByteArrayInputStream bin = new ByteArrayInputStream(data);
         GZIPInputStream gin = new GZIPInputStream(bin);
         byte[] tmp = new byte[DEFAULT_BUFFER_SIZE];
-        int length = gin.read(tmp);
-        byte[] result = new byte[length];
-        System.arraycopy(tmp,0,result,0,length);
-        return result;
+        int length = 0;
+        while (length > -1) {
+            bout.write(tmp, 0, length);
+            length = gin.read(tmp);
+        }
+        return bout.toByteArray();
     }
 }

==================================================
