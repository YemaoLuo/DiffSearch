222e1451460c14fe5a899b9176a7e44959c932b2
==================================================
Code clean-up - no functional change
==================================================
Mark Thomas
==================================================
Thu Apr 13 17:12:16 2023 +0100
==================================================
EJB.java
Code clean-up - no functional change


==================================================
Session.java
index 635ba7f4f6..82db99ed39 100644
--- a/java/jakarta/ejb/EJB.java
+++ b/java/jakarta/ejb/EJB.java
@@ -21,15 +21,20 @@ import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-@Target({ElementType.METHOD, ElementType.TYPE, ElementType.FIELD})
+@Target({ ElementType.METHOD, ElementType.TYPE, ElementType.FIELD })
 @Retention(RetentionPolicy.RUNTIME)
 
 public @interface EJB {
     String name() default "";
+
     String description() default "";
+
     @SuppressWarnings("rawtypes") // Can't use Class<?> because API needs to match specification
     Class beanInterface() default java.lang.Object.class;
+
     String beanName() default "";
+
     String mappedName() default "";
+
     String lookup() default "";
 }

==================================================
MimeMessage.java
index d638f81c57..87ff869d3b 100644
--- a/java/jakarta/mail/Session.java
+++ b/java/jakarta/mail/Session.java
@@ -23,6 +23,7 @@ public class Session {
     public static Session getInstance(Properties props, Authenticator auth) {
         return null;
     }
+
     public static Session getInstance(Properties props) {
         return null;
     }

==================================================
PersistenceContext.java
index 08cdb80330..39644f0509 100644
--- a/java/jakarta/mail/internet/MimeMessage.java
+++ b/java/jakarta/mail/internet/MimeMessage.java
@@ -23,9 +23,11 @@ public class MimeMessage implements MimePart {
     public MimeMessage(Session session) {
         // Dummy implementation
     }
+
     public void setFrom(InternetAddress from) {
         // Dummy implementation
     }
+
     public void setSubject(String subject) {
         // Dummy implementation
     }

==================================================
PersistenceProperty.java
index 9b5f8cada4..78ece9e615 100644
--- a/java/jakarta/persistence/PersistenceContext.java
+++ b/java/jakarta/persistence/PersistenceContext.java
@@ -21,13 +21,17 @@ import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-@Target({ElementType.TYPE, ElementType.METHOD, ElementType.FIELD})
+@Target({ ElementType.TYPE, ElementType.METHOD, ElementType.FIELD })
 @Retention(RetentionPolicy.RUNTIME)
 
 public @interface PersistenceContext {
     String name() default "";
+
     String unitName() default "";
+
     PersistenceContextType type() default PersistenceContextType.TRANSACTION;
+
     PersistenceProperty[] properties() default {};
+
     SynchronizationType synchronization() default SynchronizationType.SYNCHRONIZED;
 }

==================================================
PersistenceUnit.java
index 74b9827362..3ed05e1982 100644
--- a/java/jakarta/persistence/PersistenceProperty.java
+++ b/java/jakarta/persistence/PersistenceProperty.java
@@ -25,5 +25,6 @@ import java.lang.annotation.Target;
 
 public @interface PersistenceProperty {
     String name();
+
     String value();
 }

==================================================
Synchronization.java
index 258ce1ad5e..0580f11112 100644
--- a/java/jakarta/persistence/PersistenceUnit.java
+++ b/java/jakarta/persistence/PersistenceUnit.java
@@ -21,10 +21,11 @@ import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-@Target({ElementType.TYPE, ElementType.METHOD, ElementType.FIELD})
+@Target({ ElementType.TYPE, ElementType.METHOD, ElementType.FIELD })
 @Retention(RetentionPolicy.RUNTIME)
 
 public @interface PersistenceUnit {
     String name() default "";
+
     String unitName() default "";
 }

==================================================
Transaction.java
index 129c1d741b..b188911cda 100644
--- a/java/jakarta/transaction/Synchronization.java
+++ b/java/jakarta/transaction/Synchronization.java
@@ -18,5 +18,6 @@ package jakarta.transaction;
 
 public interface Synchronization {
     void beforeCompletion();
+
     void afterCompletion(int status);
 }

==================================================
TransactionManager.java
index b7922acf5a..1f031d2a8b 100644
--- a/java/jakarta/transaction/Transaction.java
+++ b/java/jakarta/transaction/Transaction.java
@@ -20,20 +20,16 @@ import javax.transaction.xa.XAResource;
 
 public interface Transaction {
 
-    void commit() throws RollbackException, HeuristicMixedException,
-            HeuristicRollbackException, SecurityException,
+    void commit() throws RollbackException, HeuristicMixedException, HeuristicRollbackException, SecurityException,
             IllegalStateException, SystemException;
 
-    boolean delistResource(XAResource xaRes, int flag)
-            throws IllegalStateException, SystemException;
+    boolean delistResource(XAResource xaRes, int flag) throws IllegalStateException, SystemException;
 
-    boolean enlistResource(XAResource xaRes)
-            throws RollbackException, IllegalStateException, SystemException;
+    boolean enlistResource(XAResource xaRes) throws RollbackException, IllegalStateException, SystemException;
 
     int getStatus() throws SystemException;
 
-    void registerSynchronization(Synchronization sync)
-            throws RollbackException, IllegalStateException, SystemException;
+    void registerSynchronization(Synchronization sync) throws RollbackException, IllegalStateException, SystemException;
 
     void rollback() throws IllegalStateException, SystemException;
 

==================================================
UserTransaction.java
index 86cfdf78d7..2bd58e16c8 100644
--- a/java/jakarta/transaction/TransactionManager.java
+++ b/java/jakarta/transaction/TransactionManager.java
@@ -19,19 +19,16 @@ package jakarta.transaction;
 public interface TransactionManager {
     void begin() throws NotSupportedException, SystemException;
 
-    void commit() throws RollbackException, HeuristicMixedException,
-            HeuristicRollbackException, SecurityException,
+    void commit() throws RollbackException, HeuristicMixedException, HeuristicRollbackException, SecurityException,
             IllegalStateException, SystemException;
 
     int getStatus() throws SystemException;
 
     Transaction getTransaction() throws SystemException;
 
-    void resume(Transaction tobj) throws InvalidTransactionException,
-            IllegalStateException, SystemException;
+    void resume(Transaction tobj) throws InvalidTransactionException, IllegalStateException, SystemException;
 
-    void rollback()
-            throws IllegalStateException, SecurityException, SystemException;
+    void rollback() throws IllegalStateException, SecurityException, SystemException;
 
     void setRollbackOnly() throws IllegalStateException, SystemException;
 

==================================================
WebServiceRef.java
index cf770a608a..0506c9c102 100644
--- a/java/jakarta/transaction/UserTransaction.java
+++ b/java/jakarta/transaction/UserTransaction.java
@@ -19,12 +19,10 @@ package jakarta.transaction;
 public interface UserTransaction {
     void begin() throws NotSupportedException, SystemException;
 
-    void commit() throws RollbackException, HeuristicMixedException,
-            HeuristicRollbackException, SecurityException,
+    void commit() throws RollbackException, HeuristicMixedException, HeuristicRollbackException, SecurityException,
             IllegalStateException, SystemException;
 
-    void rollback()
-            throws IllegalStateException, SecurityException, SystemException;
+    void rollback() throws IllegalStateException, SecurityException, SystemException;
 
     void setRollbackOnly() throws IllegalStateException, SystemException;
 

==================================================
