20fb145276782267c435255d0b40d2000c2b092d
==================================================
Align to proposed method signatures
==================================================
Mark Emlyn
==================================================
Wed Feb 27 16:50:20 2013 +0000
==================================================
ServerContainerImpl.java
Align to proposed method signatures

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1450839 13f79535-47bb-0310-9956-ffa450edef68



==================================================
WsSci.java
index 8292a54d7f..3081c9158b 100644
--- a/java/org/apache/tomcat/websocket/server/ServerContainerImpl.java
+++ b/java/org/apache/tomcat/websocket/server/ServerContainerImpl.java
@@ -115,10 +115,10 @@ public class ServerContainerImpl extends WsWebSocketContainer {
      *                          instances
      * @throws DeploymentException
      */
-    public void publishServer(ServerEndpointConfiguration sec)
+    public void deploy(ServerEndpointConfiguration sec)
             throws DeploymentException {
         if (servletContext == null) {
-            throw new IllegalArgumentException(
+            throw new DeploymentException(
                     sm.getString("serverContainer.servletContextMissing"));
         }
         String path = sec.getPath();
@@ -149,11 +149,11 @@ public class ServerContainerImpl extends WsWebSocketContainer {
      *
      * @param pojo   The annotated POJO
      */
-    public void publishServer(Class<?> pojo) {
+    public void deploy(Class<?> pojo) throws DeploymentException {
 
         ServerEndpoint annotation = pojo.getAnnotation(ServerEndpoint.class);
         if (annotation == null) {
-            throw new IllegalArgumentException(
+            throw new DeploymentException(
                     sm.getString("serverContainer.missingAnnotation",
                             pojo.getName()));
         }

==================================================
TestWsWebSocketContainer.java
index cafe889f4e..1f5bc000c6 100644
--- a/java/org/apache/tomcat/websocket/server/WsSci.java
+++ b/java/org/apache/tomcat/websocket/server/WsSci.java
@@ -22,6 +22,7 @@ import javax.servlet.ServletContainerInitializer;
 import javax.servlet.ServletContext;
 import javax.servlet.ServletException;
 import javax.servlet.annotation.HandlesTypes;
+import javax.websocket.DeploymentException;
 import javax.websocket.server.ServerEndpoint;
 
 /**
@@ -45,7 +46,11 @@ public class WsSci implements ServletContainerInitializer {
         ServerContainerImpl sc = ServerContainerImpl.getServerContainer();
         sc.setServletContext(ctx);
         for (Class<?> clazz : clazzes) {
-            sc.publishServer(clazz);
+            try {
+                sc.deploy(clazz);
+            } catch (DeploymentException e) {
+                throw new ServletException(e);
+            }
         }
     }
 }

==================================================
TesterEchoServer.java
index 15b8ff53e3..613c196dc2 100644
--- a/test/org/apache/tomcat/websocket/TestWsWebSocketContainer.java
+++ b/test/org/apache/tomcat/websocket/TestWsWebSocketContainer.java
@@ -414,7 +414,11 @@ public class TestWsWebSocketContainer extends TomcatBaseTest {
             super.contextInitialized(sce);
             ServerContainerImpl sc = ServerContainerImpl.getServerContainer();
             sc.setServletContext(sce.getServletContext());
-            sc.publishServer(BlockingPojo.class);
+            try {
+                sc.deploy(BlockingPojo.class);
+            } catch (DeploymentException e) {
+                throw new IllegalStateException(e);
+            }
         }
     }
 
@@ -520,7 +524,7 @@ public class TestWsWebSocketContainer extends TomcatBaseTest {
             super.contextInitialized(sce);
             ServerContainerImpl sc = ServerContainerImpl.getServerContainer();
             try {
-                sc.publishServer(ServerEndpointConfigurationBuilder.create(
+                sc.deploy(ServerEndpointConfigurationBuilder.create(
                         ConstantTxEndpoint.class, PATH).build());
                 if (TestWsWebSocketContainer.timoutOnContainer) {
                     sc.setAsyncSendTimeout(TIMEOUT_MS);

==================================================
WsConfigListener.java
index 5c4203f9b1..1d44420356 100644
--- a/test/org/apache/tomcat/websocket/TesterEchoServer.java
+++ b/test/org/apache/tomcat/websocket/TesterEchoServer.java
@@ -20,6 +20,7 @@ import java.io.IOException;
 import java.nio.ByteBuffer;
 
 import javax.servlet.ServletContextEvent;
+import javax.websocket.DeploymentException;
 import javax.websocket.OnMessage;
 import javax.websocket.Session;
 import javax.websocket.server.ServerEndpoint;
@@ -39,8 +40,12 @@ public class TesterEchoServer {
             super.contextInitialized(sce);
             ServerContainerImpl sc = ServerContainerImpl.getServerContainer();
             sc.setServletContext(sce.getServletContext());
-            sc.publishServer(Async.class);
-            sc.publishServer(Basic.class);
+            try {
+                sc.deploy(Async.class);
+                sc.deploy(Basic.class);
+            } catch (DeploymentException e) {
+                throw new IllegalStateException(e);
+            }
         }
     }
 

==================================================
