803209f0db915c6471524c0e5e7befad1ea79cbf
==================================================
Java 7 <>
==================================================
Mark Emlyn
==================================================
Mon Aug 27 20:23:42 2012 +0000
==================================================
TestDigestAuthenticator.java
Java 7 <>

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1377826 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestNonLoginAndBasicAuthenticator.java
index 7a2c132ce9..476e3f27be 100644
--- a/test/org/apache/catalina/authenticator/TestDigestAuthenticator.java
+++ b/test/org/apache/catalina/authenticator/TestDigestAuthenticator.java
@@ -175,14 +175,13 @@ public class TestDigestAuthenticator extends TomcatBaseTest {
         } else {
             digestUri = uri;
         }
-        List<String> auth = new ArrayList<String>();
+        List<String> auth = new ArrayList<>();
         auth.add(buildDigestResponse(user, pwd, digestUri, realm, "null",
                 "null", nc1, cnonce, qop));
-        Map<String,List<String>> reqHeaders = new HashMap<String,List<String>>();
+        Map<String,List<String>> reqHeaders = new HashMap<>();
         reqHeaders.put(CLIENT_AUTH_HEADER, auth);
 
-        Map<String,List<String>> respHeaders =
-            new HashMap<String,List<String>>();
+        Map<String,List<String>> respHeaders = new HashMap<>();
 
         // The first request will fail - but we need to extract the nonce
         ByteChunk bc = new ByteChunk();

==================================================
TestSSOnonLoginAndBasicAuthenticator.java
index 99e2917679..c89cd60ad5 100644
--- a/test/org/apache/catalina/authenticator/TestNonLoginAndBasicAuthenticator.java
+++ b/test/org/apache/catalina/authenticator/TestNonLoginAndBasicAuthenticator.java
@@ -155,10 +155,8 @@ public class TestNonLoginAndBasicAuthenticator extends TomcatBaseTest {
     private void doTestNonLogin(String uri, boolean expectedReject,
             int expectedRC) throws Exception {
 
-        Map<String,List<String>> reqHeaders =
-                new HashMap<String,List<String>>();
-        Map<String,List<String>> respHeaders =
-                new HashMap<String,List<String>>();
+        Map<String,List<String>> reqHeaders = new HashMap<>();
+        Map<String,List<String>> respHeaders = new HashMap<>();
 
         ByteChunk bc = new ByteChunk();
         int rc = getUrl(HTTP_PREFIX + getPort() + uri, bc, reqHeaders,
@@ -180,10 +178,8 @@ public class TestNonLoginAndBasicAuthenticator extends TomcatBaseTest {
             boolean expectedReject2, int expectedRC2) throws Exception {
 
         // the first access attempt should be challenged
-        Map<String,List<String>> reqHeaders1 =
-                new HashMap<String,List<String>>();
-        Map<String,List<String>> respHeaders1 =
-                new HashMap<String,List<String>>();
+        Map<String,List<String>> reqHeaders1 = new HashMap<>();
+        Map<String,List<String>> respHeaders1 = new HashMap<>();
 
         ByteChunk bc = new ByteChunk();
         int rc = getUrl(HTTP_PREFIX + getPort() + uri, bc, reqHeaders1,
@@ -206,13 +202,12 @@ public class TestNonLoginAndBasicAuthenticator extends TomcatBaseTest {
         String authScheme = verifyAuthSchemeCase ? "bAsIc " : "Basic ";
         String authLine = authScheme + base64auth;
 
-        List<String> auth = new ArrayList<String>();
+        List<String> auth = new ArrayList<>();
         auth.add(authLine);
-        Map<String,List<String>> reqHeaders2 = new HashMap<String,List<String>>();
+        Map<String,List<String>> reqHeaders2 = new HashMap<>();
         reqHeaders2.put(CLIENT_AUTH_HEADER, auth);
 
-        Map<String,List<String>> respHeaders2 =
-            new HashMap<String,List<String>>();
+        Map<String,List<String>> respHeaders2 = new HashMap<>();
 
         bc.recycle();
         rc = getUrl(HTTP_PREFIX + getPort() + uri, bc, reqHeaders2,

==================================================
TestSSOnonLoginAndDigestAuthenticator.java
index 06ea775b67..4b27cfab2d 100644
--- a/test/org/apache/catalina/authenticator/TestSSOnonLoginAndBasicAuthenticator.java
+++ b/test/org/apache/catalina/authenticator/TestSSOnonLoginAndBasicAuthenticator.java
@@ -189,13 +189,11 @@ public class TestSSOnonLoginAndBasicAuthenticator extends TomcatBaseTest {
             boolean expectedReject, int expectedRC)
             throws Exception {
 
-        Map<String,List<String>> reqHeaders =
-                new HashMap<String,List<String>>();
+        Map<String,List<String>> reqHeaders = new HashMap<>();
         if (addCookies) {
             addCookies(reqHeaders);
         }
-        Map<String,List<String>> respHeaders =
-                new HashMap<String,List<String>>();
+        Map<String,List<String>> respHeaders = new HashMap<>();
 
         ByteChunk bc = new ByteChunk();
         int rc = getUrl(HTTP_PREFIX + getPort() + uri, bc, reqHeaders,
@@ -217,10 +215,8 @@ public class TestSSOnonLoginAndBasicAuthenticator extends TomcatBaseTest {
             boolean expectedReject2, int expectedRC2) throws Exception {
 
         // the first access attempt should be challenged
-        Map<String,List<String>> reqHeaders1 =
-                new HashMap<String,List<String>>();
-        Map<String,List<String>> respHeaders1 =
-                new HashMap<String,List<String>>();
+        Map<String,List<String>> reqHeaders1 = new HashMap<>();
+        Map<String,List<String>> respHeaders1 = new HashMap<>();
 
         ByteChunk bc = new ByteChunk();
         int rc = getUrl(HTTP_PREFIX + getPort() + uri, bc, reqHeaders1,
@@ -242,13 +238,12 @@ public class TestSSOnonLoginAndBasicAuthenticator extends TomcatBaseTest {
         String base64auth = Base64.encode(credentialsBytes);
         String authLine = "Basic " + base64auth;
 
-        List<String> auth = new ArrayList<String>();
+        List<String> auth = new ArrayList<>();
         auth.add(authLine);
-        Map<String,List<String>> reqHeaders2 = new HashMap<String,List<String>>();
+        Map<String,List<String>> reqHeaders2 = new HashMap<>();
         reqHeaders2.put(CLIENT_AUTH_HEADER, auth);
 
-        Map<String,List<String>> respHeaders2 =
-            new HashMap<String,List<String>>();
+        Map<String,List<String>> respHeaders2 = new HashMap<>();
 
         bc.recycle();
         rc = getUrl(HTTP_PREFIX + getPort() + uri, bc, reqHeaders2,

==================================================
