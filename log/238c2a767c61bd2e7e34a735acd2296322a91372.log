238c2a767c61bd2e7e34a735acd2296322a91372
==================================================
SNI support for NIO2
==================================================
Mark Thomas
==================================================
Mon Apr 13 13:53:52 2015 +0000
==================================================
Nio2Endpoint.java
SNI support for NIO2

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1673191 13f79535-47bb-0310-9956-ffa450edef68



==================================================
SecureNio2Channel.java
index 107664cec6..f6e4d53e68 100644
--- a/java/org/apache/tomcat/util/net/Nio2Endpoint.java
+++ b/java/org/apache/tomcat/util/net/Nio2Endpoint.java
@@ -422,27 +422,15 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel> {
 
             Nio2Channel channel = (useCaches) ? nioChannels.pop() : null;
             if (channel == null) {
-                // SSL setup
+                SocketBufferHandler bufhandler = new SocketBufferHandler(
+                        socketProperties.getAppReadBufSize(),
+                        socketProperties.getAppWriteBufSize(),
+                        socketProperties.getDirectBuffer());
                 if (isSSLEnabled()) {
-                    SSLEngine engine = createSSLEngine();
-                    int appBufferSize = engine.getSession().getApplicationBufferSize();
-                    SocketBufferHandler bufhandler = new SocketBufferHandler(
-                            Math.max(appBufferSize, socketProperties.getAppReadBufSize()),
-                            Math.max(appBufferSize, socketProperties.getAppWriteBufSize()),
-                            socketProperties.getDirectBuffer());
-                    channel = new SecureNio2Channel(engine, bufhandler, this);
+                    channel = new SecureNio2Channel(bufhandler, this);
                 } else {
-                    SocketBufferHandler bufhandler = new SocketBufferHandler(
-                            socketProperties.getAppReadBufSize(),
-                            socketProperties.getAppWriteBufSize(),
-                            socketProperties.getDirectBuffer());
                     channel = new Nio2Channel(bufhandler);
                 }
-            } else {
-                if (isSSLEnabled()) {
-                    SSLEngine engine = createSSLEngine();
-                    ((SecureNio2Channel) channel).setSSLEngine(engine);
-                }
             }
             Nio2SocketWrapper socketWrapper = new Nio2SocketWrapper(channel, this);
             channel.reset(socket, socketWrapper);

==================================================
