8f6ca7651f8959b748245c5bee60b224506ffae2
==================================================
Pull up setting output buffer
==================================================
Mark Thomas
==================================================
Sun Nov 23 22:49:46 2014 +0000
==================================================
AbstractAjpProcessor.java
Pull up setting output buffer

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1641270 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AjpAprProcessor.java
index dd6ea8fadb..9ca0322c13 100644
--- a/java/org/apache/coyote/ajp/AbstractAjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AbstractAjpProcessor.java
@@ -290,6 +290,8 @@ public abstract class AbstractAjpProcessor<S> extends AbstractProcessor<S> {
         getBodyMessageArray = new byte[getBodyMessage.getLen()];
         System.arraycopy(getBodyMessage.getBuffer(), 0, getBodyMessageArray,
                 0, getBodyMessage.getLen());
+
+        response.setOutputBuffer(new SocketOutputBuffer());
     }
 
 

==================================================
AjpNio2Processor.java
index a400d174a4..b8dbbeeeb3 100644
--- a/java/org/apache/coyote/ajp/AjpAprProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpAprProcessor.java
@@ -47,8 +47,6 @@ public class AjpAprProcessor extends AbstractAjpProcessor<Long> {
 
         super(packetSize, endpoint);
 
-        response.setOutputBuffer(new SocketOutputBuffer());
-
         // Allocate input and output buffers
         inputBuffer = ByteBuffer.allocateDirect(packetSize * 2);
         inputBuffer.limit(0);

==================================================
AjpNioProcessor.java
index 479d06ff2c..b3763aae80 100644
--- a/java/org/apache/coyote/ajp/AjpNio2Processor.java
+++ b/java/org/apache/coyote/ajp/AjpNio2Processor.java
@@ -42,7 +42,6 @@ public class AjpNio2Processor extends AbstractAjpProcessor<Nio2Channel> {
 
     public AjpNio2Processor(int packetSize, Nio2Endpoint endpoint0) {
         super(packetSize, endpoint0);
-        response.setOutputBuffer(new SocketOutputBuffer());
     }
 
     @Override

==================================================
