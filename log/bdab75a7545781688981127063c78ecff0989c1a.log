bdab75a7545781688981127063c78ecff0989c1a
==================================================
Update the internal fork of Apache Commons BCEL to r1829827 to add early access Java 11 support to the annotation scanning code.
==================================================
Mark Thomas
==================================================
Mon Apr 23 08:12:37 2018 +0000
==================================================
Const.java
Update the internal fork of Apache Commons BCEL to r1829827 to add early access Java 11 support to the annotation scanning code.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1829830 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Constant.java
index d3da9a0f44..402b304de4 100644
--- a/java/org/apache/tomcat/util/bcel/Const.java
+++ b/java/org/apache/tomcat/util/bcel/Const.java
@@ -49,63 +49,63 @@ public final class Const {
      * @see  <a href="http://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.7">
      * The Constant Pool in The Java Virtual Machine Specification</a>
      */
-    public static final byte CONSTANT_Utf8           = 1;
+    public static final byte CONSTANT_Utf8               = 1;
 
     /**
      * Marks a constant pool entry as type Integer.
      * @see  <a href="http://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.4">
      * The Constant Pool in The Java Virtual Machine Specification</a>
      */
-    public static final byte CONSTANT_Integer        = 3;
+    public static final byte CONSTANT_Integer            = 3;
 
     /**
      * Marks a constant pool entry as type Float.
      * @see  <a href="http://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.4">
      * The Constant Pool in The Java Virtual Machine Specification</a>
      */
-    public static final byte CONSTANT_Float          = 4;
+    public static final byte CONSTANT_Float              = 4;
 
     /**
      * Marks a constant pool entry as type Long.
      * @see  <a href="http://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.5">
      * The Constant Pool in The Java Virtual Machine Specification</a>
      */
-    public static final byte CONSTANT_Long           = 5;
+    public static final byte CONSTANT_Long               = 5;
 
     /**
      * Marks a constant pool entry as type Double.
      * @see  <a href="http://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.5">
      * The Constant Pool in The Java Virtual Machine Specification</a>
      */
-    public static final byte CONSTANT_Double         = 6;
+    public static final byte CONSTANT_Double             = 6;
 
     /**
      * Marks a constant pool entry as a Class
      * @see  <a href="http://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.1">
      * The Constant Pool in The Java Virtual Machine Specification</a>
      */
-    public static final byte CONSTANT_Class          = 7;
+    public static final byte CONSTANT_Class              = 7;
 
     /**
-     * Marks a constant pool entry as a Field Reference.
-     * @see  <a href="http://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.2">
+     * Marks a constant pool entry as type String
+     * @see  <a href="http://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.3">
      * The Constant Pool in The Java Virtual Machine Specification</a>
      */
-    public static final byte CONSTANT_Fieldref         = 9;
+    public static final byte CONSTANT_String             = 8;
 
     /**
-     * Marks a constant pool entry as type String
-     * @see  <a href="http://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.3">
+     * Marks a constant pool entry as a Field Reference.
+     * @see  <a href="http://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.2">
      * The Constant Pool in The Java Virtual Machine Specification</a>
      */
-    public static final byte CONSTANT_String         = 8;
+    public static final byte CONSTANT_Fieldref           = 9;
 
     /**
      * Marks a constant pool entry as a Method Reference.
      * @see  <a href="http://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.2">
      * The Constant Pool in The Java Virtual Machine Specification</a>
      */
-    public static final byte CONSTANT_Methodref        = 10;
+    public static final byte CONSTANT_Methodref          = 10;
 
     /**
      * Marks a constant pool entry as an Interface Method Reference.
@@ -119,28 +119,35 @@ public final class Const {
      * @see  <a href="http://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.6">
      * The Constant Pool in The Java Virtual Machine Specification</a>
      */
-    public static final byte CONSTANT_NameAndType      = 12;
+    public static final byte CONSTANT_NameAndType        = 12;
 
     /**
      * Marks a constant pool entry as a Method Handle.
      * @see  <a href="http://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.8">
      * The Constant Pool in The Java Virtual Machine Specification</a>
      */
-    public static final byte CONSTANT_MethodHandle     = 15;
+    public static final byte CONSTANT_MethodHandle       = 15;
 
     /**
      * Marks a constant pool entry as a Method Type.
      * @see  <a href="http://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.9">
      * The Constant Pool in The Java Virtual Machine Specification</a>
      */
-    public static final byte CONSTANT_MethodType       = 16;
+    public static final byte CONSTANT_MethodType         = 16;
+
+    /**
+     * Marks a constant pool entry as dynamically computed.
+     * @see  <a href="https://bugs.openjdk.java.net/secure/attachment/74618/constant-dynamic.html">
+     * Change request for JEP 309</a>
+     */
+    public static final byte CONSTANT_Dynamic            = 17;
 
     /**
      * Marks a constant pool entry as an Invoke Dynamic
      * @see  <a href="http://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.10">
      * The Constant Pool in The Java Virtual Machine Specification</a>
      */
-    public static final byte CONSTANT_InvokeDynamic    = 18;
+    public static final byte CONSTANT_InvokeDynamic      = 18;
 
     /**
      * Marks a constant pool entry as a Module Reference.
@@ -172,7 +179,7 @@ public final class Const {
     "CONSTANT_Class", "CONSTANT_String", "CONSTANT_Fieldref",
     "CONSTANT_Methodref", "CONSTANT_InterfaceMethodref",
     "CONSTANT_NameAndType", "", "", "CONSTANT_MethodHandle",
-    "CONSTANT_MethodType", "", "CONSTANT_InvokeDynamic",
+    "CONSTANT_MethodType", "CONSTANT_Dynamic", "CONSTANT_InvokeDynamic",
     "CONSTANT_Module", "CONSTANT_Package"};
 
     public static String getConstantName(int index) {

==================================================
ConstantClass.java
index bc31326db8..c235f44cae 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Constant.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Constant.java
@@ -59,26 +59,27 @@ public abstract class Constant {
     /**
      * Read one constant from the given input, the type depends on a tag byte.
      *
-     * @param input Input stream
+     * @param dataInput Input stream
      * @return Constant object
+     * @throws IOException if an I/O error occurs reading from the given {@code dataInput}.
+     * @throws ClassFormatException if the next byte is not recognized
      */
-    static Constant readConstant(final DataInput input) throws IOException,
-            ClassFormatException {
-        final byte b = input.readByte(); // Read tag byte
+    static Constant readConstant(final DataInput dataInput) throws IOException, ClassFormatException {
+        final byte b = dataInput.readByte(); // Read tag byte
         int skipSize;
         switch (b) {
             case Const.CONSTANT_Class:
-                return new ConstantClass(input);
+                return new ConstantClass(dataInput);
             case Const.CONSTANT_Integer:
-                return new ConstantInteger(input);
+                return new ConstantInteger(dataInput);
             case Const.CONSTANT_Float:
-                return new ConstantFloat(input);
+                return new ConstantFloat(dataInput);
             case Const.CONSTANT_Long:
-                return new ConstantLong(input);
+                return new ConstantLong(dataInput);
             case Const.CONSTANT_Double:
-                return new ConstantDouble(input);
+                return new ConstantDouble(dataInput);
             case Const.CONSTANT_Utf8:
-                return ConstantUtf8.getInstance(input);
+                return ConstantUtf8.getInstance(dataInput);
             case Const.CONSTANT_String:
             case Const.CONSTANT_MethodType:
             case Const.CONSTANT_Module:
@@ -92,17 +93,17 @@ public abstract class Constant {
             case Const.CONSTANT_Methodref:
             case Const.CONSTANT_InterfaceMethodref:
             case Const.CONSTANT_NameAndType:
+            case Const.CONSTANT_Dynamic:
             case Const.CONSTANT_InvokeDynamic:
                 skipSize = 4; // unsigned short, unsigned short
                 break;
             default:
                 throw new ClassFormatException("Invalid byte tag in constant pool: " + b);
         }
-        Utility.skipFully(input, skipSize);
+        Utility.skipFully(dataInput, skipSize);
         return null;
     }
 
-
     @Override
     public String toString() {
         return "[" + tag + "]";

==================================================
