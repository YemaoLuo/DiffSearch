889a98002c2acf5f97aa45eac2bce13bbf7ac2af
==================================================
Fix Eclipse warnings in webapps
==================================================
Mark Emlyn
==================================================
Wed Aug 4 20:52:23 2010 +0000
==================================================
Async0.java
Fix Eclipse warnings in webapps

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@982399 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Async1.java
index 194beb8f66..fabafe3d97 100644
--- a/webapps/examples/WEB-INF/classes/async/Async0.java
+++ b/webapps/examples/WEB-INF/classes/async/Async0.java
@@ -45,6 +45,7 @@ public class Async0 extends HttpServlet {
             final AsyncContext actx = req.startAsync();
             actx.setTimeout(Long.MAX_VALUE);
             Runnable run = new Runnable() {
+                @Override
                 public void run() {
                     try {
                         req.setAttribute("dispatch", Boolean.TRUE);

==================================================
Async2.java
index 907e1d4d48..a2a3e462ae 100644
--- a/webapps/examples/WEB-INF/classes/async/Async1.java
+++ b/webapps/examples/WEB-INF/classes/async/Async1.java
@@ -38,6 +38,7 @@ public class Async1 extends HttpServlet {
         final AsyncContext actx = req.startAsync();
         actx.setTimeout(30*1000);
         Runnable run = new Runnable() {
+            @Override
             public void run() {
                 try {
                     String path = "/jsp/async/async1.jsp";

==================================================
Stockticker.java
index bb39ff13b6..ac37e506af 100644
--- a/webapps/examples/WEB-INF/classes/async/Async2.java
+++ b/webapps/examples/WEB-INF/classes/async/Async2.java
@@ -38,6 +38,7 @@ public class Async2 extends HttpServlet {
         final AsyncContext actx = req.startAsync();
         actx.setTimeout(30*1000);
         Runnable run = new Runnable() {
+            @Override
             public void run() {
                 try {
                     Thread.currentThread().setName("Async2-Thread");

==================================================
ChatServlet.java
index f61402cf9d..efe404ccba 100644
--- a/webapps/examples/WEB-INF/classes/async/Stockticker.java
+++ b/webapps/examples/WEB-INF/classes/async/Stockticker.java
@@ -59,6 +59,7 @@ public class Stockticker implements Runnable {
             }
         }
 
+        @Override
         public void run() {
             try {
 

==================================================
CompressionFilter.java
index 851b2f3a7d..1549c47aed 100644
--- a/webapps/examples/WEB-INF/classes/chat/ChatServlet.java
+++ b/webapps/examples/WEB-INF/classes/chat/ChatServlet.java
@@ -70,6 +70,7 @@ public class ChatServlet
      * @throws IOException
      * @throws ServletException
      */
+    @Override
     public void event(CometEvent event)
         throws IOException, ServletException {
 
@@ -216,6 +217,7 @@ public class ChatServlet
          * The background thread that listens for incoming TCP/IP connections and
          * hands them off to an appropriate processor.
          */
+        @Override
         public void run() {
 
             // Loop until we receive a shutdown command

==================================================
ExampleFilter.java
index a5dd340a60..8a8465bb19 100644
--- a/webapps/examples/WEB-INF/classes/compressionFilters/CompressionFilter.java
+++ b/webapps/examples/WEB-INF/classes/compressionFilters/CompressionFilter.java
@@ -68,6 +68,7 @@ public class CompressionFilter implements Filter{
      * @param filterConfig The filter configuration object
      */
 
+    @Override
     public void init(FilterConfig filterConfig) {
 
         config = filterConfig;
@@ -101,6 +102,7 @@ public class CompressionFilter implements Filter{
     /**
     * Take this filter out of service.
     */
+    @Override
     public void destroy() {
 
         this.config = null;
@@ -124,6 +126,7 @@ public class CompressionFilter implements Filter{
      * (<code>chain.doFilter()</code>), <br>
      **/
 
+    @Override
     public void doFilter ( ServletRequest request, ServletResponse response,
                         FilterChain chain ) throws IOException, ServletException {
 

==================================================
SetCharacterEncodingFilter.java
index b617a3eab6..d782e4a0c7 100644
--- a/webapps/examples/WEB-INF/classes/filters/ExampleFilter.java
+++ b/webapps/examples/WEB-INF/classes/filters/ExampleFilter.java
@@ -69,6 +69,7 @@ public final class ExampleFilter implements Filter {
     /**
      * Take this filter out of service.
      */
+    @Override
     public void destroy() {
 
         this.attribute = null;
@@ -88,6 +89,7 @@ public final class ExampleFilter implements Filter {
      * @exception IOException if an input/output error occurs
      * @exception ServletException if a servlet error occurs
      */
+    @Override
     public void doFilter(ServletRequest request, ServletResponse response,
                          FilterChain chain)
         throws IOException, ServletException {
@@ -112,6 +114,7 @@ public final class ExampleFilter implements Filter {
      *
      * @param fConfig The filter configuration object
      */
+    @Override
     public void init(FilterConfig fConfig) throws ServletException {
 
         this.filterConfig = fConfig;

==================================================
EchoAttributesTag.java
index 8cf512ae81..81dbffcba6 100644
--- a/webapps/examples/WEB-INF/classes/filters/SetCharacterEncodingFilter.java
+++ b/webapps/examples/WEB-INF/classes/filters/SetCharacterEncodingFilter.java
@@ -88,6 +88,7 @@ public class SetCharacterEncodingFilter implements Filter {
     /**
      * Take this filter out of service.
      */
+    @Override
     public void destroy() {
 
         this.encoding = null;
@@ -107,6 +108,7 @@ public class SetCharacterEncodingFilter implements Filter {
      * @exception IOException if an input/output error occurs
      * @exception ServletException if a servlet error occurs
      */
+    @Override
     public void doFilter(ServletRequest request, ServletResponse response,
                          FilterChain chain)
         throws IOException, ServletException {
@@ -129,6 +131,7 @@ public class SetCharacterEncodingFilter implements Filter {
      *
      * @param fConfig The filter configuration object
      */
+    @Override
     public void init(FilterConfig fConfig) throws ServletException {
 
         this.filterConfig = fConfig;

==================================================
ContextListener.java
index 9a9e9d10f2..89cbec2f0e 100644
--- a/webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/EchoAttributesTag.java
+++ b/webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/EchoAttributesTag.java
@@ -45,6 +45,7 @@ public class EchoAttributesTag
         }
     }
 
+    @Override
     public void setDynamicAttribute( String uri, String localName, 
         Object value ) 
         throws JspException

==================================================
SessionListener.java
index 8152b5f159..cd7a73a5ac 100644
--- a/webapps/examples/WEB-INF/classes/listeners/ContextListener.java
+++ b/webapps/examples/WEB-INF/classes/listeners/ContextListener.java
@@ -55,6 +55,7 @@ public final class ContextListener
      *
      * @param event The servlet context attribute event
      */
+    @Override
     public void attributeAdded(ServletContextAttributeEvent event) {
 
         log("attributeAdded('" + event.getName() + "', '" +
@@ -68,6 +69,7 @@ public final class ContextListener
      *
      * @param event The servlet context attribute event
      */
+    @Override
     public void attributeRemoved(ServletContextAttributeEvent event) {
 
         log("attributeRemoved('" + event.getName() + "', '" +
@@ -81,6 +83,7 @@ public final class ContextListener
      *
      * @param event The servlet context attribute event
      */
+    @Override
     public void attributeReplaced(ServletContextAttributeEvent event) {
 
         log("attributeReplaced('" + event.getName() + "', '" +
@@ -94,6 +97,7 @@ public final class ContextListener
      *
      * @param event The servlet context event
      */
+    @Override
     public void contextDestroyed(ServletContextEvent event) {
 
         log("contextDestroyed()");
@@ -107,6 +111,7 @@ public final class ContextListener
      *
      * @param event The servlet context event
      */
+    @Override
     public void contextInitialized(ServletContextEvent event) {
 
         this.context = event.getServletContext();

==================================================
