f191433b852a4ae33b8a17fdb4b0ca4d7c3e8b22
==================================================
Improve processing of errors that are wrapped into InvocationTargetException.
==================================================
Konstantin Kolinko
==================================================
Sun Nov 13 22:59:35 2011 +0000
==================================================
AprLifecycleListener.java
Improve processing of errors that are wrapped into InvocationTargetException.
Rethrow errors that must be rethrown.
Add helper methods to ExceptionUtils classes.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1201542 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ExceptionUtils.java
index ac5bc0f839..802909749b 100644
--- a/java/org/apache/catalina/core/AprLifecycleListener.java
+++ b/java/org/apache/catalina/core/AprLifecycleListener.java
@@ -108,6 +108,7 @@ public class AprLifecycleListener
                     try {
                         initializeSSL();
                     } catch (Throwable t) {
+                        t = ExceptionUtils.unwrapInvocationTargetException(t);
                         ExceptionUtils.handleThrowable(t);
                         log.error(sm.getString("aprListener.sslInit"), t);
                     }
@@ -129,6 +130,7 @@ public class AprLifecycleListener
                 try {
                     terminateAPR();
                 } catch (Throwable t) {
+                    t = ExceptionUtils.unwrapInvocationTargetException(t);
                     ExceptionUtils.handleThrowable(t);
                     log.info(sm.getString("aprListener.aprDestroy"));
                 }
@@ -180,6 +182,7 @@ public class AprLifecycleListener
             patch = clazz.getField("TCN_PATCH_VERSION").getInt(null);
             apver = major * 1000 + minor * 100 + patch;
         } catch (Throwable t) {
+            t = ExceptionUtils.unwrapInvocationTargetException(t);
             ExceptionUtils.handleThrowable(t);
             log.info(sm.getString("aprListener.aprInit",
                     System.getProperty("java.library.path")));
@@ -196,6 +199,7 @@ public class AprLifecycleListener
                 // is below required.
                 terminateAPR();
             } catch (Throwable t) {
+                t = ExceptionUtils.unwrapInvocationTargetException(t);
                 ExceptionUtils.handleThrowable(t);
             }
             return;

==================================================
ExceptionUtils.java
index d7c6b37231..4304108e8f 100644
--- a/java/org/apache/jasper/util/ExceptionUtils.java
+++ b/java/org/apache/jasper/util/ExceptionUtils.java
@@ -16,6 +16,9 @@
  */
 package org.apache.jasper.util;
 
+import java.lang.reflect.InvocationTargetException;
+
+
 /**
  * Utilities for handling Throwables and Exceptions.
  */
@@ -35,4 +38,19 @@ public class ExceptionUtils {
         }
         // All other instances of Throwable will be silently swallowed
     }
+
+    /**
+     * Checks whether the supplied Throwable is an instance of
+     * <code>InvocationTargetException</code> and returns the throwable that is
+     * wrapped by it, if there is any.
+     *
+     * @param t the Throwable to check
+     * @return <code>t</code> or <code>t.getCause()</code>
+     */
+    public static Throwable unwrapInvocationTargetException(Throwable t) {
+        if (t instanceof InvocationTargetException && t.getCause() != null) {
+            return t.getCause();
+        }
+        return t;
+    }
 }

==================================================
