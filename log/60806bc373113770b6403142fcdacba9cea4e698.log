60806bc373113770b6403142fcdacba9cea4e698
==================================================
Switch from ServletContext attribute to init-param. Note that Jasper was incorrectly (now correctly) looking at init-params in some places.
==================================================
Mark Emlyn
==================================================
Fri Nov 22 17:19:36 2013 +0000
==================================================
Globals.java
Switch from ServletContext attribute to init-param. Note that Jasper was incorrectly (now correctly) looking at init-params in some places.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1544606 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ApplicationContext.java
index aeb675fb48..74d7a41e87 100644
--- a/java/org/apache/catalina/Globals.java
+++ b/java/org/apache/catalina/Globals.java
@@ -272,21 +272,21 @@ public final class Globals {
 
 
     /**
-     * Name of the ServletContext attribute that determines if the JSP engine
+     * Name of the ServletContext init-param that determines if the JSP engine
      * should validate *.tld files when parsing them.
      * <p>
      * This must be kept in sync with org.apache.jasper.Constants
      */
-    public static final String JASPER_XML_VALIDATION_TLD_ATTR =
+    public static final String JASPER_XML_VALIDATION_TLD_INIT_PARAM =
             "org.apache.jasper.XML_VALIDATE_TLD";
 
 
     /**
-     * Name of the ServletContext attribute that determines if the JSP engine
+     * Name of the ServletContext init-param that determines if the JSP engine
      * should validate *.jspx and *.tagx files when parsing them.
      * <p>
      * This must be kept in sync with org.apache.jasper.Constants
      */
-    public static final String JASPER_XML_VALIDATION_DOC_ATTR =
+    public static final String JASPER_XML_VALIDATION_DOC_INIT_PARAM =
             "org.apache.jasper.XML_VALIDATE_DOC";
 }

==================================================
Constants.java
index 56fc4bf3fb..55e638b150 100644
--- a/java/org/apache/catalina/core/ApplicationContext.java
+++ b/java/org/apache/catalina/core/ApplicationContext.java
@@ -220,15 +220,6 @@ public class ApplicationContext
      */
     @Override
     public Object getAttribute(String name) {
-        // Special handling for XML validation as the context setting must
-        // always override anything that might have been set by an application.
-        if (Globals.JASPER_XML_VALIDATION_TLD_ATTR.equals(name) &&
-                context.getTldValidation()) {
-            return Boolean.TRUE;
-        } else if (Globals.JASPER_XML_VALIDATION_DOC_ATTR.equals(name) &&
-                context.getXmlValidationJspDoc()) {
-            return Boolean.TRUE;
-        }
         return (attributes.get(name));
     }
 
@@ -241,14 +232,6 @@ public class ApplicationContext
     public Enumeration<String> getAttributeNames() {
         Set<String> names = new HashSet<>();
         names.addAll(attributes.keySet());
-        // Special handling for XML validation as this attribute will always be
-        // available if validation has been enabled on the context
-        if (context.getTldValidation()) {
-            names.add(Globals.JASPER_XML_VALIDATION_TLD_ATTR);
-        }
-        if (context.getXmlValidationJspDoc()) {
-            names.add(Globals.JASPER_XML_VALIDATION_DOC_ATTR);
-        }
         return Collections.enumeration(names);
     }
 
@@ -321,6 +304,15 @@ public class ApplicationContext
      */
     @Override
     public String getInitParameter(final String name) {
+        // Special handling for XML validation as the context setting must
+        // always override anything that might have been set by an application.
+        if (Globals.JASPER_XML_VALIDATION_TLD_INIT_PARAM.equals(name) &&
+                context.getTldValidation()) {
+            return "true";
+        } else if (Globals.JASPER_XML_VALIDATION_DOC_INIT_PARAM.equals(name) &&
+                context.getXmlValidationJspDoc()) {
+            return "true";
+        }
         return parameters.get(name);
     }
 
@@ -331,7 +323,17 @@ public class ApplicationContext
      */
     @Override
     public Enumeration<String> getInitParameterNames() {
-        return Collections.enumeration(parameters.keySet());
+        Set<String> names = new HashSet<>();
+        names.addAll(parameters.keySet());
+        // Special handling for XML validation as this attribute will always be
+        // available if validation has been enabled on the context
+        if (context.getTldValidation()) {
+            names.add(Globals.JASPER_XML_VALIDATION_TLD_INIT_PARAM);
+        }
+        if (context.getXmlValidationJspDoc()) {
+            names.add(Globals.JASPER_XML_VALIDATION_DOC_INIT_PARAM);
+        }
+        return Collections.enumeration(names);
     }
 
 

==================================================
JspC.java
index 5419484299..5175550b52 100644
--- a/java/org/apache/jasper/Constants.java
+++ b/java/org/apache/jasper/Constants.java
@@ -153,19 +153,19 @@ public class Constants {
 
 
     /**
-     * Name of the ServletContext attribute that determines if the XML parsers
+     * Name of the ServletContext init-param that determines if the XML parsers
      * used for *.tld files will be validating or not.
      * <p>
      * This must be kept in sync with org.apache.catalina.Globals
      */
-    public static final String XML_VALIDATION_TLD_ATTR = "org.apache.jasper.XML_VALIDATE_TLD";
+    public static final String XML_VALIDATION_TLD_INIT_PARAM = "org.apache.jasper.XML_VALIDATE_TLD";
 
 
     /**
-     * Name of the ServletContext attribute that determines if the XML parsers
+     * Name of the ServletContext init-param that determines if the XML parsers
      * used for *.jspx and *.tagx files will be validating or not.
      * <p>
      * This must be kept in sync with org.apache.catalina.Globals
      */
-    public static final String XML_VALIDATION_DOC_ATTR = "org.apache.jasper.XML_VALIDATE_DOC";
+    public static final String XML_VALIDATION_DOC_INIT_PARAM = "org.apache.jasper.XML_VALIDATE_DOC";
 }

==================================================
ImplicitTagLibraryInfo.java
index 99ad883cde..83b28733a7 100644
--- a/java/org/apache/jasper/JspC.java
+++ b/java/org/apache/jasper/JspC.java
@@ -1450,11 +1450,13 @@ public class JspC extends Task implements Options {
 
         context = new JspCServletContext(log, resourceBase, classLoader);
         if (isValidateJspDoc()) {
-            context.setAttribute(Constants.XML_VALIDATION_DOC_ATTR,
-                    Boolean.TRUE);
+            context.setInitParameter(Constants.XML_VALIDATION_DOC_INIT_PARAM, "true");
+        }
+        if (isValidateTld()) {
+            context.setInitParameter(Constants.XML_VALIDATION_TLD_INIT_PARAM, "true");
         }
 
-        TldScanner scanner = new TldScanner(context, true, validateTld);
+        TldScanner scanner = new TldScanner(context, true, isValidateTld());
         scanner.setClassLoader(classLoader);
 
         try {

==================================================
JspDocumentParser.java
index e6aec7292d..f7996fc7e7 100644
--- a/java/org/apache/jasper/compiler/ImplicitTagLibraryInfo.java
+++ b/java/org/apache/jasper/compiler/ImplicitTagLibraryInfo.java
@@ -121,7 +121,7 @@ class ImplicitTagLibraryInfo extends TagLibraryInfo {
                         TldResourcePath resourcePath = new TldResourcePath(url, path);
                         boolean validate = Boolean.parseBoolean(
                                 ctxt.getServletContext().getInitParameter(
-                                        Constants.XML_VALIDATION_TLD_ATTR));
+                                        Constants.XML_VALIDATION_TLD_INIT_PARAM));
                         TldParser parser = new TldParser(true, validate, new ImplicitTldRuleSet());
                         taglibXml = parser.parse(resourcePath);
                     } catch (IOException | SAXException e) {

==================================================
TldCache.java
index 36ef56d81d..869257af98 100644
--- a/java/org/apache/jasper/compiler/JspDocumentParser.java
+++ b/java/org/apache/jasper/compiler/JspDocumentParser.java
@@ -166,7 +166,7 @@ class JspDocumentParser
 
             boolean validate = Boolean.parseBoolean(
                     pc.getJspCompilationContext().getServletContext().getInitParameter(
-                            Constants.XML_VALIDATION_DOC_ATTR));
+                            Constants.XML_VALIDATION_DOC_INIT_PARAM));
             jspDocParser.isValidating = validate;
 
             // Parse the input

==================================================
JasperInitializer.java
index 1d3ee9cff1..8aa1bfec08 100644
--- a/java/org/apache/jasper/compiler/TldCache.java
+++ b/java/org/apache/jasper/compiler/TldCache.java
@@ -73,7 +73,7 @@ public class TldCache {
             this.tldResourcePathTaglibXmlMap.put(tldResourcePath, cacheEntry);
         }
         boolean validate = Boolean.parseBoolean(
-                servletContext.getInitParameter(Constants.XML_VALIDATION_TLD_ATTR));
+                servletContext.getInitParameter(Constants.XML_VALIDATION_TLD_INIT_PARAM));
         tldParser = new TldParser(true, validate);
     }
 

==================================================
