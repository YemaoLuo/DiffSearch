cd6f355037e5ea86b52b428e3af0e1945f73d0e0
==================================================
Javadoc improvements.
==================================================
Mark Thomas
==================================================
Fri Oct 9 13:31:39 2015 +0000
==================================================
ServletContext.java
Javadoc improvements.
Use inherited Javadoc since it generally has more information. Fill in gaps using implementation Javadoc where available.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1707724 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ApplicationContext.java
index 99cd0dedc7..bee6a5ef8e 100644
--- a/java/javax/servlet/ServletContext.java
+++ b/java/javax/servlet/ServletContext.java
@@ -573,8 +573,7 @@ public interface ServletContext {
      *    use this method.
      * @since Servlet 3.0
      */
-    public ServletRegistration.Dynamic addServlet(String servletName,
-            String className);
+    public ServletRegistration.Dynamic addServlet(String servletName, String className);
 
     /**
      * Register a servlet instance for use in this ServletContext.
@@ -592,14 +591,15 @@ public interface ServletContext {
      *    use this method.
      * @since Servlet 3.0
      */
-    public ServletRegistration.Dynamic addServlet(String servletName,
-            Servlet servlet);
+    public ServletRegistration.Dynamic addServlet(String servletName, Servlet servlet);
 
     /**
-     * TODO SERVLET3 - Add comments
-     * @param servletName  TODO
-     * @param servletClass TODO
-     * @return TODO
+     * Add servlet to context.
+     * @param   servletName  Name of servlet to add
+     * @param   servletClass Class of servlet to add
+     * @return  <code>null</code> if the servlet has already been fully defined,
+     *          else a {@link javax.servlet.ServletRegistration.Dynamic} object
+     *          that can be used to further configure the servlet
      * @throws IllegalStateException
      *             If the context has already been initialised
      * @throws UnsupportedOperationException    If called from a
@@ -667,7 +667,6 @@ public interface ServletContext {
      */
     public Map<String, ? extends ServletRegistration> getServletRegistrations();
 
-    /**
     /**
      * Add filter to context.
      * @param   filterName  Name of filter to add
@@ -788,8 +787,9 @@ public interface ServletContext {
     public SessionCookieConfig getSessionCookieConfig();
 
     /**
-     * TODO SERVLET3 - Add comments
-     * @param sessionTrackingModes TODO
+     * Configures the available session tracking modes for this web application.
+     * @param sessionTrackingModes The session tracking modes to use for this
+     *        web application
      * @throws IllegalArgumentException
      *             If sessionTrackingModes specifies
      *             {@link SessionTrackingMode#SSL} in combination with any other
@@ -809,8 +809,15 @@ public interface ServletContext {
             Set<SessionTrackingMode> sessionTrackingModes);
 
     /**
-     * TODO SERVLET3 - Add comments
-     * @return TODO
+     * Obtains the default session tracking modes for this web application.
+     * By default {@link SessionTrackingMode#URL} is always supported, {@link
+     * SessionTrackingMode#COOKIE} is supported unless the <code>cookies</code>
+     * attribute has been set to <code>false</code> for the context and {@link
+     * SessionTrackingMode#SSL} is supported if at least one of the connectors
+     * used by this context has the attribute <code>secure</code> set to
+     * <code>true</code>.
+     * @return The set of default session tracking modes for this web
+     *         application
      * @throws UnsupportedOperationException    If called from a
      *    {@link ServletContextListener#contextInitialized(ServletContextEvent)}
      *    method of a {@link ServletContextListener} that was not defined in a
@@ -823,8 +830,10 @@ public interface ServletContext {
     public Set<SessionTrackingMode> getDefaultSessionTrackingModes();
 
     /**
-     * TODO SERVLET3 - Add comments
-     * @return TODO
+     * Obtains the currently enabled session tracking modes for this web
+     * application.
+     * @return The value supplied via {@link #setSessionTrackingModes(Set)} if
+     *         one was previously set, else return the defaults
      * @throws UnsupportedOperationException    If called from a
      *    {@link ServletContextListener#contextInitialized(ServletContextEvent)}
      *    method of a {@link ServletContextListener} that was not defined in a

==================================================
