244b4987834ff0175d345ae0f8fcc32503fa2ec1
==================================================
Fix an problem highlighted by the JSP 2.1 TCK. Only provide merged 3.0+ web.xml for 3.0+ apps.
==================================================
Mark Emlyn
==================================================
Wed Dec 30 21:50:33 2009 +0000
==================================================
ContextConfig.java
Fix an problem highlighted by the JSP 2.1 TCK. Only provide merged 3.0+ web.xml for 3.0+ apps.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@894718 13f79535-47bb-0310-9956-ffa450edef68



==================================================
WebRuleSet.java
index 17edb9c276..4a4ed9a930 100644
--- a/java/org/apache/catalina/startup/ContextConfig.java
+++ b/java/org/apache/catalina/startup/ContextConfig.java
@@ -1190,7 +1190,13 @@ public class ContextConfig
         InputSource contextWebXml = getContextWebXmlSource();
         parseWebXml(contextWebXml, webXml, false);
         
-        if (!webXml.isMetadataComplete()) {
+        // Assuming 0 is safe for what is required in this case
+        double webXmlVersion = 0;
+        if (webXml.getVersion() != null) {
+            webXmlVersion = Double.parseDouble(webXml.getVersion());
+        }
+        
+        if (webXmlVersion >= 3 && !webXml.isMetadataComplete()) {
             // Process /WEB-INF/classes for annotations
             URL webinfClasses;
             try {
@@ -1219,19 +1225,21 @@ public class ContextConfig
 
             // Apply merged web.xml to Context
             webXml.configureContext(context);
+            
+            // Make the merged web.xml available to other components,
+            // specifically Jasper, to save those components from having to
+            // re-generate it.
+            String mergedWebXml = webXml.toXml();
+            context.getServletContext().setAttribute(
+                   org.apache.tomcat.util.scan.Constants.MERGED_WEB_XML,
+                    mergedWebXml);
+            if (context.getLogEffectiveWebXml()) {
+                log.info("web.xml:\n" + mergedWebXml);
+            }
         } else {
-            // Apply merged web.xml to Context
+            // Apply unmerged web.xml to Context
             webXml.configureContext(context);
-        }
-        // Make the merged web.xml available to other components, specifically
-        // Jasper, to save those components from having to re-generate it.
-        String mergedWebXml = webXml.toXml();
-        context.getServletContext().setAttribute(
-               org.apache.tomcat.util.scan.Constants.MERGED_WEB_XML,
-                mergedWebXml);
-        if (context.getLogEffectiveWebXml()) {
-            log.info("web.xml:\n" + mergedWebXml);
-        }
+        }        
     }
 
     

==================================================
WebXml.java
index 55fc3b2de3..dea67e4522 100644
--- a/java/org/apache/catalina/startup/WebRuleSet.java
+++ b/java/org/apache/catalina/startup/WebRuleSet.java
@@ -160,6 +160,8 @@ public class WebRuleSet extends RuleSetBase {
                          new SetPublicIdRule("setPublicId"));
         digester.addRule(fullPrefix,
                          new IgnoreAnnotationsRule());
+        digester.addRule(fullPrefix,
+                new VersionRule());
 
         if (fragment) {
             // web-fragment.xml
@@ -1006,6 +1008,33 @@ final class IgnoreAnnotationsRule extends Rule {
 
 }
 
+/**
+ * A Rule that records the spec version of the web.xml being parsed
+ * 
+ */
+
+final class VersionRule extends Rule {
+
+    public VersionRule() {
+        // NO-OP
+    }
+
+    @Override
+    public void begin(String namespace, String name, Attributes attributes)
+        throws Exception {
+        WebXml webxml = (WebXml) digester.peek(digester.getCount() - 1);
+        webxml.setVersion(attributes.getValue("version"));
+        
+        if (digester.getLogger().isDebugEnabled()) {
+            digester.getLogger().debug
+                (webxml.getClass().getName() + ".setVersion( " +
+                        webxml.getVersion() + ")");
+        }
+    }
+
+}
+
+
 /**
  * A rule that logs a warning if absolute ordering is configured.
  */

==================================================
