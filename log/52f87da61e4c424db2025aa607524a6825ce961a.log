52f87da61e4c424db2025aa607524a6825ce961a
==================================================
Resource JARs should only be used for static resources. Block class loader resources.
==================================================
Mark Thomas
==================================================
Thu Jan 22 20:44:18 2015 +0000
==================================================
WebResourceSet.java
Resource JARs should only be used for static resources. Block class loader resources.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1654050 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AbstractResourceSet.java
index fe035b2820..3d32763df4 100644
--- a/java/org/apache/catalina/WebResourceSet.java
+++ b/java/org/apache/catalina/WebResourceSet.java
@@ -92,17 +92,32 @@ public interface WebResourceSet extends Lifecycle {
     void setRoot(WebResourceRoot root);
 
     /**
-     * Are resources provided by this resource set only intended for use by
-     * calls to {@link WebResourceRoot#getClassLoaderResource(String)}.
+     * Should resources returned by this resource set only be included in any
+     * results when the lookup is explicitly looking for class loader resources.
+     * i.e. should these resources be excluded from look ups that are explicitly
+     * looking for static (non-class loader) resources.
      *
      * @return <code>true</code> if these resources should only be used for
-     *         calls to {@link WebResourceRoot#getClassLoaderResource(String)},
-     *         otherwise <code>false</code>
+     *         class loader resource lookups, otherwise <code>false</code>
      */
     boolean getClassLoaderOnly();
 
     void setClassLoaderOnly(boolean classLoaderOnly);
 
+    /**
+     * Should resources returned by this resource set only be included in any
+     * results when the lookup is explicitly looking for static (non-class
+     * loader) resources. i.e. should these resources be excluded from look ups
+     * that are explicitly looking for class loader resources.
+     *
+     * @return <code>true</code> if these resources should only be used for
+     *         static (non-class loader) resource lookups, otherwise
+     *         <code>false</code>
+     */
+    boolean getStaticOnly();
+
+    void setStaticOnly(boolean staticOnly);
+
     /**
      * Obtain the base URL for this set of resources. One of the uses of this is
      * to grant read permissions to the resources when running under a security

==================================================
EmptyResourceSet.java
index 05e14eb705..713eb3bd41 100644
--- a/java/org/apache/catalina/webresources/AbstractResourceSet.java
+++ b/java/org/apache/catalina/webresources/AbstractResourceSet.java
@@ -31,6 +31,7 @@ public abstract class AbstractResourceSet extends LifecycleBase
     private String internalPath = "";
     private String webAppMount;
     private boolean classLoaderOnly;
+    private boolean staticOnly;
 
 
     protected static final StringManager sm =
@@ -100,6 +101,16 @@ public abstract class AbstractResourceSet extends LifecycleBase
         this.classLoaderOnly = classLoaderOnly;
     }
 
+    @Override
+    public boolean getStaticOnly() {
+        return staticOnly;
+    }
+
+    @Override
+    public void setStaticOnly(boolean staticOnly) {
+        this.staticOnly = staticOnly;
+    }
+
     //-------------------------------------------------------- Lifecycle methods
     @Override
     protected final void startInternal() throws LifecycleException {

==================================================
StandardRoot.java
index 1a30cadb71..f616a06dec 100644
--- a/java/org/apache/catalina/webresources/EmptyResourceSet.java
+++ b/java/org/apache/catalina/webresources/EmptyResourceSet.java
@@ -40,6 +40,7 @@ public class EmptyResourceSet extends LifecycleBase implements WebResourceSet {
 
     private WebResourceRoot root;
     private boolean classLoaderOnly;
+    private boolean staticOnly;
 
     public EmptyResourceSet(WebResourceRoot root) {
         this.root = root;
@@ -110,6 +111,16 @@ public class EmptyResourceSet extends LifecycleBase implements WebResourceSet {
         this.classLoaderOnly = classLoaderOnly;
     }
 
+    @Override
+    public boolean getStaticOnly() {
+        return staticOnly;
+    }
+
+    @Override
+    public void setStaticOnly(boolean staticOnly) {
+        this.staticOnly = staticOnly;
+    }
+
     /**
      * {@inheritDoc}
      * <p>

==================================================
TestResourceJars.java
index 5965cadfdd..224a502c88 100644
--- a/java/org/apache/catalina/webresources/StandardRoot.java
+++ b/java/org/apache/catalina/webresources/StandardRoot.java
@@ -276,7 +276,8 @@ public class StandardRoot extends LifecycleMBeanBase implements WebResourceRoot
         WebResource mainEmpty = null;
         for (List<WebResourceSet> list : allResources) {
             for (WebResourceSet webResourceSet : list) {
-                if (useClassLoaderResources || !webResourceSet.getClassLoaderOnly()) {
+                if (!useClassLoaderResources &&  !webResourceSet.getClassLoaderOnly() ||
+                        useClassLoaderResources && !webResourceSet.getStaticOnly()) {
                     result = webResourceSet.getResource(path);
                     if (result.exists()) {
                         return result;
@@ -421,6 +422,8 @@ public class StandardRoot extends LifecycleMBeanBase implements WebResourceRoot
 
         if (type.equals(ResourceSetType.CLASSES_JAR)) {
             resourceSet.setClassLoaderOnly(true);
+        } else if (type.equals(ResourceSetType.RESOURCE_JAR)) {
+            resourceSet.setStaticOnly(true);
         }
 
         resourceList.add(resourceSet);

==================================================
