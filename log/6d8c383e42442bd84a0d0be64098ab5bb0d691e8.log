6d8c383e42442bd84a0d0be64098ab5bb0d691e8
==================================================
Refactor to remove use of session#lock and #unlock in the DeltaManager
==================================================
Mark Thomas
==================================================
Tue May 21 21:57:03 2019 +0100
==================================================
ClusterManagerBase.java
Refactor to remove use of session#lock and #unlock in the DeltaManager


==================================================
DeltaManager.java
index 9935c67c9f..08a676354a 100644
--- a/java/org/apache/catalina/ha/session/ClusterManagerBase.java
+++ b/java/org/apache/catalina/ha/session/ClusterManagerBase.java
@@ -32,6 +32,7 @@ import org.apache.catalina.session.ManagerBase;
 import org.apache.catalina.tribes.io.ReplicationStream;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
+import org.apache.tomcat.util.collections.SynchronizedStack;
 
 public abstract class ClusterManagerBase extends ManagerBase implements ClusterManager {
 
@@ -57,6 +58,14 @@ public abstract class ClusterManagerBase extends ManagerBase implements ClusterM
      */
     private boolean recordAllActions = false;
 
+    private SynchronizedStack<DeltaRequest> deltaRequestPool = new SynchronizedStack<>();
+
+
+    protected SynchronizedStack<DeltaRequest> getDeltaRequestPool() {
+        return deltaRequestPool;
+    }
+
+
     @Override
     public CatalinaCluster getCluster() {
         return cluster;

==================================================
DeltaSession.java
index 136c549d63..6c5b3bd0cb 100644
--- a/java/org/apache/catalina/ha/session/DeltaManager.java
+++ b/java/org/apache/catalina/ha/session/DeltaManager.java
@@ -89,7 +89,6 @@ public class DeltaManager extends ClusterManagerBase{
     private boolean receiverQueue = false ;
     private boolean stateTimestampDrop = true ;
     private volatile long stateTransferCreateSendTime;
-    private SynchronizedStack<DeltaRequest> deltaRequestPool = new SynchronizedStack<>();
 
     // -------------------------------------------------------- stats attributes
 
@@ -563,7 +562,12 @@ public class DeltaManager extends ClusterManagerBase{
      * @return The request
      * @throws ClassNotFoundException Serialization error
      * @throws IOException IO error with serialization
+     *
+     * @deprecated Unused. This will be removed in Tomcat 10.
+     *             Calling this method may result in a deadlock. See:
+     *             https://bz.apache.org/bugzilla/show_bug.cgi?id=62841
      */
+    @Deprecated
     protected DeltaRequest deserializeDeltaRequest(DeltaSession session, byte[] data)
             throws ClassNotFoundException, IOException {
         session.lock();
@@ -962,6 +966,7 @@ public class DeltaManager extends ClusterManagerBase{
     public ClusterMessage requestCompleted(String sessionId, boolean expires) {
         DeltaSession session = null;
         SessionMessage msg = null;
+        SynchronizedStack<DeltaRequest> deltaRequestPool = getDeltaRequestPool();
         DeltaRequest deltaRequest = null;
         try {
             session = (DeltaSession) findSession(sessionId);
@@ -1250,14 +1255,8 @@ public class DeltaManager extends ClusterManagerBase{
                 log.debug(sm.getString("deltaManager.receiveMessage.delta",
                         getName(), msg.getSessionID()));
             }
-            session.lock();
-            try {
-                DeltaRequest dreq = deserializeDeltaRequest(session, delta);
-                dreq.execute(session, isNotifyListenersOnReplication());
-                session.setPrimarySession(false);
-            } finally {
-                session.unlock();
-            }
+
+            session.deserializeAndExecuteDeltaRequest(delta);
         }
     }
 

==================================================
