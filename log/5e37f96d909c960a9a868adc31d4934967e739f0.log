5e37f96d909c960a9a868adc31d4934967e739f0
==================================================
Test for https://issues.apache.org/bugzilla/show_bug.cgi?id=56185
==================================================
Konstantin Kolinko
==================================================
Tue Feb 25 16:27:40 2014 +0000
==================================================
TestELParser.java
Test for https://issues.apache.org/bugzilla/show_bug.cgi?id=56185

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1571725 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TesterBeanC.java
index 237bcf0613..ea1afacb81 100644
--- a/test/org/apache/el/parser/TestELParser.java
+++ b/test/org/apache/el/parser/TestELParser.java
@@ -199,6 +199,25 @@ public class TestELParser {
         assertEquals("true", result);
     }
 
+    @Test
+    public void bug56185() {
+        ExpressionFactory factory = ExpressionFactory.newInstance();
+        ELContext context = new ELContextImpl(factory);
+
+        TesterBeanC beanC = new TesterBeanC();
+        ValueExpression var =
+            factory.createValueExpression(beanC, TesterBeanC.class);
+        context.getVariableMapper().setVariable("myBean", var);
+
+        ValueExpression ve = factory.createValueExpression(context,
+            "${(myBean.int1 > 1 and myBean.myBool) or "+
+            "((myBean.myBool or myBean.myBool1) and myBean.int1 > 1)}",
+            Boolean.class);
+        assertEquals(Boolean.FALSE, ve.getValue(context));
+        beanC.setInt1(2);
+        beanC.setMyBool1(true);
+        assertEquals(Boolean.TRUE, ve.getValue(context));
+    }
 
     private void testExpression(String expression, String expected) {
         ExpressionFactory factory = ExpressionFactory.newInstance();

==================================================
