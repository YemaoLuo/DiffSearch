ebd2357fdc4a766cc9e7e9c5d65ab50d8bc1ba0e
==================================================
Add some comments
==================================================
Mark Emlyn
==================================================
Mon Mar 25 23:25:38 2013 +0000
==================================================
AsyncChannelWrapper.java
Add some comments

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1460929 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AsyncChannelWrapperNonSecure.java
index 64ea303dbb..513359152d 100644
--- a/java/org/apache/tomcat/websocket/AsyncChannelWrapper.java
+++ b/java/org/apache/tomcat/websocket/AsyncChannelWrapper.java
@@ -21,6 +21,11 @@ import java.nio.channels.CompletionHandler;
 import java.util.concurrent.Future;
 import java.util.concurrent.TimeUnit;
 
+/**
+ * This is a wrapper for a {@link java.nio.channels.AsynchronousSocketChannel}
+ * that limits the methods available thereby simplifying the process of
+ * implementing SSL/TLS support since there are fewer methods to intercept.
+ */
 public interface AsyncChannelWrapper {
 
     Future<Integer> read(ByteBuffer dst);

==================================================
AsyncChannelWrapperSecure.java
index 6d4884728e..53072bfada 100644
--- a/java/org/apache/tomcat/websocket/AsyncChannelWrapperNonSecure.java
+++ b/java/org/apache/tomcat/websocket/AsyncChannelWrapperNonSecure.java
@@ -23,6 +23,11 @@ import java.nio.channels.CompletionHandler;
 import java.util.concurrent.Future;
 import java.util.concurrent.TimeUnit;
 
+/**
+ * Generally, just passes calls straight to the wrapped
+ * {@link AsynchronousSocketChannel}. In some cases exceptions may be swallowed
+ * to save them being swallowed by the calling code.
+ */
 public class AsyncChannelWrapperNonSecure implements AsyncChannelWrapper {
 
     private final AsynchronousSocketChannel socketChannel;

==================================================
