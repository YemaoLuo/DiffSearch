34d8ac938ff737fbd209378e25b91a6a0ea7a115
==================================================
Don't duplicate storage of keepAliveTimeout in the Processor
==================================================
Mark Thomas
==================================================
Wed Dec 14 11:06:25 2016 +0000
==================================================
AbstractProtocol.java
Don't duplicate storage of keepAliveTimeout in the Processor

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1774187 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AbstractAjpProtocol.java
index b0bc7918f9..e1e80c431d 100644
--- a/java/org/apache/coyote/AbstractProtocol.java
+++ b/java/org/apache/coyote/AbstractProtocol.java
@@ -249,6 +249,12 @@ public abstract class AbstractProtocol<S> implements ProtocolHandler,
     }
 
 
+    /**
+     * The time Tomcat will wait for a subsequent request before closing the
+     * connection. The default is {@link #getConnectionTimeout()}.
+     *
+     * @return The timeout in milliseconds
+     */
     public int getKeepAliveTimeout() { return endpoint.getKeepAliveTimeout(); }
     public void setKeepAliveTimeout(int keepAliveTimeout) {
         endpoint.setKeepAliveTimeout(keepAliveTimeout);

==================================================
AjpProcessor.java
index d5e81fa6e8..5ee92ff74f 100644
--- a/java/org/apache/coyote/ajp/AbstractAjpProtocol.java
+++ b/java/org/apache/coyote/ajp/AbstractAjpProtocol.java
@@ -197,7 +197,6 @@ public abstract class AbstractAjpProtocol<S> extends AbstractProtocol<S> {
     protected Processor createProcessor() {
         AjpProcessor processor = new AjpProcessor(this);
         processor.setAdapter(getAdapter());
-        processor.setKeepAliveTimeout(getKeepAliveTimeout());
         processor.setClientCertProvider(getClientCertProvider());
         return processor;
     }

==================================================
