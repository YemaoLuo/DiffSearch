0e2bd349218b3c3af48fa41d3031003be6aa8307
==================================================
Fix Java 8 Javadoc errors in org.apace.catalina.[ant|authenticator]
==================================================
Mark Emlyn
==================================================
Mon Oct 13 13:19:34 2014 +0000
==================================================
BaseRedirectorHelperTask.java
Fix Java 8 Javadoc errors in org.apace.catalina.[ant|authenticator]

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1631384 13f79535-47bb-0310-9956-ffa450edef68



==================================================
JMXQueryTask.java
index 2dc19e2570..a54a06b2c5 100644
--- a/java/org/apache/catalina/ant/BaseRedirectorHelperTask.java
+++ b/java/org/apache/catalina/ant/BaseRedirectorHelperTask.java
@@ -75,6 +75,7 @@ public abstract class BaseRedirectorHelperTask extends Task {
      * This flag does not control parameters checking. If the task is called
      * with wrong or invalid parameters, it will throw BuildException
      * independently from the setting of this flag.
+     * </b>
      */
     protected boolean failOnError = true;
 

==================================================
JMXAccessorCondition.java
index d2e1c71771..9757603a4c 100644
--- a/java/org/apache/catalina/ant/JMXQueryTask.java
+++ b/java/org/apache/catalina/ant/JMXQueryTask.java
@@ -53,14 +53,13 @@ public class JMXQueryTask extends AbstractCatalinaTask {
 
     /**
      * Set method for the JMX query string.
-    * <P>Examples of query format:
+    * <p>Examples of query format:</p>
      * <UL>
      * <LI>*:*</LI>
      * <LI>*:type=RequestProcessor,*</LI>
      * <LI>*:j2eeType=Servlet,*</LI>
      * <LI>Catalina:type=Environment,resourcetype=Global,name=simpleValue</LI>
      * </UL>
-     * </P>
      * @param query JMX Query string
      */
     public void setQuery (String query) {

==================================================
JMXAccessorCreateTask.java
index 2071b3729b..eade9085bc 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorCondition.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorCondition.java
@@ -22,20 +22,20 @@ import org.apache.tools.ant.BuildException;
  *
  * <b>Definition</b>:
  * <pre>
- *   &lt;path id="catalina_ant">
- *       &lt;fileset dir="${catalina.home}/server/lib">
- *           &lt;include name="catalina-ant.jar"/>
- *       &lt;/fileset>
- *   &lt;/path>
+ *   &lt;path id="catalina_ant"&gt;
+ *       &lt;fileset dir="${catalina.home}/server/lib"&gt;
+ *           &lt;include name="catalina-ant.jar"/&gt;
+ *       &lt;/fileset&gt;
+ *   &lt;/path&gt;
  *
  *   &lt;typedef
  *       name="jmxCondition"
  *       classname="org.apache.catalina.ant.jmx.JMXAccessorCondition"
- *       classpathref="catalina_ant"/>
+ *       classpathref="catalina_ant"/&gt;
  *   &lt;taskdef
  *       name="jmxOpen"
  *       classname="org.apache.catalina.ant.jmx.JMXAccessorTask"
- *       classpathref="catalina_ant"/>
+ *       classpathref="catalina_ant"/&gt;
  * </pre>
  *
  * <b>Usage</b>: Wait for start backup node
@@ -170,7 +170,7 @@ public class JMXAccessorCondition extends JMXAccessorConditionBase {
 
     /**
      * This method evaluates the condition
-     * It support for operation ">,>=,<,<=" the types <code>long</code> and <code>double</code>.
+     * It support for operation "&gt;,&gt;=,&lt;,&lt;=" the types <code>long</code> and <code>double</code>.
      * @return expression <em>jmxValue</em> <em>operation</em> <em>value</em>
      */
     @Override

==================================================
JMXAccessorEqualsCondition.java
index 48ce40de09..af1c157956 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorCreateTask.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorCreateTask.java
@@ -35,6 +35,7 @@ import org.apache.tools.ant.BuildException;
  * Examples:
  * <br>
  * create a new Mbean at jmx.server connection
+ * </p>
  * <pre>
  *   &lt;jmx:create
  *           ref="jmx.server"
@@ -44,7 +45,6 @@ import org.apache.tools.ant.BuildException;
  *            &lt;Arg value="org.apache.catalina.mbeans.MBeanFactory" /&gt;
  *   &lt;/jmxCreate/&gt;
  * </pre>
- * </p>
  * <p>
  * <b>WARNING</b>Not all Tomcat MBeans can create remotely and autoregister by its parents!
  * Please, use the MBeanFactory operation to generate valves and realms.

==================================================
JMXAccessorGetTask.java
index 9434c75278..e7e0932d9f 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorEqualsCondition.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorEqualsCondition.java
@@ -22,16 +22,16 @@ import org.apache.tools.ant.BuildException;
  *
  * Definition
  * <pre>
- *   &lt;path id="catalina_ant">
- *       &lt;fileset dir="${catalina.home}/server/lib">
- *           &lt;include name="catalina-ant.jar"/>
- *       &lt;/fileset>
- *   &lt;/path>
+ *   &lt;path id="catalina_ant"&gt;
+ *       &lt;fileset dir="${catalina.home}/server/lib"&gt;
+ *           &lt;include name="catalina-ant.jar"/&gt;
+ *       &lt;/fileset&gt;
+ *   &lt;/path&gt;
  *
  *   &lt;typedef
  *       name="jmxEquals"
  *       classname="org.apache.catalina.ant.jmx.JMXAccessorEqualsCondition"
- *       classpathref="catalina_ant"/>
+ *       classpathref="catalina_ant"/&gt;
  * </pre>
  *
  * usage: Wait for start backup node

==================================================
JMXAccessorSetTask.java
index 5b7df954a2..304b45cbed 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorGetTask.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorGetTask.java
@@ -36,6 +36,7 @@ import org.apache.tools.ant.BuildException;
  * Examples:
  * <br>
  * Get a Mbean IDataSender attribute nrOfRequests and create a new ant property <em>IDataSender.9025.nrOfRequests</em>
+ * </p>
  * <pre>
  *   &lt;jmx:get
  *           ref="jmx.server"
@@ -45,7 +46,6 @@ import org.apache.tools.ant.BuildException;
  *           echo="false"&gt;
  *       /&gt;
  * </pre>
- * </p>
  * <p>
  * First call to a remote MBeanserver save the JMXConnection a referenz <em>jmx.server</em>
  * </p>

==================================================
JMXAccessorUnregisterTask.java
index ea85208d0a..bafaa268af 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorSetTask.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorSetTask.java
@@ -39,6 +39,7 @@ import org.apache.tools.ant.BuildException;
  * Examples:
  * Set a Mbean Manager attribute maxActiveSessions.
  * Set this attribute with fresh jmx connection without save reference
+ * </p>
  * <pre>
  *   &lt;jmx:set
  *           host="127.0.0.1"
@@ -51,7 +52,6 @@ import org.apache.tools.ant.BuildException;
  *           echo="false"&gt;
  *       /&gt;
  * </pre>
- * </p>
  * <p>
  * First call to a remote MBeanserver save the JMXConnection a referenz <em>jmx.server</em>
  * </p>

==================================================
DigestAuthenticator.java
index 3dcfffb8b5..293de30922 100644
--- a/java/org/apache/catalina/ant/jmx/JMXAccessorUnregisterTask.java
+++ b/java/org/apache/catalina/ant/jmx/JMXAccessorUnregisterTask.java
@@ -30,12 +30,12 @@ import org.apache.tools.ant.BuildException;
  * Examples:
  * <br>
  * unregister an existing Mbean at jmx.server connection
+ * </p>
  * <pre>
  *   &lt;jmx:unregister
  *           ref="jmx.server"
  *           name="Catalina:type=MBeanFactory" /&gt;
  * </pre>
- * </p>
  * <p>
  * <b>WARNING</b>Not all Tomcat MBeans can successfully unregister remotely. The mbean
  * unregistration don't remove valves, realm, .. from parent class.

==================================================
NonLoginAuthenticator.java
index d3340eb961..95a3c61903 100644
--- a/java/org/apache/catalina/authenticator/DigestAuthenticator.java
+++ b/java/org/apache/catalina/authenticator/DigestAuthenticator.java
@@ -351,7 +351,7 @@ public class DigestAuthenticator extends AuthenticatorBase {
      *
      *      realm               = "realm" "=" realm-value
      *      realm-value         = quoted-string
-     *      domain              = "domain" "=" <"> 1#URI <">
+     *      domain              = "domain" "=" &lt;"&gt; 1#URI &lt;"&gt;
      *      nonce               = "nonce" "=" nonce-value
      *      nonce-value         = quoted-string
      *      opaque              = "opaque" "=" quoted-string

==================================================
SingleSignOn.java
index ab3788993a..8bb035c951 100644
--- a/java/org/apache/catalina/authenticator/NonLoginAuthenticator.java
+++ b/java/org/apache/catalina/authenticator/NonLoginAuthenticator.java
@@ -50,7 +50,7 @@ public final class NonLoginAuthenticator extends AuthenticatorBase {
      * Therefore, it is necessary to always return <code>true</code> to
      * indicate the user has not failed authentication.</p>
      *
-     * <p>There are two cases:
+     * <p>There are two cases:</p>
      * <ul>
      * <li>without SingleSignon: a Session instance does not yet exist
      *     and there is no <code>auth-method</code> to authenticate the
@@ -68,7 +68,7 @@ public final class NonLoginAuthenticator extends AuthenticatorBase {
      *           keep the SSOE "alive", even if all the other properly
      *           authenticated Sessions expire first... until it expires too.
      * </li>
-     * </ul></p>
+     * </ul>
      *
      * @param request  Request we are processing
      * @param response Response we are creating

==================================================
