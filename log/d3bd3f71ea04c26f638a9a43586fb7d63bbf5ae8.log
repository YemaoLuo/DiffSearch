d3bd3f71ea04c26f638a9a43586fb7d63bbf5ae8
==================================================
Add missing check in registerReadInterest
==================================================
remm remm@apache.org
==================================================
Thu Feb 28 23:12:52 2019 +0100
==================================================
Nio2Endpoint.java
Add missing check in registerReadInterest

Follow up for 63182, and test with CI. Simplify test case a bit.


==================================================
TestNonBlockingAPI.java
index dbabe5692b..982dd4438e 100644
--- a/java/org/apache/tomcat/util/net/Nio2Endpoint.java
+++ b/java/org/apache/tomcat/util/net/Nio2Endpoint.java
@@ -782,9 +782,7 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel,AsynchronousS
                 throw new IOException(sm.getString("socket.closed"));
             }
 
-            if (readNotify) {
-                readNotify = false;
-            } else {
+            if (!readNotify) {
                 if (block) {
                     try {
                         readPending.acquire();
@@ -803,6 +801,10 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel,AsynchronousS
 
             int nRead = populateReadBuffer(b, off, len);
             if (nRead > 0) {
+                if (readNotify) {
+                    // The code that was notified is now reading its data
+                    readNotify = false;
+                }
                 // This may be sufficient to complete the request and we
                 // don't want to trigger another read since if there is no
                 // more data to read and this request takes a while to
@@ -839,9 +841,7 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel,AsynchronousS
                 throw new IOException(sm.getString("socket.closed"));
             }
 
-            if (readNotify) {
-                readNotify = false;
-            } else {
+            if (!readNotify) {
                 if (block) {
                     try {
                         readPending.acquire();
@@ -860,6 +860,10 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel,AsynchronousS
 
             int nRead = populateReadBuffer(to);
             if (nRead > 0) {
+                if (readNotify) {
+                    // The code that was notified is now reading its data
+                    readNotify = false;
+                }
                 // This may be sufficient to complete the request and we
                 // don't want to trigger another read since if there is no
                 // more data to read and this request takes a while to
@@ -1490,6 +1494,10 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel,AsynchronousS
         @Override
         public void registerReadInterest() {
             synchronized (readCompletionHandler) {
+                // A notification is already being sent
+                if (readNotify) {
+                    return;
+                }
                 if (readPending.availablePermits() == 0) {
                     readInterest = true;
                 } else {

==================================================
