cb9566726ed5c0c90884b9126cb3d06bac287498
==================================================
clientCertProvider is only used by AJP
==================================================
Mark Thomas
==================================================
Tue Oct 20 09:01:52 2015 +0000
==================================================
AbstractProcessor.java
clientCertProvider is only used by AJP

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1709548 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Processor.java
index 41154dafd4..597832c13f 100644
--- a/java/org/apache/coyote/AbstractProcessor.java
+++ b/java/org/apache/coyote/AbstractProcessor.java
@@ -45,7 +45,6 @@ public abstract class AbstractProcessor extends AbstractProcessorLight implement
     protected final Response response;
     protected volatile SocketWrapperBase<?> socketWrapper = null;
     protected volatile SSLSupport sslSupport;
-    private String clientCertProvider = null;
 
     /**
      * Error state for the request/response currently being processed.
@@ -141,17 +140,6 @@ public abstract class AbstractProcessor extends AbstractProcessorLight implement
     }
 
 
-    @Override
-    public String getClientCertProvider() {
-        return clientCertProvider;
-    }
-
-
-    public void setClientCertProvider(String s) {
-        this.clientCertProvider = s;
-    }
-
-
     /**
      * Set the socket wrapper being used.
      */

==================================================
AjpProcessor.java
index 8094ac714d..35cfea6c4f 100644
--- a/java/org/apache/coyote/Processor.java
+++ b/java/org/apache/coyote/Processor.java
@@ -69,20 +69,6 @@ public interface Processor {
      */
     void recycle();
 
-    /**
-     * When client certificate information is presented in a form other than
-     * instances of {@link java.security.cert.X509Certificate} it needs to be
-     * converted before it can be used and this property controls which JSSE
-     * provider is used to perform the conversion. For example it is used with
-     * the AJP connectors, the HTTP APR connector and with the
-     * {@link org.apache.catalina.valves.SSLValve}. If not specified, the
-     * default provider will be used.
-     *
-     * @return The name of the JSSE provider to use for certificate
-     *         transformation if required
-     */
-    String getClientCertProvider();
-
     void setSslSupport(SSLSupport sslSupport);
 
     /**

==================================================
AbstractHttp11Protocol.java
index 103803781b..cd14b24698 100644
--- a/java/org/apache/coyote/ajp/AjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpProcessor.java
@@ -243,6 +243,8 @@ public class AjpProcessor extends AbstractProcessor {
     private long bytesWritten = 0;
 
 
+
+
     // ------------------------------------------------------------ Constructor
 
     public AjpProcessor(int packetSize, AbstractEndpoint<?> endpoint) {
@@ -318,6 +320,19 @@ public class AjpProcessor extends AbstractProcessor {
     }
 
 
+    /**
+     * When client certificate information is presented in a form other than
+     * instances of {@link java.security.cert.X509Certificate} it needs to be
+     * converted before it can be used and this property controls which JSSE
+     * provider is used to perform the conversion.
+     */
+    private String clientCertProvider = null;
+    public String getClientCertProvider() { return clientCertProvider; }
+    public void setClientCertProvider(String clientCertProvider) {
+        this.clientCertProvider = clientCertProvider;
+    }
+
+
     // --------------------------------------------------------- Public Methods
 
 

==================================================
UpgradeProcessorBase.java
index e4a03ce61b..31457ca0da 100644
--- a/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
+++ b/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
@@ -627,7 +627,6 @@ public abstract class AbstractHttp11Protocol<S> extends AbstractProtocol<S> {
         processor.setRestrictedUserAgents(getRestrictedUserAgents());
         processor.setMaxSavePostSize(getMaxSavePostSize());
         processor.setServer(getServer());
-        processor.setClientCertProvider(getClientCertProvider());
     }
 
 

==================================================
StreamProcessor.java
index 5af65096b3..866b705acb 100644
--- a/java/org/apache/coyote/http11/upgrade/UpgradeProcessorBase.java
+++ b/java/org/apache/coyote/http11/upgrade/UpgradeProcessorBase.java
@@ -99,12 +99,6 @@ public abstract class UpgradeProcessorBase extends AbstractProcessorLight implem
     }
 
 
-    @Override
-    public String getClientCertProvider() {
-        return null;
-    }
-
-
     @Override
     public ByteBuffer getLeftoverInput() {
         return null;

==================================================
