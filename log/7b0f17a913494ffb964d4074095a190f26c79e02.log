7b0f17a913494ffb964d4074095a190f26c79e02
==================================================
Ensure that the availability of configured upgrade protocols that require ALPN is correctly reported during Tomcat start.
==================================================
Mark Thomas
==================================================
Wed Nov 23 12:23:37 2016 +0000
==================================================
AbstractHttp11Protocol.java
Ensure that the availability of configured upgrade protocols that require ALPN is correctly reported during Tomcat start.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1770952 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AbstractEndpoint.java
index 2a79c02912..f7900fa95b 100644
--- a/java/org/apache/coyote/http11/LocalStrings.properties
+++ b/java/org/apache/coyote/http11/LocalStrings.properties
@@ -14,7 +14,7 @@
 # limitations under the License.
 
 abstractHttp11Protocol.alpnConfigured=The [{0}] connector has been configured to support negotiation to [{1}] via ALPN
-abstractHttp11Protocol.alpnWithNoTls=The upgrade handler [{0}] for [{1}] only supports upgrade via ALPN but has been configured for the [{2}] connector that is not enabled for TLS.
+abstractHttp11Protocol.alpnWithNoAlpn=The upgrade handler [{0}] for [{1}] only supports upgrade via ALPN but has been configured for the [{2}] connector that does not support ALPN.
 abstractHttp11Protocol.httpUpgradeConfigured=The [{0}] connector has been configured to support HTTP upgrade to [{1}]
 
 http11processor.fallToDebug=\n Note: further occurrences of HTTP header parsing errors will be logged at DEBUG level.

==================================================
AbstractJsseEndpoint.java
index 5701b8e58d..df2dac2d50 100644
--- a/java/org/apache/tomcat/util/net/AbstractEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AbstractEndpoint.java
@@ -459,6 +459,15 @@ public abstract class AbstractEndpoint<S> {
     public boolean isSSLEnabled() { return SSLEnabled; }
     public void setSSLEnabled(boolean SSLEnabled) { this.SSLEnabled = SSLEnabled; }
 
+    /**
+     * Identifies if the endpoint supports ALPN. Note that a return value of
+     * <code>true</code> implies that {@link #isSSLEnabled()} will also return
+     * <code>true</code>.
+     *
+     * @return <code>true</true> if the endpoint supports ALPN in its current
+     *         configuration, otherwise <code>false</code>.
+     */
+    public abstract boolean isAlpnSupported();
 
     private int minSpareThreads = 10;
     public void setMinSpareThreads(int minSpareThreads) {

==================================================
AprEndpoint.java
index 7d737c3f67..5cbbb90b88 100644
--- a/java/org/apache/tomcat/util/net/AbstractJsseEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AbstractJsseEndpoint.java
@@ -206,6 +206,20 @@ public abstract class AbstractJsseEndpoint<S> extends AbstractEndpoint<S> {
     }
 
 
+
+    @Override
+    public boolean isAlpnSupported() {
+        // ALPN requires TLS so if there is no SSLImplementation, or if TLS is
+        // not enabled, ALPN cannot be supported
+        if (sslImplementation == null || !isSSLEnabled()) {
+            return false;
+        }
+
+        // Depends on the SSLImplementation
+        return sslImplementation.isAlpnSupported();
+    }
+
+
     @Override
     public void unbind() throws Exception {
         for (SSLHostConfig sslHostConfig : sslHostConfigs.values()) {

==================================================
SSLImplementation.java
index b543eb6082..de191f1b72 100644
--- a/java/org/apache/tomcat/util/net/AprEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AprEndpoint.java
@@ -539,6 +539,16 @@ public class AprEndpoint extends AbstractEndpoint<Long> implements SNICallBack {
     }
 
 
+
+    @Override
+    public boolean isAlpnSupported() {
+        // The APR/native connector always supports ALPN if TLS is in use
+        // because OpenSSL supports ALPN. Therefore, this is equivalent to
+        // testing of SSL is enabled.
+        return isSSLEnabled();
+    }
+
+
     /**
      * Start the APR endpoint, creating acceptor, poller and sendfile threads.
      */

==================================================
JSSEImplementation.java
index 76972246fd..69d1726d94 100644
--- a/java/org/apache/tomcat/util/net/SSLImplementation.java
+++ b/java/org/apache/tomcat/util/net/SSLImplementation.java
@@ -67,4 +67,6 @@ public abstract class SSLImplementation {
     public abstract SSLSupport getSSLSupport(SSLSession session);
 
     public abstract SSLUtil getSSLUtil(SSLHostConfigCertificate certificate);
+
+    public abstract boolean isAlpnSupported();
 }

==================================================
OpenSSLImplementation.java
index a2833d3c2d..3d40470ea7 100644
--- a/java/org/apache/tomcat/util/net/jsse/JSSEImplementation.java
+++ b/java/org/apache/tomcat/util/net/jsse/JSSEImplementation.java
@@ -48,4 +48,10 @@ public class JSSEImplementation extends SSLImplementation {
     public SSLUtil getSSLUtil(SSLHostConfigCertificate certificate) {
         return new JSSEUtil(certificate);
     }
+
+    @Override
+    public boolean isAlpnSupported() {
+        // JSSE does not (yet) support ALPN
+        return false;
+    }
 }

==================================================
