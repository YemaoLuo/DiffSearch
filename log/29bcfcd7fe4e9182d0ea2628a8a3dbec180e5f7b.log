29bcfcd7fe4e9182d0ea2628a8a3dbec180e5f7b
==================================================
UCDetector
==================================================
Mark Emlyn
==================================================
Fri Feb 15 21:03:34 2013 +0000
==================================================
ParserController.java
UCDetector
 - use of final
 - reduce visibility

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1446766 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ScriptingVariabler.java
index c069c4bc0b..a474074438 100644
--- a/java/org/apache/jasper/compiler/ParserController.java
+++ b/java/org/apache/jasper/compiler/ParserController.java
@@ -44,9 +44,9 @@ class ParserController implements TagConstants {
 
     private static final String CHARSET = "charset=";
 
-    private JspCompilationContext ctxt;
-    private Compiler compiler;
-    private ErrorDispatcher err;
+    private final JspCompilationContext ctxt;
+    private final Compiler compiler;
+    private final ErrorDispatcher err;
 
     /*
      * Indicates the syntax (XML or standard) of the file being processed
@@ -57,7 +57,7 @@ class ParserController implements TagConstants {
      * A stack to keep track of the 'current base directory'
      * for include directives that refer to relative paths.
      */
-    private Stack<String> baseDirStack = new Stack<>();
+    private final Stack<String> baseDirStack = new Stack<>();
 
     private boolean isEncodingSpecifiedInProlog;
     private boolean isBomPresent;

==================================================
ServletWriter.java
index abf072f516..165ccc4a0b 100644
--- a/java/org/apache/jasper/compiler/ScriptingVariabler.java
+++ b/java/org/apache/jasper/compiler/ScriptingVariabler.java
@@ -42,7 +42,7 @@ class ScriptingVariabler {
      * to help identify, for every custom tag, the scripting variables that it
      * needs to declare.
      */
-    static class CustomTagCounter extends Node.Visitor {
+    private static class CustomTagCounter extends Node.Visitor {
 
         private int count;
         private Node.CustomTag parent;
@@ -62,10 +62,10 @@ class ScriptingVariabler {
      * For every custom tag, determines the scripting variables it needs to
      * declare.
      */
-    static class ScriptingVariableVisitor extends Node.Visitor {
+    private static class ScriptingVariableVisitor extends Node.Visitor {
 
-        private ErrorDispatcher err;
-        private Map<String, Integer> scriptVars;
+        private final ErrorDispatcher err;
+        private final Map<String, Integer> scriptVars;
 
         public ScriptingVariableVisitor(ErrorDispatcher err) {
             this.err = err;

==================================================
SmapGenerator.java
index 5f3b11da01..d1315f6caf 100644
--- a/java/org/apache/jasper/compiler/ServletWriter.java
+++ b/java/org/apache/jasper/compiler/ServletWriter.java
@@ -25,15 +25,15 @@ import java.io.PrintWriter;
  * @author Kin-man Chung
  */
 public class ServletWriter {
-    public static final int TAB_WIDTH = 2;
-    public static final String SPACES = "                              ";
+    private static final int TAB_WIDTH = 2;
+    private static final String SPACES = "                              ";
 
     // Current indent level:
     private int indent = 0;
     private int virtual_indent = 0;
 
     // The sink writer:
-    PrintWriter writer;
+    private final PrintWriter writer;
 
     // servlet line numbers start from 1
     private int javaLine = 1;

==================================================
SmapStratum.java
index 827666bf9e..3579e7ac1b 100644
--- a/java/org/apache/jasper/compiler/SmapGenerator.java
+++ b/java/org/apache/jasper/compiler/SmapGenerator.java
@@ -47,8 +47,8 @@ public class SmapGenerator {
 
     private String outputFileName;
     private String defaultStratum = "Java";
-    private List<SmapStratum> strata = new ArrayList<>();
-    private List<String> embedded = new ArrayList<>();
+    private final List<SmapStratum> strata = new ArrayList<>();
+    private final List<String> embedded = new ArrayList<>();
     private boolean doEmbedded = true;
 
     //*********************************************************************

==================================================
