3e5b42a25831c06939814a307727c5bac8f55d4d
==================================================
Fix some low hanging FindBugs fruit
==================================================
Mark Thomas
==================================================
Fri Sep 15 16:44:20 2017 +0000
==================================================
Util.java
Fix some low hanging FindBugs fruit

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1808466 13f79535-47bb-0310-9956-ffa450edef68



==================================================
DigestCredentialHandlerBase.java
index ed6c45ada2..af8b678a9e 100644
--- a/java/javax/el/Util.java
+++ b/java/javax/el/Util.java
@@ -557,7 +557,7 @@ class Util {
 
         if (clazz == null) {
             throw new MethodNotFoundException(
-                    message(null, "util.method.notfound", clazz, methodName,
+                    message(null, "util.method.notfound", null, methodName,
                     paramString(paramTypes)));
         }
 

==================================================
SecurityUtil.java
index 281d537523..b6a33d5854 100644
--- a/java/org/apache/catalina/realm/DigestCredentialHandlerBase.java
+++ b/java/org/apache/catalina/realm/DigestCredentialHandlerBase.java
@@ -165,7 +165,7 @@ public abstract class DigestCredentialHandlerBase implements CredentialHandler {
         if (storedCredentials == null) {
             // Stored credentials are invalid
             // This may be expected if nested credential handlers are being used
-            logInvalidStoredCredentials(storedCredentials);
+            logInvalidStoredCredentials(null);
             return false;
         }
 

==================================================
LocalResolver.java
index c08361cdf2..74ec443264 100644
--- a/java/org/apache/catalina/security/SecurityUtil.java
+++ b/java/org/apache/catalina/security/SecurityUtil.java
@@ -153,7 +153,7 @@ public final class SecurityUtil{
         Method method = null;
         Method[] methodsCache = classCache.get(Servlet.class);
         if(methodsCache == null) {
-            method = createMethodAndCacheIt(methodsCache,
+            method = createMethodAndCacheIt(null,
                                             Servlet.class,
                                             methodName,
                                             targetParameterTypes);
@@ -236,7 +236,7 @@ public final class SecurityUtil{
         Method method = null;
         Method[] methodsCache = classCache.get(Filter.class);
         if(methodsCache == null) {
-            method = createMethodAndCacheIt(methodsCache,
+            method = createMethodAndCacheIt(null,
                                             Filter.class,
                                             methodName,
                                             targetParameterTypes);

==================================================
NioBlockingSelector.java
index 5802c1c0cc..37a952bf39 100644
--- a/java/org/apache/tomcat/util/descriptor/LocalResolver.java
+++ b/java/org/apache/tomcat/util/descriptor/LocalResolver.java
@@ -89,7 +89,7 @@ public class LocalResolver implements EntityResolver2 {
         // If there is no systemId, can't try anything else
         if (systemId == null) {
             throw new FileNotFoundException(sm.getString("localResolver.unresolvedEntity",
-                    name, publicId, systemId, base));
+                    name, publicId, null, base));
         }
 
         // Try resolving with the supplied systemId

==================================================
JSSEUtil.java
index 66e25d22d0..a89618d0e9 100644
--- a/java/org/apache/tomcat/util/net/NioBlockingSelector.java
+++ b/java/org/apache/tomcat/util/net/NioBlockingSelector.java
@@ -382,7 +382,7 @@ public class NioBlockingSelector {
                 } catch (CancelledKeyException cx) {
                     cancel(sk, key, ops);
                 } catch (ClosedChannelException cx) {
-                    cancel(sk, key, ops);
+                    cancel(null, key, ops);
                 }
             }
         }

==================================================
WsWebSocketContainer.java
index 1133a1e161..00ecd8b9cd 100644
--- a/java/org/apache/tomcat/util/net/jsse/JSSEUtil.java
+++ b/java/org/apache/tomcat/util/net/jsse/JSSEUtil.java
@@ -234,7 +234,7 @@ public class JSSEUtil extends SSLUtilBase {
                     }
                 }
                 if (keyAlias == null) {
-                    throw new IOException(sm.getString("jsse.alias_no_key_entry", keyAlias));
+                    throw new IOException(sm.getString("jsse.alias_no_key_entry", (Object) null));
                 }
             }
 

==================================================
TestCloseBug58624.java
index f9def2dcb3..20cf2a5ed5 100644
--- a/java/org/apache/tomcat/websocket/WsWebSocketContainer.java
+++ b/java/org/apache/tomcat/websocket/WsWebSocketContainer.java
@@ -347,7 +347,7 @@ public class WsWebSocketContainer implements WebSocketContainer, BackgroundProce
             String maxRedirectsValue =
                     (String) userProperties.get(Constants.MAX_REDIRECTIONS_PROPERTY);
             if (maxRedirectsValue != null) {
-                maxRedirects = Integer.valueOf(maxRedirectsValue).intValue();
+                maxRedirects = Integer.parseInt(maxRedirectsValue);
             }
 
             if (httpResponse.status != 101) {

==================================================
Clock2.java
index bafe15e1b0..140f9a3339 100644
--- a/test/org/apache/tomcat/websocket/server/TestCloseBug58624.java
+++ b/test/org/apache/tomcat/websocket/server/TestCloseBug58624.java
@@ -107,7 +107,7 @@ public class TestCloseBug58624 extends WebSocketBaseTest {
 
     public static class Bug58624ServerConfig extends WsContextListener {
 
-        public static String PATH = "/bug58624";
+        public static final String PATH = "/bug58624";
 
 
         @Override

==================================================
