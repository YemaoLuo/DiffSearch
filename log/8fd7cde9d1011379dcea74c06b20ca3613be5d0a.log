8fd7cde9d1011379dcea74c06b20ca3613be5d0a
==================================================
Include root cause in LifecycleException stack traces
==================================================
Mark Emlyn
==================================================
Mon Dec 6 21:25:07 2010 +0000
==================================================
LifecycleException.java
Include root cause in LifecycleException stack traces

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1042798 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Connector.java
index ee94ef1719..54aa3f083d 100644
--- a/java/org/apache/catalina/LifecycleException.java
+++ b/java/org/apache/catalina/LifecycleException.java
@@ -39,9 +39,7 @@ public final class LifecycleException extends Exception {
      * Construct a new LifecycleException with no other information.
      */
     public LifecycleException() {
-
-        this(null, null);
-
+        super();
     }
 
 
@@ -51,9 +49,7 @@ public final class LifecycleException extends Exception {
      * @param message Message describing this exception
      */
     public LifecycleException(String message) {
-
-        this(message, null);
-
+        super(message);
     }
 
 
@@ -63,9 +59,7 @@ public final class LifecycleException extends Exception {
      * @param throwable Throwable that caused this exception
      */
     public LifecycleException(Throwable throwable) {
-
-        this(null, throwable);
-
+        super(throwable);
     }
 
 
@@ -77,72 +71,6 @@ public final class LifecycleException extends Exception {
      * @param throwable Throwable that caused this exception
      */
     public LifecycleException(String message, Throwable throwable) {
-
-        super();
-        this.message = message;
-        this.throwable = throwable;
-
+        super(message, throwable);
     }
-
-
-    //------------------------------------------------------ Instance Variables
-
-
-    /**
-     * The error message passed to our constructor (if any)
-     */
-    protected String message = null;
-
-
-    /**
-     * The underlying exception or error passed to our constructor (if any)
-     */
-    protected Throwable throwable = null;
-
-
-    //---------------------------------------------------------- Public Methods
-
-
-    /**
-     * Returns the message associated with this exception, if any.
-     */
-    @Override
-    public String getMessage() {
-
-        return (message);
-
-    }
-
-
-    /**
-     * Returns the throwable that caused this exception, if any.
-     */
-    public Throwable getThrowable() {
-
-        return (throwable);
-
-    }
-
-
-    /**
-     * Return a formatted string that describes this exception.
-     */
-    @Override
-    public String toString() {
-
-        StringBuilder sb = new StringBuilder("LifecycleException:  ");
-        if (message != null) {
-            sb.append(message);
-            if (throwable != null) {
-                sb.append(":  ");
-            }
-        }
-        if (throwable != null) {
-            sb.append(throwable.toString());
-        }
-        return (sb.toString());
-
-    }
-
-
-}
+}
\ No newline at end of file

==================================================
