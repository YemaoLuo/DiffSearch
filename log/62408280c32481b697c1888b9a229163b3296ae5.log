62408280c32481b697c1888b9a229163b3296ae5
==================================================
Change order of arguments in preparation for a better API (I mean varargs).
==================================================
Konstantin Kolinko
==================================================
Mon Apr 8 22:09:12 2013 +0000
==================================================
ErrorDispatcher.java
Change order of arguments in preparation for a better API (I mean varargs).

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1465807 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Generator.java
index 7aac7b4729..7ce41f0013 100644
--- a/java/org/apache/jasper/compiler/ErrorDispatcher.java
+++ b/java/org/apache/jasper/compiler/ErrorDispatcher.java
@@ -277,11 +277,20 @@ public class ErrorDispatcher {
      * @param arg Argument for parametric replacement
      * @param e Parsing exception
      */
-    public void jspError(String errCode, String arg, Exception e)
+    public void jspError(Exception e, String errCode, String arg)
                 throws JasperException {
         dispatch(null, errCode, new Object[] {arg}, e);
     }
 
+    /**
+     * @deprecated Replaced by jspError(Exception, String, String)
+     */
+    @Deprecated
+    public void jspError(String errCode, String arg, Exception e)
+            throws JasperException {
+        jspError(e, errCode, arg);
+    }
+
     /*
      * Dispatches the given JSP parse error to the configured error handler.
      *
@@ -294,11 +303,20 @@ public class ErrorDispatcher {
      * @param arg Argument for parametric replacement
      * @param e Parsing exception
      */
-    public void jspError(Node n, String errCode, String arg, Exception e)
+    public void jspError(Node n, Exception e, String errCode, String arg)
                 throws JasperException {
         dispatch(n.getStart(), errCode, new Object[] {arg}, e);
     }
 
+    /**
+     * @deprecated Replaced by jspError(Node, Exception, String, String)
+     */
+    @Deprecated
+    public void jspError(Node n, String errCode, String arg, Exception e)
+            throws JasperException {
+        jspError(n, e, errCode, arg);
+    }
+
     /**
      * Parses the given error message into an array of javac compilation error
      * messages (one per javac compilation error line number).

==================================================
JspDocumentParser.java
index 5f7b3e855d..33cd8441e0 100644
--- a/java/org/apache/jasper/compiler/Generator.java
+++ b/java/org/apache/jasper/compiler/Generator.java
@@ -3968,8 +3968,8 @@ class Generator {
                                 .getPropertyEditorClass());
                 }
             } catch (IntrospectionException ie) {
-                err.jspError(n, "jsp.error.introspect.taghandler",
-                        tagHandlerClass.getName(), ie);
+                err.jspError(n, ie, "jsp.error.introspect.taghandler",
+                        tagHandlerClass.getName());
             }
         }
 

==================================================
TagLibraryInfoImpl.java
index 6f82c16d50..2441fee468 100644
--- a/java/org/apache/jasper/compiler/JspDocumentParser.java
+++ b/java/org/apache/jasper/compiler/JspDocumentParser.java
@@ -200,7 +200,7 @@ class JspDocumentParser
             pageNodes = new Node.Nodes(dummyRoot);
 
         } catch (IOException ioe) {
-            jspDocParser.err.jspError("jsp.error.data.file.read", path, ioe);
+            jspDocParser.err.jspError(ioe, "jsp.error.data.file.read", path);
         } catch (SAXParseException e) {
             jspDocParser.err.jspError
                 (new Mark(jspDocParser.ctxt, path, e.getLineNumber(),

==================================================
