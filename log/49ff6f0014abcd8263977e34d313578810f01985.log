49ff6f0014abcd8263977e34d313578810f01985
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=54170
==================================================
Mark Emlyn
==================================================
Thu Nov 22 14:58:51 2012 +0000
==================================================
ApplicationFilterConfig.java
index 3c7e59a774..65523070bb 100644
--- a/TOMCAT-NEXT.txt
+++ b/TOMCAT-NEXT.txt
@@ -210,7 +210,7 @@ but possibly 7.1.x).
 
 13. Fix all FindBugs warnings
     - Complete for javax.*
-    - Complete for o.a.[catalina|coyote|el].*
+    - Complete for o.a.[catalina|coyote|el|juli|naming].*
     - Remaining code in progress
 
 14. Review date formatting with a view to reducing duplication.

==================================================
StandardWrapper.java
index d330dc88e0..3eea3cf1b6 100644
--- a/java/org/apache/catalina/core/ApplicationFilterConfig.java
+++ b/java/org/apache/catalina/core/ApplicationFilterConfig.java
@@ -43,6 +43,7 @@ import org.apache.tomcat.InstanceManager;
 import org.apache.tomcat.util.ExceptionUtils;
 import org.apache.tomcat.util.log.SystemLogHandler;
 import org.apache.tomcat.util.modeler.Registry;
+import org.apache.tomcat.util.modeler.Util;
 import org.apache.tomcat.util.res.StringManager;
 
 
@@ -416,16 +417,19 @@ public final class ApplicationFilterConfig implements FilterConfig, Serializable
 
         String webMod = "//" + hostName + parentName;
         String onameStr = null;
+        String filterName = filterDef.getFilterName();
+        if (Util.objectNameValueNeedsQuote(filterName)) {
+            filterName = ObjectName.quote(filterName);
+        }
         if (context instanceof StandardContext) {
             StandardContext standardContext = (StandardContext) context;
-            onameStr = domain + ":j2eeType=Filter,name=" +
-                 filterDef.getFilterName() + ",WebModule=" + webMod +
-                 ",J2EEApplication=" +
+            onameStr = domain + ":j2eeType=Filter,name=" + filterName +
+                 ",WebModule=" + webMod + ",J2EEApplication=" +
                  standardContext.getJ2EEApplication() + ",J2EEServer=" +
                  standardContext.getJ2EEServer();
         } else {
-            onameStr = domain + ":j2eeType=Filter,name=" +
-                 filterDef.getFilterName() + ",WebModule=" + webMod;
+            onameStr = domain + ":j2eeType=Filter,name=" + filterName +
+                 ",WebModule=" + webMod;
         }
         try {
             oname = new ObjectName(onameStr);

==================================================
Util.java
index a36b514ad1..1becf65a0d 100644
--- a/java/org/apache/catalina/core/StandardWrapper.java
+++ b/java/org/apache/catalina/core/StandardWrapper.java
@@ -66,6 +66,7 @@ import org.apache.tomcat.PeriodicEventListener;
 import org.apache.tomcat.util.ExceptionUtils;
 import org.apache.tomcat.util.log.SystemLogHandler;
 import org.apache.tomcat.util.modeler.Registry;
+import org.apache.tomcat.util.modeler.Util;
 
 /**
  * Standard implementation of the <b>Wrapper</b> interface that represents
@@ -1775,7 +1776,11 @@ public class StandardWrapper extends ContainerBase
         StringBuilder keyProperties =
             new StringBuilder("j2eeType=Servlet,name=");
 
-        keyProperties.append(getName());
+        String name = getName();
+        if (Util.objectNameValueNeedsQuote(name)) {
+            name = ObjectName.quote(name);
+        }
+        keyProperties.append(name);
 
         keyProperties.append(getWebModuleKeyProperties());
 

==================================================
TestApplicationFilterConfig.java
new file mode 100644
index 0000000000..17a70d715f
--- /dev/null
+++ b/java/org/apache/tomcat/util/modeler/Util.java
@@ -0,0 +1,35 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one or more
+ *  contributor license agreements.  See the NOTICE file distributed with
+ *  this work for additional information regarding copyright ownership.
+ *  The ASF licenses this file to You under the Apache License, Version 2.0
+ *  (the "License"); you may not use this file except in compliance with
+ *  the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing, software
+ *  distributed under the License is distributed on an "AS IS" BASIS,
+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *  See the License for the specific language governing permissions and
+ *  limitations under the License.
+ */
+package org.apache.tomcat.util.modeler;
+
+public class Util {
+
+    private Util() {
+        // Utility class. Hide default constructor.
+    }
+
+    public static boolean objectNameValueNeedsQuote(String input) {
+        char[] chars = input.toCharArray();
+        for (int i = 0; i < input.length(); i++) {
+            char ch = chars[i];
+            if (ch == ',' || ch == '=' || ch == ':' || ch == '*' || ch == '?') {
+                return true;
+            }
+        }
+        return false;
+    }
+}

==================================================
