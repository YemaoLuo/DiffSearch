872ca10a2bd65a07d16ff521fd439bc041c29236
==================================================
Fix svn:eol-style for three recent source files.
==================================================
Rainer Jung
==================================================
Mon Jan 16 08:17:31 2012 +0000
==================================================
QueryTimeoutInterceptor.java
Fix svn:eol-style for three recent source files.


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1231856 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestQueryTimeoutInterceptor.java
index e5e27217a1..a78d6a5dbb 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/interceptor/QueryTimeoutInterceptor.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/interceptor/QueryTimeoutInterceptor.java
@@ -1,56 +1,56 @@
-/*
- *  Licensed to the Apache Software Foundation (ASF) under one or more
- *  contributor license agreements.  See the NOTICE file distributed with
- *  this work for additional information regarding copyright ownership.
- *  The ASF licenses this file to You under the Apache License, Version 2.0
- *  (the "License"); you may not use this file except in compliance with
- *  the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-
-package org.apache.tomcat.jdbc.pool.interceptor;
-
-import java.lang.reflect.Method;
-import java.sql.SQLException;
-import java.sql.Statement;
-import java.util.Map;
-
-import org.apache.juli.logging.Log;
-import org.apache.juli.logging.LogFactory;
-import org.apache.tomcat.jdbc.pool.PoolProperties.InterceptorProperty;
-
-public class QueryTimeoutInterceptor extends AbstractCreateStatementInterceptor {
-    private static Log log = LogFactory.getLog(QueryTimeoutInterceptor.class);
-    int timeout;
-    
-    @Override
-    public void setProperties(Map<String,InterceptorProperty> properties) {
-        super.setProperties(properties);
-        timeout = properties.get("queryTimeout").getValueAsInt(-1);
-    }
-
-    @Override
-    public Object createStatement(Object proxy, Method method, Object[] args, Object statement, long time) {
-        if (statement instanceof Statement && timeout > 0) {
-            Statement s = (Statement)statement;
-            try {
-                s.setQueryTimeout(timeout);
-            }catch (SQLException x) {
-                log.warn("[QueryTimeoutInterceptor] Unable to set query timeout:"+x.getMessage(),x);
-            }
-        }
-        return statement;
-    }
-
-    @Override
-    public void closeInvoked() {
-    }
-
-}
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one or more
+ *  contributor license agreements.  See the NOTICE file distributed with
+ *  this work for additional information regarding copyright ownership.
+ *  The ASF licenses this file to You under the Apache License, Version 2.0
+ *  (the "License"); you may not use this file except in compliance with
+ *  the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing, software
+ *  distributed under the License is distributed on an "AS IS" BASIS,
+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *  See the License for the specific language governing permissions and
+ *  limitations under the License.
+ */
+
+package org.apache.tomcat.jdbc.pool.interceptor;
+
+import java.lang.reflect.Method;
+import java.sql.SQLException;
+import java.sql.Statement;
+import java.util.Map;
+
+import org.apache.juli.logging.Log;
+import org.apache.juli.logging.LogFactory;
+import org.apache.tomcat.jdbc.pool.PoolProperties.InterceptorProperty;
+
+public class QueryTimeoutInterceptor extends AbstractCreateStatementInterceptor {
+    private static Log log = LogFactory.getLog(QueryTimeoutInterceptor.class);
+    int timeout;
+    
+    @Override
+    public void setProperties(Map<String,InterceptorProperty> properties) {
+        super.setProperties(properties);
+        timeout = properties.get("queryTimeout").getValueAsInt(-1);
+    }
+
+    @Override
+    public Object createStatement(Object proxy, Method method, Object[] args, Object statement, long time) {
+        if (statement instanceof Statement && timeout > 0) {
+            Statement s = (Statement)statement;
+            try {
+                s.setQueryTimeout(timeout);
+            }catch (SQLException x) {
+                log.warn("[QueryTimeoutInterceptor] Unable to set query timeout:"+x.getMessage(),x);
+            }
+        }
+        return statement;
+    }
+
+    @Override
+    public void closeInvoked() {
+    }
+
+}

==================================================
TestOutputBuffer.java
index 256dd11711..60bf97b322 100644
--- a/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/TestQueryTimeoutInterceptor.java
+++ b/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/TestQueryTimeoutInterceptor.java
@@ -1,54 +1,54 @@
-/*
- *  Licensed to the Apache Software Foundation (ASF) under one or more
- *  contributor license agreements.  See the NOTICE file distributed with
- *  this work for additional information regarding copyright ownership.
- *  The ASF licenses this file to You under the Apache License, Version 2.0
- *  (the "License"); you may not use this file except in compliance with
- *  the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-
-package org.apache.tomcat.jdbc.test;
-
-import java.sql.Connection;
-import java.sql.Statement;
-
-import org.apache.tomcat.jdbc.pool.interceptor.QueryTimeoutInterceptor;
-import org.apache.tomcat.jdbc.test.driver.Driver;
-
-
-public class TestQueryTimeoutInterceptor extends DefaultTestCase {
-
-    public TestQueryTimeoutInterceptor(String name) {
-        super(name);
-    }
-
-    public void testTimeout() throws Exception {
-        int timeout = 10;
-        int withoutuser =10;
-        int withuser = withoutuser;
-        this.init();
-        this.datasource.setMaxActive(withuser+withoutuser);
-        this.datasource.setJdbcInterceptors(QueryTimeoutInterceptor.class.getName()+"(queryTimeout="+timeout+")");
-        this.datasource.setDriverClassName(Driver.class.getName());
-        this.datasource.setUrl("jdbc:tomcat:test");
-        Connection con = this.datasource.getConnection();
-        Statement st = con.createStatement();
-        assertEquals(st.getClass().getName(),timeout,st.getQueryTimeout());
-        st.close();
-        st = con.prepareStatement("");
-        assertEquals(st.getClass().getName(),timeout,st.getQueryTimeout());
-        st.close();
-        st = con.prepareCall("");
-        assertEquals(st.getClass().getName(),timeout,st.getQueryTimeout());
-        st.close();
-        con.close();
-    }
-}
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one or more
+ *  contributor license agreements.  See the NOTICE file distributed with
+ *  this work for additional information regarding copyright ownership.
+ *  The ASF licenses this file to You under the Apache License, Version 2.0
+ *  (the "License"); you may not use this file except in compliance with
+ *  the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing, software
+ *  distributed under the License is distributed on an "AS IS" BASIS,
+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *  See the License for the specific language governing permissions and
+ *  limitations under the License.
+ */
+
+package org.apache.tomcat.jdbc.test;
+
+import java.sql.Connection;
+import java.sql.Statement;
+
+import org.apache.tomcat.jdbc.pool.interceptor.QueryTimeoutInterceptor;
+import org.apache.tomcat.jdbc.test.driver.Driver;
+
+
+public class TestQueryTimeoutInterceptor extends DefaultTestCase {
+
+    public TestQueryTimeoutInterceptor(String name) {
+        super(name);
+    }
+
+    public void testTimeout() throws Exception {
+        int timeout = 10;
+        int withoutuser =10;
+        int withuser = withoutuser;
+        this.init();
+        this.datasource.setMaxActive(withuser+withoutuser);
+        this.datasource.setJdbcInterceptors(QueryTimeoutInterceptor.class.getName()+"(queryTimeout="+timeout+")");
+        this.datasource.setDriverClassName(Driver.class.getName());
+        this.datasource.setUrl("jdbc:tomcat:test");
+        Connection con = this.datasource.getConnection();
+        Statement st = con.createStatement();
+        assertEquals(st.getClass().getName(),timeout,st.getQueryTimeout());
+        st.close();
+        st = con.prepareStatement("");
+        assertEquals(st.getClass().getName(),timeout,st.getQueryTimeout());
+        st.close();
+        st = con.prepareCall("");
+        assertEquals(st.getClass().getName(),timeout,st.getQueryTimeout());
+        st.close();
+        con.close();
+    }
+}

==================================================
