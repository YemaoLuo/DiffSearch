2c607d36a5961fa2a2ae7311c2c657f80a2ba959
==================================================
UCDetector clean-up
==================================================
Mark Emlyn
==================================================
Fri Jul 13 21:44:35 2012 +0000
==================================================
ReplicatedContext.java
UCDetector clean-up
 - Remove unused code
 - Use final where appropriate

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1361407 13f79535-47bb-0310-9956-ffa450edef68



==================================================
FarmWarDeployer.java
index 623fa2e874..fe8eba95c0 100644
--- a/java/org/apache/catalina/ha/context/ReplicatedContext.java
+++ b/java/org/apache/catalina/ha/context/ReplicatedContext.java
@@ -44,7 +44,7 @@ import org.apache.juli.logging.LogFactory;
 public class ReplicatedContext extends StandardContext implements MapOwner {
     private int mapSendOptions = Channel.SEND_OPTIONS_DEFAULT;
     private static final Log log = LogFactory.getLog( ReplicatedContext.class );
-    protected static long DEFAULT_REPL_TIMEOUT = 15000;//15 seconds
+    protected static final long DEFAULT_REPL_TIMEOUT = 15000;//15 seconds
 
     /**
      * Start this component and implement the requirements
@@ -60,10 +60,9 @@ public class ReplicatedContext extends StandardContext implements MapOwner {
             CatalinaCluster catclust = (CatalinaCluster)this.getCluster();
             if (this.context == null) this.context = new ReplApplContext(this);
             if ( catclust != null ) {
-                ReplicatedMap<String,Object> map =
-                        new ReplicatedMap<String,Object>(this,
-                                catclust.getChannel(),DEFAULT_REPL_TIMEOUT,
-                                getName(),getClassLoaders());
+                ReplicatedMap<String,Object> map = new ReplicatedMap<>(
+                        this, catclust.getChannel(),DEFAULT_REPL_TIMEOUT,
+                        getName(),getClassLoaders());
                 map.setChannelSendOptions(mapSendOptions);
                 ((ReplApplContext)this.context).setAttributeMap(map);
                 if (getAltDDName() != null) context.setAttribute(Globals.ALT_DD_ATTR, getAltDDName());
@@ -130,8 +129,8 @@ public class ReplicatedContext extends StandardContext implements MapOwner {
 
 
     protected static class ReplApplContext extends ApplicationContext {
-        protected ConcurrentHashMap<String, Object> tomcatAttributes =
-            new ConcurrentHashMap<String, Object>();
+        protected final ConcurrentHashMap<String, Object> tomcatAttributes =
+            new ConcurrentHashMap<>();
 
         public ReplApplContext(ReplicatedContext context) {
             super(context);
@@ -181,17 +180,17 @@ public class ReplicatedContext extends StandardContext implements MapOwner {
         @SuppressWarnings("unchecked")
         @Override
         public Enumeration<String> getAttributeNames() {
-            Set<String> names = new HashSet<String>();
+            Set<String> names = new HashSet<>();
             names.addAll(attributes.keySet());
 
-            return new MultiEnumeration<String>(new Enumeration[] {
+            return new MultiEnumeration<>(new Enumeration[] {
                     super.getAttributeNames(),
                     Collections.enumeration(names) });
         }
     }
 
     protected static class MultiEnumeration<T> implements Enumeration<T> {
-        Enumeration<T>[] e=null;
+        private final Enumeration<T>[] e;
         public MultiEnumeration(Enumeration<T>[] lists) {
             e = lists;
         }

==================================================
FileMessage.java
index b3266d04d9..7235f527f1 100644
--- a/java/org/apache/catalina/ha/deploy/FarmWarDeployer.java
+++ b/java/org/apache/catalina/ha/deploy/FarmWarDeployer.java
@@ -69,8 +69,8 @@ public class FarmWarDeployer extends ClusterListener
     /*--Instance Variables--------------------------------------*/
     protected boolean started = false; //default 5 seconds
 
-    protected HashMap<String, FileMessageFactory> fileFactories =
-        new HashMap<String, FileMessageFactory>();
+    protected final HashMap<String, FileMessageFactory> fileFactories =
+        new HashMap<>();
 
     protected String deployDir;
 
@@ -104,11 +104,6 @@ public class FarmWarDeployer extends ClusterListener
      */
     protected Host host = null;
 
-    /**
-     * The host appBase.
-     */
-    protected File appBase = null;
-
     /**
      * MBean server.
      */
@@ -196,11 +191,6 @@ public class FarmWarDeployer extends ClusterListener
             log.info(sm.getString("farmWarDeployer.stopped"));
     }
 
-    public void cleanDeployDir() {
-        throw new java.lang.UnsupportedOperationException(sm.getString(
-                "farmWarDeployer.notImplemented", "cleanDeployDir()"));
-    }
-
     /**
      * Callback from the cluster, when a message is received, The cluster will
      * broadcast it invoking the messageReceived on the receiver.
@@ -407,7 +397,7 @@ public class FarmWarDeployer extends ClusterListener
         Member localMember = getCluster().getLocalMember();
         UndeployMessage msg = new UndeployMessage(localMember, System
                 .currentTimeMillis(), "Undeploy:" + contextName + ":"
-                + System.currentTimeMillis(), contextName, undeploy);
+                + System.currentTimeMillis(), contextName);
         if (log.isDebugEnabled())
             log.debug(sm.getString("farmWarDeployer.removeTxMsg", contextName));
         cluster.send(msg);

==================================================
FileMessageFactory.java
index 9fb67e819c..bdce4eb74b 100644
--- a/java/org/apache/catalina/ha/deploy/FileMessage.java
+++ b/java/org/apache/catalina/ha/deploy/FileMessage.java
@@ -28,16 +28,15 @@ import org.apache.catalina.tribes.Member;
  */
 
 public class FileMessage extends ClusterMessageBase {
-    private static final long serialVersionUID = 1L;
+    private static final long serialVersionUID = 2L;
 
     private int messageNumber;
     private byte[] data;
     private int dataLength;
 
-    private long totalLength;
     private long totalNrOfMsgs;
-    private String fileName;
-    private String contextName;
+    private final String fileName;
+    private final String contextName;
 
     public FileMessage(Member source,
                        String fileName,
@@ -47,16 +46,6 @@ public class FileMessage extends ClusterMessageBase {
         this.contextName=contextName;
     }
 
-    /*
-    public void writeExternal(ObjectOutput out) throws IOException {
-
-    }
-
-    public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException {
-
-    }
-    */
-
     public int getMessageNumber() {
         return messageNumber;
     }
@@ -79,15 +68,6 @@ public class FileMessage extends ClusterMessageBase {
     public int getDataLength() {
         return dataLength;
     }
-    public void setDataLength(int dataLength) {
-        this.dataLength = dataLength;
-    }
-    public long getTotalLength() {
-        return totalLength;
-    }
-    public void setTotalLength(long totalLength) {
-        this.totalLength = totalLength;
-    }
 
     @Override
     public String getUniqueId() {
@@ -103,11 +83,7 @@ public class FileMessage extends ClusterMessageBase {
     public String getFileName() {
         return fileName;
     }
-    public void setFileName(String fileName) {
-        this.fileName = fileName;
-    }
     public String getContextName() {
         return contextName;
     }
-
 }

==================================================
UndeployMessage.java
index 76bba92742..d3182fb853 100644
--- a/java/org/apache/catalina/ha/deploy/LocalStrings.properties
+++ b/java/org/apache/catalina/ha/deploy/LocalStrings.properties
@@ -27,7 +27,6 @@ farmWarDeployer.modInstallFail=Unable to install WAR file
 farmWarDeployer.msgIoe=Unable to read farm deploy file message.
 farmWarDeployer.msgRxDeploy=Receive cluster deployment path [{0}], war [{1}]
 farmWarDeployer.msgRxUndeploy=Receive cluster undeployment from path [{0}]
-farmWarDeployer.notImplemented=Method [{0}] not yet implemented.
 farmWarDeployer.removeStart=Cluster wide remove of web app [{0}]
 farmWarDeployer.removeTxMsg=Send cluster wide undeployment from [{0}]
 farmWarDeployer.removeFailRemote=Local remove from [{0}] failed, other manager has app in service!

==================================================
WarWatcher.java
index 979626330e..eafc6cae5d 100644
--- a/java/org/apache/catalina/ha/deploy/UndeployMessage.java
+++ b/java/org/apache/catalina/ha/deploy/UndeployMessage.java
@@ -21,27 +21,20 @@ import org.apache.catalina.ha.ClusterMessage;
 import org.apache.catalina.tribes.Member;
 
 public class UndeployMessage implements ClusterMessage {
-    private static final long serialVersionUID = 1L;
+    private static final long serialVersionUID = 2L;
 
     private Member address;
     private long timestamp;
     private String uniqueId;
-    private String contextName;
-    private boolean undeploy;
-    private int resend = 0;
-    private int compress = 0;
+    private final String contextName;
 
-    public UndeployMessage() {} //for serialization
     public UndeployMessage(Member address,
                            long timestamp,
                            String uniqueId,
-                           String contextName,
-                           boolean undeploy) {
+                           String contextName) {
         this.address  = address;
         this.timestamp= timestamp;
-        this.undeploy = undeploy;
         this.uniqueId = uniqueId;
-        this.undeploy = undeploy;
         this.contextName = contextName;
     }
 
@@ -78,45 +71,4 @@ public class UndeployMessage implements ClusterMessage {
     public String getContextName() {
         return contextName;
     }
-
-    public void setContextPath(String contextName) {
-        this.contextName = contextName;
-    }
-
-    public boolean getUndeploy() {
-        return undeploy;
-    }
-
-    public void setUndeploy(boolean undeploy) {
-        this.undeploy = undeploy;
-    }
-    /**
-     * @return Returns the compress.
-     * @since 5.5.10
-     */
-    public int getCompress() {
-        return compress;
-    }
-    /**
-     * @param compress The compress to set.
-     * @since 5.5.10
-     */
-    public void setCompress(int compress) {
-        this.compress = compress;
-    }
-    /**
-     * @return Returns the resend.
-     * @since 5.5.10
-     */
-    public int getResend() {
-        return resend;
-    }
-    /**
-     * @param resend The resend to set.
-     * @since 5.5.10
-     */
-    public void setResend(int resend) {
-        this.resend = resend;
-    }
-
 }

==================================================
