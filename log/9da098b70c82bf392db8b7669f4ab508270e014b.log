9da098b70c82bf392db8b7669f4ab508270e014b
==================================================
revert 1553187
==================================================
Jeremy Boynes
==================================================
Tue Dec 24 15:36:25 2013 +0000
==================================================
Cookies.java
revert 1553187

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1553290 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestCookies.java
index 5be69c01b8..8a9f4197fd 100644
--- a/java/org/apache/tomcat/util/http/Cookies.java
+++ b/java/org/apache/tomcat/util/http/Cookies.java
@@ -508,7 +508,14 @@ public final class Cookies {
     private static final int getTokenEndPosition(byte bytes[], int off, int end,
             int version, boolean isName){
         int pos = off;
-        while (pos < end && allowInToken(bytes[pos], version, isName)) {
+        while (pos < end &&
+                (!CookieSupport.isHttpSeparator((char)bytes[pos]) ||
+                 version == 0 &&
+                        CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 &&
+                        bytes[pos] != '=' &&
+                        !CookieSupport.isV0Separator((char)bytes[pos]) ||
+                 !isName && bytes[pos] == '=' &&
+                         CookieSupport.ALLOW_EQUALS_IN_VALUE)) {
             pos++;
         }
 
@@ -518,34 +525,6 @@ public final class Cookies {
         return pos;
     }
 
-    private static boolean allowInToken(byte b, int version, boolean isName) {
-        // byte is signed so cast into a positive int for comparisons
-        int octet = ((int)b) & 0xff;
-
-        // disallow all controls
-        if (octet < 0x20 && octet != 0x09 || octet >= 0x7f && octet < 0xa0) {
-            throw new IllegalArgumentException(
-                    "Control character in cookie value or attribute.");
-        }
-
-        // values 0xa0-0xff are allowed in V0 values, otherwise disallow
-        if (octet >= 0x80) {
-            if (isName || version != 0) {
-                throw new IllegalArgumentException(
-                        "Control character in cookie value or attribute.");
-            }
-            return true;
-        }
-
-        return !CookieSupport.isHttpSeparator((char) b) ||
-                version == 0 &&
-                        CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 &&
-                        b != '=' &&
-                        !CookieSupport.isV0Separator((char) b) ||
-                !isName && b == '=' &&
-                        CookieSupport.ALLOW_EQUALS_IN_VALUE;
-    }
-
     /**
      * Given a starting position after an initial quote character, this gets
      * the position of the end quote. This escapes anything after a '\' char

==================================================
