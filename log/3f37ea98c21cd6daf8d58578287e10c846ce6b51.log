3f37ea98c21cd6daf8d58578287e10c846ce6b51
==================================================
Add support for the EECDH alias when using the OpenSSL cipher syntax to define JSSE ciphers.
==================================================
Mark Emlyn
==================================================
Fri Aug 22 14:38:23 2014 +0000
==================================================
OpenSSLCipherConfigurationParser.java
Add support for the EECDH alias when using the OpenSSL cipher syntax to define JSSE ciphers.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1619820 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestOpenSSLCipherConfigurationParser.java
index fb6b257d51..9ab5e8d73d 100644
--- a/java/org/apache/tomcat/util/net/jsse/openssl/OpenSSLCipherConfigurationParser.java
+++ b/java/org/apache/tomcat/util/net/jsse/openssl/OpenSSLCipherConfigurationParser.java
@@ -163,6 +163,11 @@ public class OpenSSLCipherConfigurationParser {
      * Cipher suites using ephemeral ECDH key agreement, including anonymous cipher suites.
      */
     private static final String kEECDH = "kEECDH";
+    /**
+     * Cipher suites using ephemeral ECDH key agreement, excluding anonymous cipher suites.
+     * Same as "kEECDH:-AECDH"
+     */
+    private static final String EECDH = "EECDH";
     /**
      * Cipher suitesusing ECDH key exchange, including anonymous, ephemeral and fixed ECDH.
      */
@@ -407,6 +412,9 @@ public class OpenSSLCipherConfigurationParser {
         aliases.put(ECDHE, aliases.get(kECDHE));
         addListAlias(kEECDH, filterByKeyExchange(allCiphers, Collections.singleton(KeyExchange.EECDH)));
         aliases.put(EECDHE, aliases.get(kEECDH));
+        Set<Cipher> eecdh = filterByKeyExchange(allCiphers, Collections.singleton(KeyExchange.EECDH));
+        eecdh.removeAll(filterByAuthentication(allCiphers, Collections.singleton(Authentication.aNULL)));
+        addListAlias(EECDH, eecdh);
         addListAlias(aDSS, filterByAuthentication(allCiphers, Collections.singleton(Authentication.DSS)));
         aliases.put("DSS", aliases.get(aDSS));
         addListAlias(aDH, filterByAuthentication(allCiphers, Collections.singleton(Authentication.DH)));

==================================================
