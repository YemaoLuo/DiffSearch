2557cbe4271a6b1f8bb8210e6a6e060f4533803a
==================================================
More Java 8 Javadoc error fixes
==================================================
Mark Emlyn
==================================================
Mon Oct 13 16:27:15 2014 +0000
==================================================
TaglibXml.java
More Java 8 Javadoc error fixes

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1631458 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TldResourcePath.java
index 93d6fbf8fb..41acd1e323 100644
--- a/java/org/apache/tomcat/util/descriptor/tld/TaglibXml.java
+++ b/java/org/apache/tomcat/util/descriptor/tld/TaglibXml.java
@@ -23,7 +23,7 @@ import javax.servlet.jsp.tagext.FunctionInfo;
 
 /**
  * Common representation of a Tag Library Descriptor (TLD) XML file.
- * <p/>
+ * <p>
  * This stores the raw result of parsing an TLD XML file, flattening different
  * version of the descriptors to a common format. This is different to a
  * TagLibraryInfo instance that would be passed to a tag validator in that it

==================================================
CallParamRule.java
index 23ba071c24..73f71011bf 100644
--- a/java/org/apache/tomcat/util/descriptor/tld/TldResourcePath.java
+++ b/java/org/apache/tomcat/util/descriptor/tld/TldResourcePath.java
@@ -26,7 +26,7 @@ import org.apache.tomcat.util.scan.JarFactory;
 
 /**
  * A TLD Resource Path as defined in JSP 7.3.2.
- * <p/>
+ * <p>
  * This encapsulates references to Tag Library Descriptors that can be located
  * in different places:
  * <ul>

==================================================
Digester.java
index 25d0e65a44..43aefe346b 100644
--- a/java/org/apache/tomcat/util/digester/CallParamRule.java
+++ b/java/org/apache/tomcat/util/digester/CallParamRule.java
@@ -14,28 +14,22 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-
-
 package org.apache.tomcat.util.digester;
 
-
 import org.xml.sax.Attributes;
 
-
 /**
  * <p>Rule implementation that saves a parameter for use by a surrounding
- * <code>CallMethodRule<code>.</p>
+ * <code>CallMethodRule</code>.</p>
  *
- * <p>This parameter may be:
+ * <p>This parameter may be:</p>
  * <ul>
  * <li>from an attribute of the current element
  * See {@link #CallParamRule(int paramIndex, String attributeName)}
  * <li>from current the element body
  * See {@link #CallParamRule(int paramIndex)}
  * </ul>
- * </p>
  */
-
 public class CallParamRule extends Rule {
 
     // ----------------------------------------------------------- Constructors

==================================================
CookieSupport.java
index eb4e396262..37e01820ff 100644
--- a/java/org/apache/tomcat/util/digester/Digester.java
+++ b/java/org/apache/tomcat/util/digester/Digester.java
@@ -442,7 +442,7 @@ public class Digester extends DefaultHandler2 {
     /**
      * Sets a flag indicating whether the requested feature is supported
      * by the underlying implementation of <code>org.xml.sax.XMLReader</code>.
-     * See <a href="http://www.saxproject.org/apidoc/xml/sax/package-summary.html#package-description"
+     * See <a href="http://www.saxproject.org/apidoc/xml/sax/package-summary.html#package-description">
      * http://www.saxproject.org/apidoc/xml/sax/package-summary.html#package-description</a>
      * for information about the standard SAX2 feature flags.  In order to be
      * effective, this method must be called <strong>before</strong> the
@@ -616,7 +616,7 @@ public class Digester extends DefaultHandler2 {
     /**
      * Return the current value of the specified property for the underlying
      * <code>XMLReader</code> implementation.
-     * See <a href="http://www.saxproject.org/apidoc/xml/sax/package-summary.html#package-description"
+     * See <a href="http://www.saxproject.org/apidoc/xml/sax/package-summary.html#package-description">
      * http://www.saxproject.org/apidoc/xml/sax/package-summary.html#package-description</a>
      * for information about the standard SAX2 properties.
      *

==================================================
ServerCookie.java
index 08dc46e2e9..23c52405d9 100644
--- a/java/org/apache/tomcat/util/http/CookieSupport.java
+++ b/java/org/apache/tomcat/util/http/CookieSupport.java
@@ -41,8 +41,8 @@ public final class CookieSupport {
     /**
      * If true, separators that are not explicitly dis-allowed by the v0 cookie
      * spec but are disallowed by the HTTP spec will be allowed in v0 cookie
-     * names and values. These characters are: \"()/:<=>?@[\\]{} Note that the
-     * inclusion of / depends on the value of {@link #FWD_SLASH_IS_SEPARATOR}.
+     * names and values. These characters are: \"()/:&lt;=&gt;?@[\\]{} Note that
+     * the inclusion of / depends on the value of {@link #FWD_SLASH_IS_SEPARATOR}.
      */
     public static final boolean ALLOW_HTTP_SEPARATORS_IN_V0;
 

==================================================
MultipartStream.java
index 6bbc7d9154..3f4741efb4 100644
--- a/java/org/apache/tomcat/util/http/ServerCookie.java
+++ b/java/org/apache/tomcat/util/http/ServerCookie.java
@@ -24,7 +24,7 @@ import org.apache.tomcat.util.buf.MessageBytes;
 /**
  *  Server-side cookie representation.
  *  Allows recycling and uses MessageBytes as low-level
- *  representation ( and thus the byte-> char conversion can be delayed
+ *  representation ( and thus the byte -&gt; char conversion can be delayed
  *  until we know the charset ).
  *
  *  Tomcat.core uses this recyclable object to represent cookies,

==================================================
BaseModelMBean.java
index f192e84f58..3af71353c1 100644
--- a/java/org/apache/tomcat/util/http/fileupload/MultipartStream.java
+++ b/java/org/apache/tomcat/util/http/fileupload/MultipartStream.java
@@ -49,7 +49,7 @@ import org.apache.tomcat.util.http.fileupload.util.Streams;
  *   header-part := 1*header CRLF<br>
  *   header := header-name ":" header-value<br>
  *   header-name := &lt;printable ascii characters except ":"&gt;<br>
- *   header-value := &lt;any ascii characters except CR & LF&gt;<br>
+ *   header-value := &lt;any ascii characters except CR &amp; LF&gt;<br>
  *   body-data := &lt;arbitrary data&gt;<br>
  * </code>
  *

==================================================
SecureNio2Channel.java
index 5bff573e9f..40e9528c68 100644
--- a/java/org/apache/tomcat/util/modeler/BaseModelMBean.java
+++ b/java/org/apache/tomcat/util/modeler/BaseModelMBean.java
@@ -523,11 +523,7 @@ public class BaseModelMBean implements DynamicMBean, MBeanRegistration, ModelMBe
      * Set the instance handle of the object against which we will execute
      * all methods in this ModelMBean management interface.
      *
-     * <strike>This method will detect and call "setModelMbean" method. A resource
-     * can implement this method to get a reference to the model mbean.
-     * The reference can be used to send notification and access the
-     * registry.
-     * </strike> The caller can provide the mbean instance or the object name to
+     * The caller can provide the mbean instance or the object name to
      * the resource, if needed.
      *
      * @param resource The resource object to be managed

==================================================
SecureNioChannel.java
index 03dccaaff4..ba16492244 100644
--- a/java/org/apache/tomcat/util/net/SecureNio2Channel.java
+++ b/java/org/apache/tomcat/util/net/SecureNio2Channel.java
@@ -413,7 +413,7 @@ public class SecureNio2Channel extends Nio2Channel  {
      * To close the connection, you could do something like
      * <pre><code>
      *   close();
-     *   while (isOpen() && !myTimeoutFunction()) Thread.sleep(25);
+     *   while (isOpen() &amp;&amp; !myTimeoutFunction()) Thread.sleep(25);
      *   if ( isOpen() ) close(true); //forces a close if you timed out
      * </code></pre>
      * @throws IOException if an I/O error occurs

==================================================
SocketProperties.java
index 00ee8cbde5..90543b1edc 100644
--- a/java/org/apache/tomcat/util/net/SecureNioChannel.java
+++ b/java/org/apache/tomcat/util/net/SecureNioChannel.java
@@ -354,7 +354,7 @@ public class SecureNioChannel extends NioChannel  {
      * To close the connection, you could do something like
      * <pre><code>
      *   close();
-     *   while (isOpen() && !myTimeoutFunction()) Thread.sleep(25);
+     *   while (isOpen() &amp;&amp; !myTimeoutFunction()) Thread.sleep(25);
      *   if ( isOpen() ) close(true); //forces a close if you timed out
      * </code></pre>
      * @throws IOException if an I/O error occurs

==================================================
URL.java
index 40f9fca517..7ae8cf4ad5 100644
--- a/java/org/apache/tomcat/util/net/SocketProperties.java
+++ b/java/org/apache/tomcat/util/net/SocketProperties.java
@@ -54,7 +54,7 @@ public class SocketProperties {
      * Default is 500
      * -1 is unlimited
      * 0 is disabled
-     * >0 the max number of objects to keep in cache.
+     * &gt;0 the max number of objects to keep in cache.
      */
     protected int eventCache = 500;
 

==================================================
JSSESocketFactory.java
index b1635bc93e..c9920b4bde 100644
--- a/java/org/apache/tomcat/util/net/URL.java
+++ b/java/org/apache/tomcat/util/net/URL.java
@@ -33,10 +33,10 @@ import java.util.Locale;
  *
  * <p><strong>WARNING</strong> - This class assumes that the string
  * representation of a URL conforms to the <code>spec</code> argument
- * as described in RFC 2396 "Uniform Resource Identifiers: Generic Syntax":
+ * as described in RFC 2396 "Uniform Resource Identifiers: Generic Syntax":</p>
  * <pre>
  *   &lt;scheme&gt;//&lt;authority&gt;&lt;path&gt;?&lt;query&gt;#&lt;fragment&gt;
- * </pre></p>
+ * </pre>
  *
  * <p><strong>FIXME</strong> - This class really ought to end up in a Commons
  * package someplace.</p>

==================================================
