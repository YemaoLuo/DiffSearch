cdd16bc0ff6870145a50ab3b5ac4804d4a3540ec
==================================================
StringBuffer -> StringBuilder for o.a.c.tribes
==================================================
Mark Emlyn
==================================================
Mon Nov 2 18:37:26 2009 +0000
==================================================
ChannelException.java
StringBuffer -> StringBuilder for o.a.c.tribes

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@832021 13f79535-47bb-0310-9956-ffa450edef68



==================================================
UniqueId.java
index b202df0ed4..940cdb3fa7 100644
--- a/java/org/apache/catalina/tribes/ChannelException.java
+++ b/java/org/apache/catalina/tribes/ChannelException.java
@@ -81,7 +81,7 @@ public class ChannelException extends Exception {
      * @see java.lang.Exception#getMessage()
      */
     public String getMessage() {
-        StringBuffer buf = new StringBuffer(super.getMessage());
+        StringBuilder buf = new StringBuilder(super.getMessage());
         if (faultyMembers==null || faultyMembers.size() == 0 ) {
             buf.append("; No faulty members identified.");
         } else {

==================================================
GroupChannel.java
index db69de0f37..3fdf39fb30 100644
--- a/java/org/apache/catalina/tribes/UniqueId.java
+++ b/java/org/apache/catalina/tribes/UniqueId.java
@@ -64,7 +64,7 @@ public final class UniqueId implements Serializable{
     }
     
     public String toString() {
-        StringBuffer buf = new StringBuffer("UniqueId");
+        StringBuilder buf = new StringBuilder("UniqueId");
         buf.append(org.apache.catalina.tribes.util.Arrays.toString(id));
         return buf.toString();
     }

==================================================
RpcChannel.java
index f8cb312939..860f651d47 100644
--- a/java/org/apache/catalina/tribes/group/GroupChannel.java
+++ b/java/org/apache/catalina/tribes/group/GroupChannel.java
@@ -367,7 +367,7 @@ public class GroupChannel extends ChannelInterceptorBase implements ManagedChann
      * @throws ChannelException
      */
     protected void checkOptionFlags() throws ChannelException {
-        StringBuffer conflicts = new StringBuffer();
+        StringBuilder conflicts = new StringBuilder();
         ChannelInterceptor first = interceptors;
         while ( first != null ) {
             int flag = first.getOptionFlag();

==================================================
RpcMessage.java
index 48ccbc4c9b..45f10b9e49 100644
--- a/java/org/apache/catalina/tribes/group/RpcChannel.java
+++ b/java/org/apache/catalina/tribes/group/RpcChannel.java
@@ -251,7 +251,7 @@ public class RpcChannel implements ChannelListener{
     }
     
     protected static String bToS(byte[] data) {
-        StringBuffer buf = new StringBuffer(4*16);
+        StringBuilder buf = new StringBuilder(4*16);
         buf.append("{");
         for (int i=0; data!=null && i<data.length; i++ ) buf.append(String.valueOf(data[i])).append(" ");
         buf.append("}");

==================================================
NonBlockingCoordinator.java
index 4b24f0fec5..be79b3421c 100644
--- a/java/org/apache/catalina/tribes/group/RpcMessage.java
+++ b/java/org/apache/catalina/tribes/group/RpcMessage.java
@@ -72,7 +72,7 @@ public class RpcMessage implements Externalizable {
     }
     
     public String toString() {
-        StringBuffer buf = new StringBuffer("RpcMessage[");
+        StringBuilder buf = new StringBuilder("RpcMessage[");
         buf.append(super.toString());
         buf.append("] rpcId=");
         buf.append(Arrays.toString(rpcId));

==================================================
ThroughputInterceptor.java
index 50f7235a0c..39a299bb37 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/NonBlockingCoordinator.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/NonBlockingCoordinator.java
@@ -817,7 +817,7 @@ public class NonBlockingCoordinator extends ChannelInterceptorBase {
         }
         
         public String toString() {
-            StringBuffer buf = new StringBuffer("CoordinationEvent[type=");
+            StringBuilder buf = new StringBuilder("CoordinationEvent[type=");
             buf.append(type).append("\n\tLocal:");
             Member local = interceptor.getLocalMember(false);
             buf.append(local!=null?local.getName():"").append("\n\tCoord:");

==================================================
ChannelData.java
index 8fafa710fe..bcbc54c30e 100644
--- a/java/org/apache/catalina/tribes/group/interceptors/ThroughputInterceptor.java
+++ b/java/org/apache/catalina/tribes/group/interceptors/ThroughputInterceptor.java
@@ -88,7 +88,7 @@ public class ThroughputInterceptor extends ChannelInterceptorBase {
     }
     
     public void report(double timeTx) {
-        StringBuffer buf = new StringBuffer("ThroughputInterceptor Report[\n\tTx Msg:");
+        StringBuilder buf = new StringBuilder("ThroughputInterceptor Report[\n\tTx Msg:");
         buf.append(msgTxCnt).append(" messages\n\tSent:");
         buf.append(df.format(mbTx));
         buf.append(" MB (total)\n\tSent:");

==================================================
MemberImpl.java
index c8028d833a..51f11c6359 100644
--- a/java/org/apache/catalina/tribes/io/ChannelData.java
+++ b/java/org/apache/catalina/tribes/io/ChannelData.java
@@ -339,7 +339,7 @@ public class ChannelData implements ChannelMessage {
     }
     
     public String toString() {
-        StringBuffer buf = new StringBuffer();
+        StringBuilder buf = new StringBuilder();
         buf.append("ClusterData[src=");
         buf.append(getAddress()).append("; id=");
         buf.append(bToS(getUniqueId())).append("; sent=");
@@ -348,7 +348,7 @@ public class ChannelData implements ChannelMessage {
     }
     
     public static String bToS(byte[] data) {
-        StringBuffer buf = new StringBuffer(4*16);
+        StringBuilder buf = new StringBuilder(4*16);
         buf.append("{");
         for (int i=0; data!=null && i<data.length; i++ ) buf.append(String.valueOf(data[i])).append(" ");
         buf.append("}");

==================================================
AbstractReplicatedMap.java
index 8a8664832b..a82340e862 100644
--- a/java/org/apache/catalina/tribes/membership/MemberImpl.java
+++ b/java/org/apache/catalina/tribes/membership/MemberImpl.java
@@ -508,7 +508,7 @@ public class MemberImpl implements Member, java.io.Externalizable {
      * String representation of this object
      */
     public String toString()  {
-        StringBuffer buf = new StringBuffer("org.apache.catalina.tribes.membership.MemberImpl[");
+        StringBuilder buf = new StringBuilder("org.apache.catalina.tribes.membership.MemberImpl[");
         buf.append(getName()).append(",");
         buf.append(getHostname()).append(",");
         buf.append(port).append(", alive=");
@@ -526,7 +526,7 @@ public class MemberImpl implements Member, java.io.Externalizable {
         return bToS(data,data.length);
     }
     public static String bToS(byte[] data, int max) {
-        StringBuffer buf = new StringBuffer(4*16);
+        StringBuilder buf = new StringBuilder(4*16);
         buf.append("{");
         for (int i=0; data!=null && i<data.length; i++ ) {
             buf.append(String.valueOf(data[i])).append(" ");

==================================================
BioSender.java
index 2efb550354..c277975607 100644
--- a/java/org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java
+++ b/java/org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java
@@ -1197,7 +1197,7 @@ public abstract class AbstractReplicatedMap extends ConcurrentHashMap implements
         }
         
         public String toString() {
-            StringBuffer buf = new StringBuffer("MapEntry[key:");
+            StringBuilder buf = new StringBuilder("MapEntry[key:");
             buf.append(getKey()).append("; ");
             buf.append("value:").append(getValue()).append("; ");
             buf.append("primary:").append(isPrimary()).append("; ");
@@ -1236,7 +1236,7 @@ public abstract class AbstractReplicatedMap extends ConcurrentHashMap implements
         private Member primary;
         
         public String toString() {
-            StringBuffer buf = new StringBuffer("MapMessage[context=");
+            StringBuilder buf = new StringBuilder("MapMessage[context=");
             buf.append(new String(mapId));
             buf.append("; type=");
             buf.append(getTypeDesc());

==================================================
Arrays.java
index d6edbf5ef7..ffe6240751 100644
--- a/java/org/apache/catalina/tribes/transport/bio/BioSender.java
+++ b/java/org/apache/catalina/tribes/transport/bio/BioSender.java
@@ -150,7 +150,7 @@ public class BioSender extends AbstractSender implements DataSender {
      * Name of this SockerSender
      */
     public String toString() {
-        StringBuffer buf = new StringBuffer("DataSender[(");
+        StringBuilder buf = new StringBuilder("DataSender[(");
         buf.append(super.toString()).append(")");
         buf.append(getAddress()).append(":").append(getPort()).append("]");
         return buf.toString();

==================================================
StringManager.java
index e732cb2177..a023ba851e 100644
--- a/java/org/apache/catalina/tribes/util/Arrays.java
+++ b/java/org/apache/catalina/tribes/util/Arrays.java
@@ -60,7 +60,7 @@ public class Arrays {
     }
     
     public static String toString(byte[] data, int offset, int length, boolean asInt) {
-        StringBuffer buf = new StringBuffer("{");
+        StringBuilder buf = new StringBuilder("{");
         if ( data != null && length > 0 ) {
             if (asInt) buf.append((int)data[offset++]);
             else buf.append(data[offset++]);
@@ -77,7 +77,7 @@ public class Arrays {
     }
     
     public static String toString(Object[] data, int offset, int length) {
-        StringBuffer buf = new StringBuffer("{");
+        StringBuilder buf = new StringBuilder("{");
         if ( data != null && length > 0 ) {
             buf.append(data[offset++]);
             for (int i = offset; i < length; i++) {
@@ -93,7 +93,7 @@ public class Arrays {
     }
     
     public static String toNameString(Member[] data, int offset, int length) {
-        StringBuffer buf = new StringBuffer("{");
+        StringBuilder buf = new StringBuilder("{");
         if ( data != null && length > 0 ) {
             buf.append(data[offset++].getName());
             for (int i = offset; i < length; i++) {

==================================================
