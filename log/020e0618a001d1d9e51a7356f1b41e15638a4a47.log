020e0618a001d1d9e51a7356f1b41e15638a4a47
==================================================
- I am pretty sure the point of the upgrade(Class) method is to be able to inject, so the instance manager has to be used.
==================================================
Remy Maucherat
==================================================
Wed Mar 20 20:10:41 2013 +0000
==================================================
Context.java
- I am pretty sure the point of the upgrade(Class) method is to be able to inject, so the instance manager has to be used.
- Add InstanceManager on Context, and also add newInstance(Class) - not really needed, but it probably doesn't hurt.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1459028 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Request.java
index 717e8a083c..05d6579460 100644
--- a/java/org/apache/catalina/Context.java
+++ b/java/org/apache/catalina/Context.java
@@ -35,6 +35,7 @@ import org.apache.catalina.deploy.FilterMap;
 import org.apache.catalina.deploy.LoginConfig;
 import org.apache.catalina.deploy.NamingResources;
 import org.apache.catalina.deploy.SecurityConstraint;
+import org.apache.tomcat.InstanceManager;
 import org.apache.tomcat.JarScanner;
 
 /**
@@ -661,6 +662,16 @@ public interface Context extends Container {
      */
     public boolean getLogEffectiveWebXml();
 
+    /**
+     * Get the instance manager associated with this context.
+     */
+    public InstanceManager getInstanceManager();
+
+    /**
+     * Set the instance manager associated with this context.
+     */
+    public void setInstanceManager(InstanceManager instanceManager);
+
     // --------------------------------------------------------- Public Methods
 
 

==================================================
ApplicationContext.java
index 5009acdd76..c04717f30b 100644
--- a/java/org/apache/catalina/connector/Request.java
+++ b/java/org/apache/catalina/connector/Request.java
@@ -22,6 +22,7 @@ import java.io.File;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.UnsupportedEncodingException;
+import java.lang.reflect.InvocationTargetException;
 import java.nio.charset.Charset;
 import java.security.Principal;
 import java.text.SimpleDateFormat;
@@ -40,6 +41,7 @@ import java.util.TimeZone;
 import java.util.TreeMap;
 import java.util.concurrent.atomic.AtomicBoolean;
 
+import javax.naming.NamingException;
 import javax.security.auth.Subject;
 import javax.servlet.AsyncContext;
 import javax.servlet.DispatcherType;
@@ -1884,14 +1886,15 @@ public class Request
      *
      * @since Servlet 3.1
      */
+    @SuppressWarnings("unchecked")
     @Override
     public <T extends HttpUpgradeHandler> T upgrade(
             Class<T> httpUpgradeHandlerClass) throws java.io.IOException {
 
         T handler;
         try {
-            handler = httpUpgradeHandlerClass.newInstance();
-        } catch (InstantiationException | IllegalAccessException e) {
+            handler = (T) context.getInstanceManager().newInstance(httpUpgradeHandlerClass);
+        } catch (InstantiationException | IllegalAccessException | InvocationTargetException | NamingException e) {
             throw new IOException(e);
         }
 

==================================================
DefaultInstanceManager.java
index 382ed21460..95b343b190 100644
--- a/java/org/apache/catalina/core/ApplicationContext.java
+++ b/java/org/apache/catalina/core/ApplicationContext.java
@@ -1315,7 +1315,7 @@ public class ApplicationContext
             throws ServletException {
         try {
             T listener =
-                (T) context.getInstanceManager().newInstance(c.getName());
+                (T) context.getInstanceManager().newInstance(c);
             if (listener instanceof ServletContextListener ||
                     listener instanceof ServletContextAttributeListener ||
                     listener instanceof ServletRequestListener ||
@@ -1337,9 +1337,8 @@ public class ApplicationContext
             throw new ServletException(e);
         } catch (InstantiationException e) {
             throw new ServletException(e);
-        } catch (ClassNotFoundException e) {
-            throw new ServletException(e);
-        }    }
+        }
+    }
 
 
     @Override

==================================================
FailedContext.java
index 0bb91972b2..34940f0354 100644
--- a/java/org/apache/catalina/core/DefaultInstanceManager.java
+++ b/java/org/apache/catalina/core/DefaultInstanceManager.java
@@ -131,6 +131,11 @@ public class DefaultInstanceManager implements InstanceManager {
         this.preDestroyMethods = catalinaContext.findPreDestroyMethods();
     }
 
+    @Override
+    public Object newInstance(Class<?> clazz) throws IllegalAccessException, InvocationTargetException, NamingException, InstantiationException {
+        return newInstance(clazz.newInstance(), clazz);
+    }
+
     @Override
     public Object newInstance(String className) throws IllegalAccessException, InvocationTargetException, NamingException, InstantiationException, ClassNotFoundException {
         Class<?> clazz = loadClassMaybePrivileged(className, classLoader);

==================================================
InstanceManager.java
index b7d5adae92..c17c1fdc5f 100644
--- a/java/org/apache/catalina/startup/FailedContext.java
+++ b/java/org/apache/catalina/startup/FailedContext.java
@@ -58,6 +58,7 @@ import org.apache.catalina.deploy.SecurityConstraint;
 import org.apache.catalina.util.ContextName;
 import org.apache.catalina.util.LifecycleMBeanBase;
 import org.apache.juli.logging.Log;
+import org.apache.tomcat.InstanceManager;
 import org.apache.tomcat.JarScanner;
 import org.apache.tomcat.util.res.StringManager;
 
@@ -706,4 +707,10 @@ public class FailedContext extends LifecycleMBeanBase implements Context {
 
     @Override
     public Map<String, String> findPreDestroyMethods() { return null; }
+
+    @Override
+    public InstanceManager getInstanceManager() { return null; }
+
+    @Override
+    public void setInstanceManager(InstanceManager instanceManager) { /* NO-OP */ }
 }
\ No newline at end of file

==================================================
