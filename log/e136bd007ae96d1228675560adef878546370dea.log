e136bd007ae96d1228675560adef878546370dea
==================================================
- Reliably allow blocking following non blocking if some flushing is needed on end.
==================================================
Remy Maucherat
==================================================
Fri Mar 21 11:07:20 2014 +0000
==================================================
InternalNio2OutputBuffer.java
- Reliably allow blocking following non blocking if some flushing is needed on end.
- Use debug log level in case of a rejected execution, which can occur on shutdown.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1579925 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Nio2Endpoint.java
index 29824378ba..c308a7d445 100644
--- a/java/org/apache/coyote/http11/InternalNio2OutputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalNio2OutputBuffer.java
@@ -381,7 +381,15 @@ public class InternalNio2OutputBuffer extends AbstractOutputBuffer<Nio2Channel>
                         byteBuffer.flip();
                         flipped = true;
                     }
-                    socket.getSocket().write(byteBuffer).get(socket.getTimeout(), TimeUnit.MILLISECONDS);
+                    if (bufferedWrites.size() > 0) {
+                        for (ByteBuffer buffer : bufferedWrites) {
+                            buffer.flip();
+                            socket.getSocket().write(buffer).get(socket.getTimeout(), TimeUnit.MILLISECONDS);
+                        }
+                    }
+                    if (byteBuffer.hasRemaining()) {
+                        socket.getSocket().write(byteBuffer).get(socket.getTimeout(), TimeUnit.MILLISECONDS);
+                    }
                 } catch (InterruptedException | ExecutionException e) {
                     throw new IOException(e);
                 } catch (TimeoutException e) {

==================================================
