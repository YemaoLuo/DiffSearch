b6610cbc83248ca014d8c8c7d0569483a60744ee
==================================================
Servlet 4.0
==================================================
Mark Thomas
==================================================
Fri Oct 9 16:51:26 2015 +0000
==================================================
GenericFilter.java
Servlet 4.0
Add GenericFilter and HttpFilter (not checked with javap yet)

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1707769 13f79535-47bb-0310-9956-ffa450edef68



==================================================
HttpFilter.java
new file mode 100644
index 0000000000..3678225ae7
--- /dev/null
+++ b/java/javax/servlet/GenericFilter.java
@@ -0,0 +1,81 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package javax.servlet;
+
+import java.io.Serializable;
+import java.util.Enumeration;
+
+public abstract class GenericFilter implements Filter, FilterConfig, Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    private volatile FilterConfig filterConfig;
+
+
+    @Override
+    public String getFilterName() {
+        return getFilterConfig().getFilterName();
+    }
+
+
+    @Override
+    public ServletContext getServletContext() {
+        return getFilterConfig().getServletContext();
+    }
+
+
+    @Override
+    public String getInitParameter(String name) {
+        return getFilterConfig().getInitParameter(name);
+    }
+
+
+    @Override
+    public Enumeration<String> getInitParameterNames() {
+        return getFilterConfig().getInitParameterNames();
+    }
+
+
+    @Override
+    public void init(FilterConfig filterConfig) throws ServletException {
+        this.filterConfig  = filterConfig;
+        init();
+    }
+
+
+    /**
+     * Obtain the FilterConfig used to initialise this Filter instance.
+     *
+     * @return The config previously passed to the {@link #init(FilterConfig)}
+     *         method
+     */
+    public FilterConfig getFilterConfig() {
+        return filterConfig;
+    }
+
+
+    /**
+     * Convenience method for sub-classes to save them having to call
+     * <code>super.init(config)</code>. This is a NO-OP by default.
+     *
+     * @throws ServletException If an exception occurs that interrupts the
+     *         Filter's normal operation
+     */
+    public void init() throws ServletException {
+        // NO-OP
+    }
+}

==================================================
