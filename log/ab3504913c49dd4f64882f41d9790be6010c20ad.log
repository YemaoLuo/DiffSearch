ab3504913c49dd4f64882f41d9790be6010c20ad
==================================================
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61491
==================================================
Mark Thomas
==================================================
Fri Sep 8 08:50:30 2017 +0000
==================================================
PerMessageDeflate.java
Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61491
When using the permessage-deflate extension, correctly handle the sending of empty messages after non-empty messages to avoid the IllegalArgumentException

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1807686 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestPerMessageDeflate.java
index d648050721..e99303d03b 100644
--- a/java/org/apache/tomcat/websocket/PerMessageDeflate.java
+++ b/java/org/apache/tomcat/websocket/PerMessageDeflate.java
@@ -315,16 +315,20 @@ public class PerMessageDeflate implements Transformation {
     public List<MessagePart> sendMessagePart(List<MessagePart> uncompressedParts) {
         List<MessagePart> allCompressedParts = new ArrayList<>();
 
+        // Flag to track if a message is completely empty
+        boolean emptyMessage = true;
+
         for (MessagePart uncompressedPart : uncompressedParts) {
             byte opCode = uncompressedPart.getOpCode();
+            boolean emptyPart = uncompressedPart.getPayload().limit() == 0;
+            emptyMessage = emptyMessage && emptyPart;
             if (Util.isControl(opCode)) {
                 // Control messages can appear in the middle of other messages
                 // and must not be compressed. Pass it straight through
                 allCompressedParts.add(uncompressedPart);
-            } else if (uncompressedPart.getPayload().limit() == 0 && uncompressedPart.isFin() &&
-                    deflater.getBytesRead() == 0) {
-                // Zero length messages can't be compressed so pass them
-                // straight through.
+            } else if (emptyMessage && uncompressedPart.isFin()) {
+                // Zero length messages can't be compressed so pass the
+                // final (empty) part straight through.
                 allCompressedParts.add(uncompressedPart);
             } else {
                 List<MessagePart> compressedParts = new ArrayList<>();

==================================================
