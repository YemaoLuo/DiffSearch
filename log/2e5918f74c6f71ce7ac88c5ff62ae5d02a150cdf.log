2e5918f74c6f71ce7ac88c5ff62ae5d02a150cdf
==================================================
DEFAULT alias also excludes SSLv2 although the OpenSSL docs don't mention this.
==================================================
Mark Emlyn
==================================================
Fri Aug 1 13:06:46 2014 +0000
==================================================
OpenSSLCipherConfigurationParser.java
DEFAULT alias also excludes SSLv2 although the OpenSSL docs don't mention this.
COMPLEMENTOFDEFAULT should be those ciphers in ALL that aren't in DEFAULT although the OpenSSL appears to be returning something slightly different.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1615089 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestOpenSSLCipherConfigurationParser.java
index f999b0c183..0450a2385b 100644
--- a/java/org/apache/tomcat/util/net/jsse/openssl/OpenSSLCipherConfigurationParser.java
+++ b/java/org/apache/tomcat/util/net/jsse/openssl/OpenSSLCipherConfigurationParser.java
@@ -460,9 +460,10 @@ public class OpenSSLCipherConfigurationParser {
         addListAlias(PSK, filter(allCiphers, null, Collections.singleton(KeyExchange.PSK), Collections.singleton(Authentication.PSK), null, null, null));
         addListAlias(KRB5, filter(allCiphers, null, Collections.singleton(KeyExchange.KRB5), Collections.singleton(Authentication.KRB5), null, null, null));
         initialized = true;
-        String defaultExpression = System.getProperty(DEFAULT_EXPRESSION_KEY, "ALL:!eNULL:!aNULL");
+        // Despite what the OpenSSL docs say, DEFAULT also excludes SSLv2
+        String defaultExpression = System.getProperty(DEFAULT_EXPRESSION_KEY, "ALL:!eNULL:!aNULL:!SSLv2");
         addListAlias(DEFAULT, parse(defaultExpression));
-        LinkedHashSet<Cipher> complementOfDefault = new LinkedHashSet<>(allCiphers);
+        LinkedHashSet<Cipher> complementOfDefault = new LinkedHashSet<>(all);
         complementOfDefault.removeAll(aliases.get(DEFAULT));
         addListAlias(COMPLEMENTOFDEFAULT, complementOfDefault);
     }

==================================================
