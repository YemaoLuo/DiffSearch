0b07577663f2593ce22bfed52095b778acb5d88a
==================================================
Fix Javadoc warnings
==================================================
Mark Emlyn
==================================================
Mon Jan 2 11:31:13 2012 +0000
==================================================
VirtualDirContext.java
index 85a4d303bd..e52d70ed78 100644
--- a/build.xml
+++ b/build.xml
@@ -1578,9 +1578,9 @@ Apache Tomcat ${version} native binaries for Win64 AMD64/EMT64 platform.
       <link href="../servletapi"/>
       <link href="../jspapi"/>
       <link href="../elapi"/>
-      <link href="http://download.oracle.com/javase/6/docs/api/"/>
+      <link href="http://docs.oracle.com/javase/6/docs/api/"/>
       <link href="http://commons.apache.org/io/api-release/"/>
-      <link href="http://download-llnw.oracle.com/javaee/6/api/"/>
+      <link href="http://docs.oracle.com/javaee/6/api/"/>
       <sourcepath>
         <path location="${tomcat.dist}/src/java"/>
         <!--jdbc-pool src files for javadoc-->

==================================================
NioChannel.java
index c6a2f99da8..84aa22efb8 100644
--- a/java/org/apache/naming/resources/VirtualDirContext.java
+++ b/java/org/apache/naming/resources/VirtualDirContext.java
@@ -34,7 +34,8 @@ import org.apache.naming.NamingEntry;
  * Extended FileDirContext implementation that allows to expose multiple
  * directories of the filesystem under a single webapp, a feature mainly used
  * for development with IDEs.
- * This should be used in conjunction with {@link VirtualWebappLoader}.
+ * This should be used in conjunction with
+ * {@link org.apache.catalina.loader.VirtualWebappLoader}.
  *
  * Sample context xml configuration:
  *

==================================================
SecureNioChannel.java
index 2db5c82fe4..3b799a0af6 100644
--- a/java/org/apache/tomcat/util/net/NioChannel.java
+++ b/java/org/apache/tomcat/util/net/NioChannel.java
@@ -79,13 +79,14 @@ public class NioChannel implements ByteChannel {
      * @param s         Unused. May be used when overridden
      * @param timeout   Unused. May be used when overridden
      * @param lastWrite
-     * @return
+     * @return Always returns <code>true</code> since there is no network buffer
+     *         in the regular channel
      * @throws IOException
      */
     public boolean flush(boolean block, Selector s, long timeout,
             MutableInteger lastWrite) throws IOException {
         if (lastWrite!=null) lastWrite.set(1);
-        return true; //no network buffer in the regular channel
+        return true;
     }
 
 

==================================================
ConnectionPool.java
index 5ea9729002..238ed98df4 100644
--- a/java/org/apache/tomcat/util/net/SecureNioChannel.java
+++ b/java/org/apache/tomcat/util/net/SecureNioChannel.java
@@ -105,13 +105,14 @@ public class SecureNioChannel extends NioChannel  {
 //                  NIO SSL METHODS
 //===========================================================================================
     /**
-     * Returns true if the network buffer has been flushed out and is empty.
+     * Flush the channel.
      *
      * @param block     Should a blocking write be used?
      * @param s
      * @param timeout
      * @param lastWrite
-     * @return
+     * @return <code>true</code> if the network buffer has been flushed out and
+     *         is empty else <code>false</code>
      * @throws IOException
      */
     @Override

==================================================
PoolConfiguration.java
index 379783974c..ae4f750cb1 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/ConnectionPool.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/ConnectionPool.java
@@ -783,9 +783,10 @@ public class ConnectionPool {
         }
     }
     /**
-     * return true if the connection TX termination succeeded
+     * Terminate the current transaction for the given connection.
      * @param con
-     * @return
+     * @return <code>true</code> if the connection TX termination succeeded
+     *         otherwise <code>false</code>
      */
     protected boolean terminateTransaction(PooledConnection con) {
         try {

==================================================
