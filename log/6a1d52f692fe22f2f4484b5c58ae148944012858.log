6a1d52f692fe22f2f4484b5c58ae148944012858
==================================================
More removal of duplicate code to commit a response.
==================================================
Mark Thomas
==================================================
Wed Sep 30 13:49:32 2015 +0000
==================================================
AjpProcessor.java
More removal of duplicate code to commit a response.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1706035 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http11OutputBuffer.java
index c6132d7902..5130f2e3ba 100644
--- a/java/org/apache/coyote/ajp/AjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpProcessor.java
@@ -343,9 +343,7 @@ public class AjpProcessor extends AbstractProcessor {
             break;
         }
         case CLOSE: {
-            // End the processing of the current request, and stop any further
-            // transactions with the client
-
+            action(ActionCode.COMMIT, null);
             try {
                 finish();
             } catch (IOException e) {
@@ -1388,17 +1386,6 @@ public class AjpProcessor extends AbstractProcessor {
      * Finish AJP response.
      */
     private void finish() throws IOException {
-
-        if (!response.isCommitted()) {
-            // Validate and write response headers
-            try {
-                prepareResponse();
-            } catch (IOException e) {
-                setErrorState(ErrorState.CLOSE_NOW, e);
-                return;
-            }
-        }
-
         if (finished)
             return;
 

==================================================
Http11Processor.java
index 3a5d1e8bc5..803ad9a3cc 100644
--- a/java/org/apache/coyote/http11/Http11OutputBuffer.java
+++ b/java/org/apache/coyote/http11/Http11OutputBuffer.java
@@ -307,14 +307,6 @@ public class Http11OutputBuffer implements OutputBuffer {
      * @throws IOException an underlying I/O error occurred
      */
     public void endRequest() throws IOException {
-
-        if (!committed) {
-            // Send the connector a request for commit. The connector should
-            // then validate the headers, send them (using sendHeader) and
-            // set the filters accordingly.
-            response.action(ActionCode.COMMIT, null);
-        }
-
         if (finished) {
             return;
         }

==================================================
