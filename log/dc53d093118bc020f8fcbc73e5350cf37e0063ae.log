dc53d093118bc020f8fcbc73e5350cf37e0063ae
==================================================
RFC 9110 - units in range specifiers are case insensitive
==================================================
Mark Thomas
==================================================
Tue Aug 2 10:02:26 2022 +0100
==================================================
Ranges.java
RFC 9110 - units in range specifiers are case insensitive

Added test cases for:
- case insensitivity
- expanding code coverage for Ranges class to 100%

Expanded code coverage identified several optimisations
- exit earlier when required syntax is not present
- remove check make unnecessary by earlier exits


==================================================
TestRanges.java
index 15bdbbf4bf..eadbc56a2a 100644
--- a/java/org/apache/tomcat/util/http/parser/Ranges.java
+++ b/java/org/apache/tomcat/util/http/parser/Ranges.java
@@ -21,6 +21,7 @@ import java.io.StringReader;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
+import java.util.Locale;
 
 public class Ranges {
 
@@ -29,7 +30,8 @@ public class Ranges {
 
 
     public Ranges(String units, List<Entry> entries) {
-        this.units = units;
+        // Units are lower case (RFC 9110, section 14.1)
+        this.units = units.toLowerCase(Locale.ENGLISH);
         this.entries = Collections.unmodifiableList(entries);
     }
 
@@ -84,7 +86,7 @@ public class Ranges {
         }
 
         // Must be followed by '='
-        if (HttpParser.skipConstant(input, "=") == SkipResult.NOT_FOUND) {
+        if (HttpParser.skipConstant(input, "=") != SkipResult.FOUND) {
             return null;
         }
 
@@ -95,7 +97,7 @@ public class Ranges {
         do {
             long start = HttpParser.readLong(input);
             // Must be followed by '-'
-            if (HttpParser.skipConstant(input, "-") == SkipResult.NOT_FOUND) {
+            if (HttpParser.skipConstant(input, "-") != SkipResult.FOUND) {
                 return null;
             }
             long end = HttpParser.readLong(input);
@@ -114,11 +116,6 @@ public class Ranges {
             }
         } while (skipResult == SkipResult.FOUND);
 
-        // There must be at least one entry
-        if (entries.size() == 0) {
-            return null;
-        }
-
         return new Ranges(units, entries);
     }
 }

==================================================
