b8572d743dd8d7cbc6ea4cbcbb7c008077efab5f
==================================================
Simplify. Update comments.
==================================================
Mark Emlyn
==================================================
Thu Jul 18 14:12:49 2013 +0000
==================================================
AstFunction.java
Simplify. Update comments.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1504483 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AstLambdaExpression.java
index c3434eabae..09c90a109c 100644
--- a/java/org/apache/el/parser/AstFunction.java
+++ b/java/org/apache/el/parser/AstFunction.java
@@ -97,14 +97,11 @@ public final class AstFunction extends SimpleNode {
             if (obj instanceof LambdaExpression) {
                 // Build arguments
                 int i = 0;
-                while (obj instanceof LambdaExpression && i < this.jjtGetNumChildren()) {
-                    Node parameters = jjtGetChild(i);
-                    int numArgs = parameters.jjtGetNumChildren();
-                    Object[] args = new Object[numArgs];
-                    for (int j = 0; j < numArgs; j++) {
-                        args[j] = parameters.jjtGetChild(j).getValue(ctx);
-                    }
-                    obj = ((LambdaExpression) obj).invoke(args);
+                while (obj instanceof LambdaExpression &&
+                        i < this.jjtGetNumChildren()) {
+                    Node args = jjtGetChild(i);
+                    obj = ((LambdaExpression) obj).invoke(
+                            ((AstMethodParameters) args).getParameters(ctx));
                     i++;
                 }
                 return obj;

==================================================
