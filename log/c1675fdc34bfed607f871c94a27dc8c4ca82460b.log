c1675fdc34bfed607f871c94a27dc8c4ca82460b
==================================================
Ping/pong support
==================================================
Mark Emlyn
==================================================
Mon Feb 20 22:54:13 2012 +0000
==================================================
StreamInbound.java
Ping/pong support

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1291507 13f79535-47bb-0310-9956-ffa450edef68



==================================================
WsInputStream.java
index 451457e417..3727ea01fe 100644
--- a/java/org/apache/catalina/websocket/StreamInbound.java
+++ b/java/org/apache/catalina/websocket/StreamInbound.java
@@ -63,9 +63,20 @@ public abstract class StreamInbound implements UpgradeInbound {
             InputStreamReader r =
                     new InputStreamReader(wsIs, B2CConverter.UTF_8);
             onTextData(r);
-        } else if (opCode == Constants.OPCODE_CLOSE){
+        }
+
+        if (wsIs.getPayloadLength() > 125) {
+            getOutbound().close(1002, null);
+            return SocketState.CLOSED;
+        }
+
+        if (opCode == Constants.OPCODE_CLOSE){
             doClose(wsIs);
             return SocketState.CLOSED;
+        } else if (opCode == Constants.OPCODE_PING) {
+            doPing(wsIs);
+        } else if (opCode == Constants.OPCODE_PONG) {
+            doPong(wsIs);
         } else {
             // TODO i18n
             throw new IOException("OpCode " + opCode + " not supported");
@@ -74,8 +85,9 @@ public abstract class StreamInbound implements UpgradeInbound {
     }
 
     private void doClose(InputStream is) throws IOException {
-        // Control messages have a max size of 125 bytes
-        ByteBuffer data = ByteBuffer.allocate(125);
+        // Control messages have a max size of 125 bytes. Need to try and read
+        // one more so we reach end of stream (less 2 for the status)
+        ByteBuffer data = ByteBuffer.allocate(124);
 
         int status = is.read();
         if (status != -1) {
@@ -93,6 +105,29 @@ public abstract class StreamInbound implements UpgradeInbound {
         getOutbound().close(status, data);
     }
 
+    private void doPing(InputStream is) throws IOException {
+        // Control messages have a max size of 125 bytes. Need to try and read
+        // one more so we reach end of stream
+        ByteBuffer data = ByteBuffer.allocate(126);
+
+        int read = 0;
+        while (read > -1) {
+            data.position(data.position() + read);
+            read = is.read(data.array(), data.position(), data.remaining());
+        }
+
+        data.flip();
+        getOutbound().pong(data);
+    }
+
+    private void doPong(InputStream is) throws IOException {
+        // Unsolicited pong - swallow it
+        int read = 0;
+        while (read > -1) {
+            read = is.read();
+        }
+    }
+
     protected abstract void onBinaryData(InputStream is) throws IOException;
     protected abstract void onTextData(Reader r) throws IOException;
 

==================================================
WsOutbound.java
index bdae1a93c3..97aeefe0f9 100644
--- a/java/org/apache/catalina/websocket/WsInputStream.java
+++ b/java/org/apache/catalina/websocket/WsInputStream.java
@@ -79,6 +79,10 @@ public class WsInputStream extends java.io.InputStream {
         return wsFrameHeader;
     }
 
+    public long getPayloadLength() {
+        return payloadLength;
+    }
+
 
     // ----------------------------------------------------- InputStream methods
 

==================================================
