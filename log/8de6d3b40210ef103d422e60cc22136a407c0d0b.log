8de6d3b40210ef103d422e60cc22136a407c0d0b
==================================================
Add a configuration option to for the maximum allowed number of cookies
==================================================
Mark Thomas
==================================================
Thu Oct 20 13:48:20 2016 +0000
==================================================
Constants.java
Add a configuration option to for the maximum allowed number of cookies

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1765815 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http2Protocol.java
index 11322bf8f0..ff2bb7ef90 100644
--- a/java/org/apache/coyote/http2/Constants.java
+++ b/java/org/apache/coyote/http2/Constants.java
@@ -27,4 +27,5 @@ public class Constants {
     // Limits
     static final int DEFAULT_MAX_HEADER_COUNT = 100;
     static final int DEFAULT_MAX_HEADER_SIZE = 8 * 1024;
+    static final int DEFAULT_MAX_COOKIE_COUNT = 200;
 }

==================================================
Http2UpgradeHandler.java
index 3acdb1108a..96ccc5b3cd 100644
--- a/java/org/apache/coyote/http2/Http2Protocol.java
+++ b/java/org/apache/coyote/http2/Http2Protocol.java
@@ -64,6 +64,7 @@ public class Http2Protocol implements UpgradeProtocol {
     // Limits
     private Set<String> allowedTrailerHeaders =
             Collections.newSetFromMap(new ConcurrentHashMap<String, Boolean>());
+    private int maxCookieCount = Constants.DEFAULT_MAX_COOKIE_COUNT;
     private int maxHeaderCount = Constants.DEFAULT_MAX_HEADER_COUNT;
     private int maxHeaderSize = Constants.DEFAULT_MAX_HEADER_SIZE;
 
@@ -107,6 +108,7 @@ public class Http2Protocol implements UpgradeProtocol {
         result.setMaxConcurrentStreamExecution(getMaxConcurrentStreamExecution());
         result.setInitialWindowSize(getInitialWindowSize());
         result.setAllowedTrailerHeaders(allowedTrailerHeaders);
+        result.setMaxCookieCount(getMaxCookieCount());
         result.setMaxHeaderCount(getMaxHeaderCount());
         result.setMaxHeaderSize(getMaxHeaderSize());
         return result;
@@ -252,4 +254,14 @@ public class Http2Protocol implements UpgradeProtocol {
     public int getMaxHeaderSize() {
         return maxHeaderSize;
     }
+
+
+    public void setMaxCookieCount(int maxCookieCount) {
+        this.maxCookieCount = maxCookieCount;
+    }
+
+
+    public int getMaxCookieCount() {
+        return maxCookieCount;
+    }
 }

==================================================
Stream.java
index a56bdec443..7061f528e4 100644
--- a/java/org/apache/coyote/http2/Http2UpgradeHandler.java
+++ b/java/org/apache/coyote/http2/Http2UpgradeHandler.java
@@ -147,6 +147,7 @@ class Http2UpgradeHandler extends AbstractStream implements InternalHttpUpgradeH
 
     // Limits
     private Set<String> allowedTrailerHeaders = Collections.emptySet();
+    private int maxCookieCount = Constants.DEFAULT_MAX_COOKIE_COUNT;
 
 
     Http2UpgradeHandler(Adapter adapter, Request coyoteRequest) {
@@ -1123,6 +1124,16 @@ class Http2UpgradeHandler extends AbstractStream implements InternalHttpUpgradeH
     }
 
 
+    public void setMaxCookieCount(int maxCookieCount) {
+        this.maxCookieCount = maxCookieCount;
+    }
+
+
+    public int getMaxCookieCount() {
+        return maxCookieCount;
+    }
+
+
     // ----------------------------------------------- Http2Parser.Input methods
 
     @Override

==================================================
TestHttp2Limits.java
index 9c342e3be6..8bca8bd8d4 100644
--- a/java/org/apache/coyote/http2/Stream.java
+++ b/java/org/apache/coyote/http2/Stream.java
@@ -96,6 +96,8 @@ class Stream extends AbstractStream implements HeaderEmitter {
         this.coyoteResponse.setOutputBuffer(outputBuffer);
         this.coyoteRequest.setResponse(coyoteResponse);
         this.coyoteRequest.protocol().setString("HTTP/2.0");
+        // Configure HTTP/2 limits
+        this.coyoteRequest.getCookies().setLimit(handler.getMaxCookieCount());
     }
 
 

==================================================
