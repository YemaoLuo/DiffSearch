4c7def8f6f04c1558395d95848998434e032e288
==================================================
Add in support to check if the current thread is a Tomcat 'worker' thread or not, that way we can decide if the invokations are appropriate or not
==================================================
Filip Hanik
==================================================
Thu May 24 15:47:29 2007 +0000
==================================================
CometEventImpl.java
Add in support to check if the current thread is a Tomcat 'worker' thread or not, that way we can decide if the invokations are appropriate or not


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@541337 13f79535-47bb-0310-9956-ffa450edef68



==================================================
CoyoteAdapter.java
index 40058d1fef..9a1c4a9cb7 100644
--- a/java/org/apache/catalina/connector/CometEventImpl.java
+++ b/java/org/apache/catalina/connector/CometEventImpl.java
@@ -19,7 +19,7 @@
 package org.apache.catalina.connector;
 
 import java.io.IOException;
-
+import java.util.HashSet;
 import javax.servlet.ServletException;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
@@ -29,7 +29,6 @@ import org.apache.catalina.util.StringManager;
 
 public class CometEventImpl implements CometEvent {
 
-
     /**
      * The string manager for this package.
      */
@@ -69,7 +68,14 @@ public class CometEventImpl implements CometEvent {
      */
     protected EventSubType eventSubType = null;
     
+    /**
+     * Current set of operations
+     */
+    protected HashSet<CometOperation> cometOperations = new HashSet<CometOperation>(3);
+    
+    protected WorkerThreadCheck threadCheck = new WorkerThreadCheck();
 
+    private static final Object threadCheckHolder = new Object();
     // --------------------------------------------------------- Public Methods
 
     /**
@@ -136,7 +142,13 @@ public class CometEventImpl implements CometEvent {
 
     public void register(CometEvent.CometOperation... operations)
         throws IOException, IllegalStateException {
-        throw new UnsupportedOperationException();
+        //add it to the registered set
+        for (CometEvent.CometOperation co : operations ) {
+            if ( !cometOperations.contains(co) ) {
+                cometOperations.add(co);
+                //TODO notify poller
+            }
+        }
     }
 
     public void unregister(CometOperation... operations)
@@ -151,5 +163,24 @@ public class CometEventImpl implements CometEvent {
     public CometOperation[] getRegisteredOps() {
         throw new UnsupportedOperationException();        
     }
+    
+    protected void setWorkerThread() {
+        threadCheck.set(threadCheckHolder);
+    }
+    
+    protected void unsetWorkerThread() {
+        threadCheck.set(null);
+    }
+
+    protected void checkWorkerThread() throws IllegalStateException {
+        //throw exception if not on worker thread
+        if ( !(threadCheck.get() == threadCheckHolder) ) 
+            throw new IllegalStateException("The operation can only be performed when invoked by a Tomcat worker thread.");
+    }
+    
+    //inner class used to keep track if the current thread is a worker thread.
+    private static class WorkerThreadCheck extends ThreadLocal {
+        
+    }
 
 }

==================================================
