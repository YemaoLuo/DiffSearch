02049a764e5506a1f061c14c46952445b18307bb
==================================================
Remove BIo specific JSSE code
==================================================
Mark Emlyn
==================================================
Tue Nov 4 23:41:30 2014 +0000
==================================================
DefaultServerSocketFactory.java
Remove BIo specific JSSE code

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1636781 13f79535-47bb-0310-9956-ffa450edef68



==================================================
SSLImplementation.java
deleted file mode 100644
index 497cfaa712..0000000000
--- a/java/org/apache/tomcat/util/net/DefaultServerSocketFactory.java
+++ /dev/null
@@ -1,67 +0,0 @@
-/*
- *  Licensed to the Apache Software Foundation (ASF) under one or more
- *  contributor license agreements.  See the NOTICE file distributed with
- *  this work for additional information regarding copyright ownership.
- *  The ASF licenses this file to You under the Apache License, Version 2.0
- *  (the "License"); you may not use this file except in compliance with
- *  the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-
-package org.apache.tomcat.util.net;
-
-import java.io.IOException;
-import java.net.InetAddress;
-import java.net.ServerSocket;
-import java.net.Socket;
-
-/**
- * Default server socket factory. Doesn't do much except give us
- * plain old server sockets.
- *
- * @author db@eng.sun.com
- * @author Harish Prabandham
- */
-public class DefaultServerSocketFactory implements ServerSocketFactory {
-
-    /**
-     *
-     * @param endpoint  Unused in this implementation.
-     */
-    public DefaultServerSocketFactory(AbstractEndpoint<?> endpoint) {
-    }
-
-    @Override
-    public ServerSocket createSocket (int port) throws IOException {
-        return  new ServerSocket (port);
-    }
-
-    @Override
-    public ServerSocket createSocket (int port, int backlog)
-            throws IOException {
-        return new ServerSocket (port, backlog);
-    }
-
-    @Override
-    public ServerSocket createSocket (int port, int backlog,
-            InetAddress ifAddress) throws IOException {
-        return new ServerSocket (port, backlog, ifAddress);
-    }
-
-    @Override
-    public Socket acceptSocket(ServerSocket socket) throws IOException {
-        return socket.accept();
-    }
-
-    @Override
-    public void handshake(Socket sock) throws IOException {
-        // NOOP
-    }
-}

==================================================
ServerSocketFactory.java
index fd9f9769ae..75a4ce3f81 100644
--- a/java/org/apache/tomcat/util/net/SSLImplementation.java
+++ b/java/org/apache/tomcat/util/net/SSLImplementation.java
@@ -17,8 +17,6 @@
 
 package org.apache.tomcat.util.net;
 
-import java.net.Socket;
-
 import javax.net.ssl.SSLSession;
 
 /* SSLImplementation:
@@ -80,11 +78,6 @@ public abstract class SSLImplementation {
 
     public abstract String getImplementationName();
 
-    public abstract ServerSocketFactory getServerSocketFactory(
-            AbstractEndpoint<?> endpoint);
-
-    public abstract SSLSupport getSSLSupport(Socket sock);
-
     public abstract SSLSupport getSSLSupport(SSLSession session);
 
     public abstract SSLUtil getSSLUtil(AbstractEndpoint<?> ep);

==================================================
JSSEImplementation.java
deleted file mode 100644
index 1265bb190b..0000000000
--- a/java/org/apache/tomcat/util/net/ServerSocketFactory.java
+++ /dev/null
@@ -1,97 +0,0 @@
-/*
- *  Licensed to the Apache Software Foundation (ASF) under one or more
- *  contributor license agreements.  See the NOTICE file distributed with
- *  this work for additional information regarding copyright ownership.
- *  The ASF licenses this file to You under the Apache License, Version 2.0
- *  (the "License"); you may not use this file except in compliance with
- *  the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.apache.tomcat.util.net;
-
-import java.io.IOException;
-import java.net.InetAddress;
-import java.net.ServerSocket;
-import java.net.Socket;
-
-/**
- * The common interface through which the {@link JIoEndpoint} interacts with
- * both non-SSL and SSL sockets.
- */
-public interface ServerSocketFactory {
-
-    /**
-     * Returns a server socket which uses all network interfaces on the host,
-     * and is bound to a the specified port. The socket is configured with the
-     * socket options (such as accept timeout) given to this factory.
-     *
-     * @param port
-     *            the port to listen to
-     * @exception IOException
-     *                for networking errors
-     * @exception InstantiationException
-     *                for construction errors
-     */
-    ServerSocket createSocket(int port) throws IOException,
-            InstantiationException;
-
-    /**
-     * Returns a server socket which uses all network interfaces on the host, is
-     * bound to a the specified port, and uses the specified connection backlog.
-     * The socket is configured with the socket options (such as accept timeout)
-     * given to this factory.
-     *
-     * @param port
-     *            the port to listen to
-     * @param backlog
-     *            how many connections are queued
-     * @exception IOException
-     *                for networking errors
-     * @exception InstantiationException
-     *                for construction errors
-     */
-    ServerSocket createSocket(int port, int backlog) throws IOException,
-            InstantiationException;
-
-    /**
-     * Returns a server socket which uses only the specified network interface
-     * on the local host, is bound to a the specified port, and uses the
-     * specified connection backlog. The socket is configured with the socket
-     * options (such as accept timeout) given to this factory.
-     *
-     * @param port
-     *            the port to listen to
-     * @param backlog
-     *            how many connections are queued
-     * @param ifAddress
-     *            the network interface address to use
-     * @exception IOException
-     *                for networking errors
-     * @exception InstantiationException
-     *                for construction errors
-     */
-    ServerSocket createSocket(int port, int backlog, InetAddress ifAddress)
-            throws IOException, InstantiationException;
-
-    /**
-     * Wrapper function for accept(). This allows us to trap and translate
-     * exceptions if necessary.
-     *
-     * @exception IOException
-     */
-    Socket acceptSocket(ServerSocket socket) throws IOException;
-
-    /**
-     * Triggers the SSL handshake. This will be a no-op for non-SSL sockets.
-     *
-     * @exception IOException
-     */
-    void handshake(Socket sock) throws IOException;
-}

==================================================
JSSESocketFactory.java
index 4b269e9e55..f784aca5a3 100644
--- a/java/org/apache/tomcat/util/net/jsse/JSSEImplementation.java
+++ b/java/org/apache/tomcat/util/net/jsse/JSSEImplementation.java
@@ -14,19 +14,14 @@
  *  See the License for the specific language governing permissions and
  *  limitations under the License.
  */
-
 package org.apache.tomcat.util.net.jsse;
 
-import java.net.Socket;
-
 import javax.net.ssl.SSLSession;
-import javax.net.ssl.SSLSocket;
 
 import org.apache.tomcat.util.net.AbstractEndpoint;
 import org.apache.tomcat.util.net.SSLImplementation;
 import org.apache.tomcat.util.net.SSLSupport;
 import org.apache.tomcat.util.net.SSLUtil;
-import org.apache.tomcat.util.net.ServerSocketFactory;
 
 /* JSSEImplementation:
 
@@ -42,16 +37,6 @@ public class JSSEImplementation extends SSLImplementation {
         return "JSSE";
     }
 
-    @Override
-    public ServerSocketFactory getServerSocketFactory(AbstractEndpoint<?> endpoint)  {
-        return new JSSESocketFactory(endpoint);
-    }
-
-    @Override
-    public SSLSupport getSSLSupport(Socket s) {
-        return new JSSESupport((SSLSocket) s);
-    }
-
     @Override
     public SSLSupport getSSLSupport(SSLSession session) {
         return new JSSESupport(session);

==================================================
