3fd97507e1dabef50071f9a4c3124d4c30aafb66
==================================================
Fix regression with the websockets examples after fixing the testing. The initial notification is still problematic.
==================================================
Remy Maucherat
==================================================
Sun Jun 1 11:51:43 2014 +0000
==================================================
Http11Nio2Protocol.java
Fix regression with the websockets examples after fixing the testing. The initial notification is still problematic.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1598971 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Nio2ServletInputStream.java
index 920b7d73ca..94465581f0 100644
--- a/java/org/apache/coyote/http11/Http11Nio2Protocol.java
+++ b/java/org/apache/coyote/http11/Http11Nio2Protocol.java
@@ -17,6 +17,7 @@
 package org.apache.coyote.http11;
 
 import java.io.IOException;
+import java.nio.channels.ReadPendingException;
 
 import javax.net.ssl.SSLEngine;
 import javax.servlet.http.HttpUpgradeHandler;
@@ -224,7 +225,13 @@ public class Http11Nio2Protocol extends AbstractHttp11JsseProtocol<Nio2Channel>
                 ((Nio2Endpoint) proto.endpoint).addTimeout(socket);
             } else if (processor.isUpgrade()) {
                 if (((Nio2SocketWrapper) socket).isUpgradeInit()) {
-                    ((Nio2Endpoint) proto.endpoint).awaitBytes(socket);
+                    try {
+                        ((Nio2Endpoint) proto.endpoint).awaitBytes(socket);
+                    } catch (ReadPendingException e) {
+                        // Ignore, the initial state after upgrade is
+                        // impossible to predict, and a read must be pending
+                        // to get a first notification
+                    }
                 }
             } else {
                 // Either:

==================================================
