412df60e1feedd9ded0f90db42aace91c53cb37b
==================================================
Switch all the DirResource based tests to use dedicated temporary directories for all read/write tests.
==================================================
Mark Thomas
==================================================
Tue Sep 22 22:00:26 2015 +0000
==================================================
AbstractTestDirResourceSet.java
Switch all the DirResource based tests to use dedicated temporary directories for all read/write tests.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1704739 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestDirResourceSet.java
deleted file mode 100644
index 848ea11331..0000000000
--- a/test/org/apache/catalina/webresources/AbstractTestDirResourceSet.java
+++ /dev/null
@@ -1,60 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.catalina.webresources;
-
-import java.io.File;
-
-import org.junit.Test;
-
-import org.apache.catalina.WebResourceRoot;
-import org.apache.catalina.WebResourceSet;
-
-public abstract class AbstractTestDirResourceSet extends AbstractTestResourceSet {
-
-    private final boolean readOnly;
-
-    protected AbstractTestDirResourceSet(boolean readOnly) {
-        this.readOnly = readOnly;
-    }
-
-    @Override
-    public WebResourceRoot getWebResourceRoot() {
-        TesterWebResourceRoot root = new TesterWebResourceRoot();
-        WebResourceSet webResourceSet =
-                new DirResourceSet(root, "/", getBaseDir().getAbsolutePath(), "/");
-        webResourceSet.setReadOnly(readOnly);
-        root.setMainResources(webResourceSet);
-        return root;
-    }
-
-    @Override
-    protected boolean isWriteable() {
-        return !readOnly;
-    }
-
-    @Override
-    public File getBaseDir() {
-        return new File("test/webresources/dir1");
-    }
-
-    @Override
-    @Test
-    public void testNoArgConstructor() {
-        @SuppressWarnings("unused")
-        Object obj = new DirResourceSet();
-    }
-}

==================================================
TestDirResourceSetInternal.java
index 7c4ccfcd56..210c673bcf 100644
--- a/test/org/apache/catalina/webresources/TestDirResourceSet.java
+++ b/test/org/apache/catalina/webresources/TestDirResourceSet.java
@@ -16,9 +16,63 @@
  */
 package org.apache.catalina.webresources;
 
-public class TestDirResourceSet extends AbstractTestDirResourceSet {
+import java.io.File;
+import java.io.IOException;
+import java.nio.file.Files;
+import java.nio.file.Path;
+import java.nio.file.attribute.FileAttribute;
 
-    public TestDirResourceSet() {
-        super(false);
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
+import org.junit.Test;
+
+import org.apache.catalina.WebResourceRoot;
+import org.apache.catalina.WebResourceSet;
+import org.apache.catalina.startup.ExpandWar;
+import org.apache.catalina.startup.TomcatBaseTest;
+
+public class TestDirResourceSet extends AbstractTestResourceSet {
+
+    private static Path tempDir;
+    private static File dir1;
+
+    @BeforeClass
+    public static void before() throws IOException {
+        tempDir = Files.createTempDirectory("test", new FileAttribute[0]);
+        dir1 = new File(tempDir.toFile(), "dir1");
+        TomcatBaseTest.recurrsiveCopy(new File("test/webresources/dir1").toPath(), dir1.toPath());
+    }
+
+    @AfterClass
+    public static void after() {
+        ExpandWar.delete(tempDir.toFile());
+    }
+
+
+    @Override
+    public WebResourceRoot getWebResourceRoot() {
+        TesterWebResourceRoot root = new TesterWebResourceRoot();
+        WebResourceSet webResourceSet =
+                new DirResourceSet(root, "/", getBaseDir().getAbsolutePath(), "/");
+        webResourceSet.setReadOnly(false);
+        root.setMainResources(webResourceSet);
+        return root;
+    }
+
+    @Override
+    protected boolean isWriteable() {
+        return true;
+    }
+
+    @Override
+    public File getBaseDir() {
+        return dir1;
+    }
+
+    @Override
+    @Test
+    public void testNoArgConstructor() {
+        @SuppressWarnings("unused")
+        Object obj = new DirResourceSet();
     }
 }

==================================================
TestDirResourceSetReadOnly.java
index ff16949a18..1c4e6f85ff 100644
--- a/test/org/apache/catalina/webresources/TestDirResourceSetInternal.java
+++ b/test/org/apache/catalina/webresources/TestDirResourceSetInternal.java
@@ -17,19 +17,58 @@
 package org.apache.catalina.webresources;
 
 import java.io.File;
+import java.io.IOException;
+import java.nio.file.Files;
+import java.nio.file.Path;
+import java.nio.file.attribute.FileAttribute;
+
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 
 import org.apache.catalina.WebResourceRoot;
 import org.apache.catalina.WebResourceSet;
+import org.apache.catalina.startup.ExpandWar;
+import org.apache.catalina.startup.TomcatBaseTest;
+
+public class TestDirResourceSetInternal extends AbstractTestResourceSet {
+
+    private static Path tempDir;
+    private static File dir1;
+
+    @BeforeClass
+    public static void before() throws IOException {
+        tempDir = Files.createTempDirectory("test", new FileAttribute[0]);
+        dir1 = new File(tempDir.toFile(), "dir1");
+        TomcatBaseTest.recurrsiveCopy(new File("test/webresources/dir1").toPath(), dir1.toPath());
+    }
+
+    @AfterClass
+    public static void after() {
+        ExpandWar.delete(tempDir.toFile());
+    }
 
-public class TestDirResourceSetInternal extends TestDirResourceSet {
 
     @Override
     public WebResourceRoot getWebResourceRoot() {
-        File f = new File("test/");
         TesterWebResourceRoot root = new TesterWebResourceRoot();
         WebResourceSet webResourceSet =
-                new DirResourceSet(root, "/", f.getAbsolutePath(), "/webresources/dir1");
+                new DirResourceSet(root, "/", tempDir.toAbsolutePath().toString(), "/dir1");
         root.setMainResources(webResourceSet);
         return root;
     }
+
+    @Override
+    protected boolean isWriteable() {
+        return true;
+    }
+
+    @Override
+    public File getBaseDir() {
+        return dir1;
+    }
+
+    @Override
+    public void testNoArgConstructor() {
+        // NO-OP. Tested in TestDirResource
+    }
 }

==================================================
