d4b10dbe9e2c8dea2be948a716d334568a4e187e
==================================================
Refactoring
==================================================
Mark Thomas
==================================================
Tue Oct 20 09:02:42 2015 +0000
==================================================
AbstractProcessor.java
Refactoring

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1709551 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AjpProcessor.java
index 077da6d103..ff250c5f05 100644
--- a/java/org/apache/coyote/AbstractProcessor.java
+++ b/java/org/apache/coyote/AbstractProcessor.java
@@ -101,11 +101,6 @@ public abstract class AbstractProcessor extends AbstractProcessorLight implement
     }
 
 
-    protected void resetErrorState() {
-        errorState = ErrorState.NONE;
-    }
-
-
     protected ErrorState getErrorState() {
         return errorState;
     }
@@ -246,6 +241,14 @@ public abstract class AbstractProcessor extends AbstractProcessorLight implement
         asyncStateMachine.asyncOperation();
     }
 
+
+    @Override
+    public void recycle() {
+        errorState = ErrorState.NONE;
+        asyncStateMachine.recycle();
+    }
+
+
     /**
      * Flush any pending writes. Used during non-blocking writes to flush any
      * remaining data from a previous incomplete write.

==================================================
Http11Processor.java
index cd14b24698..fa19f62019 100644
--- a/java/org/apache/coyote/ajp/AjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpProcessor.java
@@ -822,7 +822,7 @@ public class AjpProcessor extends AbstractProcessor {
     @Override
     public void recycle() {
         getAdapter().checkRecycled(request, response);
-        asyncStateMachine.recycle();
+        super.recycle();
         request.recycle();
         response.recycle();
         first = true;
@@ -834,7 +834,6 @@ public class AjpProcessor extends AbstractProcessor {
         certificates.recycle();
         swallowResponse = false;
         bytesWritten = 0;
-        resetErrorState();
     }
 
 

==================================================
