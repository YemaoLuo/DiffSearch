219d55be539981c45114ab1c5e3895686c881b13
==================================================
Per http://tomcat.markmail.org/thread/j7jk7xalhs7t7op7
==================================================
Filip Hanik
==================================================
Thu Mar 29 16:02:26 2012 +0000
==================================================
ConnectionPool.java
Per http://tomcat.markmail.org/thread/j7jk7xalhs7t7op7
Threads in the connection pool should not be created using the context loader, but rather the loader that loaded the pool



git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1306946 13f79535-47bb-0310-9956-ffa450edef68



==================================================
PoolCleanerTest.java
index 8004d69669..f8ab7a4756 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/ConnectionPool.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/pool/ConnectionPool.java
@@ -1217,13 +1217,16 @@ public class ConnectionPool {
         unregisterCleaner(cleaner);
         cleaners.add(cleaner);
         if (poolCleanTimer == null) {
-            poolCleanTimer = new Timer("PoolCleaner["
-                    + System.identityHashCode(ConnectionPool.class
-                            .getClassLoader()) + ":"
-                    + System.currentTimeMillis() + "]", true);
+            ClassLoader loader = Thread.currentThread().getContextClassLoader();
+            try {
+                Thread.currentThread().setContextClassLoader(ConnectionPool.class.getClassLoader());
+                poolCleanTimer = new Timer("PoolCleaner["+ System.identityHashCode(ConnectionPool.class.getClassLoader()) + ":"+
+                                           System.currentTimeMillis() + "]", true);
+            }finally {
+                Thread.currentThread().setContextClassLoader(loader);
+            }
         }
-        poolCleanTimer.scheduleAtFixedRate(cleaner, cleaner.sleepTime,
-                cleaner.sleepTime);
+        poolCleanTimer.scheduleAtFixedRate(cleaner, cleaner.sleepTime,cleaner.sleepTime);
     }
 
     private static synchronized void unregisterCleaner(PoolCleaner cleaner) {

==================================================
