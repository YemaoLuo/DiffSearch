64c14b18bdd6088c623e29d27a88cbfff0e8598b
==================================================
Add setting direction to debug logging.
==================================================
Mark Thomas
==================================================
Wed Sep 4 23:52:54 2019 +0100
==================================================
ConnectionSettingsBase.java
Add setting direction to debug logging.



==================================================
ConnectionSettingsLocal.java
index 515219e97f..ed0dcd34dc 100644
--- a/java/org/apache/coyote/http2/ConnectionSettingsBase.java
+++ b/java/org/apache/coyote/http2/ConnectionSettingsBase.java
@@ -64,7 +64,7 @@ abstract class ConnectionSettingsBase<T extends Throwable> {
     final void set(Setting setting, long value) throws T {
         if (log.isDebugEnabled()) {
             log.debug(sm.getString("connectionSettings.debug",
-                    connectionId, setting, Long.toString(value)));
+                    connectionId, getEndpointName(), setting, Long.toString(value)));
         }
 
         switch(setting) {
@@ -215,4 +215,6 @@ abstract class ConnectionSettingsBase<T extends Throwable> {
 
 
     abstract void throwException(String msg, Http2Error error) throws T;
+
+    abstract String getEndpointName();
 }

==================================================
ConnectionSettingsRemote.java
index af7ff8cd63..64e68bb1b8 100644
--- a/java/org/apache/coyote/http2/ConnectionSettingsLocal.java
+++ b/java/org/apache/coyote/http2/ConnectionSettingsLocal.java
@@ -32,6 +32,8 @@ import java.util.Map;
  */
 class ConnectionSettingsLocal extends ConnectionSettingsBase<IllegalArgumentException> {
 
+    private static final String ENDPOINT_NAME = "Local(client->server)";
+
     private boolean sendInProgress = false;
 
 
@@ -97,4 +99,10 @@ class ConnectionSettingsLocal extends ConnectionSettingsBase<IllegalArgumentExce
     final void throwException(String msg, Http2Error error) throws IllegalArgumentException {
         throw new IllegalArgumentException(msg);
     }
+
+
+    @Override
+    final String getEndpointName() {
+        return ENDPOINT_NAME;
+    }
 }

==================================================
