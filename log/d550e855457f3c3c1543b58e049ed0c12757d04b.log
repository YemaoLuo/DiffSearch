d550e855457f3c3c1543b58e049ed0c12757d04b
==================================================
Use StringManager to provide i18n support in the org.apache.catalina.tribes.util package.
==================================================
Keiichi Fujino
==================================================
Thu May 21 10:00:01 2015 +0000
==================================================
Arrays.java
Use StringManager to provide i18n support in the org.apache.catalina.tribes.util package.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1680799 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ExecutorFactory.java
index 7c6e078bf7..8ffa30ea4e 100644
--- a/java/org/apache/catalina/tribes/util/Arrays.java
+++ b/java/org/apache/catalina/tribes/util/Arrays.java
@@ -31,11 +31,12 @@ import org.apache.catalina.tribes.membership.Membership;
  * @version 1.0
  */
 public class Arrays {
+    protected static final StringManager sm = StringManager.getManager(Arrays.class);
 
     public static boolean contains(byte[] source, int srcoffset, byte[] key, int keyoffset, int length) {
-        if ( srcoffset < 0 || srcoffset >= source.length) throw new ArrayIndexOutOfBoundsException("srcoffset is out of bounds.");
-        if ( keyoffset < 0 || keyoffset >= key.length) throw new ArrayIndexOutOfBoundsException("keyoffset is out of bounds.");
-        if ( length > (key.length-keyoffset) ) throw new ArrayIndexOutOfBoundsException("not enough data elements in the key, length is out of bounds.");
+        if ( srcoffset < 0 || srcoffset >= source.length) throw new ArrayIndexOutOfBoundsException(sm.getString("arrays.srcoffset.outOfBounds"));
+        if ( keyoffset < 0 || keyoffset >= key.length) throw new ArrayIndexOutOfBoundsException(sm.getString("arrays.keyoffset.outOfBounds"));
+        if ( length > (key.length-keyoffset) ) throw new ArrayIndexOutOfBoundsException(sm.getString("arrays.length.outOfBounds"));
         //we don't have enough data to validate it
         if ( length > (source.length-srcoffset) ) return false;
         boolean match = true;
@@ -203,7 +204,7 @@ public class Arrays {
 
     public static byte[] fromString(String value) {
         if ( value == null ) return null;
-        if ( !value.startsWith("{") ) throw new RuntimeException("byte arrays must be represented as {1,3,4,5,6}");
+        if ( !value.startsWith("{") ) throw new RuntimeException(sm.getString("arrays.malformed.arrays"));
         StringTokenizer t = new StringTokenizer(value,"{,}",false);
         byte[] result = new byte[t.countTokens()];
         for (int i=0; i<result.length; i++ ) result[i] = Byte.parseByte(t.nextToken());

==================================================
UUIDGenerator.java
index 18a05669a1..15307cafce 100644
--- a/java/org/apache/catalina/tribes/util/LocalStrings.properties
+++ b/java/org/apache/catalina/tribes/util/LocalStrings.properties
@@ -13,4 +13,11 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
+arrays.srcoffset.outOfBounds=srcoffset is out of bounds.
+arrays.keyoffset.outOfBounds=keyoffset is out of bounds.
+arrays.length.outOfBounds=not enough data elements in the key, length is out of bounds.
+arrays.malformed.arrays=byte arrays must be represented as {1,3,4,5,6}
+executorFactory.queue.full=Queue capacity is full.
+executorFactory.not.running=Executor not running, can't force a command into the queues
 uuidGenerator.createRandom=Creation of SecureRandom instance for UUID generation using [{0}] took [{1}] milliseconds.
+uuidGenerator.unable.fit=Unable to fit {0} bytes into the array. length:{1} required length:{2}
\ No newline at end of file

==================================================
