a182838b50e1d9254324d5e64f2d8f800a312295
==================================================
Clean-up
==================================================
Mark Emlyn
==================================================
Mon Sep 3 20:02:24 2012 +0000
==================================================
TableBean.java
Clean-up
- Java 7 <>

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1380331 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ChatServlet.java
index 6db4672066..fcdf3ff83a 100644
--- a/webapps/examples/WEB-INF/classes/cal/TableBean.java
+++ b/webapps/examples/WEB-INF/classes/cal/TableBean.java
@@ -31,7 +31,7 @@ public class TableBean {
     boolean processError = false;
 
     public TableBean() {
-        this.table = new Hashtable<String, Entries>(10);
+        this.table = new Hashtable<>(10);
         this.JspCal = new JspCalendar();
         this.date = JspCal.getCurrentDate();
     }

==================================================
CompressionFilter.java
index 07121c22c2..42b82fd6c5 100644
--- a/webapps/examples/WEB-INF/classes/chat/ChatServlet.java
+++ b/webapps/examples/WEB-INF/classes/chat/ChatServlet.java
@@ -43,8 +43,7 @@ public class ChatServlet
 
     private static final String CHARSET = "UTF-8";
 
-    protected ArrayList<HttpServletResponse> connections =
-        new ArrayList<HttpServletResponse>();
+    protected ArrayList<HttpServletResponse> connections = new ArrayList<>();
     protected transient MessageSender messageSender = null;
 
     @Override
@@ -193,7 +192,7 @@ public class ChatServlet
     public class MessageSender implements Runnable {
 
         protected boolean running = true;
-        protected ArrayList<String> messages = new ArrayList<String>();
+        protected ArrayList<String> messages = new ArrayList<>();
 
         public MessageSender() {
             // Default contructor

==================================================
CompressionServletResponseWrapper.java
index 3883c232a3..cdce72483f 100644
--- a/webapps/examples/WEB-INF/classes/compressionFilters/CompressionFilter.java
+++ b/webapps/examples/WEB-INF/classes/compressionFilters/CompressionFilter.java
@@ -117,7 +117,7 @@ public class CompressionFilter implements Filter {
 
             str = filterConfig.getInitParameter("compressionMimeTypes");
             if (str!=null) {
-                List<String> values = new ArrayList<String>();
+                List<String> values = new ArrayList<>();
                 StringTokenizer st = new StringTokenizer(str, ",");
 
                 while (st.hasMoreTokens()) {

==================================================
EchoAttributesTag.java
index 2c972335ed..c7677025bf 100644
--- a/webapps/examples/WEB-INF/classes/compressionFilters/CompressionServletResponseWrapper.java
+++ b/webapps/examples/WEB-INF/classes/compressionFilters/CompressionServletResponseWrapper.java
@@ -94,7 +94,7 @@ public class CompressionServletResponseWrapper
     /**
      * keeps a copy of all headers set
      */
-    private Map<String,String> headerCopies = new HashMap<String,String>();
+    private Map<String,String> headerCopies = new HashMap<>();
 
 
     // --------------------------------------------------------- Public Methods

==================================================
DummyCart.java
index 8f62e6715d..c6ae91a8cc 100644
--- a/webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/EchoAttributesTag.java
+++ b/webapps/examples/WEB-INF/classes/jsp2/examples/simpletag/EchoAttributesTag.java
@@ -33,8 +33,8 @@ public class EchoAttributesTag
     extends SimpleTagSupport
     implements DynamicAttributes
 {
-    private ArrayList<String> keys = new ArrayList<String>();
-    private ArrayList<Object> values = new ArrayList<Object>();
+    private ArrayList<String> keys = new ArrayList<>();
+    private ArrayList<Object> values = new ArrayList<>();
 
     @Override
     public void doTag() throws JspException, IOException {

==================================================
ChatWebSocketServlet.java
index 2beda8e662..ccdce74648 100644
--- a/webapps/examples/WEB-INF/classes/sessions/DummyCart.java
+++ b/webapps/examples/WEB-INF/classes/sessions/DummyCart.java
@@ -19,7 +19,7 @@ package sessions;
 import java.util.Vector;
 
 public class DummyCart {
-    Vector<String> v = new Vector<String>();
+    Vector<String> v = new Vector<>();
     String submit = null;
     String item = null;
 

==================================================
Snake.java
index 4b06586c20..e171ffb573 100644
--- a/webapps/examples/WEB-INF/classes/websocket/chat/ChatWebSocketServlet.java
+++ b/webapps/examples/WEB-INF/classes/websocket/chat/ChatWebSocketServlet.java
@@ -43,7 +43,7 @@ public class ChatWebSocketServlet extends WebSocketServlet {
 
     private final AtomicInteger connectionIds = new AtomicInteger(0);
     private final Set<ChatMessageInbound> connections =
-            new CopyOnWriteArraySet<ChatMessageInbound>();
+            new CopyOnWriteArraySet<>();
 
     @Override
     protected StreamInbound createWebSocketInbound(String subProtocol,

==================================================
SnakeWebSocketServlet.java
index e9f3b9791b..3cdc7274cf 100644
--- a/webapps/examples/WEB-INF/classes/websocket/snake/Snake.java
+++ b/webapps/examples/WEB-INF/classes/websocket/snake/Snake.java
@@ -34,7 +34,7 @@ public class Snake {
     private Direction direction;
     private int length = DEFAULT_LENGTH;
     private Location head;
-    private Deque<Location> tail = new ArrayDeque<Location>();
+    private Deque<Location> tail = new ArrayDeque<>();
     private String hexColor;
 
     public Snake(int id, WsOutbound outbound) {

==================================================
