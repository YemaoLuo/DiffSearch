ea00bb55348faad97db3f5f70de0efad036fec17
==================================================
Fix #418 - add "pass-through" as an option for useBomIfPresent
==================================================
Mark Thomas
==================================================
Wed May 19 12:17:17 2021 +0100
==================================================
DefaultServlet.java
Fix #418 - add "pass-through" as an option for useBomIfPresent

Based on a PR by Jean-Louis Monteiro
Also adds support for the <pr> element in the change log


==================================================
DefaultServletEncodingBaseTest.java
index 226a3ae928..1ce4990490 100644
--- a/java/org/apache/catalina/servlets/LocalStrings.properties
+++ b/java/org/apache/catalina/servlets/LocalStrings.properties
@@ -42,6 +42,7 @@ defaultServlet.missingResource=The requested resource [{0}] is not available
 defaultServlet.noResources=No static resources were found
 defaultServlet.readerCloseFailed=Failed to close reader
 defaultServlet.skipfail=Read failed because only [{0}] bytes were available but needed to skip [{1}] bytes to reach the start of the requested range
+defaultServlet.unknownBomConfig=Unrecognised value of [{0}] provided for useBomIfPresent initialization parameter
 defaultServlet.xslError=XSL transformer error
 
 directory.filename=Filename

==================================================
TestDefaultServletEncodingPassThroughBom.java
index caeb286a3f..2143face1e 100644
--- a/test/org/apache/catalina/servlets/DefaultServletEncodingBaseTest.java
+++ b/test/org/apache/catalina/servlets/DefaultServletEncodingBaseTest.java
@@ -40,6 +40,7 @@ import org.junit.runners.Parameterized.Parameter;
 
 import org.apache.catalina.Context;
 import org.apache.catalina.Wrapper;
+import org.apache.catalina.servlets.DefaultServlet.BomConfig;
 import org.apache.catalina.startup.Tomcat;
 import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.B2CConverter;
@@ -109,16 +110,27 @@ public abstract class DefaultServletEncodingBaseTest extends TomcatBaseTest {
     }
 
 
-    private static boolean getExpected(String fileEncoding, boolean useBom, String targetFile,
+    private static boolean getExpected(String fileEncoding, BomConfig bomConfig, String targetFile,
             String outputEncoding, boolean callSetCharacterEncoding, boolean useWriter) {
-        if (useWriter || callSetCharacterEncoding) {
+        if (targetFile.endsWith("-bom") && !bomConfig.stripBom) {
+            /*
+             * If the target file contains a BOM and the BOM is not stripped the
+             * test should always fail because BOM will be kept untouched
+             * and may result in a different character in the output
+             *
+             * We could differentiate iso-8859-1 and cp1252 but we would need logic here and in
+             * the asserts and that would make the logic in the test as complex as the code
+             * under test.
+             */
+            return false;
+        } else if (useWriter || callSetCharacterEncoding) {
             /*
              * Using a writer or setting the output character encoding means the
              * response will specify a character set. These cases therefore
              * reduce to can the file be read with the correct encoding.
              * (Assuming any BOM is always skipped in the included output.)
              */
-            if (targetFile.endsWith("-bom") && useBom ||
+            if (targetFile.endsWith("-bom") && bomConfig.useBomEncoding ||
                     targetFile.startsWith(fileEncoding) ||
                     targetFile.equals("cp1252") && fileEncoding.equals("iso-8859-1") ||
                     targetFile.equals("iso-8859-1") && fileEncoding.equals("cp1252")) {
@@ -160,7 +172,7 @@ public abstract class DefaultServletEncodingBaseTest extends TomcatBaseTest {
     public boolean useWriter;
 
 
-    protected abstract boolean getUseBom();
+    protected abstract BomConfig getUseBom();
 
 
     @Test
@@ -176,7 +188,7 @@ public abstract class DefaultServletEncodingBaseTest extends TomcatBaseTest {
         ctxt.setResponseCharacterEncoding(contextResponseEncoding);
         Wrapper defaultServlet = Tomcat.addServlet(ctxt, "default", DefaultServlet.class.getName());
         defaultServlet.addInitParameter("fileEncoding", fileEncoding);
-        defaultServlet.addInitParameter("useBomIfPresent", Boolean.toString(getUseBom()));
+        defaultServlet.addInitParameter("useBomIfPresent", getUseBom().configurationValue);
 
         ctxt.addServletMappingDecoded("/", "default");
 
@@ -214,10 +226,10 @@ public abstract class DefaultServletEncodingBaseTest extends TomcatBaseTest {
         }
         String body = res.toString();
         /*
-         * Remove BOM before checking content
-         * BOM (should be) removed by Tomcat when file is included
+         * Remove BOM before checking content if DefaultServlet is configured to
+         * remove BOM.
          */
-        if (!useInclude && targetFile.endsWith("-bom")) {
+        if (!useInclude && targetFile.endsWith("-bom") && getUseBom().stripBom) {
             body = body.substring(1);
         }
 

==================================================
TestDefaultServletEncodingWithBom.java
new file mode 100644
index 0000000000..48006cdc7d
--- /dev/null
+++ b/test/org/apache/catalina/servlets/TestDefaultServletEncodingPassThroughBom.java
@@ -0,0 +1,27 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.catalina.servlets;
+
+import org.apache.catalina.servlets.DefaultServlet.BomConfig;
+
+public class TestDefaultServletEncodingPassThroughBom extends DefaultServletEncodingBaseTest {
+
+    @Override
+    protected BomConfig getUseBom() {
+        return BomConfig.PASS_THROUGH;
+    }
+}

==================================================
TestDefaultServletEncodingWithoutBom.java
index 46bd78fc20..dccbfd35d1 100644
--- a/test/org/apache/catalina/servlets/TestDefaultServletEncodingWithBom.java
+++ b/test/org/apache/catalina/servlets/TestDefaultServletEncodingWithBom.java
@@ -16,11 +16,12 @@
  */
 package org.apache.catalina.servlets;
 
+import org.apache.catalina.servlets.DefaultServlet.BomConfig;
 
 public class TestDefaultServletEncodingWithBom extends DefaultServletEncodingBaseTest {
 
     @Override
-    protected boolean getUseBom() {
-        return true;
+    protected BomConfig getUseBom() {
+        return BomConfig.TRUE;
     }
 }

==================================================
