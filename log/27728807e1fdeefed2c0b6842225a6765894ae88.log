27728807e1fdeefed2c0b6842225a6765894ae88
==================================================
Update the internal fork of Apache Commons FileUpload to pick up the changes in the Apache Commons FileUpload 1.4 release.
==================================================
Mark Thomas
==================================================
Tue Jan 29 14:24:18 2019 +0000
==================================================
FileUploadBase.java
index 0ab406d41e..889dbf9cf1 100644
--- a/MERGE.txt
+++ b/MERGE.txt
@@ -55,9 +55,9 @@ the patch file has been applied and committed
 FileUpload
 ----------
 Sub-tree:
-src/main/java/org/apache/commons/fileupload
+src/main/java/org/apache/commons/fileupload2
 The SHA1 ID for the most recent commit to be merged to Tomcat is:
-b1498c9877d751f8bc4635a6f252ebdfcba28518
+2cf7d09fefb17c59e5a776fd6850aebdf41046b2
 
 Note: Tomcat's copy of fileupload also includes classes copied manually (rather
       than svn copied) from Commons IO.

==================================================
IOUtils.java
index eb5a487dbd..07dbd519a3 100644
--- a/java/org/apache/tomcat/util/http/fileupload/FileUploadBase.java
+++ b/java/org/apache/tomcat/util/http/fileupload/FileUploadBase.java
@@ -606,20 +606,23 @@ public abstract class FileUploadBase {
                 fieldName = pFieldName;
                 contentType = pContentType;
                 formField = pFormField;
-                final ItemInputStream itemStream = multi.newInputStream();
-                InputStream istream = itemStream;
-                if (fileSizeMax != -1) {
+                if (fileSizeMax != -1) { // Check if limit is already exceeded
                     if (pContentLength != -1
-                            &&  pContentLength > fileSizeMax) {
+                            && pContentLength > fileSizeMax) {
                         FileSizeLimitExceededException e =
-                            new FileSizeLimitExceededException(
-                                String.format("The field %s exceeds its maximum permitted size of %s bytes.",
-                                        fieldName, Long.valueOf(fileSizeMax)),
-                                pContentLength, fileSizeMax);
+                                new FileSizeLimitExceededException(
+                                        String.format("The field %s exceeds its maximum permitted size of %s bytes.",
+                                                       fieldName, Long.valueOf(fileSizeMax)),
+                                        pContentLength, fileSizeMax);
                         e.setFileName(pName);
                         e.setFieldName(pFieldName);
                         throw new FileUploadIOException(e);
                     }
+                }
+                // OK to construct stream now
+                final ItemInputStream itemStream = multi.newInputStream();
+                InputStream istream = itemStream;
+                if (fileSizeMax != -1) {
                     istream = new LimitedInputStream(istream, fileSizeMax) {
                         @Override
                         protected void raiseError(long pSizeMax, long pCount)

==================================================
