c954090acfd98e1f0d167ba76d296cea5ea4ba20
==================================================
Fix Gump failure (hopefully)
==================================================
Mark Emlyn
==================================================
Mon Sep 2 11:15:01 2013 +0000
==================================================
CoyoteAdapter.java
Fix Gump failure (hopefully)
Move the log failure to the adapter so that the logging occurs before the request and response are recycled. This should improve the information that appears in the logs.
The failure was caused because Gump runs with access logs enabled so when the failure occurred the context had been set to null. This meant the the default access logging kicked in which found the standard host level log and logged the issue there rather than in the context level TesterAccessLog.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1519392 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AbstractAjpProcessor.java
index 8a23c05e4a..9e99f9155f 100644
--- a/java/org/apache/catalina/connector/CoyoteAdapter.java
+++ b/java/org/apache/catalina/connector/CoyoteAdapter.java
@@ -439,6 +439,14 @@ public class CoyoteAdapter implements Adapter {
             success = false;
             log.error(sm.getString("coyoteAdapter.asyncDispatch"), t);
         } finally {
+            if (!success) {
+                res.setStatus(500);
+                long time = 0;
+                if (req.getStartTime() != -1) {
+                    time = System.currentTimeMillis() - req.getStartTime();
+                }
+                log(req, res, time);
+            }
             req.getRequestProcessor().setWorkerThreadName(null);
             // Recycle the wrapper request and response
             if (!success || (!comet && !request.isAsync())) {

==================================================
AbstractHttp11Processor.java
index f7a8c19958..3b6d2ff3e9 100644
--- a/java/org/apache/coyote/ajp/AbstractAjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AbstractAjpProcessor.java
@@ -554,12 +554,6 @@ public abstract class AbstractAjpProcessor<S> extends AbstractProcessor<S> {
             ExceptionUtils.handleThrowable(t);
             getLog().error(sm.getString("http11processor.request.process"), t);
             error = true;
-        } finally {
-            if (error) {
-                // 500 - Internal Server Error
-                response.setStatus(500);
-                getAdapter().log(request, response, 0);
-            }
         }
 
         rp.setStage(org.apache.coyote.Constants.STAGE_ENDED);

==================================================
