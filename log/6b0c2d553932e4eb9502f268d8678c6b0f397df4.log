6b0c2d553932e4eb9502f268d8678c6b0f397df4
==================================================
- Add an extra async IO flag I used for testing.
==================================================
Remy Maucherat
==================================================
Tue Oct 27 15:16:04 2015 +0000
==================================================
Nio2Endpoint.java
- Add an extra async IO flag I used for testing.
- Blocking should block.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1710835 13f79535-47bb-0310-9956-ffa450edef68



==================================================
SocketWrapperBase.java
index 695635a773..c2730071e7 100644
--- a/java/org/apache/tomcat/util/net/Nio2Endpoint.java
+++ b/java/org/apache/tomcat/util/net/Nio2Endpoint.java
@@ -954,6 +954,11 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel> {
             }
         }
 
+        @Override
+        public boolean hasAsyncIO() {
+            return false;
+        }
+
         /**
          * Internal state tracker for scatter/gather operations.
          */
@@ -978,8 +983,8 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel> {
                 this.check = check;
                 this.handler = handler;
             }
-            private long nBytes = 0;
-            private CompletionState state = CompletionState.PENDING;
+            private volatile long nBytes = 0;
+            private volatile CompletionState state = CompletionState.PENDING;
         }
 
         private class ScatterReadCompletionHandler<A> implements CompletionHandler<Long, OperationState<A>> {
@@ -1127,6 +1132,9 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel> {
                 } else {
                     throw new WritePendingException();
                 }
+                if (block && state.state == CompletionState.PENDING && writePending.tryAcquire(timeout, unit)) {
+                    writePending.release();
+                }
             } catch (InterruptedException e) {
                 handler.failed(e, attachment);
             }

==================================================
