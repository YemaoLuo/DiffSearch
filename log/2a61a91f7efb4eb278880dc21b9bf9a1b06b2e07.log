2a61a91f7efb4eb278880dc21b9bf9a1b06b2e07
==================================================
Add the remaining generics for EL 5.0
==================================================
Mark Thomas
==================================================
Tue May 25 15:11:00 2021 +0100
==================================================
ELProcessor.java
Add the remaining generics for EL 5.0


==================================================
ValueExpression.java
index 7abf7fcdab..98ff6a3212 100644
--- a/java/jakarta/el/ELProcessor.java
+++ b/java/jakarta/el/ELProcessor.java
@@ -55,7 +55,7 @@ public class ELProcessor {
     }
 
 
-    public Object getValue(String expression, Class<?> expectedType) {
+    public <T> T getValue(String expression, Class<T> expectedType) {
         ValueExpression ve = factory.createValueExpression(
                 context, bracket(expression), expectedType);
         return ve.getValue(context);

==================================================
ValueExpressionImpl.java
index 528f7c2c5b..cbaba0c792 100644
--- a/java/jakarta/el/ValueExpression.java
+++ b/java/jakarta/el/ValueExpression.java
@@ -21,6 +21,8 @@ public abstract class ValueExpression extends Expression {
     private static final long serialVersionUID = 8577809572381654673L;
 
     /**
+     * @param <T> The expected type for the result of evaluating this value
+     *            expression
      * @param context The EL context for this evaluation
      *
      * @return The result of evaluating this value expression
@@ -34,7 +36,7 @@ public abstract class ValueExpression extends Expression {
      *              Wraps any exception throw whilst resolving a property or
      *              variable
      */
-    public abstract Object getValue(ELContext context);
+    public abstract <T> T getValue(ELContext context);
 
     /**
      * @param context The EL context for this evaluation

==================================================
ValueExpressionLiteral.java
index 91b3e1dd78..e4c434ee06 100644
--- a/java/org/apache/el/ValueExpressionImpl.java
+++ b/java/org/apache/el/ValueExpressionImpl.java
@@ -181,8 +181,9 @@ public final class ValueExpressionImpl extends ValueExpression implements
      *
      * @see jakarta.el.ValueExpression#getValue(jakarta.el.ELContext)
      */
+    @SuppressWarnings("unchecked")
     @Override
-    public Object getValue(ELContext context) throws PropertyNotFoundException,
+    public <T> T getValue(ELContext context) throws PropertyNotFoundException,
             ELException {
         EvaluationContext ctx = new EvaluationContext(context, this.fnMapper,
                 this.varMapper);
@@ -192,7 +193,7 @@ public final class ValueExpressionImpl extends ValueExpression implements
             value = context.convertToType(value, this.expectedType);
         }
         context.notifyAfterEvaluation(getExpressionString());
-        return value;
+        return (T) value;
     }
 
     /*

==================================================
JspValueExpression.java
index ca87e15afd..2ecfe8d4b0 100644
--- a/java/org/apache/el/ValueExpressionLiteral.java
+++ b/java/org/apache/el/ValueExpressionLiteral.java
@@ -48,8 +48,9 @@ public final class ValueExpressionLiteral extends ValueExpression implements
         this.expectedType = expectedType;
     }
 
+    @SuppressWarnings("unchecked")
     @Override
-    public Object getValue(ELContext context) {
+    public <T> T getValue(ELContext context) {
         context.notifyBeforeEvaluation(getExpressionString());
         Object result;
         if (this.expectedType != null) {
@@ -58,7 +59,7 @@ public final class ValueExpressionLiteral extends ValueExpression implements
             result = this.value;
         }
         context.notifyAfterEvaluation(getExpressionString());
-        return result;
+        return (T) result;
     }
 
     @Override

==================================================
