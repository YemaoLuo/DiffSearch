aaf7b5d3be4d7ff0355b1a176fcc7ab672e883b5
==================================================
Fix for https://issues.apache.org/bugzilla/show_bug.cgi?id=47161
==================================================
Mark Emlyn
==================================================
Tue Sep 15 21:06:14 2009 +0000
==================================================
AbstractEndpoint.java
Fix for https://issues.apache.org/bugzilla/show_bug.cgi?id=47161
Correctly report maxThreads
Note 6.0.x will need a different fix as it still uses threadpools

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@815486 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ResizableExecutor.java
index adfe9d4782..13f4f81d7f 100644
--- a/java/org/apache/tomcat/util/net/AbstractEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AbstractEndpoint.java
@@ -209,7 +209,19 @@ public abstract class AbstractEndpoint {
             }
         }
     }
-    public int getMaxThreads() { return maxThreads; }
+    public int getMaxThreads() {
+        if (running && executor!=null) {
+            if (executor instanceof java.util.concurrent.ThreadPoolExecutor) {
+                return ((java.util.concurrent.ThreadPoolExecutor)executor).getMaximumPoolSize();
+            } else if (executor instanceof ResizableExecutor) {
+                return ((ResizableExecutor)executor).getMaxThreads();
+            } else {
+                return -1;
+            }
+        } else {
+            return maxThreads;
+        }
+    }
 
     /**
      * Max keep alive requests 

==================================================
