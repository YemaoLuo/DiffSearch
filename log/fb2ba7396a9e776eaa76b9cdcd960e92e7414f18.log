fb2ba7396a9e776eaa76b9cdcd960e92e7414f18
==================================================
Allow multiple threads to process an upgraded connection at the same time.
==================================================
Mark Emlyn
==================================================
Mon Dec 24 11:17:51 2012 +0000
==================================================
NioEndpoint.java
Allow multiple threads to process an upgraded connection at the same time.
This is required to support blocking reads/writes. The Servlet[Input|Output]Streams do not expose an API for a blocking [read|write]. Therefore to block a thread has to wait until [onDataAvailable()|onWritePossible()] is called. The problem is that the waiting thread holds a lock on the socket and there is no way through the Servlet 3.1 API to release that lock. Until the lock is released the thread that will eventually call [onDataAvailable()|onWritePossible()] is blocked. So a form of deadlock occurs. To overcome this without requiring libraries such as WebSocket implementations to access container specific APIs, Tomcat has to allow multiple threads to process a upgraded connection at the same time.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1425633 13f79535-47bb-0310-9956-ffa450edef68



==================================================
