fc30f97326862af3a577b1c0bfe2397382de798d
==================================================
Additional fix for BZ 65179
==================================================
Mark Thomas
==================================================
Wed Mar 17 11:21:22 2021 +0000
==================================================
Http2Parser.java
Additional fix for BZ 65179


==================================================
Http2UpgradeHandler.java
index bf0565dbce..0e489e89fe 100644
--- a/java/org/apache/coyote/http2/Http2Parser.java
+++ b/java/org/apache/coyote/http2/Http2Parser.java
@@ -208,7 +208,7 @@ class Http2Parser {
                 if (endOfStream) {
                     output.receivedEndOfStream(streamId);
                 }
-                output.endRequestBodyFrame(streamId);
+                output.endRequestBodyFrame(streamId, dataLength);
             }
         }
     }
@@ -747,7 +747,7 @@ class Http2Parser {
 
         // Data frames
         ByteBuffer startRequestBodyFrame(int streamId, int payloadSize, boolean endOfStream) throws Http2Exception;
-        void endRequestBodyFrame(int streamId) throws Http2Exception, IOException;
+        void endRequestBodyFrame(int streamId, int dataLength) throws Http2Exception, IOException;
         void receivedEndOfStream(int streamId) throws ConnectionException;
         /**
          * Notification triggered when the parser swallows some or all of a DATA

==================================================
Http2TestBase.java
index dcc6c18669..994a7cb606 100644
--- a/java/org/apache/coyote/http2/Http2UpgradeHandler.java
+++ b/java/org/apache/coyote/http2/Http2UpgradeHandler.java
@@ -1481,10 +1481,17 @@ class Http2UpgradeHandler extends AbstractStream implements InternalHttpUpgradeH
 
 
     @Override
-    public void endRequestBodyFrame(int streamId) throws Http2Exception, IOException {
+    public void endRequestBodyFrame(int streamId, int dataLength) throws Http2Exception, IOException {
         AbstractNonZeroStream abstractNonZeroStream = getAbstractNonZeroStream(streamId, true);
         if (abstractNonZeroStream instanceof Stream) {
             ((Stream) abstractNonZeroStream).getInputBuffer().onDataAvailable();
+        } else {
+            // The Stream was recycled between the call in Http2Parser to
+            // startRequestBodyFrame() and the synchronized block that contains
+            // the call to this method. This means the bytes read will have been
+            // written to the original stream and, effectively, swallowed.
+            // Therefore, need to notify that those bytes were swallowed here.
+            onSwallowedDataFramePayload(streamId, dataLength);
         }
     }
 

==================================================
