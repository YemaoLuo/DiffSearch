9842c9d632217b2cdfae38c423f12a1bc776fcea
==================================================
Based on EG discussion, add a method to allow applications to determine if push requests are supported. This is provided because populating a PushBuilder is a relatively expensive exercise.
==================================================
Mark Thomas
==================================================
Tue Mar 8 10:29:44 2016 +0000
==================================================
HttpServletRequest.java
Based on EG discussion, add a method to allow applications to determine if push requests are supported. This is provided because populating a PushBuilder is a relatively expensive exercise.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1734047 13f79535-47bb-0310-9956-ffa450edef68



==================================================
HttpServletRequestWrapper.java
index 8115c05c34..ef64f2665b 100644
--- a/java/javax/servlet/http/HttpServletRequest.java
+++ b/java/javax/servlet/http/HttpServletRequest.java
@@ -214,6 +214,18 @@ public interface HttpServletRequest extends ServletRequest {
      */
     public String getPathTranslated();
 
+    /**
+     * Does the current request allow push requests. This will return {@code
+     * true} only if the underlying protocol supports server push and if pushes
+     * are permitted from the current request.
+     *
+     * @return {@code true} if server push is supported for the current request
+     *         otherwise {@code false}
+     */
+    public default boolean isPushSupported() {
+        return false;
+    }
+
     /**
      * Obtain a builder for generating push requests. {@link PushBuilder}
      * documents how this request will be used as the basis for a push request.

==================================================
Request.java
index 5941d341a0..c437ecb89f 100644
--- a/java/javax/servlet/http/HttpServletRequestWrapper.java
+++ b/java/javax/servlet/http/HttpServletRequestWrapper.java
@@ -374,4 +374,17 @@ public class HttpServletRequestWrapper extends ServletRequestWrapper implements
             Class<T> httpUpgradeHandlerClass) throws IOException, ServletException {
         return this._getHttpServletRequest().upgrade(httpUpgradeHandlerClass);
     }
+
+    /**
+     * {@inheritDoc}
+     * <p>
+     * The default behavior of this method is to return
+     * {@link HttpServletRequest#isPushSupported()} on the wrapped request object.
+     *
+     * @since Servlet 4.0
+     */
+    @Override
+    public boolean isPushSupported() {
+        return this._getHttpServletRequest().isPushSupported();
+    }
 }

==================================================
ActionCode.java
index 7d2193cd62..a0c6ad2f5c 100644
--- a/java/org/apache/catalina/connector/Request.java
+++ b/java/org/apache/catalina/connector/Request.java
@@ -1890,6 +1890,19 @@ public class Request implements HttpServletRequest {
 
     // --------------------------------------------- HttpServletRequest Methods
 
+    /**
+     * {@inheritDoc}
+     *
+     * @since Servlet 4.0
+     */
+    @Override
+    public boolean isPushSupported() {
+        AtomicBoolean result = new AtomicBoolean();
+        coyoteRequest.action(ActionCode.IS_PUSH_SUPPORTED, result);
+        return result.get();
+    }
+
+
     /**
      * {@inheritDoc}
      *

==================================================
AjpProcessor.java
index 165e61f5ea..ce33668de5 100644
--- a/java/org/apache/coyote/ActionCode.java
+++ b/java/org/apache/coyote/ActionCode.java
@@ -238,6 +238,11 @@ public enum ActionCode {
      */
     END_REQUEST,
 
+    /**
+     * Is server push supported and allowed for the current request?
+     */
+    IS_PUSH_SUPPORTED,
+
     /**
      * Push a request on behalf of the client of the current request.
      */

==================================================
Http11Processor.java
index 3b36c4258e..8965de161c 100644
--- a/java/org/apache/coyote/ajp/AjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpProcessor.java
@@ -636,6 +636,12 @@ public class AjpProcessor extends AbstractProcessor {
         }
 
         // Servlet 4.0 Push requests
+        case IS_PUSH_SUPPORTED: {
+            // HTTP2 connections only. Unsupported for AJP.
+            AtomicBoolean result = (AtomicBoolean) param;
+            result.set(false);
+            break;
+        }
         case PUSH_REQUEST: {
             // HTTP2 connections only. Unsupported for AJP.
             throw new UnsupportedOperationException(

==================================================
Stream.java
index 9a663361d9..c0f0473098 100644
--- a/java/org/apache/coyote/http11/Http11Processor.java
+++ b/java/org/apache/coyote/http11/Http11Processor.java
@@ -942,6 +942,12 @@ public class Http11Processor extends AbstractProcessor {
         }
 
         // Servlet 4.0 Push requests
+        case IS_PUSH_SUPPORTED: {
+            // HTTP2 connections only. Unsupported for HTTP/1.x
+            AtomicBoolean result = (AtomicBoolean) param;
+            result.set(false);
+            break;
+        }
         case PUSH_REQUEST: {
             // HTTP2 connections only. Unsupported for AJP.
             throw new UnsupportedOperationException(

==================================================
StreamProcessor.java
index 6666482e66..614524b732 100644
--- a/java/org/apache/coyote/http2/Stream.java
+++ b/java/org/apache/coyote/http2/Stream.java
@@ -382,8 +382,13 @@ public class Stream extends AbstractStream implements HeaderEmitter {
     }
 
 
+    boolean isPushSupported() {
+        return handler.getRemoteSettings().getEnablePush();
+    }
+
+
     boolean push(Request request) throws IOException {
-        if (!handler.getRemoteSettings().getEnablePush()) {
+        if (!isPushSupported()) {
             return false;
         }
         // Set the special HTTP/2 headers

==================================================
