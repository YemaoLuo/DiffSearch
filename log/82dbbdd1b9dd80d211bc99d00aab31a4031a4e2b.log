82dbbdd1b9dd80d211bc99d00aab31a4031a4e2b
==================================================
Fix BZ 65806 - FIPS enabled JREs don't support SHA1PRNG
==================================================
Mark Thomas
==================================================
Thu Feb 3 10:02:01 2022 +0000
==================================================
AuthenticatorBase.java
Fix BZ 65806 - FIPS enabled JREs don't support SHA1PRNG

https://bz.apache.org/bugzilla/show_bug.cgi?id=65806
Refactor SecureRandom creation for session IDs to void multiple SEVERE
log messages when SHA1PRNG is not available


==================================================
ManagerBase.java
index 80aa13dc92..8bd74438e8 100644
--- a/java/org/apache/catalina/authenticator/AuthenticatorBase.java
+++ b/java/org/apache/catalina/authenticator/AuthenticatorBase.java
@@ -195,18 +195,19 @@ public abstract class AuthenticatorBase extends ValveBase
     /**
      * The name of the algorithm to use to create instances of
      * {@link java.security.SecureRandom} which are used to generate SSO session
-     * IDs. If no algorithm is specified, SHA1PRNG is used. To use the platform
-     * default (which may be SHA1PRNG), specify the empty string. If an invalid
+     * IDs. If no algorithm is specified, SHA1PRNG is used. If SHA1PRNG is not
+     * available, the platform default will be used. To use the platform default
+     * (which may be SHA1PRNG), specify the empty string. If an invalid
      * algorithm and/or provider is specified the SecureRandom instances will be
      * created using the defaults. If that fails, the SecureRandom instances
      * will be created using platform defaults.
      */
-    protected String secureRandomAlgorithm = "SHA1PRNG";
+    protected String secureRandomAlgorithm = SessionIdGeneratorBase.DEFAULT_SECURE_RANDOM_ALGORITHM;
 
     /**
      * The name of the provider to use to create instances of
      * {@link java.security.SecureRandom} which are used to generate session SSO
-     * IDs. If no algorithm is specified the of SHA1PRNG default is used. If an
+     * IDs. If no provider is specified the platform default is used. If an
      * invalid algorithm and/or provider is specified the SecureRandom instances
      * will be created using the defaults. If that fails, the SecureRandom
      * instances will be created using platform defaults.

==================================================
SessionIdGeneratorBase.java
index 7725828f2a..7b8dda0ea0 100644
--- a/java/org/apache/catalina/util/LocalStrings.properties
+++ b/java/org/apache/catalina/util/LocalStrings.properties
@@ -44,6 +44,7 @@ parameterMap.locked=No modifications are allowed to a locked ParameterMap
 resourceSet.locked=No modifications are allowed to a locked ResourceSet
 
 sessionIdGeneratorBase.createRandom=Creation of SecureRandom instance for session ID generation using [{0}] took [{1}] milliseconds.
+sessionIdGeneratorBase.noSHA1PRNG=The default SHA1PRNG algorithm for SecureRandom is not supported by this JVM. Using the platform default.
 sessionIdGeneratorBase.random=Exception initializing random number generator of class [{0}]. Falling back to java.secure.SecureRandom
 sessionIdGeneratorBase.randomAlgorithm=Exception initializing random number generator using algorithm [{0}]
 sessionIdGeneratorBase.randomProvider=Exception initializing random number generator using provider [{0}]

==================================================
