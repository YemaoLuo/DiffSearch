63673514f29c60dfbaa72665a676c2ce92b6bf75
==================================================
Improve handling of overflow
==================================================
remm remm@apache.org
==================================================
Fri Mar 8 11:30:36 2019 +0100
==================================================
Http2AsyncParser.java
Improve handling of overflow

Attempt to use the main read buffer as overflow for decrypted data.
Although I could modify the OpenSSL engine to hold it, the default JSSE
engine doesn't want to do it either, so it is not an option. I don't
think this will create thread safety problems, but if it does, will
revert back to requiring additional space in the destination buffers.


==================================================
SecureNio2Channel.java
index 7bd24df3e6..92531bf364 100644
--- a/java/org/apache/coyote/http2/Http2AsyncParser.java
+++ b/java/org/apache/coyote/http2/Http2AsyncParser.java
@@ -42,11 +42,7 @@ class Http2AsyncParser extends Http2Parser {
         socketWrapper.getSocketBufferHandler().expand(input.getMaxFrameSize());
         this.upgradeHandler = upgradeHandler;
         header = ByteBuffer.allocate(9);
-        int frameBufferSize = input.getMaxFrameSize();
-        if (socketWrapper.isSecure()) {
-            frameBufferSize += 16676;
-        }
-        framePaylod = ByteBuffer.allocate(frameBufferSize);
+        framePaylod = ByteBuffer.allocate(input.getMaxFrameSize());
     }
 
 

==================================================
