140374e1fb3ff972e6bdeed698de4384ef6e4879
==================================================
Fix some low-hanging FindBugs fruit
==================================================
Mark Emlyn
==================================================
Sat Oct 22 23:24:31 2011 +0000
==================================================
NioEndpoint.java
Fix some low-hanging FindBugs fruit

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1187826 13f79535-47bb-0310-9956-ffa450edef68



==================================================
GenericNamingResourcesFactory.java
index 91fcd677ff..2fb82a85d4 100644
--- a/java/org/apache/tomcat/util/net/NioEndpoint.java
+++ b/java/org/apache/tomcat/util/net/NioEndpoint.java
@@ -1565,7 +1565,7 @@ public class NioEndpoint extends AbstractEndpoint {
                                     if (ka!=null) ka.setComet(false);
                                     socket.getPoller().cancelledKey(key, SocketStatus.ERROR, false);
                                 }
-                                if (socket!=null) nioChannels.offer(socket);
+                                nioChannels.offer(socket);
                                 socket = null;
                                 if ( ka!=null ) keyCache.offer(ka);
                                 ka = null;
@@ -1579,7 +1579,7 @@ public class NioEndpoint extends AbstractEndpoint {
                             ka = (KeyAttachment) key.attachment();
                             socket.getPoller().cancelledKey(key, SocketStatus.DISCONNECT, false);
                         }
-                        if (socket!=null) nioChannels.offer(socket);
+                        nioChannels.offer(socket);
                         socket = null;
                         if ( ka!=null ) keyCache.offer(ka);
                         ka = null;

==================================================
TestConcurrency.java
index 360022876a..0826713949 100644
--- a/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/naming/GenericNamingResourcesFactory.java
+++ b/modules/jdbc-pool/src/main/java/org/apache/tomcat/jdbc/naming/GenericNamingResourcesFactory.java
@@ -128,7 +128,7 @@ public class GenericNamingResourcesFactory implements ObjectFactory {
                         // Try a setFoo ( boolean )
                     } else if ("java.lang.Boolean".equals(paramType.getName())
                             || "boolean".equals(paramType.getName())) {
-                        params[0] = new Boolean(value);
+                        params[0] = Boolean.valueOf(value);
 
                         // Try a setFoo ( InetAddress )
                     } else if ("java.net.InetAddress".equals(paramType

==================================================
TestCometProcessor.java
index 9e36639d2d..f6eea02f51 100644
--- a/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/TestConcurrency.java
+++ b/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/TestConcurrency.java
@@ -34,8 +34,8 @@ public class TestConcurrency extends DefaultTestCase {
     }
 
     @Override
-    public void setUp() {
-        // TODO Auto-generated method stub
+    public void setUp() throws Exception {
+        super.setUp();
         ds = createDefaultDataSource();
         ds.getPoolProperties().setDriverClassName(Driver.class.getName());
         ds.getPoolProperties().setUrl(Driver.url);

==================================================
TestNonBlockingCoordinator.java
index 481bdd3bf4..dbd97eb6fa 100644
--- a/test/org/apache/catalina/comet/TestCometProcessor.java
+++ b/test/org/apache/catalina/comet/TestCometProcessor.java
@@ -214,7 +214,7 @@ public class TestCometProcessor extends TomcatBaseTest {
             // Failure expected only expected for the fail on begin
             // Failure at any later stage and the reponse headers (including the
             // 200 response code will already have been sent to the client
-            if (initParam == SimpleCometServlet.FAIL_ON_BEGIN) {
+            if (SimpleCometServlet.FAIL_ON_BEGIN.equals(initParam)) {
                 assertEquals("HTTP/1.1 500 Internal Server Error", response[0]);
                 alv.validateAccessLog(1, 500, 0, 1000);
             } else {

==================================================
