80f8ec6f2a28c826d50e197709cfca189ebe166b
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=39231
==================================================
Mark Emlyn
==================================================
Tue Jul 7 16:33:02 2009 +0000
==================================================
GenericPrincipal.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=39231
The JAAS contract for LoginModule says we have to call logout(). This won't always work (eg if there is no session) but is a reasonable effort.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@791900 13f79535-47bb-0310-9956-ffa450edef68



==================================================
JAASRealm.java
index bfc8ae2ef4..316f7f1c1b 100644
--- a/java/org/apache/catalina/realm/GenericPrincipal.java
+++ b/java/org/apache/catalina/realm/GenericPrincipal.java
@@ -22,6 +22,9 @@ package org.apache.catalina.realm;
 import java.security.Principal;
 import java.util.Arrays;
 import java.util.List;
+
+import javax.security.auth.login.LoginContext;
+
 import org.apache.catalina.Realm;
 
 
@@ -83,7 +86,26 @@ public class GenericPrincipal implements Principal {
      */
     public GenericPrincipal(Realm realm, String name, String password,
                             List<String> roles, Principal userPrincipal) {
-
+        this(realm, name, password, roles, userPrincipal, null);
+    }
+    
+    /**
+     * Construct a new Principal, associated with the specified Realm, for the
+     * specified username and password, with the specified role names
+     * (as Strings).
+     *
+     * @param realm The Realm that owns this principal
+     * @param name The username of the user represented by this Principal
+     * @param password Credentials used to authenticate this user
+     * @param roles List of roles (must be Strings) possessed by this user
+     * @param userPrincipal - the principal to be returned from the request 
+     *        getUserPrincipal call if not null; if null, this will be returned
+     * @param loginContext  - If provided, this will be used to log out the user
+     *        at the appropriate time
+     */
+    public GenericPrincipal(Realm realm, String name, String password,
+                            List<String> roles, Principal userPrincipal,
+                            LoginContext loginContext) {
         super();
         this.realm = realm;
         this.name = name;
@@ -95,6 +117,7 @@ public class GenericPrincipal implements Principal {
             if (this.roles.length > 0)
                 Arrays.sort(this.roles);
         }
+        this.loginContext = loginContext;
     }
 
 
@@ -159,6 +182,17 @@ public class GenericPrincipal implements Principal {
         }
     }
 
+    
+    /**
+     * The JAAS LoginContext, if any, used to authenticate this Principal.
+     * Kept so we can call logout().
+     */
+    protected LoginContext loginContext = null;
+
+    public LoginContext getLoginContext() {
+        return loginContext;
+    }
+
 
     // --------------------------------------------------------- Public Methods
 

==================================================
StandardSession.java
index 7d8f38f362..9d6a437551 100644
--- a/java/org/apache/catalina/session/LocalStrings.properties
+++ b/java/org/apache/catalina/session/LocalStrings.properties
@@ -61,6 +61,7 @@ standardSession.getLastAccessedTime.ise=getLastAccessedTime: Session already inv
 standardSession.getId.ise=getId: Session already invalidated
 standardSession.getMaxInactiveInterval.ise=getMaxInactiveInterval: Session already invalidated
 standardSession.getValueNames.ise=getValueNames: Session already invalidated
+standardSession.jaaslogoutfail=Exception logging out user when expiring session 
 standardSession.notSerializable=Cannot serialize session attribute {0} for session {1}
 standardSession.removeAttribute.ise=removeAttribute: Session already invalidated
 standardSession.sessionEvent=Session event listener threw exception

==================================================
