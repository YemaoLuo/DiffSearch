9a28f8a48407e979423d162479771ebff0f0cf48
==================================================
Simplify code
==================================================
Mark Thomas
==================================================
Tue May 16 13:35:39 2017 +0000
==================================================
EncodingDetector.java
Simplify code

No need to wrap BufferedInputStream in another BufferedInputStream

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1795308 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ParserController.java
index f6b6e2994c..0f5e6c6fe5 100644
--- a/java/org/apache/jasper/compiler/EncodingDetector.java
+++ b/java/org/apache/jasper/compiler/EncodingDetector.java
@@ -43,15 +43,8 @@ class EncodingDetector {
     private final boolean encodingSpecifiedInProlog;
 
 
-    /*
-     * TODO: Refactor Jasper InputStream creation and handling so the
-     *       InputStream passed to this method is buffered and therefore saves
-     *       on multiple opening and re-opening of the same file.
-     */
-    EncodingDetector(InputStream is) throws IOException {
-        // Keep buffer size to a minimum here. BoM will be no more than 4 bytes
-        // so that is the maximum we need to buffer
-        BufferedInputStream bis = new BufferedInputStream(is, 4);
+    EncodingDetector(BufferedInputStream bis) throws IOException {
+    	// Buffer is 1k. BOM is only 4 bytes.
         bis.mark(4);
 
         BomResult bomResult = processBom(bis);

==================================================
