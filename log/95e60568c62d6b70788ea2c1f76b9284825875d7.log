95e60568c62d6b70788ea2c1f76b9284825875d7
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=54377
==================================================
Mark Emlyn
==================================================
Tue Jan 8 20:24:10 2013 +0000
==================================================
RemoteIpFilter.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=54377
Correctly set request attributes for AccessLog in RemoteIpFilter
Patch by Violeta Georgieva

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1430487 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestRemoteIpFilter.java
index f223390469..948d968ea2 100644
--- a/java/org/apache/catalina/filters/RemoteIpFilter.java
+++ b/java/org/apache/catalina/filters/RemoteIpFilter.java
@@ -820,13 +820,13 @@ public class RemoteIpFilter implements Filter {
             }
             if (requestAttributesEnabled) {
                 request.setAttribute(AccessLog.REMOTE_ADDR_ATTRIBUTE,
-                        request.getRemoteAddr());
+                        xRequest.getRemoteAddr());
                 request.setAttribute(AccessLog.REMOTE_HOST_ATTRIBUTE,
-                        request.getRemoteHost());
+                        xRequest.getRemoteHost());
                 request.setAttribute(AccessLog.PROTOCOL_ATTRIBUTE,
-                        request.getProtocol());
+                        xRequest.getProtocol());
                 request.setAttribute(AccessLog.SERVER_PORT_ATTRIBUTE,
-                        Integer.valueOf(request.getServerPort()));
+                        Integer.valueOf(xRequest.getServerPort()));
             }
             chain.doFilter(xRequest, response);
         } else {

==================================================
TestRemoteIpValve.java
index 46ba2ba4dc..2f0bb83b7e 100644
--- a/test/org/apache/catalina/filters/TestRemoteIpFilter.java
+++ b/test/org/apache/catalina/filters/TestRemoteIpFilter.java
@@ -44,6 +44,7 @@ import static org.junit.Assert.assertNull;
 import org.junit.Assert;
 import org.junit.Test;
 
+import org.apache.catalina.AccessLog;
 import org.apache.catalina.Context;
 import org.apache.catalina.LifecycleException;
 import org.apache.catalina.connector.Connector;
@@ -126,7 +127,12 @@ public class TestRemoteIpFilter extends TomcatBaseTest {
 
         @Override
         public void setAttribute(String name, Object value) {
-            // NOOP. Prevents NPE during testing.
+            getCoyoteRequest().getAttributes().put(name, value);
+        }
+
+        @Override
+        public Object getAttribute(String name) {
+            return getCoyoteRequest().getAttributes().get(name);
         }
     }
 
@@ -502,6 +508,37 @@ public class TestRemoteIpFilter extends TomcatBaseTest {
         return filterChain.getRequest();
     }
 
+    @Test
+    public void testRequestAttributesForAccessLog() throws Exception {
+        // PREPARE
+        FilterDef filterDef = new FilterDef();
+        filterDef.addInitParameter("protocolHeader", "x-forwarded-proto");
+        filterDef.addInitParameter("remoteIpHeader", "x-my-forwarded-for");
+        filterDef.addInitParameter("httpServerPort", "8080");
+
+        MockHttpServletRequest request = new MockHttpServletRequest();
+        request.setRemoteAddr("192.168.0.10");
+        request.setHeader("x-my-forwarded-for", "140.211.11.130");
+        request.setHeader("x-forwarded-proto", "http");
+
+        // TEST
+        HttpServletRequest actualRequest =
+                testRemoteIpFilter(filterDef, request);
+
+        // VERIFY
+        Assert.assertEquals("org.apache.catalina.AccessLog.ServerPort",
+                Integer.valueOf(8080),
+                actualRequest.getAttribute(AccessLog.SERVER_PORT_ATTRIBUTE));
+
+        Assert.assertEquals("org.apache.catalina.AccessLog.RemoteAddr",
+                "140.211.11.130",
+                actualRequest.getAttribute(AccessLog.REMOTE_ADDR_ATTRIBUTE));
+
+        Assert.assertEquals("org.apache.catalina.AccessLog.RemoteHost",
+                "140.211.11.130",
+                actualRequest.getAttribute(AccessLog.REMOTE_HOST_ATTRIBUTE));
+    }
+
     /**
      * Test {@link RemoteIpFilter} in Tomcat standalone server
      */

==================================================
