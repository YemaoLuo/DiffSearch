0994b851d0db7be7c68a10b133a8c0a3278c34f2
==================================================
Fix the last of the high priority FindBugs warnings
==================================================
Mark Emlyn
==================================================
Tue Jan 18 18:57:45 2011 +0000
==================================================
JspC.java
Fix the last of the high priority FindBugs warnings

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1060538 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ServiceProxy.java
index cae25290a5..e8088ddaec 100644
--- a/java/org/apache/jasper/resources/LocalStrings.properties
+++ b/java/org/apache/jasper/resources/LocalStrings.properties
@@ -296,6 +296,7 @@ jspc.error.jasperException=error-the file ''{0}'' generated the following parse
 jspc.error.generalException=ERROR-the file ''{0}'' generated the following general exception:
 jspc.error.fileDoesNotExist=The file argument ''{0}'' does not exist
 jspc.error.emptyWebApp=-webapp requires a trailing file argument
+jspc.delete.fail=Failed to delete file [{0}]
 jsp.error.library.invalid=JSP page is invalid according to library {0}: {1}
 jsp.error.tlvclass.instantiation=Failed to load or instantiate TagLibraryValidator class: {0}
 jsp.error.tlv.invalid.page=Validation error messages from TagLibraryValidator for {0} in {1}

==================================================
StringCache.java
index 2bf07a6c88..5d2b212a32 100644
--- a/java/org/apache/naming/factory/webservices/ServiceProxy.java
+++ b/java/org/apache/naming/factory/webservices/ServiceProxy.java
@@ -75,9 +75,11 @@ public class ServiceProxy
     }
 
     /**
-     * @see java.lang.reflect.InvocationHandler#invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])
+     * @see InvocationHandler#invoke(Object, Method, Object[])
      */
-    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
+    @Override
+    public Object invoke(Object proxy, Method method, Object[] args)
+            throws Throwable {
 
         if (portQNameClass.equals(method)) {
             return getProxyPortQNameClass(args);
@@ -99,6 +101,7 @@ public class ServiceProxy
      * @return Returns the correct Port
      * @throws ServiceException if port's QName is an unknown Port (not defined in WSDL).
      */
+    @SuppressWarnings("unchecked")
     private Object getProxyPortQNameClass(Object[] args)
     throws ServiceException {
         QName name = (QName) args[0];

==================================================
