513d08c9728e9d012a2043a5ef25759dfb5b852c
==================================================
Add support for absolute ordering of web fragments and the start of the fragment merge code
==================================================
Mark Emlyn
==================================================
Fri Oct 23 16:39:32 2009 +0000
==================================================
ContextConfig.java
Add support for absolute ordering of web fragments and the start of the fragment merge code

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@829121 13f79535-47bb-0310-9956-ffa450edef68



==================================================
WebRuleSet.java
index e69fd106df..07b0d850d2 100644
--- a/java/org/apache/catalina/startup/LocalStrings.properties
+++ b/java/org/apache/catalina/startup/LocalStrings.properties
@@ -105,11 +105,14 @@ userConfig.deploying=Deploying user web applications
 userConfig.error=Error deploying web application for user {0}
 userConfig.start=UserConfig: Processing START
 userConfig.stop=UserConfig: Processing STOP
-webXmlCommon.duplicateEnvEntry=Duplicate env-entry name
-webXmlCommon.duplicateFilter=Duplicate filter name
-webXmlCommon.duplicateMessageDestination=Duplicate message-destination name
-webXmlCommon.duplicateMessageDestinationRef=Duplicate message-destination-ref name
-webXmlCommon.duplicateResourceEnvRef=Duplicate resource-env-ref name
-webXmlCommon.duplicateResourceRef=Duplicate resource-ref name
-webXmlCommon.reservedName=A web.xml file was detected using a reserved name [{0}]. The name element will be ignored for this fragment.
-webXmlFragment.multipleOther=Multiple others entries in ordering
+webRuleSet.absoluteOrdering=<absolute-ordering> element not valid in web-fragment.xml and will be ignored
+webRuleSet.relativeOrdering=<ordering> element not valid in web.xml and will be ignored
+webXml.duplicateEnvEntry=Duplicate env-entry name
+webXml.duplicateFilter=Duplicate filter name
+webXml.duplicateMessageDestination=Duplicate message-destination name
+webXml.duplicateMessageDestinationRef=Duplicate message-destination-ref name
+webXml.duplicateResourceEnvRef=Duplicate resource-env-ref name
+webXml.duplicateResourceRef=Duplicate resource-ref name
+webXml.reservedName=A web.xml file was detected using a reserved name [{0}]. The name element will be ignored for this fragment.
+webXml.mergeConflictListener=Listener [{0}] was defined in multiple fragments including fragment with name [{1}] located at [{2}]
+webXml.multipleOther=Multiple others entries in ordering

==================================================
WebXml.java
index 168ef0183b..1bd9986b64 100644
--- a/java/org/apache/catalina/startup/WebRuleSet.java
+++ b/java/org/apache/catalina/startup/WebRuleSet.java
@@ -33,6 +33,7 @@ import org.apache.tomcat.util.digester.Digester;
 import org.apache.tomcat.util.digester.Rule;
 import org.apache.tomcat.util.digester.RuleSetBase;
 import org.apache.tomcat.util.digester.SetNextRule;
+import org.apache.tomcat.util.res.StringManager;
 import org.xml.sax.Attributes;
 
 
@@ -46,6 +47,11 @@ import org.xml.sax.Attributes;
 
 public class WebRuleSet extends RuleSetBase {
 
+    /**
+     * The string resources for this package.
+     */
+    protected static final StringManager sm =
+        StringManager.getManager(Constants.Package);
 
     // ----------------------------------------------------- Instance Variables
 
@@ -61,6 +67,12 @@ public class WebRuleSet extends RuleSetBase {
      */
     protected String fullPrefix = null;
 
+    /**
+     * Flag that indicates if this ruleset is for a web-fragment.xml file or for
+     * a web.xml file.
+     */
+    protected boolean fragment = false;
+
     /**
      * The <code>SetSessionConfig</code> rule used to parse the web.xml
      */
@@ -116,13 +128,13 @@ public class WebRuleSet extends RuleSetBase {
         super();
         this.namespaceURI = null;
         this.prefix = prefix;
+        this.fragment = fragment;
 
         if(fragment) {
             fullPrefix = prefix + "web-fragment";
         } else {
             fullPrefix = prefix + "web-app";
         }
-        
 
     }
 
@@ -148,6 +160,31 @@ public class WebRuleSet extends RuleSetBase {
         digester.addRule(fullPrefix,
                          new IgnoreAnnotationsRule());
 
+        digester.addCallMethod(fullPrefix + "/name",
+                "setName", 0);
+        
+        if (fragment) {
+            // web-fragment.xml
+            digester.addRule(fullPrefix + "/absolute-ordering",
+                    new AbsoluteOrderingRule());
+            digester.addCallMethod(fullPrefix + "/ordering/after/name",
+                                   "addAfterOrdering", 0);
+            digester.addCallMethod(fullPrefix + "/ordering/after/others",
+                                   "addAfterOrderingOthers");
+            digester.addCallMethod(fullPrefix + "/ordering/before/name",
+                                   "addBeforeOrdering", 0);
+            digester.addCallMethod(fullPrefix + "/ordering/before/others",
+                                   "addBeforeOrderingOthers");
+        } else {
+            // web.xml
+            digester.addRule(fullPrefix + "/ordering",
+                    new RelativeOrderingRule());
+            digester.addCallMethod(fullPrefix + "/absolute-ordering/name",
+                                   "addAbsoluteOrdering", 0);
+            digester.addCallMethod(fullPrefix + "/absolute-ordering/name/others",
+                                   "addAbsoluteOrderingOthers");
+        }
+
         digester.addCallMethod(fullPrefix + "/context-param",
                                "addContextParam", 2);
         digester.addCallParam(fullPrefix + "/context-param/param-name", 0);
@@ -903,6 +940,36 @@ final class IgnoreAnnotationsRule extends Rule {
 
 }
 
+/**
+ * A rule that logs a warning if absolute ordering is configured.
+ */
+final class AbsoluteOrderingRule extends Rule {
+    
+    public AbsoluteOrderingRule() {
+    }
+    
+    public void begin(String namespace, String name, Attributes attributes)
+            throws Exception {
+        digester.getLogger().warn(
+                WebRuleSet.sm.getString("webRuleSet.absoluteOrdering"));
+    } 
+}
+
+/**
+ * A rule that logs a warning if relative ordering is configured.
+ */
+final class RelativeOrderingRule extends Rule {
+    
+    public RelativeOrderingRule() {
+    }
+    
+    public void begin(String namespace, String name, Attributes attributes)
+            throws Exception {
+        digester.getLogger().warn(
+                WebRuleSet.sm.getString("webRuleSet.relativeOrdering"));
+    } 
+}
+
 /**
  * A Rule that sets soap headers on the ContextHandler.
  * 

==================================================
