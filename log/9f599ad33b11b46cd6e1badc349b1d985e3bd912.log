9f599ad33b11b46cd6e1badc349b1d985e3bd912
==================================================
Implement an HTTP/2 TODO. Add the last 'processed' stream ID to anyGOAWAY frame sent. 'processed' means passed the container did some processing.
==================================================
Mark Thomas
==================================================
Tue Jun 16 21:54:52 2015 +0000
==================================================
Http2UpgradeHandler.java
Implement an HTTP/2 TODO. Add the last 'processed' stream ID to anyGOAWAY frame sent. 'processed' means passed the container did some processing.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1685915 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestHttp2Section_4_2.java
index b50b3dde9f..494d1ab836 100644
--- a/java/org/apache/coyote/http2/Http2UpgradeHandler.java
+++ b/java/org/apache/coyote/http2/Http2UpgradeHandler.java
@@ -121,6 +121,7 @@ public class Http2UpgradeHandler extends AbstractStream implements InternalHttpU
     private volatile int maxRemoteStreamId = 0;
     // Start at -1 so the 'add 2' logic in closeIdleStreams() works
     private volatile int maxActiveRemoteStreamId = -1;
+    private volatile int maxProcessedStreamId;
 
     // Tracking for when the connection is blocked (windowSize < 1)
     private final Object backLogLock = new Object();
@@ -144,6 +145,7 @@ public class Http2UpgradeHandler extends AbstractStream implements InternalHttpU
             maxRemoteStreamId = 1;
             maxActiveRemoteStreamId = 1;
             activeRemoteStreamCount = 1;
+            maxProcessedStreamId = 1;
         }
     }
 
@@ -378,8 +380,7 @@ public class Http2UpgradeHandler extends AbstractStream implements InternalHttpU
     private void closeConnection(Http2Exception ce) {
         // Write a GOAWAY frame.
         byte[] fixedPayload = new byte[8];
-        // TODO needs to be correct value
-        ByteUtil.set31Bits(fixedPayload, 0, (2 << 31) - 1);
+        ByteUtil.set31Bits(fixedPayload, 0, maxProcessedStreamId);
         ByteUtil.setFourBytes(fixedPayload, 4, ce.getError().getCode());
         byte[] debugMessage = ce.getMessage().getBytes(StandardCharsets.UTF_8);
         byte[] payloadLength = new byte[3];
@@ -859,6 +860,7 @@ public class Http2UpgradeHandler extends AbstractStream implements InternalHttpU
 
     @Override
     public void headersEnd(int streamId) throws ConnectionException {
+        setMaxProcessedStream(streamId);
         Stream stream = getStream(streamId, true);
         // Process this stream on a container thread
         StreamProcessor streamProcessor = new StreamProcessor(stream, adapter, socketWrapper);
@@ -867,6 +869,12 @@ public class Http2UpgradeHandler extends AbstractStream implements InternalHttpU
     }
 
 
+    private void setMaxProcessedStream(int streamId) {
+        if (maxProcessedStreamId < streamId) {
+            maxProcessedStreamId = streamId;
+        }
+    }
+
 
     @Override
     public void reset(int streamId, long errorCode) throws Http2Exception  {

==================================================
TestHttp2Section_4_3.java
index 6e7064fc09..37ec089f29 100644
--- a/test/org/apache/coyote/http2/TestHttp2Section_4_2.java
+++ b/test/org/apache/coyote/http2/TestHttp2Section_4_2.java
@@ -58,9 +58,8 @@ public class TestHttp2Section_4_2 extends Http2TestBase {
         // Read GOAWAY frame
         parser.readFrame(true);
 
-        Assert.assertTrue(output.getTrace(),
-                output.getTrace().startsWith("0-Goaway-[2147483647]-[" +
-                        Http2Error.FRAME_SIZE_ERROR.getCode() + "]-["));
+        Assert.assertTrue(output.getTrace(), output.getTrace().startsWith(
+                "0-Goaway-[1]-[" + Http2Error.FRAME_SIZE_ERROR.getCode() + "]-["));
     }
 
     @Test
@@ -85,9 +84,8 @@ public class TestHttp2Section_4_2 extends Http2TestBase {
         // Read GOAWAY frame
         parser.readFrame(true);
 
-        Assert.assertTrue(output.getTrace(),
-                output.getTrace().startsWith("0-Goaway-[2147483647]-[" +
-                        Http2Error.FRAME_SIZE_ERROR.getCode() + "]-["));
+        Assert.assertTrue(output.getTrace(), output.getTrace().startsWith(
+                "0-Goaway-[1]-[" + Http2Error.FRAME_SIZE_ERROR.getCode() + "]-["));
     }
 
 
@@ -112,9 +110,8 @@ public class TestHttp2Section_4_2 extends Http2TestBase {
         // Read GOAWAY frame
         parser.readFrame(true);
 
-        Assert.assertTrue(output.getTrace(),
-                output.getTrace().startsWith("0-Goaway-[2147483647]-[" +
-                        Http2Error.FRAME_SIZE_ERROR.getCode() + "]-["));
+        Assert.assertTrue(output.getTrace(), output.getTrace().startsWith(
+                "0-Goaway-[1]-[" + Http2Error.FRAME_SIZE_ERROR.getCode() + "]-["));
     }
 
 

==================================================
TestHttp2Section_5_1.java
index 11530c365b..fb2cd4ae3f 100644
--- a/test/org/apache/coyote/http2/TestHttp2Section_4_3.java
+++ b/test/org/apache/coyote/http2/TestHttp2Section_4_3.java
@@ -49,9 +49,8 @@ public class TestHttp2Section_4_3 extends Http2TestBase {
         // Read GOAWAY frame
         parser.readFrame(true);
 
-        Assert.assertTrue(output.getTrace(),
-                output.getTrace().startsWith("0-Goaway-[2147483647]-[" +
-                        Http2Error.COMPRESSION_ERROR.getCode() + "]-["));
+        Assert.assertTrue(output.getTrace(), output.getTrace().startsWith(
+                "0-Goaway-[1]-[" + Http2Error.COMPRESSION_ERROR.getCode() + "]-["));
     }
 
 
@@ -95,8 +94,7 @@ public class TestHttp2Section_4_3 extends Http2TestBase {
         // Read GOAWAY frame
         parser.readFrame(true);
 
-        Assert.assertTrue(output.getTrace(),
-                output.getTrace().startsWith("0-Goaway-[2147483647]-[" +
-                        Http2Error.COMPRESSION_ERROR.getCode() + "]-["));
+        Assert.assertTrue(output.getTrace(), output.getTrace().startsWith(
+                "0-Goaway-[1]-[" + Http2Error.COMPRESSION_ERROR.getCode() + "]-["));
     }
 }

==================================================
