c23ae1d1ca0079447b1e465ab8fd66532cea4063
==================================================
Update the examples to use the v011 API
==================================================
Mark Emlyn
==================================================
Sat Dec 22 22:12:17 2012 +0000
==================================================
ChatAnnotation.java
Update the examples to use the v011 API

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1425355 13f79535-47bb-0310-9956-ffa450edef68



==================================================
EchoAnnotation.java
index 6d308129bd..1598fd5f52 100644
--- a/webapps/examples/WEB-INF/classes/websocket/chat/ChatAnnotation.java
+++ b/webapps/examples/WEB-INF/classes/websocket/chat/ChatAnnotation.java
@@ -23,9 +23,9 @@ import java.util.concurrent.atomic.AtomicInteger;
 
 import javax.websocket.Session;
 import javax.websocket.WebSocketClose;
-import javax.websocket.WebSocketEndpoint;
 import javax.websocket.WebSocketMessage;
 import javax.websocket.WebSocketOpen;
+import javax.websocket.server.WebSocketEndpoint;
 
 import util.HTMLFilter;
 

==================================================
EchoEndpoint.java
index e40f81ecf3..18c0b10fd0 100644
--- a/webapps/examples/WEB-INF/classes/websocket/echo/EchoAnnotation.java
+++ b/webapps/examples/WEB-INF/classes/websocket/echo/EchoAnnotation.java
@@ -18,8 +18,8 @@ package websocket.echo;
 
 import java.nio.ByteBuffer;
 
-import javax.websocket.WebSocketEndpoint;
 import javax.websocket.WebSocketMessage;
+import javax.websocket.server.WebSocketEndpoint;
 
 @WebSocketEndpoint("/websocket/echoAnnotation")
 public class EchoAnnotation {

==================================================
EchoEndpointConfiguration.java
index ce33b53808..123482dff0 100644
--- a/webapps/examples/WEB-INF/classes/websocket/echo/EchoEndpoint.java
+++ b/webapps/examples/WEB-INF/classes/websocket/echo/EchoEndpoint.java
@@ -21,23 +21,21 @@ import java.io.IOException;
 import javax.websocket.CloseReason;
 import javax.websocket.CloseReason.CloseCodes;
 import javax.websocket.Endpoint;
+import javax.websocket.EndpointConfiguration;
 import javax.websocket.MessageHandler;
 import javax.websocket.RemoteEndpoint;
 import javax.websocket.Session;
 
 public class EchoEndpoint extends Endpoint{
 
-    private Session session;
-
     @Override
-    public void onOpen(Session session) {
-        this.session = session;
+    public void onOpen(Session session, EndpointConfiguration endpointConfig) {
         RemoteEndpoint remoteEndpoint = session.getRemote();
         session.addMessageHandler(new EchoMessageHandler(remoteEndpoint));
     }
 
     @Override
-    public void onClose(CloseReason closeReason) {
+    public void onClose(Session session, CloseReason closeReason) {
         try {
             session.close(new CloseReason(CloseCodes.NORMAL_CLOSURE, null));
         } catch (IOException e) {

==================================================
WsConfigListener.java
deleted file mode 100644
index 5591c1dba5..0000000000
--- a/webapps/examples/WEB-INF/classes/websocket/echo/EchoEndpointConfiguration.java
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- *  Licensed to the Apache Software Foundation (ASF) under one or more
- *  contributor license agreements.  See the NOTICE file distributed with
- *  this work for additional information regarding copyright ownership.
- *  The ASF licenses this file to You under the Apache License, Version 2.0
- *  (the "License"); you may not use this file except in compliance with
- *  the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package websocket.echo;
-
-import javax.websocket.DefaultServerConfiguration;
-import javax.websocket.EndpointFactory;
-
-public class EchoEndpointConfiguration
-        extends DefaultServerConfiguration<EchoEndpoint> {
-
-    @Override
-    public boolean checkOrigin(String originHeaderValue) {
-        // No origin checks
-        return true;
-    }
-
-
-    @Override
-    public String getPath() {
-        return "/websocket/echoProgrammatic";
-    }
-
-
-    private static final EndpointFactory<EchoEndpoint> factory =
-            new EchoEndpointFactory();
-
-
-    @Override
-    public EndpointFactory<EchoEndpoint> getEndpointFactory() {
-        return factory;
-    }
-
-
-    private static class EchoEndpointFactory implements
-            EndpointFactory<EchoEndpoint> {
-
-        @Override
-        public EchoEndpoint createEndpoint() {
-            return new EchoEndpoint();
-        }
-    }
-}

==================================================
SnakeAnnotation.java
index 39948eb7a8..98ee55db37 100644
--- a/webapps/examples/WEB-INF/classes/websocket/echo/WsConfigListener.java
+++ b/webapps/examples/WEB-INF/classes/websocket/echo/WsConfigListener.java
@@ -19,8 +19,8 @@ package websocket.echo;
 import javax.servlet.ServletContextEvent;
 import javax.servlet.ServletContextListener;
 import javax.servlet.annotation.WebListener;
-import javax.websocket.ContainerProvider;
 import javax.websocket.DeploymentException;
+import javax.websocket.server.DefaultServerConfiguration;
 
 import org.apache.tomcat.websocket.ServerContainerImpl;
 
@@ -29,11 +29,11 @@ public class WsConfigListener implements ServletContextListener {
 
     @Override
     public void contextInitialized(ServletContextEvent sce) {
-        ServerContainerImpl sc =
-                (ServerContainerImpl) ContainerProvider.getServerContainer();
+        ServerContainerImpl sc = ServerContainerImpl.getServerContainer();
         sc.setServletContext(sce.getServletContext());
         try {
-            sc.publishServer(EchoEndpointConfiguration.class);
+            sc.publishServer(EchoEndpoint.class, "/websocket/echoProgrammatic",
+                    DefaultServerConfiguration.class);
         } catch (DeploymentException e) {
             throw new IllegalStateException(e);
         }

==================================================
