87da1965ff11cb8ecf593e27823e85bc725da816
==================================================
Refactor
==================================================
Mark Emlyn
==================================================
Tue Jun 18 12:51:14 2013 +0000
==================================================
TestDigestAuthenticator.java
Refactor

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1494122 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestFormAuthenticator.java
index b96292a642..b277559a71 100644
--- a/test/org/apache/catalina/authenticator/TestDigestAuthenticator.java
+++ b/test/org/apache/catalina/authenticator/TestDigestAuthenticator.java
@@ -36,7 +36,7 @@ import org.apache.catalina.core.TesterContext;
 import org.apache.catalina.deploy.LoginConfig;
 import org.apache.catalina.deploy.SecurityCollection;
 import org.apache.catalina.deploy.SecurityConstraint;
-import org.apache.catalina.startup.TestTomcat.MapRealm;
+import org.apache.catalina.startup.TesterMapRealm;
 import org.apache.catalina.startup.TesterServlet;
 import org.apache.catalina.startup.Tomcat;
 import org.apache.catalina.startup.TomcatBaseTest;
@@ -283,7 +283,7 @@ public class TestDigestAuthenticator extends TomcatBaseTest {
         ctxt.addConstraint(sc);
 
         // Configure the Realm
-        MapRealm realm = new MapRealm();
+        TesterMapRealm realm = new TesterMapRealm();
         realm.addUser(USER, PWD);
         realm.addUserRole(USER, ROLE);
         ctxt.setRealm(realm);

==================================================
TesterDigestAuthenticatorPerformance.java
index c77308b10b..86ace9be9b 100644
--- a/test/org/apache/catalina/authenticator/TestFormAuthenticator.java
+++ b/test/org/apache/catalina/authenticator/TestFormAuthenticator.java
@@ -39,7 +39,7 @@ import org.apache.catalina.deploy.LoginConfig;
 import org.apache.catalina.deploy.SecurityCollection;
 import org.apache.catalina.deploy.SecurityConstraint;
 import org.apache.catalina.startup.SimpleHttpClient;
-import org.apache.catalina.startup.TestTomcat.MapRealm;
+import org.apache.catalina.startup.TesterMapRealm;
 import org.apache.catalina.startup.TesterServlet;
 import org.apache.catalina.startup.Tomcat;
 import org.apache.catalina.startup.TomcatBaseTest;
@@ -651,7 +651,7 @@ public class TestFormAuthenticator extends TomcatBaseTest {
             ctx.addApplicationListener(new ApplicationListener(
                     WsListener.class.getName(), false));
 
-            MapRealm realm = new MapRealm();
+            TesterMapRealm realm = new TesterMapRealm();
             realm.addUser("tomcat", "tomcat");
             realm.addUserRole("tomcat", "tomcat");
             ctx.setRealm(realm);
@@ -729,7 +729,7 @@ public class TestFormAuthenticator extends TomcatBaseTest {
             setUseCookies(clientShouldUseCookies);
             ctx.setCookies(serverShouldUseCookies);
 
-            MapRealm realm = new MapRealm();
+            TesterMapRealm realm = new TesterMapRealm();
             realm.addUser("tomcat", "tomcat");
             realm.addUserRole("tomcat", "tomcat");
             ctx.setRealm(realm);

==================================================
TestRequest.java
index fc257b3cdf..12d18d6abe 100644
--- a/test/org/apache/catalina/authenticator/TesterDigestAuthenticatorPerformance.java
+++ b/test/org/apache/catalina/authenticator/TesterDigestAuthenticatorPerformance.java
@@ -31,7 +31,7 @@ import org.apache.catalina.connector.Request;
 import org.apache.catalina.core.StandardContext;
 import org.apache.catalina.deploy.LoginConfig;
 import org.apache.catalina.filters.TesterHttpServletResponse;
-import org.apache.catalina.startup.TestTomcat.MapRealm;
+import org.apache.catalina.startup.TesterMapRealm;
 import org.apache.catalina.util.ConcurrentMessageDigest;
 import org.apache.catalina.util.MD5Encoder;
 
@@ -108,7 +108,7 @@ public class TesterDigestAuthenticatorPerformance {
         ConcurrentMessageDigest.init("MD5");
 
         // Configure the Realm
-        MapRealm realm = new MapRealm();
+        TesterMapRealm realm = new TesterMapRealm();
         realm.addUser(USER, PWD);
         realm.addUserRole(USER, ROLE);
 

==================================================
TestStandardContext.java
index 2ce23ab837..e1cb302124 100644
--- a/test/org/apache/catalina/connector/TestRequest.java
+++ b/test/org/apache/catalina/connector/TestRequest.java
@@ -49,7 +49,7 @@ import org.apache.catalina.deploy.FilterMap;
 import org.apache.catalina.deploy.LoginConfig;
 import org.apache.catalina.filters.FailedRequestFilter;
 import org.apache.catalina.startup.SimpleHttpClient;
-import org.apache.catalina.startup.TestTomcat.MapRealm;
+import org.apache.catalina.startup.TesterMapRealm;
 import org.apache.catalina.startup.Tomcat;
 import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
@@ -320,7 +320,7 @@ public class TestRequest extends TomcatBaseTest {
         Tomcat.addServlet(ctx, "servlet", new LoginLogoutServlet());
         ctx.addServletMapping("/", "servlet");
 
-        MapRealm realm = new MapRealm();
+        TesterMapRealm realm = new TesterMapRealm();
         realm.addUser(LoginLogoutServlet.USER, LoginLogoutServlet.PWD);
         ctx.setRealm(realm);
 

==================================================
TestStandardWrapper.java
index a46b0f32d9..b9ab0a066c 100644
--- a/test/org/apache/catalina/core/TestStandardContext.java
+++ b/test/org/apache/catalina/core/TestStandardContext.java
@@ -62,7 +62,7 @@ import org.apache.catalina.deploy.FilterMap;
 import org.apache.catalina.deploy.LoginConfig;
 import org.apache.catalina.loader.WebappLoader;
 import org.apache.catalina.startup.SimpleHttpClient;
-import org.apache.catalina.startup.TestTomcat.MapRealm;
+import org.apache.catalina.startup.TesterMapRealm;
 import org.apache.catalina.startup.Tomcat;
 import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
@@ -418,7 +418,7 @@ public class TestStandardContext extends TomcatBaseTest {
         Context ctx = tomcat.addContext("", docBase.getAbsolutePath());
 
         // Setup realm
-        MapRealm realm = new MapRealm();
+        TesterMapRealm realm = new TesterMapRealm();
         realm.addUser("tomcat", "tomcat");
         realm.addUserRole("tomcat", "tomcat");
         ctx.setRealm(realm);

==================================================
TestTomcat.java
index b4892ac349..3ce457ed91 100644
--- a/test/org/apache/catalina/core/TestStandardWrapper.java
+++ b/test/org/apache/catalina/core/TestStandardWrapper.java
@@ -53,7 +53,7 @@ import org.apache.catalina.Context;
 import org.apache.catalina.Wrapper;
 import org.apache.catalina.authenticator.BasicAuthenticator;
 import org.apache.catalina.deploy.LoginConfig;
-import org.apache.catalina.startup.TestTomcat.MapRealm;
+import org.apache.catalina.startup.TesterMapRealm;
 import org.apache.catalina.startup.Tomcat;
 import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.util.buf.ByteChunk;
@@ -237,7 +237,7 @@ public class TestStandardWrapper extends TomcatBaseTest {
         ctx.addServletMapping("/", "servlet");
 
         if (useRole) {
-            MapRealm realm = new MapRealm();
+            TesterMapRealm realm = new TesterMapRealm();
             realm.addUser("testUser", "testPwd");
             realm.addUserRole("testUser", "testRole");
             ctx.setRealm(realm);

==================================================
TesterMapRealm.java
index 53f4e89177..52f29411a4 100644
--- a/test/org/apache/catalina/startup/TestTomcat.java
+++ b/test/org/apache/catalina/startup/TestTomcat.java
@@ -23,11 +23,6 @@ import java.io.InputStreamReader;
 import java.io.Reader;
 import java.net.URL;
 import java.net.URLConnection;
-import java.security.Principal;
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
 import java.util.concurrent.atomic.AtomicInteger;
 
 import javax.naming.Context;
@@ -48,8 +43,6 @@ import org.junit.Test;
 import org.apache.catalina.deploy.ApplicationListener;
 import org.apache.catalina.deploy.ContextEnvironment;
 import org.apache.catalina.deploy.ContextResourceLink;
-import org.apache.catalina.realm.GenericPrincipal;
-import org.apache.catalina.realm.RealmBase;
 import org.apache.tomcat.util.buf.ByteChunk;
 import org.apache.tomcat.websocket.server.WsListener;
 
@@ -190,45 +183,6 @@ public class TestTomcat extends TomcatBaseTest {
     }
 
 
-    /**
-     * Simple Realm that uses a configurable {@link Map} to link user names and
-     * passwords.
-     */
-    public static final class MapRealm extends RealmBase {
-        private Map<String,String> users = new HashMap<>();
-        private Map<String,List<String>> roles = new HashMap<>();
-
-        public void addUser(String username, String password) {
-            users.put(username, password);
-        }
-
-        public void addUserRole(String username, String role) {
-            List<String> userRoles = roles.get(username);
-            if (userRoles == null) {
-                userRoles = new ArrayList<>();
-                roles.put(username, userRoles);
-            }
-            userRoles.add(role);
-        }
-
-        @Override
-        protected String getName() {
-            return "MapRealm";
-        }
-
-        @Override
-        protected String getPassword(String username) {
-            return users.get(username);
-        }
-
-        @Override
-        protected Principal getPrincipal(String username) {
-            return new GenericPrincipal(username, getPassword(username),
-                    roles.get(username));
-        }
-
-    }
-
     /**
      * Start tomcat with a single context and one
      * servlet - all programmatic, no server.xml or

==================================================
TesterSupport.java
new file mode 100644
index 0000000000..a8508b4edd
--- /dev/null
+++ b/test/org/apache/catalina/startup/TesterMapRealm.java
@@ -0,0 +1,65 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.catalina.startup;
+
+import java.security.Principal;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+import org.apache.catalina.realm.GenericPrincipal;
+import org.apache.catalina.realm.RealmBase;
+
+/**
+ * Simple Realm that uses a configurable {@link Map} to link user names and
+ * passwords.
+ */
+public final class TesterMapRealm extends RealmBase {
+    private Map<String,String> users = new HashMap<>();
+    private Map<String,List<String>> roles = new HashMap<>();
+
+    public void addUser(String username, String password) {
+        users.put(username, password);
+    }
+
+    public void addUserRole(String username, String role) {
+        List<String> userRoles = roles.get(username);
+        if (userRoles == null) {
+            userRoles = new ArrayList<>();
+            roles.put(username, userRoles);
+        }
+        userRoles.add(role);
+    }
+
+    @Override
+    protected String getName() {
+        return "MapRealm";
+    }
+
+    @Override
+    protected String getPassword(String username) {
+        return users.get(username);
+    }
+
+    @Override
+    protected Principal getPrincipal(String username) {
+        return new GenericPrincipal(username, getPassword(username),
+                roles.get(username));
+    }
+
+}
\ No newline at end of file

==================================================
