91e4c3c39df099d252fb752ab060333693c0c7d4
==================================================
Extend attempts at obfuscation to the Cookies example
==================================================
Mark Emlyn
==================================================
Mon Jun 23 08:44:24 2014 +0000
==================================================
CookieExample.java
index 97d7d57915..cefbaae708 100644
--- a/webapps/docs/changelog.xml
+++ b/webapps/docs/changelog.xml
@@ -59,8 +59,9 @@
         (markt/kkolinko)
       </scode>
       <fix>
-        Fix regression in <code>StandardContext.removeApplicationListener()</code>,
-        introduced by the fix for bug <bug>56588</bug>. (kkolinko)
+        Fix regression in
+        <code>StandardContext.removeApplicationListener()</code>, introduced by
+        the fix for bug <bug>56588</bug>. (kkolinko)
       </fix>
       <fix>
         <bug>56653</bug>: Fix concurrency issue with
@@ -82,6 +83,18 @@
       </scode>
     </changelog>
   </subsection>
+  <subsection name="Web applications">
+    <changelog>
+      <fix>
+        Attempt to obfuscate session cookie values associated with other web
+        applications when viewing HTTP request headers with the Cookies example
+        from the examples web application. This reduces the opportunity to use
+        this example for malicious purposes should the advice to remove the
+        examples web application from security sensitive systems be ignored.
+        (markt)
+      </fix>
+    </changelog>
+  </subsection>
 </section>
 <section name="Tomcat 8.0.9 (markt)">
   <subsection name="Catalina">

==================================================
CookieFilter.java
index 72a80da50b..c62463becd 100644
--- a/webapps/examples/WEB-INF/classes/CookieExample.java
+++ b/webapps/examples/WEB-INF/classes/CookieExample.java
@@ -24,7 +24,9 @@ import javax.servlet.http.Cookie;
 import javax.servlet.http.HttpServlet;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
+import javax.servlet.http.HttpSession;
 
+import util.CookieFilter;
 import util.HTMLFilter;
 
 /**
@@ -84,13 +86,19 @@ public class CookieExample extends HttpServlet {
 
         Cookie[] cookies = request.getCookies();
         if ((cookies != null) && (cookies.length > 0)) {
+            HttpSession session = request.getSession(false);
+            String sessionId = null;
+            if (session != null) {
+                sessionId = session.getId();
+            }
             out.println(RB.getString("cookies.cookies") + "<br>");
             for (int i = 0; i < cookies.length; i++) {
                 Cookie cookie = cookies[i];
-                out.print("Cookie Name: " + HTMLFilter.filter(cookie.getName())
-                          + "<br>");
+                String cName = cookie.getName();
+                String cValue = cookie.getValue();
+                out.print("Cookie Name: " + HTMLFilter.filter(cName) + "<br>");
                 out.println("  Cookie Value: "
-                            + HTMLFilter.filter(cookie.getValue())
+                            + HTMLFilter.filter(CookieFilter.filter(cName, cValue, sessionId))
                             + "<br><br>");
             }
         } else {

==================================================
