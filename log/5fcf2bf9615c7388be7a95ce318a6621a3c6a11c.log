5fcf2bf9615c7388be7a95ce318a6621a3c6a11c
==================================================
Fix various TODOs
==================================================
Mark Thomas
==================================================
Thu Nov 26 20:30:46 2015 +0000
==================================================
AsyncChannelWrapperSecure.java
Fix various TODOs

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1716763 13f79535-47bb-0310-9956-ffa450edef68



==================================================
WsRemoteEndpointImplBase.java
index 75403c8ef2..b4877abf06 100644
--- a/java/org/apache/tomcat/websocket/LocalStrings.properties
+++ b/java/org/apache/tomcat/websocket/LocalStrings.properties
@@ -16,9 +16,13 @@
 asyncChannelGroup.createFail=Unable to create dedicated AsynchronousChannelGroup for WebSocket clients which is required to prevent memory leaks in complex class loader environments like JavaEE containers
 
 asyncChannelWrapperSecure.closeFail=Failed to close channel cleanly
+asyncChannelWrapperSecure.check.notOk=TLS handshake returned an unexpected status [{0}]
+asyncChannelWrapperSecure.check.unwrap=Bytes were written to the output during a read
+asyncChannelWrapperSecure.check.wrap=Bytes were consumed from the input during a write
 asyncChannelWrapperSecure.concurrentRead=Concurrent read operations are not permitted
 asyncChannelWrapperSecure.concurrentWrite=Concurrent write operations are not permitted
 asyncChannelWrapperSecure.eof=Unexpected end of stream
+asyncChannelWrapperSecure.notHandshaking=Unexpected state [NOT_HANDSHAKING] during TLS handshake
 asyncChannelWrapperSecure.readOverflow=Buffer overflow. [{0}] bytes to write into a [{1}] byte buffer that already contained [{2}] bytes.
 asyncChannelWrapperSecure.statusUnwrap=Unexpected Status of SSLEngineResult after an unwrap() operation
 asyncChannelWrapperSecure.statusWrap=Unexpected Status of SSLEngineResult after a wrap() operation
@@ -75,10 +79,11 @@ wsRemoteEndpoint.concurrentMessageSend=Messages may not be sent concurrently eve
 wsRemoteEndpoint.flushOnCloseFailed=Batched messages still enabled after session has been closed. Unable to flush remaining batched message.
 wsRemoteEndpoint.invalidEncoder=The specified encoder of type [{0}] could not be instantiated
 wsRemoteEndpoint.noEncoder=No encoder specified for object of class [{0}]
-wsRemoteEndpoint.wrongState=The remote endpoint was in state [{0}] which is an invalid state for called method
 wsRemoteEndpoint.nullData=Invalid null data argument
 wsRemoteEndpoint.nullHandler=Invalid null handler argument
+wsRemoteEndpoint.sendInterupt=The current thread was interrupted while waiting for a blocking send to complete
 wsRemoteEndpoint.tooMuchData=Ping or pong may not send more than 125 bytes
+wsRemoteEndpoint.wrongState=The remote endpoint was in state [{0}] which is an invalid state for called method
 
 # Note the following message is used as a close reason in a WebSocket control
 # frame and therefore must be 123 bytes (not characters) or less in length.

==================================================
WsHttpUpgradeHandler.java
index c526182c9a..2d802a1550 100644
--- a/java/org/apache/tomcat/websocket/server/LocalStrings.properties
+++ b/java/org/apache/tomcat/websocket/server/LocalStrings.properties
@@ -33,5 +33,6 @@ uriTemplate.invalidSegment=The segment [{0}] is not valid in the provided path [
 
 wsHttpUpgradeHandler.destroyFailed=Failed to close WebConnection while destroying the WebSocket HttpUpgradeHandler
 wsHttpUpgradeHandler.noPreInit=The preInit() method must be called to configure the WebSocket HttpUpgradeHandler before the container calls init(). Usually, this means the Servlet that created the WsHttpUpgradeHandler instance should also call preInit()
+wsHttpUpgradeHandler.serverStop=The server is stopping
 
 wsRemoteEndpointServer.closeFailed=Failed to close the ServletOutputStream connection cleanly
\ No newline at end of file

==================================================
TestCoyoteOutputStream.java
index 2471d48b8f..1ef6daaf28 100644
--- a/java/org/apache/tomcat/websocket/server/WsHttpUpgradeHandler.java
+++ b/java/org/apache/tomcat/websocket/server/WsHttpUpgradeHandler.java
@@ -163,8 +163,8 @@ public class WsHttpUpgradeHandler implements InternalHttpUpgradeHandler {
                 wsRemoteEndpointServer.onWritePossible(false);
                 break;
             case STOP:
-                // TODO i18n
-                CloseReason cr = new CloseReason(CloseCodes.GOING_AWAY, "");
+                CloseReason cr = new CloseReason(CloseCodes.GOING_AWAY,
+                        sm.getString("wsHttpUpgradeHandler.serverStop"));
                 try {
                     wsSession.close(cr);
                 } catch (IOException ioe) {

==================================================
EchoRpcTest.java
index bf2088acff..8da430c6e6 100644
--- a/test/org/apache/catalina/connector/TestCoyoteOutputStream.java
+++ b/test/org/apache/catalina/connector/TestCoyoteOutputStream.java
@@ -218,7 +218,8 @@ public class TestCoyoteOutputStream extends TomcatBaseTest {
 
             @Override
             public void onError(Throwable throwable) {
-                // TODO Auto-generated method stub
+                // Not expected.
+                throwable.printStackTrace();
             }
         }
     }

==================================================
