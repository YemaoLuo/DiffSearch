0cd22d35ffb2ec6572783773f2d1740accef5cf0
==================================================
Refactor header preparation with adding compression support in mind.
==================================================
Mark Thomas
==================================================
Tue Nov 28 20:25:07 2017 +0000
==================================================
Stream.java
Refactor header preparation with adding compression support in mind.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1816570 13f79535-47bb-0310-9956-ffa450edef68



==================================================
StreamProcessor.java
index 091c788c1e..197c43d9a2 100644
--- a/java/org/apache/coyote/http2/Stream.java
+++ b/java/org/apache/coyote/http2/Stream.java
@@ -39,7 +39,6 @@ import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.buf.ByteChunk;
 import org.apache.tomcat.util.buf.MessageBytes;
-import org.apache.tomcat.util.http.FastHttpDateFormat;
 import org.apache.tomcat.util.http.MimeHeaders;
 import org.apache.tomcat.util.net.ApplicationBufferHandler;
 import org.apache.tomcat.util.res.StringManager;
@@ -59,7 +58,7 @@ class Stream extends AbstractStream implements HeaderEmitter {
     static {
         Response response =  new Response();
         response.setStatus(100);
-        prepareHeaders(response);
+        StreamProcessor.prepareHeaders(response);
         ACK_HEADERS = response.getMimeHeaders();
     }
 
@@ -407,7 +406,6 @@ class Stream extends AbstractStream implements HeaderEmitter {
 
 
     final void writeHeaders() throws IOException {
-        prepareHeaders(coyoteResponse);
         boolean endOfStream = getOutputBuffer().hasNoBody() &&
                 coyoteResponse.getTrailerFields() == null;
         // TODO: Is 1k the optimal value?
@@ -666,33 +664,6 @@ class Stream extends AbstractStream implements HeaderEmitter {
     }
 
 
-    private static void prepareHeaders(Response coyoteResponse) {
-        MimeHeaders headers = coyoteResponse.getMimeHeaders();
-        int statusCode = coyoteResponse.getStatus();
-
-        // Add the pseudo header for status
-        headers.addValue(":status").setString(Integer.toString(statusCode));
-
-        // Check to see if a response body is present
-        if (!(statusCode < 200 || statusCode == 205 || statusCode == 304)) {
-            String contentType = coyoteResponse.getContentType();
-            if (contentType != null) {
-                headers.setValue("content-type").setString(contentType);
-            }
-            String contentLanguage = coyoteResponse.getContentLanguage();
-            if (contentLanguage != null) {
-                headers.setValue("content-language").setString(contentLanguage);
-            }
-        }
-
-        // Add date header unless it is an informational response or the
-        // application has already set one
-        if (statusCode >= 200 && headers.getValue("date") == null) {
-            headers.addValue("date").setString(FastHttpDateFormat.getCurrentDate());
-        }
-    }
-
-
     private static class PrivilegedPush implements PrivilegedExceptionAction<Void> {
 
         private final Http2UpgradeHandler handler;

==================================================
