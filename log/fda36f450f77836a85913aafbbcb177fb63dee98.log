fda36f450f77836a85913aafbbcb177fb63dee98
==================================================
Process priority frames
==================================================
Mark Thomas
==================================================
Wed May 13 18:18:07 2015 +0000
==================================================
AbstractStream.java
Process priority frames

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1679255 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Constants.java
index f67580c990..3629576efe 100644
--- a/java/org/apache/coyote/http2/AbstractStream.java
+++ b/java/org/apache/coyote/http2/AbstractStream.java
@@ -20,18 +20,23 @@ import java.util.HashSet;
 import java.util.Iterator;
 import java.util.Set;
 
+import org.apache.juli.logging.Log;
+import org.apache.juli.logging.LogFactory;
+import org.apache.tomcat.util.res.StringManager;
+
 /**
  * Used to managed prioritisation.
  */
 abstract class AbstractStream {
 
-    private static final int DEFAULT_WEIGHT = 16;
+    private static final Log log = LogFactory.getLog(AbstractStream.class);
+    private static final StringManager sm = StringManager.getManager(AbstractStream.class);
 
     private final Integer identifier;
 
     private volatile AbstractStream parentStream = null;
     private final Set<AbstractStream> childStreams = new HashSet<>();
-    private volatile int weight = DEFAULT_WEIGHT;
+    private volatile int weight = Constants.DEFAULT_WEIGHT;
 
     public Integer getIdentifier() {
         return identifier;
@@ -43,7 +48,12 @@ abstract class AbstractStream {
     }
 
 
-    public void rePrioritise(Stream parent, boolean exclusive, int weight) {
+    public void rePrioritise(AbstractStream parent, boolean exclusive, int weight) {
+        if (log.isDebugEnabled()) {
+            log.debug(sm.getString("abstractStream.reprioritisation.debug", identifier,
+                    Boolean.toString(exclusive), parent.getIdentifier(), Integer.toString(weight)));
+        }
+
         // Check if new parent is a descendant of this stream
         if (isDescendant(parent)) {
             parent.detachFromParent();

==================================================
Http2UpgradeHandler.java
new file mode 100644
index 0000000000..8d70eb9eca
--- /dev/null
+++ b/java/org/apache/coyote/http2/Constants.java
@@ -0,0 +1,23 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one or more
+ *  contributor license agreements.  See the NOTICE file distributed with
+ *  this work for additional information regarding copyright ownership.
+ *  The ASF licenses this file to You under the Apache License, Version 2.0
+ *  (the "License"); you may not use this file except in compliance with
+ *  the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing, software
+ *  distributed under the License is distributed on an "AS IS" BASIS,
+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *  See the License for the specific language governing permissions and
+ *  limitations under the License.
+ */
+package org.apache.coyote.http2;
+
+public class Constants {
+
+    // Prioritisation
+    public static final int DEFAULT_WEIGHT = 16;
+}

==================================================
