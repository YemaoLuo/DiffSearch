c9214a0f18758de37a1fb432cfd25532953ea635
==================================================
Update Codec - no substantive changes
==================================================
Mark Thomas
==================================================
Fri Jan 15 12:27:10 2021 +0000
==================================================
Base64.java
index 58541c1078..1c449c7c16 100644
--- a/MERGE.txt
+++ b/MERGE.txt
@@ -43,7 +43,7 @@ Codec
 Sub-tree:
 src/main/java/org/apache/commons/codec
 The SHA1 ID / tag for the most recent commit to be merged to Tomcat is:
-53c93d0ffccb65d182306c74d1230ce814889dc1 (2020-08-18)
+2e9785b93a2aacedd84abc6a646cdb200940b818 (2021-01-15)
 Note: Only classes required for Base64 encoding/decoding. The rest are removed.
 
 FileUpload

==================================================
StringUtils.java
index 2b5c7d4e2b..08d7d3418a 100644
--- a/java/org/apache/tomcat/util/codec/binary/Base64.java
+++ b/java/org/apache/tomcat/util/codec/binary/Base64.java
@@ -360,8 +360,8 @@ public class Base64 extends BaseNCodec {
      * @since 1.5
      */
     public static boolean isBase64(final byte[] arrayOctet) {
-        for (byte b : arrayOctet) {
-            if (!isBase64(b) && !isWhiteSpace(b)) {
+        for (byte element : arrayOctet) {
+            if (!isBase64(element) && !isWhiteSpace(element)) {
                 return false;
             }
         }
@@ -428,7 +428,8 @@ public class Base64 extends BaseNCodec {
     private static void validateCharacter(final int emptyBitsMask, final Context context) {
         if ((context.ibitWorkArea & emptyBitsMask) != 0) {
             throw new IllegalArgumentException(
-                "Last encoded character (before the paddings if any) is a valid base 64 alphabet but not a possible value. " +
+                "Last encoded character (before the paddings if any) is a valid " +
+                "base 64 alphabet but not a possible value. " +
                 "Expected the discarded bits to be zero.");
         }
     }
@@ -586,8 +587,7 @@ public class Base64 extends BaseNCodec {
             }
             if (lineLength > 0){ // null line-sep forces no chunking rather than throwing IAE
                 this.encodeSize = BYTES_PER_ENCODED_BLOCK + lineSeparator.length;
-                this.lineSeparator = new byte[lineSeparator.length];
-                System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);
+                this.lineSeparator = lineSeparator.clone();
             } else {
                 this.encodeSize = BYTES_PER_ENCODED_BLOCK;
                 this.lineSeparator = null;

==================================================
