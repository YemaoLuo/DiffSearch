f3068da68a641caeb2af4c1751201e6fe6f4dea9
==================================================
Allow human-readable channelSendOptions and mapSendOptions in configurations.
==================================================
Christopher Schultz
==================================================
Wed Jun 21 14:58:57 2017 +0000
==================================================
BackupManager.java
index c741213b39..0fe051bdd2 100644
--- a/build.xml
+++ b/build.xml
@@ -1423,8 +1423,8 @@
       <junit printsummary="yes" fork="yes" dir="." showoutput="${test.verbose}"
         errorproperty="test.result.error"
         failureproperty="test.result.failure"
-        haltonfailure="${test.haltonfailure}"
-        threads="${test.threads}" >
+        haltonfailure="${test.haltonfailure}">
+        <!-- threads="${test.threads}" -->
 
         <jvmarg value="${test.jvmarg.egd}"/>
         <jvmarg value="-Dfile.encoding=UTF-8"/>

==================================================
SimpleTcpCluster.java
index 33bdba0888..5ad0bcece8 100644
--- a/java/org/apache/catalina/ha/session/mbeans-descriptors.xml
+++ b/java/org/apache/catalina/ha/session/mbeans-descriptors.xml
@@ -453,6 +453,11 @@
       description="mapSendOptions"
       type="int"
       writeable="false"/>
+    <attribute
+      name="mapSendOptionsName"
+      description="mapSendOptions name."
+      writeable="false"
+      type="java.lang.String"/>
     <attribute
       name="maxActive"
       description="Maximum number of active sessions so far"

==================================================
Channel.java
index 332652d55b..40a019c198 100644
--- a/java/org/apache/catalina/ha/tcp/mbeans-descriptors.xml
+++ b/java/org/apache/catalina/ha/tcp/mbeans-descriptors.xml
@@ -28,7 +28,12 @@
     <attribute
       name="channelSendOptions"
       description="This sets channel behaviour on sent messages."
-      type="int"/>
+      type="java.lang.String"/>
+    <attribute
+      name="channelSendOptionsName"
+      description="channelSendOptions name."
+      writeable="false"
+      type="java.lang.String"/>
     <attribute
       name="channelStartOptions"
       description="This sets channel start behaviour."

==================================================
TestChannelConfig.java
index e3f51bc066..eb47c19cd7 100644
--- a/java/org/apache/catalina/tribes/Channel.java
+++ b/java/org/apache/catalina/tribes/Channel.java
@@ -16,7 +16,11 @@
  */
 package org.apache.catalina.tribes;
 
+import org.apache.juli.logging.Log;
+import org.apache.juli.logging.LogFactory;
+
 import java.io.Serializable;
+import java.util.StringJoiner;
 
 /**
  * Channel interface<br>
@@ -369,4 +373,88 @@ public interface Channel {
      */
     public void setName(String name);
 
+    /**
+     * Translates the name of an option to its integer value.  Valid option names are "asynchronous" (alias "async"),
+     * "byte_message" (alias "byte"), "multicast", "secure", "synchronized_ack" (alias "sync"), "udp", "use_ack"
+     * @param opt The name of the option
+     * @return the int value of the passed option name
+     */
+    public static int getSendOptionValue(String opt){
+
+        switch (opt){
+
+            case "asynchronous":
+            case "async":
+                return SEND_OPTIONS_ASYNCHRONOUS;
+
+            case "byte_message":
+            case "byte":
+                return SEND_OPTIONS_BYTE_MESSAGE;
+
+            case "multicast":
+                return SEND_OPTIONS_MULTICAST;
+
+            case "secure":
+                return SEND_OPTIONS_SECURE;
+
+            case "synchronized_ack":
+            case "sync":
+                return SEND_OPTIONS_SYNCHRONIZED_ACK;
+
+            case "udp":
+                return SEND_OPTIONS_UDP;
+
+            case "use_ack":
+                return SEND_OPTIONS_USE_ACK;
+        }
+
+        throw new IllegalArgumentException(String.format("[%s] is not a valid option", opt));
+    }
+
+    /**
+     * Translates a comma separated list of option names to their bitwise-ORd value
+     * @param input A comma separated list of options, e.g. "async, multicast"
+     * @return a bitwise ORd value of the passed option names
+     */
+    public static int parseSendOptions(String input){
+
+        try {
+            return Integer.parseInt(input);
+        } catch (NumberFormatException nfe){
+            final Log log = LogFactory.getLog(Channel.class);
+            log.trace(String.format("Failed to parse [%s] as integer, channelSendOptions possibly set by name(s)", input));
+        }
+
+        String[] options = input.split("\\s*,\\s*");
+
+        int result = 0;
+        for (String opt : options) {
+            result |= getSendOptionValue(opt);
+        }
+
+        return result;
+    }
+
+    /**
+     * Translates an integer value of SendOptions to its human-friendly comma separated value list for use in JMX and such.
+     * @param input the int value of SendOptions
+     * @return the human-friendly string representation in a reverse order (i.e. the last option will be shown first)
+     */
+    public static String getSendOptionsAsString(int input){
+
+        // allOptionNames must be in order of the bits of the available options
+        final String[] allOptionNames = new String[]{ "byte", "use_ack", "sync", "async", "secure", "udp", "multicast" };
+
+        StringJoiner names = new StringJoiner(", ");
+        for (int bit=allOptionNames.length - 1; bit >= 0; bit--){
+
+            // if the bit is set then add the name to the result
+            if (((1 << bit) & input) > 0){
+                names.add(allOptionNames[bit]);
+            }
+        }
+
+        return names.toString();
+    }
+
 }

==================================================
