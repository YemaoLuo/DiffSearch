f28cee7fdd5d101f002fba6df086f4476df4bd9a
==================================================
Further expansion of the parser tests
==================================================
Mark Emlyn
==================================================
Thu Jul 31 19:16:50 2014 +0000
==================================================
Cipher.java
Further expansion of the parser tests

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1614962 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestOpenSSLCipherConfigurationParser.java
index 90a8316c9e..eaf2add777 100644
--- a/java/org/apache/tomcat/util/net/jsse/openssl/Cipher.java
+++ b/java/org/apache/tomcat/util/net/jsse/openssl/Cipher.java
@@ -2415,6 +2415,9 @@ enum Cipher {
             256
     ),
     // RC4_128_WITH_MD5
+    /*
+     * Same as Cipher 04 and name isn't recognised by JSSE so ignore this as it
+     * adds no value and complicates the unit tests.
     SSL_CK_RC4_128_WITH_MD5(
             "RC4-MD5",
             null,
@@ -2428,7 +2431,7 @@ enum Cipher {
             false,
             128,
             128
-    ),
+    ),*/
     // RC2_128_CBC_WITH_MD5
     SSL_CK_RC2_128_CBC_WITH_MD5(
             "RC2-MD5",

==================================================
TesterOpenSSL.java
index e74cdb5db6..de31cec39e 100644
--- a/test/org/apache/tomcat/util/net/jsse/openssl/TestOpenSSLCipherConfigurationParser.java
+++ b/test/org/apache/tomcat/util/net/jsse/openssl/TestOpenSSLCipherConfigurationParser.java
@@ -19,7 +19,6 @@ package org.apache.tomcat.util.net.jsse.openssl;
 import java.util.List;
 
 import org.junit.Assert;
-import org.junit.Ignore;
 import org.junit.Test;
 
 public class TestOpenSSLCipherConfigurationParser {
@@ -37,12 +36,23 @@ public class TestOpenSSLCipherConfigurationParser {
 
 
     @Test
-    @Ignore("Results don't match - probably due to unimplemented ciphers")
     public void testHigh() throws Exception {
         testSpecification("HIGH");
     }
 
 
+    @Test
+    public void testMedium() throws Exception {
+        testSpecification("MEDIUM");
+    }
+
+
+    @Test
+    public void testLow() throws Exception {
+        testSpecification("LOW");
+    }
+
+
     @Test
     public void testExport40() throws Exception {
         testSpecification("EXPORT40");
@@ -60,6 +70,16 @@ public class TestOpenSSLCipherConfigurationParser {
 
         TesterOpenSSL.removeUnimplementedCiphersJsse(jsseCipherListFromParser);
 
-        Assert.assertEquals(jsseCipherListFromOpenSSL, jsseCipherListFromParser);
+        Assert.assertEquals(listToString(jsseCipherListFromOpenSSL), listToString(jsseCipherListFromParser));
+    }
+
+
+    private String listToString(List<String> list) {
+        StringBuilder sb = new StringBuilder();
+        for (String entry : list) {
+            sb.append(entry);
+            sb.append(',');
+        }
+        return sb.toString();
     }
 }

==================================================
