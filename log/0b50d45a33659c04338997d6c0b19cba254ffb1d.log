0b50d45a33659c04338997d6c0b19cba254ffb1d
==================================================
- Add socket to the poller after cleanup in the connection handler event method (possible memory leak).
==================================================
Remy Maucherat
==================================================
Sat Apr 28 00:49:06 2007 +0000
==================================================
Http11AprProcessor.java
- Add socket to the poller after cleanup in the connection handler event method (possible memory leak).

git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk@533272 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http11AprProtocol.java
index 3d7eaad46b..61fc53aaa8 100644
--- a/java/org/apache/coyote/http11/Http11AprProcessor.java
+++ b/java/org/apache/coyote/http11/Http11AprProcessor.java
@@ -753,11 +753,9 @@ public class Http11AprProcessor implements ActionHook {
             recycle();
             return SocketState.CLOSED;
         } else if (!comet) {
-            endpoint.getPoller().add(socket);
             recycle();
             return SocketState.OPEN;
         } else {
-            endpoint.getCometPoller().add(socket);
             return SocketState.LONG;
         }
     }

==================================================
Http11NioProcessor.java
index 42d3c9bc22..3a659b9fa1 100644
--- a/java/org/apache/coyote/http11/Http11AprProtocol.java
+++ b/java/org/apache/coyote/http11/Http11AprProtocol.java
@@ -560,6 +560,11 @@ public class Http11AprProtocol implements ProtocolHandler, MBeanRegistration {
                     if (state != SocketState.LONG) {
                         connections.remove(socket);
                         recycledProcessors.offer(result);
+                        if (state == SocketState.OPEN) {
+                            proto.endpoint.getPoller().add(socket);
+                        }
+                    } else {
+                        proto.endpoint.getCometPoller().add(socket);
                     }
                 }
             }

==================================================
Http11NioProtocol.java
index b74d5507de..9d3f8bc6ea 100644
--- a/java/org/apache/coyote/http11/Http11NioProcessor.java
+++ b/java/org/apache/coyote/http11/Http11NioProcessor.java
@@ -782,11 +782,9 @@ public class Http11NioProcessor implements ActionHook {
             recycle();
             return SocketState.CLOSED;
         } else if (!comet) {
-            socket.getPoller().add(socket);
             recycle();
             return SocketState.OPEN;
         } else {
-            socket.getPoller().add(socket);
             return SocketState.LONG;
         }
     }

==================================================
