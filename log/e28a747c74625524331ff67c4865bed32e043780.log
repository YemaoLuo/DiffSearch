e28a747c74625524331ff67c4865bed32e043780
==================================================
Add registerForEvent to Endpoint
==================================================
Mark Thomas
==================================================
Sun Nov 23 22:50:32 2014 +0000
==================================================
AprEndpoint.java
Add registerForEvent to Endpoint

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1641280 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Nio2Endpoint.java
index 60774a0190..37e3250c61 100644
--- a/java/org/apache/tomcat/util/net/AprEndpoint.java
+++ b/java/org/apache/tomcat/util/net/AprEndpoint.java
@@ -2597,5 +2597,12 @@ public class AprEndpoint extends AbstractEndpoint<Long> {
         public void flush() {
             // NO-OP
         }
+
+
+        @Override
+        public void regsiterForEvent(boolean read, boolean write) {
+            ((AprEndpoint) getEndpoint()).getPoller().add(
+                    getSocket().longValue(), -1, read, write);
+        }
     }
 }

==================================================
NioEndpoint.java
index d018653b6a..01fc64791b 100644
--- a/java/org/apache/tomcat/util/net/Nio2Endpoint.java
+++ b/java/org/apache/tomcat/util/net/Nio2Endpoint.java
@@ -1111,6 +1111,11 @@ public class Nio2Endpoint extends AbstractEndpoint<Nio2Channel> {
                 throw ex;
             }
         }
+
+        @Override
+        public void regsiterForEvent(boolean read, boolean write) {
+            // NO-OP. Appropriate handlers will already have been registered.
+        }
     }
 
 

==================================================
SocketWrapperBase.java
index 472b1c1d4e..432dfa7f9e 100644
--- a/java/org/apache/tomcat/util/net/NioEndpoint.java
+++ b/java/org/apache/tomcat/util/net/NioEndpoint.java
@@ -1619,6 +1619,20 @@ public class NioEndpoint extends AbstractEndpoint<NioChannel> {
                 }
             }
         }
+
+        @Override
+        public void regsiterForEvent(boolean read, boolean write) {
+            SelectionKey key = getSocket().getIOChannel().keyFor(
+                    getSocket().getPoller().getSelector());
+            if (read) {
+                this.interestOps(this.interestOps() | SelectionKey.OP_READ);
+                key.interestOps(key.interestOps() | SelectionKey.OP_READ);
+            }
+            if (write) {
+                this.interestOps(this.interestOps() | SelectionKey.OP_WRITE);
+                key.interestOps(key.interestOps() | SelectionKey.OP_READ);
+            }
+        }
     }
 
 

==================================================
