ead39973f946dd302c480ff6f881c95acd297fd9
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49105
==================================================
Mark Emlyn
==================================================
Wed Apr 14 22:27:59 2010 +0000
==================================================
ExpressionFactory.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49105
Misc Javadoc corrections.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@934224 13f79535-47bb-0310-9956-ffa450edef68



==================================================
HttpConstraintElement.java
index 6295096a6e..6f441367cd 100644
--- a/java/javax/el/ExpressionFactory.java
+++ b/java/javax/el/ExpressionFactory.java
@@ -101,7 +101,7 @@ public abstract class ExpressionFactory {
      * <li>Platform default implementation -
      *     org.apache.el.ExpressionFactoryImpl</li>
      * </ol>
-     * @return
+     * @return the new ExpressionFactory
      */
     public static ExpressionFactory newInstance() {
         return newInstance(null);
@@ -111,8 +111,8 @@ public abstract class ExpressionFactory {
      * Create a new {@link ExpressionFactory} passing in the provided
      * {@link Properties}. Search order is the same as {@link #newInstance()}.
      * 
-     * @param properties
-     * @return
+     * @param properties the properties to be passed to the new instance (may be null)
+     * @return the new ExpressionFactory
      */
     public static ExpressionFactory newInstance(Properties properties) {
         String className = null;

==================================================
ServletContext.java
index f70ad74cb3..f9b885d42b 100644
--- a/java/javax/servlet/HttpConstraintElement.java
+++ b/java/javax/servlet/HttpConstraintElement.java
@@ -43,7 +43,7 @@ public class HttpConstraintElement {
     }
     
     /**
-     * Convenience constructor for {@link EmptyRoleSemantic.DENY}.
+     * Convenience constructor for {@link EmptyRoleSemantic#DENY}.
      * 
      */
     public HttpConstraintElement(EmptyRoleSemantic emptyRoleSemantic) {

==================================================
Context.java
index 14448b6d0a..c6be08b6d7 100644
--- a/java/javax/servlet/ServletContext.java
+++ b/java/javax/servlet/ServletContext.java
@@ -843,7 +843,7 @@ public interface ServletContext {
      * 
      * @param sessionTrackingModes
      * @throws IllegalArgumentException If sessionTrackingModes specifies
-     *                                  {@link SessionTrackingMode.SSL} in
+     *                                  {@link SessionTrackingMode#SSL} in
      *                                  combination with any other
      *                                  {@link SessionTrackingMode}
      * @throws IllegalStateException    If the context has already been

==================================================
Host.java
index 53c49746c8..9e5c467704 100644
--- a/java/org/apache/catalina/Context.java
+++ b/java/org/apache/catalina/Context.java
@@ -738,7 +738,7 @@ public interface Context extends Container {
      *
      * @param pattern URL pattern to be mapped
      * @param name Name of the corresponding servlet to execute
-     * @param jspWildCard true if name identifies the JspServlet
+     * @param jspWildcard true if name identifies the JspServlet
      * and pattern contains a wildcard; false otherwise
      */
     public void addServletMapping(String pattern, String name,

==================================================
Lifecycle.java
index b205de90ff..07499cd160 100644
--- a/java/org/apache/catalina/Host.java
+++ b/java/org/apache/catalina/Host.java
@@ -235,7 +235,7 @@ public interface Host extends Container {
     /**
      * Returns true if the Host will attempt to create directories for appBase and xmlBase
      * unless they already exist.
-     * @return
+     * @return true if the Host will attempt to create directories
      */
     public boolean getCreateDirs();
     /**

==================================================
Session.java
index 7c3fd509a8..2ba8514e73 100644
--- a/java/org/apache/catalina/Lifecycle.java
+++ b/java/org/apache/catalina/Lifecycle.java
@@ -60,7 +60,7 @@ package org.apache.catalina;
  * try to stop all sub-components - even those it didn't start.
  * 
  * MUST_STOP is used to indicate that the {@link #stop()} should be called on
- * the component as soon as {@link start()} exits.
+ * the component as soon as {@link #start()} exits.
  * 
  * Attempting any other transition will throw {@link LifecycleException}.
  * 

==================================================
FormAuthenticator.java
index 18f4b8d833..b80592048e 100644
--- a/java/org/apache/catalina/Session.java
+++ b/java/org/apache/catalina/Session.java
@@ -137,7 +137,7 @@ public interface Session {
 
     /**
      * Return the last client access time without invalidation check
-     * @see #getThisAccessedTime().
+     * @see #getThisAccessedTime()
      */
     public long getThisAccessedTimeInternal();
 
@@ -152,7 +152,7 @@ public interface Session {
 
     /**
      * Return the last client access time without invalidation check
-     * @see #getLastAccessedTime().
+     * @see #getLastAccessedTime()
      */
     public long getLastAccessedTimeInternal();
 

==================================================
Request.java
index 0cf369cb54..99c7038b69 100644
--- a/java/org/apache/catalina/authenticator/FormAuthenticator.java
+++ b/java/org/apache/catalina/authenticator/FormAuthenticator.java
@@ -309,7 +309,7 @@ public class FormAuthenticator
      * @param config    Login configuration describing how authentication
      *              should be performed
      * @throws IOException  If the forward to the login page fails and the call
-     *                      to {@link HttpServletResponse#sendError(int, String)
+     *                      to {@link HttpServletResponse#sendError(int, String)}
      *                      throws an {@link IOException}
      */
     protected void forwardToLoginPage(Request request,
@@ -338,7 +338,7 @@ public class FormAuthenticator
      * @param config    Login configuration describing how authentication
      *              should be performed
      * @throws IOException  If the forward to the error page fails and the call
-     *                      to {@link HttpServletResponse#sendError(int, String)
+     *                      to {@link HttpServletResponse#sendError(int, String)}
      *                      throws an {@link IOException}
      */
     protected void forwardToErrorPage(Request request,

==================================================
ApplicationSessionCookieConfig.java
index d18434264a..02b0cd7c21 100644
--- a/java/org/apache/catalina/connector/Request.java
+++ b/java/org/apache/catalina/connector/Request.java
@@ -2266,7 +2266,7 @@ public class Request
      * between nodes in a cluster and session fixation prevention during the
      * authentication process.
      * 
-     * @param session   The session to change the session ID for
+     * @param newSessionId   The session to change the session ID for
      */
     public void changeSessionId(String newSessionId) {
         // This should only ever be called if there was an old session ID but

==================================================
ContainerBase.java
index 1a148e25bb..1db3b5709b 100644
--- a/java/org/apache/catalina/core/ApplicationSessionCookieConfig.java
+++ b/java/org/apache/catalina/core/ApplicationSessionCookieConfig.java
@@ -106,7 +106,7 @@ public class ApplicationSessionCookieConfig implements SessionCookieConfig {
     /**
      * Creates a new session cookie for the given session ID
      *
-     * @param conetxt     The Context for the web application
+     * @param context     The Context for the web application
      * @param sessionId   The ID of the session for which the cookie will be
      *                    created
      * @param secure      Should session cookie be configured as secure

==================================================
StandardContext.java
index ae8fa9e8a9..f18d9aa15b 100644
--- a/java/org/apache/catalina/core/ContainerBase.java
+++ b/java/org/apache/catalina/core/ContainerBase.java
@@ -1121,7 +1121,7 @@ public abstract class ContainerBase extends LifecycleBase
      * Convenience method, intended for use by the digester to simplify the
      * process of adding Valves to containers. See
      * {@link Pipeline#addValve(Valve)} for full details. Components other than
-     * the digester should use {@link #getPipeline()#addValve(Valve)} in case a
+     * the digester should use {@link #getPipeline()}.{@link #addValve(Valve)} in case a
      * future implementation provides an alternative method for the digester to
      * use.
      *

==================================================
StandardSession.java
index 7221140669..eedc91c1f9 100644
--- a/java/org/apache/catalina/core/StandardContext.java
+++ b/java/org/apache/catalina/core/StandardContext.java
@@ -2307,9 +2307,9 @@ public class StandardContext
 
 
     /**
-     * Set the clearReferencesStopThreads feature for this Context.
+     * Set the clearReferencesThreadLocals feature for this Context.
      *
-     * @param clearReferencesStopThreads The new flag value
+     * @param clearReferencesThreadLocals The new flag value
      */
     public void setClearReferencesThreadLocals(
             boolean clearReferencesThreadLocals) {

==================================================
ChannelListener.java
index 07703298df..03e21fdef8 100644
--- a/java/org/apache/catalina/session/StandardSession.java
+++ b/java/org/apache/catalina/session/StandardSession.java
@@ -430,7 +430,7 @@ public class StandardSession
 
     /**
      * Return the last client access time without invalidation check
-     * @see #getThisAccessedTime().
+     * @see #getThisAccessedTime()
      */
     public long getThisAccessedTimeInternal() {
         return (this.thisAccessedTime);
@@ -455,7 +455,7 @@ public class StandardSession
 
     /**
      * Return the last client access time without invalidation check
-     * @see #getLastAccessedTime().
+     * @see #getLastAccessedTime()
      */
     public long getLastAccessedTimeInternal() {
         return (this.lastAccessedTime);

==================================================
RpcChannel.java
index d329b86f0c..ea81f2e197 100644
--- a/java/org/apache/catalina/tribes/ChannelListener.java
+++ b/java/org/apache/catalina/tribes/ChannelListener.java
@@ -61,7 +61,7 @@ public interface ChannelListener {
     /**
      * 
      * @return int
-     * @see Object#hashCode(int)
+     * @see Object#hashCode()
      */
     public int hashCode();
 

==================================================
AstValue.java
index c2fd1c4390..8f44f06f81 100644
--- a/java/org/apache/catalina/tribes/group/RpcChannel.java
+++ b/java/org/apache/catalina/tribes/group/RpcChannel.java
@@ -66,7 +66,8 @@ public class RpcChannel implements ChannelListener{
      * Send a message and wait for the response.
      * @param destination Member[] - the destination for the message, and the members you request a reply from
      * @param message Serializable - the message you are sending out
-     * @param options int - FIRST_REPLY, MAJORITY_REPLY or ALL_REPLY
+     * @param rpcOptions int - FIRST_REPLY, MAJORITY_REPLY or ALL_REPLY
+     * @param channelOptions channel sender options
      * @param timeout long - timeout in milliseconds, if no reply is received within this time null is returned
      * @return Response[] - an array of response objects.
      * @throws ChannelException

==================================================
Node.java
index 94c3bdfea2..4caacfda01 100644
--- a/java/org/apache/el/parser/AstValue.java
+++ b/java/org/apache/el/parser/AstValue.java
@@ -283,7 +283,7 @@ public final class AstValue extends SimpleNode {
 
     
     /**
-     * @ since EL 2.2
+     * @since EL 2.2
      */
     @Override
     public boolean isParametersProvided() {

==================================================
ChatServlet.java
index 1e4993bb36..d9327ccf2b 100644
--- a/java/org/apache/jasper/compiler/Node.java
+++ b/java/org/apache/jasper/compiler/Node.java
@@ -2292,7 +2292,7 @@ abstract class Node implements TagConstants {
         /**
          * @return true if the value represents an expression that should be fed
          *         to the expression interpreter
-         * @return false for string literals or rtexprvalues that should not be
+         *         false for string literals or rtexprvalues that should not be
          *         interpreted or reevaluated
          */
         public boolean isELInterpreterInput() {

==================================================
ExampleFilter.java
index 15f025a466..1b8a619686 100644
--- a/webapps/examples/WEB-INF/classes/chat/ChatServlet.java
+++ b/webapps/examples/WEB-INF/classes/chat/ChatServlet.java
@@ -194,14 +194,6 @@ public class ChatServlet
             running = false;
         }
 
-        /**
-         * Add specified socket and associated pool to the poller. The socket will
-         * be added to a temporary array, and polled first after a maximum amount
-         * of time equal to pollTime (in most cases, latency will be much lower,
-         * however).
-         *
-         * @param socket to add to the poller
-         */
         public void send(String user, String message) {
             synchronized (messages) {
                 messages.add("[" + user + "]: " + message);

==================================================
SetCharacterEncodingFilter.java
index eb5a52895d..c26e7dd577 100644
--- a/webapps/examples/WEB-INF/classes/filters/ExampleFilter.java
+++ b/webapps/examples/WEB-INF/classes/filters/ExampleFilter.java
@@ -82,7 +82,7 @@ public final class ExampleFilter implements Filter {
      * current filter stack, including the ultimately invoked servlet.
      *
      * @param request The servlet request we are processing
-     * @param result The servlet response we are creating
+     * @param response The servlet response we are creating
      * @param chain The filter chain we are processing
      *
      * @exception IOException if an input/output error occurs

==================================================
