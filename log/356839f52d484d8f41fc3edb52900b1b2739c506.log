356839f52d484d8f41fc3edb52900b1b2739c506
==================================================
Refactor to avoid use of Hashtable where possible. No functional change.
==================================================
Mark Thomas
==================================================
Thu Sep 15 17:25:35 2022 +0100
==================================================
IntrospectionUtils.java
Refactor to avoid use of Hashtable where possible. No functional change.


==================================================
IntrospectionUtils.java
index ff13d115a1..c5da1b5f45 100644
--- a/java/org/apache/tomcat/util/IntrospectionUtils.java
+++ b/java/org/apache/tomcat/util/IntrospectionUtils.java
@@ -21,6 +21,8 @@ import java.lang.reflect.Method;
 import java.net.InetAddress;
 import java.net.UnknownHostException;
 import java.util.Hashtable;
+import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
 
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
@@ -407,7 +409,7 @@ public final class IntrospectionUtils {
         objectMethods.clear();
     }
 
-    private static final Hashtable<Class<?>,Method[]> objectMethods = new Hashtable<>();
+    private static final Map<Class<?>,Method[]> objectMethods = new ConcurrentHashMap<>();
 
     public static Method[] findMethods(Class<?> c) {
         Method methods[] = objectMethods.get(c);

==================================================
