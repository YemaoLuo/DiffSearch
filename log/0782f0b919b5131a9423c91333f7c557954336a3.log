0782f0b919b5131a9423c91333f7c557954336a3
==================================================
Refactcor custom URL handler to use ServiceLoader
==================================================
Mark Thomas
==================================================
Mon Jan 23 14:56:29 2023 +0000
==================================================
WebappClassLoaderBase.java
index b640f3a0a7..94e0fc7bdd 100644
--- a/build.xml
+++ b/build.xml
@@ -1153,6 +1153,7 @@
     <jarIt jarfile="${catalina.jar}"
       filesDir="${tomcat.classes}"
       filesId="files.catalina"
+      meta-inf="${tomcat.manifests}/catalina.jar"
       addOSGi="true" />
 
     <!-- Catalina Cluster/HA JAR File -->
@@ -1679,6 +1680,7 @@
     <jarIt jarfile="${tomcat-embed-core.jar}"
            filesDir="${tomcat.classes}"
            filesId="files.tomcat-embed-core"
+           manifest="${tomcat.manifests}/tomcat-embed-core.jar"
            notice="${tomcat.manifests}/servlet-api.jar.notice"
            license="${tomcat.manifests}/servlet-api.jar.license"
            addOSGi="true"

==================================================
StandardRoot.java
index 240a0782c2..1111d8edd4 100644
--- a/java/org/apache/catalina/loader/WebappClassLoaderBase.java
+++ b/java/org/apache/catalina/loader/WebappClassLoaderBase.java
@@ -61,7 +61,6 @@ import org.apache.catalina.LifecycleListener;
 import org.apache.catalina.LifecycleState;
 import org.apache.catalina.WebResource;
 import org.apache.catalina.WebResourceRoot;
-import org.apache.catalina.webresources.TomcatURLStreamHandlerFactory;
 import org.apache.juli.WebappProperties;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
@@ -1493,6 +1492,7 @@ public abstract class WebappClassLoaderBase extends URLClassLoader
     /**
      * Clear references.
      */
+    @SuppressWarnings("deprecation")
     protected void clearReferences() {
 
         // If the JVM is shutting down, skip the memory leak checks
@@ -1545,7 +1545,7 @@ public abstract class WebappClassLoaderBase extends URLClassLoader
         java.beans.Introspector.flushCaches();
 
         // Clear any custom URLStreamHandlers
-        TomcatURLStreamHandlerFactory.release(this);
+        org.apache.catalina.webresources.TomcatURLStreamHandlerFactory.release(this);
     }
 
 

==================================================
TomcatURLStreamHandlerFactory.java
index 69efa79b73..8e8dac4be2 100644
--- a/java/org/apache/catalina/webresources/StandardRoot.java
+++ b/java/org/apache/catalina/webresources/StandardRoot.java
@@ -45,7 +45,6 @@ import org.apache.catalina.util.LifecycleMBeanBase;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.buf.UriUtil;
-import org.apache.tomcat.util.compat.JreCompat;
 import org.apache.tomcat.util.http.RequestUtil;
 import org.apache.tomcat.util.res.StringManager;
 
@@ -719,12 +718,12 @@ public class StandardRoot extends LifecycleMBeanBase implements WebResourceRoot
         }
     }
 
+    /**
+     * @deprecated Unused. Will be removed in Tomcat 11 onwards.
+     */
+    @Deprecated
     protected void registerURLStreamHandlerFactory() {
-        if (!JreCompat.isGraalAvailable()) {
-            // Ensure support for jar:war:file:/ URLs will be available (required
-            // for resource JARs in packed WAR files).
-            TomcatURLStreamHandlerFactory.register();
-        }
+        // NO-OP
     }
 
     @Override

==================================================
TomcatURLStreamHandlerProvider.java
index d58f9d3fef..408ad8dce7 100644
--- a/java/org/apache/catalina/webresources/TomcatURLStreamHandlerFactory.java
+++ b/java/org/apache/catalina/webresources/TomcatURLStreamHandlerFactory.java
@@ -22,13 +22,12 @@ import java.net.URLStreamHandlerFactory;
 import java.util.List;
 import java.util.concurrent.CopyOnWriteArrayList;
 
-import org.apache.catalina.webresources.war.Handler;
-
+/**
+ * @deprecated Unused. Use the ServiceLoader mechanism to define additional
+ *             handlers. Will be removed in Tomcat 11 onwards.
+ */
 public class TomcatURLStreamHandlerFactory implements URLStreamHandlerFactory {
 
-    private static final String WAR_PROTOCOL = "war";
-    private static final String CLASSPATH_PROTOCOL = "classpath";
-
     // Singleton instance
     private static volatile TomcatURLStreamHandlerFactory instance = null;
 
@@ -153,13 +152,6 @@ public class TomcatURLStreamHandlerFactory implements URLStreamHandlerFactory {
     @Override
     public URLStreamHandler createURLStreamHandler(String protocol) {
 
-        // Tomcat's handler always takes priority so applications can't override
-        // it.
-        if (WAR_PROTOCOL.equals(protocol)) {
-            return new Handler();
-        } else if (CLASSPATH_PROTOCOL.equals(protocol)) {
-            return new ClasspathURLStreamHandler();
-        }
 
         // Application handlers
         for (URLStreamHandlerFactory factory : userFactories) {

==================================================
TestClasspathUrlStreamHandler.java
new file mode 100644
index 0000000000..e0b27f914f
--- /dev/null
+++ b/test/META-INF/services/java.net.spi.URLStreamHandlerProvider
@@ -0,0 +1,17 @@
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# Handler required when running tests
+org.apache.catalina.webresources.TomcatURLStreamHandlerProvider
\ No newline at end of file

==================================================
TestJarWarResourceSet.java
index f1bb097b37..9df2b90fa3 100644
--- a/test/org/apache/catalina/webresources/TestClasspathUrlStreamHandler.java
+++ b/test/org/apache/catalina/webresources/TestClasspathUrlStreamHandler.java
@@ -22,16 +22,10 @@ import java.net.URL;
 import java.util.Properties;
 
 import org.junit.Assert;
-import org.junit.BeforeClass;
 import org.junit.Test;
 
 public class TestClasspathUrlStreamHandler {
 
-    @BeforeClass
-    public static void setup() {
-        TomcatURLStreamHandlerFactory.getInstance();
-    }
-
     @Test
     public void testClasspathURL01() throws IOException {
         URL u = new URL("classpath:/org/apache/catalina/webresources/LocalStrings.properties");

==================================================
TestTomcatURLStreamHandlerFactory.java
index be5d98f87a..ed5b29fd2f 100644
--- a/test/org/apache/catalina/webresources/TestJarWarResourceSet.java
+++ b/test/org/apache/catalina/webresources/TestJarWarResourceSet.java
@@ -19,7 +19,6 @@ package org.apache.catalina.webresources;
 import java.io.File;
 
 import org.junit.Assert;
-import org.junit.Before;
 import org.junit.Test;
 
 import org.apache.catalina.Context;
@@ -30,12 +29,6 @@ import org.apache.catalina.startup.TomcatBaseTest;
 
 public class TestJarWarResourceSet extends TomcatBaseTest {
 
-    @Before
-    public void register() {
-        TomcatURLStreamHandlerFactory.register();
-    }
-
-
     @Test
     public void testJarWarMetaInf() throws LifecycleException  {
         Tomcat tomcat = getTomcatInstance();

==================================================
TestHandler.java
index b999c8be71..ac5b6342ff 100644
--- a/test/org/apache/catalina/webresources/TestTomcatURLStreamHandlerFactory.java
+++ b/test/org/apache/catalina/webresources/TestTomcatURLStreamHandlerFactory.java
@@ -19,16 +19,14 @@ package org.apache.catalina.webresources;
 import java.net.URLStreamHandler;
 import java.net.URLStreamHandlerFactory;
 
-import org.junit.Before;
 import org.junit.Test;
 
+/**
+ * @deprecated Code under test is deprecated and will be removed in Tomcat 11
+ */
+@Deprecated
 public class TestTomcatURLStreamHandlerFactory {
 
-    @Before
-    public void register() {
-        TomcatURLStreamHandlerFactory.register();
-    }
-
     @Test
     public void testUserFactory() throws Exception {
         URLStreamHandlerFactory factory = new URLStreamHandlerFactory() {

==================================================
TestWarURLConnection.java
index c4b72bee15..0e3ac88a48 100644
--- a/test/org/apache/catalina/webresources/war/TestHandler.java
+++ b/test/org/apache/catalina/webresources/war/TestHandler.java
@@ -21,19 +21,10 @@ import java.net.URL;
 import java.net.URLConnection;
 
 import org.junit.Assert;
-import org.junit.Before;
 import org.junit.Test;
 
-import org.apache.catalina.webresources.TomcatURLStreamHandlerFactory;
-
 public class TestHandler {
 
-    @Before
-    public void register() {
-        TomcatURLStreamHandlerFactory.register();
-    }
-
-
     @Test
     public void testUrlFileInJarInWar() throws Exception {
         doTestUrl("jar:war:", "*/WEB-INF/lib/test.jar!/META-INF/resources/index.html");

==================================================
TesterUriUtilBase.java
index f005115824..1d82530ce9 100644
--- a/test/org/apache/catalina/webresources/war/TestWarURLConnection.java
+++ b/test/org/apache/catalina/webresources/war/TestWarURLConnection.java
@@ -21,19 +21,10 @@ import java.net.URL;
 import java.net.URLConnection;
 
 import org.junit.Assert;
-import org.junit.Before;
 import org.junit.Test;
 
-import org.apache.catalina.webresources.TomcatURLStreamHandlerFactory;
-
 public class TestWarURLConnection {
 
-    @Before
-    public void register() {
-        TomcatURLStreamHandlerFactory.register();
-    }
-
-
     @Test
     public void testContentLength() throws Exception {
         File f = new File("test/webresources/war-url-connection.war");

==================================================
TestConfigFileLoader.java
index 9980669aa2..bad8b2f685 100644
--- a/test/org/apache/tomcat/util/buf/TesterUriUtilBase.java
+++ b/test/org/apache/tomcat/util/buf/TesterUriUtilBase.java
@@ -23,15 +23,12 @@ import java.net.URL;
 import org.junit.Assert;
 import org.junit.Test;
 
-import org.apache.catalina.webresources.TomcatURLStreamHandlerFactory;
-
 public abstract class TesterUriUtilBase {
 
     private final String separator;
 
     protected TesterUriUtilBase(String separator) {
         this.separator = separator;
-        TomcatURLStreamHandlerFactory.register();
         System.setProperty("org.apache.tomcat.util.buf.UriUtil.WAR_SEPARATOR", separator);
     }
 

==================================================
TestAbstractInputStreamJar.java
index 5271e778da..d87c3de17f 100644
--- a/test/org/apache/tomcat/util/file/TestConfigFileLoader.java
+++ b/test/org/apache/tomcat/util/file/TestConfigFileLoader.java
@@ -27,13 +27,11 @@ import org.junit.BeforeClass;
 import org.junit.Test;
 
 import org.apache.catalina.startup.CatalinaBaseConfigurationSource;
-import org.apache.catalina.webresources.TomcatURLStreamHandlerFactory;
 
 public class TestConfigFileLoader {
 
     @BeforeClass
     public static void setup() {
-        TomcatURLStreamHandlerFactory.getInstance();
         System.setProperty("catalina.base", "");
         ConfigFileLoader.setSource(new CatalinaBaseConfigurationSource(new File(System.getProperty("catalina.base")), null));
     }

==================================================
