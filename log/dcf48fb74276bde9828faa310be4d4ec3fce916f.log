dcf48fb74276bde9828faa310be4d4ec3fce916f
==================================================
Refactor and use i18n for exception messages
==================================================
Mark Thomas
==================================================
Fri Sep 9 08:56:40 2022 +0100
==================================================
Authenticator.java
Refactor and use i18n for exception messages


==================================================
BasicAuthenticator.java
index 4ff78281d1..30787205cb 100644
--- a/java/org/apache/tomcat/websocket/Authenticator.java
+++ b/java/org/apache/tomcat/websocket/Authenticator.java
@@ -21,11 +21,15 @@ import java.util.Map;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
+import org.apache.tomcat.util.res.StringManager;
+
 /**
  * Base class for the authentication methods used by the WebSocket client.
  */
 public abstract class Authenticator {
 
+    private static final StringManager sm = StringManager.getManager(Authenticator.class);
+
     private static final Pattern pattern = Pattern.compile("(\\w+)\\s*=\\s*(\"([^\"]+)\"|([^,=\"]+))\\s*,?");
 
 
@@ -91,4 +95,18 @@ public abstract class Authenticator {
 
         return parameterMap;
     }
+
+
+    protected void validateUsername(String userName) throws AuthenticationException {
+        if (userName == null) {
+            throw new AuthenticationException(sm.getString("authenticator.nullUserName"));
+        }
+    }
+
+
+    protected void validatePassword(String password) throws AuthenticationException {
+        if (password == null) {
+            throw new AuthenticationException(sm.getString("authenticator.nullPassword"));
+        }
+    }
 }

==================================================
DigestAuthenticator.java
index 68dcccdd5f..63b0a3d0e5 100644
--- a/java/org/apache/tomcat/websocket/BasicAuthenticator.java
+++ b/java/org/apache/tomcat/websocket/BasicAuthenticator.java
@@ -36,10 +36,8 @@ public class BasicAuthenticator extends Authenticator {
         String userName = (String) userProperties.get(Constants.WS_AUTHENTICATION_USER_NAME);
         String userPassword = (String) userProperties.get(Constants.WS_AUTHENTICATION_PASSWORD);
 
-        if (userName == null || userPassword == null) {
-            throw new AuthenticationException(
-                    "Failed to perform Basic authentication due to  missing user/password");
-        }
+        validateUsername(userName);
+        validatePassword(userPassword);
 
         Map<String, String> parameterMap = parseAuthenticateHeader(authenticateHeader);
 

==================================================
