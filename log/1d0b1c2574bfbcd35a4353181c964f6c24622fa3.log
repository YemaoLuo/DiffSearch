1d0b1c2574bfbcd35a4353181c964f6c24622fa3
==================================================
Pull up commit()
==================================================
Mark Thomas
==================================================
Thu Jan 1 17:14:25 2015 +0000
==================================================
AbstractOutputBuffer.java
Pull up commit()

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1648904 13f79535-47bb-0310-9956-ffa450edef68



==================================================
InternalAprOutputBuffer.java
index 2bab7b8b7f..8e85bcae24 100644
--- a/java/org/apache/coyote/http11/AbstractOutputBuffer.java
+++ b/java/org/apache/coyote/http11/AbstractOutputBuffer.java
@@ -373,7 +373,21 @@ public abstract class AbstractOutputBuffer<S> implements OutputBuffer {
 
     public abstract void sendAck() throws IOException;
 
-    protected abstract void commit() throws IOException;
+    /**
+     * Commit the response.
+     *
+     * @throws IOException an underlying I/O error occurred
+     */
+    protected void commit() throws IOException {
+        // The response is now committed
+        committed = true;
+        response.setCommitted(true);
+
+        if (pos > 0) {
+            // Sending the response header buffer
+            addToBB(headerBuffer, 0, pos);
+        }
+    }
 
 
     /**

==================================================
InternalNio2OutputBuffer.java
index 10ea57211f..fb10583776 100644
--- a/java/org/apache/coyote/http11/InternalAprOutputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalAprOutputBuffer.java
@@ -113,27 +113,6 @@ public class InternalAprOutputBuffer extends AbstractOutputBuffer<Long> {
 
     // ------------------------------------------------------ Protected Methods
 
-
-    /**
-     * Commit the response.
-     *
-     * @throws IOException an underlying I/O error occurred
-     */
-    @Override
-    protected void commit() throws IOException {
-
-        // The response is now committed
-        committed = true;
-        response.setCommitted(true);
-
-        if (pos > 0) {
-            // Sending the response header buffer
-            socketWriteBuffer.put(headerBuffer, 0, pos);
-        }
-
-    }
-
-
     @Override
     protected synchronized void addToBB(byte[] buf, int offset, int length)
             throws IOException {

==================================================
InternalNioOutputBuffer.java
index 121d0a056e..6859561025 100644
--- a/java/org/apache/coyote/http11/InternalNio2OutputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalNio2OutputBuffer.java
@@ -248,25 +248,6 @@ public class InternalNio2OutputBuffer extends AbstractOutputBuffer<Nio2Channel>
 
     // ------------------------------------------------------ Protected Methods
 
-    /**
-     * Commit the response.
-     *
-     * @throws IOException an underlying I/O error occurred
-     */
-    @Override
-    protected void commit() throws IOException {
-
-        // The response is now committed
-        committed = true;
-        response.setCommitted(true);
-
-        if (pos > 0) {
-            // Sending the response header buffer
-            addToBB(headerBuffer, 0, pos);
-        }
-
-    }
-
     private static boolean arrayHasData(ByteBuffer[] byteBuffers) {
         for (ByteBuffer byteBuffer : byteBuffers) {
             if (byteBuffer.hasRemaining()) {
@@ -451,7 +432,7 @@ public class InternalNio2OutputBuffer extends AbstractOutputBuffer<Nio2Channel>
     }
 
     @Override
-    public void registerWriteInterest() {
+    protected void registerWriteInterest() {
         synchronized (completionHandler) {
             if (writePending.availablePermits() == 0) {
                 interest = true;

==================================================
