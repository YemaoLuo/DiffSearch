cf0c064a9bb9698471491bfd00ff94bbf02a26b0
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=54748
==================================================
Mark Emlyn
==================================================
Mon Mar 25 21:54:33 2013 +0000
==================================================
WsFrameBase.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=54748
Don't generate an error during a normal close that there is more data to read when there isn't.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1460911 13f79535-47bb-0310-9956-ffa450edef68



==================================================
WsFrameClient.java
index 0a371075ad..f488d58458 100644
--- a/java/org/apache/tomcat/websocket/WsFrameBase.java
+++ b/java/org/apache/tomcat/websocket/WsFrameBase.java
@@ -74,7 +74,7 @@ public abstract class WsFrameBase {
 
     // Attributes tracking state
     private State state = State.NEW_FRAME;
-    private boolean closed = false;
+    private volatile boolean open = true;
     private int readPos = 0;
     protected int writePos = 0;
 
@@ -94,12 +94,14 @@ public abstract class WsFrameBase {
             wsSession.updateLastActive();
 
             if (state == State.NEW_FRAME) {
-                if (closed) {
-                    throw new IOException(sm.getString("wsFrame.closed"));
-                }
                 if (!processInitialHeader()) {
                     break;
                 }
+                // If a close frame has been received, no further data should
+                // have seen
+                if (!open) {
+                    throw new IOException(sm.getString("wsFrame.closed"));
+                }
             }
             if (state == State.PARTIAL_HEADER) {
                 if (!processRemainingHeader()) {
@@ -265,7 +267,7 @@ public abstract class WsFrameBase {
         }
         controlBufferBinary.flip();
         if (opCode == Constants.OPCODE_CLOSE) {
-            closed = true;
+            open = false;
             String reason = null;
             int code = CloseCodes.NORMAL_CLOSURE.getCode();
             if (controlBufferBinary.remaining() == 1) {
@@ -613,6 +615,11 @@ public abstract class WsFrameBase {
     }
 
 
+    protected boolean isOpen() {
+        return open;
+    }
+
+
     private static enum State {
         NEW_FRAME, PARTIAL_HEADER, DATA
     }

==================================================
WsFrameServer.java
index ce61a39f0a..0ee00bef4d 100644
--- a/java/org/apache/tomcat/websocket/WsFrameClient.java
+++ b/java/org/apache/tomcat/websocket/WsFrameClient.java
@@ -63,7 +63,9 @@ public class WsFrameClient extends WsFrameBase {
         response.clear();
 
         // Get some more data
-        channel.read(response, null, handler);
+        if (isOpen()) {
+            channel.read(response, null, handler);
+        }
     }
 
 

==================================================
