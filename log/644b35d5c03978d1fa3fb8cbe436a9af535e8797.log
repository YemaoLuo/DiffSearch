644b35d5c03978d1fa3fb8cbe436a9af535e8797
==================================================
Correctly decode URL paths. '+' should not be decoded to ' ' in the path
==================================================
Mark Thomas
==================================================
Thu Aug 2 13:52:55 2018 +0000
==================================================
ApplicationContext.java
Correctly decode URL paths. '+' should not be decoded to ' ' in the path

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1837300 13f79535-47bb-0310-9956-ffa450edef68



==================================================
WebappLoader.java
index 782e1816cc..bdd8d6552e 100644
--- a/java/org/apache/catalina/core/ApplicationContext.java
+++ b/java/org/apache/catalina/core/ApplicationContext.java
@@ -17,11 +17,9 @@
 package org.apache.catalina.core;
 
 import java.io.InputStream;
-import java.io.UnsupportedEncodingException;
 import java.lang.reflect.InvocationTargetException;
 import java.net.MalformedURLException;
 import java.net.URL;
-import java.net.URLDecoder;
 import java.nio.charset.StandardCharsets;
 import java.util.ArrayList;
 import java.util.Collections;
@@ -75,6 +73,7 @@ import org.apache.catalina.util.URLEncoder;
 import org.apache.tomcat.util.ExceptionUtils;
 import org.apache.tomcat.util.buf.CharChunk;
 import org.apache.tomcat.util.buf.MessageBytes;
+import org.apache.tomcat.util.buf.UDecoder;
 import org.apache.tomcat.util.descriptor.web.FilterDef;
 import org.apache.tomcat.util.http.RequestUtil;
 import org.apache.tomcat.util.res.StringManager;
@@ -425,13 +424,7 @@ public class ApplicationContext implements ServletContext {
 
         if (getContext().getDispatchersUseEncodedPaths()) {
             // Decode
-            String decodedPath;
-            try {
-                decodedPath = URLDecoder.decode(normalizedPath, "UTF-8");
-            } catch (UnsupportedEncodingException e) {
-                // Impossible
-                return null;
-            }
+            String decodedPath = UDecoder.URLDecode(normalizedPath);
 
             // Security check to catch attempts to encode /../ sequences
             normalizedPath = RequestUtil.normalize(decodedPath);

==================================================
JspRuntimeContext.java
index ad9bccd3e2..a6abeee457 100644
--- a/java/org/apache/catalina/loader/WebappLoader.java
+++ b/java/org/apache/catalina/loader/WebappLoader.java
@@ -22,11 +22,9 @@ import java.beans.PropertyChangeSupport;
 import java.io.File;
 import java.io.FilePermission;
 import java.io.IOException;
-import java.io.UnsupportedEncodingException;
 import java.lang.reflect.Constructor;
 import java.net.URL;
 import java.net.URLClassLoader;
-import java.net.URLDecoder;
 
 import javax.management.ObjectName;
 import javax.servlet.ServletContext;
@@ -41,6 +39,7 @@ import org.apache.catalina.util.ToStringUtil;
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.ExceptionUtils;
+import org.apache.tomcat.util.buf.UDecoder;
 import org.apache.tomcat.util.modeler.Registry;
 import org.apache.tomcat.util.res.StringManager;
 
@@ -602,9 +601,9 @@ public class WebappLoader extends LifecycleMBeanBase
                 for (int i = 0; i < repositories.length; i++) {
                     String repository = repositories[i].toString();
                     if (repository.startsWith("file://"))
-                        repository = utf8Decode(repository.substring(7));
+                        repository = UDecoder.URLDecode(repository.substring(7));
                     else if (repository.startsWith("file:"))
-                        repository = utf8Decode(repository.substring(5));
+                        repository = UDecoder.URLDecode(repository.substring(5));
                     else
                         continue;
                     if (repository == null)
@@ -631,16 +630,6 @@ public class WebappLoader extends LifecycleMBeanBase
         return true;
     }
 
-    private String utf8Decode(String input) {
-        String result = null;
-        try {
-            result = URLDecoder.decode(input, "UTF-8");
-        } catch (UnsupportedEncodingException uee) {
-            // Impossible. All JVMs are required to support UTF-8.
-        }
-        return result;
-    }
-
 
     private static final Log log = LogFactory.getLog(WebappLoader.class);
 

==================================================
TestApplicationContextGetRequestDispatcher.java
index 297a1f6e0b..334d495923 100644
--- a/java/org/apache/jasper/resources/LocalStrings.properties
+++ b/java/org/apache/jasper/resources/LocalStrings.properties
@@ -107,6 +107,7 @@ jsp.error.javac=Javac exception
 jsp.error.javac.env=Environment:
 jsp.error.compilation=Error compiling file: [{0}] [{1}]
 jsp.error.undeclared_namespace=A custom tag was encountered with an undeclared namespace [{0}]
+jsp.warning.classpathUrl=Invalid URL found in class path. This URL will be ignored
 jsp.warning.keepgen=Warning: Invalid value for the initParam keepgenerated. Will use the default value of "false"
 jsp.warning.xpoweredBy=Warning: Invalid value for the initParam xpoweredBy. Will use the default value of "false"
 jsp.warning.enablePooling=Warning: Invalid value for the initParam enablePooling. Will use the default value of "true"

==================================================
