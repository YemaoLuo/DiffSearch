915b1453ebc76494bfdbc42f797d1890d43b2bdb
==================================================
In the RewriteValve write empty capture groups as the empty string rather "null" when generating the re-written URL.
==================================================
Mark Thomas
==================================================
Mon Nov 28 14:05:11 2016 +0000
==================================================
Substitution.java
In the RewriteValve write empty capture groups as the empty string rather "null" when generating the re-written URL.
Based on a patch by Michael Osipov.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1771743 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestRewriteValve.java
index d1b16dee05..a387430517 100644
--- a/java/org/apache/catalina/valves/rewrite/Substitution.java
+++ b/java/org/apache/catalina/valves/rewrite/Substitution.java
@@ -40,14 +40,18 @@ public class Substitution {
         public int n;
         @Override
         public String evaluate(Matcher rule, Matcher cond, Resolver resolver) {
+            String result = rule.group(n);
+            if (result == null) {
+                result = "";
+            }
             if (escapeBackReferences) {
                 // Note: This should be consistent with the way httpd behaves.
                 //       We might want to consider providing a dedicated decoder
                 //       with an option to add additional safe characters to
                 //       provide users with more flexibility
-                return RewriteValve.ENCODER.encode(rule.group(n), resolver.getUriEncoding());
+                return RewriteValve.ENCODER.encode(result, resolver.getUriEncoding());
             } else {
-                return rule.group(n);
+                return result;
             }
         }
     }
@@ -56,7 +60,7 @@ public class Substitution {
         public int n;
         @Override
         public String evaluate(Matcher rule, Matcher cond, Resolver resolver) {
-            return cond.group(n);
+            return (cond.group(n) == null ? "" : cond.group(n));
         }
     }
 
@@ -95,7 +99,7 @@ public class Substitution {
     public class MapElement extends SubstitutionElement {
         public RewriteMap map = null;
         public String key;
-        public String defaultValue = null;
+        public String defaultValue = "";
         public int n;
         @Override
         public String evaluate(Matcher rule, Matcher cond, Resolver resolver) {

==================================================
