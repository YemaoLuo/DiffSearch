d897693e497bf36a50da5299cd49984803b920d4
==================================================
Removing info part 2
==================================================
Mark Emlyn
==================================================
Sat Oct 22 19:28:31 2011 +0000
==================================================
Cluster.java
Removing info part 2

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1187757 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Realm.java
index 6639927372..f89fa8ed7c 100644
--- a/java/org/apache/catalina/Cluster.java
+++ b/java/org/apache/catalina/Cluster.java
@@ -36,13 +36,6 @@ public interface Cluster {
 
     // ------------------------------------------------------------- Properties
 
-    /**
-     * Return descriptive information about this Cluster implementation and
-     * the corresponding version number, in the format
-     * <code>&lt;description&gt;/&lt;version&gt;</code>.
-     */
-    public String getInfo();
-
     /**
      * Return the name of the cluster that this Server is currently
      * configured to operate within.

==================================================
Session.java
index 2adf5f8d29..13ac47169e 100644
--- a/java/org/apache/catalina/Realm.java
+++ b/java/org/apache/catalina/Realm.java
@@ -58,16 +58,7 @@ public interface Realm {
     public void setContainer(Container container);
 
 
-    /**
-     * Return descriptive information about this Realm implementation and
-     * the corresponding version number, in the format
-     * <code>&lt;description&gt;/&lt;version&gt;</code>.
-     */
-    public String getInfo();
-
-
     // --------------------------------------------------------- Public Methods
-
     
     /**
      * Add a property change listener to this component.

==================================================
Store.java
index 6ab40c0104..94d3ab57b7 100644
--- a/java/org/apache/catalina/Session.java
+++ b/java/org/apache/catalina/Session.java
@@ -137,14 +137,6 @@ public interface Session {
     public void setId(String id, boolean notify);
 
 
-    /**
-     * Return descriptive information about this Session implementation and
-     * the corresponding version number, in the format
-     * <code>&lt;description&gt;/&lt;version&gt;</code>.
-     */
-    public String getInfo();
-
-
     /**
      * Return the last time the client sent a request associated with this
      * session, as the number of milliseconds since midnight, January 1, 1970

==================================================
Connector.java
index a2938c9a8e..94d22877ae 100644
--- a/java/org/apache/catalina/Store.java
+++ b/java/org/apache/catalina/Store.java
@@ -36,18 +36,8 @@ import java.io.IOException;
 
 public interface Store {
 
-
     // ------------------------------------------------------------- Properties
 
-
-    /**
-     * Return descriptive information about this Store implementation and
-     * the corresponding version number, in the format
-     * <code>&lt;description&gt;/&lt;version&gt;</code>.
-     */
-    public String getInfo();
-
-
     /**
      * Return the Manager instance associated with this Store.
      */

==================================================
Request.java
index 67902a9952..7227a35265 100644
--- a/java/org/apache/catalina/connector/Connector.java
+++ b/java/org/apache/catalina/connector/Connector.java
@@ -111,13 +111,6 @@ public class Connector extends LifecycleMBeanBase  {
     protected boolean xpoweredBy = false;
 
 
-    /**
-     * Descriptive information about this Connector implementation.
-     */
-    protected static final String info =
-        "org.apache.catalina.connector.Connector/2.1";
-
-
     /**
      * The port number on which we listen for requests.
      */
@@ -388,16 +381,6 @@ public class Connector extends LifecycleMBeanBase  {
     }
 
 
-    /**
-     * Return descriptive information about this Connector implementation.
-     */
-    public String getInfo() {
-
-        return (info);
-
-    }
-
-
      /**
       * Return the mapper.
       */

==================================================
Response.java
index 5714b0e3a2..4e381682e8 100644
--- a/java/org/apache/catalina/connector/Request.java
+++ b/java/org/apache/catalina/connector/Request.java
@@ -644,22 +644,6 @@ public class Request
     }
 
 
-    /**
-     * Descriptive information about this Request implementation.
-     */
-    protected static final String info =
-        "org.apache.coyote.catalina.CoyoteRequest/1.0";
-
-    /**
-     * Return descriptive information about this Request implementation and
-     * the corresponding version number, in the format
-     * <code>&lt;description&gt;/&lt;version&gt;</code>.
-     */
-    public String getInfo() {
-        return info;
-    }
-
-
     /**
      * Mapping data.
      */

==================================================
ApplicationHttpRequest.java
index f8bb4a8fde..e75a5f569b 100644
--- a/java/org/apache/catalina/connector/Response.java
+++ b/java/org/apache/catalina/connector/Response.java
@@ -94,14 +94,6 @@ public class Response
 
     // ----------------------------------------------------- Class Variables
 
-
-    /**
-     * Descriptive information about this Response implementation.
-     */
-    protected static final String info =
-        "org.apache.coyote.catalina.CoyoteResponse/1.0";
-
-
     /**
      * The string manager for this package.
      */
@@ -370,16 +362,6 @@ public class Response
     }
 
 
-    /**
-     * Return descriptive information about this Response implementation and
-     * the corresponding version number, in the format
-     * <code>&lt;description&gt;/&lt;version&gt;</code>.
-     */
-    public String getInfo() {
-        return (info);
-    }
-
-
     /**
      * The request with which this response is associated.
      */

==================================================
ApplicationHttpResponse.java
index df2c973733..c67ee43a5c 100644
--- a/java/org/apache/catalina/core/ApplicationHttpRequest.java
+++ b/java/org/apache/catalina/core/ApplicationHttpRequest.java
@@ -127,13 +127,6 @@ class ApplicationHttpRequest extends HttpServletRequestWrapper {
     protected DispatcherType dispatcherType = null;
 
 
-    /**
-     * Descriptive information about this implementation.
-     */
-    protected static final String info =
-        "org.apache.catalina.core.ApplicationHttpRequest/1.0";
-
-
     /**
      * The request parameters for this request.  This is initialized from the
      * wrapped request, but updates are allowed.
@@ -626,16 +619,6 @@ class ApplicationHttpRequest extends HttpServletRequestWrapper {
     }
 
 
-    /**
-     * Return descriptive information about this implementation.
-     */
-    public String getInfo() {
-
-        return (info);
-
-    }
-
-
     /**
      * Perform a shallow copy of the specified Map, and return the result.
      *

==================================================
StandardPipeline.java
index 44826dc0dc..e9075fa6eb 100644
--- a/java/org/apache/catalina/core/ApplicationHttpResponse.java
+++ b/java/org/apache/catalina/core/ApplicationHttpResponse.java
@@ -84,16 +84,8 @@ class ApplicationHttpResponse extends HttpServletResponseWrapper {
     protected boolean included = false;
 
 
-    /**
-     * Descriptive information about this implementation.
-     */
-    protected static final String info =
-        "org.apache.catalina.core.ApplicationHttpResponse/1.0";
-
-
     // ------------------------------------------------ ServletResponse Methods
 
-
     /**
      * Disallow <code>reset()</code> calls on a included response.
      *
@@ -356,17 +348,6 @@ class ApplicationHttpResponse extends HttpServletResponseWrapper {
 
     // -------------------------------------------------------- Package Methods
 
-
-    /**
-     * Return descriptive information about this implementation.
-     */
-    public String getInfo() {
-
-        return (info);
-
-    }
-
-
     /**
      * Return the included flag for this response.
      */

==================================================
StandardWrapper.java
index db1a8b92ee..72132e2d4a 100644
--- a/java/org/apache/catalina/core/StandardPipeline.java
+++ b/java/org/apache/catalina/core/StandardPipeline.java
@@ -97,28 +97,13 @@ public class StandardPipeline extends LifecycleBase
     protected Container container = null;
 
 
-    /**
-     * Descriptive information about this implementation.
-     */
-    protected static final String info = "org.apache.catalina.core.StandardPipeline/1.0";
-
-
     /**
      * The first valve associated with this Pipeline.
      */
     protected Valve first = null;
+
     
     // --------------------------------------------------------- Public Methods
-
-
-    /**
-     * Return descriptive information about this implementation class.
-     */
-    public String getInfo() {
-
-        return info;
-
-    }
     
     @Override
     public boolean isAsyncSupported() {

==================================================
CatalinaCluster.java
index e5023cfed2..ec3cf6dbd3 100644
--- a/java/org/apache/catalina/core/StandardWrapper.java
+++ b/java/org/apache/catalina/core/StandardWrapper.java
@@ -133,13 +133,6 @@ public class StandardWrapper extends ContainerBase
         new StandardWrapperFacade(this);
 
 
-    /**
-     * The descriptive information string for this implementation.
-     */
-    protected static final String info =
-        "org.apache.catalina.core.StandardWrapper/1.0";
-
-
     /**
      * The (single) possibly uninitialized instance of this servlet.
      */
@@ -357,19 +350,6 @@ public class StandardWrapper extends ContainerBase
     }
 
 
-    /**
-     * Return descriptive information about this Container implementation and
-     * the corresponding version number, in the format
-     * <code>&lt;description&gt;/&lt;version&gt;</code>.
-     */
-    @Override
-    public String getInfo() {
-
-        return (info);
-
-    }
-
-
     /**
      * Return the InstanceSupport object for this Wrapper instance.
      */

==================================================
ClusterSingleSignOnListener.java
index e3cb88e47b..12fbb541ae 100644
--- a/java/org/apache/catalina/ha/CatalinaCluster.java
+++ b/java/org/apache/catalina/ha/CatalinaCluster.java
@@ -40,11 +40,6 @@ import org.apache.juli.logging.Log;
 public interface CatalinaCluster extends Cluster {
     // ----------------------------------------------------- Instance Variables
 
-    /**
-     * Descriptive information about this component implementation.
-     */
-    public String info = "CatalinaCluster/2.0";
-    
     /**
      * Start the cluster, the owning container will invoke this
      * @throws Exception - if failure to start cluster

==================================================
ClusterSessionListener.java
index e14a38ed71..e8e281da8a 100644
--- a/java/org/apache/catalina/ha/authenticator/ClusterSingleSignOnListener.java
+++ b/java/org/apache/catalina/ha/authenticator/ClusterSingleSignOnListener.java
@@ -37,11 +37,6 @@ public class ClusterSingleSignOnListener extends ClusterListener {
     private static final Log log =
         LogFactory.getLog(ClusterSingleSignOnListener.class);
 
-    /**
-     * The descriptive information about this implementation.
-     */
-    protected static final String info = "org.apache.catalina.ha.authenticator.ClusterSingleSignOnListener/1.0";
-
     // ------------------------------------------------------------- Properties
 
     private ClusterSingleSignOn clusterSSO = null;
@@ -55,15 +50,6 @@ public class ClusterSingleSignOnListener extends ClusterListener {
 
     //--Logic---------------------------------------------------
 
-    /**
-     * Return descriptive information about this implementation.
-     */
-    public String getInfo() {
-
-        return (info);
-
-    }
-
     public ClusterSingleSignOn getClusterSSO() {
 
         return clusterSSO;

==================================================
JvmRouteSessionIDBinderListener.java
index 21ec4490af..13e9a89740 100644
--- a/java/org/apache/catalina/ha/session/ClusterSessionListener.java
+++ b/java/org/apache/catalina/ha/session/ClusterSessionListener.java
@@ -36,11 +36,6 @@ public class ClusterSessionListener extends ClusterListener {
     private static final Log log =
         LogFactory.getLog(ClusterSessionListener.class);
     
-    /**
-     * The descriptive information about this implementation.
-     */
-    protected static final String info = "org.apache.catalina.ha.session.ClusterSessionListener/1.1";
-
     //--Constructor---------------------------------------------
 
     public ClusterSessionListener() {
@@ -49,15 +44,6 @@ public class ClusterSessionListener extends ClusterListener {
 
     //--Logic---------------------------------------------------
 
-    /**
-     * Return descriptive information about this implementation.
-     */
-    public String getInfo() {
-
-        return (info);
-
-    }
-
     /**
      * Callback from the cluster, when a message is received, The cluster will
      * broadcast it invoking the messageReceived on the receiver.

==================================================
SimpleTcpCluster.java
index 0836a0868f..d08857e154 100644
--- a/java/org/apache/catalina/ha/session/JvmRouteSessionIDBinderListener.java
+++ b/java/org/apache/catalina/ha/session/JvmRouteSessionIDBinderListener.java
@@ -46,12 +46,6 @@ public class JvmRouteSessionIDBinderListener extends ClusterListener {
     private static final StringManager sm =
         StringManager.getManager(Constants.Package);
 
-    /**
-     * The descriptive information about this implementation.
-     */
-    protected static final String info =
-        "org.apache.catalina.ha.session.JvmRouteSessionIDBinderListener/1.1";
-
     //--Instance Variables--------------------------------------
 
 
@@ -70,15 +64,6 @@ public class JvmRouteSessionIDBinderListener extends ClusterListener {
 
     //--Logic---------------------------------------------------
 
-    /**
-     * Return descriptive information about this implementation.
-     */
-    public String getInfo() {
-
-        return (info);
-
-    }
-
     /**
      * @return Returns the numberOfSessions.
      */

==================================================
DummyProxySession.java
index f263f54b43..91ef55bcad 100644
--- a/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java
+++ b/java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java
@@ -80,11 +80,6 @@ public class SimpleTcpCluster extends LifecycleBase
 
     // ----------------------------------------------------- Instance Variables
 
-    /**
-     * Descriptive information about this component implementation.
-     */
-    protected static final String info = "SimpleTcpCluster/2.2";
-
     public static final String BEFORE_MEMBERREGISTER_EVENT = "before_member_register";
 
     public static final String AFTER_MEMBERREGISTER_EVENT = "after_member_register";
@@ -179,16 +174,6 @@ public class SimpleTcpCluster extends LifecycleBase
         // NO-OP
     }
 
-    /**
-     * Return descriptive information about this Cluster implementation and the
-     * corresponding version number, in the format
-     * <code>&lt;description&gt;/&lt;version&gt;</code>.
-     */
-    @Override
-    public String getInfo() {
-        return (info);
-    }
-
     /**
      * Return heartbeat enable flag (default false)
      * @return the heartbeatBackgroundEnabled

==================================================
CombinedRealm.java
index 5e66e68900..52e7f7782a 100644
--- a/java/org/apache/catalina/manager/DummyProxySession.java
+++ b/java/org/apache/catalina/manager/DummyProxySession.java
@@ -78,11 +78,6 @@ public class DummyProxySession implements Session {
         return sessionId;
     }
 
-    @Override
-    public String getInfo() {
-        return null;
-    }
-
     @Override
     public long getLastAccessedTime() {
         return 0;

==================================================
DataSourceRealm.java
index a94efe066e..2c06835585 100644
--- a/java/org/apache/catalina/realm/CombinedRealm.java
+++ b/java/org/apache/catalina/realm/CombinedRealm.java
@@ -63,7 +63,8 @@ public class CombinedRealm extends RealmBase {
         realms.add(theRealm);
         
         if (log.isDebugEnabled()) {
-            sm.getString("combinedRealm.addRealm", theRealm.getInfo(), 
+            sm.getString("combinedRealm.addRealm",
+                    theRealm.getClass().getName(), 
                     Integer.toString(realms.size()));
         }
     }
@@ -105,7 +106,8 @@ public class CombinedRealm extends RealmBase {
         
         for (Realm realm : realms) {
             if (log.isDebugEnabled()) {
-                log.debug(sm.getString("combinedRealm.authStart", username, realm.getInfo()));
+                log.debug(sm.getString("combinedRealm.authStart", username,
+                        realm.getClass().getName()));
             }
 
             authenticatedUser = realm.authenticate(username, clientDigest, nonce,
@@ -113,11 +115,13 @@ public class CombinedRealm extends RealmBase {
 
             if (authenticatedUser == null) {
                 if (log.isDebugEnabled()) {
-                    log.debug(sm.getString("combinedRealm.authFail", username, realm.getInfo()));
+                    log.debug(sm.getString("combinedRealm.authFail", username,
+                            realm.getClass().getName()));
                 }
             } else {
                 if (log.isDebugEnabled()) {
-                    log.debug(sm.getString("combinedRealm.authSuccess", username, realm.getInfo()));
+                    log.debug(sm.getString("combinedRealm.authSuccess",
+                            username, realm.getClass().getName()));
                 }
                 break;
             }
@@ -140,18 +144,21 @@ public class CombinedRealm extends RealmBase {
         
         for (Realm realm : realms) {
             if (log.isDebugEnabled()) {
-                log.debug(sm.getString("combinedRealm.authStart", username, realm.getInfo()));
+                log.debug(sm.getString("combinedRealm.authStart", username,
+                        realm.getClass().getName()));
             }
 
             authenticatedUser = realm.authenticate(username, credentials);
 
             if (authenticatedUser == null) {
                 if (log.isDebugEnabled()) {
-                    log.debug(sm.getString("combinedRealm.authFail", username, realm.getInfo()));
+                    log.debug(sm.getString("combinedRealm.authFail", username,
+                            realm.getClass().getName()));
                 }
             } else {
                 if (log.isDebugEnabled()) {
-                    log.debug(sm.getString("combinedRealm.authSuccess", username, realm.getInfo()));
+                    log.debug(sm.getString("combinedRealm.authSuccess",
+                            username, realm.getClass().getName()));
                 }
                 break;
             }
@@ -203,7 +210,7 @@ public class CombinedRealm extends RealmBase {
                     // If realm doesn't start can't authenticate against it
                     iter.remove();
                     log.error(sm.getString("combinedRealm.realmStartFail",
-                            realm.getInfo()), e);
+                            realm.getClass().getName()), e);
                 }
             }
         }
@@ -248,18 +255,21 @@ public class CombinedRealm extends RealmBase {
         
         for (Realm realm : realms) {
             if (log.isDebugEnabled()) {
-                log.debug(sm.getString("combinedRealm.authStart", username, realm.getInfo()));
+                log.debug(sm.getString("combinedRealm.authStart", username,
+                        realm.getClass().getName()));
             }
 
             authenticatedUser = realm.authenticate(certs);
 
             if (authenticatedUser == null) {
                 if (log.isDebugEnabled()) {
-                    log.debug(sm.getString("combinedRealm.authFail", username, realm.getInfo()));
+                    log.debug(sm.getString("combinedRealm.authFail", username,
+                            realm.getClass().getName()));
                 }
             } else {
                 if (log.isDebugEnabled()) {
-                    log.debug(sm.getString("combinedRealm.authSuccess", username, realm.getInfo()));
+                    log.debug(sm.getString("combinedRealm.authSuccess",
+                            username, realm.getClass().getName()));
                 }
                 break;
             }
@@ -289,7 +299,7 @@ public class CombinedRealm extends RealmBase {
             for (Realm realm : realms) {
                 if (log.isDebugEnabled()) {
                     log.debug(sm.getString("combinedRealm.authStart",
-                            username, realm.getInfo()));
+                            username, realm.getClass().getName()));
                 }
 
                 authenticatedUser = realm.authenticate(gssContext, storeCreds);
@@ -297,12 +307,12 @@ public class CombinedRealm extends RealmBase {
                 if (authenticatedUser == null) {
                     if (log.isDebugEnabled()) {
                         log.debug(sm.getString("combinedRealm.authFail",
-                                username, realm.getInfo()));
+                                username, realm.getClass().getName()));
                     }
                 } else {
                     if (log.isDebugEnabled()) {
                         log.debug(sm.getString("combinedRealm.authSuccess",
-                                username, realm.getInfo()));
+                                username, realm.getClass().getName()));
                     }
                     break;
                 }

==================================================
JAASRealm.java
index 4777251be5..7fa7d4244e 100644
--- a/java/org/apache/catalina/realm/DataSourceRealm.java
+++ b/java/org/apache/catalina/realm/DataSourceRealm.java
@@ -14,8 +14,6 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-
-
 package org.apache.catalina.realm;
 
 
@@ -44,9 +42,7 @@ import org.apache.naming.ContextBindings;
 * @author Ignacio Ortega
 * @version $Revision$
 */
-
-public class DataSourceRealm
-    extends RealmBase {
+public class DataSourceRealm extends RealmBase {
 
 
     // ----------------------------------------------------- Instance Variables
@@ -70,13 +66,6 @@ public class DataSourceRealm
     protected String dataSourceName = null;
 
 
-    /**
-     * Descriptive information about this Realm implementation.
-     */
-    protected static final String info =
-        "org.apache.catalina.realm.DataSourceRealm/1.0";
-
-
     /**
      * Context local datasource.
      */
@@ -241,22 +230,9 @@ public class DataSourceRealm
       this.userTable = userTable;
     }
 
-    /**
-     * Return descriptive information about this Realm implementation and
-     * the corresponding version number, in the format
-     * <code>&lt;description&gt;/&lt;version&gt;</code>.
-     */
-    @Override
-    public String getInfo() {
-
-        return info;
-
-    }
-
 
     // --------------------------------------------------------- Public Methods
 
-
     /**
      * Return the Principal associated with the specified username and
      * credentials, if there is one; otherwise return <code>null</code>.

==================================================
JDBCRealm.java
index 2d52be54b5..7026b6ac73 100644
--- a/java/org/apache/catalina/realm/JAASRealm.java
+++ b/java/org/apache/catalina/realm/JAASRealm.java
@@ -140,13 +140,6 @@ public class JAASRealm
     protected String appName = null;
 
 
-    /**
-     * Descriptive information about this <code>Realm</code> implementation.
-     */
-    protected static final String info =
-        "org.apache.catalina.realm.JAASRealm/1.0";
-
-
     /**
      * Descriptive information about this <code>Realm</code> implementation.
      */
@@ -305,22 +298,9 @@ public class JAASRealm
         this.userClassNames = userClassNames;
     }
 
-    /**
-     * Return descriptive information about this Realm implementation and
-     * the corresponding version number, in the format
-     * <code>&lt;description&gt;/&lt;version&gt;</code>.
-     */
-    @Override
-    public String getInfo() {
-
-        return info;
-
-    }
-
     
     // --------------------------------------------------------- Public Methods
 
-
     /**
      * Return the <code>Principal</code> associated with the specified username
      * and credentials, if there is one; otherwise return <code>null</code>.

==================================================
JNDIRealm.java
index 332ff6b96e..e747bd78a6 100644
--- a/java/org/apache/catalina/realm/JDBCRealm.java
+++ b/java/org/apache/catalina/realm/JDBCRealm.java
@@ -93,13 +93,6 @@ public class JDBCRealm
     protected String driverName = null;
 
 
-    /**
-     * Descriptive information about this Realm implementation.
-     */
-    protected static final String info =
-        "org.apache.catalina.realm.JDBCRealm/1.0";
-
-
     /**
      * Descriptive information about this Realm implementation.
      */
@@ -304,21 +297,9 @@ public class JDBCRealm
       this.userTable = userTable;
     }
 
-    /**
-     * Return descriptive information about this Realm implementation and
-     * the corresponding version number, in the format
-     * <code>&lt;description&gt;/&lt;version&gt;</code>.
-     */
-    @Override
-    public String getInfo() {
-
-        return info;
-
-    }
 
     // --------------------------------------------------------- Public Methods
 
-
     /**
      * Return the Principal associated with the specified username and
      * credentials, if there is one; otherwise return <code>null</code>.

==================================================
MemoryRealm.java
index 2f618652d4..b7a15577d6 100644
--- a/java/org/apache/catalina/realm/JNDIRealm.java
+++ b/java/org/apache/catalina/realm/JNDIRealm.java
@@ -228,12 +228,6 @@ public class JNDIRealm extends RealmBase {
      */
     public static final String DEREF_ALIASES = "java.naming.ldap.derefAliases";
 
-    /**
-     * Descriptive information about this Realm implementation.
-     */
-    protected static final String info =
-        "org.apache.catalina.realm.JNDIRealm/1.0";
-
 
     /**
      * Descriptive information about this Realm implementation.
@@ -969,22 +963,9 @@ public class JNDIRealm extends RealmBase {
         this.useDelegatedCredential = useDelegatedCredential;
     }
 
-    /**
-     * Return descriptive information about this Realm implementation and
-     * the corresponding version number, in the format
-     * <code>&lt;description&gt;/&lt;version&gt;</code>.
-     */
-    @Override
-    public String getInfo() {
-
-        return info;
-
-    }
-
 
     // ---------------------------------------------------------- Realm Methods
 
-
     /**
      * Return the Principal associated with the specified username and
      * credentials, if there is one; otherwise return <code>null</code>.

==================================================
RealmBase.java
index e5bb8f6351..f71ad69269 100644
--- a/java/org/apache/catalina/realm/MemoryRealm.java
+++ b/java/org/apache/catalina/realm/MemoryRealm.java
@@ -62,14 +62,6 @@ public class MemoryRealm  extends RealmBase {
     /**
      * Descriptive information about this Realm implementation.
      */
-    protected static final String info =
-        "org.apache.catalina.realm.MemoryRealm/1.0";
-
-
-    /**
-     * Descriptive information about this Realm implementation.
-     */
-
     protected static final String name = "MemoryRealm";
 
 
@@ -89,20 +81,6 @@ public class MemoryRealm  extends RealmBase {
 
     // ------------------------------------------------------------- Properties
 
-
-    /**
-     * Return descriptive information about this Realm implementation and
-     * the corresponding version number, in the format
-     * <code>&lt;description&gt;/&lt;version&gt;</code>.
-     */
-    @Override
-    public String getInfo() {
-
-        return info;
-
-    }
-
-
     /**
      * Return the pathname of our XML file containing user definitions.
      */

==================================================
UserDatabaseRealm.java
index 466a022727..6d9792cf7a 100644
--- a/java/org/apache/catalina/realm/RealmBase.java
+++ b/java/org/apache/catalina/realm/RealmBase.java
@@ -103,13 +103,6 @@ public abstract class RealmBase extends LifecycleMBeanBase implements Realm {
     protected String digestEncoding = null;
 
 
-    /**
-     * Descriptive information about this Realm implementation.
-     */
-    protected static final String info =
-        "org.apache.catalina.realm.RealmBase/1.0";
-
-
     /**
      * The MessageDigest object for digesting user credentials (passwords).
      */
@@ -254,18 +247,6 @@ public abstract class RealmBase extends LifecycleMBeanBase implements Realm {
         }
     }
 
-    /**
-     * Return descriptive information about this Realm implementation and
-     * the corresponding version number, in the format
-     * <code>&lt;description&gt;/&lt;version&gt;</code>.
-     */
-    @Override
-    public String getInfo() {
-
-        return info;
-
-    }
-
 
     /**
      * Return the "validate certificate chains" flag.

==================================================
FileStore.java
index bc07925be9..e56feaea2f 100644
--- a/java/org/apache/catalina/realm/UserDatabaseRealm.java
+++ b/java/org/apache/catalina/realm/UserDatabaseRealm.java
@@ -61,13 +61,6 @@ public class UserDatabaseRealm
     protected UserDatabase database = null;
 
 
-    /**
-     * Descriptive information about this Realm implementation.
-     */
-    protected static final String info =
-        "org.apache.catalina.realm.UserDatabaseRealm/1.0";
-
-
     /**
      * Descriptive information about this Realm implementation.
      */
@@ -83,20 +76,6 @@ public class UserDatabaseRealm
 
     // ------------------------------------------------------------- Properties
 
-
-    /**
-     * Return descriptive information about this Realm implementation and
-     * the corresponding version number, in the format
-     * <code>&lt;description&gt;/&lt;version&gt;</code>.
-     */
-    @Override
-    public String getInfo() {
-
-        return info;
-
-    }
-
-
     /**
      * Return the global JNDI name of the <code>UserDatabase</code> resource
      * we will be using.

==================================================
JDBCStore.java
index 60c3fea229..79f87296a7 100644
--- a/java/org/apache/catalina/session/FileStore.java
+++ b/java/org/apache/catalina/session/FileStore.java
@@ -77,16 +77,12 @@ public final class FileStore extends StoreBase {
     private File directoryFile = null;
 
 
-    /**
-     * The descriptive information about this implementation.
-     */
-    private static final String info = "FileStore/1.0";
-
     /**
      * Name to register for this Store, used for logging.
      */
     private static final String storeName = "fileStore";
 
+
     /**
      * Name to register for the background thread.
      */
@@ -122,18 +118,6 @@ public final class FileStore extends StoreBase {
     }
 
 
-    /**
-     * Return descriptive information about this Store implementation and
-     * the corresponding version number, in the format
-     * <code>&lt;description&gt;/&lt;version&gt;</code>.
-     */
-    @Override
-    public String getInfo() {
-
-        return (info);
-
-    }
-
     /**
      * Return the thread name for this Store.
      */
@@ -141,6 +125,7 @@ public final class FileStore extends StoreBase {
         return(threadName);
     }
 
+
     /**
      * Return the name for this Store, used for logging.
      */

==================================================
StandardManager.java
index bfbfa9662b..12466e4a1c 100644
--- a/java/org/apache/catalina/session/JDBCStore.java
+++ b/java/org/apache/catalina/session/JDBCStore.java
@@ -56,11 +56,6 @@ import org.apache.tomcat.util.ExceptionUtils;
 
 public class JDBCStore extends StoreBase {
 
-    /**
-     * The descriptive information about this implementation.
-     */
-    protected static final String info = "JDBCStore/1.0";
-
     /**
      * Context name associated with this Store
      */
@@ -188,14 +183,6 @@ public class JDBCStore extends StoreBase {
 
     // ------------------------------------------------------------- Properties
 
-    /**
-     * Return the info for this Store.
-     */
-    @Override
-    public String getInfo() {
-        return (info);
-    }
-
     /**
      * Return the name for this instance (built from container name)
      */

==================================================
StandardSession.java
index 4c3e59066f..9c2b209ae5 100644
--- a/java/org/apache/catalina/session/StandardManager.java
+++ b/java/org/apache/catalina/session/StandardManager.java
@@ -97,13 +97,6 @@ public class StandardManager extends ManagerBase {
 
     // ----------------------------------------------------- Instance Variables
 
-
-    /**
-     * The descriptive information about this implementation.
-     */
-    protected static final String info = "StandardManager/1.0";
-
-
     /**
      * The descriptive name of this Manager implementation (for logging).
      */
@@ -123,20 +116,6 @@ public class StandardManager extends ManagerBase {
 
     // ------------------------------------------------------------- Properties
 
-
-    /**
-     * Return descriptive information about this Manager implementation and
-     * the corresponding version number, in the format
-     * <code>&lt;description&gt;/&lt;version&gt;</code>.
-     */
-    @Override
-    public String getInfo() {
-
-        return (info);
-
-    }
-
-
     /**
      * Return the descriptive short name of this Manager implementation.
      */

==================================================
StoreBase.java
index aa6ac6f0ab..523d0f31fd 100644
--- a/java/org/apache/catalina/session/StandardSession.java
+++ b/java/org/apache/catalina/session/StandardSession.java
@@ -202,12 +202,6 @@ public class StandardSession implements HttpSession, Session, Serializable {
     protected String id = null;
 
 
-    /**
-     * Descriptive information describing this Session implementation.
-     */
-    protected static final String info = "StandardSession/1.0";
-
-
     /**
      * The last accessed time for this Session.
      */
@@ -444,19 +438,6 @@ public class StandardSession implements HttpSession, Session, Serializable {
     }
 
 
-    /**
-     * Return descriptive information about this Session implementation and
-     * the corresponding version number, in the format
-     * <code>&lt;description&gt;/&lt;version&gt;</code>.
-     */
-    @Override
-    public String getInfo() {
-
-        return (info);
-
-    }
-
-
     /**
      * Return the last time the client sent a request associated with this
      * session, as the number of milliseconds since midnight, January 1, 1970

==================================================
Embedded.java
index b61b914e20..5c1c7babb2 100644
--- a/java/org/apache/catalina/session/StoreBase.java
+++ b/java/org/apache/catalina/session/StoreBase.java
@@ -40,11 +40,6 @@ public abstract class StoreBase extends LifecycleBase implements Store {
 
     // ----------------------------------------------------- Instance Variables
 
-    /**
-     * The descriptive information about this implementation.
-     */
-    protected static final String info = "StoreBase/1.0";
-
     /**
      * Name to register for this Store, used for logging.
      */
@@ -65,17 +60,9 @@ public abstract class StoreBase extends LifecycleBase implements Store {
      */
     protected Manager manager;
 
+    
     // ------------------------------------------------------------- Properties
 
-    /**
-     * Return the info for this Store.
-     */
-    @Override
-    public String getInfo() {
-        return(info);
-    }
-
-
     /**
      * Return the name for this Store, used for logging.
      */

==================================================
JDBCAccessLogValve.java
index f221a183ab..affecaded6 100644
--- a/java/org/apache/catalina/startup/Embedded.java
+++ b/java/org/apache/catalina/startup/Embedded.java
@@ -306,7 +306,8 @@ public class Embedded  extends StandardService {
     public synchronized void addConnector(Connector connector) {
 
         if( log.isDebugEnabled() ) {
-            log.debug("Adding connector (" + connector.getInfo() + ")");
+            log.debug("Adding connector (" + connector.getClass().getName() +
+                    ")");
         }
 
         // Make sure we have a Container to send requests to

==================================================
CompressionServletResponseWrapper.java
index de913a79a3..f194cd5af3 100644
--- a/java/org/apache/catalina/valves/JDBCAccessLogValve.java
+++ b/java/org/apache/catalina/valves/JDBCAccessLogValve.java
@@ -213,12 +213,6 @@ public final class JDBCAccessLogValve extends ValveBase implements AccessLog {
      */
     protected boolean requestAttributesEnabled = true;
 
-    /**
-     * The descriptive information about this implementation.
-     */
-    protected static final String info =
-        "org.apache.catalina.valves.JDBCAccessLogValve/1.1";
-
 
     // ------------------------------------------------------------- Properties
 

==================================================
