d88c8f006dc4bad8667e090e0862ca91fdd7bf9d
==================================================
Pull up and align isNull and recycle
==================================================
Mark Thomas
==================================================
Mon Jan 15 22:16:09 2018 +0000
==================================================
AbstractChunk.java
Pull up and align isNull and recycle

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1821199 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ByteChunk.java
index 06783a1357..f49a9fc5f6 100644
--- a/java/org/apache/tomcat/util/buf/AbstractChunk.java
+++ b/java/org/apache/tomcat/util/buf/AbstractChunk.java
@@ -29,6 +29,8 @@ public abstract class AbstractChunk implements Cloneable, Serializable {
     private int hashCode = 0;
     protected boolean hasHashCode = false;
 
+    protected boolean isSet;
+
     protected int start;
     protected int end;
 
@@ -51,14 +53,6 @@ public abstract class AbstractChunk implements Cloneable, Serializable {
     }
 
 
-    /**
-     * @return the length of the data in the buffer
-     */
-    public int getLength() {
-        return end - start;
-    }
-
-
     // TODO: Deprecate offset and use start
 
     public int getOffset() {
@@ -74,6 +68,33 @@ public abstract class AbstractChunk implements Cloneable, Serializable {
     }
 
 
+    /**
+     * @return the length of the data in the buffer
+     */
+    public int getLength() {
+        return end - start;
+    }
+
+
+    public boolean isNull() {
+        if (end > 0) {
+            return false;
+        }
+        return !isSet;
+    }
+
+
+    /**
+     * Resets the chunk to an uninitialized state.
+     */
+    public void recycle() {
+        hasHashCode = false;
+        isSet = false;
+        start = 0;
+        end = 0;
+    }
+
+
     @Override
     public int hashCode() {
         if (hasHashCode) {

==================================================
CharChunk.java
index 8d9d52cf4b..fec440883d 100644
--- a/java/org/apache/tomcat/util/buf/ByteChunk.java
+++ b/java/org/apache/tomcat/util/buf/ByteChunk.java
@@ -127,8 +127,6 @@ public final class ByteChunk extends AbstractChunk {
 
     private transient Charset charset;
 
-    private boolean isSet = false; // XXX
-
     // How much can it grow, when data is added
     private int limit = -1;
 
@@ -168,20 +166,10 @@ public final class ByteChunk extends AbstractChunk {
     }
 
 
-    public boolean isNull() {
-        return !isSet; // buff==null;
-    }
-
-
-    /**
-     * Resets the message buff to an uninitialized state.
-     */
+    @Override
     public void recycle() {
+        super.recycle();
         charset = null;
-        start = 0;
-        end = 0;
-        isSet = false;
-        hasHashCode = false;
     }
 
 

==================================================
