25522ad3e1c7c5338a0d0876faceceb84a2889dd
==================================================
Tune the connector, next step is to add the ability to have more than one poller, this is achievable by simply having each poller have its own selector, exactly like it is done today
==================================================
Filip Hanik
==================================================
Wed Aug 9 12:26:11 2006 +0000
==================================================
InternalNioInputBuffer.java
Tune the connector, next step is to add the ability to have more than one poller, this is achievable by simply having each poller have its own selector, exactly like it is done today


git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk@430043 13f79535-47bb-0310-9956-ffa450edef68



==================================================
NioEndpoint.java
index 88163818fc..ada5fd11dd 100644
--- a/java/org/apache/coyote/http11/InternalNioInputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalNioInputBuffer.java
@@ -569,7 +569,7 @@ public class InternalNioInputBuffer implements InputBuffer {
                         //to do, add in a check, we might have just timed out on the wait,
                         //so there is no need to register us again.
                         boolean addToQueue = false;
-                        try { addToQueue = ((key.interestOps()&SelectionKey.OP_READ) != SelectionKey.OP_READ); } catch ( CancelledKeyException ckx ){ throw new IOException("Socket key cancelled.");}
+                        try { addToQueue = ((att.interestOps()&SelectionKey.OP_READ) != SelectionKey.OP_READ); } catch ( CancelledKeyException ckx ){ throw new IOException("Socket key cancelled.");}
                         if ( addToQueue ) {
                             synchronized (att.getMutex()) {
                                 addToReadQueue(key, att);
@@ -591,7 +591,10 @@ public class InternalNioInputBuffer implements InputBuffer {
             new Runnable() {
             public void run() {
                 try {
-                    if (key != null) key.interestOps(SelectionKey.OP_READ);
+                    if (key != null) {
+                        key.interestOps(SelectionKey.OP_READ);
+                        att.interestOps(SelectionKey.OP_READ);
+                    }
                 } catch (CancelledKeyException ckx) {
                     try {
                         if ( att != null ) {

==================================================
