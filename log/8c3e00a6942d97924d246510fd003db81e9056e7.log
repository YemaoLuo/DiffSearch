8c3e00a6942d97924d246510fd003db81e9056e7
==================================================
- Harmonize a bit more (the java.io HTTP 1.1 is the template: in the comments for the methods,
==================================================
Remy Maucherat
==================================================
Fri Apr 28 13:19:23 2006 +0000
==================================================
Http11AprProtocol.java
- Harmonize a bit more (the java.io HTTP 1.1 is the template: in the comments for the methods,
  "*" means this method should be common to all protocols, and "HTTP" means the method should be
  common to all HTTP protocols).

git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk@397894 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http11Processor.java
index 8c71250e5b..0f037d8739 100644
--- a/java/org/apache/coyote/http11/Http11AprProtocol.java
+++ b/java/org/apache/coyote/http11/Http11AprProtocol.java
@@ -20,6 +20,7 @@ import java.net.InetAddress;
 import java.net.URLEncoder;
 import java.util.Hashtable;
 import java.util.Iterator;
+import java.util.concurrent.Executor;
 
 import javax.management.MBeanRegistration;
 import javax.management.MBeanServer;
@@ -212,6 +213,16 @@ public class Http11AprProtocol implements ProtocolHandler, MBeanRegistration
 
     // -------------------- Pool setup --------------------
 
+    // *
+    public Executor getExecutor() {
+        return ep.getExecutor();
+    }
+    
+    // *
+    public void setExecutor(Executor executor) {
+        ep.setExecutor(executor);
+    }
+    
     public int getMaxThreads() {
         return ep.getMaxThreads();
     }

==================================================
Http11Protocol.java
index ad52794b21..73e5a99e50 100644
--- a/java/org/apache/coyote/http11/Http11Processor.java
+++ b/java/org/apache/coyote/http11/Http11Processor.java
@@ -17,9 +17,7 @@
 package org.apache.coyote.http11;
 
 import java.io.IOException;
-import java.io.InputStream;
 import java.io.InterruptedIOException;
-import java.io.OutputStream;
 import java.net.InetAddress;
 import java.net.Socket;
 import java.security.AccessController;
@@ -31,7 +29,6 @@ import java.util.regex.PatternSyntaxException;
 import org.apache.coyote.ActionCode;
 import org.apache.coyote.ActionHook;
 import org.apache.coyote.Adapter;
-import org.apache.coyote.Processor;
 import org.apache.coyote.Request;
 import org.apache.coyote.RequestInfo;
 import org.apache.coyote.Response;
@@ -61,7 +58,7 @@ import org.apache.tomcat.util.threads.ThreadWithAttributes;
  *
  * @author Remy Maucherat
  */
-public class Http11Processor implements Processor, ActionHook {
+public class Http11Processor implements ActionHook {
 
 
     /**
@@ -649,14 +646,6 @@ public class Http11Processor implements Processor, ActionHook {
     }
 
 
-    /**
-     * Set the socket associated with this HTTP connection.
-     */
-    public void setSocket(Socket socket)
-        throws IOException {
-        this.socket = socket;
-    }
-
     /**
      * Set the flag to control upload time-outs.
      */
@@ -737,7 +726,7 @@ public class Http11Processor implements Processor, ActionHook {
      * responses
      * @throws IOException error during an I/O operation
      */
-    public void process(InputStream input, OutputStream output)
+    public void process(Socket socket)
         throws IOException {
         ThreadWithAttributes thrA=
                 (ThreadWithAttributes)Thread.currentThread();
@@ -754,8 +743,9 @@ public class Http11Processor implements Processor, ActionHook {
         localPort = -1;
 
         // Setting up the I/O
-        inputBuffer.setInputStream(input);
-        outputBuffer.setOutputStream(output);
+        this.socket = socket;
+        inputBuffer.setInputStream(socket.getInputStream());
+        outputBuffer.setOutputStream(socket.getOutputStream());
 
         // Error flag
         error = false;

==================================================
