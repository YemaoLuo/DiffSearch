519251cbeb4488f47da36e91fe436556312af4a6
==================================================
Fix BZ 64593. Delay 404 when Context is null.
==================================================
Mark Thomas
==================================================
Mon Jul 13 16:46:23 2020 +0100
==================================================
CoyoteAdapter.java
Fix BZ 64593. Delay 404 when Context is null.

This gives the rewrite valve an opportunity to rewrite the request.


==================================================
StandardEngineValve.java
index ab113a7035..6249e35410 100644
--- a/java/org/apache/catalina/connector/CoyoteAdapter.java
+++ b/java/org/apache/catalina/connector/CoyoteAdapter.java
@@ -692,11 +692,11 @@ public class CoyoteAdapter implements Adapter {
             // because no ROOT context has been deployed or the URI was invalid
             // so no context could be mapped.
             if (request.getContext() == null) {
-                // Don't overwrite an existing error
-                if (!response.isError()) {
-                    response.sendError(404);
-                }
                 // Allow processing to continue.
+                // If present, the rewrite Valve may rewrite this to a valid
+                // request.
+                // The StandardEngineValve will handle the case of a missing
+                // Host and the StandardHostValve the case of a missing Context.
                 // If present, the error reporting valve will provide a response
                 // body.
                 return true;

==================================================
StandardHostValve.java
index 4b5399c9b0..c9e83b386b 100644
--- a/java/org/apache/catalina/core/StandardEngineValve.java
+++ b/java/org/apache/catalina/core/StandardEngineValve.java
@@ -63,7 +63,11 @@ final class StandardEngineValve extends ValveBase {
         Host host = request.getHost();
         if (host == null) {
             // HTTP 0.9 or HTTP 1.0 request without a host when no default host
-            // is defined. This is handled by the CoyoteAdapter.
+            // is defined.
+            // Don't overwrite an existing error
+            if (!response.isError()) {
+                response.sendError(404);
+            }
             return;
         }
         if (request.isAsyncSupported()) {

==================================================
