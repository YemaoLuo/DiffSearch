0786d2c29bb22d57c74713eff943f5e149ccaee0
==================================================
Add first pass at PBE handler
==================================================
Mark Emlyn
==================================================
Thu Sep 25 19:32:24 2014 +0000
==================================================
MessageDigestCredentialHandler.java
index 369c2484a6..6fa0f5ea67 100644
--- a/java/org/apache/catalina/realm/LocalStrings.properties
+++ b/java/org/apache/catalina/realm/LocalStrings.properties
@@ -83,4 +83,4 @@ combinedRealm.addRealm=Add "{0}" realm, making a total of "{1}" realms
 combinedRealm.realmStartFail=Failed to start "{0}" realm
 lockOutRealm.authLockedUser=An attempt was made to authenticate the locked user "{0}"
 lockOutRealm.removeWarning=User "{0}" was removed from the failed users cache after {1} seconds to keep the cache size within the limit set
-messageDigestCredentialHandler.unknownEncoding=The encoding [{0}] is not supported so the current setting of [{1}] will still be used
+mdCredentialHandler.unknownEncoding=The encoding [{0}] is not supported so the current setting of [{1}] will still be used

==================================================
PBECredentialHandler.java
index d6db4a6393..86cc620c96 100644
--- a/java/org/apache/catalina/realm/MessageDigestCredentialHandler.java
+++ b/java/org/apache/catalina/realm/MessageDigestCredentialHandler.java
@@ -57,8 +57,8 @@ import org.apache.tomcat.util.security.ConcurrentMessageDigest;
 public class MessageDigestCredentialHandler implements CredentialHandler {
 
     private static final Log log = LogFactory.getLog(MessageDigestCredentialHandler.class);
-    protected static final StringManager sm = StringManager.getManager(Constants.Package);
 
+    protected static final StringManager sm = StringManager.getManager(Constants.Package);
 
     private Charset encoding = StandardCharsets.UTF_8;
     private String digest = null;
@@ -76,7 +76,7 @@ public class MessageDigestCredentialHandler implements CredentialHandler {
             try {
                 this.encoding = B2CConverter.getCharset(encodingName);
             } catch (UnsupportedEncodingException e) {
-                log.warn(sm.getString("mdCredentialHandler.unknownEncoding=.unknownEncoding",
+                log.warn(sm.getString("mdCredentialHandler.unknownEncoding",
                         encodingName, encoding.name()));
             }
         }

==================================================
