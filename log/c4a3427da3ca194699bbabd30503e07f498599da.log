c4a3427da3ca194699bbabd30503e07f498599da
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=50017
==================================================
Mark Emlyn
==================================================
Fri Oct 8 14:16:23 2010 +0000
==================================================
ValueReference.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=50017
Code clean-up. No functional change.
Patch provided by sebb

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1005837 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AsyncEvent.java
index d8f7f6d002..61807fec3a 100644
--- a/java/javax/el/ValueReference.java
+++ b/java/javax/el/ValueReference.java
@@ -26,8 +26,8 @@ public class ValueReference implements Serializable {
 
     private static final long serialVersionUID = 1L;
     
-    private Object base;
-    private Object property;
+    private final Object base;
+    private final Object property;
     
     public ValueReference(Object base, Object property) {
         this.base = base;

==================================================
HttpConstraintElement.java
index 904685642f..69112935c6 100644
--- a/java/javax/servlet/AsyncEvent.java
+++ b/java/javax/servlet/AsyncEvent.java
@@ -21,13 +21,16 @@ package javax.servlet;
  * @since Servlet 3.0
  */
 public class AsyncEvent {
-    private AsyncContext context;
-    private ServletRequest request;
-    private ServletResponse response;
-    private Throwable throwable;
+    private final AsyncContext context;
+    private final ServletRequest request;
+    private final ServletResponse response;
+    private final Throwable throwable;
     
     public AsyncEvent(AsyncContext context) {
         this.context = context;
+        this.request = null;
+        this.response = null;
+        this.throwable = null;
     }
 
     public AsyncEvent(AsyncContext context, ServletRequest request,
@@ -35,11 +38,14 @@ public class AsyncEvent {
         this.context = context;
         this.request = request;
         this.response = response;
+        this.throwable = null;
     }
     
     public AsyncEvent(AsyncContext context, Throwable throwable) {
         this.context = context;
         this.throwable = throwable;
+        this.request = null;
+        this.response = null;
     }
 
     public AsyncEvent(AsyncContext context, ServletRequest request,

==================================================
HttpMethodConstraintElement.java
index f9b885d42b..1a0fd84451 100644
--- a/java/javax/servlet/HttpConstraintElement.java
+++ b/java/javax/servlet/HttpConstraintElement.java
@@ -31,15 +31,18 @@ public class HttpConstraintElement {
     private static final ResourceBundle lStrings =
         ResourceBundle.getBundle(LSTRING_FILE);
 
-    private EmptyRoleSemantic emptyRoleSemantic = EmptyRoleSemantic.PERMIT;
-    private TransportGuarantee transportGuarantee = TransportGuarantee.NONE;
-    private String[] rolesAllowed = new String[0];
+    private final EmptyRoleSemantic emptyRoleSemantic;// = EmptyRoleSemantic.PERMIT;
+    private final TransportGuarantee transportGuarantee;// = TransportGuarantee.NONE;
+    private final String[] rolesAllowed;// = new String[0];
     
     /**
      * Default constraint is permit with no transport guarantee.
      */
     public HttpConstraintElement() {
         // Default constructor
+        this.emptyRoleSemantic = EmptyRoleSemantic.PERMIT;
+        this.transportGuarantee = TransportGuarantee.NONE;
+        this.rolesAllowed = new String[0];
     }
     
     /**
@@ -48,6 +51,8 @@ public class HttpConstraintElement {
      */
     public HttpConstraintElement(EmptyRoleSemantic emptyRoleSemantic) {
         this.emptyRoleSemantic = emptyRoleSemantic;
+        this.transportGuarantee = TransportGuarantee.NONE;
+        this.rolesAllowed = new String[0];
     }
     
     /**
@@ -55,6 +60,7 @@ public class HttpConstraintElement {
      */
     public HttpConstraintElement(TransportGuarantee transportGuarantee,
             String... rolesAllowed) {
+        this.emptyRoleSemantic = EmptyRoleSemantic.PERMIT;
         this.transportGuarantee = transportGuarantee;
         this.rolesAllowed = rolesAllowed;
     }

==================================================
MultipartConfigElement.java
index 4b016f8b60..f0a58f3d33 100644
--- a/java/javax/servlet/HttpMethodConstraintElement.java
+++ b/java/javax/servlet/HttpMethodConstraintElement.java
@@ -29,7 +29,7 @@ public class HttpMethodConstraintElement extends HttpConstraintElement {
     private static final ResourceBundle lStrings =
         ResourceBundle.getBundle(LSTRING_FILE);
 
-    private String methodName;
+    private final String methodName;
 
     public HttpMethodConstraintElement(String methodName) {
         if (methodName == null || methodName.length() == 0) {

==================================================
ServletContextAttributeEvent.java
index fb6934ca53..e7b3e4b96c 100644
--- a/java/javax/servlet/MultipartConfigElement.java
+++ b/java/javax/servlet/MultipartConfigElement.java
@@ -24,16 +24,21 @@ import javax.servlet.annotation.MultipartConfig;
  */
 public class MultipartConfigElement {
     
-    private String location = "";
-    private long maxFileSize = -1;
-    private long maxRequestSize = -1;
-    private int fileSizeThreshold = 0;
+    private final String location;// = "";
+    private final long maxFileSize;// = -1;
+    private final long maxRequestSize;// = -1;
+    private final int fileSizeThreshold;// = 0;
     
     public MultipartConfigElement(String location) {
         // Keep empty string default if location is null
         if (location != null) {
             this.location = location;
+        } else {
+            this.location = "";
         }
+        this.maxFileSize = -1;
+        this.maxRequestSize = -1;
+        this.fileSizeThreshold = 0;
     }
     
     public MultipartConfigElement(String location, long maxFileSize,
@@ -41,6 +46,8 @@ public class MultipartConfigElement {
         // Keep empty string default if location is null
         if (location != null) {
             this.location = location;
+        } else {
+            this.location = "";
         }
         this.maxFileSize = maxFileSize;
         this.maxRequestSize = maxRequestSize;

==================================================
ServletRequestAttributeEvent.java
index 2660602b1e..3a5975e57f 100644
--- a/java/javax/servlet/ServletContextAttributeEvent.java
+++ b/java/javax/servlet/ServletContextAttributeEvent.java
@@ -24,8 +24,8 @@ package javax.servlet;
  * @since v 2.3
  */
 public class ServletContextAttributeEvent extends ServletContextEvent {
-    private String name;
-    private Object value;
+    private final String name;
+    private final Object value;
 
     /**
      * Construct a ServletContextAttributeEvent from the given context for the

==================================================
ServletRequestEvent.java
index 9f55277307..d06b8919df 100644
--- a/java/javax/servlet/ServletRequestAttributeEvent.java
+++ b/java/javax/servlet/ServletRequestAttributeEvent.java
@@ -24,8 +24,8 @@ package javax.servlet;
  * @since Servlet 2.4
  */
 public class ServletRequestAttributeEvent extends ServletRequestEvent {
-    private String name;
-    private Object value;
+    private final String name;
+    private final Object value;
 
     /**
      * Construct a ServletRequestAttributeEvent giving the servlet context of

==================================================
ServletSecurityElement.java
index fb42a0fc93..8246bc0b6e 100644
--- a/java/javax/servlet/ServletRequestEvent.java
+++ b/java/javax/servlet/ServletRequestEvent.java
@@ -24,7 +24,7 @@ package javax.servlet;
  * @since Servlet 2.4
  */
 public class ServletRequestEvent extends java.util.EventObject {
-    private ServletRequest request;
+    private final ServletRequest request;
 
     /**
      * Construct a ServletRequestEvent for the given ServletContext and

==================================================
UnavailableException.java
index 0335825c91..942bd58c49 100644
--- a/java/javax/servlet/ServletSecurityElement.java
+++ b/java/javax/servlet/ServletSecurityElement.java
@@ -32,7 +32,7 @@ import javax.servlet.annotation.ServletSecurity;
  */
 public class ServletSecurityElement extends HttpConstraintElement {
     
-    private Map<String,HttpMethodConstraintElement> methodConstraints =
+    private final Map<String,HttpMethodConstraintElement> methodConstraints =
         new HashMap<String,HttpMethodConstraintElement>();
 
     /**

==================================================
HttpSessionBindingEvent.java
index 6e1a979ea6..23e67b4191 100644
--- a/java/javax/servlet/UnavailableException.java
+++ b/java/javax/servlet/UnavailableException.java
@@ -44,9 +44,9 @@ package javax.servlet;
  */
 public class UnavailableException extends ServletException {
 
-    private Servlet servlet; // what's unavailable
-    private boolean permanent; // needs admin action?
-    private int seconds; // unavailability estimate
+    private final Servlet servlet; // what's unavailable
+    private final boolean permanent; // needs admin action?
+    private final int seconds; // unavailability estimate
 
     /**
      * @param servlet
@@ -62,6 +62,7 @@ public class UnavailableException extends ServletException {
         super(msg);
         this.servlet = servlet;
         permanent = true;
+        this.seconds = 0;
     }
 
     /**
@@ -98,7 +99,8 @@ public class UnavailableException extends ServletException {
      */
     public UnavailableException(String msg) {
         super(msg);
-
+        seconds = 0;
+        servlet = null;
         permanent = true;
     }
 
@@ -128,7 +130,7 @@ public class UnavailableException extends ServletException {
             this.seconds = -1;
         else
             this.seconds = seconds;
-
+        servlet = null;
         permanent = false;
     }
 

==================================================
ErrorData.java
index 4f986dc73b..bc4430d3b2 100644
--- a/java/javax/servlet/http/HttpSessionBindingEvent.java
+++ b/java/javax/servlet/http/HttpSessionBindingEvent.java
@@ -38,11 +38,11 @@ public class HttpSessionBindingEvent extends HttpSessionEvent {
 
     /* The name to which the object is being bound or unbound */
 
-    private String name;
+    private final String name;
 
     /* The object is being bound or unbound */
 
-    private Object value;
+    private final Object value;
 
     /**
      * Constructs an event that notifies an object that it has been bound to or
@@ -59,6 +59,7 @@ public class HttpSessionBindingEvent extends HttpSessionEvent {
     public HttpSessionBindingEvent(HttpSession session, String name) {
         super(session);
         this.name = name;
+        this.value = null;
     }
 
     /**

==================================================
BodyContent.java
index 8b02121041..a517ad79d8 100644
--- a/java/javax/servlet/jsp/ErrorData.java
+++ b/java/javax/servlet/jsp/ErrorData.java
@@ -27,10 +27,10 @@ package javax.servlet.jsp;
  */
 public final class ErrorData {
 
-    private Throwable throwable;
-    private int statusCode;
-    private String uri;
-    private String servletName;
+    private final Throwable throwable;
+    private final int statusCode;
+    private final String uri;
+    private final String servletName;
 
     /**
      * Creates a new ErrorData object.

==================================================
FunctionInfo.java
index 4a294af444..f700cb67b6 100644
--- a/java/javax/servlet/jsp/tagext/BodyContent.java
+++ b/java/javax/servlet/jsp/tagext/BodyContent.java
@@ -121,5 +121,5 @@ public abstract class BodyContent extends JspWriter {
 
     // private fields
 
-    private JspWriter enclosingWriter;
+    private final JspWriter enclosingWriter;
 }

==================================================
TagAttributeInfo.java
index eca598916a..56e2341e78 100644
--- a/java/javax/servlet/jsp/tagext/FunctionInfo.java
+++ b/java/javax/servlet/jsp/tagext/FunctionInfo.java
@@ -73,7 +73,7 @@ public class FunctionInfo {
     /*
      * fields
      */
-    private String name;
-    private String functionClass;
-    private String functionSignature;
+    private final String name;
+    private final String functionClass;
+    private final String functionSignature;
 }

==================================================
TagData.java
index 4a2e26c545..3888de2198 100644
--- a/java/javax/servlet/jsp/tagext/TagAttributeInfo.java
+++ b/java/javax/servlet/jsp/tagext/TagAttributeInfo.java
@@ -51,10 +51,7 @@ public class TagAttributeInfo {
 
     public TagAttributeInfo(String name, boolean required, String type,
             boolean reqTime) {
-        this.name = name;
-        this.required = required;
-        this.type = type;
-        this.reqTime = reqTime;
+        this(name, required, type, reqTime, false);
     }
 
     /**
@@ -78,8 +75,7 @@ public class TagAttributeInfo {
 
     public TagAttributeInfo(String name, boolean required, String type,
             boolean reqTime, boolean fragment) {
-        this(name, required, type, reqTime);
-        this.fragment = fragment;
+        this(name, required, type, reqTime, fragment, null, false, false, null, null);
     }
 
     /**
@@ -89,7 +85,11 @@ public class TagAttributeInfo {
             boolean reqTime, boolean fragment, String description,
             boolean deferredValue, boolean deferredMethod,
             String expectedTypeName, String methodSignature) {
-        this(name, required, type, reqTime, fragment);
+        this.name = name;
+        this.required = required;
+        this.type = type;
+        this.reqTime = reqTime;
+        this.fragment = fragment;
         this.description = description;
         this.deferredValue = deferredValue;
         this.deferredMethod = deferredMethod;
@@ -188,31 +188,31 @@ public class TagAttributeInfo {
     /*
      * private fields
      */
-    private String name;
+    private final String name;
 
-    private String type;
+    private final String type;
 
-    private boolean reqTime;
+    private final boolean reqTime;
 
-    private boolean required;
+    private final boolean required;
 
     /*
      * private fields for JSP 2.0
      */
-    private boolean fragment;
+    private final boolean fragment;
 
     /*
      * private fields for JSP 2.1
      */
-    private String description;
+    private final String description;
 
-    private boolean deferredValue;
+    private final boolean deferredValue;
 
-    private boolean deferredMethod;
+    private final boolean deferredMethod;
 
-    private String expectedTypeName;
+    private final String expectedTypeName;
 
-    private String methodSignature;
+    private final String methodSignature;
 
     public boolean isDeferredMethod() {
         return deferredMethod;

==================================================
TagExtraInfo.java
index 50dd887215..72908a4915 100644
--- a/java/javax/servlet/jsp/tagext/TagData.java
+++ b/java/javax/servlet/jsp/tagext/TagData.java
@@ -149,5 +149,5 @@ public class TagData implements Cloneable {
 
     // private data
 
-    private Hashtable<String, Object> attributes;        // the tagname/value map
+    private final Hashtable<String, Object> attributes;        // the tagname/value map
 }

==================================================
TagFileInfo.java
index 371d46571b..b6c298adff 100644
--- a/java/javax/servlet/jsp/tagext/TagExtraInfo.java
+++ b/java/javax/servlet/jsp/tagext/TagExtraInfo.java
@@ -137,7 +137,7 @@ public abstract class TagExtraInfo {
     }
     
     // private data
-    private TagInfo tagInfo;
+    private  TagInfo tagInfo;
 
     // zero length VariableInfo array
     private static final VariableInfo[] ZERO_VARIABLE_INFO = { };

==================================================
TagVariableInfo.java
index 54f239c2cd..e825c918cb 100644
--- a/java/javax/servlet/jsp/tagext/TagFileInfo.java
+++ b/java/javax/servlet/jsp/tagext/TagFileInfo.java
@@ -80,7 +80,7 @@ public class TagFileInfo {
     }
 
     // private fields for 2.0 info
-    private String name;
-    private String path;
-    private TagInfo tagInfo;
+    private final String name;
+    private final String path;
+    private final TagInfo tagInfo;
 }

==================================================
ValidationMessage.java
index 92470515f8..87a75409e4 100644
--- a/java/javax/servlet/jsp/tagext/TagVariableInfo.java
+++ b/java/javax/servlet/jsp/tagext/TagVariableInfo.java
@@ -101,9 +101,9 @@ public class TagVariableInfo {
     /*
      * private fields
      */
-    private String nameGiven; // <name-given>
-    private String nameFromAttribute; // <name-from-attribute>
-    private String className; // <class>
-    private boolean declare; // <declare>
-    private int scope; // <scope>
+    private final String nameGiven; // <name-given>
+    private final String nameFromAttribute; // <name-from-attribute>
+    private final String className; // <class>
+    private final boolean declare; // <declare>
+    private final int scope; // <scope>
 }

==================================================
VariableInfo.java
index 4459ba3385..98590749a1 100644
--- a/java/javax/servlet/jsp/tagext/ValidationMessage.java
+++ b/java/javax/servlet/jsp/tagext/ValidationMessage.java
@@ -72,6 +72,6 @@ public class ValidationMessage {
     }
 
     // Private data
-    private String id;
-    private String message;
+    private final String id;
+    private final String message;
 }

==================================================
