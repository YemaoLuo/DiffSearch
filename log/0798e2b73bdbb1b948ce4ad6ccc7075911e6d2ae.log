0798e2b73bdbb1b948ce4ad6ccc7075911e6d2ae
==================================================
Add the plumbing to make a canonical CATALINA_BASE File available via
==================================================
Mark Emlyn
==================================================
Thu Feb 2 10:28:48 2012 +0000
==================================================
Container.java
Add the plumbing to make a canonical CATALINA_BASE File available via
every Container.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1239516 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ContainerBase.java
index 73577c016f..0bd80297e8 100644
--- a/java/org/apache/catalina/Container.java
+++ b/java/org/apache/catalina/Container.java
@@ -18,6 +18,7 @@ package org.apache.catalina;
 
 
 import java.beans.PropertyChangeListener;
+import java.io.File;
 
 import javax.management.ObjectName;
 import javax.naming.directory.DirContext;
@@ -443,4 +444,10 @@ public interface Container extends Lifecycle {
      * @param   startStopThreads    The new number of threads to be used
      */
     public void setStartStopThreads(int startStopThreads);
+
+
+    /**
+     *
+     */
+    public File getCatalinaBase();
 }

==================================================
FailedContext.java
index 1e1835613f..0b813008f1 100644
--- a/java/org/apache/catalina/core/ContainerBase.java
+++ b/java/org/apache/catalina/core/ContainerBase.java
@@ -19,6 +19,8 @@ package org.apache.catalina.core;
 
 import java.beans.PropertyChangeListener;
 import java.beans.PropertyChangeSupport;
+import java.io.File;
+import java.io.IOException;
 import java.security.AccessController;
 import java.security.PrivilegedAction;
 import java.util.ArrayList;
@@ -292,6 +294,9 @@ public abstract class ContainerBase extends LifecycleMBeanBase
     private int startStopThreads = 1;
     protected ThreadPoolExecutor startStopExecutor;
 
+
+    private File catalinaBase = null;
+
     // ------------------------------------------------------------- Properties
 
     @Override
@@ -1332,8 +1337,34 @@ public abstract class ContainerBase extends LifecycleMBeanBase
     }
 
 
-    // ------------------------------------------------------ Protected Methods
+    @Override
+    public File getCatalinaBase() {
+
+        if (catalinaBase != null) {
+            return catalinaBase;
+        }
+
+        if (parent != null) {
+            return parent.getCatalinaBase();
+        }
+
+        String base = System.getProperty(Globals.CATALINA_BASE_PROP);
 
+        if (base == null) {
+            return null;
+        } else {
+            File f;
+            try {
+                f = new File(base).getCanonicalFile();
+            } catch (IOException e) {
+                return null;
+            }
+            return f;
+        }
+    }
+
+
+    // ------------------------------------------------------ Protected Methods
 
     /**
      * Notify all container event listeners that a particular event has

==================================================
