a253d904b8b3e565f36f29714544eb519665c246
==================================================
Code clean-up:
==================================================
Mark Emlyn
==================================================
Wed Sep 12 18:24:09 2012 +0000
==================================================
JspApplicationContextImpl.java
Code clean-up:
 - Java 7 <>
 - UCdetector - use of final

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1384074 13f79535-47bb-0310-9956-ffa450edef68



==================================================
JspContextWrapper.java
index f6ee2980e0..65b86d0c7e 100644
--- a/java/org/apache/jasper/runtime/JspApplicationContextImpl.java
+++ b/java/org/apache/jasper/runtime/JspApplicationContextImpl.java
@@ -53,9 +53,9 @@ public class JspApplicationContextImpl implements JspApplicationContext {
     private final ExpressionFactory expressionFactory =
             ExpressionFactory.newInstance();
 
-    private final List<ELContextListener> contextListeners = new ArrayList<ELContextListener>();
+    private final List<ELContextListener> contextListeners = new ArrayList<>();
 
-    private final List<ELResolver> resolvers = new ArrayList<ELResolver>();
+    private final List<ELResolver> resolvers = new ArrayList<>();
 
     private boolean instantiated = false;
 

==================================================
JspFactoryImpl.java
index b9c96ade8f..36e35a9890 100644
--- a/java/org/apache/jasper/runtime/JspContextWrapper.java
+++ b/java/org/apache/jasper/runtime/JspContextWrapper.java
@@ -60,22 +60,22 @@ import org.apache.jasper.compiler.Localizer;
 public class JspContextWrapper extends PageContext implements VariableResolver {
 
     // Invoking JSP context
-    private PageContext invokingJspCtxt;
+    private final PageContext invokingJspCtxt;
 
-    private transient HashMap<String, Object> pageAttributes;
+    private final transient HashMap<String, Object> pageAttributes;
 
     // ArrayList of NESTED scripting variables
-    private ArrayList<String> nestedVars;
+    private final ArrayList<String> nestedVars;
 
     // ArrayList of AT_BEGIN scripting variables
-    private ArrayList<String> atBeginVars;
+    private final ArrayList<String> atBeginVars;
 
     // ArrayList of AT_END scripting variables
-    private ArrayList<String> atEndVars;
+    private final ArrayList<String> atEndVars;
 
-    private Map<String,String> aliases;
+    private final Map<String,String> aliases;
 
-    private HashMap<String, Object> originalNestedVars;
+    private final HashMap<String, Object> originalNestedVars;
 
     public JspContextWrapper(JspContext jspContext,
             ArrayList<String> nestedVars, ArrayList<String> atBeginVars,
@@ -84,11 +84,13 @@ public class JspContextWrapper extends PageContext implements VariableResolver {
         this.nestedVars = nestedVars;
         this.atBeginVars = atBeginVars;
         this.atEndVars = atEndVars;
-        this.pageAttributes = new HashMap<String, Object>(16);
+        this.pageAttributes = new HashMap<>(16);
         this.aliases = aliases;
 
         if (nestedVars != null) {
-            this.originalNestedVars = new HashMap<String, Object>(nestedVars.size());
+            this.originalNestedVars = new HashMap<>(nestedVars.size());
+        } else {
+            this.originalNestedVars = null;
         }
         syncBeginTagFile();
     }

==================================================
JspFragmentHelper.java
index dbe3ef2424..8ff4746d15 100644
--- a/java/org/apache/jasper/runtime/JspFactoryImpl.java
+++ b/java/org/apache/jasper/runtime/JspFactoryImpl.java
@@ -30,8 +30,6 @@ import javax.servlet.jsp.JspFactory;
 import javax.servlet.jsp.PageContext;
 
 import org.apache.jasper.Constants;
-import org.apache.juli.logging.Log;
-import org.apache.juli.logging.LogFactory;
 
 /**
  * Implementation of JspFactory.
@@ -40,16 +38,13 @@ import org.apache.juli.logging.LogFactory;
  */
 public class JspFactoryImpl extends JspFactory {
 
-    // Logger
-    private final Log log = LogFactory.getLog(JspFactoryImpl.class);
-
     private static final String SPEC_VERSION = "2.1";
     private static final boolean USE_POOL =
         Boolean.valueOf(System.getProperty("org.apache.jasper.runtime.JspFactoryImpl.USE_POOL", "true")).booleanValue();
     private static final int POOL_SIZE =
         Integer.valueOf(System.getProperty("org.apache.jasper.runtime.JspFactoryImpl.POOL_SIZE", "8")).intValue();
 
-    private ThreadLocal<PageContextPool> localPool = new ThreadLocal<PageContextPool>();
+    private final ThreadLocal<PageContextPool> localPool = new ThreadLocal<>();
 
     @Override
     public PageContext getPageContext(Servlet servlet, ServletRequest request,
@@ -181,7 +176,7 @@ public class JspFactoryImpl extends JspFactory {
 
     protected static final class PageContextPool  {
 
-        private PageContext[] pool;
+        private final PageContext[] pool;
 
         private int current = -1;
 

==================================================
JspRuntimeLibrary.java
index 1f6d32a589..1df68d55cb 100644
--- a/java/org/apache/jasper/runtime/JspFragmentHelper.java
+++ b/java/org/apache/jasper/runtime/JspFragmentHelper.java
@@ -33,23 +33,22 @@ import javax.servlet.jsp.tagext.JspTag;
  *
  * @author Mark Roth
  */
-public abstract class JspFragmentHelper
-    extends JspFragment
-{
+public abstract class JspFragmentHelper extends JspFragment {
 
-    protected int discriminator;
-    protected JspContext jspContext;
-    protected PageContext _jspx_page_context;
-    protected JspTag parentTag;
+    protected final int discriminator;
+    protected final JspContext jspContext;
+    protected final PageContext _jspx_page_context;
+    protected final JspTag parentTag;
 
     public JspFragmentHelper( int discriminator, JspContext jspContext,
         JspTag parentTag )
     {
         this.discriminator = discriminator;
         this.jspContext = jspContext;
-        this._jspx_page_context = null;
-        if( jspContext instanceof PageContext ) {
+        if(jspContext instanceof PageContext) {
             _jspx_page_context = (PageContext)jspContext;
+        } else {
+            _jspx_page_context = null;
         }
         this.parentTag = parentTag;
     }

==================================================
JspWriterImpl.java
index 6569f3c196..eb642fafbf 100644
--- a/java/org/apache/jasper/runtime/JspRuntimeLibrary.java
+++ b/java/org/apache/jasper/runtime/JspRuntimeLibrary.java
@@ -190,8 +190,11 @@ public class JspRuntimeLibrary {
         } else if (target == Character.class) {
             if (isNullOrEmpty)
                 return Character.valueOf((char) 0);
-            else
-                return Character.valueOf(s.charAt(0));
+            else {
+                @SuppressWarnings("null")
+                Character result = Character.valueOf(s.charAt(0));
+                return result;
+            }
         } else if (target == Double.class) {
             if (isNullOrEmpty)
                 return Double.valueOf(0);
@@ -331,7 +334,7 @@ public class JspRuntimeLibrary {
                     }
                 }
             }
-            if ( method != null ) {
+            if (method != null && type != null) {
                 if (type.isArray()) {
                     if (request == null) {
                         throw new JasperException(

==================================================
PageContextImpl.java
index c02236e03c..d85da07742 100644
--- a/java/org/apache/jasper/runtime/JspWriterImpl.java
+++ b/java/org/apache/jasper/runtime/JspWriterImpl.java
@@ -355,7 +355,7 @@ public class JspWriterImpl extends JspWriter {
     }
 
 
-    static String lineSeparator = System.getProperty("line.separator");
+    static final String lineSeparator = System.getProperty("line.separator");
 
     /**
      * Write a line separator.  The line separator string is defined by the

==================================================
ProtectedFunctionMapper.java
index 1fb25d9931..f78929d9e4 100644
--- a/java/org/apache/jasper/runtime/PageContextImpl.java
+++ b/java/org/apache/jasper/runtime/PageContextImpl.java
@@ -112,7 +112,7 @@ public class PageContextImpl extends PageContext {
      */
     PageContextImpl() {
         this.outs = new BodyContentImpl[0];
-        this.attributes = new HashMap<String, Object>(16);
+        this.attributes = new HashMap<>(16);
         this.depth = -1;
     }
 

==================================================
ServletResponseWrapperInclude.java
index 6143d61cf2..16b0fcd331 100644
--- a/java/org/apache/jasper/runtime/ProtectedFunctionMapper.java
+++ b/java/org/apache/jasper/runtime/ProtectedFunctionMapper.java
@@ -75,7 +75,7 @@ public final class ProtectedFunctionMapper extends javax.el.FunctionMapper
         } else {
             funcMapper = new ProtectedFunctionMapper();
         }
-        funcMapper.fnmap = new HashMap<String,Method>();
+        funcMapper.fnmap = new HashMap<>();
         return funcMapper;
     }
 

==================================================
