3e2719ff16f2aa32d5e147b1b1a3e07406246536
==================================================
Javadoc improvements
==================================================
Mark Thomas
==================================================
Mon Jan 4 23:18:17 2016 +0000
==================================================
SSLHostConfig.java
Javadoc improvements


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1722984 13f79535-47bb-0310-9956-ffa450edef68



==================================================
OpenSSLCipherConfigurationParser.java
index afcc22fc8e..c999737725 100644
--- a/java/org/apache/tomcat/util/net/SSLHostConfig.java
+++ b/java/org/apache/tomcat/util/net/SSLHostConfig.java
@@ -244,6 +244,12 @@ public class SSLHostConfig {
     }
 
 
+    /**
+     * Set the new cipher configuration. Note: Regardless of the format used to
+     * set the configuration, it is always stored in OpenSSL format.
+     *
+     * @param ciphersList The new cipher configuration in OpenSSL or JSSE format
+     */
     public void setCiphers(String ciphersList) {
         // Ciphers is stored in OpenSSL format. Convert the provided value if
         // necessary.
@@ -272,10 +278,12 @@ public class SSLHostConfig {
         }
         this.cipherList = null;
         this.jsseCipherNames = null;
-
     }
 
 
+    /**
+     * @return An OpenSSL cipher string for the current configuration.
+     */
     public String getCiphers() {
         return ciphers;
     }
@@ -289,6 +297,13 @@ public class SSLHostConfig {
     }
 
 
+    /**
+     * Obtain the list of JSSE cipher names for the current configuration.
+     * Ciphers included in the configuration but not supported by JSSE will be
+     * excluded from this list.
+     *
+     * @return A list of the JSSE cipher names
+     */
     public List<String> getJsseCipherNames() {
         if (jsseCipherNames == null) {
             jsseCipherNames = OpenSSLCipherConfigurationParser.convertForJSSE(getCipherList());

==================================================
