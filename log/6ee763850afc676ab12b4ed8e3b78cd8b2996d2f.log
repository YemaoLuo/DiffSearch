6ee763850afc676ab12b4ed8e3b78cd8b2996d2f
==================================================
First step of aligning request attribute support
==================================================
Mark Thomas
==================================================
Fri Aug 12 07:46:28 2016 +0000
==================================================
Request.java
First step of aligning request attribute support

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1756092 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Http11Processor.java
index e55b45681a..2b5fc41881 100644
--- a/java/org/apache/coyote/Request.java
+++ b/java/org/apache/coyote/Request.java
@@ -575,8 +575,11 @@ public final class Request {
         headers.recycle();
         serverNameMB.recycle();
         serverPort=-1;
+        localAddrMB.recycle();
         localNameMB.recycle();
         localPort = -1;
+        remoteAddrMB.recycle();
+        remoteHostMB.recycle();
         remotePort = -1;
         available = 0;
         sendfile = true;

==================================================
StreamProcessor.java
index 19ce5fd042..c4c1b1e376 100644
--- a/java/org/apache/coyote/http11/Http11Processor.java
+++ b/java/org/apache/coyote/http11/Http11Processor.java
@@ -716,49 +716,37 @@ public class Http11Processor extends AbstractProcessor {
 
         // Request attribute support
         case REQ_HOST_ADDR_ATTRIBUTE: {
-            if (socketWrapper == null) {
-                request.remoteAddr().recycle();
-            } else {
+            if (socketWrapper != null) {
                 request.remoteAddr().setString(socketWrapper.getRemoteAddr());
             }
             break;
         }
         case REQ_HOST_ATTRIBUTE: {
-            if (socketWrapper == null) {
-                request.remoteHost().recycle();
-            } else {
+            if (socketWrapper != null) {
                 request.remoteHost().setString(socketWrapper.getRemoteHost());
             }
             break;
         }
         case REQ_LOCALPORT_ATTRIBUTE: {
-            if (socketWrapper == null) {
-                request.setLocalPort(0);
-            } else {
+            if (socketWrapper != null) {
                 request.setLocalPort(socketWrapper.getLocalPort());
             }
             break;
         }
         case REQ_LOCAL_ADDR_ATTRIBUTE: {
-            if (socketWrapper == null) {
-                request.localAddr().recycle();
-            } else {
+            if (socketWrapper != null) {
                 request.localAddr().setString(socketWrapper.getLocalAddr());
             }
             break;
         }
         case REQ_LOCAL_NAME_ATTRIBUTE: {
-            if (socketWrapper == null) {
-                request.localName().recycle();
-            } else {
+            if (socketWrapper != null) {
                 request.localName().setString(socketWrapper.getLocalName());
             }
             break;
         }
         case REQ_REMOTEPORT_ATTRIBUTE: {
-            if (socketWrapper == null) {
-                request.setRemotePort(0);
-            } else {
+            if (socketWrapper != null) {
                 request.setRemotePort(socketWrapper.getRemotePort());
             }
             break;

==================================================
