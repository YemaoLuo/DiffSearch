707ab1c77f3bc189e1c3f29b641506db4c8bce37
==================================================
RFC 7230 states that clients should ignore reason phrases in HTTP/1.1 response messages. Since the reason phrase is optional, Tomcat no longer sends it.
==================================================
Mark Thomas
==================================================
Sun Sep 13 11:55:39 2015 +0000
==================================================
Constants.java
RFC 7230 states that clients should ignore reason phrases in HTTP/1.1 response messages. Since the reason phrase is optional, Tomcat no longer sends it.
As a result the system property <code>org.apache.coyote.USE_CUSTOM_STATUS_MSG_IN_HEADER</code> is no longer used and has been removed.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1702765 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AjpProcessor.java
index 75250a314f..dc77f33db2 100644
--- a/java/org/apache/coyote/Constants.java
+++ b/java/org/apache/coyote/Constants.java
@@ -55,14 +55,6 @@ public final class Constants {
         (System.getSecurityManager() != null);
 
 
-    /**
-     * If true, custom HTTP status messages will be used in headers.
-     */
-    public static final boolean USE_CUSTOM_STATUS_MSG_IN_HEADER =
-        Boolean.valueOf(System.getProperty(
-                "org.apache.coyote.USE_CUSTOM_STATUS_MSG_IN_HEADER",
-                "false")).booleanValue();
-
     /**
      * The request attribute that is set to the value of {@code Boolean.TRUE}
      * if connector processing this request supports use of sendfile.

==================================================
Http11OutputBuffer.java
index 72f9339b1c..e773234018 100644
--- a/java/org/apache/coyote/ajp/AjpProcessor.java
+++ b/java/org/apache/coyote/ajp/AjpProcessor.java
@@ -44,7 +44,6 @@ import org.apache.tomcat.util.ExceptionUtils;
 import org.apache.tomcat.util.buf.ByteChunk;
 import org.apache.tomcat.util.buf.HexUtils;
 import org.apache.tomcat.util.buf.MessageBytes;
-import org.apache.tomcat.util.http.HttpMessages;
 import org.apache.tomcat.util.http.MimeHeaders;
 import org.apache.tomcat.util.net.AbstractEndpoint;
 import org.apache.tomcat.util.net.AbstractEndpoint.Handler.SocketState;
@@ -1389,20 +1388,9 @@ public class AjpProcessor extends AbstractProcessor {
 
         // HTTP header contents
         responseMessage.appendInt(statusCode);
-        String message = null;
-        if (org.apache.coyote.Constants.USE_CUSTOM_STATUS_MSG_IN_HEADER &&
-                HttpMessages.isSafeInHttpHeader(response.getMessage())) {
-            message = response.getMessage();
-        }
-        if (message == null){
-            message = HttpMessages.getInstance(
-                    response.getLocale()).getMessage(response.getStatus());
-        }
-        if (message == null) {
-            // mod_jk + httpd 2.x fails with a null status message - bug 45026
-            message = Integer.toString(response.getStatus());
-        }
-        tmpMB.setString(message);
+        // Reason phrase is optional but mod_jk + httpd 2.x fails with a null
+        // reason phrase - bug 45026
+        tmpMB.setString(Integer.toString(response.getStatus()));
         responseMessage.appendBytes(tmpMB);
 
         // Special headers

==================================================
HttpMessages.java
index eaeebcf7b2..8386da05db 100644
--- a/java/org/apache/coyote/http11/Http11OutputBuffer.java
+++ b/java/org/apache/coyote/http11/Http11OutputBuffer.java
@@ -26,7 +26,6 @@ import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.buf.ByteChunk;
 import org.apache.tomcat.util.buf.MessageBytes;
-import org.apache.tomcat.util.http.HttpMessages;
 import org.apache.tomcat.util.net.SocketWrapperBase;
 import org.apache.tomcat.util.res.StringManager;
 
@@ -134,9 +133,6 @@ public class Http11OutputBuffer implements OutputBuffer {
         finished = false;
 
         outputStreamOutputBuffer = new SocketOutputBuffer();
-
-        // Cause loading of HttpMessages
-        HttpMessages.getInstance(response.getLocale()).getMessage(200);
     }
 
 
@@ -399,18 +395,9 @@ public class Http11OutputBuffer implements OutputBuffer {
 
         headerBuffer[pos++] = Constants.SP;
 
-        // Write message
-        String message = null;
-        if (org.apache.coyote.Constants.USE_CUSTOM_STATUS_MSG_IN_HEADER &&
-                HttpMessages.isSafeInHttpHeader(response.getMessage())) {
-            message = response.getMessage();
-        }
-        if (message == null) {
-            write(HttpMessages.getInstance(
-                    response.getLocale()).getMessage(status));
-        } else {
-            write(message);
-        }
+        // The reason phrase is optional but the space before it is not. Skip
+        // sending the reason phrase. Clients should ignore it (RFC 7230) and it
+        // just wastes bytes.
 
         headerBuffer[pos++] = Constants.CR;
         headerBuffer[pos++] = Constants.LF;

==================================================
