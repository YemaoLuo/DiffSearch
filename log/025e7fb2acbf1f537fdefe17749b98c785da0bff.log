025e7fb2acbf1f537fdefe17749b98c785da0bff
==================================================
Remove deprecated code from o.a.catalina.core
==================================================
Mark Emlyn
==================================================
Tue Oct 25 18:13:51 2011 +0000
==================================================
Container.java
Remove deprecated code from o.a.catalina.core

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1188841 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ApplicationContext.java
index 716f767037..138cb8b3ae 100644
--- a/java/org/apache/catalina/Container.java
+++ b/java/org/apache/catalina/Container.java
@@ -173,13 +173,6 @@ public interface Container extends Lifecycle {
     public void setManager(Manager manager);
 
 
-    /**
-     * Return an object which may be utilized for mapping to this component.
-     */
-    @Deprecated
-    public Object getMappingObject();
-
-
     /**
      * Return the JMX name associated with this container.
      */

==================================================
ApplicationHttpResponse.java
index f33050bf75..f1c3cec8a4 100644
--- a/java/org/apache/catalina/core/ApplicationContext.java
+++ b/java/org/apache/catalina/core/ApplicationContext.java
@@ -209,25 +209,9 @@ public class ApplicationContext
      */
     private boolean newServletContextListenerAllowed = true;
 
-    // --------------------------------------------------------- Public Methods
-
-
-    /**
-     * Return the resources object that is mapped to a specified path.
-     * The path must begin with a "/" and is interpreted as relative to the
-     * current context root.
-     */
-    @Deprecated
-    public DirContext getResources() {
-
-        return context.getResources();
-
-    }
-
 
     // ------------------------------------------------- ServletContext Methods
 
-
     /**
      * Return the value of the specified context attribute, if any;
      * otherwise return <code>null</code>.
@@ -1500,10 +1484,6 @@ public class ApplicationContext
         return this.context;
     }
 
-    @Deprecated
-    protected Map<String,String> getReadonlyAttributes() {
-        return this.readOnlyAttributes;
-    }
     /**
      * Clear all application-created attributes.
      */

==================================================
ApplicationResponse.java
index 291af092d0..c3fec04586 100644
--- a/java/org/apache/catalina/core/ApplicationHttpResponse.java
+++ b/java/org/apache/catalina/core/ApplicationHttpResponse.java
@@ -42,23 +42,8 @@ import javax.servlet.http.HttpServletResponseWrapper;
 
 class ApplicationHttpResponse extends HttpServletResponseWrapper {
 
-
     // ----------------------------------------------------------- Constructors
 
-
-    /**
-     * Construct a new wrapped response around the specified servlet response.
-     *
-     * @param response The servlet response being wrapped
-     */
-    @Deprecated
-    public ApplicationHttpResponse(HttpServletResponse response) {
-
-        this(response, false);
-
-    }
-
-
     /**
      * Construct a new wrapped response around the specified servlet response.
      *
@@ -349,17 +334,6 @@ class ApplicationHttpResponse extends HttpServletResponseWrapper {
 
     // -------------------------------------------------------- Package Methods
 
-    /**
-     * Return the included flag for this response.
-     */
-    @Deprecated
-    boolean isIncluded() {
-
-        return (this.included);
-
-    }
-
-
     /**
      * Set the included flag for this response.
      *
@@ -382,6 +356,4 @@ class ApplicationHttpResponse extends HttpServletResponseWrapper {
         super.setResponse(response);
 
     }
-
-
 }

==================================================
ContainerBase.java
index 3f88e12115..3085ac8ad4 100644
--- a/java/org/apache/catalina/core/ApplicationResponse.java
+++ b/java/org/apache/catalina/core/ApplicationResponse.java
@@ -40,23 +40,8 @@ import javax.servlet.ServletResponseWrapper;
 
 class ApplicationResponse extends ServletResponseWrapper {
 
-
     // ----------------------------------------------------------- Constructors
 
-
-    /**
-     * Construct a new wrapped response around the specified servlet response.
-     *
-     * @param response The servlet response being wrapped
-     */
-    @Deprecated
-    public ApplicationResponse(ServletResponse response) {
-
-        this(response, false);
-
-    }
-
-
     /**
      * Construct a new wrapped response around the specified servlet response.
      *
@@ -171,18 +156,6 @@ class ApplicationResponse extends ServletResponseWrapper {
 
     // -------------------------------------------------------- Package Methods
 
-
-    /**
-     * Return the included flag for this response.
-     */
-    @Deprecated
-    boolean isIncluded() {
-
-        return (this.included);
-
-    }
-
-
     /**
      * Set the included flag for this response.
      *
@@ -193,6 +166,4 @@ class ApplicationResponse extends ServletResponseWrapper {
         this.included = included;
 
     }
-
-
 }

==================================================
NamingContextListener.java
index 9ab06bb65e..9a73f3fff4 100644
--- a/java/org/apache/catalina/core/ContainerBase.java
+++ b/java/org/apache/catalina/core/ContainerBase.java
@@ -436,16 +436,6 @@ public abstract class ContainerBase extends LifecycleMBeanBase
     }
 
 
-    /**
-     * Return an object which may be utilized for mapping to this component.
-     */
-    @Deprecated
-    @Override
-    public Object getMappingObject() {
-        return this;
-    }
-
-
     /**
      * Return the Cluster with which this Container is associated.  If there is
      * no associated Cluster, return the Cluster associated with our parent
@@ -1369,13 +1359,13 @@ public abstract class ContainerBase extends LifecycleMBeanBase
                     // Ignore
                 }
                 if (!threadDone) {
-                    Container parent = (Container) getMappingObject();
                     ClassLoader cl =
                         Thread.currentThread().getContextClassLoader();
-                    if (parent.getLoader() != null) {
-                        cl = parent.getLoader().getClassLoader();
+                    Loader loader = getLoader();
+                    if (loader != null) {
+                        cl = loader.getClassLoader();
                     }
-                    processChildren(parent, cl);
+                    processChildren(ContainerBase.this, cl);
                 }
             }
         }

==================================================
StandardContext.java
index 8c8419a2b2..6a3786b59e 100644
--- a/java/org/apache/catalina/core/NamingContextListener.java
+++ b/java/org/apache/catalina/core/NamingContextListener.java
@@ -168,15 +168,6 @@ public class NamingContextListener
     }
 
 
-    /**
-     * Return the comp context.
-     */
-    @Deprecated
-    public javax.naming.Context getCompContext() {
-        return this.compCtx;
-    }
-
-
     /**
      * Return the env context.
      */
@@ -185,18 +176,8 @@ public class NamingContextListener
     }
 
 
-    /**
-     * Return the associated naming context.
-     */
-    @Deprecated
-    public NamingContext getNamingContext() {
-        return (this.namingContext);
-    }
-
-
     // ---------------------------------------------- LifecycleListener Methods
 
-
     /**
      * Acknowledge the occurrence of the specified event.
      *

==================================================
StandardWrapper.java
index 0e52b16cb6..7419bab0a0 100644
--- a/java/org/apache/catalina/core/StandardContext.java
+++ b/java/org/apache/catalina/core/StandardContext.java
@@ -309,12 +309,6 @@ public class StandardContext extends ContainerBase
     protected ApplicationContext context = null;
 
 
-    /**
-     * Compiler classpath to use.
-     */
-    private String compilerClasspath = null;
-
-
     /**
      * Should we attempt to use cookies for session id communication?
      */
@@ -638,12 +632,6 @@ public class StandardContext extends ContainerBase
     private boolean useNaming = true;
 
 
-    /**
-     * Filesystem based flag.
-     */
-    private boolean filesystemBased = false;
-
-
     /**
      * Name of the associated naming context.
      */
@@ -730,12 +718,6 @@ public class StandardContext extends ContainerBase
     private boolean tldNamespaceAware = Globals.STRICT_SERVLET_COMPLIANCE;
 
 
-    /**
-     * Should we save the configuration.
-     */
-    private boolean saveConfig = true;
-
-
     /**
      * The name to use for session cookies. <code>null</code> indicates that
      * the name is controlled by the application.
@@ -1266,18 +1248,6 @@ public class StandardContext extends ContainerBase
     }
 
 
-    /**
-     * Returns true if the resources associated with this context are
-     * filesystem based.
-     */
-    @Deprecated
-    public boolean isFilesystemBased() {
-
-        return (filesystemBased);
-
-    }
-
-
     /**
      * Return the set of initialized application event listener objects,
      * in the order they were specified in the web application deployment
@@ -1778,24 +1748,6 @@ public class StandardContext extends ContainerBase
     }
 
 
-    /**
-     * Return the compiler classpath.
-     */
-    @Deprecated
-    public String getCompilerClasspath(){
-        return compilerClasspath;
-    }
-
-
-    /**
-     * Set the compiler classpath.
-     */
-    @Deprecated
-    public void setCompilerClasspath(String compilerClasspath) {
-        this.compilerClasspath = compilerClasspath;
-    }
-
-
     /**
      * Set the display name of this web application.
      *
@@ -2245,17 +2197,6 @@ public class StandardContext extends ContainerBase
     }
 
 
-    /**
-     * Return the "replace welcome files" property.
-     */
-    @Deprecated
-    public boolean isReplaceWelcomeFiles() {
-
-        return (this.replaceWelcomeFiles);
-
-    }
-
-
     /**
      * Set the "replace welcome files" property.
      *
@@ -2469,7 +2410,6 @@ public class StandardContext extends ContainerBase
             ((BaseDirContext) resources).setAliases(getAliases());
         }
         if (resources instanceof FileDirContext) {
-            filesystemBased = true;
             ((FileDirContext) resources).setAllowLinking(isAllowLinking());
         }
         this.webappResources = resources;
@@ -2568,24 +2508,6 @@ public class StandardContext extends ContainerBase
     }
 
 
-    /**
-     * Save config ?
-     */
-    @Deprecated
-    public boolean isSaveConfig() {
-        return saveConfig;
-    }
-
-
-    /**
-     * Set save config flag.
-     */
-    @Deprecated
-    public void setSaveConfig(boolean saveConfig) {
-        this.saveConfig = saveConfig;
-    }
-
-
     /**
      * Return the clearReferencesStatic flag for this Context.
      */
@@ -3489,15 +3411,6 @@ public class StandardContext extends ContainerBase
     }
 
 
-    /**
-     * FIXME: Fooling introspection ...
-     */
-    @Deprecated
-    public Context findMappingObject() {
-        return (Context) getMappingObject();
-    }
-
-
     /**
      * Return the message destination with the specified name, if any;
      * otherwise, return <code>null</code>.
@@ -4830,7 +4743,6 @@ public class StandardContext extends ContainerBase
             ProxyDirContext proxyDirContext =
                 new ProxyDirContext(env, webappResources);
             if (webappResources instanceof FileDirContext) {
-                filesystemBased = true;
                 ((FileDirContext) webappResources).setAllowLinking
                     (isAllowLinking());
             }
@@ -6330,30 +6242,6 @@ public class StandardContext extends ContainerBase
 
     // ------------------------------------------------------------- Attributes
 
-
-    /**
-     * Return the naming resources associated with this web application.
-     */
-    @Deprecated
-    public javax.naming.directory.DirContext getStaticResources() {
-
-        return getResources();
-
-    }
-
-
-    /**
-     * Return the naming resources associated with this web application.
-     * FIXME: Fooling introspection ...
-     */
-    @Deprecated
-    public javax.naming.directory.DirContext findStaticResources() {
-
-        return getResources();
-
-    }
-
-
     /**
      * Return the naming resources associated with this web application.
      */
@@ -6473,12 +6361,6 @@ public class StandardContext extends ContainerBase
         return true;
     }
 
-    @Deprecated
-    public void startRecursive() throws LifecycleException {
-        // nothing to start recursive, the servlets will be started by load-on-startup
-        start();
-    }
-
     /**
      * The J2EE Server ObjectName this module is deployed on.
      */
@@ -6515,16 +6397,6 @@ public class StandardContext extends ContainerBase
         return startTime;
     }
 
-    @Deprecated
-    public boolean isEventProvider() {
-        return false;
-    }
-
-    @Deprecated
-    public boolean isStatisticsProvider() {
-        return false;
-    }
-
     private abstract static class RunnableWithLifecycleException
             implements Runnable {
 

==================================================
WebappLoader.java
index dff7eb741e..2d7f296d18 100644
--- a/java/org/apache/catalina/core/StandardWrapper.java
+++ b/java/org/apache/catalina/core/StandardWrapper.java
@@ -40,8 +40,6 @@ import javax.servlet.Servlet;
 import javax.servlet.ServletConfig;
 import javax.servlet.ServletContext;
 import javax.servlet.ServletException;
-import javax.servlet.ServletRequest;
-import javax.servlet.ServletResponse;
 import javax.servlet.ServletSecurityElement;
 import javax.servlet.SingleThreadModel;
 import javax.servlet.UnavailableException;
@@ -278,16 +276,6 @@ public class StandardWrapper extends ContainerBase
     protected static Class<?>[] classType = new Class[]{ServletConfig.class};
 
 
-    /**
-     * Static class array used when the SecurityManager is turned on and
-     * <code>Servlet.service</code>  is invoked.
-     */
-    @Deprecated
-    protected static Class<?>[] classTypeUsedInService = new Class[]{
-                                                         ServletRequest.class,
-                                                         ServletResponse.class};
-
-
     // ------------------------------------------------------------- Properties
 
     @Override
@@ -994,15 +982,6 @@ public class StandardWrapper extends ContainerBase
     }
 
 
-    /**
-     * FIXME: Fooling introspection ...
-     */
-    @Deprecated
-    public Wrapper findMappingObject() {
-        return (Wrapper) getMappingObject();
-    }
-
-
     /**
      * Load and initialize an instance of this servlet, if there is not already
      * at least one initialized instance.  This can be used, for example, to
@@ -1539,47 +1518,22 @@ public class StandardWrapper extends ContainerBase
         return swValve.getProcessingTime();
     }
 
-    @Deprecated
-    public void setProcessingTime(long processingTime) {
-        swValve.setProcessingTime(processingTime);
-    }
-
     public long getMaxTime() {
         return swValve.getMaxTime();
     }
 
-    @Deprecated
-    public void setMaxTime(long maxTime) {
-        swValve.setMaxTime(maxTime);
-    }
-
     public long getMinTime() {
         return swValve.getMinTime();
     }
 
-    @Deprecated
-    public void setMinTime(long minTime) {
-        swValve.setMinTime(minTime);
-    }
-
     public int getRequestCount() {
         return swValve.getRequestCount();
     }
 
-    @Deprecated
-    public void setRequestCount(int requestCount) {
-        swValve.setRequestCount(requestCount);
-    }
-
     public int getErrorCount() {
         return swValve.getErrorCount();
     }
 
-    @Deprecated
-    public void setErrorCount(int errorCount) {
-           swValve.setErrorCount(errorCount);
-    }
-
     /**
      * Increment the error count used for monitoring.
      */
@@ -1592,11 +1546,6 @@ public class StandardWrapper extends ContainerBase
         return loadTime;
     }
 
-    @Deprecated
-    public void setLoadTime(long loadTime) {
-        this.loadTime = loadTime;
-    }
-
     public int getClassLoadTime() {
         return classLoadTime;
     }
@@ -1904,23 +1853,4 @@ public class StandardWrapper extends ContainerBase
         throws ListenerNotFoundException {
         broadcaster.removeNotificationListener(listener);
     }
-
-
-     // ------------------------------------------------------------- Attributes
-
-
-    @Deprecated
-    public boolean isEventProvider() {
-        return false;
-    }
-
-    @Deprecated
-    public boolean isStateManageable() {
-        return false;
-    }
-
-    @Deprecated
-    public boolean isStatisticsProvider() {
-        return false;
-    }
 }

==================================================
