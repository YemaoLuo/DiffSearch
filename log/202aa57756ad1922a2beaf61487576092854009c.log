202aa57756ad1922a2beaf61487576092854009c
==================================================
Add in getters
==================================================
Filip Hanik
==================================================
Thu May 10 15:24:51 2007 +0000
==================================================
CometEvent.java
Add in getters
Also change name from pluralis to CometOperation


git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk@536888 13f79535-47bb-0310-9956-ffa450edef68



==================================================
CometEventImpl.java
index 362831e453..0eb8386286 100644
--- a/java/org/apache/catalina/CometEvent.java
+++ b/java/org/apache/catalina/CometEvent.java
@@ -183,13 +183,20 @@ public interface CometEvent {
     public void configure(CometConfiguration... options)
         throws IOException, IllegalStateException;
     
+    /**
+     * Returns the configuration for this Comet connection
+     * @return CometConfiguration[]
+     * @see #configure(CometConfiguration...)
+     */
+    public CometConfiguration[] getConfiguration();
+    
     /**
      * OP_CALLBACK - receive a CALLBACK event from the container
      * OP_READ - receive a READ event when the connection has data to be read
      * OP_WRITE - receive a WRITE event when the connection is able to receive data to be written
      * @see #register(CometOperations)
      */
-    public enum CometOperations {OP_CALLBACK, OP_READ, OP_WRITE};
+    public enum CometOperation {OP_CALLBACK, OP_READ, OP_WRITE};
     
     /**
      * Registers the Comet connection with the container for IO notifications.
@@ -199,9 +206,17 @@ public interface CometEvent {
      * @throws IllegalStateException - if you are trying to register with a socket that already is registered
      * or if the operation you are trying to register is invalid.
      */
-    public void register(CometOperations... operations)
+    public void register(CometOperation... operations)
         throws IOException, IllegalStateException;
     
+    /**
+     * Returns what the current IO notifications that the Comet
+     * connection is registered for.
+     * @return CometOperations[]
+     * @see #register(CometOperations...)
+     */
+    public CometOperation[] getRegisteredOps();
+    
     /**
      * Returns true if the Comet connection is blocking or non blocking and you can write
      * without blocking data to the response

==================================================
