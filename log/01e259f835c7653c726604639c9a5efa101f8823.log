01e259f835c7653c726604639c9a5efa101f8823
==================================================
Extract common test code into a single Tester class
==================================================
Mark Thomas
==================================================
Wed Jan 13 18:23:08 2016 +0000
==================================================
TestWsSubprotocols.java
Extract common test code into a single Tester class

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1724475 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TesterFirehoseServer.java
index 2d6086958d..35a71677d4 100644
--- a/test/org/apache/tomcat/websocket/TestWsSubprotocols.java
+++ b/test/org/apache/tomcat/websocket/TestWsSubprotocols.java
@@ -20,15 +20,12 @@ import java.net.URI;
 import java.util.Arrays;
 import java.util.List;
 
-import javax.servlet.ServletContextEvent;
 import javax.websocket.ClientEndpointConfig;
 import javax.websocket.ContainerProvider;
-import javax.websocket.DeploymentException;
 import javax.websocket.EndpointConfig;
 import javax.websocket.OnOpen;
 import javax.websocket.Session;
 import javax.websocket.WebSocketContainer;
-import javax.websocket.server.ServerContainer;
 import javax.websocket.server.ServerEndpoint;
 import javax.websocket.server.ServerEndpointConfig;
 
@@ -41,8 +38,7 @@ import org.apache.catalina.servlets.DefaultServlet;
 import org.apache.catalina.startup.Tomcat;
 import org.apache.catalina.startup.TomcatBaseTest;
 import org.apache.tomcat.websocket.TesterMessageCountClient.TesterProgrammaticEndpoint;
-import org.apache.tomcat.websocket.server.Constants;
-import org.apache.tomcat.websocket.server.WsContextListener;
+import org.apache.tomcat.websocket.server.TesterEndpointConfig;
 
 public class TestWsSubprotocols extends TomcatBaseTest {
 
@@ -115,18 +111,11 @@ public class TestWsSubprotocols extends TomcatBaseTest {
 
     }
 
-    public static class Config extends WsContextListener {
+    public static class Config extends TesterEndpointConfig {
+
         @Override
-        public void contextInitialized(ServletContextEvent sce) {
-            super.contextInitialized(sce);
-            ServerContainer sc = (ServerContainer) sce.getServletContext()
-                    .getAttribute(Constants.
-                            SERVER_CONTAINER_SERVLET_CONTEXT_ATTRIBUTE);
-            try {
-                sc.addEndpoint(SubProtocolsEndpoint.class);
-            } catch (DeploymentException e) {
-                throw new IllegalStateException(e);
-            }
+        protected Class<?> getEndpointClass() {
+            return SubProtocolsEndpoint.class;
         }
     }
 }

==================================================
TesterUtil.java
index c7e7c4a2df..8b4b1eff5a 100644
--- a/test/org/apache/tomcat/websocket/TesterFirehoseServer.java
+++ b/test/org/apache/tomcat/websocket/TesterFirehoseServer.java
@@ -19,19 +19,15 @@ package org.apache.tomcat.websocket;
 import java.io.IOException;
 import java.util.concurrent.atomic.AtomicInteger;
 
-import javax.servlet.ServletContextEvent;
-import javax.websocket.DeploymentException;
 import javax.websocket.OnClose;
 import javax.websocket.OnError;
 import javax.websocket.OnMessage;
 import javax.websocket.OnOpen;
 import javax.websocket.RemoteEndpoint.Basic;
 import javax.websocket.Session;
-import javax.websocket.server.ServerContainer;
 import javax.websocket.server.ServerEndpoint;
 
-import org.apache.tomcat.websocket.server.Constants;
-import org.apache.tomcat.websocket.server.WsContextListener;
+import org.apache.tomcat.websocket.server.TesterEndpointConfig;
 
 /**
  * Sends {@link #MESSAGE_COUNT} messages of size {@link #MESSAGE_SIZE} bytes as
@@ -54,21 +50,13 @@ public class TesterFirehoseServer {
     }
 
 
-    public static class Config extends WsContextListener {
+    public static class Config extends TesterEndpointConfig {
 
         public static final String PATH = "/firehose";
 
         @Override
-        public void contextInitialized(ServletContextEvent sce) {
-            super.contextInitialized(sce);
-            ServerContainer sc =
-                    (ServerContainer) sce.getServletContext().getAttribute(
-                            Constants.SERVER_CONTAINER_SERVLET_CONTEXT_ATTRIBUTE);
-            try {
-                sc.addEndpoint(Endpoint.class);
-            } catch (DeploymentException e) {
-                throw new IllegalStateException(e);
-            }
+        protected Class<?> getEndpointClass() {
+            return Endpoint.class;
         }
     }
 

==================================================
TestClose.java
index 21c11bb460..d3611a0d6e 100644
--- a/test/org/apache/tomcat/websocket/pojo/TesterUtil.java
+++ b/test/org/apache/tomcat/websocket/pojo/TesterUtil.java
@@ -16,18 +16,14 @@
  */
 package org.apache.tomcat.websocket.pojo;
 
-import javax.servlet.ServletContextEvent;
 import javax.websocket.ClientEndpoint;
-import javax.websocket.DeploymentException;
-import javax.websocket.server.ServerContainer;
 import javax.websocket.server.ServerEndpointConfig.Configurator;
 
-import org.apache.tomcat.websocket.server.Constants;
-import org.apache.tomcat.websocket.server.WsContextListener;
+import org.apache.tomcat.websocket.server.TesterEndpointConfig;
 
 public class TesterUtil {
 
-    public static class ServerConfigListener extends WsContextListener {
+    public static class ServerConfigListener extends TesterEndpointConfig {
 
         private static Class<?> pojoClazz;
 
@@ -35,17 +31,10 @@ public class TesterUtil {
             ServerConfigListener.pojoClazz = pojoClazz;
         }
 
+
         @Override
-        public void contextInitialized(ServletContextEvent sce) {
-            super.contextInitialized(sce);
-            ServerContainer sc =
-                    (ServerContainer) sce.getServletContext().getAttribute(
-                            Constants.SERVER_CONTAINER_SERVLET_CONTEXT_ATTRIBUTE);
-            try {
-                sc.addEndpoint(pojoClazz);
-            } catch (DeploymentException e) {
-                throw new IllegalStateException(e);
-            }
+        protected Class<?> getEndpointClass() {
+            return pojoClazz;
         }
     }
 

==================================================
TestWsRemoteEndpointImplServer.java
index e6898ca8b0..1474d03ac7 100644
--- a/test/org/apache/tomcat/websocket/server/TestClose.java
+++ b/test/org/apache/tomcat/websocket/server/TestClose.java
@@ -22,17 +22,14 @@ import java.util.Set;
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.TimeUnit;
 
-import javax.servlet.ServletContextEvent;
 import javax.websocket.CloseReason;
 import javax.websocket.CloseReason.CloseCode;
 import javax.websocket.CloseReason.CloseCodes;
-import javax.websocket.DeploymentException;
 import javax.websocket.OnClose;
 import javax.websocket.OnError;
 import javax.websocket.OnMessage;
 import javax.websocket.OnOpen;
 import javax.websocket.Session;
-import javax.websocket.server.ServerContainer;
 import javax.websocket.server.ServerEndpointConfig;
 
 import org.junit.Assert;
@@ -350,29 +347,13 @@ public class TestClose extends TomcatBaseTest {
     }
 
 
-    public abstract static class BaseEndpointConfig extends WsContextListener {
+    public abstract static class BaseEndpointConfig extends TesterEndpointConfig {
 
         public static final String PATH = "/test";
 
-        protected abstract Class<?> getEndpointClass();
-
         @Override
-        public void contextInitialized(ServletContextEvent sce) {
-            super.contextInitialized(sce);
-
-            ServerContainer sc = (ServerContainer) sce
-                    .getServletContext()
-                    .getAttribute(
-                            Constants.SERVER_CONTAINER_SERVLET_CONTEXT_ATTRIBUTE);
-
-            ServerEndpointConfig sec = ServerEndpointConfig.Builder.create(
-                    getEndpointClass(), PATH).build();
-
-            try {
-                sc.addEndpoint(sec);
-            } catch (DeploymentException e) {
-                throw new RuntimeException(e);
-            }
+        protected ServerEndpointConfig getServerEndpointConfig() {
+            return ServerEndpointConfig.Builder.create(getEndpointClass(), PATH).build();
         }
     }
 }

==================================================
TestWsServerContainer.java
index 8d7331218e..366f61e363 100644
--- a/test/org/apache/tomcat/websocket/server/TestWsRemoteEndpointImplServer.java
+++ b/test/org/apache/tomcat/websocket/server/TestWsRemoteEndpointImplServer.java
@@ -23,10 +23,8 @@ import java.util.List;
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.Executors;
 
-import javax.servlet.ServletContextEvent;
 import javax.websocket.CloseReason;
 import javax.websocket.ContainerProvider;
-import javax.websocket.DeploymentException;
 import javax.websocket.EncodeException;
 import javax.websocket.Encoder;
 import javax.websocket.EndpointConfig;
@@ -36,7 +34,6 @@ import javax.websocket.OnMessage;
 import javax.websocket.OnOpen;
 import javax.websocket.Session;
 import javax.websocket.WebSocketContainer;
-import javax.websocket.server.ServerContainer;
 import javax.websocket.server.ServerEndpointConfig;
 
 import org.junit.Ignore;
@@ -91,26 +88,17 @@ public class TestWsRemoteEndpointImplServer extends TomcatBaseTest {
         session.close();
     }
 
-    public static class Bug58624Config extends WsContextListener {
+    public static class Bug58624Config extends TesterEndpointConfig {
 
         public static final String PATH = "/bug58624";
-        @Override
-        public void contextInitialized(ServletContextEvent sce) {
-            super.contextInitialized(sce);
 
-            ServerContainer sc = (ServerContainer) sce.getServletContext().getAttribute(
-                    Constants.SERVER_CONTAINER_SERVLET_CONTEXT_ATTRIBUTE);
 
+        @Override
+        protected ServerEndpointConfig getServerEndpointConfig() {
             List<Class<? extends Encoder>> encoders = new ArrayList<>();
             encoders.add(Bug58624Encoder.class);
-            ServerEndpointConfig sec = ServerEndpointConfig.Builder.create(
+            return ServerEndpointConfig.Builder.create(
                     Bug58624Endpoint.class, PATH).encoders(encoders).build();
-
-            try {
-                sc.addEndpoint(sec);
-            } catch (DeploymentException e) {
-                throw new RuntimeException(e);
-            }
         }
     }
 

==================================================
TesterEndpointConfig.java
index 8c804680c6..f716e87c27 100644
--- a/test/org/apache/tomcat/websocket/server/TestWsServerContainer.java
+++ b/test/org/apache/tomcat/websocket/server/TestWsServerContainer.java
@@ -21,12 +21,9 @@ import java.util.Queue;
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.TimeUnit;
 
-import javax.servlet.ServletContextEvent;
 import javax.websocket.ContainerProvider;
-import javax.websocket.DeploymentException;
 import javax.websocket.Session;
 import javax.websocket.WebSocketContainer;
-import javax.websocket.server.ServerContainer;
 import javax.websocket.server.ServerEndpointConfig;
 
 import org.junit.Assert;
@@ -97,24 +94,12 @@ public class TestWsServerContainer extends TomcatBaseTest {
     }
 
 
-    public static class Bug54807Config extends WsContextListener {
+    public static class Bug54807Config extends TesterEndpointConfig {
 
         @Override
-        public void contextInitialized(ServletContextEvent sce) {
-            super.contextInitialized(sce);
-
-            ServerContainer sc =
-                    (ServerContainer) sce.getServletContext().getAttribute(
-                            Constants.SERVER_CONTAINER_SERVLET_CONTEXT_ATTRIBUTE);
-
-            ServerEndpointConfig sec = ServerEndpointConfig.Builder.create(
+        protected ServerEndpointConfig getServerEndpointConfig() {
+            return ServerEndpointConfig.Builder.create(
                     TesterEchoServer.Basic.class, "/{param}").build();
-
-            try {
-                sc.addEndpoint(sec);
-            } catch (DeploymentException e) {
-                throw new RuntimeException(e);
-            }
         }
     }
 

==================================================
