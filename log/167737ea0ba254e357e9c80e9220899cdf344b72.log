167737ea0ba254e357e9c80e9220899cdf344b72
==================================================
Clean-up - UCDetector use of final
==================================================
Mark Emlyn
==================================================
Tue Sep 4 16:06:53 2012 +0000
==================================================
JspCalendar.java
Clean-up - UCDetector use of final

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1380715 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TableBean.java
index 96da046b76..f9cf20f05c 100644
--- a/webapps/examples/WEB-INF/classes/cal/JspCalendar.java
+++ b/webapps/examples/WEB-INF/classes/cal/JspCalendar.java
@@ -21,7 +21,7 @@ import java.util.Calendar;
 import java.util.Date;
 
 public class JspCalendar {
-    Calendar  calendar = null;
+    final Calendar  calendar;
 
     public JspCalendar() {
         calendar = Calendar.getInstance();

==================================================
ChatServlet.java
index fcdf3ff83a..483bd93dd7 100644
--- a/webapps/examples/WEB-INF/classes/cal/TableBean.java
+++ b/webapps/examples/WEB-INF/classes/cal/TableBean.java
@@ -22,8 +22,8 @@ import javax.servlet.http.HttpServletRequest;
 
 public class TableBean {
 
-    Hashtable<String, Entries> table;
-    JspCalendar JspCal;
+    final Hashtable<String, Entries> table;
+    final JspCalendar JspCal;
     Entries entries;
     String date;
     String name = null;

==================================================
CompressionFilter.java
index 42b82fd6c5..7bec393cbc 100644
--- a/webapps/examples/WEB-INF/classes/chat/ChatServlet.java
+++ b/webapps/examples/WEB-INF/classes/chat/ChatServlet.java
@@ -43,7 +43,8 @@ public class ChatServlet
 
     private static final String CHARSET = "UTF-8";
 
-    protected ArrayList<HttpServletResponse> connections = new ArrayList<>();
+    protected final ArrayList<HttpServletResponse> connections =
+            new ArrayList<>();
     protected transient MessageSender messageSender = null;
 
     @Override
@@ -192,7 +193,7 @@ public class ChatServlet
     public class MessageSender implements Runnable {
 
         protected boolean running = true;
-        protected ArrayList<String> messages = new ArrayList<>();
+        protected final ArrayList<String> messages = new ArrayList<>();
 
         public MessageSender() {
             // Default contructor

==================================================
CompressionResponseStream.java
index cdce72483f..effec593a2 100644
--- a/webapps/examples/WEB-INF/classes/compressionFilters/CompressionFilter.java
+++ b/webapps/examples/WEB-INF/classes/compressionFilters/CompressionFilter.java
@@ -49,7 +49,7 @@ public class CompressionFilter implements Filter {
     /**
      * Minimal reasonable threshold.
      */
-    private int minThreshold = 128;
+    private final int minThreshold = 128;
 
     /**
      * The threshold number to compress.
@@ -59,7 +59,7 @@ public class CompressionFilter implements Filter {
     /**
      * Minimal reasonable buffer.
      */
-    private int minBuffer = 8192;  // 8KB is what tomcat would use by default anyway
+    private final int minBuffer = 8192;  // 8KB is what tomcat would use by default anyway
 
     /**
      * The compression buffer size to avoid chunking.

==================================================
CompressionServletResponseWrapper.java
index 65d80354bd..1df3f0293d 100644
--- a/webapps/examples/WEB-INF/classes/compressionFilters/CompressionResponseStream.java
+++ b/webapps/examples/WEB-INF/classes/compressionFilters/CompressionResponseStream.java
@@ -99,17 +99,17 @@ public class CompressionResponseStream extends ServletOutputStream {
      * The content length past which we will not write, or -1 if there is
      * no defined content length.
      */
-    protected int length = -1;
+    protected final int length = -1;
 
     /**
      * The response with which this servlet output stream is associated.
      */
-    protected CompressionServletResponseWrapper response = null;
+    protected final CompressionServletResponseWrapper response;
 
     /**
      * The underlying servlet output stream to which we should write data.
      */
-    protected ServletOutputStream output = null;
+    protected final ServletOutputStream output;
 
 
     // --------------------------------------------------------- Public Methods

==================================================
