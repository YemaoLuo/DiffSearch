fdc4c79b4747b3560f4f16268fbe021296e5e929
==================================================
Fix OpenSSL version with the actual library version
==================================================
remm remm@apache.org
==================================================
Thu Nov 18 12:49:34 2021 +0100
==================================================
OpenSSLContext.java
index 8775c523c5..9256996da2 100644
--- a/modules/openssl-java17/openssl-tomcat.conf
+++ b/modules/openssl-java17/openssl-tomcat.conf
@@ -61,6 +61,8 @@
 --include-function CRYPTO_free                         # header: /usr/include/openssl/crypto.h
 --include-function FIPS_mode                           # header: /usr/include/openssl/crypto.h
 --include-function FIPS_mode_set                       # header: /usr/include/openssl/crypto.h
+--include-function OpenSSL_version                     # header: /usr/include/openssl/crypto.h
+--include-function OpenSSL_version_num                 # header: /usr/include/openssl/crypto.h
 --include-macro OPENSSL_INIT_ENGINE_ALL_BUILTIN        # header: /usr/include/openssl/crypto.h
 
 #### Extracted from: /usr/include/openssl/dh.h
@@ -133,13 +135,6 @@
 --include-macro OPENSSL_LINE          # header: /usr/include/openssl/opensslconf-x86_64.h
 --include-macro OPENSSL_MIN_API       # header: /usr/include/openssl/opensslconf-x86_64.h
 
-#### Extracted from: /usr/include/openssl/opensslv.h
-
---include-macro OPENSSL_VERSION_NUMBER    # header: /usr/include/openssl/opensslv.h
---include-macro OPENSSL_VERSION_TEXT      # header: /usr/include/openssl/opensslv.h
---include-macro SHLIB_VERSION_HISTORY     # header: /usr/include/openssl/opensslv.h
---include-macro SHLIB_VERSION_NUMBER      # header: /usr/include/openssl/opensslv.h
-
 #### Extracted from: /usr/include/openssl/pem.h
 
 --include-function PEM_read_bio_DHparams                # header: /usr/include/openssl/pem.h
@@ -287,11 +282,6 @@
 --include-macro SSL_SENT_SHUTDOWN                                # header: /usr/include/openssl/ssl.h
 --include-macro SSL_SESS_CACHE_OFF                               # header: /usr/include/openssl/ssl.h
 --include-macro SSL_SESS_CACHE_SERVER                            # header: /usr/include/openssl/ssl.h
---include-macro SSL_TXT_DH                                       # header: /usr/include/openssl/ssl.h
---include-macro SSL_TXT_DSS                                      # header: /usr/include/openssl/ssl.h
---include-macro SSL_TXT_ECDH                                     # header: /usr/include/openssl/ssl.h
---include-macro SSL_TXT_ECDSA                                    # header: /usr/include/openssl/ssl.h
---include-macro SSL_TXT_RSA                                      # header: /usr/include/openssl/ssl.h
 --include-macro SSL_VERIFY_FAIL_IF_NO_PEER_CERT                  # header: /usr/include/openssl/ssl.h
 --include-macro SSL_VERIFY_NONE                                  # header: /usr/include/openssl/ssl.h
 --include-macro SSL_VERIFY_PEER                                  # header: /usr/include/openssl/ssl.h

==================================================
OpenSSLLifecycleListener.java
index 14957c9fd0..c5def28703 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/net/openssl/panama/OpenSSLContext.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/net/openssl/panama/OpenSSLContext.java
@@ -947,12 +947,12 @@ public class OpenSSLContext implements org.apache.tomcat.util.net.SSLContext {
     //private static final int SSL_aGOST01 = 200;
     //private static final int SSL_aSRP = 400;
 
-    private static final String SSL_TXT_RSA = CLinker.toJavaString(SSL_TXT_RSA());
-    private static final String SSL_TXT_DH = CLinker.toJavaString(SSL_TXT_DH());
-    private static final String SSL_TXT_DSS = CLinker.toJavaString(SSL_TXT_DSS());
+    private static final String SSL_TXT_RSA = "RSA";
+    private static final String SSL_TXT_DH = "DH";
+    private static final String SSL_TXT_DSS = "DSS";
     private static final String SSL_TXT_KRB5 = "KRB5";
-    private static final String SSL_TXT_ECDH = CLinker.toJavaString(SSL_TXT_ECDH());
-    private static final String SSL_TXT_ECDSA = CLinker.toJavaString(SSL_TXT_ECDSA());
+    private static final String SSL_TXT_ECDH = "ECDH";
+    private static final String SSL_TXT_ECDSA = "ECDSA";
 
     private static String getCipherAuthenticationMethod(int auth, int kx) {
         switch (kx) {

==================================================
SSL_set_info_callback$cb.java
index fa6336b0bf..a4541f1958 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/net/openssl/panama/OpenSSLLifecycleListener.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/net/openssl/panama/OpenSSLLifecycleListener.java
@@ -265,8 +265,7 @@ public class OpenSSLLifecycleListener implements LifecycleListener {
             }
         }
 
-        // FIXME: OPENSSL_VERSION_TEXT is actually hardcoded by jextract so this is not useful
-        log.info(sm.getString("listener.initializedOpenSSL", new String(OPENSSL_VERSION_TEXT().toByteArray())));
+        log.info(sm.getString("listener.initializedOpenSSL", CLinker.toJavaString(OpenSSL_version(0))));
         OpenSSLStatus.setAvailable(true);
     }
 

==================================================
constants$0.java
index e6b9e71a90..de4072434c 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/SSL_set_info_callback$cb.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/SSL_set_info_callback$cb.java
@@ -36,7 +36,7 @@ public interface SSL_set_info_callback$cb {
     static SSL_set_info_callback$cb ofAddress(MemoryAddress addr) {
         return (jdk.incubator.foreign.MemoryAddress x0, int x1, int x2) -> {
             try {
-                constants$20.SSL_set_info_callback$cb$MH.invokeExact((Addressable)addr, x0, x1, x2);
+                constants$21.SSL_set_info_callback$cb$MH.invokeExact((Addressable)addr, x0, x1, x2);
             } catch (Throwable ex$) {
                 throw new AssertionError("should not reach here", ex$);
             }

==================================================
constants$1.java
index 41a70fdf38..7f39adddc9 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$0.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$0.java
@@ -43,6 +43,20 @@ class constants$0 {
         "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
         constants$0.OPENSSL_sk_value$FUNC, false
     );
+    static final FunctionDescriptor OpenSSL_version_num$FUNC = FunctionDescriptor.of(C_LONG);
+    static final MethodHandle OpenSSL_version_num$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "OpenSSL_version_num",
+        "()J",
+        constants$0.OpenSSL_version_num$FUNC, false
+    );
+    static final FunctionDescriptor OpenSSL_version$FUNC = FunctionDescriptor.of(C_POINTER,
+        C_INT
+    );
+    static final MethodHandle OpenSSL_version$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "OpenSSL_version",
+        "(I)Ljdk/incubator/foreign/MemoryAddress;",
+        constants$0.OpenSSL_version$FUNC, false
+    );
     static final FunctionDescriptor CRYPTO_free$FUNC = FunctionDescriptor.ofVoid(
         C_POINTER,
         C_POINTER,
@@ -59,22 +73,6 @@ class constants$0 {
         "()I",
         constants$0.FIPS_mode$FUNC, false
     );
-    static final FunctionDescriptor FIPS_mode_set$FUNC = FunctionDescriptor.of(C_INT,
-        C_INT
-    );
-    static final MethodHandle FIPS_mode_set$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "FIPS_mode_set",
-        "(I)I",
-        constants$0.FIPS_mode_set$FUNC, false
-    );
-    static final FunctionDescriptor BIO_ctrl_pending$FUNC = FunctionDescriptor.of(C_LONG,
-        C_POINTER
-    );
-    static final MethodHandle BIO_ctrl_pending$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "BIO_ctrl_pending",
-        "(Ljdk/incubator/foreign/MemoryAddress;)J",
-        constants$0.BIO_ctrl_pending$FUNC, false
-    );
 }
 
 

==================================================
constants$10.java
index 76ca2a364e..29f4dc5ac3 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$1.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$1.java
@@ -26,6 +26,22 @@ import jdk.incubator.foreign.*;
 import static jdk.incubator.foreign.CLinker.*;
 class constants$1 {
 
+    static final FunctionDescriptor FIPS_mode_set$FUNC = FunctionDescriptor.of(C_INT,
+        C_INT
+    );
+    static final MethodHandle FIPS_mode_set$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "FIPS_mode_set",
+        "(I)I",
+        constants$1.FIPS_mode_set$FUNC, false
+    );
+    static final FunctionDescriptor BIO_ctrl_pending$FUNC = FunctionDescriptor.of(C_LONG,
+        C_POINTER
+    );
+    static final MethodHandle BIO_ctrl_pending$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "BIO_ctrl_pending",
+        "(Ljdk/incubator/foreign/MemoryAddress;)J",
+        constants$1.BIO_ctrl_pending$FUNC, false
+    );
     static final FunctionDescriptor BIO_s_file$FUNC = FunctionDescriptor.of(C_POINTER);
     static final MethodHandle BIO_s_file$MH = RuntimeHelper.downcallHandle(
         openssl_h.LIBRARIES, "BIO_s_file",
@@ -57,26 +73,6 @@ class constants$1 {
         "(Ljdk/incubator/foreign/MemoryAddress;)I",
         constants$1.BIO_free$FUNC, false
     );
-    static final FunctionDescriptor BIO_read$FUNC = FunctionDescriptor.of(C_INT,
-        C_POINTER,
-        C_POINTER,
-        C_INT
-    );
-    static final MethodHandle BIO_read$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "BIO_read",
-        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
-        constants$1.BIO_read$FUNC, false
-    );
-    static final FunctionDescriptor BIO_write$FUNC = FunctionDescriptor.of(C_INT,
-        C_POINTER,
-        C_POINTER,
-        C_INT
-    );
-    static final MethodHandle BIO_write$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "BIO_write",
-        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
-        constants$1.BIO_write$FUNC, false
-    );
 }
 
 

==================================================
constants$11.java
index 97d0236408..e7c2c7292d 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$10.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$10.java
@@ -26,6 +26,28 @@ import jdk.incubator.foreign.*;
 import static jdk.incubator.foreign.CLinker.*;
 class constants$10 {
 
+    static final FunctionDescriptor PEM_read_bio_DHparams$FUNC = FunctionDescriptor.of(C_POINTER,
+        C_POINTER,
+        C_POINTER,
+        C_POINTER,
+        C_POINTER
+    );
+    static final MethodHandle PEM_read_bio_DHparams$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "PEM_read_bio_DHparams",
+        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
+        constants$10.PEM_read_bio_DHparams$FUNC, false
+    );
+    static final FunctionDescriptor PEM_read_bio_PrivateKey$FUNC = FunctionDescriptor.of(C_POINTER,
+        C_POINTER,
+        C_POINTER,
+        C_POINTER,
+        C_POINTER
+    );
+    static final MethodHandle PEM_read_bio_PrivateKey$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "PEM_read_bio_PrivateKey",
+        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
+        constants$10.PEM_read_bio_PrivateKey$FUNC, false
+    );
     static final FunctionDescriptor SSL_CTX_get_options$FUNC = FunctionDescriptor.of(C_LONG,
         C_POINTER
     );
@@ -60,25 +82,6 @@ class constants$10 {
         "(Ljdk/incubator/foreign/MemoryAddress;J)J",
         constants$10.SSL_CTX_set_options$FUNC, false
     );
-    static final FunctionDescriptor SSL_set_options$FUNC = FunctionDescriptor.of(C_LONG,
-        C_POINTER,
-        C_LONG
-    );
-    static final MethodHandle SSL_set_options$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "SSL_set_options",
-        "(Ljdk/incubator/foreign/MemoryAddress;J)J",
-        constants$10.SSL_set_options$FUNC, false
-    );
-    static final FunctionDescriptor SSL_get0_next_proto_negotiated$FUNC = FunctionDescriptor.ofVoid(
-        C_POINTER,
-        C_POINTER,
-        C_POINTER
-    );
-    static final MethodHandle SSL_get0_next_proto_negotiated$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "SSL_get0_next_proto_negotiated",
-        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
-        constants$10.SSL_get0_next_proto_negotiated$FUNC, false
-    );
 }
 
 

==================================================
constants$12.java
index 32d35d09c7..051943ca6c 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$11.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$11.java
@@ -26,6 +26,25 @@ import jdk.incubator.foreign.*;
 import static jdk.incubator.foreign.CLinker.*;
 class constants$11 {
 
+    static final FunctionDescriptor SSL_set_options$FUNC = FunctionDescriptor.of(C_LONG,
+        C_POINTER,
+        C_LONG
+    );
+    static final MethodHandle SSL_set_options$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "SSL_set_options",
+        "(Ljdk/incubator/foreign/MemoryAddress;J)J",
+        constants$11.SSL_set_options$FUNC, false
+    );
+    static final FunctionDescriptor SSL_get0_next_proto_negotiated$FUNC = FunctionDescriptor.ofVoid(
+        C_POINTER,
+        C_POINTER,
+        C_POINTER
+    );
+    static final MethodHandle SSL_get0_next_proto_negotiated$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "SSL_get0_next_proto_negotiated",
+        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
+        constants$11.SSL_get0_next_proto_negotiated$FUNC, false
+    );
     static final FunctionDescriptor SSL_CTX_set_alpn_select_cb$FUNC = FunctionDescriptor.ofVoid(
         C_POINTER,
         C_POINTER,
@@ -63,22 +82,6 @@ class constants$11 {
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
         constants$11.SSL_CTX_set_cipher_list$FUNC, false
     );
-    static final FunctionDescriptor SSL_CTX_new$FUNC = FunctionDescriptor.of(C_POINTER,
-        C_POINTER
-    );
-    static final MethodHandle SSL_CTX_new$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "SSL_CTX_new",
-        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        constants$11.SSL_CTX_new$FUNC, false
-    );
-    static final FunctionDescriptor SSL_CTX_free$FUNC = FunctionDescriptor.ofVoid(
-        C_POINTER
-    );
-    static final MethodHandle SSL_CTX_free$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "SSL_CTX_free",
-        "(Ljdk/incubator/foreign/MemoryAddress;)V",
-        constants$11.SSL_CTX_free$FUNC, false
-    );
 }
 
 

==================================================
constants$13.java
index d9b8377c9a..8b133a8c9a 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$12.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$12.java
@@ -26,6 +26,22 @@ import jdk.incubator.foreign.*;
 import static jdk.incubator.foreign.CLinker.*;
 class constants$12 {
 
+    static final FunctionDescriptor SSL_CTX_new$FUNC = FunctionDescriptor.of(C_POINTER,
+        C_POINTER
+    );
+    static final MethodHandle SSL_CTX_new$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "SSL_CTX_new",
+        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
+        constants$12.SSL_CTX_new$FUNC, false
+    );
+    static final FunctionDescriptor SSL_CTX_free$FUNC = FunctionDescriptor.ofVoid(
+        C_POINTER
+    );
+    static final MethodHandle SSL_CTX_free$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "SSL_CTX_free",
+        "(Ljdk/incubator/foreign/MemoryAddress;)V",
+        constants$12.SSL_CTX_free$FUNC, false
+    );
     static final FunctionDescriptor SSL_CTX_set_timeout$FUNC = FunctionDescriptor.of(C_LONG,
         C_POINTER,
         C_LONG
@@ -59,22 +75,6 @@ class constants$12 {
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
         constants$12.SSL_get_current_cipher$FUNC, false
     );
-    static final FunctionDescriptor SSL_CIPHER_get_name$FUNC = FunctionDescriptor.of(C_POINTER,
-        C_POINTER
-    );
-    static final MethodHandle SSL_CIPHER_get_name$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "SSL_CIPHER_get_name",
-        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        constants$12.SSL_CIPHER_get_name$FUNC, false
-    );
-    static final FunctionDescriptor SSL_CIPHER_get_kx_nid$FUNC = FunctionDescriptor.of(C_INT,
-        C_POINTER
-    );
-    static final MethodHandle SSL_CIPHER_get_kx_nid$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "SSL_CIPHER_get_kx_nid",
-        "(Ljdk/incubator/foreign/MemoryAddress;)I",
-        constants$12.SSL_CIPHER_get_kx_nid$FUNC, false
-    );
 }
 
 

==================================================
constants$14.java
index d3d8cf30f7..3d586cc3d9 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$13.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$13.java
@@ -26,6 +26,22 @@ import jdk.incubator.foreign.*;
 import static jdk.incubator.foreign.CLinker.*;
 class constants$13 {
 
+    static final FunctionDescriptor SSL_CIPHER_get_name$FUNC = FunctionDescriptor.of(C_POINTER,
+        C_POINTER
+    );
+    static final MethodHandle SSL_CIPHER_get_name$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "SSL_CIPHER_get_name",
+        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
+        constants$13.SSL_CIPHER_get_name$FUNC, false
+    );
+    static final FunctionDescriptor SSL_CIPHER_get_kx_nid$FUNC = FunctionDescriptor.of(C_INT,
+        C_POINTER
+    );
+    static final MethodHandle SSL_CIPHER_get_kx_nid$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "SSL_CIPHER_get_kx_nid",
+        "(Ljdk/incubator/foreign/MemoryAddress;)I",
+        constants$13.SSL_CIPHER_get_kx_nid$FUNC, false
+    );
     static final FunctionDescriptor SSL_CIPHER_get_auth_nid$FUNC = FunctionDescriptor.of(C_INT,
         C_POINTER
     );
@@ -61,25 +77,6 @@ class constants$13 {
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
         constants$13.SSL_set_cipher_list$FUNC, false
     );
-    static final FunctionDescriptor SSL_set_verify$FUNC = FunctionDescriptor.ofVoid(
-        C_POINTER,
-        C_INT,
-        C_POINTER
-    );
-    static final MethodHandle SSL_set_verify$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "SSL_set_verify",
-        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)V",
-        constants$13.SSL_set_verify$FUNC, false
-    );
-    static final FunctionDescriptor SSL_CTX_use_certificate_chain_file$FUNC = FunctionDescriptor.of(C_INT,
-        C_POINTER,
-        C_POINTER
-    );
-    static final MethodHandle SSL_CTX_use_certificate_chain_file$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "SSL_CTX_use_certificate_chain_file",
-        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
-        constants$13.SSL_CTX_use_certificate_chain_file$FUNC, false
-    );
 }
 
 

==================================================
constants$15.java
index bdba8b96ac..914b41cf9c 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$14.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$14.java
@@ -26,6 +26,25 @@ import jdk.incubator.foreign.*;
 import static jdk.incubator.foreign.CLinker.*;
 class constants$14 {
 
+    static final FunctionDescriptor SSL_set_verify$FUNC = FunctionDescriptor.ofVoid(
+        C_POINTER,
+        C_INT,
+        C_POINTER
+    );
+    static final MethodHandle SSL_set_verify$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "SSL_set_verify",
+        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)V",
+        constants$14.SSL_set_verify$FUNC, false
+    );
+    static final FunctionDescriptor SSL_CTX_use_certificate_chain_file$FUNC = FunctionDescriptor.of(C_INT,
+        C_POINTER,
+        C_POINTER
+    );
+    static final MethodHandle SSL_CTX_use_certificate_chain_file$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "SSL_CTX_use_certificate_chain_file",
+        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
+        constants$14.SSL_CTX_use_certificate_chain_file$FUNC, false
+    );
     static final FunctionDescriptor SSL_load_client_CA_file$FUNC = FunctionDescriptor.of(C_POINTER,
         C_POINTER
     );
@@ -60,22 +79,6 @@ class constants$14 {
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
         constants$14.SSL_SESSION_get_id$FUNC, false
     );
-    static final FunctionDescriptor SSL_get_peer_certificate$FUNC = FunctionDescriptor.of(C_POINTER,
-        C_POINTER
-    );
-    static final MethodHandle SSL_get_peer_certificate$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "SSL_get_peer_certificate",
-        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        constants$14.SSL_get_peer_certificate$FUNC, false
-    );
-    static final FunctionDescriptor SSL_get_peer_cert_chain$FUNC = FunctionDescriptor.of(C_POINTER,
-        C_POINTER
-    );
-    static final MethodHandle SSL_get_peer_cert_chain$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "SSL_get_peer_cert_chain",
-        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        constants$14.SSL_get_peer_cert_chain$FUNC, false
-    );
 }
 
 

==================================================
constants$16.java
index 4d72de11e6..2885289b5e 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$15.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$15.java
@@ -26,6 +26,22 @@ import jdk.incubator.foreign.*;
 import static jdk.incubator.foreign.CLinker.*;
 class constants$15 {
 
+    static final FunctionDescriptor SSL_get_peer_certificate$FUNC = FunctionDescriptor.of(C_POINTER,
+        C_POINTER
+    );
+    static final MethodHandle SSL_get_peer_certificate$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "SSL_get_peer_certificate",
+        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
+        constants$15.SSL_get_peer_certificate$FUNC, false
+    );
+    static final FunctionDescriptor SSL_get_peer_cert_chain$FUNC = FunctionDescriptor.of(C_POINTER,
+        C_POINTER
+    );
+    static final MethodHandle SSL_get_peer_cert_chain$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "SSL_get_peer_cert_chain",
+        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
+        constants$15.SSL_get_peer_cert_chain$FUNC, false
+    );
     static final FunctionDescriptor SSL_CTX_set_verify$FUNC = FunctionDescriptor.ofVoid(
         C_POINTER,
         C_INT,
@@ -54,24 +70,6 @@ class constants$15 {
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
         constants$15.SSL_CTX_set_cert_verify_callback$FUNC, false
     );
-    static final FunctionDescriptor SSL_CTX_use_PrivateKey$FUNC = FunctionDescriptor.of(C_INT,
-        C_POINTER,
-        C_POINTER
-    );
-    static final MethodHandle SSL_CTX_use_PrivateKey$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "SSL_CTX_use_PrivateKey",
-        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
-        constants$15.SSL_CTX_use_PrivateKey$FUNC, false
-    );
-    static final FunctionDescriptor SSL_CTX_use_certificate$FUNC = FunctionDescriptor.of(C_INT,
-        C_POINTER,
-        C_POINTER
-    );
-    static final MethodHandle SSL_CTX_use_certificate$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "SSL_CTX_use_certificate",
-        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
-        constants$15.SSL_CTX_use_certificate$FUNC, false
-    );
 }
 
 

==================================================
constants$17.java
index 4844080fc2..5b02c50a82 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$16.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$16.java
@@ -26,6 +26,24 @@ import jdk.incubator.foreign.*;
 import static jdk.incubator.foreign.CLinker.*;
 class constants$16 {
 
+    static final FunctionDescriptor SSL_CTX_use_PrivateKey$FUNC = FunctionDescriptor.of(C_INT,
+        C_POINTER,
+        C_POINTER
+    );
+    static final MethodHandle SSL_CTX_use_PrivateKey$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "SSL_CTX_use_PrivateKey",
+        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
+        constants$16.SSL_CTX_use_PrivateKey$FUNC, false
+    );
+    static final FunctionDescriptor SSL_CTX_use_certificate$FUNC = FunctionDescriptor.of(C_INT,
+        C_POINTER,
+        C_POINTER
+    );
+    static final MethodHandle SSL_CTX_use_certificate$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "SSL_CTX_use_certificate",
+        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
+        constants$16.SSL_CTX_use_certificate$FUNC, false
+    );
     static final FunctionDescriptor SSL_CTX_set_default_passwd_cb$FUNC = FunctionDescriptor.ofVoid(
         C_POINTER,
         C_POINTER
@@ -61,24 +79,6 @@ class constants$16 {
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
         constants$16.SSL_new$FUNC, false
     );
-    static final FunctionDescriptor SSL_free$FUNC = FunctionDescriptor.ofVoid(
-        C_POINTER
-    );
-    static final MethodHandle SSL_free$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "SSL_free",
-        "(Ljdk/incubator/foreign/MemoryAddress;)V",
-        constants$16.SSL_free$FUNC, false
-    );
-    static final FunctionDescriptor SSL_read$FUNC = FunctionDescriptor.of(C_INT,
-        C_POINTER,
-        C_POINTER,
-        C_INT
-    );
-    static final MethodHandle SSL_read$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "SSL_read",
-        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
-        constants$16.SSL_read$FUNC, false
-    );
 }
 
 

==================================================
constants$18.java
index 8dc9109849..0170ed6178 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$17.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$17.java
@@ -26,6 +26,24 @@ import jdk.incubator.foreign.*;
 import static jdk.incubator.foreign.CLinker.*;
 class constants$17 {
 
+    static final FunctionDescriptor SSL_free$FUNC = FunctionDescriptor.ofVoid(
+        C_POINTER
+    );
+    static final MethodHandle SSL_free$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "SSL_free",
+        "(Ljdk/incubator/foreign/MemoryAddress;)V",
+        constants$17.SSL_free$FUNC, false
+    );
+    static final FunctionDescriptor SSL_read$FUNC = FunctionDescriptor.of(C_INT,
+        C_POINTER,
+        C_POINTER,
+        C_INT
+    );
+    static final MethodHandle SSL_read$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "SSL_read",
+        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
+        constants$17.SSL_read$FUNC, false
+    );
     static final FunctionDescriptor SSL_write$FUNC = FunctionDescriptor.of(C_INT,
         C_POINTER,
         C_POINTER,
@@ -61,22 +79,6 @@ class constants$17 {
         "()Ljdk/incubator/foreign/MemoryAddress;",
         constants$17.TLS_server_method$FUNC, false
     );
-    static final FunctionDescriptor SSL_get_ciphers$FUNC = FunctionDescriptor.of(C_POINTER,
-        C_POINTER
-    );
-    static final MethodHandle SSL_get_ciphers$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "SSL_get_ciphers",
-        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        constants$17.SSL_get_ciphers$FUNC, false
-    );
-    static final FunctionDescriptor SSL_CTX_get_ciphers$FUNC = FunctionDescriptor.of(C_POINTER,
-        C_POINTER
-    );
-    static final MethodHandle SSL_CTX_get_ciphers$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "SSL_CTX_get_ciphers",
-        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        constants$17.SSL_CTX_get_ciphers$FUNC, false
-    );
 }
 
 

==================================================
constants$19.java
index 59e299cf25..192567e9e9 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$18.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$18.java
@@ -26,6 +26,22 @@ import jdk.incubator.foreign.*;
 import static jdk.incubator.foreign.CLinker.*;
 class constants$18 {
 
+    static final FunctionDescriptor SSL_get_ciphers$FUNC = FunctionDescriptor.of(C_POINTER,
+        C_POINTER
+    );
+    static final MethodHandle SSL_get_ciphers$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "SSL_get_ciphers",
+        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
+        constants$18.SSL_get_ciphers$FUNC, false
+    );
+    static final FunctionDescriptor SSL_CTX_get_ciphers$FUNC = FunctionDescriptor.of(C_POINTER,
+        C_POINTER
+    );
+    static final MethodHandle SSL_CTX_get_ciphers$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "SSL_CTX_get_ciphers",
+        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
+        constants$18.SSL_CTX_get_ciphers$FUNC, false
+    );
     static final FunctionDescriptor SSL_do_handshake$FUNC = FunctionDescriptor.of(C_INT,
         C_POINTER
     );
@@ -58,23 +74,6 @@ class constants$18 {
         "(Ljdk/incubator/foreign/MemoryAddress;)I",
         constants$18.SSL_shutdown$FUNC, false
     );
-    static final FunctionDescriptor SSL_verify_client_post_handshake$FUNC = FunctionDescriptor.of(C_INT,
-        C_POINTER
-    );
-    static final MethodHandle SSL_verify_client_post_handshake$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "SSL_verify_client_post_handshake",
-        "(Ljdk/incubator/foreign/MemoryAddress;)I",
-        constants$18.SSL_verify_client_post_handshake$FUNC, false
-    );
-    static final FunctionDescriptor SSL_CTX_set_client_CA_list$FUNC = FunctionDescriptor.ofVoid(
-        C_POINTER,
-        C_POINTER
-    );
-    static final MethodHandle SSL_CTX_set_client_CA_list$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "SSL_CTX_set_client_CA_list",
-        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
-        constants$18.SSL_CTX_set_client_CA_list$FUNC, false
-    );
 }
 
 

==================================================
constants$2.java
index 5b7daf3f36..209695b18b 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$19.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$19.java
@@ -26,6 +26,23 @@ import jdk.incubator.foreign.*;
 import static jdk.incubator.foreign.CLinker.*;
 class constants$19 {
 
+    static final FunctionDescriptor SSL_verify_client_post_handshake$FUNC = FunctionDescriptor.of(C_INT,
+        C_POINTER
+    );
+    static final MethodHandle SSL_verify_client_post_handshake$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "SSL_verify_client_post_handshake",
+        "(Ljdk/incubator/foreign/MemoryAddress;)I",
+        constants$19.SSL_verify_client_post_handshake$FUNC, false
+    );
+    static final FunctionDescriptor SSL_CTX_set_client_CA_list$FUNC = FunctionDescriptor.ofVoid(
+        C_POINTER,
+        C_POINTER
+    );
+    static final MethodHandle SSL_CTX_set_client_CA_list$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "SSL_CTX_set_client_CA_list",
+        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
+        constants$19.SSL_CTX_set_client_CA_list$FUNC, false
+    );
     static final FunctionDescriptor SSL_CTX_get_client_CA_list$FUNC = FunctionDescriptor.of(C_POINTER,
         C_POINTER
     );
@@ -59,22 +76,6 @@ class constants$19 {
         "(Ljdk/incubator/foreign/MemoryAddress;)V",
         constants$19.SSL_set_accept_state$FUNC, false
     );
-    static final FunctionDescriptor SSL_get_privatekey$FUNC = FunctionDescriptor.of(C_POINTER,
-        C_POINTER
-    );
-    static final MethodHandle SSL_get_privatekey$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "SSL_get_privatekey",
-        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        constants$19.SSL_get_privatekey$FUNC, false
-    );
-    static final FunctionDescriptor SSL_get_shutdown$FUNC = FunctionDescriptor.of(C_INT,
-        C_POINTER
-    );
-    static final MethodHandle SSL_get_shutdown$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "SSL_get_shutdown",
-        "(Ljdk/incubator/foreign/MemoryAddress;)I",
-        constants$19.SSL_get_shutdown$FUNC, false
-    );
 }
 
 

==================================================
constants$20.java
index af7b96002b..c66f4c8480 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$2.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$2.java
@@ -26,6 +26,26 @@ import jdk.incubator.foreign.*;
 import static jdk.incubator.foreign.CLinker.*;
 class constants$2 {
 
+    static final FunctionDescriptor BIO_read$FUNC = FunctionDescriptor.of(C_INT,
+        C_POINTER,
+        C_POINTER,
+        C_INT
+    );
+    static final MethodHandle BIO_read$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "BIO_read",
+        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
+        constants$2.BIO_read$FUNC, false
+    );
+    static final FunctionDescriptor BIO_write$FUNC = FunctionDescriptor.of(C_INT,
+        C_POINTER,
+        C_POINTER,
+        C_INT
+    );
+    static final MethodHandle BIO_write$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "BIO_write",
+        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
+        constants$2.BIO_write$FUNC, false
+    );
     static final FunctionDescriptor BIO_ctrl$FUNC = FunctionDescriptor.of(C_LONG,
         C_POINTER,
         C_INT,
@@ -60,21 +80,6 @@ class constants$2 {
         "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;J)I",
         constants$2.BIO_new_bio_pair$FUNC, false
     );
-    static final FunctionDescriptor BN_new$FUNC = FunctionDescriptor.of(C_POINTER);
-    static final MethodHandle BN_new$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "BN_new",
-        "()Ljdk/incubator/foreign/MemoryAddress;",
-        constants$2.BN_new$FUNC, false
-    );
-    static final FunctionDescriptor BN_set_word$FUNC = FunctionDescriptor.of(C_INT,
-        C_POINTER,
-        C_LONG
-    );
-    static final MethodHandle BN_set_word$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "BN_set_word",
-        "(Ljdk/incubator/foreign/MemoryAddress;J)I",
-        constants$2.BN_set_word$FUNC, false
-    );
 }
 
 

==================================================
constants$21.java
index 1f33cbc66b..fbf5820ac8 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$20.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$20.java
@@ -26,6 +26,22 @@ import jdk.incubator.foreign.*;
 import static jdk.incubator.foreign.CLinker.*;
 class constants$20 {
 
+    static final FunctionDescriptor SSL_get_privatekey$FUNC = FunctionDescriptor.of(C_POINTER,
+        C_POINTER
+    );
+    static final MethodHandle SSL_get_privatekey$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "SSL_get_privatekey",
+        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
+        constants$20.SSL_get_privatekey$FUNC, false
+    );
+    static final FunctionDescriptor SSL_get_shutdown$FUNC = FunctionDescriptor.of(C_INT,
+        C_POINTER
+    );
+    static final MethodHandle SSL_get_shutdown$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "SSL_get_shutdown",
+        "(Ljdk/incubator/foreign/MemoryAddress;)I",
+        constants$20.SSL_get_shutdown$FUNC, false
+    );
     static final FunctionDescriptor SSL_CTX_set_default_verify_paths$FUNC = FunctionDescriptor.of(C_INT,
         C_POINTER
     );
@@ -57,19 +73,6 @@ class constants$20 {
         C_INT,
         C_INT
     );
-    static final MethodHandle SSL_set_info_callback$cb$MH = RuntimeHelper.downcallHandle(
-        "(Ljdk/incubator/foreign/MemoryAddress;II)V",
-        constants$20.SSL_set_info_callback$cb$FUNC, false
-    );
-    static final FunctionDescriptor SSL_set_info_callback$FUNC = FunctionDescriptor.ofVoid(
-        C_POINTER,
-        C_POINTER
-    );
-    static final MethodHandle SSL_set_info_callback$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "SSL_set_info_callback",
-        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
-        constants$20.SSL_set_info_callback$FUNC, false
-    );
 }
 
 

==================================================
constants$22.java
index 08f69be4d3..c7b6ee481f 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$21.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$21.java
@@ -26,6 +26,24 @@ import jdk.incubator.foreign.*;
 import static jdk.incubator.foreign.CLinker.*;
 class constants$21 {
 
+    static final FunctionDescriptor SSL_set_info_callback$cb$FUNC = FunctionDescriptor.ofVoid(
+        C_POINTER,
+        C_INT,
+        C_INT
+    );
+    static final MethodHandle SSL_set_info_callback$cb$MH = RuntimeHelper.downcallHandle(
+        "(Ljdk/incubator/foreign/MemoryAddress;II)V",
+        constants$21.SSL_set_info_callback$cb$FUNC, false
+    );
+    static final FunctionDescriptor SSL_set_info_callback$FUNC = FunctionDescriptor.ofVoid(
+        C_POINTER,
+        C_POINTER
+    );
+    static final MethodHandle SSL_set_info_callback$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "SSL_set_info_callback",
+        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
+        constants$21.SSL_set_info_callback$FUNC, false
+    );
     static final FunctionDescriptor SSL_set_verify_result$FUNC = FunctionDescriptor.ofVoid(
         C_POINTER,
         C_LONG
@@ -50,21 +68,6 @@ class constants$21 {
         "(Ljdk/incubator/foreign/MemoryAddress;II)Ljdk/incubator/foreign/MemoryAddress;",
         constants$21.SSL_CTX_set_tmp_dh_callback$dh$FUNC, false
     );
-    static final FunctionDescriptor SSL_CTX_set_tmp_dh_callback$FUNC = FunctionDescriptor.ofVoid(
-        C_POINTER,
-        C_POINTER
-    );
-    static final MethodHandle SSL_CTX_set_tmp_dh_callback$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "SSL_CTX_set_tmp_dh_callback",
-        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
-        constants$21.SSL_CTX_set_tmp_dh_callback$FUNC, false
-    );
-    static final FunctionDescriptor SSL_CONF_CTX_new$FUNC = FunctionDescriptor.of(C_POINTER);
-    static final MethodHandle SSL_CONF_CTX_new$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "SSL_CONF_CTX_new",
-        "()Ljdk/incubator/foreign/MemoryAddress;",
-        constants$21.SSL_CONF_CTX_new$FUNC, false
-    );
 }
 
 

==================================================
constants$23.java
index ca44c3b8b7..68f384cd32 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$22.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$22.java
@@ -26,6 +26,21 @@ import jdk.incubator.foreign.*;
 import static jdk.incubator.foreign.CLinker.*;
 class constants$22 {
 
+    static final FunctionDescriptor SSL_CTX_set_tmp_dh_callback$FUNC = FunctionDescriptor.ofVoid(
+        C_POINTER,
+        C_POINTER
+    );
+    static final MethodHandle SSL_CTX_set_tmp_dh_callback$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "SSL_CTX_set_tmp_dh_callback",
+        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
+        constants$22.SSL_CTX_set_tmp_dh_callback$FUNC, false
+    );
+    static final FunctionDescriptor SSL_CONF_CTX_new$FUNC = FunctionDescriptor.of(C_POINTER);
+    static final MethodHandle SSL_CONF_CTX_new$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "SSL_CONF_CTX_new",
+        "()Ljdk/incubator/foreign/MemoryAddress;",
+        constants$22.SSL_CONF_CTX_new$FUNC, false
+    );
     static final FunctionDescriptor SSL_CONF_CTX_finish$FUNC = FunctionDescriptor.of(C_INT,
         C_POINTER
     );
@@ -60,25 +75,6 @@ class constants$22 {
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
         constants$22.SSL_CONF_CTX_set_ssl_ctx$FUNC, false
     );
-    static final FunctionDescriptor SSL_CONF_cmd$FUNC = FunctionDescriptor.of(C_INT,
-        C_POINTER,
-        C_POINTER,
-        C_POINTER
-    );
-    static final MethodHandle SSL_CONF_cmd$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "SSL_CONF_cmd",
-        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
-        constants$22.SSL_CONF_cmd$FUNC, false
-    );
-    static final FunctionDescriptor SSL_CONF_cmd_value_type$FUNC = FunctionDescriptor.of(C_INT,
-        C_POINTER,
-        C_POINTER
-    );
-    static final MethodHandle SSL_CONF_cmd_value_type$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "SSL_CONF_cmd_value_type",
-        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
-        constants$22.SSL_CONF_cmd_value_type$FUNC, false
-    );
 }
 
 

==================================================
constants$24.java
index b4338e7f7e..5f130ca7d7 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$23.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$23.java
@@ -26,6 +26,25 @@ import jdk.incubator.foreign.*;
 import static jdk.incubator.foreign.CLinker.*;
 class constants$23 {
 
+    static final FunctionDescriptor SSL_CONF_cmd$FUNC = FunctionDescriptor.of(C_INT,
+        C_POINTER,
+        C_POINTER,
+        C_POINTER
+    );
+    static final MethodHandle SSL_CONF_cmd$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "SSL_CONF_cmd",
+        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
+        constants$23.SSL_CONF_cmd$FUNC, false
+    );
+    static final FunctionDescriptor SSL_CONF_cmd_value_type$FUNC = FunctionDescriptor.of(C_INT,
+        C_POINTER,
+        C_POINTER
+    );
+    static final MethodHandle SSL_CONF_cmd_value_type$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "SSL_CONF_cmd_value_type",
+        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
+        constants$23.SSL_CONF_cmd_value_type$FUNC, false
+    );
     static final FunctionDescriptor OPENSSL_init_ssl$FUNC = FunctionDescriptor.of(C_INT,
         C_LONG,
         C_POINTER
@@ -53,25 +72,6 @@ class constants$23 {
         "()V",
         constants$23.ERR_clear_error$FUNC, false
     );
-    static final FunctionDescriptor ERR_error_string$FUNC = FunctionDescriptor.of(C_POINTER,
-        C_LONG,
-        C_POINTER
-    );
-    static final MethodHandle ERR_error_string$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "ERR_error_string",
-        "(JLjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        constants$23.ERR_error_string$FUNC, false
-    );
-    static final FunctionDescriptor PKCS12_verify_mac$FUNC = FunctionDescriptor.of(C_INT,
-        C_POINTER,
-        C_POINTER,
-        C_INT
-    );
-    static final MethodHandle PKCS12_verify_mac$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "PKCS12_verify_mac",
-        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
-        constants$23.PKCS12_verify_mac$FUNC, false
-    );
 }
 
 

==================================================
constants$25.java
index 7724da3f28..82422ab029 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$24.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$24.java
@@ -26,6 +26,25 @@ import jdk.incubator.foreign.*;
 import static jdk.incubator.foreign.CLinker.*;
 class constants$24 {
 
+    static final FunctionDescriptor ERR_error_string$FUNC = FunctionDescriptor.of(C_POINTER,
+        C_LONG,
+        C_POINTER
+    );
+    static final MethodHandle ERR_error_string$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "ERR_error_string",
+        "(JLjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
+        constants$24.ERR_error_string$FUNC, false
+    );
+    static final FunctionDescriptor PKCS12_verify_mac$FUNC = FunctionDescriptor.of(C_INT,
+        C_POINTER,
+        C_POINTER,
+        C_INT
+    );
+    static final MethodHandle PKCS12_verify_mac$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "PKCS12_verify_mac",
+        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
+        constants$24.PKCS12_verify_mac$FUNC, false
+    );
     static final FunctionDescriptor PKCS12_free$FUNC = FunctionDescriptor.ofVoid(
         C_POINTER
     );
@@ -64,24 +83,6 @@ class constants$24 {
         "(Ljdk/incubator/foreign/MemoryAddress;I)V",
         constants$24.RAND_seed$FUNC, false
     );
-    static final FunctionDescriptor RAND_load_file$FUNC = FunctionDescriptor.of(C_INT,
-        C_POINTER,
-        C_LONG
-    );
-    static final MethodHandle RAND_load_file$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "RAND_load_file",
-        "(Ljdk/incubator/foreign/MemoryAddress;J)I",
-        constants$24.RAND_load_file$FUNC, false
-    );
-    static final FunctionDescriptor X509_check_issued$FUNC = FunctionDescriptor.of(C_INT,
-        C_POINTER,
-        C_POINTER
-    );
-    static final MethodHandle X509_check_issued$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "X509_check_issued",
-        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
-        constants$24.X509_check_issued$FUNC, false
-    );
 }
 
 

==================================================
constants$26.java
index 47e414a26d..89f7a5bca5 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$25.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$25.java
@@ -26,6 +26,24 @@ import jdk.incubator.foreign.*;
 import static jdk.incubator.foreign.CLinker.*;
 class constants$25 {
 
+    static final FunctionDescriptor RAND_load_file$FUNC = FunctionDescriptor.of(C_INT,
+        C_POINTER,
+        C_LONG
+    );
+    static final MethodHandle RAND_load_file$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "RAND_load_file",
+        "(Ljdk/incubator/foreign/MemoryAddress;J)I",
+        constants$25.RAND_load_file$FUNC, false
+    );
+    static final FunctionDescriptor X509_check_issued$FUNC = FunctionDescriptor.of(C_INT,
+        C_POINTER,
+        C_POINTER
+    );
+    static final MethodHandle X509_check_issued$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "X509_check_issued",
+        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
+        constants$25.X509_check_issued$FUNC, false
+    );
     static final FunctionDescriptor ENGINE_by_id$FUNC = FunctionDescriptor.of(C_POINTER,
         C_POINTER
     );
@@ -59,26 +77,6 @@ class constants$25 {
         "(Ljdk/incubator/foreign/MemoryAddress;)I",
         constants$25.ENGINE_free$FUNC, false
     );
-    static final FunctionDescriptor ENGINE_load_private_key$FUNC = FunctionDescriptor.of(C_POINTER,
-        C_POINTER,
-        C_POINTER,
-        C_POINTER,
-        C_POINTER
-    );
-    static final MethodHandle ENGINE_load_private_key$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "ENGINE_load_private_key",
-        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        constants$25.ENGINE_load_private_key$FUNC, false
-    );
-    static final FunctionDescriptor ENGINE_set_default$FUNC = FunctionDescriptor.of(C_INT,
-        C_POINTER,
-        C_INT
-    );
-    static final MethodHandle ENGINE_set_default$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "ENGINE_set_default",
-        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
-        constants$25.ENGINE_set_default$FUNC, false
-    );
 }
 
 

==================================================
constants$27.java
index 310f94bec0..a253272af3 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$26.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$26.java
@@ -26,6 +26,26 @@ import jdk.incubator.foreign.*;
 import static jdk.incubator.foreign.CLinker.*;
 class constants$26 {
 
+    static final FunctionDescriptor ENGINE_load_private_key$FUNC = FunctionDescriptor.of(C_POINTER,
+        C_POINTER,
+        C_POINTER,
+        C_POINTER,
+        C_POINTER
+    );
+    static final MethodHandle ENGINE_load_private_key$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "ENGINE_load_private_key",
+        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
+        constants$26.ENGINE_load_private_key$FUNC, false
+    );
+    static final FunctionDescriptor ENGINE_set_default$FUNC = FunctionDescriptor.of(C_INT,
+        C_POINTER,
+        C_INT
+    );
+    static final MethodHandle ENGINE_set_default$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "ENGINE_set_default",
+        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
+        constants$26.ENGINE_set_default$FUNC, false
+    );
     static final FunctionDescriptor OCSP_cert_to_id$FUNC = FunctionDescriptor.of(C_POINTER,
         C_POINTER,
         C_POINTER,
@@ -61,25 +81,6 @@ class constants$26 {
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
         constants$26.OCSP_response_get1_basic$FUNC, false
     );
-    static final FunctionDescriptor OCSP_resp_get0$FUNC = FunctionDescriptor.of(C_POINTER,
-        C_POINTER,
-        C_INT
-    );
-    static final MethodHandle OCSP_resp_get0$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "OCSP_resp_get0",
-        "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
-        constants$26.OCSP_resp_get0$FUNC, false
-    );
-    static final FunctionDescriptor OCSP_resp_find$FUNC = FunctionDescriptor.of(C_INT,
-        C_POINTER,
-        C_POINTER,
-        C_INT
-    );
-    static final MethodHandle OCSP_resp_find$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "OCSP_resp_find",
-        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
-        constants$26.OCSP_resp_find$FUNC, false
-    );
 }
 
 

==================================================
constants$28.java
index bfba69080d..698b463288 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$27.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$27.java
@@ -26,6 +26,25 @@ import jdk.incubator.foreign.*;
 import static jdk.incubator.foreign.CLinker.*;
 class constants$27 {
 
+    static final FunctionDescriptor OCSP_resp_get0$FUNC = FunctionDescriptor.of(C_POINTER,
+        C_POINTER,
+        C_INT
+    );
+    static final MethodHandle OCSP_resp_get0$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "OCSP_resp_get0",
+        "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
+        constants$27.OCSP_resp_get0$FUNC, false
+    );
+    static final FunctionDescriptor OCSP_resp_find$FUNC = FunctionDescriptor.of(C_INT,
+        C_POINTER,
+        C_POINTER,
+        C_INT
+    );
+    static final MethodHandle OCSP_resp_find$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "OCSP_resp_find",
+        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
+        constants$27.OCSP_resp_find$FUNC, false
+    );
     static final FunctionDescriptor OCSP_single_get0_status$FUNC = FunctionDescriptor.of(C_INT,
         C_POINTER,
         C_POINTER,
@@ -64,20 +83,6 @@ class constants$27 {
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)Ljdk/incubator/foreign/MemoryAddress;",
         constants$27.d2i_OCSP_RESPONSE$FUNC, false
     );
-    static final FunctionDescriptor OCSP_CERTID_free$FUNC = FunctionDescriptor.ofVoid(
-        C_POINTER
-    );
-    static final MethodHandle OCSP_CERTID_free$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "OCSP_CERTID_free",
-        "(Ljdk/incubator/foreign/MemoryAddress;)V",
-        constants$27.OCSP_CERTID_free$FUNC, false
-    );
-    static final FunctionDescriptor OCSP_REQUEST_new$FUNC = FunctionDescriptor.of(C_POINTER);
-    static final MethodHandle OCSP_REQUEST_new$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "OCSP_REQUEST_new",
-        "()Ljdk/incubator/foreign/MemoryAddress;",
-        constants$27.OCSP_REQUEST_new$FUNC, false
-    );
 }
 
 

==================================================
constants$29.java
index 0217030e51..8716ab1941 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$28.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$28.java
@@ -26,6 +26,20 @@ import jdk.incubator.foreign.*;
 import static jdk.incubator.foreign.CLinker.*;
 class constants$28 {
 
+    static final FunctionDescriptor OCSP_CERTID_free$FUNC = FunctionDescriptor.ofVoid(
+        C_POINTER
+    );
+    static final MethodHandle OCSP_CERTID_free$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "OCSP_CERTID_free",
+        "(Ljdk/incubator/foreign/MemoryAddress;)V",
+        constants$28.OCSP_CERTID_free$FUNC, false
+    );
+    static final FunctionDescriptor OCSP_REQUEST_new$FUNC = FunctionDescriptor.of(C_POINTER);
+    static final MethodHandle OCSP_REQUEST_new$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "OCSP_REQUEST_new",
+        "()Ljdk/incubator/foreign/MemoryAddress;",
+        constants$28.OCSP_REQUEST_new$FUNC, false
+    );
     static final FunctionDescriptor OCSP_REQUEST_free$FUNC = FunctionDescriptor.ofVoid(
         C_POINTER
     );
@@ -43,10 +57,7 @@ class constants$28 {
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
         constants$28.i2d_OCSP_REQUEST$FUNC, false
     );
-    static final MemorySegment OPENSSL_VERSION_TEXT$SEGMENT = CLinker.toCString("OpenSSL 1.1.1l  FIPS 24 Aug 2021", ResourceScope.newImplicitScope());
-    static final MemorySegment SHLIB_VERSION_HISTORY$SEGMENT = CLinker.toCString("", ResourceScope.newImplicitScope());
-    static final MemorySegment SHLIB_VERSION_NUMBER$SEGMENT = CLinker.toCString("1.1", ResourceScope.newImplicitScope());
-    static final MemorySegment OPENSSL_FILE$SEGMENT = CLinker.toCString("/tmp/jextract$6761937692400069639.h", ResourceScope.newImplicitScope());
+    static final MemorySegment OPENSSL_FILE$SEGMENT = CLinker.toCString("/tmp/jextract$18067138764655173084.h", ResourceScope.newImplicitScope());
 }
 
 

==================================================
constants$3.java
deleted file mode 100644
index b852ba3335..0000000000
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$29.java
+++ /dev/null
@@ -1,36 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-// Generated by jextract
-
-package org.apache.tomcat.util.openssl;
-
-import java.lang.invoke.MethodHandle;
-import java.lang.invoke.VarHandle;
-import java.nio.ByteOrder;
-import jdk.incubator.foreign.*;
-import static jdk.incubator.foreign.CLinker.*;
-class constants$29 {
-
-    static final MemorySegment SSL_TXT_DSS$SEGMENT = CLinker.toCString("DSS", ResourceScope.newImplicitScope());
-    static final MemorySegment SSL_TXT_DH$SEGMENT = CLinker.toCString("DH", ResourceScope.newImplicitScope());
-    static final MemorySegment SSL_TXT_RSA$SEGMENT = CLinker.toCString("RSA", ResourceScope.newImplicitScope());
-    static final MemorySegment SSL_TXT_ECDH$SEGMENT = CLinker.toCString("ECDH", ResourceScope.newImplicitScope());
-    static final MemorySegment SSL_TXT_ECDSA$SEGMENT = CLinker.toCString("ECDSA", ResourceScope.newImplicitScope());
-}
-
-

==================================================
constants$4.java
index 792fe28d73..4f187ecbd1 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$3.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$3.java
@@ -26,6 +26,21 @@ import jdk.incubator.foreign.*;
 import static jdk.incubator.foreign.CLinker.*;
 class constants$3 {
 
+    static final FunctionDescriptor BN_new$FUNC = FunctionDescriptor.of(C_POINTER);
+    static final MethodHandle BN_new$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "BN_new",
+        "()Ljdk/incubator/foreign/MemoryAddress;",
+        constants$3.BN_new$FUNC, false
+    );
+    static final FunctionDescriptor BN_set_word$FUNC = FunctionDescriptor.of(C_INT,
+        C_POINTER,
+        C_LONG
+    );
+    static final MethodHandle BN_set_word$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "BN_set_word",
+        "(Ljdk/incubator/foreign/MemoryAddress;J)I",
+        constants$3.BN_set_word$FUNC, false
+    );
     static final FunctionDescriptor BN_get_rfc2409_prime_768$FUNC = FunctionDescriptor.of(C_POINTER,
         C_POINTER
     );
@@ -58,22 +73,6 @@ class constants$3 {
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
         constants$3.BN_get_rfc3526_prime_2048$FUNC, false
     );
-    static final FunctionDescriptor BN_get_rfc3526_prime_3072$FUNC = FunctionDescriptor.of(C_POINTER,
-        C_POINTER
-    );
-    static final MethodHandle BN_get_rfc3526_prime_3072$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "BN_get_rfc3526_prime_3072",
-        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        constants$3.BN_get_rfc3526_prime_3072$FUNC, false
-    );
-    static final FunctionDescriptor BN_get_rfc3526_prime_4096$FUNC = FunctionDescriptor.of(C_POINTER,
-        C_POINTER
-    );
-    static final MethodHandle BN_get_rfc3526_prime_4096$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "BN_get_rfc3526_prime_4096",
-        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        constants$3.BN_get_rfc3526_prime_4096$FUNC, false
-    );
 }
 
 

==================================================
constants$5.java
index 07b38e4e6a..dcb0a46edb 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$4.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$4.java
@@ -26,6 +26,22 @@ import jdk.incubator.foreign.*;
 import static jdk.incubator.foreign.CLinker.*;
 class constants$4 {
 
+    static final FunctionDescriptor BN_get_rfc3526_prime_3072$FUNC = FunctionDescriptor.of(C_POINTER,
+        C_POINTER
+    );
+    static final MethodHandle BN_get_rfc3526_prime_3072$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "BN_get_rfc3526_prime_3072",
+        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
+        constants$4.BN_get_rfc3526_prime_3072$FUNC, false
+    );
+    static final FunctionDescriptor BN_get_rfc3526_prime_4096$FUNC = FunctionDescriptor.of(C_POINTER,
+        C_POINTER
+    );
+    static final MethodHandle BN_get_rfc3526_prime_4096$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "BN_get_rfc3526_prime_4096",
+        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
+        constants$4.BN_get_rfc3526_prime_4096$FUNC, false
+    );
     static final FunctionDescriptor BN_get_rfc3526_prime_6144$FUNC = FunctionDescriptor.of(C_POINTER,
         C_POINTER
     );
@@ -58,22 +74,6 @@ class constants$4 {
         "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
         constants$4.ASN1_STRING_get0_data$FUNC, false
     );
-    static final FunctionDescriptor EVP_PKEY_base_id$FUNC = FunctionDescriptor.of(C_INT,
-        C_POINTER
-    );
-    static final MethodHandle EVP_PKEY_base_id$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "EVP_PKEY_base_id",
-        "(Ljdk/incubator/foreign/MemoryAddress;)I",
-        constants$4.EVP_PKEY_base_id$FUNC, false
-    );
-    static final FunctionDescriptor EVP_PKEY_bits$FUNC = FunctionDescriptor.of(C_INT,
-        C_POINTER
-    );
-    static final MethodHandle EVP_PKEY_bits$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "EVP_PKEY_bits",
-        "(Ljdk/incubator/foreign/MemoryAddress;)I",
-        constants$4.EVP_PKEY_bits$FUNC, false
-    );
 }
 
 

==================================================
constants$6.java
index 893006d32e..d5e4f08d77 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$5.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$5.java
@@ -26,6 +26,22 @@ import jdk.incubator.foreign.*;
 import static jdk.incubator.foreign.CLinker.*;
 class constants$5 {
 
+    static final FunctionDescriptor EVP_PKEY_base_id$FUNC = FunctionDescriptor.of(C_INT,
+        C_POINTER
+    );
+    static final MethodHandle EVP_PKEY_base_id$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "EVP_PKEY_base_id",
+        "(Ljdk/incubator/foreign/MemoryAddress;)I",
+        constants$5.EVP_PKEY_base_id$FUNC, false
+    );
+    static final FunctionDescriptor EVP_PKEY_bits$FUNC = FunctionDescriptor.of(C_INT,
+        C_POINTER
+    );
+    static final MethodHandle EVP_PKEY_bits$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "EVP_PKEY_bits",
+        "(Ljdk/incubator/foreign/MemoryAddress;)I",
+        constants$5.EVP_PKEY_bits$FUNC, false
+    );
     static final FunctionDescriptor EC_GROUP_free$FUNC = FunctionDescriptor.ofVoid(
         C_POINTER
     );
@@ -58,20 +74,6 @@ class constants$5 {
         "(Ljdk/incubator/foreign/MemoryAddress;)V",
         constants$5.EC_KEY_free$FUNC, false
     );
-    static final FunctionDescriptor DH_new$FUNC = FunctionDescriptor.of(C_POINTER);
-    static final MethodHandle DH_new$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "DH_new",
-        "()Ljdk/incubator/foreign/MemoryAddress;",
-        constants$5.DH_new$FUNC, false
-    );
-    static final FunctionDescriptor DH_free$FUNC = FunctionDescriptor.ofVoid(
-        C_POINTER
-    );
-    static final MethodHandle DH_free$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "DH_free",
-        "(Ljdk/incubator/foreign/MemoryAddress;)V",
-        constants$5.DH_free$FUNC, false
-    );
 }
 
 

==================================================
constants$7.java
index a5152a1a38..1b006ca498 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$6.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$6.java
@@ -26,6 +26,20 @@ import jdk.incubator.foreign.*;
 import static jdk.incubator.foreign.CLinker.*;
 class constants$6 {
 
+    static final FunctionDescriptor DH_new$FUNC = FunctionDescriptor.of(C_POINTER);
+    static final MethodHandle DH_new$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "DH_new",
+        "()Ljdk/incubator/foreign/MemoryAddress;",
+        constants$6.DH_new$FUNC, false
+    );
+    static final FunctionDescriptor DH_free$FUNC = FunctionDescriptor.ofVoid(
+        C_POINTER
+    );
+    static final MethodHandle DH_free$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "DH_free",
+        "(Ljdk/incubator/foreign/MemoryAddress;)V",
+        constants$6.DH_free$FUNC, false
+    );
     static final FunctionDescriptor DH_set0_pqg$FUNC = FunctionDescriptor.of(C_INT,
         C_POINTER,
         C_POINTER,
@@ -63,18 +77,6 @@ class constants$6 {
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
         constants$6.X509_STORE_add_lookup$FUNC, false
     );
-    static final FunctionDescriptor X509_LOOKUP_hash_dir$FUNC = FunctionDescriptor.of(C_POINTER);
-    static final MethodHandle X509_LOOKUP_hash_dir$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "X509_LOOKUP_hash_dir",
-        "()Ljdk/incubator/foreign/MemoryAddress;",
-        constants$6.X509_LOOKUP_hash_dir$FUNC, false
-    );
-    static final FunctionDescriptor X509_LOOKUP_file$FUNC = FunctionDescriptor.of(C_POINTER);
-    static final MethodHandle X509_LOOKUP_file$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "X509_LOOKUP_file",
-        "()Ljdk/incubator/foreign/MemoryAddress;",
-        constants$6.X509_LOOKUP_file$FUNC, false
-    );
 }
 
 

==================================================
constants$8.java
index 5a7848ba38..8abd155d18 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$7.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$7.java
@@ -26,6 +26,18 @@ import jdk.incubator.foreign.*;
 import static jdk.incubator.foreign.CLinker.*;
 class constants$7 {
 
+    static final FunctionDescriptor X509_LOOKUP_hash_dir$FUNC = FunctionDescriptor.of(C_POINTER);
+    static final MethodHandle X509_LOOKUP_hash_dir$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "X509_LOOKUP_hash_dir",
+        "()Ljdk/incubator/foreign/MemoryAddress;",
+        constants$7.X509_LOOKUP_hash_dir$FUNC, false
+    );
+    static final FunctionDescriptor X509_LOOKUP_file$FUNC = FunctionDescriptor.of(C_POINTER);
+    static final MethodHandle X509_LOOKUP_file$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "X509_LOOKUP_file",
+        "()Ljdk/incubator/foreign/MemoryAddress;",
+        constants$7.X509_LOOKUP_file$FUNC, false
+    );
     static final FunctionDescriptor X509_LOOKUP_ctrl$FUNC = FunctionDescriptor.of(C_INT,
         C_POINTER,
         C_INT,
@@ -64,22 +76,6 @@ class constants$7 {
         "(Ljdk/incubator/foreign/MemoryAddress;I)V",
         constants$7.X509_STORE_CTX_set_error$FUNC, false
     );
-    static final FunctionDescriptor X509_STORE_CTX_get_error_depth$FUNC = FunctionDescriptor.of(C_INT,
-        C_POINTER
-    );
-    static final MethodHandle X509_STORE_CTX_get_error_depth$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "X509_STORE_CTX_get_error_depth",
-        "(Ljdk/incubator/foreign/MemoryAddress;)I",
-        constants$7.X509_STORE_CTX_get_error_depth$FUNC, false
-    );
-    static final FunctionDescriptor X509_STORE_CTX_get_current_cert$FUNC = FunctionDescriptor.of(C_POINTER,
-        C_POINTER
-    );
-    static final MethodHandle X509_STORE_CTX_get_current_cert$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "X509_STORE_CTX_get_current_cert",
-        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        constants$7.X509_STORE_CTX_get_current_cert$FUNC, false
-    );
 }
 
 

==================================================
constants$9.java
index 2d13eecd3c..dc83b9526b 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$8.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$8.java
@@ -26,6 +26,22 @@ import jdk.incubator.foreign.*;
 import static jdk.incubator.foreign.CLinker.*;
 class constants$8 {
 
+    static final FunctionDescriptor X509_STORE_CTX_get_error_depth$FUNC = FunctionDescriptor.of(C_INT,
+        C_POINTER
+    );
+    static final MethodHandle X509_STORE_CTX_get_error_depth$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "X509_STORE_CTX_get_error_depth",
+        "(Ljdk/incubator/foreign/MemoryAddress;)I",
+        constants$8.X509_STORE_CTX_get_error_depth$FUNC, false
+    );
+    static final FunctionDescriptor X509_STORE_CTX_get_current_cert$FUNC = FunctionDescriptor.of(C_POINTER,
+        C_POINTER
+    );
+    static final MethodHandle X509_STORE_CTX_get_current_cert$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "X509_STORE_CTX_get_current_cert",
+        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
+        constants$8.X509_STORE_CTX_get_current_cert$FUNC, false
+    );
     static final FunctionDescriptor X509_STORE_CTX_get0_current_issuer$FUNC = FunctionDescriptor.of(C_POINTER,
         C_POINTER
     );
@@ -61,25 +77,6 @@ class constants$8 {
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)Ljdk/incubator/foreign/MemoryAddress;",
         constants$8.d2i_X509$FUNC, false
     );
-    static final FunctionDescriptor i2d_X509$FUNC = FunctionDescriptor.of(C_INT,
-        C_POINTER,
-        C_POINTER
-    );
-    static final MethodHandle i2d_X509$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "i2d_X509",
-        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
-        constants$8.i2d_X509$FUNC, false
-    );
-    static final FunctionDescriptor X509_get_ext_by_NID$FUNC = FunctionDescriptor.of(C_INT,
-        C_POINTER,
-        C_INT,
-        C_INT
-    );
-    static final MethodHandle X509_get_ext_by_NID$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "X509_get_ext_by_NID",
-        "(Ljdk/incubator/foreign/MemoryAddress;II)I",
-        constants$8.X509_get_ext_by_NID$FUNC, false
-    );
 }
 
 

==================================================
openssl_h.java
index 692c460b70..76c9cb4832 100644
--- a/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$9.java
+++ b/modules/openssl-java17/src/main/java/org/apache/tomcat/util/openssl/constants$9.java
@@ -26,6 +26,25 @@ import jdk.incubator.foreign.*;
 import static jdk.incubator.foreign.CLinker.*;
 class constants$9 {
 
+    static final FunctionDescriptor i2d_X509$FUNC = FunctionDescriptor.of(C_INT,
+        C_POINTER,
+        C_POINTER
+    );
+    static final MethodHandle i2d_X509$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "i2d_X509",
+        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
+        constants$9.i2d_X509$FUNC, false
+    );
+    static final FunctionDescriptor X509_get_ext_by_NID$FUNC = FunctionDescriptor.of(C_INT,
+        C_POINTER,
+        C_INT,
+        C_INT
+    );
+    static final MethodHandle X509_get_ext_by_NID$MH = RuntimeHelper.downcallHandle(
+        openssl_h.LIBRARIES, "X509_get_ext_by_NID",
+        "(Ljdk/incubator/foreign/MemoryAddress;II)I",
+        constants$9.X509_get_ext_by_NID$FUNC, false
+    );
     static final FunctionDescriptor X509_get_ext$FUNC = FunctionDescriptor.of(C_POINTER,
         C_POINTER,
         C_INT
@@ -65,28 +84,6 @@ class constants$9 {
         "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
         constants$9.PEM_read_bio_ECPKParameters$FUNC, false
     );
-    static final FunctionDescriptor PEM_read_bio_DHparams$FUNC = FunctionDescriptor.of(C_POINTER,
-        C_POINTER,
-        C_POINTER,
-        C_POINTER,
-        C_POINTER
-    );
-    static final MethodHandle PEM_read_bio_DHparams$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "PEM_read_bio_DHparams",
-        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        constants$9.PEM_read_bio_DHparams$FUNC, false
-    );
-    static final FunctionDescriptor PEM_read_bio_PrivateKey$FUNC = FunctionDescriptor.of(C_POINTER,
-        C_POINTER,
-        C_POINTER,
-        C_POINTER,
-        C_POINTER
-    );
-    static final MethodHandle PEM_read_bio_PrivateKey$MH = RuntimeHelper.downcallHandle(
-        openssl_h.LIBRARIES, "PEM_read_bio_PrivateKey",
-        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
-        constants$9.PEM_read_bio_PrivateKey$FUNC, false
-    );
 }
 
 

==================================================
