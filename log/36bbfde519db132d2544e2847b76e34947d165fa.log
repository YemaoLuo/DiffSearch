36bbfde519db132d2544e2847b76e34947d165fa
==================================================
When coercing an object to an array type in Expression Langauage, handle the case where the source object is an array of primitives.
==================================================
Mark Emlyn
==================================================
Wed Oct 29 09:49:02 2014 +0000
==================================================
ELSupport.java
When coercing an object to an array type in Expression Langauage, handle the case where the source object is an array of primitives.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1635081 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestELProcessor.java
index 7d4dd58885..47d595fb42 100644
--- a/java/org/apache/el/lang/ELSupport.java
+++ b/java/org/apache/el/lang/ELSupport.java
@@ -494,16 +494,18 @@ public class ELSupport {
             final Class<?> type) {
         // Note: Nested arrays will result in nested calls to this method.
 
+        // Note: Calling method has checked the obj is an array.
+
+        int size = Array.getLength(obj);
         // Cast the input object to an array (calling method has checked it is
         // an array)
-        Object[] array = (Object[]) obj;
         // Get the target type for the array elements
         Class<?> componentType = type.getComponentType();
         // Create a new array of the correct type
-        Object result = Array.newInstance(componentType, array.length);
+        Object result = Array.newInstance(componentType, size);
         // Coerce each element in turn.
-        for (int i = 0; i < array.length; i++) {
-            Array.set(result, i, coerceToType(array[i], componentType));
+        for (int i = 0; i < size; i++) {
+            Array.set(result, i, coerceToType(Array.get(obj, i), componentType));
         }
 
         return result;

==================================================
TesterBean.java
index 18691bc71a..4d3a14611d 100644
--- a/test/javax/el/TestELProcessor.java
+++ b/test/javax/el/TestELProcessor.java
@@ -191,4 +191,21 @@ public class TestELProcessor {
         elp.eval("fn:test(null, null)");
         Assert.assertEquals("I", TesterFunctions.getCallList());
     }
+
+
+    @Test
+    public void testPrimitiveArray01() {
+        ELProcessor elp = new ELProcessor();
+        TesterBean bean01= new TesterBean("bean01");
+        elp.defineBean("bean01", bean01);
+        elp.defineBean("bean02", new TesterBean("bean02"));
+
+        Object result = elp.eval("bean02.setValueC(bean01.valueB);bean02.valueC");
+
+        Integer[] resultArray = (Integer[]) result;
+        Assert.assertEquals(bean01.getValueB().length, resultArray.length);
+        for (int i = 0; i < resultArray.length; i++) {
+            Assert.assertEquals(bean01.getValueB()[i], resultArray[i].intValue());
+        }
+    }
 }

==================================================
