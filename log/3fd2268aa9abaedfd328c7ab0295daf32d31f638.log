3fd2268aa9abaedfd328c7ab0295daf32d31f638
==================================================
Refactor to avoid cast
==================================================
Mark Thomas
==================================================
Tue Dec 10 10:23:04 2019 +0000
==================================================
UpgradeProtocol.java
Refactor to avoid cast


==================================================
AbstractHttp11Protocol.java
index 6fdb29ac7a..dc840df9e4 100644
--- a/java/org/apache/coyote/UpgradeProtocol.java
+++ b/java/org/apache/coyote/UpgradeProtocol.java
@@ -91,4 +91,20 @@ public interface UpgradeProtocol {
      *         <code>false</code>
      */
     public boolean accept(Request request);
+
+
+    /**
+     * Configure the HTTP/1.1 protocol that this UpgradeProcotol is nested
+     * under. Connections passed to this UpgradeProtocol via HTTP upgrade will
+     * have been initially handled by this HTTP/1.1 protocol implementation.
+     * <p>
+     * The default implementation is a NO-OP.
+     *
+     * @param protocol The HTTP/1.1 protocol implementation that will initially
+     *                 handle any connections passed to this UpgradeProtocol via
+     *                 the HTTP upgrade mechanism
+     */
+    public default void setHttp11Protocol(AbstractProtocol<?> protocol) {
+        // NO-OP
+    }
 }

==================================================
Http2Protocol.java
index e8a5b91d17..9189b59ac5 100644
--- a/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
+++ b/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
@@ -39,7 +39,6 @@ import org.apache.coyote.UpgradeToken;
 import org.apache.coyote.http11.upgrade.InternalHttpUpgradeHandler;
 import org.apache.coyote.http11.upgrade.UpgradeProcessorExternal;
 import org.apache.coyote.http11.upgrade.UpgradeProcessorInternal;
-import org.apache.coyote.http2.Http2Protocol;
 import org.apache.tomcat.util.buf.StringUtils;
 import org.apache.tomcat.util.net.AbstractEndpoint;
 import org.apache.tomcat.util.net.SSLHostConfig;
@@ -500,9 +499,7 @@ public abstract class AbstractHttp11Protocol<S> extends AbstractProtocol<S> {
             }
         }
 
-        if (upgradeProtocol instanceof Http2Protocol) {
-            ((Http2Protocol) upgradeProtocol).setHttp11Protocol(this);
-        }
+        upgradeProtocol.setHttp11Protocol(this);
     }
     @Override
     public UpgradeProtocol getNegotiatedProtocol(String negotiatedName) {

==================================================
