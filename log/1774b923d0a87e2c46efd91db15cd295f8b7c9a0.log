1774b923d0a87e2c46efd91db15cd295f8b7c9a0
==================================================
FindBugs fixes
==================================================
Mark Thomas
==================================================
Wed Nov 11 20:46:09 2015 +0000
==================================================
JDBCStore.java
FindBugs fixes

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1713931 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ClassLoaderFactory.java
index b9058dcdc6..ff8237be96 100644
--- a/java/org/apache/catalina/session/JDBCStore.java
+++ b/java/org/apache/catalina/session/JDBCStore.java
@@ -889,15 +889,11 @@ public class JDBCStore extends StoreBase {
             try {
                 Class<?> clazz = Class.forName(driverName);
                 driver = (Driver) clazz.newInstance();
-            } catch (ClassNotFoundException ex) {
-                manager.getContext().getLogger().error(sm.getString(getStoreName() + ".checkConnectionClassNotFoundException",
-                        ex.toString()));
-            } catch (InstantiationException ex) {
-                manager.getContext().getLogger().error(sm.getString(getStoreName() + ".checkConnectionClassNotFoundException",
-                        ex.toString()));
-            } catch (IllegalAccessException ex) {
-                manager.getContext().getLogger().error(sm.getString(getStoreName() + ".checkConnectionClassNotFoundException",
-                        ex.toString()));
+            } catch (ClassNotFoundException | InstantiationException | IllegalAccessException e) {
+                manager.getContext().getLogger().error(
+                        sm.getString(getStoreName() + ".checkConnectionClassNotFoundException",
+                        e.toString()));
+                throw new SQLException(e);
             }
         }
 

==================================================
HomesUserDatabase.java
index f604046e05..2698e17f20 100644
--- a/java/org/apache/catalina/startup/ClassLoaderFactory.java
+++ b/java/org/apache/catalina/startup/ClassLoaderFactory.java
@@ -102,6 +102,9 @@ public final class ClassLoaderFactory {
                 if (!directory.isDirectory() || !directory.canRead())
                     continue;
                 String filenames[] = directory.list();
+                if (filenames == null) {
+                    continue;
+                }
                 for (int j = 0; j < filenames.length; j++) {
                     String filename = filenames[j].toLowerCase(Locale.ENGLISH);
                     if (!filename.endsWith(".jar"))
@@ -189,6 +192,9 @@ public final class ClassLoaderFactory {
                         log.debug("  Including directory glob "
                             + directory.getAbsolutePath());
                     String filenames[] = directory.list();
+                    if (filenames == null) {
+                        continue;
+                    }
                     for (int j = 0; j < filenames.length; j++) {
                         String filename = filenames[j].toLowerCase(Locale.ENGLISH);
                         if (!filename.endsWith(".jar"))

==================================================
ExtensionValidator.java
index 9bac9b59b7..a301af773e 100644
--- a/java/org/apache/catalina/startup/HomesUserDatabase.java
+++ b/java/org/apache/catalina/startup/HomesUserDatabase.java
@@ -131,6 +131,9 @@ public final class HomesUserDatabase
         if (!homeBaseDir.exists() || !homeBaseDir.isDirectory())
             return;
         String homeBaseFiles[] = homeBaseDir.list();
+        if (homeBaseFiles == null) {
+            return;
+        }
 
         for (int i = 0; i < homeBaseFiles.length; i++) {
             File homeDir = new File(homeBaseDir, homeBaseFiles[i]);
@@ -138,9 +141,5 @@ public final class HomesUserDatabase
                 continue;
             homes.put(homeBaseFiles[i], homeDir.toString());
         }
-
-
     }
-
-
 }

==================================================
Http2UpgradeHandler.java
index e098a74946..35307d169b 100644
--- a/java/org/apache/catalina/util/ExtensionValidator.java
+++ b/java/org/apache/catalina/util/ExtensionValidator.java
@@ -354,6 +354,9 @@ public final class ExtensionValidator {
                     continue;
                 }
                 File[] files = targetDir.listFiles();
+                if (files == null) {
+                    continue;
+                }
                 for (int i = 0; i < files.length; i++) {
                     if (files[i].getName().toLowerCase(Locale.ENGLISH).endsWith(".jar") &&
                             files[i].isFile()) {

==================================================
JspC.java
index ecea9bd9b3..f7f7690e31 100644
--- a/java/org/apache/coyote/http2/Http2UpgradeHandler.java
+++ b/java/org/apache/coyote/http2/Http2UpgradeHandler.java
@@ -931,6 +931,7 @@ public class Http2UpgradeHandler extends AbstractStream implements InternalHttpU
     private void pruneClosedStreams() {
         // Only prune every 10 new streams
         if (newStreamsSinceLastPrune < 9) {
+            // Not atomic. Increments may be lost. Not a problem.
             newStreamsSinceLastPrune++;
             return;
         }

==================================================
JspCServletContext.java
index d4cf663c6f..8cc64dafcb 100644
--- a/java/org/apache/jasper/JspC.java
+++ b/java/org/apache/jasper/JspC.java
@@ -1577,26 +1577,28 @@ public class JspC extends Task implements Options {
             File lib = new File(webappBase, "/WEB-INF/lib");
             if (lib.exists() && lib.isDirectory()) {
                 String[] libs = lib.list();
-                for (int i = 0; i < libs.length; i++) {
-                    if( libs[i].length() <5 ) continue;
-                    String ext=libs[i].substring( libs[i].length() - 4 );
-                    if (! ".jar".equalsIgnoreCase(ext)) {
-                        if (".tld".equalsIgnoreCase(ext)) {
-                            log.warn("TLD files should not be placed in "
-                                     + "/WEB-INF/lib");
+                if (libs != null) {
+                    for (int i = 0; i < libs.length; i++) {
+                        if( libs[i].length() <5 ) continue;
+                        String ext=libs[i].substring( libs[i].length() - 4 );
+                        if (! ".jar".equalsIgnoreCase(ext)) {
+                            if (".tld".equalsIgnoreCase(ext)) {
+                                log.warn("TLD files should not be placed in "
+                                         + "/WEB-INF/lib");
+                            }
+                            continue;
+                        }
+                        try {
+                            File libFile = new File(lib, libs[i]);
+                            classPath = classPath + File.pathSeparator
+                                + libFile.getAbsolutePath();
+                            urls.add(libFile.getAbsoluteFile().toURI().toURL());
+                        } catch (IOException ioe) {
+                            // failing a toCanonicalPath on a file that
+                            // exists() should be a JVM regression test,
+                            // therefore we have permission to freak out
+                            throw new RuntimeException(ioe.toString());
                         }
-                        continue;
-                    }
-                    try {
-                        File libFile = new File(lib, libs[i]);
-                        classPath = classPath + File.pathSeparator
-                            + libFile.getAbsolutePath();
-                        urls.add(libFile.getAbsoluteFile().toURI().toURL());
-                    } catch (IOException ioe) {
-                        // failing a toCanonicalPath on a file that
-                        // exists() should be a JVM regression test,
-                        // therefore we have permission to freak out
-                        throw new RuntimeException(ioe.toString());
                     }
                 }
             }

==================================================
TldScanner.java
index be58a40d8a..efe67d401f 100644
--- a/java/org/apache/jasper/servlet/JspCServletContext.java
+++ b/java/org/apache/jasper/servlet/JspCServletContext.java
@@ -389,6 +389,9 @@ public class JspCServletContext implements ServletContext {
         if (!theBaseDir.exists() || !theBaseDir.isDirectory())
             return (thePaths);
         String theFiles[] = theBaseDir.list();
+        if (theFiles == null) {
+            return thePaths;
+        }
         for (int i = 0; i < theFiles.length; i++) {
             File testFile = new File(basePath + File.separator + theFiles[i]);
             if (testFile.isFile())

==================================================
TesterPerformance.java
index 3b42631215..01bc9f3f97 100644
--- a/res/findbugs/filter-false-positives.xml
+++ b/res/findbugs/filter-false-positives.xml
@@ -182,6 +182,21 @@
     <Method name="run"/>
     <Bug code="NS"/>
   </Match>
+  <Match>
+    <!-- Sync is to protect construction of data not individual fields -->
+    <Class name="org.apache.catalina.tribes.membership.MemberImpl"/>
+    <Or>
+      <Method name="getCommand"/>
+      <Method name="getDomain"/>
+      <Method name="getHost"/>
+      <Method name="getPayload"/>
+      <Method name="getPort"/>
+      <Method name="getSecurePort"/>
+      <Method name="getUdpPort"/>
+      <Method name="getUniqueId"/>
+    </Or>
+    <Bug pattern="UG_SYNC_SET_UNSYNC_GET"/>
+  </Match>
   <Match>
     <!-- Intentional in case thread is waiting -->
     <Class name="org.apache.catalina.tribes.transport.RxTaskPool"/>
@@ -200,6 +215,17 @@
     <Method name="open" />
     <Bug code="SQL" />
   </Match>
+  <Match>
+    <!-- Use of synchronisation is required to make a sequence of calls in   -->
+    <!-- one method appear to be atomic.                                     -->
+    <Class name="org.apache.coyote.AbstractProcessorLight"/>
+    <Or>
+      <Method name="addDispatch"/>
+      <Method name="getIteratorAndClearDispatches"/>
+      <Method name="clearDispatches"/>
+    </Or>
+    <Bug pattern="JLM_JSR166_UTILCONCURRENT_MONITORENTER" />
+  </Match>
   <Match>
     <!-- Correct behaviour does not assume sequential operations on concurrent
          hash map are atomic. -->
@@ -241,6 +267,12 @@
     <Method name="createRemoteStream" />
     <Bug pattern="IM_BAD_CHECK_FOR_ODD" />
   </Match>
+  <Match>
+    <!-- Loss of the occasional increment is acceptable. -->
+    <Class name="org.apache.coyote.http2.Http2UpgradeHandler" />
+    <Method name="pruneClosedStreams" />
+    <Bug pattern="VO_VOLATILE_INCREMENT" />
+  </Match>
   <Match>
     <!-- Notify is correct. Condition changed outside of this method. -->
     <Class name="org.apache.coyote.http2.Http2UpgradeHandler" />
@@ -464,6 +496,15 @@
     <Method name="run"/>
     <Bug code="ML" />
   </Match>
+  <Match>
+    <!-- Modifications to SocketLists are always protected by syncs -->
+    <Class name="org.apache.tomcat.util.net.AprEndpoint$SocketList"/>
+    <Or>
+      <Method name="add"/>
+      <Method name="remove"/>
+    </Or>
+    <Bug pattern="VO_VOLATILE_INCREMENT"/>
+  </Match>
   <Match>
     <!-- Object is only ever set to null, sync therefore is still valid -->
     <Class name="org.apache.tomcat.util.net.AprEndpoint$SocketProcessor"/>
@@ -497,17 +538,6 @@
     <Method name="rehandshake"/>
     <Bug code="DE" />
   </Match>
-  <Match>
-    <!-- Use of synchronisation is required to make a sequence of calls in   -->
-    <!-- one method appear to be atomic.                                     -->
-    <Class name="org.apache.tomcat.util.net.SocketWrapper"/>
-    <Or>
-      <Method name="addDispatch"/>
-      <Method name="getIteratorAndClearDispatches"/>
-      <Method name="clearDispatches"/>
-    </Or>
-    <Bug pattern="JLM_JSR166_UTILCONCURRENT_MONITORENTER" />
-  </Match>
   <Match>
     <!-- Yes the simple name is the same as the super class. Accept it. -->
     <Class name="org.apache.tomcat.util.threads.ThreadPoolExecutor" />
@@ -691,8 +721,8 @@
   <Match>
     <!-- Code is deliberately unused -->
     <Or>
-      <Class name="org.apache.catalina.webresources.AbstractTestDirResourceSet" />
       <Class name="org.apache.catalina.webresources.AbstractTestFileResourceSet" />
+      <Class name="org.apache.catalina.webresources.TestDirResourceSet" />
       <Class name="org.apache.catalina.webresources.TestJarResourceSet" />
       <Class name="org.apache.catalina.webresources.TestJarResourceSetInternal" />
     </Or>
@@ -733,6 +763,22 @@
     </Or>
     <Bug code="RR" />
   </Match>
+  <Match>
+    <Class name="org.apache.tomcat.util.threads.TestLimitLatch" />
+    <Or>
+      <Method name="waitForThreadToStop" />
+      <Method name="testTenWait" />
+    </Or>
+    <Bug pattern="NN_NAKED_NOTIFY " />
+  </Match>
+  <Match>
+    <Class name="org.apache.tomcat.util.threads.TestLimitLatch$TestThread" />
+     <Method name="run" />
+     <Or>
+      <Bug pattern="WA_NOT_IN_LOOP" />
+      <Bug pattern="UW_UNCOND_WAIT " />
+    </Or>
+  </Match>
   <Match>
     <!-- Code is deliberately unused -->
     <Class name="org.apache.tomcat.websocket.server.TestUriTemplate" />

==================================================
