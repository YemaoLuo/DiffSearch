b51052483ec3687c6b4db05288d7546d8431eaf0
==================================================
Move ADD_CHILD_EVENT to before the optional container start
==================================================
remm remm@apache.org
==================================================
Wed May 29 09:45:54 2019 +0200
==================================================
Container.java
Move ADD_CHILD_EVENT to before the optional container start

Since child start is optional and may be delayed, container listeners
already had to handle this situation (and the mapper indeed does). As
the (correct) sequence is now add to collection -> add_child_event ->
start, on stop it is updated to stop -> remove_child_event -> remove
from collection (for consistency, in practice it is unlikely to make any
difference.
Revert the addition of two container events.
Thanks Mark for the review and the comment.


==================================================
ContainerBase.java
index 0b30247c99..177b2d24d0 100644
--- a/java/org/apache/catalina/Container.java
+++ b/java/org/apache/catalina/Container.java
@@ -82,13 +82,6 @@ public interface Container extends Lifecycle {
     // ----------------------------------------------------- Manifest Constants
 
 
-    /**
-     * The ContainerEvent event type sent when a child container is added
-     * by <code>addChild()</code>, but before it is started.
-     */
-    public static final String ADD_CHILD_BEFORE_START_EVENT = "addChildBeforeStart";
-
-
     /**
      * The ContainerEvent event type sent when a child container is added
      * by <code>addChild()</code>.
@@ -103,13 +96,6 @@ public interface Container extends Lifecycle {
     public static final String ADD_VALVE_EVENT = "addValve";
 
 
-    /**
-     * The ContainerEvent event type sent when a child container is removed
-     * by <code>removeChild()</code>, but before it is stopped.
-     */
-    public static final String REMOVE_CHILD_BEFORE_STOP_EVENT = "removeChildBeforeStop";
-
-
     /**
      * The ContainerEvent event type sent when a child container is removed
      * by <code>removeChild()</code>.

==================================================
FrameworkListener.java
index f3a30111ac..8bbfaf8d12 100644
--- a/java/org/apache/catalina/core/ContainerBase.java
+++ b/java/org/apache/catalina/core/ContainerBase.java
@@ -693,8 +693,10 @@ public abstract class ContainerBase extends LifecycleMBeanBase
 
     private void addChildInternal(Container child) {
 
-        if( log.isDebugEnabled() )
+        if (log.isDebugEnabled()) {
             log.debug("Add child " + child + " " + this);
+        }
+
         synchronized(children) {
             if (children.get(child.getName()) != null)
                 throw new IllegalArgumentException(
@@ -703,7 +705,7 @@ public abstract class ContainerBase extends LifecycleMBeanBase
             children.put(child.getName(), child);
         }
 
-        fireContainerEvent(ADD_CHILD_BEFORE_START_EVENT, child);
+        fireContainerEvent(ADD_CHILD_EVENT, child);
 
         // Start child
         // Don't do this inside sync block - start can be a slow process and
@@ -716,8 +718,6 @@ public abstract class ContainerBase extends LifecycleMBeanBase
             }
         } catch (LifecycleException e) {
             throw new IllegalStateException(sm.getString("containerBase.child.start"), e);
-        } finally {
-            fireContainerEvent(ADD_CHILD_EVENT, child);
         }
     }
 
@@ -800,8 +800,6 @@ public abstract class ContainerBase extends LifecycleMBeanBase
             return;
         }
 
-        fireContainerEvent(REMOVE_CHILD_BEFORE_STOP_EVENT, child);
-
         try {
             if (child.getState().isAvailable()) {
                 child.stop();
@@ -821,13 +819,14 @@ public abstract class ContainerBase extends LifecycleMBeanBase
             log.error(sm.getString("containerBase.child.destroy"), e);
         }
 
+        fireContainerEvent(REMOVE_CHILD_EVENT, child);
+
         synchronized(children) {
             if (children.get(child.getName()) == null)
                 return;
             children.remove(child.getName());
         }
 
-        fireContainerEvent(REMOVE_CHILD_EVENT, child);
     }
 
 

==================================================
