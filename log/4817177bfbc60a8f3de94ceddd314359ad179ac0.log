4817177bfbc60a8f3de94ceddd314359ad179ac0
==================================================
Add optional use of connector port in allow
==================================================
Rainer Jung
==================================================
Sun Nov 30 16:43:23 2014 +0000
==================================================
RemoteAddrValve.java
Add optional use of connector port in allow
and deny expressions for RemoteAddrValve
and RemoteHostValve.

For example one can let everybody access the
HTTPS connector but restrict access to HTTP
to localhost or a monitoring client.


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1642564 13f79535-47bb-0310-9956-ffa450edef68



==================================================
RemoteHostValve.java
index 0fe10fa20b..10befe58fc 100644
--- a/java/org/apache/catalina/valves/RemoteAddrValve.java
+++ b/java/org/apache/catalina/valves/RemoteAddrValve.java
@@ -27,12 +27,47 @@ import org.apache.catalina.connector.Response;
 
 /**
  * Concrete implementation of <code>RequestFilterValve</code> that filters
- * based on the string representation of the remote client's IP address.
+ * based on the string representation of the remote client's IP address
+ * optionally combined with the server port number.
  *
  * @author Craig R. McClanahan
  */
 public final class RemoteAddrValve extends RequestFilterValve {
 
+    // ----------------------------------------------------- Instance Variables
+
+    /**
+     * Flag deciding whether we add the server port to the property
+     * compared in the filtering method. The port will be appended
+     * using a "," as a separator.
+     */
+    protected volatile boolean addLocalPort = false;
+
+    // ------------------------------------------------------------- Properties
+
+
+    /**
+     * Get the flag deciding whether we add the server port to the
+     * property compared in the filtering method. The port will be appended
+     * using a "," as a separator.
+     */
+    public boolean getAddLocalPort() {
+        return addLocalPort;
+    }
+
+
+    /**
+     * Set the flag deciding whether we add the server port to the
+     * property compared in the filtering method. The port will be appended
+     * using a "," as a separator.
+     *
+     * @param addLocalPort The new flag
+     */
+    public void setAddLocalPort(boolean addLocalPort) {
+        this.addLocalPort = addLocalPort;
+    }
+
+
     // --------------------------------------------------------- Public Methods
 
     /**
@@ -51,7 +86,13 @@ public final class RemoteAddrValve extends RequestFilterValve {
     public void invoke(Request request, Response response)
         throws IOException, ServletException {
 
-        process(request.getRequest().getRemoteAddr(), request, response);
+        String property;
+        if (addLocalPort) {
+            property = request.getRequest().getRemoteAddr() + "," + request.getConnector().getPort();
+        } else {
+            property = request.getRequest().getRemoteAddr();
+        }
+        process(property, request, response);
 
     }
 }

==================================================
TestRequestFilterValve.java
index 5c5d4257a2..41c86264a9 100644
--- a/java/org/apache/catalina/valves/RemoteHostValve.java
+++ b/java/org/apache/catalina/valves/RemoteHostValve.java
@@ -27,12 +27,47 @@ import org.apache.catalina.connector.Response;
 
 /**
  * Concrete implementation of <code>RequestFilterValve</code> that filters
- * based on the remote client's host name.
+ * based on the remote client's host name optionally combined with the
+ * server port number.
  *
  * @author Craig R. McClanahan
  */
 public final class RemoteHostValve extends RequestFilterValve {
 
+    // ----------------------------------------------------- Instance Variables
+
+    /**
+     * Flag deciding whether we add the server port to the property
+     * compared in the filtering method. The port will be appended
+     * using a "," as a separator.
+     */
+    protected volatile boolean addLocalPort = false;
+
+    // ------------------------------------------------------------- Properties
+
+
+    /**
+     * Get the flag deciding whether we add the server port to the
+     * property compared in the filtering method. The port will be appended
+     * using a "," as a separator.
+     */
+    public boolean getAddLocalPort() {
+        return addLocalPort;
+    }
+
+
+    /**
+     * Set the flag deciding whether we add the server port to the
+     * property compared in the filtering method. The port will be appended
+     * using a "," as a separator.
+     *
+     * @param addLocalPort The new flag
+     */
+    public void setAddLocalPort(boolean addLocalPort) {
+        this.addLocalPort = addLocalPort;
+    }
+
+
     // --------------------------------------------------------- Public Methods
 
     /**
@@ -51,7 +86,13 @@ public final class RemoteHostValve extends RequestFilterValve {
     public void invoke(Request request, Response response)
         throws IOException, ServletException {
 
-        process(request.getRequest().getRemoteHost(), request, response);
+        String property;
+        if (addLocalPort) {
+            property = request.getRequest().getRemoteHost() + "," + request.getConnector().getPort();
+        } else {
+            property = request.getRequest().getRemoteHost();
+        }
+        process(property, request, response);
 
     }
 }

==================================================
