aa197ea563cb28105e72ae21c6f43033c4eba847
==================================================
Reduce code duplication
==================================================
Mark Emlyn
==================================================
Wed Nov 17 16:26:23 2010 +0000
==================================================
BackupManager.java
Reduce code duplication
Initialise the random number generator once in ManagerBase

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1036099 13f79535-47bb-0310-9956-ffa450edef68



==================================================
DeltaManager.java
index 179f2ff526..67f51ed0b8 100644
--- a/java/org/apache/catalina/ha/session/BackupManager.java
+++ b/java/org/apache/catalina/ha/session/BackupManager.java
@@ -151,8 +151,7 @@ public class BackupManager extends ClusterManagerBase
     @Override
     protected synchronized void startInternal() throws LifecycleException {
         
-        // Force initialization of the random number generator
-        generateSessionId();
+        super.startInternal();
 
         try {
             cluster.registerManager(this);

==================================================
ManagerBase.java
index ddff94f26d..c5ef39af0c 100644
--- a/java/org/apache/catalina/ha/session/DeltaManager.java
+++ b/java/org/apache/catalina/ha/session/DeltaManager.java
@@ -737,8 +737,7 @@ public CatalinaCluster getCluster() {
     @Override
     protected synchronized void startInternal() throws LifecycleException {
 
-        // Force initialization of the random number generator
-        generateSessionId();
+    	super.startInternal();
 
         // Load unloaded sessions, if any
         try {

==================================================
PersistentManagerBase.java
index a36b8fb771..9cfba8a202 100644
--- a/java/org/apache/catalina/session/ManagerBase.java
+++ b/java/org/apache/catalina/session/ManagerBase.java
@@ -815,23 +815,30 @@ public abstract class ManagerBase extends LifecycleMBeanBase
 
     }
 
-    @Override
-    protected void destroyInternal() throws LifecycleException {
-        closeRandomFile();
-        super.destroyInternal();
-    }
-    
     @Override
     protected void initInternal() throws LifecycleException {
         
         super.initInternal();
         
         setDistributable(((Context) getContainer()).getDistributable());
+    }
 
-        // Initialize random number generation
-        getRandomBytes(new byte[16]);
+    @Override
+    protected void startInternal() throws LifecycleException {
+        // Force initialization of the random number generator
+        if (log.isDebugEnabled())
+            log.debug("Force random number initialization starting");
+        generateSessionId();
+        if (log.isDebugEnabled())
+            log.debug("Force random number initialization completed");
     }
 
+    @Override
+    protected void destroyInternal() throws LifecycleException {
+        closeRandomFile();
+        super.destroyInternal();
+    }
+    
     /**
      * Add this Session to the set of active Sessions for this Manager.
      *

==================================================
StandardManager.java
index d15b081e5e..9b313ea906 100644
--- a/java/org/apache/catalina/session/PersistentManagerBase.java
+++ b/java/org/apache/catalina/session/PersistentManagerBase.java
@@ -822,12 +822,7 @@ public abstract class PersistentManagerBase extends ManagerBase {
     @Override
     protected synchronized void startInternal() throws LifecycleException {
 
-        // Force initialization of the random number generator
-        if (log.isDebugEnabled())
-            log.debug("Force random number initialization starting");
-        generateSessionId();
-        if (log.isDebugEnabled())
-            log.debug("Force random number initialization completed");
+    	super.startInternal();
 
         if (store == null)
             log.error("No Store configured, persistence disabled");

==================================================
