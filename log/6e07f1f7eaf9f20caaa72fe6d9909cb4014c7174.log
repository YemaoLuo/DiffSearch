6e07f1f7eaf9f20caaa72fe6d9909cb4014c7174
==================================================
Forward port of BZ 42509 and BZ 42515
==================================================
Filip Hanik
==================================================
Fri Jun 1 07:40:37 2007 +0000
==================================================
BeanELResolver.java
Forward port of BZ 42509 and BZ 42515


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@543414 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ResourceBundleELResolver.java
index 109f6cea21..186ffa4435 100644
--- a/java/javax/el/BeanELResolver.java
+++ b/java/javax/el/BeanELResolver.java
@@ -81,7 +81,7 @@ public class BeanELResolver extends ELResolver {
 		}
 
 		context.setPropertyResolved(true);
-		return this.property(context, base, property).getType();
+		return this.property(context, base, property).getPropertyType();
 	}
 
 	public void setValue(ELContext context, Object base, Object property,
@@ -105,7 +105,7 @@ public class BeanELResolver extends ELResolver {
 
 		Method m = this.property(context, base, property).write(context);
 		try {
-			m.invoke(base, new Object[] { value });
+			m.invoke(base, value);
 		} catch (IllegalAccessException e) {
 			throw new ELException(e);
 		} catch (InvocationTargetException e) {
@@ -187,7 +187,7 @@ public class BeanELResolver extends ELResolver {
 			}
 		}
 
-		public BeanProperty get(ELContext ctx, String name) {
+		private BeanProperty get(ELContext ctx, String name) {
 			BeanProperty property = this.properties.get(name);
 			if (property == null) {
 				throw new PropertyNotFoundException(message(ctx,
@@ -196,8 +196,12 @@ public class BeanELResolver extends ELResolver {
 			}
 			return property;
 		}
+
+        public BeanProperty getBeanProperty(String name) {
+            return get(null, name);
+        }
         
-        public Class<?> getType() {
+        private Class<?> getType() {
             return type;
         }
 	}
@@ -213,13 +217,13 @@ public class BeanELResolver extends ELResolver {
 
 		private Method write;
 
-		public BeanProperty(Class owner, PropertyDescriptor descriptor) {
+		public BeanProperty(Class<?> owner, PropertyDescriptor descriptor) {
 			this.owner = owner;
 			this.descriptor = descriptor;
 			this.type = descriptor.getPropertyType();
 		}
 
-		public Class<?> getType() {
+		public Class getPropertyType() {
 			return this.type;
 		}
 
@@ -228,7 +232,15 @@ public class BeanELResolver extends ELResolver {
 		        && (null == (this.write = getMethod(this.owner, descriptor.getWriteMethod())));
 		}
 
-		public Method write(ELContext ctx) {
+		public Method getWriteMethod() {
+			return write(null);
+		}
+
+		public Method getReadMethod() {
+			return this.read(null);
+		}
+
+		private Method write(ELContext ctx) {
 			if (this.write == null) {
 				this.write = getMethod(this.owner, descriptor.getWriteMethod());
 				if (this.write == null) {
@@ -240,7 +252,7 @@ public class BeanELResolver extends ELResolver {
 			return this.write;
 		}
 
-		public Method read(ELContext ctx) {
+		private Method read(ELContext ctx) {
 			if (this.read == null) {
 				this.read = getMethod(this.owner, descriptor.getReadMethod());
 				if (this.read == null) {

==================================================
ScopedAttributeELResolver.java
index 0f1a6bb10e..b7c5eea3a9 100644
--- a/java/javax/el/ResourceBundleELResolver.java
+++ b/java/javax/el/ResourceBundleELResolver.java
@@ -95,7 +95,7 @@ public class ResourceBundleELResolver extends ELResolver {
 		return true;
 	}
 
-	public Iterator<FeatureDescriptor> getFeatureDescriptors(ELContext context, Object base) {
+	public Iterator getFeatureDescriptors(ELContext context, Object base) {
 		if (base instanceof ResourceBundle) {
 			List<FeatureDescriptor> feats = new ArrayList<FeatureDescriptor>();
 			Enumeration e = ((ResourceBundle) base).getKeys();

==================================================
TagInfo.java
index 4568014046..d78dbd8b93 100644
--- a/java/javax/servlet/jsp/el/ScopedAttributeELResolver.java
+++ b/java/javax/servlet/jsp/el/ScopedAttributeELResolver.java
@@ -57,7 +57,7 @@ public class ScopedAttributeELResolver extends ELResolver {
 		return null;
 	}
 
-	public Class getType(ELContext context, Object base, Object property)
+	public Class<Object> getType(ELContext context, Object base, Object property)
 			throws NullPointerException, PropertyNotFoundException, ELException {
 		if (context == null) {
 			throw new NullPointerException();

==================================================
