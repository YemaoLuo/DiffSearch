8828b884a7f7cf4f69a047af1325e83f1c499d7e
==================================================
get rid of closeListener, it turns into spaghetti code
==================================================
Filip Hanik
==================================================
Thu Dec 11 03:40:13 2008 +0000
==================================================
ConnectionPool.java
get rid of closeListener, it turns into spaghetti code


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@725564 13f79535-47bb-0310-9956-ffa450edef68



==================================================
PoolProperties.java
index 00c9a57318..c4eaa99895 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/ConnectionPool.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/ConnectionPool.java
@@ -58,18 +58,12 @@ import javax.management.ObjectName;
  */
 
 public class ConnectionPool {
-    public static interface CloseListener {
-        void poolClosed(ConnectionPool pool);
-    }
-
     //logger
     protected static Log log = LogFactory.getLog(ConnectionPool.class);
 
     //===============================================================================
     //         INSTANCE/QUICK ACCESS VARIABLE
     //===============================================================================
-    protected ConcurrentLinkedQueue<CloseListener> listeners = new ConcurrentLinkedQueue<CloseListener>();
-    
     /**
      * All the information about the connection pool
      */
@@ -259,14 +253,6 @@ public class ConnectionPool {
         close(true);
     }
 
-    public void addCloseListener(CloseListener listener) {
-        listeners.add(listener);
-    }
-    
-    public void removeCloseListener(CloseListener listener) {
-        listeners.remove(listener);
-    }
-    
     /**
      * Closes the pool and all disconnects all idle connections
      * Active connections will be closed upon the {@link java.sql.Connection#close close} method is called
@@ -306,10 +292,6 @@ public class ConnectionPool {
         size.set(0);
         if (this.getPoolProperties().isJmxEnabled()) stopJmx();
         
-        while (listeners.size()>0) {
-            CloseListener listener = listeners.poll();
-            if (listener!=null) listener.poolClosed(this);
-        }
     } //closePool
 
 

==================================================
PooledConnection.java
index 57a0d1bf8b..dbf4992786 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/PoolProperties.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/PoolProperties.java
@@ -54,7 +54,7 @@ public class PoolProperties {
     protected int removeAbandonedTimeout = 60;
     protected boolean logAbandoned = false;
     protected int loginTimeout = 10000;
-    protected String name = "Tomcat Connection Pool["+(poolCounter.addAndGet(1))+"]";
+    protected String name = "Tomcat Connection Pool["+(poolCounter.addAndGet(1))+","+System.identityHashCode(PoolProperties.class)+"]";
     protected String password;
     protected String username;
     protected long validationInterval = 30000;

==================================================
SlowQueryReport.java
index 7288f0ddc4..d79e7de2c5 100644
--- a/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/PooledConnection.java
+++ b/modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/PooledConnection.java
@@ -117,7 +117,7 @@ public class PooledConnection {
 
 
 //============================================================================
-//             com.filip.util.IPoolObject methods
+//             
 //============================================================================
 
     public long getAbandonTimeout() {

==================================================
