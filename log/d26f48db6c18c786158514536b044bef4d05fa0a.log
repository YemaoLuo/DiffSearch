d26f48db6c18c786158514536b044bef4d05fa0a
==================================================
Fix failing tests. JreCompat caught IAE for canAccess() so do the same
==================================================
Mark Thomas
==================================================
Wed Jul 28 15:18:27 2021 +0100
==================================================
ELProcessor.java
Fix failing tests. JreCompat caught IAE for canAccess() so do the same


==================================================
StaticFieldELResolver.java
index 61d8a2a41e..107bd23541 100644
--- a/java/jakarta/el/ELProcessor.java
+++ b/java/jakarta/el/ELProcessor.java
@@ -118,7 +118,7 @@ public class ELProcessor {
             if (!Modifier.isStatic(method.getModifiers())) {
                 continue;
             }
-            if (!method.canAccess(null)) {
+            if (!Util.canAccess(null, method)) {
                 continue;
             }
             if (method.getName().equals(sig.getName())) {
@@ -191,8 +191,8 @@ public class ELProcessor {
 
         int modifiers = method.getModifiers();
 
-        // Check for static, public method and module access for Java 9+
-        if (!Modifier.isStatic(modifiers) || !method.canAccess(null)) {
+        // Check for static, public method and module access
+        if (!Modifier.isStatic(modifiers) || !Util.canAccess(null, method)) {
             throw new NoSuchMethodException(Util.message(context,
                     "elProcessor.defineFunctionInvalidMethod", method.getName(),
                     method.getDeclaringClass().getName()));

==================================================
Util.java
index 4da5c8ffcb..6722c7adcc 100644
--- a/java/jakarta/el/StaticFieldELResolver.java
+++ b/java/jakarta/el/StaticFieldELResolver.java
@@ -45,7 +45,7 @@ public class StaticFieldELResolver extends ELResolver {
                 int modifiers = field.getModifiers();
                 if (Modifier.isStatic(modifiers) &&
                         Modifier.isPublic(modifiers) &&
-                        field.canAccess(null)) {
+                        Util.canAccess(null, field)) {
                     return field.get(null);
                 }
             } catch (IllegalArgumentException | IllegalAccessException |
@@ -158,7 +158,7 @@ public class StaticFieldELResolver extends ELResolver {
                 int modifiers = field.getModifiers();
                 if (Modifier.isStatic(modifiers) &&
                         Modifier.isPublic(modifiers) &&
-                        field.canAccess(null)) {
+                        Util.canAccess(null, field)) {
                     return field.getType();
                 }
             } catch (IllegalArgumentException | NoSuchFieldException |

==================================================
