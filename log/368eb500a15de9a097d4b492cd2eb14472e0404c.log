368eb500a15de9a097d4b492cd2eb14472e0404c
==================================================
Alternative fix for bug 48795. Add a new property to control if the next request always triggers recompilation after a compilation failure. Defaults to false and only applies in development mode
==================================================
Mark Emlyn
==================================================
Thu Mar 11 20:28:34 2010 +0000
==================================================
EmbeddedServletOptions.java
index 3db15fd40b..a61ab24750 100644
--- a/conf/web.xml
+++ b/conf/web.xml
@@ -194,6 +194,14 @@
   <!--                       to be checked on every access.                 -->
   <!--                       Used in development mode only. [4]             -->
   <!--                                                                      -->
+  <!--   recompileOnFail     If a JSP compilation fails should the          -->
+  <!--                       modificationTestInterval be ignored and the    -->
+  <!--                       next access trigger a re-compilation attempt?  -->
+  <!--                       Used in development mode only and is disabled  -->
+  <!--                       by default as compilation may be expensive and -->
+  <!--                       could lead to excessive resource usage.        -->
+  <!--                       [false]                                        -->
+  <!--                                                                      -->
   <!--   scratchdir          What scratch directory should we use when      -->
   <!--                       compiling JSP pages?  [default work directory  -->
   <!--                       for the current web application]               -->

==================================================
JspC.java
index 8284a8cdee..3fdb0653a7 100644
--- a/java/org/apache/jasper/EmbeddedServletOptions.java
+++ b/java/org/apache/jasper/EmbeddedServletOptions.java
@@ -169,6 +169,11 @@ public final class EmbeddedServletOptions implements Options {
      */
     private int modificationTestInterval = 4;
     
+    /**
+     * Is re-compilation attempted immediately after a failure?
+     */
+    private boolean recompileOnFail = false;
+    
     /**
      * Is generation of X-Powered-By response header enabled/disabled?
      */
@@ -237,6 +242,13 @@ public final class EmbeddedServletOptions implements Options {
         return modificationTestInterval;
     }
     
+    /**
+     * Re-compile on failure.
+     */
+    public boolean getRecompileOnFail() {
+        return recompileOnFail;
+    }
+    
     /**
      * Is Jasper being used in development mode?
      */
@@ -477,6 +489,18 @@ public final class EmbeddedServletOptions implements Options {
             }
         }
         
+        String recompileOnFail = config.getInitParameter("recompileOnFail"); 
+        if (recompileOnFail != null) {
+            if (recompileOnFail.equalsIgnoreCase("true")) {
+                this.recompileOnFail = true;
+            } else if (recompileOnFail.equalsIgnoreCase("false")) {
+                this.recompileOnFail = false;
+            } else {
+                if (log.isWarnEnabled()) {
+                    log.warn(Localizer.getMessage("jsp.warning.recompileOnFail"));
+                }
+            }
+        }
         String development = config.getInitParameter("development");
         if (development != null) {
             if (development.equalsIgnoreCase("true")) {

==================================================
JspCompilationContext.java
index d524df5513..afca8cf9a1 100644
--- a/java/org/apache/jasper/JspC.java
+++ b/java/org/apache/jasper/JspC.java
@@ -520,6 +520,16 @@ public class JspC implements Options {
         return 0;
     }
 
+
+    /**
+     * In JspC this always returns <code>false</code>.
+     * {@inheritDoc}
+     */
+    public boolean getRecompileOnFail() {
+        return false;
+    }
+    
+    
     /**
      * In JspC this always returns <code>false</code>.
      * {@inheritDoc}

==================================================
Options.java
index a3a8a4ac1f..31fcf4a7b6 100644
--- a/java/org/apache/jasper/JspCompilationContext.java
+++ b/java/org/apache/jasper/JspCompilationContext.java
@@ -595,6 +595,10 @@ public class JspCompilationContext {
             } catch (JasperException ex) {
                 // Cache compilation exception
                 jsw.setCompilationException(ex);
+                if (options.getDevelopment() && options.getRecompileOnFail()) {
+                    // Force a recompilation attempt on next access
+                    jsw.setLastModificationTest(-1);
+                }
                 throw ex;
             } catch (Exception ex) {
                 JasperException je = new JasperException(

==================================================
