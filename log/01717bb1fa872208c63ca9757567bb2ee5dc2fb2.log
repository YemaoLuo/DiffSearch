01717bb1fa872208c63ca9757567bb2ee5dc2fb2
==================================================
Delete some deprecated code planned for removal in Tomcat 10
==================================================
Mark Thomas
==================================================
Wed Jan 15 09:35:05 2020 +0000
==================================================
Constants.java
Delete some deprecated code planned for removal in Tomcat 10


==================================================
JspC.java
index 7c8bff2658..700834c7ad 100644
--- a/java/org/apache/coyote/http11/Constants.java
+++ b/java/org/apache/coyote/http11/Constants.java
@@ -103,22 +103,7 @@ public final class Constants {
     /* Various constant "strings" */
     public static final String CONNECTION = "Connection";
     public static final String CLOSE = "close";
-    /**
-     * @deprecated Unused. Will be removed in Tomcat 10.
-     */
-    @Deprecated
-    public static final byte[] CLOSE_BYTES = ByteChunk.convertToBytes(CLOSE);
-    /**
-     * @deprecated Unused. Will be removed in Tomcat 10.
-     */
-    @Deprecated
-    public static final String KEEPALIVE = "keep-alive";
     public static final String KEEP_ALIVE_HEADER_VALUE_TOKEN = "keep-alive";
-    /**
-     * @deprecated Unused. Will be removed in Tomcat 10.
-     */
-    @Deprecated
-    public static final byte[] KEEPALIVE_BYTES = ByteChunk.convertToBytes(KEEPALIVE);
     public static final String CHUNKED = "chunked";
     public static final byte[] ACK_BYTES = ByteChunk.convertToBytes("HTTP/1.1 100 " + CRLF + CRLF);
     public static final String TRANSFERENCODING = "Transfer-Encoding";

==================================================
OS.java
index 6bbb1b3301..c973f29568 100644
--- a/java/org/apache/jasper/JspC.java
+++ b/java/org/apache/jasper/JspC.java
@@ -1035,18 +1035,6 @@ public class JspC extends Task implements Options {
         targetClassName=p;
     }
 
-    /**
-     * File where we generate a web.xml fragment with the class definitions.
-     * @param s New value
-     * @deprecated Will be removed in Tomcat 10.
-     *             Use {@link #setWebXmlInclude(String)}
-     */
-    @Deprecated
-    public void setWebXmlFragment( String s ) {
-        webxmlFile=resolveFile(s).getAbsolutePath();
-        webxmlLevel=INC_WEBXML;
-    }
-
     /**
      * File where we generate configuration with the class definitions to be
      * included in a web.xml file.
@@ -1393,18 +1381,6 @@ public class JspC extends Task implements Options {
         }
     }
 
-    /**
-     * Locate all jsp files in the webapp. Used if no explicit
-     * jsps are specified.
-     * @param base Base path
-     *
-     * @deprecated This will be removed in Tomcat 10. Use {@link #scanFiles()}
-     */
-    @Deprecated
-    public void scanFiles(File base) {
-        scanFiles();
-    }
-
 
     /**
      * Locate all jsp files in the webapp. Used if no explicit jsps are

==================================================
ByteChunk.java
index 6796f23a53..c93a07bc79 100644
--- a/java/org/apache/tomcat/jni/OS.java
+++ b/java/org/apache/tomcat/jni/OS.java
@@ -46,13 +46,6 @@ public class OS {
     private static native boolean is(int type);
 
     public static final boolean IS_UNIX    = is(UNIX);
-    /**
-     * @deprecated Hard-coded to false since there has not been a supported
-     *             Netware platform for many years.
-     *             This will be removed in Tomcat 10 onwards
-     */
-    @Deprecated
-    public static final boolean IS_NETWARE = false;
     public static final boolean IS_WIN32   = is(WIN32);
     public static final boolean IS_WIN64   = is(WIN64);
     public static final boolean IS_LINUX   = is(LINUX);

==================================================
CharChunk.java
index da188ad7fa..aa268ef9b8 100644
--- a/java/org/apache/tomcat/util/buf/ByteChunk.java
+++ b/java/org/apache/tomcat/util/buf/ByteChunk.java
@@ -389,15 +389,6 @@ public final class ByteChunk extends AbstractChunk {
 
     // -------------------- Removing data from the buffer --------------------
 
-    /*
-     * @deprecated Use {@link #subtract()}.
-     *             This method will be removed in Tomcat 10
-     */
-    @Deprecated
-    public int substract() throws IOException {
-        return subtract();
-    }
-
     public int subtract() throws IOException {
         if (checkEof()) {
             return -1;
@@ -405,15 +396,6 @@ public final class ByteChunk extends AbstractChunk {
         return buff[start++] & 0xFF;
     }
 
-    /*
-     * @deprecated Use {@link #subtractB()}.
-     *             This method will be removed in Tomcat 10
-     */
-    @Deprecated
-    public byte substractB() throws IOException {
-        return subtractB();
-    }
-
     public byte subtractB() throws IOException {
         if (checkEof()) {
             return -1;
@@ -422,15 +404,6 @@ public final class ByteChunk extends AbstractChunk {
     }
 
 
-    /*
-     * @deprecated Use {@link #subtract(byte[],int,int)}.
-     *             This method will be removed in Tomcat 10
-     */
-    @Deprecated
-    public int substract(byte dest[], int off, int len) throws IOException {
-        return subtract(dest, off, len);
-    }
-
     public int subtract(byte dest[], int off, int len) throws IOException {
         if (checkEof()) {
             return -1;
@@ -445,26 +418,6 @@ public final class ByteChunk extends AbstractChunk {
     }
 
 
-    /**
-     * Transfers bytes from the buffer to the specified ByteBuffer. After the
-     * operation the position of the ByteBuffer will be returned to the one
-     * before the operation, the limit will be the position incremented by the
-     * number of the transfered bytes.
-     *
-     * @param to the ByteBuffer into which bytes are to be written.
-     * @return an integer specifying the actual number of bytes read, or -1 if
-     *         the end of the stream is reached
-     * @throws IOException if an input or output exception has occurred
-     *
-     * @deprecated Use {@link #subtract(ByteBuffer)}.
-     *             This method will be removed in Tomcat 10
-     */
-    @Deprecated
-    public int substract(ByteBuffer to) throws IOException {
-        return subtract(to);
-    }
-
-
     /**
      * Transfers bytes from the buffer to the specified ByteBuffer. After the
      * operation the position of the ByteBuffer will be returned to the one

==================================================
TLS.java
index 70818dff62..51fa20489a 100644
--- a/java/org/apache/tomcat/util/buf/CharChunk.java
+++ b/java/org/apache/tomcat/util/buf/CharChunk.java
@@ -290,15 +290,6 @@ public final class CharChunk extends AbstractChunk implements CharSequence {
 
     // -------------------- Removing data from the buffer --------------------
 
-    /*
-     * @deprecated Use {@link #subtract()}.
-     *             This method will be removed in Tomcat 10
-     */
-    @Deprecated
-    public int substract() throws IOException {
-        return subtract();
-    }
-
     public int subtract() throws IOException {
         if (checkEof()) {
             return -1;
@@ -307,15 +298,6 @@ public final class CharChunk extends AbstractChunk implements CharSequence {
     }
 
 
-    /*
-     * @deprecated Use {@link #subtract(char[],int,int)}.
-     *             This method will be removed in Tomcat 10
-     */
-    @Deprecated
-    public int substract(char dest[], int off, int len) throws IOException {
-        return subtract(dest, off, len);
-    }
-
     public int subtract(char dest[], int off, int len) throws IOException {
         if (checkEof()) {
             return -1;
@@ -666,16 +648,4 @@ public final class CharChunk extends AbstractChunk implements CharSequence {
     public int length() {
         return end - start;
     }
-
-    /**
-     * NO-OP.
-     *
-     * @param optimizedWrite Ignored
-     *
-     * @deprecated Unused code. This is now a NO-OP and will be removed without
-     *             replacement in Tomcat 10.
-     */
-    @Deprecated
-    public void setOptimizedWrite(boolean optimizedWrite) {
-    }
 }

==================================================
FastHttpDateFormat.java
deleted file mode 100644
index 53c1c44204..0000000000
--- a/java/org/apache/tomcat/util/compat/TLS.java
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
- *  Licensed to the Apache Software Foundation (ASF) under one or more
- *  contributor license agreements.  See the NOTICE file distributed with
- *  this work for additional information regarding copyright ownership.
- *  The ASF licenses this file to You under the Apache License, Version 2.0
- *  (the "License"); you may not use this file except in compliance with
- *  the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.apache.tomcat.util.compat;
-
-import java.security.NoSuchAlgorithmException;
-
-import javax.net.ssl.SSLContext;
-
-import org.apache.tomcat.util.net.Constants;
-
-/**
- * This class checks for the availability of TLS features.
- *
- * @deprecated Unused. This will be removed in Tomcat 10.
- */
-@Deprecated
-public class TLS {
-
-    private static final boolean tlsv13Available;
-
-    static {
-        boolean ok = false;
-        try {
-            SSLContext.getInstance(Constants.SSL_PROTO_TLSv1_3);
-            ok = true;
-        } catch (NoSuchAlgorithmException ex) {
-        }
-        tlsv13Available = ok;
-    }
-
-    public static boolean isTlsv13Available() {
-        return tlsv13Available;
-    }
-
-}

==================================================
AbstractEndpoint.java
index a546ee6ea4..f052474118 100644
--- a/java/org/apache/tomcat/util/http/FastHttpDateFormat.java
+++ b/java/org/apache/tomcat/util/http/FastHttpDateFormat.java
@@ -16,7 +16,6 @@
  */
 package org.apache.tomcat.util.http;
 
-import java.text.DateFormat;
 import java.text.ParseException;
 import java.util.Date;
 import java.util.Locale;
@@ -39,14 +38,6 @@ public final class FastHttpDateFormat {
         Integer.parseInt(System.getProperty("org.apache.tomcat.util.http.FastHttpDateFormat.CACHE_SIZE", "1000"));
 
 
-    /**
-     * The only date format permitted when generating HTTP headers.
-     *
-     * @deprecated Unused. This will be removed in Tomcat 10.
-     */
-    @Deprecated
-    public static final String RFC1123_DATE = "EEE, dd MMM yyyy HH:mm:ss zzz";
-
     // HTTP date formats
     private static final String DATE_RFC5322 = "EEE, dd MMM yyyy HH:mm:ss z";
     private static final String DATE_OBSOLETE_RFC850 = "EEEEEE, dd-MMM-yy HH:mm:ss zzz";
@@ -111,21 +102,6 @@ public final class FastHttpDateFormat {
     }
 
 
-    /**
-     * Get the HTTP format of the specified date.
-     * @param value The date
-     * @param threadLocalformat Ignored. The local ConcurrentDateFormat will
-     *                          always be used.
-     * @return the HTTP date
-     *
-     * @deprecated Unused. This will be removed in Tomcat 10
-     */
-    @Deprecated
-    public static final String formatDate(long value, DateFormat threadLocalformat) {
-        return formatDate(value);
-    }
-
-
     /**
      * Get the HTTP format of the specified date.
      * @param value The date
@@ -144,22 +120,6 @@ public final class FastHttpDateFormat {
     }
 
 
-    /**
-     * Try to parse the given date as an HTTP date.
-     * @param value The HTTP date
-     * @param threadLocalformats Ignored. The local array of
-     *                           ConcurrentDateFormat will always be used.
-     * @return the date as a long
-     *
-     * @deprecated Unused. This will be removed in Tomcat 10
-     *             Use {@link #parseDate(String)}
-     */
-    @Deprecated
-    public static final long parseDate(String value, DateFormat[] threadLocalformats) {
-        return parseDate(value);
-    }
-
-
     /**
      * Try to parse the given date as an HTTP date.
      * @param value The HTTP date

==================================================
