38e7124318605297d65f5eae3b1d9a2c96284814
==================================================
Improve poller timeout handling to not waste cycles
==================================================
Filip Hanik
==================================================
Mon Aug 6 23:19:37 2007 +0000
==================================================
NioEndpoint.java
Improve poller timeout handling to not waste cycles


git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk@563331 13f79535-47bb-0310-9956-ffa450edef68



==================================================
SocketProperties.java
index dfa74a4eda..ebc76decaf 100644
--- a/java/org/apache/tomcat/util/net/NioEndpoint.java
+++ b/java/org/apache/tomcat/util/net/NioEndpoint.java
@@ -1582,8 +1582,11 @@ public class NioEndpoint {
             long now = System.currentTimeMillis();
             //don't process timeouts too frequently, but if the selector simply timed out
             //then we can check timeouts to avoid gaps
-            if ( (now < nextExpiration) && (keyCount>0 || hasEvents) && (!close) ) return;
-            nextExpiration = now + (long)socketProperties.getSoTimeout();
+            if ( ((keyCount>0 || hasEvents) ||(now < nextExpiration)) && (!close) ) {
+                return;
+            }
+            long prevExp = nextExpiration;
+            nextExpiration = now + socketProperties.getTimeoutInterval();
             //timeout
             Set<SelectionKey> keys = selector.keys();
             int keycount = 0;
@@ -1618,7 +1621,9 @@ public class NioEndpoint {
                     cancelledKey(key, SocketStatus.ERROR,false);
                 }
             }//for
-            if ( log.isDebugEnabled() ) log.debug("Poller processed "+keycount+" keys through timeout");
+           if ( log.isDebugEnabled() ) log.debug("timeout completed: keycount="+keycount+"; now="+now+"; nextExpiration="+prevExp+"; "+
+                                                  "keyCount="+keyCount+"; hasEvents="+hasEvents +"; eval="+( (now < prevExp) && (keyCount>0 || hasEvents) && (!close) ));
+
         }
     }
 

==================================================
