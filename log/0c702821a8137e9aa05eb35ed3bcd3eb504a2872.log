0c702821a8137e9aa05eb35ed3bcd3eb504a2872
==================================================
Start to hook-up the commons-file upload port to the Servlet3 file upload API
==================================================
Mark Emlyn
==================================================
Fri Nov 20 13:46:21 2009 +0000
==================================================
Wrapper.java
Start to hook-up the commons-file upload port to the Servlet3 file upload API
 - Make sure the upload config is available when required
 - Start to migrate the HTML manager to the upload API

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@882550 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Request.java
index a795dfe8cc..465924e260 100644
--- a/java/org/apache/catalina/Wrapper.java
+++ b/java/org/apache/catalina/Wrapper.java
@@ -19,6 +19,7 @@
 package org.apache.catalina;
 
 
+import javax.servlet.MultipartConfigElement;
 import javax.servlet.Servlet;
 import javax.servlet.ServletException;
 import javax.servlet.UnavailableException;
@@ -334,4 +335,17 @@ public interface Wrapper extends Container {
     public void unload() throws ServletException;
 
 
+    /**
+     * Get the multi-part configuration for the associated servlet. If no
+     * multi-part configuration has been defined, then <code>null</code> will be
+     * returned.
+     */
+    public MultipartConfigElement getMultipartConfig();
+    
+    
+    /**
+     * Set the multi-part configuration for the associated servlet. To clear the
+     * multi-part configuration specify <code>null</code> as the new value.
+     */
+    public void setMultipartConfig(MultipartConfigElement multipartConfig);
 }

==================================================
StandardWrapper.java
index f0a1fb3fbe..ec6660d689 100644
--- a/java/org/apache/catalina/connector/Request.java
+++ b/java/org/apache/catalina/connector/Request.java
@@ -27,6 +27,7 @@ import java.security.Principal;
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.Collection;
+import java.util.Collections;
 import java.util.Enumeration;
 import java.util.HashMap;
 import java.util.Iterator;
@@ -39,6 +40,7 @@ import javax.security.auth.Subject;
 import javax.servlet.AsyncContext;
 import javax.servlet.DispatcherType;
 import javax.servlet.FilterChain;
+import javax.servlet.MultipartConfigElement;
 import javax.servlet.RequestDispatcher;
 import javax.servlet.ServletContext;
 import javax.servlet.ServletException;
@@ -77,8 +79,10 @@ import org.apache.tomcat.util.http.Cookies;
 import org.apache.tomcat.util.http.FastHttpDateFormat;
 import org.apache.tomcat.util.http.Parameters;
 import org.apache.tomcat.util.http.ServerCookie;
+import org.apache.tomcat.util.http.fileupload.FileUploadBase;
 import org.apache.tomcat.util.http.mapper.MappingData;
 import org.apache.tomcat.util.res.StringManager;
+import org.apache.tools.ant.util.CollectionUtils;
 
 
 /**
@@ -2382,8 +2386,20 @@ public class Request
     
     public Collection<Part> getParts() throws IOException, IllegalStateException,
             ServletException {
+        
+        String contentType = getContentType();
+        if (contentType == null ||
+                !contentType.startsWith(FileUploadBase.MULTIPART_FORM_DATA)) {
+            return Collections.emptyList();
+        }
+        
+        MultipartConfigElement mce = getWrapper().getMultipartConfig();
+        if (mce == null) {
+            return Collections.emptyList();
+        }
+        
         // TODO SERVLET3 - file upload
-        return null;
+        return Collections.emptyList();
     }
     
     public Part getPart(String name) throws IOException, IllegalStateException,

==================================================
MultipartDef.java
index 818de2d7cd..1ab5b021f1 100644
--- a/java/org/apache/catalina/core/StandardWrapper.java
+++ b/java/org/apache/catalina/core/StandardWrapper.java
@@ -35,6 +35,7 @@ import javax.management.NotificationEmitter;
 import javax.management.NotificationFilter;
 import javax.management.NotificationListener;
 import javax.management.ObjectName;
+import javax.servlet.MultipartConfigElement;
 import javax.servlet.Servlet;
 import javax.servlet.ServletConfig;
 import javax.servlet.ServletContext;
@@ -254,6 +255,11 @@ public class StandardWrapper
     protected long loadTime=0;
     protected int classLoadTime=0;
     
+    /**
+     * Multipart config
+     */
+    protected MultipartConfigElement multipartConfig = null;
+
     /**
      * Static class array used when the SecurityManager is turned on and 
      * <code>Servlet.init</code> is invoked.
@@ -1477,6 +1483,14 @@ public class StandardWrapper
         return classLoadTime;
     }
 
+    public MultipartConfigElement getMultipartConfig() {
+        return multipartConfig;
+    }
+
+    public void setMultipartConfig(MultipartConfigElement multipartConfig) {
+        this.multipartConfig = multipartConfig;
+    }
+
     // -------------------------------------------------------- Package Methods
 
 

==================================================
ServletDef.java
index 47930aaca3..d987f8f1a6 100644
--- a/java/org/apache/catalina/deploy/MultipartDef.java
+++ b/java/org/apache/catalina/deploy/MultipartDef.java
@@ -36,39 +36,39 @@ public class MultipartDef {
     }
     
     
-    private Long maxFileSize;
+    private String maxFileSize;
 
-    public Long getMaxFileSize() {
+    public String getMaxFileSize() {
         return maxFileSize;
     }
 
-    public void setMaxFileSize(Long maxFileSize) {
+    public void setMaxFileSize(String maxFileSize) {
         this.maxFileSize = maxFileSize;
     }
     
     
-    private Long maxRequestSize;
+    private String maxRequestSize;
 
-    public Long getMaxRequestSize() {
+    public String getMaxRequestSize() {
         return maxRequestSize;
     }
 
-    public void setMaxRequestSize(Long maxRequestSize) {
+    public void setMaxRequestSize(String maxRequestSize) {
         this.maxRequestSize = maxRequestSize;
     }
 
     
-    private Integer fileSizeThreshold;
+    private String fileSizeThreshold;
     
-    public Integer getFileSizeThreshold() {
+    public String getFileSizeThreshold() {
         return fileSizeThreshold;
     }
 
-    public void setFileSizeThreshold(Integer fileSizeThreshold) {
+    public void setFileSizeThreshold(String fileSizeThreshold) {
         this.fileSizeThreshold = fileSizeThreshold;
     }
 
-    
+
     // ---------------------------------------------------------- Object methods
 
     @Override

==================================================
HTMLManagerServlet.java
index 6fec5922a6..9ec90ba0f1 100644
--- a/java/org/apache/catalina/deploy/ServletDef.java
+++ b/java/org/apache/catalina/deploy/ServletDef.java
@@ -211,7 +211,7 @@ public class ServletDef implements Serializable {
     /**
      * The multipart configuration, if any, for this servlet
      */
-    private MultipartDef multipartDef = new MultipartDef();
+    private MultipartDef multipartDef = null;
     
     public MultipartDef getMultipartDef() {
         return this.multipartDef;

==================================================
WebRuleSet.java
index 6054b62881..338e4653c8 100644
--- a/java/org/apache/catalina/manager/HTMLManagerServlet.java
+++ b/java/org/apache/catalina/manager/HTMLManagerServlet.java
@@ -38,6 +38,7 @@ import javax.servlet.ServletException;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
 import javax.servlet.http.HttpSession;
+import javax.servlet.http.Part;
 
 import org.apache.catalina.Container;
 import org.apache.catalina.Context;
@@ -258,9 +259,13 @@ public final class HTMLManagerServlet extends ManagerServlet {
         return buffer.toString();
     }
 
-    protected String upload(HttpServletRequest request) throws IOException {
+    protected String upload(HttpServletRequest request)
+            throws IOException, ServletException {
         String message = "";
 
+        // TODO - Rewrite this to use the Servlet 3 file upload API
+        Part part = request.getPart("deployWar");
+        
         // Get the tempdir
         File tempdir = (File) getServletContext().getAttribute
             (ServletContext.TEMPDIR);

==================================================
WebXml.java
index 7c57131a92..c49ec875cf 100644
--- a/java/org/apache/catalina/startup/WebRuleSet.java
+++ b/java/org/apache/catalina/startup/WebRuleSet.java
@@ -372,7 +372,8 @@ public class WebRuleSet extends RuleSetBase {
         digester.addObjectCreate(fullPrefix + "/servlet/multipart-config",
                                  "org.apache.catalina.deploy.MultipartDef");
         digester.addSetNext(fullPrefix + "/servlet/multipart-config",
-                            "setMultipartConfig");
+                            "setMultipartDef",
+                            "org.apache.catalina.deploy.MultipartDef");
         digester.addCallMethod(fullPrefix + "/servlet/multipart-config/location",
                                "setLocation", 0);
         digester.addCallMethod(fullPrefix + "/servlet/multipart-config/max-file-size",

==================================================
