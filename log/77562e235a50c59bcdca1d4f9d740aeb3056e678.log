77562e235a50c59bcdca1d4f9d740aeb3056e678
==================================================
kkolinko review of r1300154
==================================================
Mark Emlyn
==================================================
Fri Mar 23 10:43:17 2012 +0000
==================================================
AstMediaType.java
kkolinko review of r1300154
Correctly parse quoted-pair
'charset' parameter name should be case insensitive

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1304275 13f79535-47bb-0310-9956-ffa450edef68



==================================================
HttpParser.java
index 4cefddc84e..a59c5403af 100644
--- a/java/org/apache/tomcat/util/http/parser/AstMediaType.java
+++ b/java/org/apache/tomcat/util/http/parser/AstMediaType.java
@@ -21,6 +21,9 @@ package org.apache.tomcat.util.http.parser;
  * by <a href="http://javacc.java.net/doc/JJTree.html"> JJTree</a>.
  */
 public class AstMediaType extends SimpleNode {
+
+    private static final String CHARSET = "charset";
+
     public AstMediaType(int id) {
         super(id);
     }
@@ -33,10 +36,10 @@ public class AstMediaType extends SimpleNode {
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append(children[0].toString());
-        sb.append("/");
+        sb.append('/');
         sb.append(children[1].toString());
         for (int i = 2; i < children.length; i++) {
-            sb.append(";");
+            sb.append(';');
             sb.append(children[i].toString());
         }
         return sb.toString();
@@ -45,12 +48,13 @@ public class AstMediaType extends SimpleNode {
     public String toStringNoCharset() {
         StringBuilder sb = new StringBuilder();
         sb.append(children[0].toString());
-        sb.append("/");
+        sb.append('/');
         sb.append(children[1].toString());
         for (int i = 2; i < children.length; i++) {
             AstParameter p = (AstParameter) children[i];
-            if (!"charset".equals(p.children[0].jjtGetValue())) {
-                sb.append(";");
+            if (!CHARSET.equals(
+                    p.children[0].jjtGetValue().toString().toLowerCase())) {
+                sb.append(';');
                 sb.append(p.toString());
             }
         }
@@ -60,7 +64,8 @@ public class AstMediaType extends SimpleNode {
     public String getCharset() {
         for (int i = 2; i < children.length; i++) {
             AstParameter p = (AstParameter) children[i];
-            if ("charset".equals(p.children[0].jjtGetValue())) {
+            if (CHARSET.equals(
+                    p.children[0].jjtGetValue().toString().toLowerCase())) {
                 return p.children[1].jjtGetValue().toString();
             }
         }

==================================================
HttpParserConstants.java
index d03de6fb1d..4f56d99c9a 100644
--- a/java/org/apache/tomcat/util/http/parser/HttpParser.jjt
+++ b/java/org/apache/tomcat/util/http/parser/HttpParser.jjt
@@ -119,7 +119,7 @@ void Value() #Value : { Token t = null; }
 
 <IN_QUOTED_TEXT> TOKEN :
 {
-  < #QUOTED_TEXT :   (("\\" (<QUOTED_TEXT_CHAR> | "\"")) | <QUOTED_TEXT_CHAR>)* >
+  < #QUOTED_TEXT :   (<QUOTED_TEXT_CHAR> | ("\\" <CHAR> ))* >
 | < #END_QUOTE :     "\"" >
 | < #QUOTED_TEXT_CHAR:
      [
@@ -129,4 +129,9 @@ void Value() #Value : { Token t = null; }
      "\u005d"-"\u00ff"
      ]
   >
+| < #CHAR:
+     [
+     "\u0000"-"\u007f"
+     ]
+  >
 }
\ No newline at end of file

==================================================
HttpParserTokenManager.java
index 081e7aa0d9..74379e170d 100644
--- a/java/org/apache/tomcat/util/http/parser/HttpParserConstants.java
+++ b/java/org/apache/tomcat/util/http/parser/HttpParserConstants.java
@@ -36,6 +36,8 @@ public interface HttpParserConstants {
   int END_QUOTE = 12;
   /** RegularExpression Id. */
   int QUOTED_TEXT_CHAR = 13;
+  /** RegularExpression Id. */
+  int CHAR = 14;
 
   /** Lexical state. */
   int DEFAULT = 0;
@@ -58,6 +60,7 @@ public interface HttpParserConstants {
     "<QUOTED_TEXT>",
     "\"\\\"\"",
     "<QUOTED_TEXT_CHAR>",
+    "<CHAR>",
   };
 
 }

==================================================
