2416183ebe722ce3b61538b0b97a0958b210c358
==================================================
Simplify xml validation configuration. It is now configurable per context and can be set per host using a host-level context.xml file so remove the attributes on the host.
==================================================
Mark Emlyn
==================================================
Thu May 13 09:04:39 2010 +0000
==================================================
Host.java
index f9f3d94aaf..642c8ee7b0 100644
--- a/conf/server.xml
+++ b/conf/server.xml
@@ -117,8 +117,7 @@
            Note: XML Schema validation will not work with Xerces 2.2.
        -->
       <Host name="localhost"  appBase="webapps"
-            unpackWARs="true" autoDeploy="true"
-            xmlValidation="false" xmlNamespaceAware="false">
+            unpackWARs="true" autoDeploy="true">
 
         <!-- SingleSignOn valve, share authentication between web applications
              Documentation at: /docs/config/valve.html -->

==================================================
StandardContext.java
index 24dc484191..fd65c854d0 100644
--- a/java/org/apache/catalina/core/LocalStrings_ja.properties
+++ b/java/org/apache/catalina/core/LocalStrings_ja.properties
@@ -140,8 +140,6 @@ standardHost.stop=\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30d1\u30b9 {0} \u306eWeb
 standardHost.unfoundContext=\u30ea\u30af\u30a8\u30b9\u30c8URI {0} \u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093
 standardHost.warRequired=Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ab\u30a4\u30d6\u306eURL\u304c\u5fc5\u8981\u3067\u3059
 standardHost.warURL=Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ab\u30a4\u30d6\u306b\u5bfe\u3059\u308b\u7121\u52b9\u306aURL\u3067\u3059: {0}
-standardHost.validationEnabled=XML\u691c\u8a3c\u306f\u6709\u52b9\u3067\u3059
-standardHost.validationDisabled=XML\u691c\u8a3c\u306f\u7121\u52b9\u3067\u3059
 standardService.start.name=\u30b5\u30fc\u30d3\u30b9 {0} \u3092\u8d77\u52d5\u3057\u307e\u3059
 standardService.stop.name=\u30b5\u30fc\u30d3\u30b9 {0} \u3092\u505c\u6b62\u3057\u307e\u3059
 standardWrapper.allocate=\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5272\u308a\u5f53\u3066\u4e2d\u306e\u30a8\u30e9\u30fc\u3067\u3059

==================================================
StandardHost.java
index 2cca32f3e6..7079b5f9ff 100644
--- a/java/org/apache/catalina/core/StandardContext.java
+++ b/java/org/apache/catalina/core/StandardContext.java
@@ -677,13 +677,13 @@ public class StandardContext extends ContainerBase
     /**
      * Attribute value used to turn on/off XML validation
      */
-     private boolean webXmlValidation = false;
+     private boolean webXmlValidation = Globals.STRICT_SERVLET_COMPLIANCE;
 
 
     /**
      * Attribute value used to turn on/off XML namespace validation
      */
-     private boolean webXmlNamespaceAware = false;
+     private boolean webXmlNamespaceAware = Globals.STRICT_SERVLET_COMPLIANCE;
 
     /**
      * Attribute value used to turn on/off TLD processing
@@ -693,13 +693,13 @@ public class StandardContext extends ContainerBase
     /**
      * Attribute value used to turn on/off XML validation
      */
-    private boolean tldValidation = false;
+    private boolean tldValidation = Globals.STRICT_SERVLET_COMPLIANCE;
 
 
     /**
      * Attribute value used to turn on/off TLD XML namespace validation
      */
-    private boolean tldNamespaceAware = false;
+    private boolean tldNamespaceAware = Globals.STRICT_SERVLET_COMPLIANCE;
 
 
     /**

==================================================
HostManagerServlet.java
index c3b1b38b6f..6e342954ad 100644
--- a/java/org/apache/catalina/core/StandardHost.java
+++ b/java/org/apache/catalina/core/StandardHost.java
@@ -155,17 +155,6 @@ public class StandardHost extends ContainerBase implements Host {
     private String workDir = null;
 
 
-    /**
-     * Attribute value used to turn on/off XML validation
-     */
-     private boolean xmlValidation = false;
-
-
-    /**
-     * Attribute value used to turn on/off XML namespace awareness.
-     */
-     private boolean xmlNamespaceAware = false;
-     
     /**
      * Should we create directories upon startup for appBase and xmlBase
      */
@@ -503,45 +492,7 @@ public class StandardHost extends ContainerBase implements Host {
 
     }
 
-     /**
-     * Set the validation feature of the XML parser used when
-     * parsing xml instances.
-     * @param xmlValidation true to enable xml instance validation
-     */
-    public void setXmlValidation(boolean xmlValidation){
-        
-        this.xmlValidation = xmlValidation;
-
-    }
-
-    /**
-     * Get the server.xml &lt;host&gt; attribute's xmlValidation.
-     * @return true if validation is enabled.
-     *
-     */
-    public boolean getXmlValidation(){
-        return xmlValidation;
-    }
-
-    /**
-     * Get the server.xml &lt;host&gt; attribute's xmlNamespaceAware.
-     * @return true if namespace awareness is enabled.
-     *
-     */
-    public boolean getXmlNamespaceAware(){
-        return xmlNamespaceAware;
-    }
-
 
-    /**
-     * Set the namespace aware feature of the XML parser used when
-     * parsing xml instances.
-     * @param xmlNamespaceAware true to enable namespace awareness
-     */
-    public void setXmlNamespaceAware(boolean xmlNamespaceAware){
-        this.xmlNamespaceAware=xmlNamespaceAware;
-    }    
-    
     /**
      * Host work directory base.
      */
@@ -819,13 +770,6 @@ public class StandardHost extends ContainerBase implements Host {
                      errorReportValveClass), t);
             }
         }
-        if(log.isDebugEnabled()) {
-            if (xmlValidation)
-                log.debug(sm.getString("standardHost.validationEnabled"));
-            else
-                log.debug(sm.getString("standardHost.validationDisabled"));
-        }
-        
         super.startInternal();
     }
 

==================================================
MBeanFactory.java
index 5d0a46ca10..64c4576b57 100644
--- a/java/org/apache/catalina/manager/host/HostManagerServlet.java
+++ b/java/org/apache/catalina/manager/host/HostManagerServlet.java
@@ -258,15 +258,11 @@ public class HostManagerServlet
         boolean deployOnStartup = booleanParameter(request, "deployOnStartup", true, htmlMode);
         boolean deployXML = booleanParameter(request, "deployXML", true, htmlMode);
         boolean unpackWARs = booleanParameter(request, "unpackWARs", true, htmlMode);
-        boolean xmlNamespaceAware = booleanParameter(request, "xmlNamespaceAware", false, htmlMode);
-        boolean xmlValidation = booleanParameter(request, "xmlValidation", false, htmlMode);
         add(writer, name, aliases, appBase, manager,
             autoDeploy,
             deployOnStartup,
             deployXML,                                       
-            unpackWARs,
-            xmlNamespaceAware,
-            xmlValidation);
+            unpackWARs);
     }
 
 
@@ -342,9 +338,7 @@ public class HostManagerServlet
          boolean autoDeploy,
          boolean deployOnStartup,
          boolean deployXML,                                       
-         boolean unpackWARs,
-         boolean xmlNamespaceAware,
-         boolean xmlValidation) {
+         boolean unpackWARs) {
         if (debug >= 1) {
             log(sm.getString("hostManagerServlet.add", name));
         }
@@ -438,8 +432,6 @@ public class HostManagerServlet
         host.setDeployOnStartup(deployOnStartup);
         host.setDeployXML(deployXML);
         host.setUnpackWARs(unpackWARs);
-        host.setXmlNamespaceAware(xmlNamespaceAware);
-        host.setXmlValidation(xmlValidation);
         
         // Add new host
         try {

==================================================
ContextConfig.java
index bcb257b5a7..46ae950ae7 100644
--- a/java/org/apache/catalina/mbeans/MBeanFactory.java
+++ b/java/org/apache/catalina/mbeans/MBeanFactory.java
@@ -649,9 +649,7 @@ public class MBeanFactory {
                                      boolean autoDeploy,
                                      boolean deployOnStartup,
                                      boolean deployXML,                                       
-                                     boolean unpackWARs,
-                                     boolean xmlNamespaceAware,
-                                     boolean xmlValidation)
+                                     boolean unpackWARs)
         throws Exception {
 
         // Create a new StandardHost instance
@@ -662,8 +660,6 @@ public class MBeanFactory {
         host.setDeployOnStartup(deployOnStartup);
         host.setDeployXML(deployXML);
         host.setUnpackWARs(unpackWARs);
-        host.setXmlNamespaceAware(xmlNamespaceAware);
-        host.setXmlValidation(xmlValidation);
 	
         // add HostConfig for active reloading
         HostConfig hostConfig = new HostConfig();

==================================================
HostConfig.java
index b24fb17eaf..138b32e3dd 100644
--- a/java/org/apache/catalina/startup/ContextConfig.java
+++ b/java/org/apache/catalina/startup/ContextConfig.java
@@ -27,7 +27,6 @@ import java.io.IOException;
 import java.io.InputStream;
 import java.io.InputStreamReader;
 import java.io.UnsupportedEncodingException;
-import java.lang.annotation.Annotation;
 import java.net.JarURLConnection;
 import java.net.MalformedURLException;
 import java.net.URISyntaxException;
@@ -858,36 +857,14 @@ public class ContextConfig
         if (log.isDebugEnabled())
             log.debug(sm.getString("contextConfig.start"));
 
-        // Process the default and application web.xml files
-        // Set properties based on default context
-        boolean useXmlValidation = context.getXmlValidation();
-        boolean useXmlNamespaceAware = context.getXmlNamespaceAware();
-
-        Container container = context.getParent();
-        // Use the value from the host if:
-        // - override is false on the context
-        // - value has been set to false / not set on the context
-        if( !context.getOverride() ) {
-            if( container instanceof Host ) {
-                if (!useXmlValidation) {
-                    useXmlValidation = ((Host)container).getXmlValidation();
-                }
-                
-                if (!useXmlNamespaceAware){
-                    useXmlNamespaceAware 
-                                = ((Host)container).getXmlNamespaceAware();
-                }
-
-            }
-        }
-        
         if (log.isDebugEnabled()) {
             log.debug(sm.getString("contextConfig.xmlSettings",
-                    context.getName(), Boolean.valueOf(useXmlValidation),
-                    Boolean.valueOf(useXmlNamespaceAware)));
+                    context.getName(),
+                    Boolean.valueOf(context.getXmlValidation()),
+                    Boolean.valueOf(context.getXmlNamespaceAware())));
         }
         
-        createWebXmlDigester(useXmlNamespaceAware, useXmlValidation);
+        createWebXmlDigester(context.getXmlNamespaceAware(), context.getXmlValidation());
         
         webConfig();
 

==================================================
TldConfig.java
index 65d3ef41dd..3b81634225 100644
--- a/java/org/apache/catalina/startup/HostConfig.java
+++ b/java/org/apache/catalina/startup/HostConfig.java
@@ -344,8 +344,6 @@ public class HostConfig
                 setCopyXML(((StandardHost) host).isCopyXML());
                 setDeployXML(((StandardHost) host).isDeployXML());
                 setUnpackWARs(((StandardHost) host).isUnpackWARs());
-                setXmlNamespaceAware(((StandardHost) host).getXmlNamespaceAware());
-                setXmlValidation(((StandardHost) host).getXmlValidation());
             }
         } catch (ClassCastException e) {
             log.error(sm.getString("hostConfig.cce", event.getLifecycle()), e);

==================================================
