187a7cf8d98fe1e8981b493a5783b950ecd19c39
==================================================
Under the covers OpenSSL treats SSLv3 and TLSv1 as the same.
==================================================
Mark Emlyn
==================================================
Fri Aug 1 15:11:25 2014 +0000
==================================================
OpenSSLCipherConfigurationParser.java
Under the covers OpenSSL treats SSLv3 and TLSv1 as the same.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1615134 13f79535-47bb-0310-9956-ffa450edef68



==================================================
TestOpenSSLCipherConfigurationParser.java
index d33a64a05a..66e044108b 100644
--- a/java/org/apache/tomcat/util/net/jsse/openssl/OpenSSLCipherConfigurationParser.java
+++ b/java/org/apache/tomcat/util/net/jsse/openssl/OpenSSLCipherConfigurationParser.java
@@ -415,7 +415,7 @@ public class OpenSSLCipherConfigurationParser {
         addListAlias(aDSS, filterByAuthentication(allCiphers, Collections.singleton(Authentication.DSS)));
         aliases.put("DSS", aliases.get(aDSS));
         addListAlias(aDH, filterByAuthentication(allCiphers, Collections.singleton(Authentication.DH)));
-        Set<Cipher> aecdh = filterByKeyExchange(allCiphers, new HashSet<>(Arrays.asList(KeyExchange.EECDH)));
+        Set<Cipher> aecdh = filterByKeyExchange(allCiphers, Collections.singleton(KeyExchange.EECDH));
         addListAlias(AECDH, filterByAuthentication(aecdh, Collections.singleton(Authentication.aNULL)));
         addListAlias(aECDH, filterByAuthentication(allCiphers, Collections.singleton(Authentication.ECDH)));
         addListAlias(ECDSA, filterByAuthentication(allCiphers, Collections.singleton(Authentication.ECDSA)));
@@ -426,8 +426,8 @@ public class OpenSSLCipherConfigurationParser {
         addListAlias(FZA, filter(allCiphers, null, Collections.singleton(KeyExchange.FZA), Collections.singleton(Authentication.FZA), Collections.singleton(Encryption.FZA), null, null));
         addListAlias(TLSv1_2, filterByProtocol(allCiphers, Collections.singleton(Protocol.TLSv1_2)));
         addListAlias("TLSv1.1", filterByProtocol(allCiphers, Collections.singleton(Protocol.SSLv3)));
-        addListAlias(TLSv1, filterByProtocol(allCiphers, Collections.singleton(Protocol.TLSv1)));
-        addListAlias(SSLv3, filterByProtocol(allCiphers, Collections.singleton(Protocol.SSLv3)));
+        addListAlias(TLSv1, filterByProtocol(allCiphers, new HashSet<>(Arrays.asList(Protocol.TLSv1, Protocol.SSLv3))));
+        aliases.put(SSLv3, aliases.get(TLSv1));
         addListAlias(SSLv2, filterByProtocol(allCiphers, Collections.singleton(Protocol.SSLv2)));
         addListAlias(DH, filterByKeyExchange(allCiphers, new HashSet<>(Arrays.asList(KeyExchange.DHr, KeyExchange.DHd, KeyExchange.EDH))));
         Set<Cipher> adh = filterByKeyExchange(allCiphers, Collections.singleton(KeyExchange.EDH));

==================================================
