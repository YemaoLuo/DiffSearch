7125c9fc203b683374220322159e451c2c418cef
==================================================
Fix bugs https://issues.apache.org/bugzilla/show_bug.cgi?id=43013 and https://issues.apache.org/bugzilla/show_bug.cgi?id=44021
==================================================
Mark Emlyn
==================================================
Mon May 5 18:18:00 2008 +0000
==================================================
HTMLManagerServlet.java
Fix bugs https://issues.apache.org/bugzilla/show_bug.cgi?id=43013 and https://issues.apache.org/bugzilla/show_bug.cgi?id=44021
Add support to manger and deployer for wars and dirs that use # to denote multi-level contexts.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@653549 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ManagerServlet.java
index a1dd6db1b6..7051eaac05 100644
--- a/java/org/apache/catalina/manager/HTMLManagerServlet.java
+++ b/java/org/apache/catalina/manager/HTMLManagerServlet.java
@@ -226,7 +226,7 @@ public final class HTMLManagerServlet extends ManagerServlet {
                 if (basename.equals("ROOT")) {
                     path = "";
                 } else {
-                    path = "/" + basename;
+                    path = "/" + basename.replace('#', '/');
                 }
 
                 if ((host.findChild(path) != null) && !isDeployed(path)) {

==================================================
ContextConfig.java
index 9458b4859a..fd5ae35fdb 100644
--- a/java/org/apache/catalina/manager/ManagerServlet.java
+++ b/java/org/apache/catalina/manager/ManagerServlet.java
@@ -1363,6 +1363,9 @@ public class ManagerServlet
                     // Ignore
                 }
                 try {
+                    if (path.lastIndexOf('/') > 0) {
+                        path = "/" + path.substring(1).replace('/','#');
+                    }
                     File war = new File(getAppBase(), getDocBase(path) + ".war");
                     File dir = new File(getAppBase(), getDocBase(path));
                     File xml = new File(configBase, getConfigFile(path) + ".xml");
@@ -1374,9 +1377,9 @@ public class ManagerServlet
                         xml.delete();
                     }
                     // Perform new deployment
-                    check(path);
+                    check(path.replace('#', '/'));
                 } finally {
-                    removeServiced(path);
+                    removeServiced(path.replace('#','/'));
                 }
             }
             writer.println(sm.getString("managerServlet.undeployed",
@@ -1408,14 +1411,14 @@ public class ManagerServlet
 
 
     /**
-     * Given a context path, get the config file name.
+     * Given a context path, get the doc base.
      */
     protected String getDocBase(String path) {
         String basename = null;
         if (path.equals("")) {
             basename = "ROOT";
         } else {
-            basename = path.substring(1);
+            basename = path.substring(1).replace('/', '#');
         }
         return (basename);
     }

==================================================
HostConfig.java
index 2cac87b4f9..08996679c8 100644
--- a/java/org/apache/catalina/startup/ContextConfig.java
+++ b/java/org/apache/catalina/startup/ContextConfig.java
@@ -873,9 +873,13 @@ public class ContextConfig
         String contextPath = context.getPath();
         if (contextPath.equals("")) {
             contextPath = "ROOT";
+        } else {
+            if (contextPath.lastIndexOf('/') > 0) {
+                contextPath = "/" + contextPath.substring(1).replace('/','#');
+            }
         }
         if (docBase.toLowerCase().endsWith(".war") && !file.isDirectory() && unpackWARs) {
-            URL war = new URL("jar:" + (new File(docBase)).toURL() + "!/");
+            URL war = new URL("jar:" + (new File(docBase)).toURI().toURL() + "!/");
             docBase = ExpandWar.expand(host, war, contextPath);
             file = new File(docBase);
             docBase = file.getCanonicalPath();
@@ -888,7 +892,8 @@ public class ContextConfig
                 File warFile = new File(docBase + ".war");
                 if (warFile.exists()) {
                     if (unpackWARs) {
-                        URL war = new URL("jar:" + warFile.toURL() + "!/");
+                        URL war =
+                            new URL("jar:" + warFile.toURI().toURL() + "!/");
                         docBase = ExpandWar.expand(host, war, contextPath);
                         file = new File(docBase);
                         docBase = file.getCanonicalPath();

==================================================
