4117b785c872a5bd86de51ed48044f466ca3d208
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=50448
==================================================
Mark Emlyn
==================================================
Fri Dec 10 13:54:16 2010 +0000
==================================================
Session.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=50448
Regression caused by http://svn.apache.org/viewvc?view=revision&revision=1036281

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1044359 13f79535-47bb-0310-9956-ffa450edef68



==================================================
DummyProxySession.java
index 3299114ef8..eed50ba822 100644
--- a/java/org/apache/catalina/Session.java
+++ b/java/org/apache/catalina/Session.java
@@ -89,6 +89,13 @@ public interface Session {
     public long getCreationTime();
 
 
+    /**
+     * Return the creation time for this session, bypassing the session validity
+     * checks.
+     */
+    public long getCreationTimeInternal();
+
+
     /**
      * Set the creation time for this session.  This method is called by the
      * Manager when an existing Session instance is reused.

==================================================
ManagerBase.java
index 54724bf4ea..3bd7bacebf 100644
--- a/java/org/apache/catalina/manager/DummyProxySession.java
+++ b/java/org/apache/catalina/manager/DummyProxySession.java
@@ -63,6 +63,11 @@ public class DummyProxySession implements Session {
         return 0;
     }
 
+    @Override
+    public long getCreationTimeInternal() {
+        return 0;
+    }
+
     @Override
     public String getId() {
         return sessionId;

==================================================
StandardSession.java
index 2ad20794da..0d0eaafade 100644
--- a/java/org/apache/catalina/session/ManagerBase.java
+++ b/java/org/apache/catalina/session/ManagerBase.java
@@ -799,7 +799,8 @@ public abstract class ManagerBase extends LifecycleMBeanBase
         // the manager because it is being persisted - update the expired stats
         if (update) {
             long timeNow = System.currentTimeMillis();
-            int timeAlive = (int) ((timeNow - session.getCreationTime())/1000);
+            int timeAlive =
+                (int) (timeNow - session.getCreationTimeInternal())/1000;
             updateSessionMaxAliveTime(timeAlive);
             expiredSessions.incrementAndGet();
             SessionTiming timing = new SessionTiming(timeNow, timeAlive);

==================================================
