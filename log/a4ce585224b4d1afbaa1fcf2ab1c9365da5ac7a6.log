a4ce585224b4d1afbaa1fcf2ab1c9365da5ac7a6
==================================================
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=48616, a regression caused by the fix for https://issues.apache.org/bugzilla/show_bug.cgi?id=42390
==================================================
Mark Emlyn
==================================================
Mon Feb 1 00:04:40 2010 +0000
==================================================
Generator.java
Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=48616, a regression caused by the fix for https://issues.apache.org/bugzilla/show_bug.cgi?id=42390
The requirement for variable declaration also depends on whether or not a fragment helper has been used for the parent tag (if any). Where such a helper has been used, the variables must be redefined.
Test cases for both bugs and the JSP TCK pass with this patch applied.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@905145 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ScriptingVariabler.java
index 8da493e5fe..84958b6b2d 100644
--- a/java/org/apache/jasper/compiler/Generator.java
+++ b/java/org/apache/jasper/compiler/Generator.java
@@ -167,6 +167,26 @@ class Generator {
         return b.toString();
     }
 
+    /**
+     * Finds the <jsp:body> subelement of the given parent node. If not
+     * found, null is returned.
+     */
+    protected static Node.JspBody findJspBody(Node parent) {
+        Node.JspBody result = null;
+
+        Node.Nodes subelements = parent.getBody();
+        for (int i = 0; (subelements != null) && (i < subelements.size()); i++) {
+            Node n = subelements.getNode(i);
+            if (n instanceof Node.JspBody) {
+                result = (Node.JspBody) n;
+                break;
+            }
+        }
+
+        return result;
+    }
+
+
     private String createJspId() {
         if (this.jspIdPrefix == null) {
             StringBuilder sb = new StringBuilder(32);
@@ -971,25 +991,6 @@ class Generator {
             }
         }
 
-        /**
-         * Finds the <jsp:body> subelement of the given parent node. If not
-         * found, null is returned.
-         */
-        private Node.JspBody findJspBody(Node parent) {
-            Node.JspBody result = null;
-
-            Node.Nodes subelements = parent.getBody();
-            for (int i = 0; (subelements != null) && (i < subelements.size()); i++) {
-                Node n = subelements.getNode(i);
-                if (n instanceof Node.JspBody) {
-                    result = (Node.JspBody) n;
-                    break;
-                }
-            }
-
-            return result;
-        }
-
         @Override
         public void visit(Node.ForwardAction n) throws JasperException {
             Node.JspAttribute page = n.getPage();

==================================================
