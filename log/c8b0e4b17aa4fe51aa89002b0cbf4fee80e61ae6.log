c8b0e4b17aa4fe51aa89002b0cbf4fee80e61ae6
==================================================
Add a sendfile override on the request, since HTTP/2 doesn't support it (it's not just in SSL). HTTP/2 could have simulated sendfile eventually.
==================================================
Remy Maucherat
==================================================
Wed Sep 2 17:27:11 2015 +0000
==================================================
Request.java
Add a sendfile override on the request, since HTTP/2 doesn't support it (it's not just in SSL). HTTP/2 could have simulated sendfile eventually.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1700854 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Request.java
index a233fef05c..8eedfeef8f 100644
--- a/java/org/apache/catalina/connector/Request.java
+++ b/java/org/apache/catalina/connector/Request.java
@@ -3310,7 +3310,7 @@ public class Request
                     public Object get(Request request, String name) {
                         return Boolean.valueOf(
                                 request.getConnector().getProtocolHandler(
-                                        ).isSendfileSupported());
+                                        ).isSendfileSupported() && request.getCoyoteRequest().getSendfile());
                     }
                     @Override
                     public void set(Request request, String name, Object value) {

==================================================
Http2UpgradeHandler.java
index 48b22abe86..d0f9276c10 100644
--- a/java/org/apache/coyote/Request.java
+++ b/java/org/apache/coyote/Request.java
@@ -140,6 +140,7 @@ public final class Request {
 
     private final RequestInfo reqProcessorMX=new RequestInfo(this);
 
+    private boolean sendfile = true;
 
     protected volatile ReadListener listener;
 
@@ -422,6 +423,14 @@ public final class Request {
         this.available = available;
     }
 
+    public boolean getSendfile() {
+        return sendfile;
+    }
+
+    public void setSendfile(boolean sendfile) {
+        this.sendfile = sendfile;
+    }
+
     public boolean isFinished() {
         AtomicBoolean result = new AtomicBoolean(false);
         action(ActionCode.REQUEST_BODY_FULLY_READ, result);
@@ -522,6 +531,7 @@ public final class Request {
         localPort = -1;
         remotePort = -1;
         available = 0;
+        sendfile = true;
 
         serverCookies.recycle();
         parameters.recycle();

==================================================
StreamProcessor.java
index d3457f90cc..30b318c679 100644
--- a/java/org/apache/coyote/http2/Http2UpgradeHandler.java
+++ b/java/org/apache/coyote/http2/Http2UpgradeHandler.java
@@ -295,7 +295,7 @@ public class Http2UpgradeHandler extends AbstractStream implements InternalHttpU
                 result = SocketState.UPGRADED;
                 break;
 
-                case OPEN_WRITE:
+            case OPEN_WRITE:
                 processWrites();
 
                 result = SocketState.UPGRADED;

==================================================
AbstractJsseEndpoint.java
index eca8404b5d..7ceab2ac9a 100644
--- a/java/org/apache/coyote/http2/StreamProcessor.java
+++ b/java/org/apache/coyote/http2/StreamProcessor.java
@@ -54,6 +54,8 @@ public class StreamProcessor extends AbstractProcessor implements Runnable {
     @Override
     public void run() {
         try {
+            // No sendfile for HTTP/2
+            request.setSendfile(false);
             adapter.service(request, response);
             // Ensure the response is complete
             response.action(ActionCode.CLOSE, null);

==================================================
