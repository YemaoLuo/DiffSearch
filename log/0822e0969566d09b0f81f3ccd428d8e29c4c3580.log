0822e0969566d09b0f81f3ccd428d8e29c4c3580
==================================================
Simplify attribute skipping. Based on an idea by kkolinko.
==================================================
Mark Emlyn
==================================================
Fri Sep 12 09:34:25 2014 +0000
==================================================
Attribute.java
Simplify attribute skipping. Based on an idea by kkolinko.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1624486 13f79535-47bb-0310-9956-ffa450edef68



==================================================
ClassParser.java
index 4e25101f48..8e8328e0a3 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/Attribute.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/Attribute.java
@@ -100,7 +100,7 @@ public abstract class Attribute implements Serializable
             Utility.swallowSourceFile(file);
             return null;
         case Constants.ATTR_CODE:
-            Utility.swallowCode(file, constant_pool);
+            Utility.swallowCode(file);
             return null;
         case Constants.ATTR_EXCEPTIONS:
             Utility.swallowExceptionTable(file);

==================================================
Utility.java
index f31fa7806a..ca190594b2 100644
--- a/java/org/apache/tomcat/util/bcel/classfile/ClassParser.java
+++ b/java/org/apache/tomcat/util/bcel/classfile/ClassParser.java
@@ -175,7 +175,7 @@ public final class ClassParser {
     private void readFields() throws IOException, ClassFormatException {
         int fields_count = file.readUnsignedShort();
         for (int i = 0; i < fields_count; i++) {
-            Utility.swallowFieldOrMethod(file, constant_pool);
+            Utility.swallowFieldOrMethod(file);
         }
     }
 
@@ -218,7 +218,7 @@ public final class ClassParser {
         int methods_count;
         methods_count = file.readUnsignedShort();
         for (int i = 0; i < methods_count; i++) {
-            Utility.swallowFieldOrMethod(file, constant_pool);
+            Utility.swallowFieldOrMethod(file);
         }
     }
 

==================================================
