c87fd0eb9be9f4979de3f6c70dfbbbdf6d951b7b
==================================================
Whitespace removal from /java/org/apache/catalina/deploy
==================================================
Mark Emlyn
==================================================
Sat Oct 22 21:10:44 2011 +0000
==================================================
ApplicationParameter.java
Whitespace removal from /java/org/apache/catalina/deploy

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1187790 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Constants.java
index 02ce791190..f8d7d6d07c 100644
--- a/java/org/apache/catalina/deploy/ApplicationParameter.java
+++ b/java/org/apache/catalina/deploy/ApplicationParameter.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

==================================================
ContextEjb.java
index 9ac67ae0b0..6b3cf211d8 100644
--- a/java/org/apache/catalina/deploy/Constants.java
+++ b/java/org/apache/catalina/deploy/Constants.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

==================================================
ContextEnvironment.java
index b4451e1429..f5984bb109 100644
--- a/java/org/apache/catalina/deploy/ContextEjb.java
+++ b/java/org/apache/catalina/deploy/ContextEjb.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -77,7 +77,7 @@ public class ContextEjb extends ResourceBase {
         this.remote = remote;
     }
 
-    
+
     // --------------------------------------------------------- Public Methods
 
 

==================================================
ContextHandler.java
index 127d4f3cab..3163fb5f91 100644
--- a/java/org/apache/catalina/deploy/ContextEnvironment.java
+++ b/java/org/apache/catalina/deploy/ContextEnvironment.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

==================================================
ContextLocalEjb.java
index ddf9be5007..02a19ee9bf 100644
--- a/java/org/apache/catalina/deploy/ContextHandler.java
+++ b/java/org/apache/catalina/deploy/ContextHandler.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -51,7 +51,7 @@ public class ContextHandler extends ResourceBase {
     }
 
     /**
-     * A list of QName specifying the SOAP Headers the handler will work on. 
+     * A list of QName specifying the SOAP Headers the handler will work on.
      * -namespace and locapart values must be found inside the WSDL.
      *
      * A service-qname is composed by a namespaceURI and a localpart.

==================================================
ContextResource.java
index 0b2617f511..3b38addc79 100644
--- a/java/org/apache/catalina/deploy/ContextLocalEjb.java
+++ b/java/org/apache/catalina/deploy/ContextLocalEjb.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -76,7 +76,7 @@ public class ContextLocalEjb extends ResourceBase {
         this.local = local;
     }
 
-    
+
     // --------------------------------------------------------- Public Methods
 
 

==================================================
ContextResourceEnvRef.java
index 1470bff142..093ca95203 100644
--- a/java/org/apache/catalina/deploy/ContextResource.java
+++ b/java/org/apache/catalina/deploy/ContextResource.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -71,11 +71,11 @@ public class ContextResource extends ResourceBase {
      * that the default should be false.
      */
     private boolean singleton = true;
-    
+
     public boolean getSingleton() {
         return singleton;
     }
-    
+
     public void setSingleton(boolean singleton) {
         this.singleton = singleton;
     }
@@ -88,7 +88,7 @@ public class ContextResource extends ResourceBase {
      * collection.
      */
     private String closeMethod = null;
-    
+
     public String getCloseMethod() {
         return closeMethod;
     }

==================================================
ContextResourceLink.java
index fe46c2718c..3d30397927 100644
--- a/java/org/apache/catalina/deploy/ContextResourceEnvRef.java
+++ b/java/org/apache/catalina/deploy/ContextResourceEnvRef.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -47,7 +47,7 @@ public class ContextResourceEnvRef extends ResourceBase {
     public void setOverride(boolean override) {
         this.override = override;
     }
-    
+
     // --------------------------------------------------------- Public Methods
 
 

==================================================
ContextService.java
index f295f203b4..04427fb59e 100644
--- a/java/org/apache/catalina/deploy/ContextResourceLink.java
+++ b/java/org/apache/catalina/deploy/ContextResourceLink.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

==================================================
ContextTransaction.java
index 2e55c1e74c..6b7c925505 100644
--- a/java/org/apache/catalina/deploy/ContextService.java
+++ b/java/org/apache/catalina/deploy/ContextService.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -81,11 +81,11 @@ public class ContextService extends ResourceBase {
      * client depends on.
      */
     private String serviceInterface = null;
-    
+
     public String getInterface() {
         return serviceInterface;
     }
-    
+
     public void setInterface(String serviceInterface) {
         this.serviceInterface = serviceInterface;
     }
@@ -106,7 +106,7 @@ public class ContextService extends ResourceBase {
 
     /**
      * A file specifying the correlation of the WSDL definition
-     * to the interfaces (Service Endpoint Interface, Service Interface). 
+     * to the interfaces (Service Endpoint Interface, Service Interface).
      */
     private String jaxrpcmappingfile = null;
 

==================================================
ErrorPage.java
index 7fe2e5a1f2..dacd89d130 100644
--- a/java/org/apache/catalina/deploy/ContextTransaction.java
+++ b/java/org/apache/catalina/deploy/ContextTransaction.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -57,7 +57,7 @@ public class ContextTransaction implements Serializable {
         properties.put(name, value);
     }
 
-    /** 
+    /**
      * remove a configured property.
      */
     public void removeProperty(String name) {
@@ -70,8 +70,8 @@ public class ContextTransaction implements Serializable {
     public Iterator<String> listProperties() {
         return properties.keySet().iterator();
     }
-    
-    
+
+
     // --------------------------------------------------------- Public Methods
 
 

==================================================
FilterDef.java
index 1db40fb45e..01ba94c493 100644
--- a/java/org/apache/catalina/deploy/ErrorPage.java
+++ b/java/org/apache/catalina/deploy/ErrorPage.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

==================================================
FilterMap.java
index 09ddc18fcc..6f2ec3e3b4 100644
--- a/java/org/apache/catalina/deploy/FilterDef.java
+++ b/java/org/apache/catalina/deploy/FilterDef.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -68,12 +68,12 @@ public class FilterDef implements Serializable {
         this.displayName = displayName;
     }
 
-    
+
     /**
      * The filter instance associated with this definition
      */
     private transient Filter filter = null;
-    
+
     public Filter getFilter() {
         return filter;
     }
@@ -81,8 +81,8 @@ public class FilterDef implements Serializable {
     public void setFilter(Filter filter) {
         this.filter = filter;
     }
-    
-    
+
+
     /**
      * The fully qualified name of the Java class that implements this filter.
      */
@@ -151,9 +151,9 @@ public class FilterDef implements Serializable {
     public void setSmallIcon(String smallIcon) {
         this.smallIcon = smallIcon;
     }
-    
+
     private String asyncSupported = null;
-    
+
     public String getAsyncSupported() {
         return asyncSupported;
     }

==================================================
Injectable.java
index 48755ace6e..2648afb25d 100644
--- a/java/org/apache/catalina/deploy/FilterMap.java
+++ b/java/org/apache/catalina/deploy/FilterMap.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -45,25 +45,25 @@ public class FilterMap implements Serializable {
 
 
     private static final long serialVersionUID = 1L;
-    
+
     /**
      * The name of this filter to be executed when this mapping matches
      * a particular request.
      */
-    
+
     public static final int ERROR = 1;
     public static final int FORWARD = 2;
     public static final int INCLUDE = 4;
     public static final int REQUEST = 8;
     public static final int ASYNC = 16;
-    
-    // represents nothing having been set. This will be seen 
+
+    // represents nothing having been set. This will be seen
     // as equal to a REQUEST
     private static final int NOT_SET = 0;
-    
+
     private int dispatcherMapping = NOT_SET;
-    
-    private String filterName = null;    
+
+    private String filterName = null;
 
     public String getFilterName() {
         return (this.filterName);
@@ -98,27 +98,27 @@ public class FilterMap implements Serializable {
         }
     }
 
-    
+
     /**
      * The flag that indicates this mapping will match all url-patterns
      */
     private boolean matchAllUrlPatterns = false;
-    
+
     public boolean getMatchAllUrlPatterns() {
         return matchAllUrlPatterns;
     }
-    
+
 
     /**
      * The flag that indicates this mapping will match all servlet-names
      */
     private boolean matchAllServletNames = false;
-    
+
     public boolean getMatchAllServletNames() {
         return matchAllServletNames;
     }
 
-    
+
     /**
      * The URL pattern this mapping matches.
      */
@@ -142,7 +142,7 @@ public class FilterMap implements Serializable {
             urlPatterns = results;
         }
     }
-    
+
     /**
      *
      * This method will be used to set the current state of the FilterMap
@@ -150,7 +150,7 @@ public class FilterMap implements Serializable {
      */
     public void setDispatcher(String dispatcherString) {
         String dispatcher = dispatcherString.toUpperCase(Locale.ENGLISH);
-        
+
         if (dispatcher.equals(DispatcherType.FORWARD.name())) {
             // apply FORWARD to the global dispatcherMapping.
             dispatcherMapping |= FORWARD;
@@ -168,13 +168,13 @@ public class FilterMap implements Serializable {
             dispatcherMapping |= ASYNC;
         }
     }
-    
+
     public int getDispatcherMapping() {
         // per the SRV.6.2.5 absence of any dispatcher elements is
         // equivalent to a REQUEST value
         if (dispatcherMapping == NOT_SET) return REQUEST;
-        
-        return dispatcherMapping; 
+
+        return dispatcherMapping;
     }
 
     public String[] getDispatcherNames() {

==================================================
InjectionTarget.java
index 32fa5e1a33..3099bef9f4 100644
--- a/java/org/apache/catalina/deploy/Injectable.java
+++ b/java/org/apache/catalina/deploy/Injectable.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

==================================================
JspPropertyGroup.java
index 4f99407cd1..6955e72214 100644
--- a/java/org/apache/catalina/deploy/InjectionTarget.java
+++ b/java/org/apache/catalina/deploy/InjectionTarget.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

==================================================
LoginConfig.java
index c22575719a..0cd7712f8e 100644
--- a/java/org/apache/catalina/deploy/LocalStrings.properties
+++ b/java/org/apache/catalina/deploy/LocalStrings.properties
@@ -40,7 +40,7 @@ webXml.mergeConflictSessionTrackingMode=The session tracking modes were defined
 webXml.mergeConflictString=The [{0}] with name [{1}] was defined inconsistently in multiple fragments including fragment with name [{2}] located at [{3}]
 webXml.multipleOther=Multiple others entries in ordering
 webxml.unrecognisedPublicId=The public ID [{0}] did not match any of the known public ID's for web.xml files so the version could not be identified
-webXml.version.nfe=Unable to parse [{0}] from the version string [{1}]. This component of the version string will be ignored. 
+webXml.version.nfe=Unable to parse [{0}] from the version string [{1}]. This component of the version string will be ignored.
 webXml.wrongFragmentName=Used a wrong fragment name {0} at web.xml absolute-ordering tag!
 
 namingResources.cleanupCloseFailed=Failed to invoke method [{0}] for resource [{1}] in container [{2}] so no cleanup was performed for that resource

==================================================
MessageDestination.java
index 35400dfb2b..a97862c853 100644
--- a/java/org/apache/catalina/deploy/LoginConfig.java
+++ b/java/org/apache/catalina/deploy/LoginConfig.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

==================================================
MessageDestinationRef.java
index aba7013cfa..67d3373eea 100644
--- a/java/org/apache/catalina/deploy/MessageDestination.java
+++ b/java/org/apache/catalina/deploy/MessageDestination.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

==================================================
MultipartDef.java
index c386720096..da9af78261 100644
--- a/java/org/apache/catalina/deploy/MessageDestinationRef.java
+++ b/java/org/apache/catalina/deploy/MessageDestinationRef.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -32,7 +32,7 @@ package org.apache.catalina.deploy;
 public class MessageDestinationRef extends ResourceBase {
 
     private static final long serialVersionUID = 1L;
-    
+
     // ------------------------------------------------------------- Properties
 
 

==================================================
NamingResources.java
index c3ed7949e3..a21172f27b 100644
--- a/java/org/apache/catalina/deploy/MultipartDef.java
+++ b/java/org/apache/catalina/deploy/MultipartDef.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -30,7 +30,7 @@ public class MultipartDef implements Serializable {
 
     // ------------------------------------------------------------- Properties
     private String location;
-   
+
     public String getLocation() {
         return location;
     }
@@ -38,8 +38,8 @@ public class MultipartDef implements Serializable {
     public void setLocation(String location) {
         this.location = location;
     }
-    
-    
+
+
     private String maxFileSize;
 
     public String getMaxFileSize() {
@@ -49,8 +49,8 @@ public class MultipartDef implements Serializable {
     public void setMaxFileSize(String maxFileSize) {
         this.maxFileSize = maxFileSize;
     }
-    
-    
+
+
     private String maxRequestSize;
 
     public String getMaxRequestSize() {
@@ -61,9 +61,9 @@ public class MultipartDef implements Serializable {
         this.maxRequestSize = maxRequestSize;
     }
 
-    
+
     private String fileSizeThreshold;
-    
+
     public String getFileSizeThreshold() {
         return fileSizeThreshold;
     }

==================================================
ResourceBase.java
index 84c386c5c2..4faf656482 100644
--- a/java/org/apache/catalina/deploy/NamingResources.java
+++ b/java/org/apache/catalina/deploy/NamingResources.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -44,7 +44,7 @@ import org.apache.tomcat.util.res.StringManager;
 
 
 /**
- * Holds and manages the naming resources defined in the J2EE Enterprise 
+ * Holds and manages the naming resources defined in the J2EE Enterprise
  * Naming Context and their associated JNDI context.
  *
  * @author Remy Maucherat
@@ -54,9 +54,9 @@ import org.apache.tomcat.util.res.StringManager;
 public class NamingResources extends LifecycleMBeanBase implements Serializable {
 
     private static final long serialVersionUID = 1L;
-    
+
     private static final Log log = LogFactory.getLog(NamingResources.class);
-    
+
     private static final StringManager sm =
         StringManager.getManager(Constants.Package);
 
@@ -179,14 +179,14 @@ public class NamingResources extends LifecycleMBeanBase implements Serializable
         this.container = container;
     }
 
-    
+
     /**
      * Set the transaction object.
      */
     public void setTransaction(ContextTransaction transaction) {
         this.transaction = transaction;
     }
-    
+
 
     /**
      * Get the transaction object.
@@ -194,7 +194,7 @@ public class NamingResources extends LifecycleMBeanBase implements Serializable
     public ContextTransaction getTransaction() {
         return transaction;
     }
-    
+
 
     /**
      * Add an EJB resource reference for this web application.
@@ -249,7 +249,7 @@ public class NamingResources extends LifecycleMBeanBase implements Serializable
                 return;
             }
         }
-        
+
         entries.put(environment.getName(), environment.getType());
 
         synchronized (envs) {
@@ -444,13 +444,13 @@ public class NamingResources extends LifecycleMBeanBase implements Serializable
             }
             entries.put(service.getName(), value);
         }
-        
+
         synchronized (services) {
             service.setNamingResources(this);
             services.put(service.getName(), service);
         }
         support.firePropertyChange("service", null, service);
-        
+
     }
 
 
@@ -609,7 +609,7 @@ public class NamingResources extends LifecycleMBeanBase implements Serializable
     public ContextResourceLink[] findResourceLinks() {
 
         synchronized (resourceLinks) {
-            ContextResourceLink results[] = 
+            ContextResourceLink results[] =
                 new ContextResourceLink[resourceLinks.size()];
             return resourceLinks.values().toArray(results);
         }
@@ -681,12 +681,12 @@ public class NamingResources extends LifecycleMBeanBase implements Serializable
      * none have been defined, a zero-length array is returned.
      */
     public ContextService[] findServices() {
-        
+
         synchronized (services) {
             ContextService results[] = new ContextService[services.size()];
             return services.values().toArray(results);
         }
-        
+
     }
 
 
@@ -891,9 +891,9 @@ public class NamingResources extends LifecycleMBeanBase implements Serializable
      * @param name Name of the web service reference to remove
      */
     public void removeService(String name) {
-        
+
         entries.remove(name);
-        
+
         ContextService service = null;
         synchronized (services) {
             service = services.remove(name);
@@ -902,20 +902,20 @@ public class NamingResources extends LifecycleMBeanBase implements Serializable
             support.firePropertyChange("service", service, null);
             service.setNamingResources(null);
         }
-        
+
     }
 
 
     // ------------------------------------------------------- Lifecycle methods
-    
+
     @Override
     protected void initInternal() throws LifecycleException {
         super.initInternal();
-        
+
         // Set this before we register currently known naming resources to avoid
         // timing issues. Duplication registration is not an issue.
         resourceRequireExplicitRegistration = true;
-        
+
         for (ContextResource cr : resources.values()) {
             try {
                 MBeanUtils.createMBean(cr);
@@ -924,7 +924,7 @@ public class NamingResources extends LifecycleMBeanBase implements Serializable
                         "namingResources.mbeanCreateFail", cr.getName()), e);
             }
         }
-        
+
         for (ContextEnvironment ce : envs.values()) {
             try {
                 MBeanUtils.createMBean(ce);
@@ -933,7 +933,7 @@ public class NamingResources extends LifecycleMBeanBase implements Serializable
                         "namingResources.mbeanCreateFail", ce.getName()), e);
             }
         }
-        
+
         for (ContextResourceLink crl : resourceLinks.values()) {
             try {
                 MBeanUtils.createMBean(crl);
@@ -981,7 +981,7 @@ public class NamingResources extends LifecycleMBeanBase implements Serializable
         }
         for (ContextResource cr: resources.values()) {
             if (cr.getSingleton()) {
-                String closeMethod = cr.getCloseMethod(); 
+                String closeMethod = cr.getCloseMethod();
                 if (closeMethod != null && closeMethod.length() > 0) {
                     String name = cr.getName();
                     Object resource;
@@ -999,13 +999,13 @@ public class NamingResources extends LifecycleMBeanBase implements Serializable
         }
     }
 
-    
+
     /**
      * Clean up a resource by calling the defined close method. For example,
      * closing a database connection pool will close it's open connections. This
      * will happen on GC but that leaves db connections open that may cause
      * issues.
-     * 
+     *
      * @param resource  The resource to close.
      */
     private void cleanUp(Object resource, String name, String closeMethod) {
@@ -1054,7 +1054,7 @@ public class NamingResources extends LifecycleMBeanBase implements Serializable
                         "namingResources.mbeanDestroyFail", crl.getName()), e);
             }
         }
-        
+
         for (ContextEnvironment ce : envs.values()) {
             try {
                 MBeanUtils.destroyMBean(ce);
@@ -1063,7 +1063,7 @@ public class NamingResources extends LifecycleMBeanBase implements Serializable
                         "namingResources.mbeanDestroyFail", ce.getName()), e);
             }
         }
-        
+
         for (ContextResource cr : resources.values()) {
             try {
                 MBeanUtils.destroyMBean(cr);
@@ -1072,7 +1072,7 @@ public class NamingResources extends LifecycleMBeanBase implements Serializable
                         "namingResources.mbeanDestroyFail", cr.getName()), e);
             }
         }
-        
+
         super.destroyInternal();
     }
 
@@ -1081,7 +1081,7 @@ public class NamingResources extends LifecycleMBeanBase implements Serializable
     protected String getDomainInternal() {
         // Use the same domain as our associated container if we have one
         Object c = getContainer();
-        
+
         if (c instanceof LifecycleMBeanBase) {
             return ((LifecycleMBeanBase) c).getDomain();
         }

==================================================
SecurityCollection.java
index 20572d62d9..90cd016bdc 100644
--- a/java/org/apache/catalina/deploy/ResourceBase.java
+++ b/java/org/apache/catalina/deploy/ResourceBase.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -102,7 +102,7 @@ public class ResourceBase implements Serializable, Injectable {
         properties.put(name, value);
     }
 
-    /** 
+    /**
      * Remove a configured property.
      */
     public void removeProperty(String name) {

==================================================
SecurityConstraint.java
index d41d419d67..2802c26e46 100644
--- a/java/org/apache/catalina/deploy/SecurityCollection.java
+++ b/java/org/apache/catalina/deploy/SecurityCollection.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

==================================================
SecurityRoleRef.java
index bb69a3eacf..a6486c6a76 100644
--- a/java/org/apache/catalina/deploy/SecurityConstraint.java
+++ b/java/org/apache/catalina/deploy/SecurityConstraint.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -472,7 +472,7 @@ public class SecurityConstraint implements Serializable {
     /**
      * Convert a {@link ServletSecurityElement} to an array of
      * {@link SecurityConstraint}(s).
-     * 
+     *
      * @param element       The element to be converted
      * @param urlPattern    The url pattern that the element should be applied
      *                      to
@@ -482,7 +482,7 @@ public class SecurityConstraint implements Serializable {
     public static SecurityConstraint[] createConstraints(
             ServletSecurityElement element, String urlPattern) {
         Set<SecurityConstraint> result = new HashSet<SecurityConstraint>();
-        
+
         // Add the per method constraints
         Collection<HttpMethodConstraintElement> methods =
             element.getHttpMethodConstraints();
@@ -496,7 +496,7 @@ public class SecurityConstraint implements Serializable {
             collection.addMethod(methodElement.getMethodName());
             result.add(constraint);
         }
-        
+
         // Add the constraint for all the other methods
         SecurityConstraint constraint = createConstraint(element, urlPattern, false);
         if (constraint != null) {
@@ -506,21 +506,21 @@ public class SecurityConstraint implements Serializable {
             while (ommittedMethod.hasNext()) {
                 collection.addOmittedMethod(ommittedMethod.next());
             }
-            
+
             result.add(constraint);
-            
+
         }
-        
+
         return result.toArray(new SecurityConstraint[result.size()]);
     }
-    
+
     private static SecurityConstraint createConstraint(
             HttpConstraintElement element, String urlPattern, boolean alwaysCreate) {
 
         SecurityConstraint constraint = new SecurityConstraint();
         SecurityCollection collection = new SecurityCollection();
         boolean create = alwaysCreate;
-        
+
         if (element.getTransportGuarantee() !=
                 ServletSecurity.TransportGuarantee.NONE) {
             constraint.setUserConstraint(element.getTransportGuarantee().name());
@@ -537,13 +537,13 @@ public class SecurityConstraint implements Serializable {
             constraint.setAuthConstraint(true);
             create = true;
         }
-        
+
         if (create) {
             collection.addPattern(urlPattern);
             constraint.addCollection(collection);
             return constraint;
         }
-        
+
         return null;
     }
 }

==================================================
ServletDef.java
index c2d270ca43..b7137756c8 100644
--- a/java/org/apache/catalina/deploy/SecurityRoleRef.java
+++ b/java/org/apache/catalina/deploy/SecurityRoleRef.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

==================================================
SessionConfig.java
index 44261a5e45..900f81938d 100644
--- a/java/org/apache/catalina/deploy/ServletDef.java
+++ b/java/org/apache/catalina/deploy/ServletDef.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -78,7 +78,7 @@ public class ServletDef implements Serializable {
     public void setSmallIcon(String smallIcon) {
         this.smallIcon = smallIcon;
     }
-    
+
     /**
      * The large icon associated with this servlet.
      */
@@ -223,54 +223,54 @@ public class ServletDef implements Serializable {
         securityRoleRefs.add(srr);
     }
 
-    
+
     /**
      * The multipart configuration, if any, for this servlet
      */
     private MultipartDef multipartDef = null;
-    
+
     public MultipartDef getMultipartDef() {
         return this.multipartDef;
     }
-    
+
     public void setMultipartDef(MultipartDef multipartDef) {
         this.multipartDef = multipartDef;
     }
-    
-    
+
+
     /**
      * Does this servlet support async.
      */
     private Boolean asyncSupported = null;
-    
+
     public Boolean getAsyncSupported() {
         return this.asyncSupported;
     }
-    
+
     public void setAsyncSupported(String asyncSupported) {
         this.asyncSupported = Boolean.valueOf(asyncSupported);
     }
 
-    
+
     /**
      * Is this servlet enabled.
      */
     private Boolean enabled = null;
-    
+
     public Boolean getEnabled() {
         return this.enabled;
     }
-    
+
     public void setEnabled(String enabled) {
         this.enabled = Boolean.valueOf(enabled);
     }
 
-    
+
     /**
      * Can this ServletDef be overridden by an SCI?
      */
     private boolean overridable = false;
-    
+
     public boolean isOverridable() {
         return overridable;
     }

==================================================
WebXml.java
index a227119af9..6f158d1cff 100644
--- a/java/org/apache/catalina/deploy/SessionConfig.java
+++ b/java/org/apache/catalina/deploy/SessionConfig.java
@@ -5,9 +5,9 @@
  * The ASF licenses this file to You under the Apache License, Version 2.0
  * (the "License"); you may not use this file except in compliance with
  * the License.  You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -37,63 +37,63 @@ public class SessionConfig {
     private Integer cookieMaxAge;
     private EnumSet<SessionTrackingMode> sessionTrackingModes =
         EnumSet.noneOf(SessionTrackingMode.class);
-    
+
     public Integer getSessionTimeout() {
         return sessionTimeout;
     }
     public void setSessionTimeout(String sessionTimeout) {
         this.sessionTimeout = Integer.valueOf(sessionTimeout);
     }
-    
+
     public String getCookieName() {
         return cookieName;
     }
     public void setCookieName(String cookieName) {
         this.cookieName = cookieName;
     }
-    
+
     public String getCookieDomain() {
         return cookieDomain;
     }
     public void setCookieDomain(String cookieDomain) {
         this.cookieDomain = cookieDomain;
     }
-    
+
     public String getCookiePath() {
         return cookiePath;
     }
     public void setCookiePath(String cookiePath) {
         this.cookiePath = cookiePath;
     }
-    
+
     public String getCookieComment() {
         return cookieComment;
     }
     public void setCookieComment(String cookieComment) {
         this.cookieComment = cookieComment;
     }
-    
+
     public Boolean getCookieHttpOnly() {
         return cookieHttpOnly;
     }
     public void setCookieHttpOnly(String cookieHttpOnly) {
         this.cookieHttpOnly = Boolean.valueOf(cookieHttpOnly);
     }
-    
+
     public Boolean getCookieSecure() {
         return cookieSecure;
     }
     public void setCookieSecure(String cookieSecure) {
         this.cookieSecure = Boolean.valueOf(cookieSecure);
     }
-    
+
     public Integer getCookieMaxAge() {
         return cookieMaxAge;
     }
     public void setCookieMaxAge(String cookieMaxAge) {
         this.cookieMaxAge = Integer.valueOf(cookieMaxAge);
     }
-    
+
     public EnumSet<SessionTrackingMode> getSessionTrackingModes() {
         return sessionTrackingModes;
     }
@@ -101,5 +101,5 @@ public class SessionConfig {
         sessionTrackingModes.add(
                 SessionTrackingMode.valueOf(sessionTrackingMode));
     }
-    
+
 }

==================================================
