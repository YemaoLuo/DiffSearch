09b01cbf79e6ec924e6bf1a9262a416548a69969
==================================================
Partial fix for https://bz.apache.org/bugzilla/show_bug.cgi?id=47214
==================================================
Mark Thomas
==================================================
Wed Apr 5 14:15:24 2017 +0000
==================================================
OutputBuffer.java
Partial fix for https://bz.apache.org/bugzilla/show_bug.cgi?id=47214
Replace explicitly referenced anonymous inner classes in OutputBuffer with named inner classes.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1790273 13f79535-47bb-0310-9956-ffa450edef68



==================================================
SecurityClassLoad.java
index c85e673810..3a3e82a38f 100644
--- a/java/org/apache/catalina/connector/OutputBuffer.java
+++ b/java/org/apache/catalina/connector/OutputBuffer.java
@@ -564,12 +564,7 @@ public class OutputBuffer extends Writer {
     private static Charset getCharset(final String encoding) throws IOException {
         if (Globals.IS_SECURITY_ENABLED) {
             try {
-                return AccessController.doPrivileged(new PrivilegedExceptionAction<Charset>() {
-                    @Override
-                    public Charset run() throws IOException {
-                        return B2CConverter.getCharset(encoding);
-                    }
-                });
+                return AccessController.doPrivileged(new PrivilegedGetCharset(encoding));
             } catch (PrivilegedActionException ex) {
                 Exception e = ex.getException();
                 if (e instanceof IOException) {
@@ -587,12 +582,7 @@ public class OutputBuffer extends Writer {
     private static C2BConverter createConverter(final Charset charset) throws IOException {
         if (Globals.IS_SECURITY_ENABLED) {
             try {
-                return AccessController.doPrivileged(new PrivilegedExceptionAction<C2BConverter>() {
-                    @Override
-                    public C2BConverter run() throws IOException {
-                        return new C2BConverter(charset);
-                    }
-                });
+                return AccessController.doPrivileged(new PrivilegedCreateConverter(charset));
             } catch (PrivilegedActionException ex) {
                 Exception e = ex.getException();
                 if (e instanceof IOException) {
@@ -872,4 +862,35 @@ public class OutputBuffer extends Writer {
               .position(buffer.limit())
               .limit(buffer.capacity());
     }
+
+
+    private static class PrivilegedCreateConverter
+            implements PrivilegedExceptionAction<C2BConverter> {
+
+        private final Charset charset;
+
+        public PrivilegedCreateConverter(Charset charset) {
+            this.charset = charset;
+        }
+
+        @Override
+        public C2BConverter run() throws IOException {
+            return new C2BConverter(charset);
+        }
+    }
+
+
+    private static class PrivilegedGetCharset implements PrivilegedExceptionAction<Charset> {
+
+        private final String encoding;
+
+        public PrivilegedGetCharset(String encoding) {
+            this.encoding = encoding;
+        }
+
+        @Override
+        public Charset run() throws IOException {
+            return B2CConverter.getCharset(encoding);
+        }
+    }
 }

==================================================
