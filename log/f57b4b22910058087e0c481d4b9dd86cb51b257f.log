f57b4b22910058087e0c481d4b9dd86cb51b257f
==================================================
Pull up common protocol initial settings
==================================================
Mark Thomas
==================================================
Sun Nov 23 22:51:14 2014 +0000
==================================================
AbstractProtocol.java
Pull up common protocol initial settings

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1641287 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Constants.java
index fec1d66747..fe0fbc928f 100644
--- a/java/org/apache/coyote/AbstractProtocol.java
+++ b/java/org/apache/coyote/AbstractProtocol.java
@@ -92,6 +92,8 @@ public abstract class AbstractProtocol<S> implements ProtocolHandler,
 
     public AbstractProtocol(AbstractEndpoint<S> endpoint) {
         this.endpoint = endpoint;
+        setSoLinger(Constants.DEFAULT_CONNECTION_LINGER);
+        setTcpNoDelay(Constants.DEFAULT_TCP_NO_DELAY);
     }
 
 

==================================================
AbstractAjpProtocol.java
index b674a0e376..75250a314f 100644
--- a/java/org/apache/coyote/Constants.java
+++ b/java/org/apache/coyote/Constants.java
@@ -44,6 +44,9 @@ public final class Constants {
     public static final int STAGE_KEEPALIVE = 6;
     public static final int STAGE_ENDED = 7;
 
+    // Default protocol settings
+    public static final int DEFAULT_CONNECTION_LINGER = -1;
+    public static final boolean DEFAULT_TCP_NO_DELAY = true;
 
     /**
      * Has security been turned on?

==================================================
AjpAprProtocol.java
index f718640216..80d7db3347 100644
--- a/java/org/apache/coyote/ajp/AbstractAjpProtocol.java
+++ b/java/org/apache/coyote/ajp/AbstractAjpProtocol.java
@@ -44,6 +44,9 @@ public abstract class AbstractAjpProtocol<S> extends AbstractProtocol<S> {
 
     public AbstractAjpProtocol(AbstractEndpoint<S> endpoint) {
         super(endpoint);
+        setSoTimeout(Constants.DEFAULT_CONNECTION_TIMEOUT);
+        // AJP does not use Send File
+        getEndpoint().setUseSendfile(false);
     }
 
 

==================================================
AjpNio2Protocol.java
index 15257e5eee..cf980a536c 100644
--- a/java/org/apache/coyote/ajp/AjpAprProtocol.java
+++ b/java/org/apache/coyote/ajp/AjpAprProtocol.java
@@ -58,11 +58,6 @@ public class AjpAprProtocol extends AbstractAjpProtocol<Long> {
         super(new AprEndpoint());
         cHandler = new AjpConnectionHandler(this);
         ((AprEndpoint) getEndpoint()).setHandler(cHandler);
-        setSoLinger(Constants.DEFAULT_CONNECTION_LINGER);
-        setSoTimeout(Constants.DEFAULT_CONNECTION_TIMEOUT);
-        setTcpNoDelay(Constants.DEFAULT_TCP_NO_DELAY);
-        // AJP does not use Send File
-        getEndpoint().setUseSendfile(false);
     }
 
 

==================================================
AjpNioProtocol.java
index 4ccb336075..9307a5948e 100644
--- a/java/org/apache/coyote/ajp/AjpNio2Protocol.java
+++ b/java/org/apache/coyote/ajp/AjpNio2Protocol.java
@@ -55,11 +55,6 @@ public class AjpNio2Protocol extends AbstractAjpProtocol<Nio2Channel> {
         super(new Nio2Endpoint());
         cHandler = new AjpConnectionHandler(this);
         ((Nio2Endpoint) getEndpoint()).setHandler(cHandler);
-        setSoLinger(Constants.DEFAULT_CONNECTION_LINGER);
-        setSoTimeout(Constants.DEFAULT_CONNECTION_TIMEOUT);
-        setTcpNoDelay(Constants.DEFAULT_TCP_NO_DELAY);
-        // AJP does not use Send File
-        getEndpoint().setUseSendfile(false);
     }
 
 

==================================================
Constants.java
index d12e533fc5..fd670c0f93 100644
--- a/java/org/apache/coyote/ajp/AjpNioProtocol.java
+++ b/java/org/apache/coyote/ajp/AjpNioProtocol.java
@@ -57,11 +57,6 @@ public class AjpNioProtocol extends AbstractAjpProtocol<NioChannel> {
         super(new NioEndpoint());
         cHandler = new AjpConnectionHandler(this);
         ((NioEndpoint) getEndpoint()).setHandler(cHandler);
-        setSoLinger(Constants.DEFAULT_CONNECTION_LINGER);
-        setSoTimeout(Constants.DEFAULT_CONNECTION_TIMEOUT);
-        setTcpNoDelay(Constants.DEFAULT_TCP_NO_DELAY);
-        // AJP does not use Send File
-        getEndpoint().setUseSendfile(false);
     }
 
 

==================================================
AbstractHttp11Protocol.java
index 6bb0af3d2b..bf12f80581 100644
--- a/java/org/apache/coyote/ajp/Constants.java
+++ b/java/org/apache/coyote/ajp/Constants.java
@@ -25,9 +25,7 @@ import java.util.Hashtable;
  */
 public final class Constants {
 
-    public static final int DEFAULT_CONNECTION_LINGER = -1;
     public static final int DEFAULT_CONNECTION_TIMEOUT = -1;
-    public static final boolean DEFAULT_TCP_NO_DELAY = true;
 
     // Prefix codes for message types from server to container
     public static final byte JK_AJP13_FORWARD_REQUEST   = 2;

==================================================
Constants.java
index b91f6ff8cc..a074cf855e 100644
--- a/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
+++ b/java/org/apache/coyote/http11/AbstractHttp11Protocol.java
@@ -23,6 +23,7 @@ public abstract class AbstractHttp11Protocol<S> extends AbstractProtocol<S> {
 
     public AbstractHttp11Protocol(AbstractEndpoint<S> endpoint) {
         super(endpoint);
+        setSoTimeout(Constants.DEFAULT_CONNECTION_TIMEOUT);
     }
 
 

==================================================
Http11AprProtocol.java
index 15e26eac30..33520c1f4f 100644
--- a/java/org/apache/coyote/http11/Constants.java
+++ b/java/org/apache/coyote/http11/Constants.java
@@ -36,9 +36,7 @@ public final class Constants {
      */
     public static final String Package = "org.apache.coyote.http11";
 
-    public static final int DEFAULT_CONNECTION_LINGER = -1;
     public static final int DEFAULT_CONNECTION_TIMEOUT = 60000;
-    public static final boolean DEFAULT_TCP_NO_DELAY = true;
 
 
     /**

==================================================
Http11Nio2Protocol.java
index caf4c26cbe..8fb2e37238 100644
--- a/java/org/apache/coyote/http11/Http11AprProtocol.java
+++ b/java/org/apache/coyote/http11/Http11AprProtocol.java
@@ -68,9 +68,6 @@ public class Http11AprProtocol extends AbstractHttp11Protocol<Long> {
         super(new AprEndpoint());
         cHandler = new Http11ConnectionHandler(this);
         ((AprEndpoint) getEndpoint()).setHandler(cHandler);
-        setSoLinger(Constants.DEFAULT_CONNECTION_LINGER);
-        setSoTimeout(Constants.DEFAULT_CONNECTION_TIMEOUT);
-        setTcpNoDelay(Constants.DEFAULT_TCP_NO_DELAY);
     }
 
     private final Http11ConnectionHandler cHandler;

==================================================
Http11NioProtocol.java
index 191bbb9184..d5b90d0765 100644
--- a/java/org/apache/coyote/http11/Http11Nio2Protocol.java
+++ b/java/org/apache/coyote/http11/Http11Nio2Protocol.java
@@ -61,9 +61,6 @@ public class Http11Nio2Protocol extends AbstractHttp11JsseProtocol<Nio2Channel>
         super(new Nio2Endpoint());
         cHandler = new Http11ConnectionHandler(this);
         ((Nio2Endpoint) getEndpoint()).setHandler(cHandler);
-        setSoLinger(Constants.DEFAULT_CONNECTION_LINGER);
-        setSoTimeout(Constants.DEFAULT_CONNECTION_TIMEOUT);
-        setTcpNoDelay(Constants.DEFAULT_TCP_NO_DELAY);
     }
 
 

==================================================
SpdyProxyProtocol.java
index 0ea44ccab9..1215dcd70c 100644
--- a/java/org/apache/coyote/http11/Http11NioProtocol.java
+++ b/java/org/apache/coyote/http11/Http11NioProtocol.java
@@ -66,9 +66,6 @@ public class Http11NioProtocol extends AbstractHttp11JsseProtocol<NioChannel> {
         super(new NioEndpoint());
         cHandler = new Http11ConnectionHandler(this);
         ((NioEndpoint) getEndpoint()).setHandler(cHandler);
-        setSoLinger(Constants.DEFAULT_CONNECTION_LINGER);
-        setSoTimeout(Constants.DEFAULT_CONNECTION_TIMEOUT);
-        setTcpNoDelay(Constants.DEFAULT_TCP_NO_DELAY);
     }
 
 

==================================================
