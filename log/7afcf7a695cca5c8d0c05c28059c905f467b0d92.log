7afcf7a695cca5c8d0c05c28059c905f467b0d92
==================================================
Add debug logging of read/write interest registration
==================================================
Mark Thomas
==================================================
Wed Oct 9 21:51:24 2019 +0100
==================================================
AprEndpoint.java
Add debug logging of read/write interest registration


==================================================
Nio2Endpoint.java
index 3eed259646..0fdd2dff7f 100644
--- a/java/org/apache/tomcat/util/net/LocalStrings.properties
+++ b/java/org/apache/tomcat/util/net/LocalStrings.properties
@@ -68,6 +68,8 @@ endpoint.debug.pollerAddDo=Add to poller socket [{0}]
 endpoint.debug.pollerProcess=Processing socket [{0}] for event(s) [{1}]
 endpoint.debug.pollerRemove=Attempting to remove [{0}] from poller
 endpoint.debug.pollerRemoved=Removed [{0}] from poller
+endpoint.debug.registerRead=Registered read interest for [{0}]
+endpoint.debug.registerWrite=Registered write interest for [{0}]
 endpoint.debug.socket=socket [{0}]
 endpoint.debug.socketTimeout=Timing out [{0}]
 endpoint.debug.unlock.fail=Caught exception trying to unlock accept on port [{0}]

==================================================
NioEndpoint.java
index 4bb8ba1801..e61215bdf9 100644
--- a/java/org/apache/tomcat/util/net/Nio2Endpoint.java
+++ b/java/org/apache/tomcat/util/net/Nio2Endpoint.java
@@ -1368,6 +1368,9 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel,AsynchronousS
                 if (readNotify) {
                     return;
                 }
+                if (log.isDebugEnabled()) {
+                    log.debug(sm.getString("endpoint.debug.registerRead", this));
+                }
                 readInterest = true;
                 if (readPending.tryAcquire()) {
                     // No read pending, so do a read
@@ -1395,6 +1398,9 @@ public class Nio2Endpoint extends AbstractJsseEndpoint<Nio2Channel,AsynchronousS
                 if (writeNotify) {
                     return;
                 }
+                if (log.isDebugEnabled()) {
+                    log.debug(sm.getString("endpoint.debug.registerWrite", this));
+                }
                 writeInterest = true;
                 if (writePending.availablePermits() == 1) {
                     // If no write is pending, notify that writing is possible

==================================================
