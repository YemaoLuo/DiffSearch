dee371617d9ea0df57b8d5bab59fb730abc443d5
==================================================
Fixed findbugs issues:
==================================================
Violeta Georgieva
==================================================
Thu Dec 17 10:21:32 2015 +0000
==================================================
NamingContextListener.java
Fixed findbugs issues:
- Do not invoke toString() method on a String
- Do not invoke inefficient Boolean constructor; use Boolean.valueOf(...) instead
- Close Stream in try with resources

Update false positives filter

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1720506 13f79535-47bb-0310-9956-ffa450edef68



==================================================
JmxRemoteLifecycleListener.java
index ba02bf664e..3f39fc9dfb 100644
--- a/java/org/apache/catalina/core/NamingContextListener.java
+++ b/java/org/apache/catalina/core/NamingContextListener.java
@@ -1129,7 +1129,7 @@ public class NamingContextListener
             (resourceLink.getType(), resourceLink.getGlobal(), resourceLink.getFactory(), null);
         Iterator<String> i = resourceLink.listProperties();
         while (i.hasNext()) {
-            String key = i.next().toString();
+            String key = i.next();
             Object val = resourceLink.getProperty(key);
             if (val!=null) {
                 StringRefAddr refAddr = new StringRefAddr(key, val.toString());

==================================================
HpackEncoder.java
index c2c83bc9e9..51ffc54d4b 100644
--- a/java/org/apache/catalina/mbeans/JmxRemoteLifecycleListener.java
+++ b/java/org/apache/catalina/mbeans/JmxRemoteLifecycleListener.java
@@ -315,7 +315,7 @@ public class JmxRemoteLifecycleListener implements LifecycleListener {
         String url = "service:jmx:rmi://" + bindAddress;
         JMXServiceURL serviceUrl;
         try {
-            serviceUrl = new JMXServiceURL(url.toString());
+            serviceUrl = new JMXServiceURL(url);
         } catch (MalformedURLException e) {
             log.error(sm.getString("jmxRemoteLifecycleListener.invalidURL", serverName, url), e);
             return null;

==================================================
Stream.java
index 9ffca4ff93..5731faff7c 100644
--- a/java/org/apache/coyote/http2/HpackEncoder.java
+++ b/java/org/apache/coyote/http2/HpackEncoder.java
@@ -211,7 +211,7 @@ public class HpackEncoder {
 
     private void writeHuffmanEncodableName(ByteBuffer target, String headerName) {
         if (hpackHeaderFunction.shouldUseHuffman(headerName)) {
-            if(HPackHuffman.encode(target, headerName.toString(), true)) {
+            if(HPackHuffman.encode(target, headerName, true)) {
                 return;
             }
         }

==================================================
JspC.java
index 955f2669e1..85fe57af2b 100644
--- a/java/org/apache/el/stream/Stream.java
+++ b/java/org/apache/el/stream/Stream.java
@@ -391,7 +391,7 @@ public class Stream {
             match = (Boolean) le.invoke(iterator.next());
         }
 
-        return new Optional(new Boolean(!match.booleanValue()));
+        return new Optional(Boolean.valueOf(!match.booleanValue()));
     }
 
 

==================================================
SmapUtil.java
index fdebfa3c8b..5aeb8291dc 100644
--- a/java/org/apache/jasper/JspC.java
+++ b/java/org/apache/jasper/JspC.java
@@ -1372,7 +1372,7 @@ public class JspC extends Task implements Options {
 
             Iterator<String> iter = pages.iterator();
             while (iter.hasNext()) {
-                String nextjsp = iter.next().toString();
+                String nextjsp = iter.next();
                 File fjsp = new File(nextjsp);
                 if (!fjsp.isAbsolute()) {
                     fjsp = new File(uriRootF, nextjsp);

==================================================
