452cdfad2a17d3628059f528f9dd69dc389e26b2
==================================================
Have JspC initialize its ClassLoader before the ServletContext.
==================================================
Jeremy Boynes
==================================================
Mon Aug 12 01:21:38 2013 +0000
==================================================
JspC.java
Have JspC initialize its ClassLoader before the ServletContext.
This avoids the need to re-initialize the ClassLoader for every JSP being pre-compiled.
It also allows the ServletContext to be used before starting a compilation run, e.g. to scan for TLDs

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1513025 13f79535-47bb-0310-9956-ffa450edef68



==================================================
JspCServletContext.java
index 4a1b01b029..b44aa5a6a9 100644
--- a/java/org/apache/jasper/JspC.java
+++ b/java/org/apache/jasper/JspC.java
@@ -151,7 +151,7 @@ public class JspC extends Task implements Options {
     }
 
     protected String classPath = null;
-    protected URLClassLoader loader = null;
+    protected ClassLoader loader = null;
     protected boolean trimSpaces = false;
     protected boolean genStringAsCharArray = false;
     protected boolean xpoweredBy;
@@ -1154,9 +1154,6 @@ public class JspC extends Task implements Options {
             }
 
             originalClassLoader = Thread.currentThread().getContextClassLoader();
-            if( loader==null ) {
-                initClassLoader( clctxt );
-            }
             Thread.currentThread().setContextClassLoader(loader);
 
             clctxt.setClassLoader(loader);
@@ -1288,8 +1285,11 @@ public class JspC extends Task implements Options {
                     Localizer.getMessage("jsp.error.jspc.uriroot_not_dir"));
             }
 
+            if (loader == null) {
+                loader = initClassLoader();
+            }
             if (context == null) {
-                initServletContext();
+                initServletContext(loader);
             }
 
             // No explicit pages, we'll process all .jsp in the webapp
@@ -1412,12 +1412,13 @@ public class JspC extends Task implements Options {
         }
     }
 
-    protected void initServletContext() throws IOException, JasperException {
+    protected void initServletContext(ClassLoader classLoader)
+            throws IOException, JasperException {
         // TODO: should we use the Ant Project's log?
         PrintWriter log = new PrintWriter(System.out);
         URL resourceBase = new File(uriRoot).getCanonicalFile().toURI().toURL();
 
-        context = new JspCServletContext(log, resourceBase);
+        context = new JspCServletContext(log, resourceBase, classLoader);
         tldLocationsCache = TldLocationsCache.getInstance(context);
         rctxt = new JspRuntimeContext(context, this);
         jspConfig = new JspConfig(context);
@@ -1428,11 +1429,9 @@ public class JspC extends Task implements Options {
      * Initializes the classloader as/if needed for the given
      * compilation context.
      *
-     * @param clctxt The compilation context
      * @throws IOException If an error occurs
      */
-    protected void initClassLoader(JspCompilationContext clctxt)
-        throws IOException {
+    protected ClassLoader initClassLoader() throws IOException {
 
         classPath = getClassPath();
 
@@ -1502,14 +1501,10 @@ public class JspC extends Task implements Options {
             }
         }
 
-        // What is this ??
-        urls.add(new File(
-                clctxt.getRealPath("/")).getCanonicalFile().toURI().toURL());
-
         URL urlsA[]=new URL[urls.size()];
         urls.toArray(urlsA);
         loader = new URLClassLoader(urlsA, this.getClass().getClassLoader());
-        context.setClassLoader(loader);
+        return loader;
     }
 
     /**

==================================================
TestJspCServletContext.java
index 8f629759a6..be070ac787 100644
--- a/java/org/apache/jasper/servlet/JspCServletContext.java
+++ b/java/org/apache/jasper/servlet/JspCServletContext.java
@@ -98,7 +98,7 @@ public class JspCServletContext implements ServletContext {
     /**
      * Web application class loader.
      */
-    private ClassLoader loader;
+    private final ClassLoader loader;
 
 
     // ----------------------------------------------------------- Constructors
@@ -110,12 +110,13 @@ public class JspCServletContext implements ServletContext {
      * @param aResourceBaseURL Resource base URL
      * @throws JasperException
      */
-    public JspCServletContext(PrintWriter aLogWriter, URL aResourceBaseURL)
-            throws JasperException {
+    public JspCServletContext(PrintWriter aLogWriter, URL aResourceBaseURL, ClassLoader classLoader)
+        throws JasperException {
 
         myAttributes = new HashMap<>();
         myLogWriter = aLogWriter;
         myResourceBaseURL = aResourceBaseURL;
+        this.loader = classLoader;
 
         this.webXml = buildMergedWebXml();
         jspConfigDescriptor = webXml.getJspConfigDescriptor();
@@ -643,11 +644,6 @@ public class JspCServletContext implements ServletContext {
     }
 
 
-    public void setClassLoader(ClassLoader loader) {
-        this.loader = loader;
-    }
-
-
     @Override
     public int getEffectiveMajorVersion() {
         return webXml.getMajorVersion();

==================================================
