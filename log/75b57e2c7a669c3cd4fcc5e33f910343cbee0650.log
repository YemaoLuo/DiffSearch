75b57e2c7a669c3cd4fcc5e33f910343cbee0650
==================================================
Creating the map entries for the special request attributes was generating ~11% of the garbage in the load test. Re-factor so these entries are not created.
==================================================
Mark Emlyn
==================================================
Tue Sep 25 18:49:20 2012 +0000
==================================================
Request.java
Creating the map entries for the special request attributes was generating ~11% of the garbage in the load test. Re-factor so these entries are not created.

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1390047 13f79535-47bb-0310-9956-ffa450edef68



==================================================
AbstractProtocol.java
index 5538bac0ce..9303f95fc9 100644
--- a/java/org/apache/catalina/connector/Request.java
+++ b/java/org/apache/catalina/connector/Request.java
@@ -3220,6 +3220,45 @@ public class Request
                         return null;
                     }
 
+                    @Override
+                    public void set(Request request, String name, Object value) {
+                        // NO-OP
+                    }
+                });
+        specialAttributes.put(Globals.COMET_SUPPORTED_ATTR,
+                new SpecialAttributeAdapter() {
+                    @Override
+                    public Object get(Request request, String name) {
+                        return Boolean.valueOf(
+                                request.getConnector().getProtocolHandler(
+                                        ).isCometSupported());
+                    }
+                    @Override
+                    public void set(Request request, String name, Object value) {
+                        // NO-OP
+                    }
+                });
+        specialAttributes.put(Globals.COMET_TIMEOUT_SUPPORTED_ATTR,
+                new SpecialAttributeAdapter() {
+                    @Override
+                    public Object get(Request request, String name) {
+                        return Boolean.valueOf(
+                                request.getConnector().getProtocolHandler(
+                                        ).isCometTimeoutSupported());
+                    }
+                    @Override
+                    public void set(Request request, String name, Object value) {
+                        // NO-OP
+                    }
+                });
+        specialAttributes.put(Globals.SENDFILE_SUPPORTED_ATTR,
+                new SpecialAttributeAdapter() {
+                    @Override
+                    public Object get(Request request, String name) {
+                        return Boolean.valueOf(
+                                request.getConnector().getProtocolHandler(
+                                        ).isSendfileSupported());
+                    }
                     @Override
                     public void set(Request request, String name, Object value) {
                         // NO-OP

==================================================
ProtocolHandler.java
index 367fa4712d..7da24f9a4a 100644
--- a/java/org/apache/coyote/AbstractProtocol.java
+++ b/java/org/apache/coyote/AbstractProtocol.java
@@ -157,6 +157,24 @@ public abstract class AbstractProtocol implements ProtocolHandler,
     }
 
 
+    @Override
+    public boolean isCometSupported() {
+        return endpoint.getUseComet();
+    }
+
+
+    @Override
+    public boolean isCometTimeoutSupported() {
+        return endpoint.getUseCometTimeout();
+    }
+
+
+    @Override
+    public boolean isSendfileSupported() {
+        return endpoint.getUseSendfile();
+    }
+
+
     // ---------------------- Properties that are passed through to the EndPoint
 
     @Override

==================================================
AbstractHttp11Processor.java
index 344d4065d4..ed1d0b8f4b 100644
--- a/java/org/apache/coyote/ProtocolHandler.java
+++ b/java/org/apache/coyote/ProtocolHandler.java
@@ -88,4 +88,22 @@ public interface ProtocolHandler {
      * Requires APR/native library
      */
     public boolean isAprRequired();
+
+
+    /**
+     * Does this ProtocolHandler support Comet?
+     */
+    public boolean isCometSupported();
+
+
+    /**
+     * Does this ProtocolHandler support Comet timeouts?
+     */
+    public boolean isCometTimeoutSupported();
+
+
+    /**
+     * Does this ProtocolHandler support sendfile?
+     */
+    public boolean isSendfileSupported();
 }

==================================================
