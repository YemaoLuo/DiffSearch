fb89b7a354b51d9c86c75561d69d7aa5e6721829
==================================================
Additional tests and fixes for https://issues.apache.org/bugzilla/show_bug.cgi?id=49297
==================================================
Mark Emlyn
==================================================
Fri Nov 12 16:52:02 2010 +0000
==================================================
Parser.java
Additional tests and fixes for https://issues.apache.org/bugzilla/show_bug.cgi?id=49297
Duplicate attribute rules for the page directive are slightly different.
Based on a patch by genspring

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1034468 13f79535-47bb-0310-9956-ffa450edef68



==================================================
UniqueAttributesImpl.java
index 28c88dca1f..c9ef2f5f40 100644
--- a/java/org/apache/jasper/compiler/Parser.java
+++ b/java/org/apache/jasper/compiler/Parser.java
@@ -150,7 +150,10 @@ class Parser implements TagConstants {
      * Attributes ::= (S Attribute)* S?
      */
     Attributes parseAttributes() throws JasperException {
-        UniqueAttributesImpl attrs = new UniqueAttributesImpl();
+        return parseAttributes(false);
+    }
+    Attributes parseAttributes(boolean pageDirective) throws JasperException {
+        UniqueAttributesImpl attrs = new UniqueAttributesImpl(pageDirective);
 
         reader.skipSpaces();
         int ws = 1;
@@ -177,7 +180,7 @@ class Parser implements TagConstants {
     public static Attributes parseAttributes(ParserController pc,
             JspReader reader) throws JasperException {
         Parser tmpParser = new Parser(pc, reader, false, false, null);
-        return tmpParser.parseAttributes();
+        return tmpParser.parseAttributes(true);
     }
 
     /**
@@ -327,7 +330,7 @@ class Parser implements TagConstants {
      * Attribute)*
      */
     private void parsePageDirective(Node parent) throws JasperException {
-        Attributes attrs = parseAttributes();
+        Attributes attrs = parseAttributes(true);
         Node.PageDirective n = new Node.PageDirective(attrs, start, parent);
 
         /*

==================================================
TestParser.java
index ce3809901d..67da6d1a5d 100644
--- a/java/org/apache/jasper/util/UniqueAttributesImpl.java
+++ b/java/org/apache/jasper/util/UniqueAttributesImpl.java
@@ -29,7 +29,19 @@ import org.xml.sax.helpers.AttributesImpl;
  */
 public class UniqueAttributesImpl extends AttributesImpl {
 
-    private Set<String> qNames = new HashSet<String>();
+    private static final String IMPORT = "import";
+    private static final String PAGE_ENCODING = "pageEncoding";
+    
+    private final boolean pageDirective;
+    private final Set<String> qNames = new HashSet<String>();
+
+    public UniqueAttributesImpl() {
+        this.pageDirective = false;
+    }
+
+    public UniqueAttributesImpl(boolean pageDirective) {
+        this.pageDirective = pageDirective;
+    }
 
     @Override
     public void clear() {
@@ -41,7 +53,7 @@ public class UniqueAttributesImpl extends AttributesImpl {
     public void setAttributes(Attributes atts) {
         for (int i = 0; i < atts.getLength(); i++) {
             if (!qNames.add(atts.getQName(i))) {
-                handleDuplicate(atts.getQName(i));
+                handleDuplicate(atts.getQName(i), atts.getValue(i));
             }
         }
         super.setAttributes(atts);
@@ -53,7 +65,7 @@ public class UniqueAttributesImpl extends AttributesImpl {
         if (qNames.add(qName)) {
             super.addAttribute(uri, localName, qName, type, value);
         } else {
-            handleDuplicate(qName);
+            handleDuplicate(qName, value);
         }
     }
 
@@ -64,7 +76,7 @@ public class UniqueAttributesImpl extends AttributesImpl {
         if (qNames.add(qName)) {
             super.setAttribute(index, uri, localName, qName, type, value);
         } else {
-            handleDuplicate(qName);
+            handleDuplicate(qName, value);
         }
     }
 
@@ -80,8 +92,29 @@ public class UniqueAttributesImpl extends AttributesImpl {
         super.setQName(index, qName);
     }
 
-    private void handleDuplicate(String qName) {
+    private void handleDuplicate(String qName, String value) {
+        if (pageDirective) {
+            if (IMPORT.equalsIgnoreCase(qName)) {
+                // Always merge imports
+                int i = super.getIndex(IMPORT);
+                String v = super.getValue(i);
+                super.setValue(i, v + "," + value);
+                return;
+            } else if (PAGE_ENCODING.equalsIgnoreCase(qName)) {
+                // Page encoding can only occur once per file so a second
+                // attribute - even one with a duplicate value - is an error
+            } else {
+                // Other attributes can be repeated if and only if the values
+                // are identical
+                String v = super.getValue(qName);
+                if (v.equals(value)) {
+                    return;
+                }
+            }
+        }
+
+        // Ordinary tag attributes can't be repeated, even with identical values
         throw new IllegalArgumentException(
-                Localizer.getMessage("jsp.error.duplicateqname", qName));
+                    Localizer.getMessage("jsp.error.duplicateqname", qName));
     }
 }

==================================================
