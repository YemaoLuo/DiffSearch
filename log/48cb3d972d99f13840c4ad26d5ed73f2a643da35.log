48cb3d972d99f13840c4ad26d5ed73f2a643da35
==================================================
Locks should be outside try/finally
==================================================
Mark Emlyn
==================================================
Wed Mar 26 15:36:31 2014 +0000
==================================================
InternalAprInputBuffer.java
Locks should be outside try/finally

git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1581889 13f79535-47bb-0310-9956-ffa450edef68



==================================================
InternalAprOutputBuffer.java
index 1732dd772e..e2ddcf92aa 100644
--- a/java/org/apache/coyote/http11/InternalAprInputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalAprInputBuffer.java
@@ -623,8 +623,8 @@ public class InternalAprInputBuffer extends AbstractInputBuffer<Long> {
 
         boolean readDone = false;
         int result = 0;
+        readLock.lock();
         try {
-            readLock.lock();
             if (wrapper.getBlockingStatus() == block) {
                 result = Socket.recvbb(socket, 0, buf.length - lastValid);
                 readDone = true;
@@ -634,8 +634,8 @@ public class InternalAprInputBuffer extends AbstractInputBuffer<Long> {
         }
 
         if (!readDone) {
+            writeLock.lock();
             try {
-                writeLock.lock();
                 wrapper.setBlockingStatus(block);
                 // Set the current settings for this socket
                 if (block) {
@@ -645,8 +645,8 @@ public class InternalAprInputBuffer extends AbstractInputBuffer<Long> {
                     Socket.timeoutSet(socket, 0);
                 }
                 // Downgrade the lock
+                readLock.lock();
                 try {
-                    readLock.lock();
                     writeLock.unlock();
                     result = Socket.recvbb(socket, 0, buf.length - lastValid);
                 } finally {

==================================================
InternalNioOutputBuffer.java
index 284fe48f3d..73a323ead5 100644
--- a/java/org/apache/coyote/http11/InternalAprOutputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalAprOutputBuffer.java
@@ -239,8 +239,8 @@ public class InternalAprOutputBuffer extends AbstractOutputBuffer<Long> {
         Lock readLock = wrapper.getBlockingStatusReadLock();
         WriteLock writeLock = wrapper.getBlockingStatusWriteLock();
 
+        readLock.lock();
         try {
-            readLock.lock();
             if (wrapper.getBlockingStatus() == block) {
                 writeToSocket();
                 return;
@@ -249,8 +249,8 @@ public class InternalAprOutputBuffer extends AbstractOutputBuffer<Long> {
             readLock.unlock();
         }
 
+        writeLock.lock();
         try {
-            writeLock.lock();
             // Set the current settings for this socket
             wrapper.setBlockingStatus(block);
             if (block) {
@@ -260,8 +260,8 @@ public class InternalAprOutputBuffer extends AbstractOutputBuffer<Long> {
             }
 
             // Downgrade the lock
+            readLock.lock();
             try {
-                readLock.lock();
                 writeLock.unlock();
                 writeToSocket();
             } finally {

==================================================
AprServletInputStream.java
index 8c7980a2a4..6a1474b413 100644
--- a/java/org/apache/coyote/http11/InternalNioOutputBuffer.java
+++ b/java/org/apache/coyote/http11/InternalNioOutputBuffer.java
@@ -141,7 +141,7 @@ public class InternalNioOutputBuffer extends AbstractOutputBuffer<NioChannel> {
             do {
                 if (socket.flush(true,selector,writeTimeout)) break;
             }while ( true );
-        }finally {
+        } finally {
             if ( selector != null ) pool.put(selector);
         }
         if ( block || bytebuffer.remaining()==0) {

==================================================
AprServletOutputStream.java
index 2a4c7c5dc9..e629e9d2e2 100644
--- a/java/org/apache/coyote/http11/upgrade/AprServletInputStream.java
+++ b/java/org/apache/coyote/http11/upgrade/AprServletInputStream.java
@@ -57,8 +57,8 @@ public class AprServletInputStream extends AbstractServletInputStream {
 
         boolean readDone = false;
         int result = 0;
+        readLock.lock();
         try {
-            readLock.lock();
             if (wrapper.getBlockingStatus() == block) {
                 result = Socket.recv(socket, b, off, len);
                 readDone = true;
@@ -68,14 +68,14 @@ public class AprServletInputStream extends AbstractServletInputStream {
         }
 
         if (!readDone) {
+            writeLock.lock();
             try {
-                writeLock.lock();
                 wrapper.setBlockingStatus(block);
                 // Set the current settings for this socket
                 Socket.optSet(socket, Socket.APR_SO_NONBLOCK, (block ? 0 : 1));
                 // Downgrade the lock
+                readLock.lock();
                 try {
-                    readLock.lock();
                     writeLock.unlock();
                     result = Socket.recv(socket, b, off, len);
                 } finally {

==================================================
