e5840b57d18ed2320a76197ad253003fe7d4f6d6
==================================================
Reorder the start sequence
==================================================
Filip Hanik
==================================================
Tue Jul 21 23:05:47 2009 +0000
==================================================
AsyncContextImpl.java
Reorder the start sequence


git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@796575 13f79535-47bb-0310-9956-ffa450edef68



==================================================
Request.java
index daf94429b5..cda1ee9092 100644
--- a/java/org/apache/catalina/connector/AsyncContextImpl.java
+++ b/java/org/apache/catalina/connector/AsyncContextImpl.java
@@ -121,10 +121,24 @@ public class AsyncContextImpl implements AsyncContext {
         return getServletResponse();
     }
 
-    public void start(Runnable run) {
-        // TODO SERVLET3 - async
-        this.dispatch = run;
-        request.coyoteRequest.action(ActionCode.ACTION_ASYNC_DISPATCH, null );
+    public void start(final Runnable run) {
+        if (state.compareAndSet(AsyncState.STARTED, AsyncState.DISPATCHING) ||
+            state.compareAndSet(AsyncState.DISPATCHED, AsyncState.DISPATCHING)) {
+            // TODO SERVLET3 - async
+            Runnable r = new Runnable() {
+                public void run() {
+                    try {
+                        run.run();
+                    }catch (Exception x) {
+                        log.error("Unable to run async task.",x);
+                    }
+                }
+            };
+            this.dispatch = r;
+            request.coyoteRequest.action(ActionCode.ACTION_ASYNC_DISPATCH, null );
+        } else {
+            throw new IllegalStateException("Dispatch not allowed. Invalid state:"+state.get());
+        }
     }
     
     public void addAsyncListener(AsyncListener listener) {

==================================================
